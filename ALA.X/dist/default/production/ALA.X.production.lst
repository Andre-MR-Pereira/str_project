

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Jan 26 11:32:52 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
     6                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2
    40                           	psect	text20,local,class=CODE,merge=1,delta=2
    41                           	psect	text21,local,class=CODE,merge=1,delta=2
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	text31,local,class=CODE,merge=1,delta=2
    52                           	psect	text32,local,class=CODE,merge=1,delta=2
    53                           	psect	text33,local,class=CODE,merge=1,delta=2
    54                           	psect	text34,local,class=CODE,merge=1,delta=2
    55                           	psect	text35,local,class=CODE,merge=1,delta=2
    56                           	psect	text36,local,class=CODE,merge=1,delta=2
    57                           	psect	text37,local,class=CODE,merge=1,delta=2
    58                           	psect	text38,local,class=CODE,merge=1,delta=2
    59                           	psect	text39,local,class=CODE,merge=1,delta=2
    60                           	psect	text40,local,class=CODE,merge=1,delta=2
    61                           	psect	text41,local,class=CODE,merge=1,delta=2
    62                           	psect	text42,local,class=CODE,merge=1,delta=2
    63                           	psect	text43,local,class=CODE,merge=1,delta=2,group=3
    64                           	psect	text44,local,class=CODE,merge=1,delta=2,group=1
    65                           	psect	text45,local,class=CODE,merge=1,delta=2,group=1
    66                           	psect	text46,local,class=CODE,merge=1,delta=2,group=1
    67                           	psect	text47,local,class=CODE,merge=1,delta=2,group=1
    68                           	psect	text48,local,class=CODE,merge=1,delta=2,group=3
    69                           	psect	text49,local,class=CODE,merge=1,delta=2,group=3
    70                           	psect	text50,local,class=CODE,merge=1,delta=2,group=3
    71                           	psect	text51,local,class=CODE,merge=1,delta=2,group=2
    72                           	psect	text52,local,class=CODE,merge=1,delta=2,group=2
    73                           	psect	text53,local,class=CODE,merge=1,delta=2,group=1
    74                           	psect	text54,local,class=CODE,merge=1,delta=2,group=3
    75                           	psect	text55,local,class=CODE,merge=1,delta=2,group=3
    76                           	psect	text56,local,class=CODE,merge=1,delta=2,group=3
    77                           	psect	text57,local,class=CODE,merge=1,delta=2,group=3
    78                           	psect	text58,local,class=CODE,merge=1,delta=2,group=3
    79                           	psect	text59,local,class=CODE,merge=1,delta=2,group=2
    80                           	psect	text60,local,class=CODE,merge=1,delta=2
    81                           	psect	text61,local,class=CODE,merge=1,delta=2
    82                           	psect	text62,local,class=CODE,merge=1,delta=2
    83                           	psect	text63,local,class=CODE,merge=1,delta=2
    84                           	psect	text64,local,class=CODE,merge=1,delta=2
    85                           	psect	text65,local,class=CODE,merge=1,delta=2
    86                           	psect	text66,local,class=CODE,merge=1,delta=2
    87                           	psect	text67,local,class=CODE,merge=1,delta=2
    88                           	psect	text68,local,class=CODE,merge=1,delta=2
    89                           	psect	text69,local,class=CODE,merge=1,delta=2
    90                           	psect	text70,local,class=CODE,merge=1,delta=2
    91                           	psect	text71,local,class=CODE,merge=1,delta=2
    92                           	psect	text72,local,class=CODE,merge=1,delta=2
    93                           	psect	text73,local,class=CODE,merge=1,delta=2
    94                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    95                           	dabs	1,0x7E,2
    96  0000                     
    97                           ; Version 2.35
    98                           ; Generated 13/04/2021 GMT
    99                           ; 
   100                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   101                           ; All rights reserved.
   102                           ; 
   103                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   104                           ; 
   105                           ; Redistribution and use in source and binary forms, with or without modification, are
   106                           ; permitted provided that the following conditions are met:
   107                           ; 
   108                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   109                           ;        conditions and the following disclaimer.
   110                           ; 
   111                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   112                           ;        of conditions and the following disclaimer in the documentation and/or other
   113                           ;        materials provided with the distribution. Publication is not required when
   114                           ;        this file is used in an embedded application.
   115                           ; 
   116                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   117                           ;        software without specific prior written permission.
   118                           ; 
   119                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   120                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   121                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   122                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   123                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   124                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   125                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   126                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   127                           ; 
   128                           ; 
   129                           ; Code-generator required, PIC16F18875 Definitions
   130                           ; 
   131                           ; SFR Addresses
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001C                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  008C                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  008E                     	;# 
   170  008F                     	;# 
   171  0090                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0093                     	;# 
   175  0094                     	;# 
   176  0095                     	;# 
   177  0096                     	;# 
   178  0097                     	;# 
   179  0098                     	;# 
   180  0099                     	;# 
   181  009A                     	;# 
   182  009B                     	;# 
   183  009C                     	;# 
   184  009D                     	;# 
   185  009E                     	;# 
   186  010C                     	;# 
   187  010D                     	;# 
   188  010E                     	;# 
   189  010E                     	;# 
   190  010F                     	;# 
   191  0110                     	;# 
   192  0110                     	;# 
   193  0111                     	;# 
   194  0112                     	;# 
   195  0112                     	;# 
   196  0113                     	;# 
   197  0114                     	;# 
   198  0114                     	;# 
   199  0115                     	;# 
   200  0116                     	;# 
   201  0116                     	;# 
   202  0117                     	;# 
   203  0119                     	;# 
   204  0119                     	;# 
   205  0119                     	;# 
   206  011A                     	;# 
   207  011A                     	;# 
   208  011A                     	;# 
   209  011B                     	;# 
   210  011B                     	;# 
   211  011B                     	;# 
   212  011B                     	;# 
   213  011B                     	;# 
   214  011C                     	;# 
   215  011C                     	;# 
   216  011C                     	;# 
   217  011D                     	;# 
   218  011D                     	;# 
   219  011D                     	;# 
   220  011E                     	;# 
   221  011E                     	;# 
   222  011E                     	;# 
   223  011F                     	;# 
   224  011F                     	;# 
   225  011F                     	;# 
   226  011F                     	;# 
   227  011F                     	;# 
   228  018C                     	;# 
   229  018D                     	;# 
   230  018E                     	;# 
   231  018F                     	;# 
   232  0190                     	;# 
   233  0191                     	;# 
   234  0192                     	;# 
   235  0196                     	;# 
   236  0197                     	;# 
   237  0198                     	;# 
   238  0199                     	;# 
   239  019A                     	;# 
   240  019B                     	;# 
   241  019C                     	;# 
   242  020C                     	;# 
   243  020C                     	;# 
   244  020D                     	;# 
   245  020E                     	;# 
   246  020F                     	;# 
   247  020F                     	;# 
   248  0210                     	;# 
   249  0210                     	;# 
   250  0211                     	;# 
   251  0211                     	;# 
   252  0212                     	;# 
   253  0212                     	;# 
   254  0213                     	;# 
   255  0214                     	;# 
   256  0215                     	;# 
   257  0215                     	;# 
   258  0216                     	;# 
   259  0216                     	;# 
   260  0217                     	;# 
   261  0217                     	;# 
   262  0218                     	;# 
   263  0218                     	;# 
   264  0219                     	;# 
   265  021A                     	;# 
   266  021B                     	;# 
   267  021B                     	;# 
   268  021C                     	;# 
   269  021C                     	;# 
   270  021D                     	;# 
   271  021D                     	;# 
   272  021E                     	;# 
   273  021F                     	;# 
   274  028C                     	;# 
   275  028C                     	;# 
   276  028D                     	;# 
   277  028D                     	;# 
   278  028E                     	;# 
   279  028F                     	;# 
   280  0290                     	;# 
   281  0290                     	;# 
   282  0291                     	;# 
   283  0292                     	;# 
   284  0292                     	;# 
   285  0293                     	;# 
   286  0293                     	;# 
   287  0294                     	;# 
   288  0295                     	;# 
   289  0296                     	;# 
   290  0296                     	;# 
   291  0297                     	;# 
   292  0298                     	;# 
   293  0298                     	;# 
   294  0299                     	;# 
   295  0299                     	;# 
   296  029A                     	;# 
   297  029B                     	;# 
   298  029C                     	;# 
   299  029C                     	;# 
   300  029D                     	;# 
   301  030C                     	;# 
   302  030C                     	;# 
   303  030D                     	;# 
   304  030E                     	;# 
   305  030F                     	;# 
   306  0310                     	;# 
   307  0310                     	;# 
   308  0311                     	;# 
   309  0312                     	;# 
   310  0313                     	;# 
   311  0314                     	;# 
   312  0314                     	;# 
   313  0315                     	;# 
   314  0316                     	;# 
   315  0317                     	;# 
   316  0318                     	;# 
   317  0318                     	;# 
   318  0319                     	;# 
   319  031A                     	;# 
   320  031B                     	;# 
   321  031C                     	;# 
   322  031C                     	;# 
   323  031D                     	;# 
   324  031E                     	;# 
   325  031F                     	;# 
   326  038C                     	;# 
   327  038C                     	;# 
   328  038D                     	;# 
   329  038E                     	;# 
   330  0390                     	;# 
   331  0390                     	;# 
   332  0391                     	;# 
   333  0392                     	;# 
   334  040C                     	;# 
   335  040D                     	;# 
   336  040E                     	;# 
   337  040F                     	;# 
   338  0410                     	;# 
   339  0411                     	;# 
   340  0416                     	;# 
   341  0416                     	;# 
   342  0417                     	;# 
   343  0418                     	;# 
   344  0418                     	;# 
   345  0419                     	;# 
   346  041A                     	;# 
   347  041A                     	;# 
   348  041B                     	;# 
   349  041C                     	;# 
   350  041C                     	;# 
   351  041D                     	;# 
   352  041E                     	;# 
   353  041F                     	;# 
   354  048C                     	;# 
   355  048C                     	;# 
   356  048D                     	;# 
   357  048E                     	;# 
   358  048F                     	;# 
   359  048F                     	;# 
   360  0490                     	;# 
   361  0491                     	;# 
   362  0492                     	;# 
   363  0492                     	;# 
   364  0493                     	;# 
   365  0494                     	;# 
   366  0495                     	;# 
   367  0495                     	;# 
   368  0496                     	;# 
   369  0497                     	;# 
   370  0498                     	;# 
   371  0499                     	;# 
   372  049A                     	;# 
   373  049B                     	;# 
   374  049C                     	;# 
   375  049D                     	;# 
   376  050C                     	;# 
   377  050C                     	;# 
   378  050D                     	;# 
   379  050E                     	;# 
   380  050F                     	;# 
   381  050F                     	;# 
   382  0510                     	;# 
   383  0511                     	;# 
   384  0512                     	;# 
   385  0512                     	;# 
   386  0513                     	;# 
   387  0514                     	;# 
   388  0515                     	;# 
   389  0515                     	;# 
   390  0516                     	;# 
   391  0517                     	;# 
   392  0518                     	;# 
   393  0519                     	;# 
   394  051A                     	;# 
   395  051B                     	;# 
   396  051C                     	;# 
   397  051D                     	;# 
   398  058C                     	;# 
   399  058C                     	;# 
   400  058D                     	;# 
   401  058E                     	;# 
   402  058F                     	;# 
   403  058F                     	;# 
   404  0590                     	;# 
   405  0591                     	;# 
   406  0592                     	;# 
   407  0593                     	;# 
   408  060C                     	;# 
   409  060D                     	;# 
   410  060E                     	;# 
   411  060F                     	;# 
   412  0610                     	;# 
   413  0611                     	;# 
   414  0612                     	;# 
   415  0613                     	;# 
   416  0614                     	;# 
   417  0616                     	;# 
   418  0617                     	;# 
   419  0618                     	;# 
   420  0619                     	;# 
   421  061A                     	;# 
   422  061B                     	;# 
   423  061C                     	;# 
   424  061D                     	;# 
   425  061E                     	;# 
   426  068C                     	;# 
   427  068D                     	;# 
   428  068E                     	;# 
   429  068F                     	;# 
   430  0690                     	;# 
   431  0691                     	;# 
   432  0692                     	;# 
   433  0693                     	;# 
   434  0694                     	;# 
   435  070C                     	;# 
   436  070D                     	;# 
   437  070E                     	;# 
   438  070F                     	;# 
   439  0710                     	;# 
   440  0711                     	;# 
   441  0712                     	;# 
   442  0713                     	;# 
   443  0714                     	;# 
   444  0716                     	;# 
   445  0717                     	;# 
   446  0718                     	;# 
   447  0719                     	;# 
   448  071A                     	;# 
   449  071B                     	;# 
   450  071C                     	;# 
   451  071D                     	;# 
   452  071E                     	;# 
   453  0796                     	;# 
   454  0797                     	;# 
   455  0798                     	;# 
   456  0799                     	;# 
   457  079A                     	;# 
   458  079B                     	;# 
   459  080C                     	;# 
   460  080D                     	;# 
   461  080E                     	;# 
   462  080F                     	;# 
   463  0810                     	;# 
   464  0811                     	;# 
   465  0812                     	;# 
   466  0813                     	;# 
   467  0814                     	;# 
   468  081A                     	;# 
   469  081B                     	;# 
   470  081C                     	;# 
   471  081D                     	;# 
   472  081E                     	;# 
   473  081F                     	;# 
   474  088C                     	;# 
   475  088D                     	;# 
   476  088E                     	;# 
   477  088F                     	;# 
   478  0890                     	;# 
   479  0891                     	;# 
   480  0892                     	;# 
   481  0893                     	;# 
   482  0895                     	;# 
   483  0896                     	;# 
   484  0897                     	;# 
   485  0898                     	;# 
   486  0899                     	;# 
   487  089A                     	;# 
   488  089B                     	;# 
   489  090C                     	;# 
   490  090E                     	;# 
   491  090F                     	;# 
   492  091F                     	;# 
   493  091F                     	;# 
   494  098F                     	;# 
   495  098F                     	;# 
   496  0990                     	;# 
   497  0991                     	;# 
   498  0992                     	;# 
   499  0993                     	;# 
   500  0994                     	;# 
   501  0995                     	;# 
   502  0996                     	;# 
   503  0997                     	;# 
   504  0E0F                     	;# 
   505  0E10                     	;# 
   506  0E11                     	;# 
   507  0E12                     	;# 
   508  0E13                     	;# 
   509  0E14                     	;# 
   510  0E15                     	;# 
   511  0E16                     	;# 
   512  0E17                     	;# 
   513  0E18                     	;# 
   514  0E19                     	;# 
   515  0E1A                     	;# 
   516  0E1B                     	;# 
   517  0E1C                     	;# 
   518  0E1D                     	;# 
   519  0E1E                     	;# 
   520  0E1F                     	;# 
   521  0E20                     	;# 
   522  0E21                     	;# 
   523  0E22                     	;# 
   524  0E23                     	;# 
   525  0E24                     	;# 
   526  0E25                     	;# 
   527  0E26                     	;# 
   528  0E27                     	;# 
   529  0E28                     	;# 
   530  0E29                     	;# 
   531  0E2A                     	;# 
   532  0E2B                     	;# 
   533  0E2C                     	;# 
   534  0E2D                     	;# 
   535  0E2E                     	;# 
   536  0E2F                     	;# 
   537  0E30                     	;# 
   538  0E31                     	;# 
   539  0E32                     	;# 
   540  0E33                     	;# 
   541  0E34                     	;# 
   542  0E35                     	;# 
   543  0E36                     	;# 
   544  0E37                     	;# 
   545  0E8F                     	;# 
   546  0E90                     	;# 
   547  0E91                     	;# 
   548  0E92                     	;# 
   549  0E93                     	;# 
   550  0E94                     	;# 
   551  0E95                     	;# 
   552  0E96                     	;# 
   553  0E97                     	;# 
   554  0E9C                     	;# 
   555  0E9D                     	;# 
   556  0E9E                     	;# 
   557  0EA1                     	;# 
   558  0EA2                     	;# 
   559  0EA3                     	;# 
   560  0EA4                     	;# 
   561  0EA5                     	;# 
   562  0EA9                     	;# 
   563  0EAA                     	;# 
   564  0EAB                     	;# 
   565  0EAC                     	;# 
   566  0EB1                     	;# 
   567  0EB2                     	;# 
   568  0EB3                     	;# 
   569  0EB8                     	;# 
   570  0EB9                     	;# 
   571  0EBA                     	;# 
   572  0EBB                     	;# 
   573  0EBC                     	;# 
   574  0EBD                     	;# 
   575  0EBE                     	;# 
   576  0EC3                     	;# 
   577  0EC5                     	;# 
   578  0EC6                     	;# 
   579  0EC7                     	;# 
   580  0EC8                     	;# 
   581  0EC9                     	;# 
   582  0ECA                     	;# 
   583  0ECB                     	;# 
   584  0ECC                     	;# 
   585  0F10                     	;# 
   586  0F11                     	;# 
   587  0F12                     	;# 
   588  0F13                     	;# 
   589  0F14                     	;# 
   590  0F15                     	;# 
   591  0F16                     	;# 
   592  0F17                     	;# 
   593  0F18                     	;# 
   594  0F19                     	;# 
   595  0F1A                     	;# 
   596  0F1B                     	;# 
   597  0F1C                     	;# 
   598  0F1D                     	;# 
   599  0F1E                     	;# 
   600  0F1F                     	;# 
   601  0F20                     	;# 
   602  0F21                     	;# 
   603  0F22                     	;# 
   604  0F23                     	;# 
   605  0F24                     	;# 
   606  0F25                     	;# 
   607  0F26                     	;# 
   608  0F27                     	;# 
   609  0F28                     	;# 
   610  0F29                     	;# 
   611  0F2A                     	;# 
   612  0F2B                     	;# 
   613  0F2C                     	;# 
   614  0F2D                     	;# 
   615  0F2E                     	;# 
   616  0F2F                     	;# 
   617  0F30                     	;# 
   618  0F31                     	;# 
   619  0F32                     	;# 
   620  0F38                     	;# 
   621  0F39                     	;# 
   622  0F3A                     	;# 
   623  0F3B                     	;# 
   624  0F3C                     	;# 
   625  0F3D                     	;# 
   626  0F3E                     	;# 
   627  0F3F                     	;# 
   628  0F40                     	;# 
   629  0F41                     	;# 
   630  0F43                     	;# 
   631  0F44                     	;# 
   632  0F45                     	;# 
   633  0F46                     	;# 
   634  0F47                     	;# 
   635  0F48                     	;# 
   636  0F49                     	;# 
   637  0F4A                     	;# 
   638  0F4B                     	;# 
   639  0F4C                     	;# 
   640  0F4E                     	;# 
   641  0F4F                     	;# 
   642  0F50                     	;# 
   643  0F51                     	;# 
   644  0F52                     	;# 
   645  0F53                     	;# 
   646  0F54                     	;# 
   647  0F55                     	;# 
   648  0F56                     	;# 
   649  0F57                     	;# 
   650  0F59                     	;# 
   651  0F5A                     	;# 
   652  0F5B                     	;# 
   653  0F5C                     	;# 
   654  0F5D                     	;# 
   655  0F61                     	;# 
   656  0F62                     	;# 
   657  0F64                     	;# 
   658  0F65                     	;# 
   659  0F66                     	;# 
   660  0F67                     	;# 
   661  0F68                     	;# 
   662  0F69                     	;# 
   663  0F6A                     	;# 
   664  0F6B                     	;# 
   665  0F6C                     	;# 
   666  0F6D                     	;# 
   667  0FE4                     	;# 
   668  0FE5                     	;# 
   669  0FE6                     	;# 
   670  0FE7                     	;# 
   671  0FE8                     	;# 
   672  0FE9                     	;# 
   673  0FEA                     	;# 
   674  0FEB                     	;# 
   675  0FED                     	;# 
   676  0FEE                     	;# 
   677  0FEF                     	;# 
   678  0000                     	;# 
   679  0001                     	;# 
   680  0002                     	;# 
   681  0003                     	;# 
   682  0004                     	;# 
   683  0005                     	;# 
   684  0006                     	;# 
   685  0007                     	;# 
   686  0008                     	;# 
   687  0009                     	;# 
   688  000A                     	;# 
   689  000B                     	;# 
   690  000C                     	;# 
   691  000D                     	;# 
   692  000E                     	;# 
   693  000F                     	;# 
   694  0010                     	;# 
   695  0011                     	;# 
   696  0012                     	;# 
   697  0013                     	;# 
   698  0014                     	;# 
   699  0015                     	;# 
   700  0016                     	;# 
   701  0017                     	;# 
   702  0018                     	;# 
   703  0019                     	;# 
   704  001A                     	;# 
   705  001C                     	;# 
   706  001C                     	;# 
   707  001D                     	;# 
   708  001D                     	;# 
   709  001E                     	;# 
   710  001F                     	;# 
   711  008C                     	;# 
   712  008C                     	;# 
   713  008D                     	;# 
   714  008E                     	;# 
   715  008E                     	;# 
   716  008F                     	;# 
   717  0090                     	;# 
   718  0090                     	;# 
   719  0091                     	;# 
   720  0093                     	;# 
   721  0094                     	;# 
   722  0095                     	;# 
   723  0096                     	;# 
   724  0097                     	;# 
   725  0098                     	;# 
   726  0099                     	;# 
   727  009A                     	;# 
   728  009B                     	;# 
   729  009C                     	;# 
   730  009D                     	;# 
   731  009E                     	;# 
   732  010C                     	;# 
   733  010D                     	;# 
   734  010E                     	;# 
   735  010E                     	;# 
   736  010F                     	;# 
   737  0110                     	;# 
   738  0110                     	;# 
   739  0111                     	;# 
   740  0112                     	;# 
   741  0112                     	;# 
   742  0113                     	;# 
   743  0114                     	;# 
   744  0114                     	;# 
   745  0115                     	;# 
   746  0116                     	;# 
   747  0116                     	;# 
   748  0117                     	;# 
   749  0119                     	;# 
   750  0119                     	;# 
   751  0119                     	;# 
   752  011A                     	;# 
   753  011A                     	;# 
   754  011A                     	;# 
   755  011B                     	;# 
   756  011B                     	;# 
   757  011B                     	;# 
   758  011B                     	;# 
   759  011B                     	;# 
   760  011C                     	;# 
   761  011C                     	;# 
   762  011C                     	;# 
   763  011D                     	;# 
   764  011D                     	;# 
   765  011D                     	;# 
   766  011E                     	;# 
   767  011E                     	;# 
   768  011E                     	;# 
   769  011F                     	;# 
   770  011F                     	;# 
   771  011F                     	;# 
   772  011F                     	;# 
   773  011F                     	;# 
   774  018C                     	;# 
   775  018D                     	;# 
   776  018E                     	;# 
   777  018F                     	;# 
   778  0190                     	;# 
   779  0191                     	;# 
   780  0192                     	;# 
   781  0196                     	;# 
   782  0197                     	;# 
   783  0198                     	;# 
   784  0199                     	;# 
   785  019A                     	;# 
   786  019B                     	;# 
   787  019C                     	;# 
   788  020C                     	;# 
   789  020C                     	;# 
   790  020D                     	;# 
   791  020E                     	;# 
   792  020F                     	;# 
   793  020F                     	;# 
   794  0210                     	;# 
   795  0210                     	;# 
   796  0211                     	;# 
   797  0211                     	;# 
   798  0212                     	;# 
   799  0212                     	;# 
   800  0213                     	;# 
   801  0214                     	;# 
   802  0215                     	;# 
   803  0215                     	;# 
   804  0216                     	;# 
   805  0216                     	;# 
   806  0217                     	;# 
   807  0217                     	;# 
   808  0218                     	;# 
   809  0218                     	;# 
   810  0219                     	;# 
   811  021A                     	;# 
   812  021B                     	;# 
   813  021B                     	;# 
   814  021C                     	;# 
   815  021C                     	;# 
   816  021D                     	;# 
   817  021D                     	;# 
   818  021E                     	;# 
   819  021F                     	;# 
   820  028C                     	;# 
   821  028C                     	;# 
   822  028D                     	;# 
   823  028D                     	;# 
   824  028E                     	;# 
   825  028F                     	;# 
   826  0290                     	;# 
   827  0290                     	;# 
   828  0291                     	;# 
   829  0292                     	;# 
   830  0292                     	;# 
   831  0293                     	;# 
   832  0293                     	;# 
   833  0294                     	;# 
   834  0295                     	;# 
   835  0296                     	;# 
   836  0296                     	;# 
   837  0297                     	;# 
   838  0298                     	;# 
   839  0298                     	;# 
   840  0299                     	;# 
   841  0299                     	;# 
   842  029A                     	;# 
   843  029B                     	;# 
   844  029C                     	;# 
   845  029C                     	;# 
   846  029D                     	;# 
   847  030C                     	;# 
   848  030C                     	;# 
   849  030D                     	;# 
   850  030E                     	;# 
   851  030F                     	;# 
   852  0310                     	;# 
   853  0310                     	;# 
   854  0311                     	;# 
   855  0312                     	;# 
   856  0313                     	;# 
   857  0314                     	;# 
   858  0314                     	;# 
   859  0315                     	;# 
   860  0316                     	;# 
   861  0317                     	;# 
   862  0318                     	;# 
   863  0318                     	;# 
   864  0319                     	;# 
   865  031A                     	;# 
   866  031B                     	;# 
   867  031C                     	;# 
   868  031C                     	;# 
   869  031D                     	;# 
   870  031E                     	;# 
   871  031F                     	;# 
   872  038C                     	;# 
   873  038C                     	;# 
   874  038D                     	;# 
   875  038E                     	;# 
   876  0390                     	;# 
   877  0390                     	;# 
   878  0391                     	;# 
   879  0392                     	;# 
   880  040C                     	;# 
   881  040D                     	;# 
   882  040E                     	;# 
   883  040F                     	;# 
   884  0410                     	;# 
   885  0411                     	;# 
   886  0416                     	;# 
   887  0416                     	;# 
   888  0417                     	;# 
   889  0418                     	;# 
   890  0418                     	;# 
   891  0419                     	;# 
   892  041A                     	;# 
   893  041A                     	;# 
   894  041B                     	;# 
   895  041C                     	;# 
   896  041C                     	;# 
   897  041D                     	;# 
   898  041E                     	;# 
   899  041F                     	;# 
   900  048C                     	;# 
   901  048C                     	;# 
   902  048D                     	;# 
   903  048E                     	;# 
   904  048F                     	;# 
   905  048F                     	;# 
   906  0490                     	;# 
   907  0491                     	;# 
   908  0492                     	;# 
   909  0492                     	;# 
   910  0493                     	;# 
   911  0494                     	;# 
   912  0495                     	;# 
   913  0495                     	;# 
   914  0496                     	;# 
   915  0497                     	;# 
   916  0498                     	;# 
   917  0499                     	;# 
   918  049A                     	;# 
   919  049B                     	;# 
   920  049C                     	;# 
   921  049D                     	;# 
   922  050C                     	;# 
   923  050C                     	;# 
   924  050D                     	;# 
   925  050E                     	;# 
   926  050F                     	;# 
   927  050F                     	;# 
   928  0510                     	;# 
   929  0511                     	;# 
   930  0512                     	;# 
   931  0512                     	;# 
   932  0513                     	;# 
   933  0514                     	;# 
   934  0515                     	;# 
   935  0515                     	;# 
   936  0516                     	;# 
   937  0517                     	;# 
   938  0518                     	;# 
   939  0519                     	;# 
   940  051A                     	;# 
   941  051B                     	;# 
   942  051C                     	;# 
   943  051D                     	;# 
   944  058C                     	;# 
   945  058C                     	;# 
   946  058D                     	;# 
   947  058E                     	;# 
   948  058F                     	;# 
   949  058F                     	;# 
   950  0590                     	;# 
   951  0591                     	;# 
   952  0592                     	;# 
   953  0593                     	;# 
   954  060C                     	;# 
   955  060D                     	;# 
   956  060E                     	;# 
   957  060F                     	;# 
   958  0610                     	;# 
   959  0611                     	;# 
   960  0612                     	;# 
   961  0613                     	;# 
   962  0614                     	;# 
   963  0616                     	;# 
   964  0617                     	;# 
   965  0618                     	;# 
   966  0619                     	;# 
   967  061A                     	;# 
   968  061B                     	;# 
   969  061C                     	;# 
   970  061D                     	;# 
   971  061E                     	;# 
   972  068C                     	;# 
   973  068D                     	;# 
   974  068E                     	;# 
   975  068F                     	;# 
   976  0690                     	;# 
   977  0691                     	;# 
   978  0692                     	;# 
   979  0693                     	;# 
   980  0694                     	;# 
   981  070C                     	;# 
   982  070D                     	;# 
   983  070E                     	;# 
   984  070F                     	;# 
   985  0710                     	;# 
   986  0711                     	;# 
   987  0712                     	;# 
   988  0713                     	;# 
   989  0714                     	;# 
   990  0716                     	;# 
   991  0717                     	;# 
   992  0718                     	;# 
   993  0719                     	;# 
   994  071A                     	;# 
   995  071B                     	;# 
   996  071C                     	;# 
   997  071D                     	;# 
   998  071E                     	;# 
   999  0796                     	;# 
  1000  0797                     	;# 
  1001  0798                     	;# 
  1002  0799                     	;# 
  1003  079A                     	;# 
  1004  079B                     	;# 
  1005  080C                     	;# 
  1006  080D                     	;# 
  1007  080E                     	;# 
  1008  080F                     	;# 
  1009  0810                     	;# 
  1010  0811                     	;# 
  1011  0812                     	;# 
  1012  0813                     	;# 
  1013  0814                     	;# 
  1014  081A                     	;# 
  1015  081B                     	;# 
  1016  081C                     	;# 
  1017  081D                     	;# 
  1018  081E                     	;# 
  1019  081F                     	;# 
  1020  088C                     	;# 
  1021  088D                     	;# 
  1022  088E                     	;# 
  1023  088F                     	;# 
  1024  0890                     	;# 
  1025  0891                     	;# 
  1026  0892                     	;# 
  1027  0893                     	;# 
  1028  0895                     	;# 
  1029  0896                     	;# 
  1030  0897                     	;# 
  1031  0898                     	;# 
  1032  0899                     	;# 
  1033  089A                     	;# 
  1034  089B                     	;# 
  1035  090C                     	;# 
  1036  090E                     	;# 
  1037  090F                     	;# 
  1038  091F                     	;# 
  1039  091F                     	;# 
  1040  098F                     	;# 
  1041  098F                     	;# 
  1042  0990                     	;# 
  1043  0991                     	;# 
  1044  0992                     	;# 
  1045  0993                     	;# 
  1046  0994                     	;# 
  1047  0995                     	;# 
  1048  0996                     	;# 
  1049  0997                     	;# 
  1050  0E0F                     	;# 
  1051  0E10                     	;# 
  1052  0E11                     	;# 
  1053  0E12                     	;# 
  1054  0E13                     	;# 
  1055  0E14                     	;# 
  1056  0E15                     	;# 
  1057  0E16                     	;# 
  1058  0E17                     	;# 
  1059  0E18                     	;# 
  1060  0E19                     	;# 
  1061  0E1A                     	;# 
  1062  0E1B                     	;# 
  1063  0E1C                     	;# 
  1064  0E1D                     	;# 
  1065  0E1E                     	;# 
  1066  0E1F                     	;# 
  1067  0E20                     	;# 
  1068  0E21                     	;# 
  1069  0E22                     	;# 
  1070  0E23                     	;# 
  1071  0E24                     	;# 
  1072  0E25                     	;# 
  1073  0E26                     	;# 
  1074  0E27                     	;# 
  1075  0E28                     	;# 
  1076  0E29                     	;# 
  1077  0E2A                     	;# 
  1078  0E2B                     	;# 
  1079  0E2C                     	;# 
  1080  0E2D                     	;# 
  1081  0E2E                     	;# 
  1082  0E2F                     	;# 
  1083  0E30                     	;# 
  1084  0E31                     	;# 
  1085  0E32                     	;# 
  1086  0E33                     	;# 
  1087  0E34                     	;# 
  1088  0E35                     	;# 
  1089  0E36                     	;# 
  1090  0E37                     	;# 
  1091  0E8F                     	;# 
  1092  0E90                     	;# 
  1093  0E91                     	;# 
  1094  0E92                     	;# 
  1095  0E93                     	;# 
  1096  0E94                     	;# 
  1097  0E95                     	;# 
  1098  0E96                     	;# 
  1099  0E97                     	;# 
  1100  0E9C                     	;# 
  1101  0E9D                     	;# 
  1102  0E9E                     	;# 
  1103  0EA1                     	;# 
  1104  0EA2                     	;# 
  1105  0EA3                     	;# 
  1106  0EA4                     	;# 
  1107  0EA5                     	;# 
  1108  0EA9                     	;# 
  1109  0EAA                     	;# 
  1110  0EAB                     	;# 
  1111  0EAC                     	;# 
  1112  0EB1                     	;# 
  1113  0EB2                     	;# 
  1114  0EB3                     	;# 
  1115  0EB8                     	;# 
  1116  0EB9                     	;# 
  1117  0EBA                     	;# 
  1118  0EBB                     	;# 
  1119  0EBC                     	;# 
  1120  0EBD                     	;# 
  1121  0EBE                     	;# 
  1122  0EC3                     	;# 
  1123  0EC5                     	;# 
  1124  0EC6                     	;# 
  1125  0EC7                     	;# 
  1126  0EC8                     	;# 
  1127  0EC9                     	;# 
  1128  0ECA                     	;# 
  1129  0ECB                     	;# 
  1130  0ECC                     	;# 
  1131  0F10                     	;# 
  1132  0F11                     	;# 
  1133  0F12                     	;# 
  1134  0F13                     	;# 
  1135  0F14                     	;# 
  1136  0F15                     	;# 
  1137  0F16                     	;# 
  1138  0F17                     	;# 
  1139  0F18                     	;# 
  1140  0F19                     	;# 
  1141  0F1A                     	;# 
  1142  0F1B                     	;# 
  1143  0F1C                     	;# 
  1144  0F1D                     	;# 
  1145  0F1E                     	;# 
  1146  0F1F                     	;# 
  1147  0F20                     	;# 
  1148  0F21                     	;# 
  1149  0F22                     	;# 
  1150  0F23                     	;# 
  1151  0F24                     	;# 
  1152  0F25                     	;# 
  1153  0F26                     	;# 
  1154  0F27                     	;# 
  1155  0F28                     	;# 
  1156  0F29                     	;# 
  1157  0F2A                     	;# 
  1158  0F2B                     	;# 
  1159  0F2C                     	;# 
  1160  0F2D                     	;# 
  1161  0F2E                     	;# 
  1162  0F2F                     	;# 
  1163  0F30                     	;# 
  1164  0F31                     	;# 
  1165  0F32                     	;# 
  1166  0F38                     	;# 
  1167  0F39                     	;# 
  1168  0F3A                     	;# 
  1169  0F3B                     	;# 
  1170  0F3C                     	;# 
  1171  0F3D                     	;# 
  1172  0F3E                     	;# 
  1173  0F3F                     	;# 
  1174  0F40                     	;# 
  1175  0F41                     	;# 
  1176  0F43                     	;# 
  1177  0F44                     	;# 
  1178  0F45                     	;# 
  1179  0F46                     	;# 
  1180  0F47                     	;# 
  1181  0F48                     	;# 
  1182  0F49                     	;# 
  1183  0F4A                     	;# 
  1184  0F4B                     	;# 
  1185  0F4C                     	;# 
  1186  0F4E                     	;# 
  1187  0F4F                     	;# 
  1188  0F50                     	;# 
  1189  0F51                     	;# 
  1190  0F52                     	;# 
  1191  0F53                     	;# 
  1192  0F54                     	;# 
  1193  0F55                     	;# 
  1194  0F56                     	;# 
  1195  0F57                     	;# 
  1196  0F59                     	;# 
  1197  0F5A                     	;# 
  1198  0F5B                     	;# 
  1199  0F5C                     	;# 
  1200  0F5D                     	;# 
  1201  0F61                     	;# 
  1202  0F62                     	;# 
  1203  0F64                     	;# 
  1204  0F65                     	;# 
  1205  0F66                     	;# 
  1206  0F67                     	;# 
  1207  0F68                     	;# 
  1208  0F69                     	;# 
  1209  0F6A                     	;# 
  1210  0F6B                     	;# 
  1211  0F6C                     	;# 
  1212  0F6D                     	;# 
  1213  0FE4                     	;# 
  1214  0FE5                     	;# 
  1215  0FE6                     	;# 
  1216  0FE7                     	;# 
  1217  0FE8                     	;# 
  1218  0FE9                     	;# 
  1219  0FEA                     	;# 
  1220  0FEB                     	;# 
  1221  0FED                     	;# 
  1222  0FEE                     	;# 
  1223  0FEF                     	;# 
  1224  0000                     	;# 
  1225  0001                     	;# 
  1226  0002                     	;# 
  1227  0003                     	;# 
  1228  0004                     	;# 
  1229  0005                     	;# 
  1230  0006                     	;# 
  1231  0007                     	;# 
  1232  0008                     	;# 
  1233  0009                     	;# 
  1234  000A                     	;# 
  1235  000B                     	;# 
  1236  000C                     	;# 
  1237  000D                     	;# 
  1238  000E                     	;# 
  1239  000F                     	;# 
  1240  0010                     	;# 
  1241  0011                     	;# 
  1242  0012                     	;# 
  1243  0013                     	;# 
  1244  0014                     	;# 
  1245  0015                     	;# 
  1246  0016                     	;# 
  1247  0017                     	;# 
  1248  0018                     	;# 
  1249  0019                     	;# 
  1250  001A                     	;# 
  1251  001C                     	;# 
  1252  001C                     	;# 
  1253  001D                     	;# 
  1254  001D                     	;# 
  1255  001E                     	;# 
  1256  001F                     	;# 
  1257  008C                     	;# 
  1258  008C                     	;# 
  1259  008D                     	;# 
  1260  008E                     	;# 
  1261  008E                     	;# 
  1262  008F                     	;# 
  1263  0090                     	;# 
  1264  0090                     	;# 
  1265  0091                     	;# 
  1266  0093                     	;# 
  1267  0094                     	;# 
  1268  0095                     	;# 
  1269  0096                     	;# 
  1270  0097                     	;# 
  1271  0098                     	;# 
  1272  0099                     	;# 
  1273  009A                     	;# 
  1274  009B                     	;# 
  1275  009C                     	;# 
  1276  009D                     	;# 
  1277  009E                     	;# 
  1278  010C                     	;# 
  1279  010D                     	;# 
  1280  010E                     	;# 
  1281  010E                     	;# 
  1282  010F                     	;# 
  1283  0110                     	;# 
  1284  0110                     	;# 
  1285  0111                     	;# 
  1286  0112                     	;# 
  1287  0112                     	;# 
  1288  0113                     	;# 
  1289  0114                     	;# 
  1290  0114                     	;# 
  1291  0115                     	;# 
  1292  0116                     	;# 
  1293  0116                     	;# 
  1294  0117                     	;# 
  1295  0119                     	;# 
  1296  0119                     	;# 
  1297  0119                     	;# 
  1298  011A                     	;# 
  1299  011A                     	;# 
  1300  011A                     	;# 
  1301  011B                     	;# 
  1302  011B                     	;# 
  1303  011B                     	;# 
  1304  011B                     	;# 
  1305  011B                     	;# 
  1306  011C                     	;# 
  1307  011C                     	;# 
  1308  011C                     	;# 
  1309  011D                     	;# 
  1310  011D                     	;# 
  1311  011D                     	;# 
  1312  011E                     	;# 
  1313  011E                     	;# 
  1314  011E                     	;# 
  1315  011F                     	;# 
  1316  011F                     	;# 
  1317  011F                     	;# 
  1318  011F                     	;# 
  1319  011F                     	;# 
  1320  018C                     	;# 
  1321  018D                     	;# 
  1322  018E                     	;# 
  1323  018F                     	;# 
  1324  0190                     	;# 
  1325  0191                     	;# 
  1326  0192                     	;# 
  1327  0196                     	;# 
  1328  0197                     	;# 
  1329  0198                     	;# 
  1330  0199                     	;# 
  1331  019A                     	;# 
  1332  019B                     	;# 
  1333  019C                     	;# 
  1334  020C                     	;# 
  1335  020C                     	;# 
  1336  020D                     	;# 
  1337  020E                     	;# 
  1338  020F                     	;# 
  1339  020F                     	;# 
  1340  0210                     	;# 
  1341  0210                     	;# 
  1342  0211                     	;# 
  1343  0211                     	;# 
  1344  0212                     	;# 
  1345  0212                     	;# 
  1346  0213                     	;# 
  1347  0214                     	;# 
  1348  0215                     	;# 
  1349  0215                     	;# 
  1350  0216                     	;# 
  1351  0216                     	;# 
  1352  0217                     	;# 
  1353  0217                     	;# 
  1354  0218                     	;# 
  1355  0218                     	;# 
  1356  0219                     	;# 
  1357  021A                     	;# 
  1358  021B                     	;# 
  1359  021B                     	;# 
  1360  021C                     	;# 
  1361  021C                     	;# 
  1362  021D                     	;# 
  1363  021D                     	;# 
  1364  021E                     	;# 
  1365  021F                     	;# 
  1366  028C                     	;# 
  1367  028C                     	;# 
  1368  028D                     	;# 
  1369  028D                     	;# 
  1370  028E                     	;# 
  1371  028F                     	;# 
  1372  0290                     	;# 
  1373  0290                     	;# 
  1374  0291                     	;# 
  1375  0292                     	;# 
  1376  0292                     	;# 
  1377  0293                     	;# 
  1378  0293                     	;# 
  1379  0294                     	;# 
  1380  0295                     	;# 
  1381  0296                     	;# 
  1382  0296                     	;# 
  1383  0297                     	;# 
  1384  0298                     	;# 
  1385  0298                     	;# 
  1386  0299                     	;# 
  1387  0299                     	;# 
  1388  029A                     	;# 
  1389  029B                     	;# 
  1390  029C                     	;# 
  1391  029C                     	;# 
  1392  029D                     	;# 
  1393  030C                     	;# 
  1394  030C                     	;# 
  1395  030D                     	;# 
  1396  030E                     	;# 
  1397  030F                     	;# 
  1398  0310                     	;# 
  1399  0310                     	;# 
  1400  0311                     	;# 
  1401  0312                     	;# 
  1402  0313                     	;# 
  1403  0314                     	;# 
  1404  0314                     	;# 
  1405  0315                     	;# 
  1406  0316                     	;# 
  1407  0317                     	;# 
  1408  0318                     	;# 
  1409  0318                     	;# 
  1410  0319                     	;# 
  1411  031A                     	;# 
  1412  031B                     	;# 
  1413  031C                     	;# 
  1414  031C                     	;# 
  1415  031D                     	;# 
  1416  031E                     	;# 
  1417  031F                     	;# 
  1418  038C                     	;# 
  1419  038C                     	;# 
  1420  038D                     	;# 
  1421  038E                     	;# 
  1422  0390                     	;# 
  1423  0390                     	;# 
  1424  0391                     	;# 
  1425  0392                     	;# 
  1426  040C                     	;# 
  1427  040D                     	;# 
  1428  040E                     	;# 
  1429  040F                     	;# 
  1430  0410                     	;# 
  1431  0411                     	;# 
  1432  0416                     	;# 
  1433  0416                     	;# 
  1434  0417                     	;# 
  1435  0418                     	;# 
  1436  0418                     	;# 
  1437  0419                     	;# 
  1438  041A                     	;# 
  1439  041A                     	;# 
  1440  041B                     	;# 
  1441  041C                     	;# 
  1442  041C                     	;# 
  1443  041D                     	;# 
  1444  041E                     	;# 
  1445  041F                     	;# 
  1446  048C                     	;# 
  1447  048C                     	;# 
  1448  048D                     	;# 
  1449  048E                     	;# 
  1450  048F                     	;# 
  1451  048F                     	;# 
  1452  0490                     	;# 
  1453  0491                     	;# 
  1454  0492                     	;# 
  1455  0492                     	;# 
  1456  0493                     	;# 
  1457  0494                     	;# 
  1458  0495                     	;# 
  1459  0495                     	;# 
  1460  0496                     	;# 
  1461  0497                     	;# 
  1462  0498                     	;# 
  1463  0499                     	;# 
  1464  049A                     	;# 
  1465  049B                     	;# 
  1466  049C                     	;# 
  1467  049D                     	;# 
  1468  050C                     	;# 
  1469  050C                     	;# 
  1470  050D                     	;# 
  1471  050E                     	;# 
  1472  050F                     	;# 
  1473  050F                     	;# 
  1474  0510                     	;# 
  1475  0511                     	;# 
  1476  0512                     	;# 
  1477  0512                     	;# 
  1478  0513                     	;# 
  1479  0514                     	;# 
  1480  0515                     	;# 
  1481  0515                     	;# 
  1482  0516                     	;# 
  1483  0517                     	;# 
  1484  0518                     	;# 
  1485  0519                     	;# 
  1486  051A                     	;# 
  1487  051B                     	;# 
  1488  051C                     	;# 
  1489  051D                     	;# 
  1490  058C                     	;# 
  1491  058C                     	;# 
  1492  058D                     	;# 
  1493  058E                     	;# 
  1494  058F                     	;# 
  1495  058F                     	;# 
  1496  0590                     	;# 
  1497  0591                     	;# 
  1498  0592                     	;# 
  1499  0593                     	;# 
  1500  060C                     	;# 
  1501  060D                     	;# 
  1502  060E                     	;# 
  1503  060F                     	;# 
  1504  0610                     	;# 
  1505  0611                     	;# 
  1506  0612                     	;# 
  1507  0613                     	;# 
  1508  0614                     	;# 
  1509  0616                     	;# 
  1510  0617                     	;# 
  1511  0618                     	;# 
  1512  0619                     	;# 
  1513  061A                     	;# 
  1514  061B                     	;# 
  1515  061C                     	;# 
  1516  061D                     	;# 
  1517  061E                     	;# 
  1518  068C                     	;# 
  1519  068D                     	;# 
  1520  068E                     	;# 
  1521  068F                     	;# 
  1522  0690                     	;# 
  1523  0691                     	;# 
  1524  0692                     	;# 
  1525  0693                     	;# 
  1526  0694                     	;# 
  1527  070C                     	;# 
  1528  070D                     	;# 
  1529  070E                     	;# 
  1530  070F                     	;# 
  1531  0710                     	;# 
  1532  0711                     	;# 
  1533  0712                     	;# 
  1534  0713                     	;# 
  1535  0714                     	;# 
  1536  0716                     	;# 
  1537  0717                     	;# 
  1538  0718                     	;# 
  1539  0719                     	;# 
  1540  071A                     	;# 
  1541  071B                     	;# 
  1542  071C                     	;# 
  1543  071D                     	;# 
  1544  071E                     	;# 
  1545  0796                     	;# 
  1546  0797                     	;# 
  1547  0798                     	;# 
  1548  0799                     	;# 
  1549  079A                     	;# 
  1550  079B                     	;# 
  1551  080C                     	;# 
  1552  080D                     	;# 
  1553  080E                     	;# 
  1554  080F                     	;# 
  1555  0810                     	;# 
  1556  0811                     	;# 
  1557  0812                     	;# 
  1558  0813                     	;# 
  1559  0814                     	;# 
  1560  081A                     	;# 
  1561  081B                     	;# 
  1562  081C                     	;# 
  1563  081D                     	;# 
  1564  081E                     	;# 
  1565  081F                     	;# 
  1566  088C                     	;# 
  1567  088D                     	;# 
  1568  088E                     	;# 
  1569  088F                     	;# 
  1570  0890                     	;# 
  1571  0891                     	;# 
  1572  0892                     	;# 
  1573  0893                     	;# 
  1574  0895                     	;# 
  1575  0896                     	;# 
  1576  0897                     	;# 
  1577  0898                     	;# 
  1578  0899                     	;# 
  1579  089A                     	;# 
  1580  089B                     	;# 
  1581  090C                     	;# 
  1582  090E                     	;# 
  1583  090F                     	;# 
  1584  091F                     	;# 
  1585  091F                     	;# 
  1586  098F                     	;# 
  1587  098F                     	;# 
  1588  0990                     	;# 
  1589  0991                     	;# 
  1590  0992                     	;# 
  1591  0993                     	;# 
  1592  0994                     	;# 
  1593  0995                     	;# 
  1594  0996                     	;# 
  1595  0997                     	;# 
  1596  0E0F                     	;# 
  1597  0E10                     	;# 
  1598  0E11                     	;# 
  1599  0E12                     	;# 
  1600  0E13                     	;# 
  1601  0E14                     	;# 
  1602  0E15                     	;# 
  1603  0E16                     	;# 
  1604  0E17                     	;# 
  1605  0E18                     	;# 
  1606  0E19                     	;# 
  1607  0E1A                     	;# 
  1608  0E1B                     	;# 
  1609  0E1C                     	;# 
  1610  0E1D                     	;# 
  1611  0E1E                     	;# 
  1612  0E1F                     	;# 
  1613  0E20                     	;# 
  1614  0E21                     	;# 
  1615  0E22                     	;# 
  1616  0E23                     	;# 
  1617  0E24                     	;# 
  1618  0E25                     	;# 
  1619  0E26                     	;# 
  1620  0E27                     	;# 
  1621  0E28                     	;# 
  1622  0E29                     	;# 
  1623  0E2A                     	;# 
  1624  0E2B                     	;# 
  1625  0E2C                     	;# 
  1626  0E2D                     	;# 
  1627  0E2E                     	;# 
  1628  0E2F                     	;# 
  1629  0E30                     	;# 
  1630  0E31                     	;# 
  1631  0E32                     	;# 
  1632  0E33                     	;# 
  1633  0E34                     	;# 
  1634  0E35                     	;# 
  1635  0E36                     	;# 
  1636  0E37                     	;# 
  1637  0E8F                     	;# 
  1638  0E90                     	;# 
  1639  0E91                     	;# 
  1640  0E92                     	;# 
  1641  0E93                     	;# 
  1642  0E94                     	;# 
  1643  0E95                     	;# 
  1644  0E96                     	;# 
  1645  0E97                     	;# 
  1646  0E9C                     	;# 
  1647  0E9D                     	;# 
  1648  0E9E                     	;# 
  1649  0EA1                     	;# 
  1650  0EA2                     	;# 
  1651  0EA3                     	;# 
  1652  0EA4                     	;# 
  1653  0EA5                     	;# 
  1654  0EA9                     	;# 
  1655  0EAA                     	;# 
  1656  0EAB                     	;# 
  1657  0EAC                     	;# 
  1658  0EB1                     	;# 
  1659  0EB2                     	;# 
  1660  0EB3                     	;# 
  1661  0EB8                     	;# 
  1662  0EB9                     	;# 
  1663  0EBA                     	;# 
  1664  0EBB                     	;# 
  1665  0EBC                     	;# 
  1666  0EBD                     	;# 
  1667  0EBE                     	;# 
  1668  0EC3                     	;# 
  1669  0EC5                     	;# 
  1670  0EC6                     	;# 
  1671  0EC7                     	;# 
  1672  0EC8                     	;# 
  1673  0EC9                     	;# 
  1674  0ECA                     	;# 
  1675  0ECB                     	;# 
  1676  0ECC                     	;# 
  1677  0F10                     	;# 
  1678  0F11                     	;# 
  1679  0F12                     	;# 
  1680  0F13                     	;# 
  1681  0F14                     	;# 
  1682  0F15                     	;# 
  1683  0F16                     	;# 
  1684  0F17                     	;# 
  1685  0F18                     	;# 
  1686  0F19                     	;# 
  1687  0F1A                     	;# 
  1688  0F1B                     	;# 
  1689  0F1C                     	;# 
  1690  0F1D                     	;# 
  1691  0F1E                     	;# 
  1692  0F1F                     	;# 
  1693  0F20                     	;# 
  1694  0F21                     	;# 
  1695  0F22                     	;# 
  1696  0F23                     	;# 
  1697  0F24                     	;# 
  1698  0F25                     	;# 
  1699  0F26                     	;# 
  1700  0F27                     	;# 
  1701  0F28                     	;# 
  1702  0F29                     	;# 
  1703  0F2A                     	;# 
  1704  0F2B                     	;# 
  1705  0F2C                     	;# 
  1706  0F2D                     	;# 
  1707  0F2E                     	;# 
  1708  0F2F                     	;# 
  1709  0F30                     	;# 
  1710  0F31                     	;# 
  1711  0F32                     	;# 
  1712  0F38                     	;# 
  1713  0F39                     	;# 
  1714  0F3A                     	;# 
  1715  0F3B                     	;# 
  1716  0F3C                     	;# 
  1717  0F3D                     	;# 
  1718  0F3E                     	;# 
  1719  0F3F                     	;# 
  1720  0F40                     	;# 
  1721  0F41                     	;# 
  1722  0F43                     	;# 
  1723  0F44                     	;# 
  1724  0F45                     	;# 
  1725  0F46                     	;# 
  1726  0F47                     	;# 
  1727  0F48                     	;# 
  1728  0F49                     	;# 
  1729  0F4A                     	;# 
  1730  0F4B                     	;# 
  1731  0F4C                     	;# 
  1732  0F4E                     	;# 
  1733  0F4F                     	;# 
  1734  0F50                     	;# 
  1735  0F51                     	;# 
  1736  0F52                     	;# 
  1737  0F53                     	;# 
  1738  0F54                     	;# 
  1739  0F55                     	;# 
  1740  0F56                     	;# 
  1741  0F57                     	;# 
  1742  0F59                     	;# 
  1743  0F5A                     	;# 
  1744  0F5B                     	;# 
  1745  0F5C                     	;# 
  1746  0F5D                     	;# 
  1747  0F61                     	;# 
  1748  0F62                     	;# 
  1749  0F64                     	;# 
  1750  0F65                     	;# 
  1751  0F66                     	;# 
  1752  0F67                     	;# 
  1753  0F68                     	;# 
  1754  0F69                     	;# 
  1755  0F6A                     	;# 
  1756  0F6B                     	;# 
  1757  0F6C                     	;# 
  1758  0F6D                     	;# 
  1759  0FE4                     	;# 
  1760  0FE5                     	;# 
  1761  0FE6                     	;# 
  1762  0FE7                     	;# 
  1763  0FE8                     	;# 
  1764  0FE9                     	;# 
  1765  0FEA                     	;# 
  1766  0FEB                     	;# 
  1767  0FED                     	;# 
  1768  0FEE                     	;# 
  1769  0FEF                     	;# 
  1770  0000                     	;# 
  1771  0001                     	;# 
  1772  0002                     	;# 
  1773  0003                     	;# 
  1774  0004                     	;# 
  1775  0005                     	;# 
  1776  0006                     	;# 
  1777  0007                     	;# 
  1778  0008                     	;# 
  1779  0009                     	;# 
  1780  000A                     	;# 
  1781  000B                     	;# 
  1782  000C                     	;# 
  1783  000D                     	;# 
  1784  000E                     	;# 
  1785  000F                     	;# 
  1786  0010                     	;# 
  1787  0011                     	;# 
  1788  0012                     	;# 
  1789  0013                     	;# 
  1790  0014                     	;# 
  1791  0015                     	;# 
  1792  0016                     	;# 
  1793  0017                     	;# 
  1794  0018                     	;# 
  1795  0019                     	;# 
  1796  001A                     	;# 
  1797  001C                     	;# 
  1798  001C                     	;# 
  1799  001D                     	;# 
  1800  001D                     	;# 
  1801  001E                     	;# 
  1802  001F                     	;# 
  1803  008C                     	;# 
  1804  008C                     	;# 
  1805  008D                     	;# 
  1806  008E                     	;# 
  1807  008E                     	;# 
  1808  008F                     	;# 
  1809  0090                     	;# 
  1810  0090                     	;# 
  1811  0091                     	;# 
  1812  0093                     	;# 
  1813  0094                     	;# 
  1814  0095                     	;# 
  1815  0096                     	;# 
  1816  0097                     	;# 
  1817  0098                     	;# 
  1818  0099                     	;# 
  1819  009A                     	;# 
  1820  009B                     	;# 
  1821  009C                     	;# 
  1822  009D                     	;# 
  1823  009E                     	;# 
  1824  010C                     	;# 
  1825  010D                     	;# 
  1826  010E                     	;# 
  1827  010E                     	;# 
  1828  010F                     	;# 
  1829  0110                     	;# 
  1830  0110                     	;# 
  1831  0111                     	;# 
  1832  0112                     	;# 
  1833  0112                     	;# 
  1834  0113                     	;# 
  1835  0114                     	;# 
  1836  0114                     	;# 
  1837  0115                     	;# 
  1838  0116                     	;# 
  1839  0116                     	;# 
  1840  0117                     	;# 
  1841  0119                     	;# 
  1842  0119                     	;# 
  1843  0119                     	;# 
  1844  011A                     	;# 
  1845  011A                     	;# 
  1846  011A                     	;# 
  1847  011B                     	;# 
  1848  011B                     	;# 
  1849  011B                     	;# 
  1850  011B                     	;# 
  1851  011B                     	;# 
  1852  011C                     	;# 
  1853  011C                     	;# 
  1854  011C                     	;# 
  1855  011D                     	;# 
  1856  011D                     	;# 
  1857  011D                     	;# 
  1858  011E                     	;# 
  1859  011E                     	;# 
  1860  011E                     	;# 
  1861  011F                     	;# 
  1862  011F                     	;# 
  1863  011F                     	;# 
  1864  011F                     	;# 
  1865  011F                     	;# 
  1866  018C                     	;# 
  1867  018D                     	;# 
  1868  018E                     	;# 
  1869  018F                     	;# 
  1870  0190                     	;# 
  1871  0191                     	;# 
  1872  0192                     	;# 
  1873  0196                     	;# 
  1874  0197                     	;# 
  1875  0198                     	;# 
  1876  0199                     	;# 
  1877  019A                     	;# 
  1878  019B                     	;# 
  1879  019C                     	;# 
  1880  020C                     	;# 
  1881  020C                     	;# 
  1882  020D                     	;# 
  1883  020E                     	;# 
  1884  020F                     	;# 
  1885  020F                     	;# 
  1886  0210                     	;# 
  1887  0210                     	;# 
  1888  0211                     	;# 
  1889  0211                     	;# 
  1890  0212                     	;# 
  1891  0212                     	;# 
  1892  0213                     	;# 
  1893  0214                     	;# 
  1894  0215                     	;# 
  1895  0215                     	;# 
  1896  0216                     	;# 
  1897  0216                     	;# 
  1898  0217                     	;# 
  1899  0217                     	;# 
  1900  0218                     	;# 
  1901  0218                     	;# 
  1902  0219                     	;# 
  1903  021A                     	;# 
  1904  021B                     	;# 
  1905  021B                     	;# 
  1906  021C                     	;# 
  1907  021C                     	;# 
  1908  021D                     	;# 
  1909  021D                     	;# 
  1910  021E                     	;# 
  1911  021F                     	;# 
  1912  028C                     	;# 
  1913  028C                     	;# 
  1914  028D                     	;# 
  1915  028D                     	;# 
  1916  028E                     	;# 
  1917  028F                     	;# 
  1918  0290                     	;# 
  1919  0290                     	;# 
  1920  0291                     	;# 
  1921  0292                     	;# 
  1922  0292                     	;# 
  1923  0293                     	;# 
  1924  0293                     	;# 
  1925  0294                     	;# 
  1926  0295                     	;# 
  1927  0296                     	;# 
  1928  0296                     	;# 
  1929  0297                     	;# 
  1930  0298                     	;# 
  1931  0298                     	;# 
  1932  0299                     	;# 
  1933  0299                     	;# 
  1934  029A                     	;# 
  1935  029B                     	;# 
  1936  029C                     	;# 
  1937  029C                     	;# 
  1938  029D                     	;# 
  1939  030C                     	;# 
  1940  030C                     	;# 
  1941  030D                     	;# 
  1942  030E                     	;# 
  1943  030F                     	;# 
  1944  0310                     	;# 
  1945  0310                     	;# 
  1946  0311                     	;# 
  1947  0312                     	;# 
  1948  0313                     	;# 
  1949  0314                     	;# 
  1950  0314                     	;# 
  1951  0315                     	;# 
  1952  0316                     	;# 
  1953  0317                     	;# 
  1954  0318                     	;# 
  1955  0318                     	;# 
  1956  0319                     	;# 
  1957  031A                     	;# 
  1958  031B                     	;# 
  1959  031C                     	;# 
  1960  031C                     	;# 
  1961  031D                     	;# 
  1962  031E                     	;# 
  1963  031F                     	;# 
  1964  038C                     	;# 
  1965  038C                     	;# 
  1966  038D                     	;# 
  1967  038E                     	;# 
  1968  0390                     	;# 
  1969  0390                     	;# 
  1970  0391                     	;# 
  1971  0392                     	;# 
  1972  040C                     	;# 
  1973  040D                     	;# 
  1974  040E                     	;# 
  1975  040F                     	;# 
  1976  0410                     	;# 
  1977  0411                     	;# 
  1978  0416                     	;# 
  1979  0416                     	;# 
  1980  0417                     	;# 
  1981  0418                     	;# 
  1982  0418                     	;# 
  1983  0419                     	;# 
  1984  041A                     	;# 
  1985  041A                     	;# 
  1986  041B                     	;# 
  1987  041C                     	;# 
  1988  041C                     	;# 
  1989  041D                     	;# 
  1990  041E                     	;# 
  1991  041F                     	;# 
  1992  048C                     	;# 
  1993  048C                     	;# 
  1994  048D                     	;# 
  1995  048E                     	;# 
  1996  048F                     	;# 
  1997  048F                     	;# 
  1998  0490                     	;# 
  1999  0491                     	;# 
  2000  0492                     	;# 
  2001  0492                     	;# 
  2002  0493                     	;# 
  2003  0494                     	;# 
  2004  0495                     	;# 
  2005  0495                     	;# 
  2006  0496                     	;# 
  2007  0497                     	;# 
  2008  0498                     	;# 
  2009  0499                     	;# 
  2010  049A                     	;# 
  2011  049B                     	;# 
  2012  049C                     	;# 
  2013  049D                     	;# 
  2014  050C                     	;# 
  2015  050C                     	;# 
  2016  050D                     	;# 
  2017  050E                     	;# 
  2018  050F                     	;# 
  2019  050F                     	;# 
  2020  0510                     	;# 
  2021  0511                     	;# 
  2022  0512                     	;# 
  2023  0512                     	;# 
  2024  0513                     	;# 
  2025  0514                     	;# 
  2026  0515                     	;# 
  2027  0515                     	;# 
  2028  0516                     	;# 
  2029  0517                     	;# 
  2030  0518                     	;# 
  2031  0519                     	;# 
  2032  051A                     	;# 
  2033  051B                     	;# 
  2034  051C                     	;# 
  2035  051D                     	;# 
  2036  058C                     	;# 
  2037  058C                     	;# 
  2038  058D                     	;# 
  2039  058E                     	;# 
  2040  058F                     	;# 
  2041  058F                     	;# 
  2042  0590                     	;# 
  2043  0591                     	;# 
  2044  0592                     	;# 
  2045  0593                     	;# 
  2046  060C                     	;# 
  2047  060D                     	;# 
  2048  060E                     	;# 
  2049  060F                     	;# 
  2050  0610                     	;# 
  2051  0611                     	;# 
  2052  0612                     	;# 
  2053  0613                     	;# 
  2054  0614                     	;# 
  2055  0616                     	;# 
  2056  0617                     	;# 
  2057  0618                     	;# 
  2058  0619                     	;# 
  2059  061A                     	;# 
  2060  061B                     	;# 
  2061  061C                     	;# 
  2062  061D                     	;# 
  2063  061E                     	;# 
  2064  068C                     	;# 
  2065  068D                     	;# 
  2066  068E                     	;# 
  2067  068F                     	;# 
  2068  0690                     	;# 
  2069  0691                     	;# 
  2070  0692                     	;# 
  2071  0693                     	;# 
  2072  0694                     	;# 
  2073  070C                     	;# 
  2074  070D                     	;# 
  2075  070E                     	;# 
  2076  070F                     	;# 
  2077  0710                     	;# 
  2078  0711                     	;# 
  2079  0712                     	;# 
  2080  0713                     	;# 
  2081  0714                     	;# 
  2082  0716                     	;# 
  2083  0717                     	;# 
  2084  0718                     	;# 
  2085  0719                     	;# 
  2086  071A                     	;# 
  2087  071B                     	;# 
  2088  071C                     	;# 
  2089  071D                     	;# 
  2090  071E                     	;# 
  2091  0796                     	;# 
  2092  0797                     	;# 
  2093  0798                     	;# 
  2094  0799                     	;# 
  2095  079A                     	;# 
  2096  079B                     	;# 
  2097  080C                     	;# 
  2098  080D                     	;# 
  2099  080E                     	;# 
  2100  080F                     	;# 
  2101  0810                     	;# 
  2102  0811                     	;# 
  2103  0812                     	;# 
  2104  0813                     	;# 
  2105  0814                     	;# 
  2106  081A                     	;# 
  2107  081B                     	;# 
  2108  081C                     	;# 
  2109  081D                     	;# 
  2110  081E                     	;# 
  2111  081F                     	;# 
  2112  088C                     	;# 
  2113  088D                     	;# 
  2114  088E                     	;# 
  2115  088F                     	;# 
  2116  0890                     	;# 
  2117  0891                     	;# 
  2118  0892                     	;# 
  2119  0893                     	;# 
  2120  0895                     	;# 
  2121  0896                     	;# 
  2122  0897                     	;# 
  2123  0898                     	;# 
  2124  0899                     	;# 
  2125  089A                     	;# 
  2126  089B                     	;# 
  2127  090C                     	;# 
  2128  090E                     	;# 
  2129  090F                     	;# 
  2130  091F                     	;# 
  2131  091F                     	;# 
  2132  098F                     	;# 
  2133  098F                     	;# 
  2134  0990                     	;# 
  2135  0991                     	;# 
  2136  0992                     	;# 
  2137  0993                     	;# 
  2138  0994                     	;# 
  2139  0995                     	;# 
  2140  0996                     	;# 
  2141  0997                     	;# 
  2142  0E0F                     	;# 
  2143  0E10                     	;# 
  2144  0E11                     	;# 
  2145  0E12                     	;# 
  2146  0E13                     	;# 
  2147  0E14                     	;# 
  2148  0E15                     	;# 
  2149  0E16                     	;# 
  2150  0E17                     	;# 
  2151  0E18                     	;# 
  2152  0E19                     	;# 
  2153  0E1A                     	;# 
  2154  0E1B                     	;# 
  2155  0E1C                     	;# 
  2156  0E1D                     	;# 
  2157  0E1E                     	;# 
  2158  0E1F                     	;# 
  2159  0E20                     	;# 
  2160  0E21                     	;# 
  2161  0E22                     	;# 
  2162  0E23                     	;# 
  2163  0E24                     	;# 
  2164  0E25                     	;# 
  2165  0E26                     	;# 
  2166  0E27                     	;# 
  2167  0E28                     	;# 
  2168  0E29                     	;# 
  2169  0E2A                     	;# 
  2170  0E2B                     	;# 
  2171  0E2C                     	;# 
  2172  0E2D                     	;# 
  2173  0E2E                     	;# 
  2174  0E2F                     	;# 
  2175  0E30                     	;# 
  2176  0E31                     	;# 
  2177  0E32                     	;# 
  2178  0E33                     	;# 
  2179  0E34                     	;# 
  2180  0E35                     	;# 
  2181  0E36                     	;# 
  2182  0E37                     	;# 
  2183  0E8F                     	;# 
  2184  0E90                     	;# 
  2185  0E91                     	;# 
  2186  0E92                     	;# 
  2187  0E93                     	;# 
  2188  0E94                     	;# 
  2189  0E95                     	;# 
  2190  0E96                     	;# 
  2191  0E97                     	;# 
  2192  0E9C                     	;# 
  2193  0E9D                     	;# 
  2194  0E9E                     	;# 
  2195  0EA1                     	;# 
  2196  0EA2                     	;# 
  2197  0EA3                     	;# 
  2198  0EA4                     	;# 
  2199  0EA5                     	;# 
  2200  0EA9                     	;# 
  2201  0EAA                     	;# 
  2202  0EAB                     	;# 
  2203  0EAC                     	;# 
  2204  0EB1                     	;# 
  2205  0EB2                     	;# 
  2206  0EB3                     	;# 
  2207  0EB8                     	;# 
  2208  0EB9                     	;# 
  2209  0EBA                     	;# 
  2210  0EBB                     	;# 
  2211  0EBC                     	;# 
  2212  0EBD                     	;# 
  2213  0EBE                     	;# 
  2214  0EC3                     	;# 
  2215  0EC5                     	;# 
  2216  0EC6                     	;# 
  2217  0EC7                     	;# 
  2218  0EC8                     	;# 
  2219  0EC9                     	;# 
  2220  0ECA                     	;# 
  2221  0ECB                     	;# 
  2222  0ECC                     	;# 
  2223  0F10                     	;# 
  2224  0F11                     	;# 
  2225  0F12                     	;# 
  2226  0F13                     	;# 
  2227  0F14                     	;# 
  2228  0F15                     	;# 
  2229  0F16                     	;# 
  2230  0F17                     	;# 
  2231  0F18                     	;# 
  2232  0F19                     	;# 
  2233  0F1A                     	;# 
  2234  0F1B                     	;# 
  2235  0F1C                     	;# 
  2236  0F1D                     	;# 
  2237  0F1E                     	;# 
  2238  0F1F                     	;# 
  2239  0F20                     	;# 
  2240  0F21                     	;# 
  2241  0F22                     	;# 
  2242  0F23                     	;# 
  2243  0F24                     	;# 
  2244  0F25                     	;# 
  2245  0F26                     	;# 
  2246  0F27                     	;# 
  2247  0F28                     	;# 
  2248  0F29                     	;# 
  2249  0F2A                     	;# 
  2250  0F2B                     	;# 
  2251  0F2C                     	;# 
  2252  0F2D                     	;# 
  2253  0F2E                     	;# 
  2254  0F2F                     	;# 
  2255  0F30                     	;# 
  2256  0F31                     	;# 
  2257  0F32                     	;# 
  2258  0F38                     	;# 
  2259  0F39                     	;# 
  2260  0F3A                     	;# 
  2261  0F3B                     	;# 
  2262  0F3C                     	;# 
  2263  0F3D                     	;# 
  2264  0F3E                     	;# 
  2265  0F3F                     	;# 
  2266  0F40                     	;# 
  2267  0F41                     	;# 
  2268  0F43                     	;# 
  2269  0F44                     	;# 
  2270  0F45                     	;# 
  2271  0F46                     	;# 
  2272  0F47                     	;# 
  2273  0F48                     	;# 
  2274  0F49                     	;# 
  2275  0F4A                     	;# 
  2276  0F4B                     	;# 
  2277  0F4C                     	;# 
  2278  0F4E                     	;# 
  2279  0F4F                     	;# 
  2280  0F50                     	;# 
  2281  0F51                     	;# 
  2282  0F52                     	;# 
  2283  0F53                     	;# 
  2284  0F54                     	;# 
  2285  0F55                     	;# 
  2286  0F56                     	;# 
  2287  0F57                     	;# 
  2288  0F59                     	;# 
  2289  0F5A                     	;# 
  2290  0F5B                     	;# 
  2291  0F5C                     	;# 
  2292  0F5D                     	;# 
  2293  0F61                     	;# 
  2294  0F62                     	;# 
  2295  0F64                     	;# 
  2296  0F65                     	;# 
  2297  0F66                     	;# 
  2298  0F67                     	;# 
  2299  0F68                     	;# 
  2300  0F69                     	;# 
  2301  0F6A                     	;# 
  2302  0F6B                     	;# 
  2303  0F6C                     	;# 
  2304  0F6D                     	;# 
  2305  0FE4                     	;# 
  2306  0FE5                     	;# 
  2307  0FE6                     	;# 
  2308  0FE7                     	;# 
  2309  0FE8                     	;# 
  2310  0FE9                     	;# 
  2311  0FEA                     	;# 
  2312  0FEB                     	;# 
  2313  0FED                     	;# 
  2314  0FEE                     	;# 
  2315  0FEF                     	;# 
  2316  0000                     	;# 
  2317  0001                     	;# 
  2318  0002                     	;# 
  2319  0003                     	;# 
  2320  0004                     	;# 
  2321  0005                     	;# 
  2322  0006                     	;# 
  2323  0007                     	;# 
  2324  0008                     	;# 
  2325  0009                     	;# 
  2326  000A                     	;# 
  2327  000B                     	;# 
  2328  000C                     	;# 
  2329  000D                     	;# 
  2330  000E                     	;# 
  2331  000F                     	;# 
  2332  0010                     	;# 
  2333  0011                     	;# 
  2334  0012                     	;# 
  2335  0013                     	;# 
  2336  0014                     	;# 
  2337  0015                     	;# 
  2338  0016                     	;# 
  2339  0017                     	;# 
  2340  0018                     	;# 
  2341  0019                     	;# 
  2342  001A                     	;# 
  2343  001C                     	;# 
  2344  001C                     	;# 
  2345  001D                     	;# 
  2346  001D                     	;# 
  2347  001E                     	;# 
  2348  001F                     	;# 
  2349  008C                     	;# 
  2350  008C                     	;# 
  2351  008D                     	;# 
  2352  008E                     	;# 
  2353  008E                     	;# 
  2354  008F                     	;# 
  2355  0090                     	;# 
  2356  0090                     	;# 
  2357  0091                     	;# 
  2358  0093                     	;# 
  2359  0094                     	;# 
  2360  0095                     	;# 
  2361  0096                     	;# 
  2362  0097                     	;# 
  2363  0098                     	;# 
  2364  0099                     	;# 
  2365  009A                     	;# 
  2366  009B                     	;# 
  2367  009C                     	;# 
  2368  009D                     	;# 
  2369  009E                     	;# 
  2370  010C                     	;# 
  2371  010D                     	;# 
  2372  010E                     	;# 
  2373  010E                     	;# 
  2374  010F                     	;# 
  2375  0110                     	;# 
  2376  0110                     	;# 
  2377  0111                     	;# 
  2378  0112                     	;# 
  2379  0112                     	;# 
  2380  0113                     	;# 
  2381  0114                     	;# 
  2382  0114                     	;# 
  2383  0115                     	;# 
  2384  0116                     	;# 
  2385  0116                     	;# 
  2386  0117                     	;# 
  2387  0119                     	;# 
  2388  0119                     	;# 
  2389  0119                     	;# 
  2390  011A                     	;# 
  2391  011A                     	;# 
  2392  011A                     	;# 
  2393  011B                     	;# 
  2394  011B                     	;# 
  2395  011B                     	;# 
  2396  011B                     	;# 
  2397  011B                     	;# 
  2398  011C                     	;# 
  2399  011C                     	;# 
  2400  011C                     	;# 
  2401  011D                     	;# 
  2402  011D                     	;# 
  2403  011D                     	;# 
  2404  011E                     	;# 
  2405  011E                     	;# 
  2406  011E                     	;# 
  2407  011F                     	;# 
  2408  011F                     	;# 
  2409  011F                     	;# 
  2410  011F                     	;# 
  2411  011F                     	;# 
  2412  018C                     	;# 
  2413  018D                     	;# 
  2414  018E                     	;# 
  2415  018F                     	;# 
  2416  0190                     	;# 
  2417  0191                     	;# 
  2418  0192                     	;# 
  2419  0196                     	;# 
  2420  0197                     	;# 
  2421  0198                     	;# 
  2422  0199                     	;# 
  2423  019A                     	;# 
  2424  019B                     	;# 
  2425  019C                     	;# 
  2426  020C                     	;# 
  2427  020C                     	;# 
  2428  020D                     	;# 
  2429  020E                     	;# 
  2430  020F                     	;# 
  2431  020F                     	;# 
  2432  0210                     	;# 
  2433  0210                     	;# 
  2434  0211                     	;# 
  2435  0211                     	;# 
  2436  0212                     	;# 
  2437  0212                     	;# 
  2438  0213                     	;# 
  2439  0214                     	;# 
  2440  0215                     	;# 
  2441  0215                     	;# 
  2442  0216                     	;# 
  2443  0216                     	;# 
  2444  0217                     	;# 
  2445  0217                     	;# 
  2446  0218                     	;# 
  2447  0218                     	;# 
  2448  0219                     	;# 
  2449  021A                     	;# 
  2450  021B                     	;# 
  2451  021B                     	;# 
  2452  021C                     	;# 
  2453  021C                     	;# 
  2454  021D                     	;# 
  2455  021D                     	;# 
  2456  021E                     	;# 
  2457  021F                     	;# 
  2458  028C                     	;# 
  2459  028C                     	;# 
  2460  028D                     	;# 
  2461  028D                     	;# 
  2462  028E                     	;# 
  2463  028F                     	;# 
  2464  0290                     	;# 
  2465  0290                     	;# 
  2466  0291                     	;# 
  2467  0292                     	;# 
  2468  0292                     	;# 
  2469  0293                     	;# 
  2470  0293                     	;# 
  2471  0294                     	;# 
  2472  0295                     	;# 
  2473  0296                     	;# 
  2474  0296                     	;# 
  2475  0297                     	;# 
  2476  0298                     	;# 
  2477  0298                     	;# 
  2478  0299                     	;# 
  2479  0299                     	;# 
  2480  029A                     	;# 
  2481  029B                     	;# 
  2482  029C                     	;# 
  2483  029C                     	;# 
  2484  029D                     	;# 
  2485  030C                     	;# 
  2486  030C                     	;# 
  2487  030D                     	;# 
  2488  030E                     	;# 
  2489  030F                     	;# 
  2490  0310                     	;# 
  2491  0310                     	;# 
  2492  0311                     	;# 
  2493  0312                     	;# 
  2494  0313                     	;# 
  2495  0314                     	;# 
  2496  0314                     	;# 
  2497  0315                     	;# 
  2498  0316                     	;# 
  2499  0317                     	;# 
  2500  0318                     	;# 
  2501  0318                     	;# 
  2502  0319                     	;# 
  2503  031A                     	;# 
  2504  031B                     	;# 
  2505  031C                     	;# 
  2506  031C                     	;# 
  2507  031D                     	;# 
  2508  031E                     	;# 
  2509  031F                     	;# 
  2510  038C                     	;# 
  2511  038C                     	;# 
  2512  038D                     	;# 
  2513  038E                     	;# 
  2514  0390                     	;# 
  2515  0390                     	;# 
  2516  0391                     	;# 
  2517  0392                     	;# 
  2518  040C                     	;# 
  2519  040D                     	;# 
  2520  040E                     	;# 
  2521  040F                     	;# 
  2522  0410                     	;# 
  2523  0411                     	;# 
  2524  0416                     	;# 
  2525  0416                     	;# 
  2526  0417                     	;# 
  2527  0418                     	;# 
  2528  0418                     	;# 
  2529  0419                     	;# 
  2530  041A                     	;# 
  2531  041A                     	;# 
  2532  041B                     	;# 
  2533  041C                     	;# 
  2534  041C                     	;# 
  2535  041D                     	;# 
  2536  041E                     	;# 
  2537  041F                     	;# 
  2538  048C                     	;# 
  2539  048C                     	;# 
  2540  048D                     	;# 
  2541  048E                     	;# 
  2542  048F                     	;# 
  2543  048F                     	;# 
  2544  0490                     	;# 
  2545  0491                     	;# 
  2546  0492                     	;# 
  2547  0492                     	;# 
  2548  0493                     	;# 
  2549  0494                     	;# 
  2550  0495                     	;# 
  2551  0495                     	;# 
  2552  0496                     	;# 
  2553  0497                     	;# 
  2554  0498                     	;# 
  2555  0499                     	;# 
  2556  049A                     	;# 
  2557  049B                     	;# 
  2558  049C                     	;# 
  2559  049D                     	;# 
  2560  050C                     	;# 
  2561  050C                     	;# 
  2562  050D                     	;# 
  2563  050E                     	;# 
  2564  050F                     	;# 
  2565  050F                     	;# 
  2566  0510                     	;# 
  2567  0511                     	;# 
  2568  0512                     	;# 
  2569  0512                     	;# 
  2570  0513                     	;# 
  2571  0514                     	;# 
  2572  0515                     	;# 
  2573  0515                     	;# 
  2574  0516                     	;# 
  2575  0517                     	;# 
  2576  0518                     	;# 
  2577  0519                     	;# 
  2578  051A                     	;# 
  2579  051B                     	;# 
  2580  051C                     	;# 
  2581  051D                     	;# 
  2582  058C                     	;# 
  2583  058C                     	;# 
  2584  058D                     	;# 
  2585  058E                     	;# 
  2586  058F                     	;# 
  2587  058F                     	;# 
  2588  0590                     	;# 
  2589  0591                     	;# 
  2590  0592                     	;# 
  2591  0593                     	;# 
  2592  060C                     	;# 
  2593  060D                     	;# 
  2594  060E                     	;# 
  2595  060F                     	;# 
  2596  0610                     	;# 
  2597  0611                     	;# 
  2598  0612                     	;# 
  2599  0613                     	;# 
  2600  0614                     	;# 
  2601  0616                     	;# 
  2602  0617                     	;# 
  2603  0618                     	;# 
  2604  0619                     	;# 
  2605  061A                     	;# 
  2606  061B                     	;# 
  2607  061C                     	;# 
  2608  061D                     	;# 
  2609  061E                     	;# 
  2610  068C                     	;# 
  2611  068D                     	;# 
  2612  068E                     	;# 
  2613  068F                     	;# 
  2614  0690                     	;# 
  2615  0691                     	;# 
  2616  0692                     	;# 
  2617  0693                     	;# 
  2618  0694                     	;# 
  2619  070C                     	;# 
  2620  070D                     	;# 
  2621  070E                     	;# 
  2622  070F                     	;# 
  2623  0710                     	;# 
  2624  0711                     	;# 
  2625  0712                     	;# 
  2626  0713                     	;# 
  2627  0714                     	;# 
  2628  0716                     	;# 
  2629  0717                     	;# 
  2630  0718                     	;# 
  2631  0719                     	;# 
  2632  071A                     	;# 
  2633  071B                     	;# 
  2634  071C                     	;# 
  2635  071D                     	;# 
  2636  071E                     	;# 
  2637  0796                     	;# 
  2638  0797                     	;# 
  2639  0798                     	;# 
  2640  0799                     	;# 
  2641  079A                     	;# 
  2642  079B                     	;# 
  2643  080C                     	;# 
  2644  080D                     	;# 
  2645  080E                     	;# 
  2646  080F                     	;# 
  2647  0810                     	;# 
  2648  0811                     	;# 
  2649  0812                     	;# 
  2650  0813                     	;# 
  2651  0814                     	;# 
  2652  081A                     	;# 
  2653  081B                     	;# 
  2654  081C                     	;# 
  2655  081D                     	;# 
  2656  081E                     	;# 
  2657  081F                     	;# 
  2658  088C                     	;# 
  2659  088D                     	;# 
  2660  088E                     	;# 
  2661  088F                     	;# 
  2662  0890                     	;# 
  2663  0891                     	;# 
  2664  0892                     	;# 
  2665  0893                     	;# 
  2666  0895                     	;# 
  2667  0896                     	;# 
  2668  0897                     	;# 
  2669  0898                     	;# 
  2670  0899                     	;# 
  2671  089A                     	;# 
  2672  089B                     	;# 
  2673  090C                     	;# 
  2674  090E                     	;# 
  2675  090F                     	;# 
  2676  091F                     	;# 
  2677  091F                     	;# 
  2678  098F                     	;# 
  2679  098F                     	;# 
  2680  0990                     	;# 
  2681  0991                     	;# 
  2682  0992                     	;# 
  2683  0993                     	;# 
  2684  0994                     	;# 
  2685  0995                     	;# 
  2686  0996                     	;# 
  2687  0997                     	;# 
  2688  0E0F                     	;# 
  2689  0E10                     	;# 
  2690  0E11                     	;# 
  2691  0E12                     	;# 
  2692  0E13                     	;# 
  2693  0E14                     	;# 
  2694  0E15                     	;# 
  2695  0E16                     	;# 
  2696  0E17                     	;# 
  2697  0E18                     	;# 
  2698  0E19                     	;# 
  2699  0E1A                     	;# 
  2700  0E1B                     	;# 
  2701  0E1C                     	;# 
  2702  0E1D                     	;# 
  2703  0E1E                     	;# 
  2704  0E1F                     	;# 
  2705  0E20                     	;# 
  2706  0E21                     	;# 
  2707  0E22                     	;# 
  2708  0E23                     	;# 
  2709  0E24                     	;# 
  2710  0E25                     	;# 
  2711  0E26                     	;# 
  2712  0E27                     	;# 
  2713  0E28                     	;# 
  2714  0E29                     	;# 
  2715  0E2A                     	;# 
  2716  0E2B                     	;# 
  2717  0E2C                     	;# 
  2718  0E2D                     	;# 
  2719  0E2E                     	;# 
  2720  0E2F                     	;# 
  2721  0E30                     	;# 
  2722  0E31                     	;# 
  2723  0E32                     	;# 
  2724  0E33                     	;# 
  2725  0E34                     	;# 
  2726  0E35                     	;# 
  2727  0E36                     	;# 
  2728  0E37                     	;# 
  2729  0E8F                     	;# 
  2730  0E90                     	;# 
  2731  0E91                     	;# 
  2732  0E92                     	;# 
  2733  0E93                     	;# 
  2734  0E94                     	;# 
  2735  0E95                     	;# 
  2736  0E96                     	;# 
  2737  0E97                     	;# 
  2738  0E9C                     	;# 
  2739  0E9D                     	;# 
  2740  0E9E                     	;# 
  2741  0EA1                     	;# 
  2742  0EA2                     	;# 
  2743  0EA3                     	;# 
  2744  0EA4                     	;# 
  2745  0EA5                     	;# 
  2746  0EA9                     	;# 
  2747  0EAA                     	;# 
  2748  0EAB                     	;# 
  2749  0EAC                     	;# 
  2750  0EB1                     	;# 
  2751  0EB2                     	;# 
  2752  0EB3                     	;# 
  2753  0EB8                     	;# 
  2754  0EB9                     	;# 
  2755  0EBA                     	;# 
  2756  0EBB                     	;# 
  2757  0EBC                     	;# 
  2758  0EBD                     	;# 
  2759  0EBE                     	;# 
  2760  0EC3                     	;# 
  2761  0EC5                     	;# 
  2762  0EC6                     	;# 
  2763  0EC7                     	;# 
  2764  0EC8                     	;# 
  2765  0EC9                     	;# 
  2766  0ECA                     	;# 
  2767  0ECB                     	;# 
  2768  0ECC                     	;# 
  2769  0F10                     	;# 
  2770  0F11                     	;# 
  2771  0F12                     	;# 
  2772  0F13                     	;# 
  2773  0F14                     	;# 
  2774  0F15                     	;# 
  2775  0F16                     	;# 
  2776  0F17                     	;# 
  2777  0F18                     	;# 
  2778  0F19                     	;# 
  2779  0F1A                     	;# 
  2780  0F1B                     	;# 
  2781  0F1C                     	;# 
  2782  0F1D                     	;# 
  2783  0F1E                     	;# 
  2784  0F1F                     	;# 
  2785  0F20                     	;# 
  2786  0F21                     	;# 
  2787  0F22                     	;# 
  2788  0F23                     	;# 
  2789  0F24                     	;# 
  2790  0F25                     	;# 
  2791  0F26                     	;# 
  2792  0F27                     	;# 
  2793  0F28                     	;# 
  2794  0F29                     	;# 
  2795  0F2A                     	;# 
  2796  0F2B                     	;# 
  2797  0F2C                     	;# 
  2798  0F2D                     	;# 
  2799  0F2E                     	;# 
  2800  0F2F                     	;# 
  2801  0F30                     	;# 
  2802  0F31                     	;# 
  2803  0F32                     	;# 
  2804  0F38                     	;# 
  2805  0F39                     	;# 
  2806  0F3A                     	;# 
  2807  0F3B                     	;# 
  2808  0F3C                     	;# 
  2809  0F3D                     	;# 
  2810  0F3E                     	;# 
  2811  0F3F                     	;# 
  2812  0F40                     	;# 
  2813  0F41                     	;# 
  2814  0F43                     	;# 
  2815  0F44                     	;# 
  2816  0F45                     	;# 
  2817  0F46                     	;# 
  2818  0F47                     	;# 
  2819  0F48                     	;# 
  2820  0F49                     	;# 
  2821  0F4A                     	;# 
  2822  0F4B                     	;# 
  2823  0F4C                     	;# 
  2824  0F4E                     	;# 
  2825  0F4F                     	;# 
  2826  0F50                     	;# 
  2827  0F51                     	;# 
  2828  0F52                     	;# 
  2829  0F53                     	;# 
  2830  0F54                     	;# 
  2831  0F55                     	;# 
  2832  0F56                     	;# 
  2833  0F57                     	;# 
  2834  0F59                     	;# 
  2835  0F5A                     	;# 
  2836  0F5B                     	;# 
  2837  0F5C                     	;# 
  2838  0F5D                     	;# 
  2839  0F61                     	;# 
  2840  0F62                     	;# 
  2841  0F64                     	;# 
  2842  0F65                     	;# 
  2843  0F66                     	;# 
  2844  0F67                     	;# 
  2845  0F68                     	;# 
  2846  0F69                     	;# 
  2847  0F6A                     	;# 
  2848  0F6B                     	;# 
  2849  0F6C                     	;# 
  2850  0F6D                     	;# 
  2851  0FE4                     	;# 
  2852  0FE5                     	;# 
  2853  0FE6                     	;# 
  2854  0FE7                     	;# 
  2855  0FE8                     	;# 
  2856  0FE9                     	;# 
  2857  0FEA                     	;# 
  2858  0FEB                     	;# 
  2859  0FED                     	;# 
  2860  0FEE                     	;# 
  2861  0FEF                     	;# 
  2862  0000                     	;# 
  2863  0001                     	;# 
  2864  0002                     	;# 
  2865  0003                     	;# 
  2866  0004                     	;# 
  2867  0005                     	;# 
  2868  0006                     	;# 
  2869  0007                     	;# 
  2870  0008                     	;# 
  2871  0009                     	;# 
  2872  000A                     	;# 
  2873  000B                     	;# 
  2874  000C                     	;# 
  2875  000D                     	;# 
  2876  000E                     	;# 
  2877  000F                     	;# 
  2878  0010                     	;# 
  2879  0011                     	;# 
  2880  0012                     	;# 
  2881  0013                     	;# 
  2882  0014                     	;# 
  2883  0015                     	;# 
  2884  0016                     	;# 
  2885  0017                     	;# 
  2886  0018                     	;# 
  2887  0019                     	;# 
  2888  001A                     	;# 
  2889  001C                     	;# 
  2890  001C                     	;# 
  2891  001D                     	;# 
  2892  001D                     	;# 
  2893  001E                     	;# 
  2894  001F                     	;# 
  2895  008C                     	;# 
  2896  008C                     	;# 
  2897  008D                     	;# 
  2898  008E                     	;# 
  2899  008E                     	;# 
  2900  008F                     	;# 
  2901  0090                     	;# 
  2902  0090                     	;# 
  2903  0091                     	;# 
  2904  0093                     	;# 
  2905  0094                     	;# 
  2906  0095                     	;# 
  2907  0096                     	;# 
  2908  0097                     	;# 
  2909  0098                     	;# 
  2910  0099                     	;# 
  2911  009A                     	;# 
  2912  009B                     	;# 
  2913  009C                     	;# 
  2914  009D                     	;# 
  2915  009E                     	;# 
  2916  010C                     	;# 
  2917  010D                     	;# 
  2918  010E                     	;# 
  2919  010E                     	;# 
  2920  010F                     	;# 
  2921  0110                     	;# 
  2922  0110                     	;# 
  2923  0111                     	;# 
  2924  0112                     	;# 
  2925  0112                     	;# 
  2926  0113                     	;# 
  2927  0114                     	;# 
  2928  0114                     	;# 
  2929  0115                     	;# 
  2930  0116                     	;# 
  2931  0116                     	;# 
  2932  0117                     	;# 
  2933  0119                     	;# 
  2934  0119                     	;# 
  2935  0119                     	;# 
  2936  011A                     	;# 
  2937  011A                     	;# 
  2938  011A                     	;# 
  2939  011B                     	;# 
  2940  011B                     	;# 
  2941  011B                     	;# 
  2942  011B                     	;# 
  2943  011B                     	;# 
  2944  011C                     	;# 
  2945  011C                     	;# 
  2946  011C                     	;# 
  2947  011D                     	;# 
  2948  011D                     	;# 
  2949  011D                     	;# 
  2950  011E                     	;# 
  2951  011E                     	;# 
  2952  011E                     	;# 
  2953  011F                     	;# 
  2954  011F                     	;# 
  2955  011F                     	;# 
  2956  011F                     	;# 
  2957  011F                     	;# 
  2958  018C                     	;# 
  2959  018D                     	;# 
  2960  018E                     	;# 
  2961  018F                     	;# 
  2962  0190                     	;# 
  2963  0191                     	;# 
  2964  0192                     	;# 
  2965  0196                     	;# 
  2966  0197                     	;# 
  2967  0198                     	;# 
  2968  0199                     	;# 
  2969  019A                     	;# 
  2970  019B                     	;# 
  2971  019C                     	;# 
  2972  020C                     	;# 
  2973  020C                     	;# 
  2974  020D                     	;# 
  2975  020E                     	;# 
  2976  020F                     	;# 
  2977  020F                     	;# 
  2978  0210                     	;# 
  2979  0210                     	;# 
  2980  0211                     	;# 
  2981  0211                     	;# 
  2982  0212                     	;# 
  2983  0212                     	;# 
  2984  0213                     	;# 
  2985  0214                     	;# 
  2986  0215                     	;# 
  2987  0215                     	;# 
  2988  0216                     	;# 
  2989  0216                     	;# 
  2990  0217                     	;# 
  2991  0217                     	;# 
  2992  0218                     	;# 
  2993  0218                     	;# 
  2994  0219                     	;# 
  2995  021A                     	;# 
  2996  021B                     	;# 
  2997  021B                     	;# 
  2998  021C                     	;# 
  2999  021C                     	;# 
  3000  021D                     	;# 
  3001  021D                     	;# 
  3002  021E                     	;# 
  3003  021F                     	;# 
  3004  028C                     	;# 
  3005  028C                     	;# 
  3006  028D                     	;# 
  3007  028D                     	;# 
  3008  028E                     	;# 
  3009  028F                     	;# 
  3010  0290                     	;# 
  3011  0290                     	;# 
  3012  0291                     	;# 
  3013  0292                     	;# 
  3014  0292                     	;# 
  3015  0293                     	;# 
  3016  0293                     	;# 
  3017  0294                     	;# 
  3018  0295                     	;# 
  3019  0296                     	;# 
  3020  0296                     	;# 
  3021  0297                     	;# 
  3022  0298                     	;# 
  3023  0298                     	;# 
  3024  0299                     	;# 
  3025  0299                     	;# 
  3026  029A                     	;# 
  3027  029B                     	;# 
  3028  029C                     	;# 
  3029  029C                     	;# 
  3030  029D                     	;# 
  3031  030C                     	;# 
  3032  030C                     	;# 
  3033  030D                     	;# 
  3034  030E                     	;# 
  3035  030F                     	;# 
  3036  0310                     	;# 
  3037  0310                     	;# 
  3038  0311                     	;# 
  3039  0312                     	;# 
  3040  0313                     	;# 
  3041  0314                     	;# 
  3042  0314                     	;# 
  3043  0315                     	;# 
  3044  0316                     	;# 
  3045  0317                     	;# 
  3046  0318                     	;# 
  3047  0318                     	;# 
  3048  0319                     	;# 
  3049  031A                     	;# 
  3050  031B                     	;# 
  3051  031C                     	;# 
  3052  031C                     	;# 
  3053  031D                     	;# 
  3054  031E                     	;# 
  3055  031F                     	;# 
  3056  038C                     	;# 
  3057  038C                     	;# 
  3058  038D                     	;# 
  3059  038E                     	;# 
  3060  0390                     	;# 
  3061  0390                     	;# 
  3062  0391                     	;# 
  3063  0392                     	;# 
  3064  040C                     	;# 
  3065  040D                     	;# 
  3066  040E                     	;# 
  3067  040F                     	;# 
  3068  0410                     	;# 
  3069  0411                     	;# 
  3070  0416                     	;# 
  3071  0416                     	;# 
  3072  0417                     	;# 
  3073  0418                     	;# 
  3074  0418                     	;# 
  3075  0419                     	;# 
  3076  041A                     	;# 
  3077  041A                     	;# 
  3078  041B                     	;# 
  3079  041C                     	;# 
  3080  041C                     	;# 
  3081  041D                     	;# 
  3082  041E                     	;# 
  3083  041F                     	;# 
  3084  048C                     	;# 
  3085  048C                     	;# 
  3086  048D                     	;# 
  3087  048E                     	;# 
  3088  048F                     	;# 
  3089  048F                     	;# 
  3090  0490                     	;# 
  3091  0491                     	;# 
  3092  0492                     	;# 
  3093  0492                     	;# 
  3094  0493                     	;# 
  3095  0494                     	;# 
  3096  0495                     	;# 
  3097  0495                     	;# 
  3098  0496                     	;# 
  3099  0497                     	;# 
  3100  0498                     	;# 
  3101  0499                     	;# 
  3102  049A                     	;# 
  3103  049B                     	;# 
  3104  049C                     	;# 
  3105  049D                     	;# 
  3106  050C                     	;# 
  3107  050C                     	;# 
  3108  050D                     	;# 
  3109  050E                     	;# 
  3110  050F                     	;# 
  3111  050F                     	;# 
  3112  0510                     	;# 
  3113  0511                     	;# 
  3114  0512                     	;# 
  3115  0512                     	;# 
  3116  0513                     	;# 
  3117  0514                     	;# 
  3118  0515                     	;# 
  3119  0515                     	;# 
  3120  0516                     	;# 
  3121  0517                     	;# 
  3122  0518                     	;# 
  3123  0519                     	;# 
  3124  051A                     	;# 
  3125  051B                     	;# 
  3126  051C                     	;# 
  3127  051D                     	;# 
  3128  058C                     	;# 
  3129  058C                     	;# 
  3130  058D                     	;# 
  3131  058E                     	;# 
  3132  058F                     	;# 
  3133  058F                     	;# 
  3134  0590                     	;# 
  3135  0591                     	;# 
  3136  0592                     	;# 
  3137  0593                     	;# 
  3138  060C                     	;# 
  3139  060D                     	;# 
  3140  060E                     	;# 
  3141  060F                     	;# 
  3142  0610                     	;# 
  3143  0611                     	;# 
  3144  0612                     	;# 
  3145  0613                     	;# 
  3146  0614                     	;# 
  3147  0616                     	;# 
  3148  0617                     	;# 
  3149  0618                     	;# 
  3150  0619                     	;# 
  3151  061A                     	;# 
  3152  061B                     	;# 
  3153  061C                     	;# 
  3154  061D                     	;# 
  3155  061E                     	;# 
  3156  068C                     	;# 
  3157  068D                     	;# 
  3158  068E                     	;# 
  3159  068F                     	;# 
  3160  0690                     	;# 
  3161  0691                     	;# 
  3162  0692                     	;# 
  3163  0693                     	;# 
  3164  0694                     	;# 
  3165  070C                     	;# 
  3166  070D                     	;# 
  3167  070E                     	;# 
  3168  070F                     	;# 
  3169  0710                     	;# 
  3170  0711                     	;# 
  3171  0712                     	;# 
  3172  0713                     	;# 
  3173  0714                     	;# 
  3174  0716                     	;# 
  3175  0717                     	;# 
  3176  0718                     	;# 
  3177  0719                     	;# 
  3178  071A                     	;# 
  3179  071B                     	;# 
  3180  071C                     	;# 
  3181  071D                     	;# 
  3182  071E                     	;# 
  3183  0796                     	;# 
  3184  0797                     	;# 
  3185  0798                     	;# 
  3186  0799                     	;# 
  3187  079A                     	;# 
  3188  079B                     	;# 
  3189  080C                     	;# 
  3190  080D                     	;# 
  3191  080E                     	;# 
  3192  080F                     	;# 
  3193  0810                     	;# 
  3194  0811                     	;# 
  3195  0812                     	;# 
  3196  0813                     	;# 
  3197  0814                     	;# 
  3198  081A                     	;# 
  3199  081B                     	;# 
  3200  081C                     	;# 
  3201  081D                     	;# 
  3202  081E                     	;# 
  3203  081F                     	;# 
  3204  088C                     	;# 
  3205  088D                     	;# 
  3206  088E                     	;# 
  3207  088F                     	;# 
  3208  0890                     	;# 
  3209  0891                     	;# 
  3210  0892                     	;# 
  3211  0893                     	;# 
  3212  0895                     	;# 
  3213  0896                     	;# 
  3214  0897                     	;# 
  3215  0898                     	;# 
  3216  0899                     	;# 
  3217  089A                     	;# 
  3218  089B                     	;# 
  3219  090C                     	;# 
  3220  090E                     	;# 
  3221  090F                     	;# 
  3222  091F                     	;# 
  3223  091F                     	;# 
  3224  098F                     	;# 
  3225  098F                     	;# 
  3226  0990                     	;# 
  3227  0991                     	;# 
  3228  0992                     	;# 
  3229  0993                     	;# 
  3230  0994                     	;# 
  3231  0995                     	;# 
  3232  0996                     	;# 
  3233  0997                     	;# 
  3234  0E0F                     	;# 
  3235  0E10                     	;# 
  3236  0E11                     	;# 
  3237  0E12                     	;# 
  3238  0E13                     	;# 
  3239  0E14                     	;# 
  3240  0E15                     	;# 
  3241  0E16                     	;# 
  3242  0E17                     	;# 
  3243  0E18                     	;# 
  3244  0E19                     	;# 
  3245  0E1A                     	;# 
  3246  0E1B                     	;# 
  3247  0E1C                     	;# 
  3248  0E1D                     	;# 
  3249  0E1E                     	;# 
  3250  0E1F                     	;# 
  3251  0E20                     	;# 
  3252  0E21                     	;# 
  3253  0E22                     	;# 
  3254  0E23                     	;# 
  3255  0E24                     	;# 
  3256  0E25                     	;# 
  3257  0E26                     	;# 
  3258  0E27                     	;# 
  3259  0E28                     	;# 
  3260  0E29                     	;# 
  3261  0E2A                     	;# 
  3262  0E2B                     	;# 
  3263  0E2C                     	;# 
  3264  0E2D                     	;# 
  3265  0E2E                     	;# 
  3266  0E2F                     	;# 
  3267  0E30                     	;# 
  3268  0E31                     	;# 
  3269  0E32                     	;# 
  3270  0E33                     	;# 
  3271  0E34                     	;# 
  3272  0E35                     	;# 
  3273  0E36                     	;# 
  3274  0E37                     	;# 
  3275  0E8F                     	;# 
  3276  0E90                     	;# 
  3277  0E91                     	;# 
  3278  0E92                     	;# 
  3279  0E93                     	;# 
  3280  0E94                     	;# 
  3281  0E95                     	;# 
  3282  0E96                     	;# 
  3283  0E97                     	;# 
  3284  0E9C                     	;# 
  3285  0E9D                     	;# 
  3286  0E9E                     	;# 
  3287  0EA1                     	;# 
  3288  0EA2                     	;# 
  3289  0EA3                     	;# 
  3290  0EA4                     	;# 
  3291  0EA5                     	;# 
  3292  0EA9                     	;# 
  3293  0EAA                     	;# 
  3294  0EAB                     	;# 
  3295  0EAC                     	;# 
  3296  0EB1                     	;# 
  3297  0EB2                     	;# 
  3298  0EB3                     	;# 
  3299  0EB8                     	;# 
  3300  0EB9                     	;# 
  3301  0EBA                     	;# 
  3302  0EBB                     	;# 
  3303  0EBC                     	;# 
  3304  0EBD                     	;# 
  3305  0EBE                     	;# 
  3306  0EC3                     	;# 
  3307  0EC5                     	;# 
  3308  0EC6                     	;# 
  3309  0EC7                     	;# 
  3310  0EC8                     	;# 
  3311  0EC9                     	;# 
  3312  0ECA                     	;# 
  3313  0ECB                     	;# 
  3314  0ECC                     	;# 
  3315  0F10                     	;# 
  3316  0F11                     	;# 
  3317  0F12                     	;# 
  3318  0F13                     	;# 
  3319  0F14                     	;# 
  3320  0F15                     	;# 
  3321  0F16                     	;# 
  3322  0F17                     	;# 
  3323  0F18                     	;# 
  3324  0F19                     	;# 
  3325  0F1A                     	;# 
  3326  0F1B                     	;# 
  3327  0F1C                     	;# 
  3328  0F1D                     	;# 
  3329  0F1E                     	;# 
  3330  0F1F                     	;# 
  3331  0F20                     	;# 
  3332  0F21                     	;# 
  3333  0F22                     	;# 
  3334  0F23                     	;# 
  3335  0F24                     	;# 
  3336  0F25                     	;# 
  3337  0F26                     	;# 
  3338  0F27                     	;# 
  3339  0F28                     	;# 
  3340  0F29                     	;# 
  3341  0F2A                     	;# 
  3342  0F2B                     	;# 
  3343  0F2C                     	;# 
  3344  0F2D                     	;# 
  3345  0F2E                     	;# 
  3346  0F2F                     	;# 
  3347  0F30                     	;# 
  3348  0F31                     	;# 
  3349  0F32                     	;# 
  3350  0F38                     	;# 
  3351  0F39                     	;# 
  3352  0F3A                     	;# 
  3353  0F3B                     	;# 
  3354  0F3C                     	;# 
  3355  0F3D                     	;# 
  3356  0F3E                     	;# 
  3357  0F3F                     	;# 
  3358  0F40                     	;# 
  3359  0F41                     	;# 
  3360  0F43                     	;# 
  3361  0F44                     	;# 
  3362  0F45                     	;# 
  3363  0F46                     	;# 
  3364  0F47                     	;# 
  3365  0F48                     	;# 
  3366  0F49                     	;# 
  3367  0F4A                     	;# 
  3368  0F4B                     	;# 
  3369  0F4C                     	;# 
  3370  0F4E                     	;# 
  3371  0F4F                     	;# 
  3372  0F50                     	;# 
  3373  0F51                     	;# 
  3374  0F52                     	;# 
  3375  0F53                     	;# 
  3376  0F54                     	;# 
  3377  0F55                     	;# 
  3378  0F56                     	;# 
  3379  0F57                     	;# 
  3380  0F59                     	;# 
  3381  0F5A                     	;# 
  3382  0F5B                     	;# 
  3383  0F5C                     	;# 
  3384  0F5D                     	;# 
  3385  0F61                     	;# 
  3386  0F62                     	;# 
  3387  0F64                     	;# 
  3388  0F65                     	;# 
  3389  0F66                     	;# 
  3390  0F67                     	;# 
  3391  0F68                     	;# 
  3392  0F69                     	;# 
  3393  0F6A                     	;# 
  3394  0F6B                     	;# 
  3395  0F6C                     	;# 
  3396  0F6D                     	;# 
  3397  0FE4                     	;# 
  3398  0FE5                     	;# 
  3399  0FE6                     	;# 
  3400  0FE7                     	;# 
  3401  0FE8                     	;# 
  3402  0FE9                     	;# 
  3403  0FEA                     	;# 
  3404  0FEB                     	;# 
  3405  0FED                     	;# 
  3406  0FEE                     	;# 
  3407  0FEF                     	;# 
  3408  0000                     	;# 
  3409  0001                     	;# 
  3410  0002                     	;# 
  3411  0003                     	;# 
  3412  0004                     	;# 
  3413  0005                     	;# 
  3414  0006                     	;# 
  3415  0007                     	;# 
  3416  0008                     	;# 
  3417  0009                     	;# 
  3418  000A                     	;# 
  3419  000B                     	;# 
  3420  000C                     	;# 
  3421  000D                     	;# 
  3422  000E                     	;# 
  3423  000F                     	;# 
  3424  0010                     	;# 
  3425  0011                     	;# 
  3426  0012                     	;# 
  3427  0013                     	;# 
  3428  0014                     	;# 
  3429  0015                     	;# 
  3430  0016                     	;# 
  3431  0017                     	;# 
  3432  0018                     	;# 
  3433  0019                     	;# 
  3434  001A                     	;# 
  3435  001C                     	;# 
  3436  001C                     	;# 
  3437  001D                     	;# 
  3438  001D                     	;# 
  3439  001E                     	;# 
  3440  001F                     	;# 
  3441  008C                     	;# 
  3442  008C                     	;# 
  3443  008D                     	;# 
  3444  008E                     	;# 
  3445  008E                     	;# 
  3446  008F                     	;# 
  3447  0090                     	;# 
  3448  0090                     	;# 
  3449  0091                     	;# 
  3450  0093                     	;# 
  3451  0094                     	;# 
  3452  0095                     	;# 
  3453  0096                     	;# 
  3454  0097                     	;# 
  3455  0098                     	;# 
  3456  0099                     	;# 
  3457  009A                     	;# 
  3458  009B                     	;# 
  3459  009C                     	;# 
  3460  009D                     	;# 
  3461  009E                     	;# 
  3462  010C                     	;# 
  3463  010D                     	;# 
  3464  010E                     	;# 
  3465  010E                     	;# 
  3466  010F                     	;# 
  3467  0110                     	;# 
  3468  0110                     	;# 
  3469  0111                     	;# 
  3470  0112                     	;# 
  3471  0112                     	;# 
  3472  0113                     	;# 
  3473  0114                     	;# 
  3474  0114                     	;# 
  3475  0115                     	;# 
  3476  0116                     	;# 
  3477  0116                     	;# 
  3478  0117                     	;# 
  3479  0119                     	;# 
  3480  0119                     	;# 
  3481  0119                     	;# 
  3482  011A                     	;# 
  3483  011A                     	;# 
  3484  011A                     	;# 
  3485  011B                     	;# 
  3486  011B                     	;# 
  3487  011B                     	;# 
  3488  011B                     	;# 
  3489  011B                     	;# 
  3490  011C                     	;# 
  3491  011C                     	;# 
  3492  011C                     	;# 
  3493  011D                     	;# 
  3494  011D                     	;# 
  3495  011D                     	;# 
  3496  011E                     	;# 
  3497  011E                     	;# 
  3498  011E                     	;# 
  3499  011F                     	;# 
  3500  011F                     	;# 
  3501  011F                     	;# 
  3502  011F                     	;# 
  3503  011F                     	;# 
  3504  018C                     	;# 
  3505  018D                     	;# 
  3506  018E                     	;# 
  3507  018F                     	;# 
  3508  0190                     	;# 
  3509  0191                     	;# 
  3510  0192                     	;# 
  3511  0196                     	;# 
  3512  0197                     	;# 
  3513  0198                     	;# 
  3514  0199                     	;# 
  3515  019A                     	;# 
  3516  019B                     	;# 
  3517  019C                     	;# 
  3518  020C                     	;# 
  3519  020C                     	;# 
  3520  020D                     	;# 
  3521  020E                     	;# 
  3522  020F                     	;# 
  3523  020F                     	;# 
  3524  0210                     	;# 
  3525  0210                     	;# 
  3526  0211                     	;# 
  3527  0211                     	;# 
  3528  0212                     	;# 
  3529  0212                     	;# 
  3530  0213                     	;# 
  3531  0214                     	;# 
  3532  0215                     	;# 
  3533  0215                     	;# 
  3534  0216                     	;# 
  3535  0216                     	;# 
  3536  0217                     	;# 
  3537  0217                     	;# 
  3538  0218                     	;# 
  3539  0218                     	;# 
  3540  0219                     	;# 
  3541  021A                     	;# 
  3542  021B                     	;# 
  3543  021B                     	;# 
  3544  021C                     	;# 
  3545  021C                     	;# 
  3546  021D                     	;# 
  3547  021D                     	;# 
  3548  021E                     	;# 
  3549  021F                     	;# 
  3550  028C                     	;# 
  3551  028C                     	;# 
  3552  028D                     	;# 
  3553  028D                     	;# 
  3554  028E                     	;# 
  3555  028F                     	;# 
  3556  0290                     	;# 
  3557  0290                     	;# 
  3558  0291                     	;# 
  3559  0292                     	;# 
  3560  0292                     	;# 
  3561  0293                     	;# 
  3562  0293                     	;# 
  3563  0294                     	;# 
  3564  0295                     	;# 
  3565  0296                     	;# 
  3566  0296                     	;# 
  3567  0297                     	;# 
  3568  0298                     	;# 
  3569  0298                     	;# 
  3570  0299                     	;# 
  3571  0299                     	;# 
  3572  029A                     	;# 
  3573  029B                     	;# 
  3574  029C                     	;# 
  3575  029C                     	;# 
  3576  029D                     	;# 
  3577  030C                     	;# 
  3578  030C                     	;# 
  3579  030D                     	;# 
  3580  030E                     	;# 
  3581  030F                     	;# 
  3582  0310                     	;# 
  3583  0310                     	;# 
  3584  0311                     	;# 
  3585  0312                     	;# 
  3586  0313                     	;# 
  3587  0314                     	;# 
  3588  0314                     	;# 
  3589  0315                     	;# 
  3590  0316                     	;# 
  3591  0317                     	;# 
  3592  0318                     	;# 
  3593  0318                     	;# 
  3594  0319                     	;# 
  3595  031A                     	;# 
  3596  031B                     	;# 
  3597  031C                     	;# 
  3598  031C                     	;# 
  3599  031D                     	;# 
  3600  031E                     	;# 
  3601  031F                     	;# 
  3602  038C                     	;# 
  3603  038C                     	;# 
  3604  038D                     	;# 
  3605  038E                     	;# 
  3606  0390                     	;# 
  3607  0390                     	;# 
  3608  0391                     	;# 
  3609  0392                     	;# 
  3610  040C                     	;# 
  3611  040D                     	;# 
  3612  040E                     	;# 
  3613  040F                     	;# 
  3614  0410                     	;# 
  3615  0411                     	;# 
  3616  0416                     	;# 
  3617  0416                     	;# 
  3618  0417                     	;# 
  3619  0418                     	;# 
  3620  0418                     	;# 
  3621  0419                     	;# 
  3622  041A                     	;# 
  3623  041A                     	;# 
  3624  041B                     	;# 
  3625  041C                     	;# 
  3626  041C                     	;# 
  3627  041D                     	;# 
  3628  041E                     	;# 
  3629  041F                     	;# 
  3630  048C                     	;# 
  3631  048C                     	;# 
  3632  048D                     	;# 
  3633  048E                     	;# 
  3634  048F                     	;# 
  3635  048F                     	;# 
  3636  0490                     	;# 
  3637  0491                     	;# 
  3638  0492                     	;# 
  3639  0492                     	;# 
  3640  0493                     	;# 
  3641  0494                     	;# 
  3642  0495                     	;# 
  3643  0495                     	;# 
  3644  0496                     	;# 
  3645  0497                     	;# 
  3646  0498                     	;# 
  3647  0499                     	;# 
  3648  049A                     	;# 
  3649  049B                     	;# 
  3650  049C                     	;# 
  3651  049D                     	;# 
  3652  050C                     	;# 
  3653  050C                     	;# 
  3654  050D                     	;# 
  3655  050E                     	;# 
  3656  050F                     	;# 
  3657  050F                     	;# 
  3658  0510                     	;# 
  3659  0511                     	;# 
  3660  0512                     	;# 
  3661  0512                     	;# 
  3662  0513                     	;# 
  3663  0514                     	;# 
  3664  0515                     	;# 
  3665  0515                     	;# 
  3666  0516                     	;# 
  3667  0517                     	;# 
  3668  0518                     	;# 
  3669  0519                     	;# 
  3670  051A                     	;# 
  3671  051B                     	;# 
  3672  051C                     	;# 
  3673  051D                     	;# 
  3674  058C                     	;# 
  3675  058C                     	;# 
  3676  058D                     	;# 
  3677  058E                     	;# 
  3678  058F                     	;# 
  3679  058F                     	;# 
  3680  0590                     	;# 
  3681  0591                     	;# 
  3682  0592                     	;# 
  3683  0593                     	;# 
  3684  060C                     	;# 
  3685  060D                     	;# 
  3686  060E                     	;# 
  3687  060F                     	;# 
  3688  0610                     	;# 
  3689  0611                     	;# 
  3690  0612                     	;# 
  3691  0613                     	;# 
  3692  0614                     	;# 
  3693  0616                     	;# 
  3694  0617                     	;# 
  3695  0618                     	;# 
  3696  0619                     	;# 
  3697  061A                     	;# 
  3698  061B                     	;# 
  3699  061C                     	;# 
  3700  061D                     	;# 
  3701  061E                     	;# 
  3702  068C                     	;# 
  3703  068D                     	;# 
  3704  068E                     	;# 
  3705  068F                     	;# 
  3706  0690                     	;# 
  3707  0691                     	;# 
  3708  0692                     	;# 
  3709  0693                     	;# 
  3710  0694                     	;# 
  3711  070C                     	;# 
  3712  070D                     	;# 
  3713  070E                     	;# 
  3714  070F                     	;# 
  3715  0710                     	;# 
  3716  0711                     	;# 
  3717  0712                     	;# 
  3718  0713                     	;# 
  3719  0714                     	;# 
  3720  0716                     	;# 
  3721  0717                     	;# 
  3722  0718                     	;# 
  3723  0719                     	;# 
  3724  071A                     	;# 
  3725  071B                     	;# 
  3726  071C                     	;# 
  3727  071D                     	;# 
  3728  071E                     	;# 
  3729  0796                     	;# 
  3730  0797                     	;# 
  3731  0798                     	;# 
  3732  0799                     	;# 
  3733  079A                     	;# 
  3734  079B                     	;# 
  3735  080C                     	;# 
  3736  080D                     	;# 
  3737  080E                     	;# 
  3738  080F                     	;# 
  3739  0810                     	;# 
  3740  0811                     	;# 
  3741  0812                     	;# 
  3742  0813                     	;# 
  3743  0814                     	;# 
  3744  081A                     	;# 
  3745  081B                     	;# 
  3746  081C                     	;# 
  3747  081D                     	;# 
  3748  081E                     	;# 
  3749  081F                     	;# 
  3750  088C                     	;# 
  3751  088D                     	;# 
  3752  088E                     	;# 
  3753  088F                     	;# 
  3754  0890                     	;# 
  3755  0891                     	;# 
  3756  0892                     	;# 
  3757  0893                     	;# 
  3758  0895                     	;# 
  3759  0896                     	;# 
  3760  0897                     	;# 
  3761  0898                     	;# 
  3762  0899                     	;# 
  3763  089A                     	;# 
  3764  089B                     	;# 
  3765  090C                     	;# 
  3766  090E                     	;# 
  3767  090F                     	;# 
  3768  091F                     	;# 
  3769  091F                     	;# 
  3770  098F                     	;# 
  3771  098F                     	;# 
  3772  0990                     	;# 
  3773  0991                     	;# 
  3774  0992                     	;# 
  3775  0993                     	;# 
  3776  0994                     	;# 
  3777  0995                     	;# 
  3778  0996                     	;# 
  3779  0997                     	;# 
  3780  0E0F                     	;# 
  3781  0E10                     	;# 
  3782  0E11                     	;# 
  3783  0E12                     	;# 
  3784  0E13                     	;# 
  3785  0E14                     	;# 
  3786  0E15                     	;# 
  3787  0E16                     	;# 
  3788  0E17                     	;# 
  3789  0E18                     	;# 
  3790  0E19                     	;# 
  3791  0E1A                     	;# 
  3792  0E1B                     	;# 
  3793  0E1C                     	;# 
  3794  0E1D                     	;# 
  3795  0E1E                     	;# 
  3796  0E1F                     	;# 
  3797  0E20                     	;# 
  3798  0E21                     	;# 
  3799  0E22                     	;# 
  3800  0E23                     	;# 
  3801  0E24                     	;# 
  3802  0E25                     	;# 
  3803  0E26                     	;# 
  3804  0E27                     	;# 
  3805  0E28                     	;# 
  3806  0E29                     	;# 
  3807  0E2A                     	;# 
  3808  0E2B                     	;# 
  3809  0E2C                     	;# 
  3810  0E2D                     	;# 
  3811  0E2E                     	;# 
  3812  0E2F                     	;# 
  3813  0E30                     	;# 
  3814  0E31                     	;# 
  3815  0E32                     	;# 
  3816  0E33                     	;# 
  3817  0E34                     	;# 
  3818  0E35                     	;# 
  3819  0E36                     	;# 
  3820  0E37                     	;# 
  3821  0E8F                     	;# 
  3822  0E90                     	;# 
  3823  0E91                     	;# 
  3824  0E92                     	;# 
  3825  0E93                     	;# 
  3826  0E94                     	;# 
  3827  0E95                     	;# 
  3828  0E96                     	;# 
  3829  0E97                     	;# 
  3830  0E9C                     	;# 
  3831  0E9D                     	;# 
  3832  0E9E                     	;# 
  3833  0EA1                     	;# 
  3834  0EA2                     	;# 
  3835  0EA3                     	;# 
  3836  0EA4                     	;# 
  3837  0EA5                     	;# 
  3838  0EA9                     	;# 
  3839  0EAA                     	;# 
  3840  0EAB                     	;# 
  3841  0EAC                     	;# 
  3842  0EB1                     	;# 
  3843  0EB2                     	;# 
  3844  0EB3                     	;# 
  3845  0EB8                     	;# 
  3846  0EB9                     	;# 
  3847  0EBA                     	;# 
  3848  0EBB                     	;# 
  3849  0EBC                     	;# 
  3850  0EBD                     	;# 
  3851  0EBE                     	;# 
  3852  0EC3                     	;# 
  3853  0EC5                     	;# 
  3854  0EC6                     	;# 
  3855  0EC7                     	;# 
  3856  0EC8                     	;# 
  3857  0EC9                     	;# 
  3858  0ECA                     	;# 
  3859  0ECB                     	;# 
  3860  0ECC                     	;# 
  3861  0F10                     	;# 
  3862  0F11                     	;# 
  3863  0F12                     	;# 
  3864  0F13                     	;# 
  3865  0F14                     	;# 
  3866  0F15                     	;# 
  3867  0F16                     	;# 
  3868  0F17                     	;# 
  3869  0F18                     	;# 
  3870  0F19                     	;# 
  3871  0F1A                     	;# 
  3872  0F1B                     	;# 
  3873  0F1C                     	;# 
  3874  0F1D                     	;# 
  3875  0F1E                     	;# 
  3876  0F1F                     	;# 
  3877  0F20                     	;# 
  3878  0F21                     	;# 
  3879  0F22                     	;# 
  3880  0F23                     	;# 
  3881  0F24                     	;# 
  3882  0F25                     	;# 
  3883  0F26                     	;# 
  3884  0F27                     	;# 
  3885  0F28                     	;# 
  3886  0F29                     	;# 
  3887  0F2A                     	;# 
  3888  0F2B                     	;# 
  3889  0F2C                     	;# 
  3890  0F2D                     	;# 
  3891  0F2E                     	;# 
  3892  0F2F                     	;# 
  3893  0F30                     	;# 
  3894  0F31                     	;# 
  3895  0F32                     	;# 
  3896  0F38                     	;# 
  3897  0F39                     	;# 
  3898  0F3A                     	;# 
  3899  0F3B                     	;# 
  3900  0F3C                     	;# 
  3901  0F3D                     	;# 
  3902  0F3E                     	;# 
  3903  0F3F                     	;# 
  3904  0F40                     	;# 
  3905  0F41                     	;# 
  3906  0F43                     	;# 
  3907  0F44                     	;# 
  3908  0F45                     	;# 
  3909  0F46                     	;# 
  3910  0F47                     	;# 
  3911  0F48                     	;# 
  3912  0F49                     	;# 
  3913  0F4A                     	;# 
  3914  0F4B                     	;# 
  3915  0F4C                     	;# 
  3916  0F4E                     	;# 
  3917  0F4F                     	;# 
  3918  0F50                     	;# 
  3919  0F51                     	;# 
  3920  0F52                     	;# 
  3921  0F53                     	;# 
  3922  0F54                     	;# 
  3923  0F55                     	;# 
  3924  0F56                     	;# 
  3925  0F57                     	;# 
  3926  0F59                     	;# 
  3927  0F5A                     	;# 
  3928  0F5B                     	;# 
  3929  0F5C                     	;# 
  3930  0F5D                     	;# 
  3931  0F61                     	;# 
  3932  0F62                     	;# 
  3933  0F64                     	;# 
  3934  0F65                     	;# 
  3935  0F66                     	;# 
  3936  0F67                     	;# 
  3937  0F68                     	;# 
  3938  0F69                     	;# 
  3939  0F6A                     	;# 
  3940  0F6B                     	;# 
  3941  0F6C                     	;# 
  3942  0F6D                     	;# 
  3943  0FE4                     	;# 
  3944  0FE5                     	;# 
  3945  0FE6                     	;# 
  3946  0FE7                     	;# 
  3947  0FE8                     	;# 
  3948  0FE9                     	;# 
  3949  0FEA                     	;# 
  3950  0FEB                     	;# 
  3951  0FED                     	;# 
  3952  0FEE                     	;# 
  3953  0FEF                     	;# 
  3954  0000                     	;# 
  3955  0001                     	;# 
  3956  0002                     	;# 
  3957  0003                     	;# 
  3958  0004                     	;# 
  3959  0005                     	;# 
  3960  0006                     	;# 
  3961  0007                     	;# 
  3962  0008                     	;# 
  3963  0009                     	;# 
  3964  000A                     	;# 
  3965  000B                     	;# 
  3966  000C                     	;# 
  3967  000D                     	;# 
  3968  000E                     	;# 
  3969  000F                     	;# 
  3970  0010                     	;# 
  3971  0011                     	;# 
  3972  0012                     	;# 
  3973  0013                     	;# 
  3974  0014                     	;# 
  3975  0015                     	;# 
  3976  0016                     	;# 
  3977  0017                     	;# 
  3978  0018                     	;# 
  3979  0019                     	;# 
  3980  001A                     	;# 
  3981  001C                     	;# 
  3982  001C                     	;# 
  3983  001D                     	;# 
  3984  001D                     	;# 
  3985  001E                     	;# 
  3986  001F                     	;# 
  3987  008C                     	;# 
  3988  008C                     	;# 
  3989  008D                     	;# 
  3990  008E                     	;# 
  3991  008E                     	;# 
  3992  008F                     	;# 
  3993  0090                     	;# 
  3994  0090                     	;# 
  3995  0091                     	;# 
  3996  0093                     	;# 
  3997  0094                     	;# 
  3998  0095                     	;# 
  3999  0096                     	;# 
  4000  0097                     	;# 
  4001  0098                     	;# 
  4002  0099                     	;# 
  4003  009A                     	;# 
  4004  009B                     	;# 
  4005  009C                     	;# 
  4006  009D                     	;# 
  4007  009E                     	;# 
  4008  010C                     	;# 
  4009  010D                     	;# 
  4010  010E                     	;# 
  4011  010E                     	;# 
  4012  010F                     	;# 
  4013  0110                     	;# 
  4014  0110                     	;# 
  4015  0111                     	;# 
  4016  0112                     	;# 
  4017  0112                     	;# 
  4018  0113                     	;# 
  4019  0114                     	;# 
  4020  0114                     	;# 
  4021  0115                     	;# 
  4022  0116                     	;# 
  4023  0116                     	;# 
  4024  0117                     	;# 
  4025  0119                     	;# 
  4026  0119                     	;# 
  4027  0119                     	;# 
  4028  011A                     	;# 
  4029  011A                     	;# 
  4030  011A                     	;# 
  4031  011B                     	;# 
  4032  011B                     	;# 
  4033  011B                     	;# 
  4034  011B                     	;# 
  4035  011B                     	;# 
  4036  011C                     	;# 
  4037  011C                     	;# 
  4038  011C                     	;# 
  4039  011D                     	;# 
  4040  011D                     	;# 
  4041  011D                     	;# 
  4042  011E                     	;# 
  4043  011E                     	;# 
  4044  011E                     	;# 
  4045  011F                     	;# 
  4046  011F                     	;# 
  4047  011F                     	;# 
  4048  011F                     	;# 
  4049  011F                     	;# 
  4050  018C                     	;# 
  4051  018D                     	;# 
  4052  018E                     	;# 
  4053  018F                     	;# 
  4054  0190                     	;# 
  4055  0191                     	;# 
  4056  0192                     	;# 
  4057  0196                     	;# 
  4058  0197                     	;# 
  4059  0198                     	;# 
  4060  0199                     	;# 
  4061  019A                     	;# 
  4062  019B                     	;# 
  4063  019C                     	;# 
  4064  020C                     	;# 
  4065  020C                     	;# 
  4066  020D                     	;# 
  4067  020E                     	;# 
  4068  020F                     	;# 
  4069  020F                     	;# 
  4070  0210                     	;# 
  4071  0210                     	;# 
  4072  0211                     	;# 
  4073  0211                     	;# 
  4074  0212                     	;# 
  4075  0212                     	;# 
  4076  0213                     	;# 
  4077  0214                     	;# 
  4078  0215                     	;# 
  4079  0215                     	;# 
  4080  0216                     	;# 
  4081  0216                     	;# 
  4082  0217                     	;# 
  4083  0217                     	;# 
  4084  0218                     	;# 
  4085  0218                     	;# 
  4086  0219                     	;# 
  4087  021A                     	;# 
  4088  021B                     	;# 
  4089  021B                     	;# 
  4090  021C                     	;# 
  4091  021C                     	;# 
  4092  021D                     	;# 
  4093  021D                     	;# 
  4094  021E                     	;# 
  4095  021F                     	;# 
  4096  028C                     	;# 
  4097  028C                     	;# 
  4098  028D                     	;# 
  4099  028D                     	;# 
  4100  028E                     	;# 
  4101  028F                     	;# 
  4102  0290                     	;# 
  4103  0290                     	;# 
  4104  0291                     	;# 
  4105  0292                     	;# 
  4106  0292                     	;# 
  4107  0293                     	;# 
  4108  0293                     	;# 
  4109  0294                     	;# 
  4110  0295                     	;# 
  4111  0296                     	;# 
  4112  0296                     	;# 
  4113  0297                     	;# 
  4114  0298                     	;# 
  4115  0298                     	;# 
  4116  0299                     	;# 
  4117  0299                     	;# 
  4118  029A                     	;# 
  4119  029B                     	;# 
  4120  029C                     	;# 
  4121  029C                     	;# 
  4122  029D                     	;# 
  4123  030C                     	;# 
  4124  030C                     	;# 
  4125  030D                     	;# 
  4126  030E                     	;# 
  4127  030F                     	;# 
  4128  0310                     	;# 
  4129  0310                     	;# 
  4130  0311                     	;# 
  4131  0312                     	;# 
  4132  0313                     	;# 
  4133  0314                     	;# 
  4134  0314                     	;# 
  4135  0315                     	;# 
  4136  0316                     	;# 
  4137  0317                     	;# 
  4138  0318                     	;# 
  4139  0318                     	;# 
  4140  0319                     	;# 
  4141  031A                     	;# 
  4142  031B                     	;# 
  4143  031C                     	;# 
  4144  031C                     	;# 
  4145  031D                     	;# 
  4146  031E                     	;# 
  4147  031F                     	;# 
  4148  038C                     	;# 
  4149  038C                     	;# 
  4150  038D                     	;# 
  4151  038E                     	;# 
  4152  0390                     	;# 
  4153  0390                     	;# 
  4154  0391                     	;# 
  4155  0392                     	;# 
  4156  040C                     	;# 
  4157  040D                     	;# 
  4158  040E                     	;# 
  4159  040F                     	;# 
  4160  0410                     	;# 
  4161  0411                     	;# 
  4162  0416                     	;# 
  4163  0416                     	;# 
  4164  0417                     	;# 
  4165  0418                     	;# 
  4166  0418                     	;# 
  4167  0419                     	;# 
  4168  041A                     	;# 
  4169  041A                     	;# 
  4170  041B                     	;# 
  4171  041C                     	;# 
  4172  041C                     	;# 
  4173  041D                     	;# 
  4174  041E                     	;# 
  4175  041F                     	;# 
  4176  048C                     	;# 
  4177  048C                     	;# 
  4178  048D                     	;# 
  4179  048E                     	;# 
  4180  048F                     	;# 
  4181  048F                     	;# 
  4182  0490                     	;# 
  4183  0491                     	;# 
  4184  0492                     	;# 
  4185  0492                     	;# 
  4186  0493                     	;# 
  4187  0494                     	;# 
  4188  0495                     	;# 
  4189  0495                     	;# 
  4190  0496                     	;# 
  4191  0497                     	;# 
  4192  0498                     	;# 
  4193  0499                     	;# 
  4194  049A                     	;# 
  4195  049B                     	;# 
  4196  049C                     	;# 
  4197  049D                     	;# 
  4198  050C                     	;# 
  4199  050C                     	;# 
  4200  050D                     	;# 
  4201  050E                     	;# 
  4202  050F                     	;# 
  4203  050F                     	;# 
  4204  0510                     	;# 
  4205  0511                     	;# 
  4206  0512                     	;# 
  4207  0512                     	;# 
  4208  0513                     	;# 
  4209  0514                     	;# 
  4210  0515                     	;# 
  4211  0515                     	;# 
  4212  0516                     	;# 
  4213  0517                     	;# 
  4214  0518                     	;# 
  4215  0519                     	;# 
  4216  051A                     	;# 
  4217  051B                     	;# 
  4218  051C                     	;# 
  4219  051D                     	;# 
  4220  058C                     	;# 
  4221  058C                     	;# 
  4222  058D                     	;# 
  4223  058E                     	;# 
  4224  058F                     	;# 
  4225  058F                     	;# 
  4226  0590                     	;# 
  4227  0591                     	;# 
  4228  0592                     	;# 
  4229  0593                     	;# 
  4230  060C                     	;# 
  4231  060D                     	;# 
  4232  060E                     	;# 
  4233  060F                     	;# 
  4234  0610                     	;# 
  4235  0611                     	;# 
  4236  0612                     	;# 
  4237  0613                     	;# 
  4238  0614                     	;# 
  4239  0616                     	;# 
  4240  0617                     	;# 
  4241  0618                     	;# 
  4242  0619                     	;# 
  4243  061A                     	;# 
  4244  061B                     	;# 
  4245  061C                     	;# 
  4246  061D                     	;# 
  4247  061E                     	;# 
  4248  068C                     	;# 
  4249  068D                     	;# 
  4250  068E                     	;# 
  4251  068F                     	;# 
  4252  0690                     	;# 
  4253  0691                     	;# 
  4254  0692                     	;# 
  4255  0693                     	;# 
  4256  0694                     	;# 
  4257  070C                     	;# 
  4258  070D                     	;# 
  4259  070E                     	;# 
  4260  070F                     	;# 
  4261  0710                     	;# 
  4262  0711                     	;# 
  4263  0712                     	;# 
  4264  0713                     	;# 
  4265  0714                     	;# 
  4266  0716                     	;# 
  4267  0717                     	;# 
  4268  0718                     	;# 
  4269  0719                     	;# 
  4270  071A                     	;# 
  4271  071B                     	;# 
  4272  071C                     	;# 
  4273  071D                     	;# 
  4274  071E                     	;# 
  4275  0796                     	;# 
  4276  0797                     	;# 
  4277  0798                     	;# 
  4278  0799                     	;# 
  4279  079A                     	;# 
  4280  079B                     	;# 
  4281  080C                     	;# 
  4282  080D                     	;# 
  4283  080E                     	;# 
  4284  080F                     	;# 
  4285  0810                     	;# 
  4286  0811                     	;# 
  4287  0812                     	;# 
  4288  0813                     	;# 
  4289  0814                     	;# 
  4290  081A                     	;# 
  4291  081B                     	;# 
  4292  081C                     	;# 
  4293  081D                     	;# 
  4294  081E                     	;# 
  4295  081F                     	;# 
  4296  088C                     	;# 
  4297  088D                     	;# 
  4298  088E                     	;# 
  4299  088F                     	;# 
  4300  0890                     	;# 
  4301  0891                     	;# 
  4302  0892                     	;# 
  4303  0893                     	;# 
  4304  0895                     	;# 
  4305  0896                     	;# 
  4306  0897                     	;# 
  4307  0898                     	;# 
  4308  0899                     	;# 
  4309  089A                     	;# 
  4310  089B                     	;# 
  4311  090C                     	;# 
  4312  090E                     	;# 
  4313  090F                     	;# 
  4314  091F                     	;# 
  4315  091F                     	;# 
  4316  098F                     	;# 
  4317  098F                     	;# 
  4318  0990                     	;# 
  4319  0991                     	;# 
  4320  0992                     	;# 
  4321  0993                     	;# 
  4322  0994                     	;# 
  4323  0995                     	;# 
  4324  0996                     	;# 
  4325  0997                     	;# 
  4326  0E0F                     	;# 
  4327  0E10                     	;# 
  4328  0E11                     	;# 
  4329  0E12                     	;# 
  4330  0E13                     	;# 
  4331  0E14                     	;# 
  4332  0E15                     	;# 
  4333  0E16                     	;# 
  4334  0E17                     	;# 
  4335  0E18                     	;# 
  4336  0E19                     	;# 
  4337  0E1A                     	;# 
  4338  0E1B                     	;# 
  4339  0E1C                     	;# 
  4340  0E1D                     	;# 
  4341  0E1E                     	;# 
  4342  0E1F                     	;# 
  4343  0E20                     	;# 
  4344  0E21                     	;# 
  4345  0E22                     	;# 
  4346  0E23                     	;# 
  4347  0E24                     	;# 
  4348  0E25                     	;# 
  4349  0E26                     	;# 
  4350  0E27                     	;# 
  4351  0E28                     	;# 
  4352  0E29                     	;# 
  4353  0E2A                     	;# 
  4354  0E2B                     	;# 
  4355  0E2C                     	;# 
  4356  0E2D                     	;# 
  4357  0E2E                     	;# 
  4358  0E2F                     	;# 
  4359  0E30                     	;# 
  4360  0E31                     	;# 
  4361  0E32                     	;# 
  4362  0E33                     	;# 
  4363  0E34                     	;# 
  4364  0E35                     	;# 
  4365  0E36                     	;# 
  4366  0E37                     	;# 
  4367  0E8F                     	;# 
  4368  0E90                     	;# 
  4369  0E91                     	;# 
  4370  0E92                     	;# 
  4371  0E93                     	;# 
  4372  0E94                     	;# 
  4373  0E95                     	;# 
  4374  0E96                     	;# 
  4375  0E97                     	;# 
  4376  0E9C                     	;# 
  4377  0E9D                     	;# 
  4378  0E9E                     	;# 
  4379  0EA1                     	;# 
  4380  0EA2                     	;# 
  4381  0EA3                     	;# 
  4382  0EA4                     	;# 
  4383  0EA5                     	;# 
  4384  0EA9                     	;# 
  4385  0EAA                     	;# 
  4386  0EAB                     	;# 
  4387  0EAC                     	;# 
  4388  0EB1                     	;# 
  4389  0EB2                     	;# 
  4390  0EB3                     	;# 
  4391  0EB8                     	;# 
  4392  0EB9                     	;# 
  4393  0EBA                     	;# 
  4394  0EBB                     	;# 
  4395  0EBC                     	;# 
  4396  0EBD                     	;# 
  4397  0EBE                     	;# 
  4398  0EC3                     	;# 
  4399  0EC5                     	;# 
  4400  0EC6                     	;# 
  4401  0EC7                     	;# 
  4402  0EC8                     	;# 
  4403  0EC9                     	;# 
  4404  0ECA                     	;# 
  4405  0ECB                     	;# 
  4406  0ECC                     	;# 
  4407  0F10                     	;# 
  4408  0F11                     	;# 
  4409  0F12                     	;# 
  4410  0F13                     	;# 
  4411  0F14                     	;# 
  4412  0F15                     	;# 
  4413  0F16                     	;# 
  4414  0F17                     	;# 
  4415  0F18                     	;# 
  4416  0F19                     	;# 
  4417  0F1A                     	;# 
  4418  0F1B                     	;# 
  4419  0F1C                     	;# 
  4420  0F1D                     	;# 
  4421  0F1E                     	;# 
  4422  0F1F                     	;# 
  4423  0F20                     	;# 
  4424  0F21                     	;# 
  4425  0F22                     	;# 
  4426  0F23                     	;# 
  4427  0F24                     	;# 
  4428  0F25                     	;# 
  4429  0F26                     	;# 
  4430  0F27                     	;# 
  4431  0F28                     	;# 
  4432  0F29                     	;# 
  4433  0F2A                     	;# 
  4434  0F2B                     	;# 
  4435  0F2C                     	;# 
  4436  0F2D                     	;# 
  4437  0F2E                     	;# 
  4438  0F2F                     	;# 
  4439  0F30                     	;# 
  4440  0F31                     	;# 
  4441  0F32                     	;# 
  4442  0F38                     	;# 
  4443  0F39                     	;# 
  4444  0F3A                     	;# 
  4445  0F3B                     	;# 
  4446  0F3C                     	;# 
  4447  0F3D                     	;# 
  4448  0F3E                     	;# 
  4449  0F3F                     	;# 
  4450  0F40                     	;# 
  4451  0F41                     	;# 
  4452  0F43                     	;# 
  4453  0F44                     	;# 
  4454  0F45                     	;# 
  4455  0F46                     	;# 
  4456  0F47                     	;# 
  4457  0F48                     	;# 
  4458  0F49                     	;# 
  4459  0F4A                     	;# 
  4460  0F4B                     	;# 
  4461  0F4C                     	;# 
  4462  0F4E                     	;# 
  4463  0F4F                     	;# 
  4464  0F50                     	;# 
  4465  0F51                     	;# 
  4466  0F52                     	;# 
  4467  0F53                     	;# 
  4468  0F54                     	;# 
  4469  0F55                     	;# 
  4470  0F56                     	;# 
  4471  0F57                     	;# 
  4472  0F59                     	;# 
  4473  0F5A                     	;# 
  4474  0F5B                     	;# 
  4475  0F5C                     	;# 
  4476  0F5D                     	;# 
  4477  0F61                     	;# 
  4478  0F62                     	;# 
  4479  0F64                     	;# 
  4480  0F65                     	;# 
  4481  0F66                     	;# 
  4482  0F67                     	;# 
  4483  0F68                     	;# 
  4484  0F69                     	;# 
  4485  0F6A                     	;# 
  4486  0F6B                     	;# 
  4487  0F6C                     	;# 
  4488  0F6D                     	;# 
  4489  0FE4                     	;# 
  4490  0FE5                     	;# 
  4491  0FE6                     	;# 
  4492  0FE7                     	;# 
  4493  0FE8                     	;# 
  4494  0FE9                     	;# 
  4495  0FEA                     	;# 
  4496  0FEB                     	;# 
  4497  0FED                     	;# 
  4498  0FEE                     	;# 
  4499  0FEF                     	;# 
  4500  0000                     	;# 
  4501  0001                     	;# 
  4502  0002                     	;# 
  4503  0003                     	;# 
  4504  0004                     	;# 
  4505  0005                     	;# 
  4506  0006                     	;# 
  4507  0007                     	;# 
  4508  0008                     	;# 
  4509  0009                     	;# 
  4510  000A                     	;# 
  4511  000B                     	;# 
  4512  000C                     	;# 
  4513  000D                     	;# 
  4514  000E                     	;# 
  4515  000F                     	;# 
  4516  0010                     	;# 
  4517  0011                     	;# 
  4518  0012                     	;# 
  4519  0013                     	;# 
  4520  0014                     	;# 
  4521  0015                     	;# 
  4522  0016                     	;# 
  4523  0017                     	;# 
  4524  0018                     	;# 
  4525  0019                     	;# 
  4526  001A                     	;# 
  4527  001C                     	;# 
  4528  001C                     	;# 
  4529  001D                     	;# 
  4530  001D                     	;# 
  4531  001E                     	;# 
  4532  001F                     	;# 
  4533  008C                     	;# 
  4534  008C                     	;# 
  4535  008D                     	;# 
  4536  008E                     	;# 
  4537  008E                     	;# 
  4538  008F                     	;# 
  4539  0090                     	;# 
  4540  0090                     	;# 
  4541  0091                     	;# 
  4542  0093                     	;# 
  4543  0094                     	;# 
  4544  0095                     	;# 
  4545  0096                     	;# 
  4546  0097                     	;# 
  4547  0098                     	;# 
  4548  0099                     	;# 
  4549  009A                     	;# 
  4550  009B                     	;# 
  4551  009C                     	;# 
  4552  009D                     	;# 
  4553  009E                     	;# 
  4554  010C                     	;# 
  4555  010D                     	;# 
  4556  010E                     	;# 
  4557  010E                     	;# 
  4558  010F                     	;# 
  4559  0110                     	;# 
  4560  0110                     	;# 
  4561  0111                     	;# 
  4562  0112                     	;# 
  4563  0112                     	;# 
  4564  0113                     	;# 
  4565  0114                     	;# 
  4566  0114                     	;# 
  4567  0115                     	;# 
  4568  0116                     	;# 
  4569  0116                     	;# 
  4570  0117                     	;# 
  4571  0119                     	;# 
  4572  0119                     	;# 
  4573  0119                     	;# 
  4574  011A                     	;# 
  4575  011A                     	;# 
  4576  011A                     	;# 
  4577  011B                     	;# 
  4578  011B                     	;# 
  4579  011B                     	;# 
  4580  011B                     	;# 
  4581  011B                     	;# 
  4582  011C                     	;# 
  4583  011C                     	;# 
  4584  011C                     	;# 
  4585  011D                     	;# 
  4586  011D                     	;# 
  4587  011D                     	;# 
  4588  011E                     	;# 
  4589  011E                     	;# 
  4590  011E                     	;# 
  4591  011F                     	;# 
  4592  011F                     	;# 
  4593  011F                     	;# 
  4594  011F                     	;# 
  4595  011F                     	;# 
  4596  018C                     	;# 
  4597  018D                     	;# 
  4598  018E                     	;# 
  4599  018F                     	;# 
  4600  0190                     	;# 
  4601  0191                     	;# 
  4602  0192                     	;# 
  4603  0196                     	;# 
  4604  0197                     	;# 
  4605  0198                     	;# 
  4606  0199                     	;# 
  4607  019A                     	;# 
  4608  019B                     	;# 
  4609  019C                     	;# 
  4610  020C                     	;# 
  4611  020C                     	;# 
  4612  020D                     	;# 
  4613  020E                     	;# 
  4614  020F                     	;# 
  4615  020F                     	;# 
  4616  0210                     	;# 
  4617  0210                     	;# 
  4618  0211                     	;# 
  4619  0211                     	;# 
  4620  0212                     	;# 
  4621  0212                     	;# 
  4622  0213                     	;# 
  4623  0214                     	;# 
  4624  0215                     	;# 
  4625  0215                     	;# 
  4626  0216                     	;# 
  4627  0216                     	;# 
  4628  0217                     	;# 
  4629  0217                     	;# 
  4630  0218                     	;# 
  4631  0218                     	;# 
  4632  0219                     	;# 
  4633  021A                     	;# 
  4634  021B                     	;# 
  4635  021B                     	;# 
  4636  021C                     	;# 
  4637  021C                     	;# 
  4638  021D                     	;# 
  4639  021D                     	;# 
  4640  021E                     	;# 
  4641  021F                     	;# 
  4642  028C                     	;# 
  4643  028C                     	;# 
  4644  028D                     	;# 
  4645  028D                     	;# 
  4646  028E                     	;# 
  4647  028F                     	;# 
  4648  0290                     	;# 
  4649  0290                     	;# 
  4650  0291                     	;# 
  4651  0292                     	;# 
  4652  0292                     	;# 
  4653  0293                     	;# 
  4654  0293                     	;# 
  4655  0294                     	;# 
  4656  0295                     	;# 
  4657  0296                     	;# 
  4658  0296                     	;# 
  4659  0297                     	;# 
  4660  0298                     	;# 
  4661  0298                     	;# 
  4662  0299                     	;# 
  4663  0299                     	;# 
  4664  029A                     	;# 
  4665  029B                     	;# 
  4666  029C                     	;# 
  4667  029C                     	;# 
  4668  029D                     	;# 
  4669  030C                     	;# 
  4670  030C                     	;# 
  4671  030D                     	;# 
  4672  030E                     	;# 
  4673  030F                     	;# 
  4674  0310                     	;# 
  4675  0310                     	;# 
  4676  0311                     	;# 
  4677  0312                     	;# 
  4678  0313                     	;# 
  4679  0314                     	;# 
  4680  0314                     	;# 
  4681  0315                     	;# 
  4682  0316                     	;# 
  4683  0317                     	;# 
  4684  0318                     	;# 
  4685  0318                     	;# 
  4686  0319                     	;# 
  4687  031A                     	;# 
  4688  031B                     	;# 
  4689  031C                     	;# 
  4690  031C                     	;# 
  4691  031D                     	;# 
  4692  031E                     	;# 
  4693  031F                     	;# 
  4694  038C                     	;# 
  4695  038C                     	;# 
  4696  038D                     	;# 
  4697  038E                     	;# 
  4698  0390                     	;# 
  4699  0390                     	;# 
  4700  0391                     	;# 
  4701  0392                     	;# 
  4702  040C                     	;# 
  4703  040D                     	;# 
  4704  040E                     	;# 
  4705  040F                     	;# 
  4706  0410                     	;# 
  4707  0411                     	;# 
  4708  0416                     	;# 
  4709  0416                     	;# 
  4710  0417                     	;# 
  4711  0418                     	;# 
  4712  0418                     	;# 
  4713  0419                     	;# 
  4714  041A                     	;# 
  4715  041A                     	;# 
  4716  041B                     	;# 
  4717  041C                     	;# 
  4718  041C                     	;# 
  4719  041D                     	;# 
  4720  041E                     	;# 
  4721  041F                     	;# 
  4722  048C                     	;# 
  4723  048C                     	;# 
  4724  048D                     	;# 
  4725  048E                     	;# 
  4726  048F                     	;# 
  4727  048F                     	;# 
  4728  0490                     	;# 
  4729  0491                     	;# 
  4730  0492                     	;# 
  4731  0492                     	;# 
  4732  0493                     	;# 
  4733  0494                     	;# 
  4734  0495                     	;# 
  4735  0495                     	;# 
  4736  0496                     	;# 
  4737  0497                     	;# 
  4738  0498                     	;# 
  4739  0499                     	;# 
  4740  049A                     	;# 
  4741  049B                     	;# 
  4742  049C                     	;# 
  4743  049D                     	;# 
  4744  050C                     	;# 
  4745  050C                     	;# 
  4746  050D                     	;# 
  4747  050E                     	;# 
  4748  050F                     	;# 
  4749  050F                     	;# 
  4750  0510                     	;# 
  4751  0511                     	;# 
  4752  0512                     	;# 
  4753  0512                     	;# 
  4754  0513                     	;# 
  4755  0514                     	;# 
  4756  0515                     	;# 
  4757  0515                     	;# 
  4758  0516                     	;# 
  4759  0517                     	;# 
  4760  0518                     	;# 
  4761  0519                     	;# 
  4762  051A                     	;# 
  4763  051B                     	;# 
  4764  051C                     	;# 
  4765  051D                     	;# 
  4766  058C                     	;# 
  4767  058C                     	;# 
  4768  058D                     	;# 
  4769  058E                     	;# 
  4770  058F                     	;# 
  4771  058F                     	;# 
  4772  0590                     	;# 
  4773  0591                     	;# 
  4774  0592                     	;# 
  4775  0593                     	;# 
  4776  060C                     	;# 
  4777  060D                     	;# 
  4778  060E                     	;# 
  4779  060F                     	;# 
  4780  0610                     	;# 
  4781  0611                     	;# 
  4782  0612                     	;# 
  4783  0613                     	;# 
  4784  0614                     	;# 
  4785  0616                     	;# 
  4786  0617                     	;# 
  4787  0618                     	;# 
  4788  0619                     	;# 
  4789  061A                     	;# 
  4790  061B                     	;# 
  4791  061C                     	;# 
  4792  061D                     	;# 
  4793  061E                     	;# 
  4794  068C                     	;# 
  4795  068D                     	;# 
  4796  068E                     	;# 
  4797  068F                     	;# 
  4798  0690                     	;# 
  4799  0691                     	;# 
  4800  0692                     	;# 
  4801  0693                     	;# 
  4802  0694                     	;# 
  4803  070C                     	;# 
  4804  070D                     	;# 
  4805  070E                     	;# 
  4806  070F                     	;# 
  4807  0710                     	;# 
  4808  0711                     	;# 
  4809  0712                     	;# 
  4810  0713                     	;# 
  4811  0714                     	;# 
  4812  0716                     	;# 
  4813  0717                     	;# 
  4814  0718                     	;# 
  4815  0719                     	;# 
  4816  071A                     	;# 
  4817  071B                     	;# 
  4818  071C                     	;# 
  4819  071D                     	;# 
  4820  071E                     	;# 
  4821  0796                     	;# 
  4822  0797                     	;# 
  4823  0798                     	;# 
  4824  0799                     	;# 
  4825  079A                     	;# 
  4826  079B                     	;# 
  4827  080C                     	;# 
  4828  080D                     	;# 
  4829  080E                     	;# 
  4830  080F                     	;# 
  4831  0810                     	;# 
  4832  0811                     	;# 
  4833  0812                     	;# 
  4834  0813                     	;# 
  4835  0814                     	;# 
  4836  081A                     	;# 
  4837  081B                     	;# 
  4838  081C                     	;# 
  4839  081D                     	;# 
  4840  081E                     	;# 
  4841  081F                     	;# 
  4842  088C                     	;# 
  4843  088D                     	;# 
  4844  088E                     	;# 
  4845  088F                     	;# 
  4846  0890                     	;# 
  4847  0891                     	;# 
  4848  0892                     	;# 
  4849  0893                     	;# 
  4850  0895                     	;# 
  4851  0896                     	;# 
  4852  0897                     	;# 
  4853  0898                     	;# 
  4854  0899                     	;# 
  4855  089A                     	;# 
  4856  089B                     	;# 
  4857  090C                     	;# 
  4858  090E                     	;# 
  4859  090F                     	;# 
  4860  091F                     	;# 
  4861  091F                     	;# 
  4862  098F                     	;# 
  4863  098F                     	;# 
  4864  0990                     	;# 
  4865  0991                     	;# 
  4866  0992                     	;# 
  4867  0993                     	;# 
  4868  0994                     	;# 
  4869  0995                     	;# 
  4870  0996                     	;# 
  4871  0997                     	;# 
  4872  0E0F                     	;# 
  4873  0E10                     	;# 
  4874  0E11                     	;# 
  4875  0E12                     	;# 
  4876  0E13                     	;# 
  4877  0E14                     	;# 
  4878  0E15                     	;# 
  4879  0E16                     	;# 
  4880  0E17                     	;# 
  4881  0E18                     	;# 
  4882  0E19                     	;# 
  4883  0E1A                     	;# 
  4884  0E1B                     	;# 
  4885  0E1C                     	;# 
  4886  0E1D                     	;# 
  4887  0E1E                     	;# 
  4888  0E1F                     	;# 
  4889  0E20                     	;# 
  4890  0E21                     	;# 
  4891  0E22                     	;# 
  4892  0E23                     	;# 
  4893  0E24                     	;# 
  4894  0E25                     	;# 
  4895  0E26                     	;# 
  4896  0E27                     	;# 
  4897  0E28                     	;# 
  4898  0E29                     	;# 
  4899  0E2A                     	;# 
  4900  0E2B                     	;# 
  4901  0E2C                     	;# 
  4902  0E2D                     	;# 
  4903  0E2E                     	;# 
  4904  0E2F                     	;# 
  4905  0E30                     	;# 
  4906  0E31                     	;# 
  4907  0E32                     	;# 
  4908  0E33                     	;# 
  4909  0E34                     	;# 
  4910  0E35                     	;# 
  4911  0E36                     	;# 
  4912  0E37                     	;# 
  4913  0E8F                     	;# 
  4914  0E90                     	;# 
  4915  0E91                     	;# 
  4916  0E92                     	;# 
  4917  0E93                     	;# 
  4918  0E94                     	;# 
  4919  0E95                     	;# 
  4920  0E96                     	;# 
  4921  0E97                     	;# 
  4922  0E9C                     	;# 
  4923  0E9D                     	;# 
  4924  0E9E                     	;# 
  4925  0EA1                     	;# 
  4926  0EA2                     	;# 
  4927  0EA3                     	;# 
  4928  0EA4                     	;# 
  4929  0EA5                     	;# 
  4930  0EA9                     	;# 
  4931  0EAA                     	;# 
  4932  0EAB                     	;# 
  4933  0EAC                     	;# 
  4934  0EB1                     	;# 
  4935  0EB2                     	;# 
  4936  0EB3                     	;# 
  4937  0EB8                     	;# 
  4938  0EB9                     	;# 
  4939  0EBA                     	;# 
  4940  0EBB                     	;# 
  4941  0EBC                     	;# 
  4942  0EBD                     	;# 
  4943  0EBE                     	;# 
  4944  0EC3                     	;# 
  4945  0EC5                     	;# 
  4946  0EC6                     	;# 
  4947  0EC7                     	;# 
  4948  0EC8                     	;# 
  4949  0EC9                     	;# 
  4950  0ECA                     	;# 
  4951  0ECB                     	;# 
  4952  0ECC                     	;# 
  4953  0F10                     	;# 
  4954  0F11                     	;# 
  4955  0F12                     	;# 
  4956  0F13                     	;# 
  4957  0F14                     	;# 
  4958  0F15                     	;# 
  4959  0F16                     	;# 
  4960  0F17                     	;# 
  4961  0F18                     	;# 
  4962  0F19                     	;# 
  4963  0F1A                     	;# 
  4964  0F1B                     	;# 
  4965  0F1C                     	;# 
  4966  0F1D                     	;# 
  4967  0F1E                     	;# 
  4968  0F1F                     	;# 
  4969  0F20                     	;# 
  4970  0F21                     	;# 
  4971  0F22                     	;# 
  4972  0F23                     	;# 
  4973  0F24                     	;# 
  4974  0F25                     	;# 
  4975  0F26                     	;# 
  4976  0F27                     	;# 
  4977  0F28                     	;# 
  4978  0F29                     	;# 
  4979  0F2A                     	;# 
  4980  0F2B                     	;# 
  4981  0F2C                     	;# 
  4982  0F2D                     	;# 
  4983  0F2E                     	;# 
  4984  0F2F                     	;# 
  4985  0F30                     	;# 
  4986  0F31                     	;# 
  4987  0F32                     	;# 
  4988  0F38                     	;# 
  4989  0F39                     	;# 
  4990  0F3A                     	;# 
  4991  0F3B                     	;# 
  4992  0F3C                     	;# 
  4993  0F3D                     	;# 
  4994  0F3E                     	;# 
  4995  0F3F                     	;# 
  4996  0F40                     	;# 
  4997  0F41                     	;# 
  4998  0F43                     	;# 
  4999  0F44                     	;# 
  5000  0F45                     	;# 
  5001  0F46                     	;# 
  5002  0F47                     	;# 
  5003  0F48                     	;# 
  5004  0F49                     	;# 
  5005  0F4A                     	;# 
  5006  0F4B                     	;# 
  5007  0F4C                     	;# 
  5008  0F4E                     	;# 
  5009  0F4F                     	;# 
  5010  0F50                     	;# 
  5011  0F51                     	;# 
  5012  0F52                     	;# 
  5013  0F53                     	;# 
  5014  0F54                     	;# 
  5015  0F55                     	;# 
  5016  0F56                     	;# 
  5017  0F57                     	;# 
  5018  0F59                     	;# 
  5019  0F5A                     	;# 
  5020  0F5B                     	;# 
  5021  0F5C                     	;# 
  5022  0F5D                     	;# 
  5023  0F61                     	;# 
  5024  0F62                     	;# 
  5025  0F64                     	;# 
  5026  0F65                     	;# 
  5027  0F66                     	;# 
  5028  0F67                     	;# 
  5029  0F68                     	;# 
  5030  0F69                     	;# 
  5031  0F6A                     	;# 
  5032  0F6B                     	;# 
  5033  0F6C                     	;# 
  5034  0F6D                     	;# 
  5035  0FE4                     	;# 
  5036  0FE5                     	;# 
  5037  0FE6                     	;# 
  5038  0FE7                     	;# 
  5039  0FE8                     	;# 
  5040  0FE9                     	;# 
  5041  0FEA                     	;# 
  5042  0FEB                     	;# 
  5043  0FED                     	;# 
  5044  0FEE                     	;# 
  5045  0FEF                     	;# 
  5046  0000                     	;# 
  5047  0001                     	;# 
  5048  0002                     	;# 
  5049  0003                     	;# 
  5050  0004                     	;# 
  5051  0005                     	;# 
  5052  0006                     	;# 
  5053  0007                     	;# 
  5054  0008                     	;# 
  5055  0009                     	;# 
  5056  000A                     	;# 
  5057  000B                     	;# 
  5058  000C                     	;# 
  5059  000D                     	;# 
  5060  000E                     	;# 
  5061  000F                     	;# 
  5062  0010                     	;# 
  5063  0011                     	;# 
  5064  0012                     	;# 
  5065  0013                     	;# 
  5066  0014                     	;# 
  5067  0015                     	;# 
  5068  0016                     	;# 
  5069  0017                     	;# 
  5070  0018                     	;# 
  5071  0019                     	;# 
  5072  001A                     	;# 
  5073  001C                     	;# 
  5074  001C                     	;# 
  5075  001D                     	;# 
  5076  001D                     	;# 
  5077  001E                     	;# 
  5078  001F                     	;# 
  5079  008C                     	;# 
  5080  008C                     	;# 
  5081  008D                     	;# 
  5082  008E                     	;# 
  5083  008E                     	;# 
  5084  008F                     	;# 
  5085  0090                     	;# 
  5086  0090                     	;# 
  5087  0091                     	;# 
  5088  0093                     	;# 
  5089  0094                     	;# 
  5090  0095                     	;# 
  5091  0096                     	;# 
  5092  0097                     	;# 
  5093  0098                     	;# 
  5094  0099                     	;# 
  5095  009A                     	;# 
  5096  009B                     	;# 
  5097  009C                     	;# 
  5098  009D                     	;# 
  5099  009E                     	;# 
  5100  010C                     	;# 
  5101  010D                     	;# 
  5102  010E                     	;# 
  5103  010E                     	;# 
  5104  010F                     	;# 
  5105  0110                     	;# 
  5106  0110                     	;# 
  5107  0111                     	;# 
  5108  0112                     	;# 
  5109  0112                     	;# 
  5110  0113                     	;# 
  5111  0114                     	;# 
  5112  0114                     	;# 
  5113  0115                     	;# 
  5114  0116                     	;# 
  5115  0116                     	;# 
  5116  0117                     	;# 
  5117  0119                     	;# 
  5118  0119                     	;# 
  5119  0119                     	;# 
  5120  011A                     	;# 
  5121  011A                     	;# 
  5122  011A                     	;# 
  5123  011B                     	;# 
  5124  011B                     	;# 
  5125  011B                     	;# 
  5126  011B                     	;# 
  5127  011B                     	;# 
  5128  011C                     	;# 
  5129  011C                     	;# 
  5130  011C                     	;# 
  5131  011D                     	;# 
  5132  011D                     	;# 
  5133  011D                     	;# 
  5134  011E                     	;# 
  5135  011E                     	;# 
  5136  011E                     	;# 
  5137  011F                     	;# 
  5138  011F                     	;# 
  5139  011F                     	;# 
  5140  011F                     	;# 
  5141  011F                     	;# 
  5142  018C                     	;# 
  5143  018D                     	;# 
  5144  018E                     	;# 
  5145  018F                     	;# 
  5146  0190                     	;# 
  5147  0191                     	;# 
  5148  0192                     	;# 
  5149  0196                     	;# 
  5150  0197                     	;# 
  5151  0198                     	;# 
  5152  0199                     	;# 
  5153  019A                     	;# 
  5154  019B                     	;# 
  5155  019C                     	;# 
  5156  020C                     	;# 
  5157  020C                     	;# 
  5158  020D                     	;# 
  5159  020E                     	;# 
  5160  020F                     	;# 
  5161  020F                     	;# 
  5162  0210                     	;# 
  5163  0210                     	;# 
  5164  0211                     	;# 
  5165  0211                     	;# 
  5166  0212                     	;# 
  5167  0212                     	;# 
  5168  0213                     	;# 
  5169  0214                     	;# 
  5170  0215                     	;# 
  5171  0215                     	;# 
  5172  0216                     	;# 
  5173  0216                     	;# 
  5174  0217                     	;# 
  5175  0217                     	;# 
  5176  0218                     	;# 
  5177  0218                     	;# 
  5178  0219                     	;# 
  5179  021A                     	;# 
  5180  021B                     	;# 
  5181  021B                     	;# 
  5182  021C                     	;# 
  5183  021C                     	;# 
  5184  021D                     	;# 
  5185  021D                     	;# 
  5186  021E                     	;# 
  5187  021F                     	;# 
  5188  028C                     	;# 
  5189  028C                     	;# 
  5190  028D                     	;# 
  5191  028D                     	;# 
  5192  028E                     	;# 
  5193  028F                     	;# 
  5194  0290                     	;# 
  5195  0290                     	;# 
  5196  0291                     	;# 
  5197  0292                     	;# 
  5198  0292                     	;# 
  5199  0293                     	;# 
  5200  0293                     	;# 
  5201  0294                     	;# 
  5202  0295                     	;# 
  5203  0296                     	;# 
  5204  0296                     	;# 
  5205  0297                     	;# 
  5206  0298                     	;# 
  5207  0298                     	;# 
  5208  0299                     	;# 
  5209  0299                     	;# 
  5210  029A                     	;# 
  5211  029B                     	;# 
  5212  029C                     	;# 
  5213  029C                     	;# 
  5214  029D                     	;# 
  5215  030C                     	;# 
  5216  030C                     	;# 
  5217  030D                     	;# 
  5218  030E                     	;# 
  5219  030F                     	;# 
  5220  0310                     	;# 
  5221  0310                     	;# 
  5222  0311                     	;# 
  5223  0312                     	;# 
  5224  0313                     	;# 
  5225  0314                     	;# 
  5226  0314                     	;# 
  5227  0315                     	;# 
  5228  0316                     	;# 
  5229  0317                     	;# 
  5230  0318                     	;# 
  5231  0318                     	;# 
  5232  0319                     	;# 
  5233  031A                     	;# 
  5234  031B                     	;# 
  5235  031C                     	;# 
  5236  031C                     	;# 
  5237  031D                     	;# 
  5238  031E                     	;# 
  5239  031F                     	;# 
  5240  038C                     	;# 
  5241  038C                     	;# 
  5242  038D                     	;# 
  5243  038E                     	;# 
  5244  0390                     	;# 
  5245  0390                     	;# 
  5246  0391                     	;# 
  5247  0392                     	;# 
  5248  040C                     	;# 
  5249  040D                     	;# 
  5250  040E                     	;# 
  5251  040F                     	;# 
  5252  0410                     	;# 
  5253  0411                     	;# 
  5254  0416                     	;# 
  5255  0416                     	;# 
  5256  0417                     	;# 
  5257  0418                     	;# 
  5258  0418                     	;# 
  5259  0419                     	;# 
  5260  041A                     	;# 
  5261  041A                     	;# 
  5262  041B                     	;# 
  5263  041C                     	;# 
  5264  041C                     	;# 
  5265  041D                     	;# 
  5266  041E                     	;# 
  5267  041F                     	;# 
  5268  048C                     	;# 
  5269  048C                     	;# 
  5270  048D                     	;# 
  5271  048E                     	;# 
  5272  048F                     	;# 
  5273  048F                     	;# 
  5274  0490                     	;# 
  5275  0491                     	;# 
  5276  0492                     	;# 
  5277  0492                     	;# 
  5278  0493                     	;# 
  5279  0494                     	;# 
  5280  0495                     	;# 
  5281  0495                     	;# 
  5282  0496                     	;# 
  5283  0497                     	;# 
  5284  0498                     	;# 
  5285  0499                     	;# 
  5286  049A                     	;# 
  5287  049B                     	;# 
  5288  049C                     	;# 
  5289  049D                     	;# 
  5290  050C                     	;# 
  5291  050C                     	;# 
  5292  050D                     	;# 
  5293  050E                     	;# 
  5294  050F                     	;# 
  5295  050F                     	;# 
  5296  0510                     	;# 
  5297  0511                     	;# 
  5298  0512                     	;# 
  5299  0512                     	;# 
  5300  0513                     	;# 
  5301  0514                     	;# 
  5302  0515                     	;# 
  5303  0515                     	;# 
  5304  0516                     	;# 
  5305  0517                     	;# 
  5306  0518                     	;# 
  5307  0519                     	;# 
  5308  051A                     	;# 
  5309  051B                     	;# 
  5310  051C                     	;# 
  5311  051D                     	;# 
  5312  058C                     	;# 
  5313  058C                     	;# 
  5314  058D                     	;# 
  5315  058E                     	;# 
  5316  058F                     	;# 
  5317  058F                     	;# 
  5318  0590                     	;# 
  5319  0591                     	;# 
  5320  0592                     	;# 
  5321  0593                     	;# 
  5322  060C                     	;# 
  5323  060D                     	;# 
  5324  060E                     	;# 
  5325  060F                     	;# 
  5326  0610                     	;# 
  5327  0611                     	;# 
  5328  0612                     	;# 
  5329  0613                     	;# 
  5330  0614                     	;# 
  5331  0616                     	;# 
  5332  0617                     	;# 
  5333  0618                     	;# 
  5334  0619                     	;# 
  5335  061A                     	;# 
  5336  061B                     	;# 
  5337  061C                     	;# 
  5338  061D                     	;# 
  5339  061E                     	;# 
  5340  068C                     	;# 
  5341  068D                     	;# 
  5342  068E                     	;# 
  5343  068F                     	;# 
  5344  0690                     	;# 
  5345  0691                     	;# 
  5346  0692                     	;# 
  5347  0693                     	;# 
  5348  0694                     	;# 
  5349  070C                     	;# 
  5350  070D                     	;# 
  5351  070E                     	;# 
  5352  070F                     	;# 
  5353  0710                     	;# 
  5354  0711                     	;# 
  5355  0712                     	;# 
  5356  0713                     	;# 
  5357  0714                     	;# 
  5358  0716                     	;# 
  5359  0717                     	;# 
  5360  0718                     	;# 
  5361  0719                     	;# 
  5362  071A                     	;# 
  5363  071B                     	;# 
  5364  071C                     	;# 
  5365  071D                     	;# 
  5366  071E                     	;# 
  5367  0796                     	;# 
  5368  0797                     	;# 
  5369  0798                     	;# 
  5370  0799                     	;# 
  5371  079A                     	;# 
  5372  079B                     	;# 
  5373  080C                     	;# 
  5374  080D                     	;# 
  5375  080E                     	;# 
  5376  080F                     	;# 
  5377  0810                     	;# 
  5378  0811                     	;# 
  5379  0812                     	;# 
  5380  0813                     	;# 
  5381  0814                     	;# 
  5382  081A                     	;# 
  5383  081B                     	;# 
  5384  081C                     	;# 
  5385  081D                     	;# 
  5386  081E                     	;# 
  5387  081F                     	;# 
  5388  088C                     	;# 
  5389  088D                     	;# 
  5390  088E                     	;# 
  5391  088F                     	;# 
  5392  0890                     	;# 
  5393  0891                     	;# 
  5394  0892                     	;# 
  5395  0893                     	;# 
  5396  0895                     	;# 
  5397  0896                     	;# 
  5398  0897                     	;# 
  5399  0898                     	;# 
  5400  0899                     	;# 
  5401  089A                     	;# 
  5402  089B                     	;# 
  5403  090C                     	;# 
  5404  090E                     	;# 
  5405  090F                     	;# 
  5406  091F                     	;# 
  5407  091F                     	;# 
  5408  098F                     	;# 
  5409  098F                     	;# 
  5410  0990                     	;# 
  5411  0991                     	;# 
  5412  0992                     	;# 
  5413  0993                     	;# 
  5414  0994                     	;# 
  5415  0995                     	;# 
  5416  0996                     	;# 
  5417  0997                     	;# 
  5418  0E0F                     	;# 
  5419  0E10                     	;# 
  5420  0E11                     	;# 
  5421  0E12                     	;# 
  5422  0E13                     	;# 
  5423  0E14                     	;# 
  5424  0E15                     	;# 
  5425  0E16                     	;# 
  5426  0E17                     	;# 
  5427  0E18                     	;# 
  5428  0E19                     	;# 
  5429  0E1A                     	;# 
  5430  0E1B                     	;# 
  5431  0E1C                     	;# 
  5432  0E1D                     	;# 
  5433  0E1E                     	;# 
  5434  0E1F                     	;# 
  5435  0E20                     	;# 
  5436  0E21                     	;# 
  5437  0E22                     	;# 
  5438  0E23                     	;# 
  5439  0E24                     	;# 
  5440  0E25                     	;# 
  5441  0E26                     	;# 
  5442  0E27                     	;# 
  5443  0E28                     	;# 
  5444  0E29                     	;# 
  5445  0E2A                     	;# 
  5446  0E2B                     	;# 
  5447  0E2C                     	;# 
  5448  0E2D                     	;# 
  5449  0E2E                     	;# 
  5450  0E2F                     	;# 
  5451  0E30                     	;# 
  5452  0E31                     	;# 
  5453  0E32                     	;# 
  5454  0E33                     	;# 
  5455  0E34                     	;# 
  5456  0E35                     	;# 
  5457  0E36                     	;# 
  5458  0E37                     	;# 
  5459  0E8F                     	;# 
  5460  0E90                     	;# 
  5461  0E91                     	;# 
  5462  0E92                     	;# 
  5463  0E93                     	;# 
  5464  0E94                     	;# 
  5465  0E95                     	;# 
  5466  0E96                     	;# 
  5467  0E97                     	;# 
  5468  0E9C                     	;# 
  5469  0E9D                     	;# 
  5470  0E9E                     	;# 
  5471  0EA1                     	;# 
  5472  0EA2                     	;# 
  5473  0EA3                     	;# 
  5474  0EA4                     	;# 
  5475  0EA5                     	;# 
  5476  0EA9                     	;# 
  5477  0EAA                     	;# 
  5478  0EAB                     	;# 
  5479  0EAC                     	;# 
  5480  0EB1                     	;# 
  5481  0EB2                     	;# 
  5482  0EB3                     	;# 
  5483  0EB8                     	;# 
  5484  0EB9                     	;# 
  5485  0EBA                     	;# 
  5486  0EBB                     	;# 
  5487  0EBC                     	;# 
  5488  0EBD                     	;# 
  5489  0EBE                     	;# 
  5490  0EC3                     	;# 
  5491  0EC5                     	;# 
  5492  0EC6                     	;# 
  5493  0EC7                     	;# 
  5494  0EC8                     	;# 
  5495  0EC9                     	;# 
  5496  0ECA                     	;# 
  5497  0ECB                     	;# 
  5498  0ECC                     	;# 
  5499  0F10                     	;# 
  5500  0F11                     	;# 
  5501  0F12                     	;# 
  5502  0F13                     	;# 
  5503  0F14                     	;# 
  5504  0F15                     	;# 
  5505  0F16                     	;# 
  5506  0F17                     	;# 
  5507  0F18                     	;# 
  5508  0F19                     	;# 
  5509  0F1A                     	;# 
  5510  0F1B                     	;# 
  5511  0F1C                     	;# 
  5512  0F1D                     	;# 
  5513  0F1E                     	;# 
  5514  0F1F                     	;# 
  5515  0F20                     	;# 
  5516  0F21                     	;# 
  5517  0F22                     	;# 
  5518  0F23                     	;# 
  5519  0F24                     	;# 
  5520  0F25                     	;# 
  5521  0F26                     	;# 
  5522  0F27                     	;# 
  5523  0F28                     	;# 
  5524  0F29                     	;# 
  5525  0F2A                     	;# 
  5526  0F2B                     	;# 
  5527  0F2C                     	;# 
  5528  0F2D                     	;# 
  5529  0F2E                     	;# 
  5530  0F2F                     	;# 
  5531  0F30                     	;# 
  5532  0F31                     	;# 
  5533  0F32                     	;# 
  5534  0F38                     	;# 
  5535  0F39                     	;# 
  5536  0F3A                     	;# 
  5537  0F3B                     	;# 
  5538  0F3C                     	;# 
  5539  0F3D                     	;# 
  5540  0F3E                     	;# 
  5541  0F3F                     	;# 
  5542  0F40                     	;# 
  5543  0F41                     	;# 
  5544  0F43                     	;# 
  5545  0F44                     	;# 
  5546  0F45                     	;# 
  5547  0F46                     	;# 
  5548  0F47                     	;# 
  5549  0F48                     	;# 
  5550  0F49                     	;# 
  5551  0F4A                     	;# 
  5552  0F4B                     	;# 
  5553  0F4C                     	;# 
  5554  0F4E                     	;# 
  5555  0F4F                     	;# 
  5556  0F50                     	;# 
  5557  0F51                     	;# 
  5558  0F52                     	;# 
  5559  0F53                     	;# 
  5560  0F54                     	;# 
  5561  0F55                     	;# 
  5562  0F56                     	;# 
  5563  0F57                     	;# 
  5564  0F59                     	;# 
  5565  0F5A                     	;# 
  5566  0F5B                     	;# 
  5567  0F5C                     	;# 
  5568  0F5D                     	;# 
  5569  0F61                     	;# 
  5570  0F62                     	;# 
  5571  0F64                     	;# 
  5572  0F65                     	;# 
  5573  0F66                     	;# 
  5574  0F67                     	;# 
  5575  0F68                     	;# 
  5576  0F69                     	;# 
  5577  0F6A                     	;# 
  5578  0F6B                     	;# 
  5579  0F6C                     	;# 
  5580  0F6D                     	;# 
  5581  0FE4                     	;# 
  5582  0FE5                     	;# 
  5583  0FE6                     	;# 
  5584  0FE7                     	;# 
  5585  0FE8                     	;# 
  5586  0FE9                     	;# 
  5587  0FEA                     	;# 
  5588  0FEB                     	;# 
  5589  0FED                     	;# 
  5590  0FEE                     	;# 
  5591  0FEF                     	;# 
  5592  0000                     	;# 
  5593  0001                     	;# 
  5594  0002                     	;# 
  5595  0003                     	;# 
  5596  0004                     	;# 
  5597  0005                     	;# 
  5598  0006                     	;# 
  5599  0007                     	;# 
  5600  0008                     	;# 
  5601  0009                     	;# 
  5602  000A                     	;# 
  5603  000B                     	;# 
  5604  000C                     	;# 
  5605  000D                     	;# 
  5606  000E                     	;# 
  5607  000F                     	;# 
  5608  0010                     	;# 
  5609  0011                     	;# 
  5610  0012                     	;# 
  5611  0013                     	;# 
  5612  0014                     	;# 
  5613  0015                     	;# 
  5614  0016                     	;# 
  5615  0017                     	;# 
  5616  0018                     	;# 
  5617  0019                     	;# 
  5618  001A                     	;# 
  5619  001C                     	;# 
  5620  001C                     	;# 
  5621  001D                     	;# 
  5622  001D                     	;# 
  5623  001E                     	;# 
  5624  001F                     	;# 
  5625  008C                     	;# 
  5626  008C                     	;# 
  5627  008D                     	;# 
  5628  008E                     	;# 
  5629  008E                     	;# 
  5630  008F                     	;# 
  5631  0090                     	;# 
  5632  0090                     	;# 
  5633  0091                     	;# 
  5634  0093                     	;# 
  5635  0094                     	;# 
  5636  0095                     	;# 
  5637  0096                     	;# 
  5638  0097                     	;# 
  5639  0098                     	;# 
  5640  0099                     	;# 
  5641  009A                     	;# 
  5642  009B                     	;# 
  5643  009C                     	;# 
  5644  009D                     	;# 
  5645  009E                     	;# 
  5646  010C                     	;# 
  5647  010D                     	;# 
  5648  010E                     	;# 
  5649  010E                     	;# 
  5650  010F                     	;# 
  5651  0110                     	;# 
  5652  0110                     	;# 
  5653  0111                     	;# 
  5654  0112                     	;# 
  5655  0112                     	;# 
  5656  0113                     	;# 
  5657  0114                     	;# 
  5658  0114                     	;# 
  5659  0115                     	;# 
  5660  0116                     	;# 
  5661  0116                     	;# 
  5662  0117                     	;# 
  5663  0119                     	;# 
  5664  0119                     	;# 
  5665  0119                     	;# 
  5666  011A                     	;# 
  5667  011A                     	;# 
  5668  011A                     	;# 
  5669  011B                     	;# 
  5670  011B                     	;# 
  5671  011B                     	;# 
  5672  011B                     	;# 
  5673  011B                     	;# 
  5674  011C                     	;# 
  5675  011C                     	;# 
  5676  011C                     	;# 
  5677  011D                     	;# 
  5678  011D                     	;# 
  5679  011D                     	;# 
  5680  011E                     	;# 
  5681  011E                     	;# 
  5682  011E                     	;# 
  5683  011F                     	;# 
  5684  011F                     	;# 
  5685  011F                     	;# 
  5686  011F                     	;# 
  5687  011F                     	;# 
  5688  018C                     	;# 
  5689  018D                     	;# 
  5690  018E                     	;# 
  5691  018F                     	;# 
  5692  0190                     	;# 
  5693  0191                     	;# 
  5694  0192                     	;# 
  5695  0196                     	;# 
  5696  0197                     	;# 
  5697  0198                     	;# 
  5698  0199                     	;# 
  5699  019A                     	;# 
  5700  019B                     	;# 
  5701  019C                     	;# 
  5702  020C                     	;# 
  5703  020C                     	;# 
  5704  020D                     	;# 
  5705  020E                     	;# 
  5706  020F                     	;# 
  5707  020F                     	;# 
  5708  0210                     	;# 
  5709  0210                     	;# 
  5710  0211                     	;# 
  5711  0211                     	;# 
  5712  0212                     	;# 
  5713  0212                     	;# 
  5714  0213                     	;# 
  5715  0214                     	;# 
  5716  0215                     	;# 
  5717  0215                     	;# 
  5718  0216                     	;# 
  5719  0216                     	;# 
  5720  0217                     	;# 
  5721  0217                     	;# 
  5722  0218                     	;# 
  5723  0218                     	;# 
  5724  0219                     	;# 
  5725  021A                     	;# 
  5726  021B                     	;# 
  5727  021B                     	;# 
  5728  021C                     	;# 
  5729  021C                     	;# 
  5730  021D                     	;# 
  5731  021D                     	;# 
  5732  021E                     	;# 
  5733  021F                     	;# 
  5734  028C                     	;# 
  5735  028C                     	;# 
  5736  028D                     	;# 
  5737  028D                     	;# 
  5738  028E                     	;# 
  5739  028F                     	;# 
  5740  0290                     	;# 
  5741  0290                     	;# 
  5742  0291                     	;# 
  5743  0292                     	;# 
  5744  0292                     	;# 
  5745  0293                     	;# 
  5746  0293                     	;# 
  5747  0294                     	;# 
  5748  0295                     	;# 
  5749  0296                     	;# 
  5750  0296                     	;# 
  5751  0297                     	;# 
  5752  0298                     	;# 
  5753  0298                     	;# 
  5754  0299                     	;# 
  5755  0299                     	;# 
  5756  029A                     	;# 
  5757  029B                     	;# 
  5758  029C                     	;# 
  5759  029C                     	;# 
  5760  029D                     	;# 
  5761  030C                     	;# 
  5762  030C                     	;# 
  5763  030D                     	;# 
  5764  030E                     	;# 
  5765  030F                     	;# 
  5766  0310                     	;# 
  5767  0310                     	;# 
  5768  0311                     	;# 
  5769  0312                     	;# 
  5770  0313                     	;# 
  5771  0314                     	;# 
  5772  0314                     	;# 
  5773  0315                     	;# 
  5774  0316                     	;# 
  5775  0317                     	;# 
  5776  0318                     	;# 
  5777  0318                     	;# 
  5778  0319                     	;# 
  5779  031A                     	;# 
  5780  031B                     	;# 
  5781  031C                     	;# 
  5782  031C                     	;# 
  5783  031D                     	;# 
  5784  031E                     	;# 
  5785  031F                     	;# 
  5786  038C                     	;# 
  5787  038C                     	;# 
  5788  038D                     	;# 
  5789  038E                     	;# 
  5790  0390                     	;# 
  5791  0390                     	;# 
  5792  0391                     	;# 
  5793  0392                     	;# 
  5794  040C                     	;# 
  5795  040D                     	;# 
  5796  040E                     	;# 
  5797  040F                     	;# 
  5798  0410                     	;# 
  5799  0411                     	;# 
  5800  0416                     	;# 
  5801  0416                     	;# 
  5802  0417                     	;# 
  5803  0418                     	;# 
  5804  0418                     	;# 
  5805  0419                     	;# 
  5806  041A                     	;# 
  5807  041A                     	;# 
  5808  041B                     	;# 
  5809  041C                     	;# 
  5810  041C                     	;# 
  5811  041D                     	;# 
  5812  041E                     	;# 
  5813  041F                     	;# 
  5814  048C                     	;# 
  5815  048C                     	;# 
  5816  048D                     	;# 
  5817  048E                     	;# 
  5818  048F                     	;# 
  5819  048F                     	;# 
  5820  0490                     	;# 
  5821  0491                     	;# 
  5822  0492                     	;# 
  5823  0492                     	;# 
  5824  0493                     	;# 
  5825  0494                     	;# 
  5826  0495                     	;# 
  5827  0495                     	;# 
  5828  0496                     	;# 
  5829  0497                     	;# 
  5830  0498                     	;# 
  5831  0499                     	;# 
  5832  049A                     	;# 
  5833  049B                     	;# 
  5834  049C                     	;# 
  5835  049D                     	;# 
  5836  050C                     	;# 
  5837  050C                     	;# 
  5838  050D                     	;# 
  5839  050E                     	;# 
  5840  050F                     	;# 
  5841  050F                     	;# 
  5842  0510                     	;# 
  5843  0511                     	;# 
  5844  0512                     	;# 
  5845  0512                     	;# 
  5846  0513                     	;# 
  5847  0514                     	;# 
  5848  0515                     	;# 
  5849  0515                     	;# 
  5850  0516                     	;# 
  5851  0517                     	;# 
  5852  0518                     	;# 
  5853  0519                     	;# 
  5854  051A                     	;# 
  5855  051B                     	;# 
  5856  051C                     	;# 
  5857  051D                     	;# 
  5858  058C                     	;# 
  5859  058C                     	;# 
  5860  058D                     	;# 
  5861  058E                     	;# 
  5862  058F                     	;# 
  5863  058F                     	;# 
  5864  0590                     	;# 
  5865  0591                     	;# 
  5866  0592                     	;# 
  5867  0593                     	;# 
  5868  060C                     	;# 
  5869  060D                     	;# 
  5870  060E                     	;# 
  5871  060F                     	;# 
  5872  0610                     	;# 
  5873  0611                     	;# 
  5874  0612                     	;# 
  5875  0613                     	;# 
  5876  0614                     	;# 
  5877  0616                     	;# 
  5878  0617                     	;# 
  5879  0618                     	;# 
  5880  0619                     	;# 
  5881  061A                     	;# 
  5882  061B                     	;# 
  5883  061C                     	;# 
  5884  061D                     	;# 
  5885  061E                     	;# 
  5886  068C                     	;# 
  5887  068D                     	;# 
  5888  068E                     	;# 
  5889  068F                     	;# 
  5890  0690                     	;# 
  5891  0691                     	;# 
  5892  0692                     	;# 
  5893  0693                     	;# 
  5894  0694                     	;# 
  5895  070C                     	;# 
  5896  070D                     	;# 
  5897  070E                     	;# 
  5898  070F                     	;# 
  5899  0710                     	;# 
  5900  0711                     	;# 
  5901  0712                     	;# 
  5902  0713                     	;# 
  5903  0714                     	;# 
  5904  0716                     	;# 
  5905  0717                     	;# 
  5906  0718                     	;# 
  5907  0719                     	;# 
  5908  071A                     	;# 
  5909  071B                     	;# 
  5910  071C                     	;# 
  5911  071D                     	;# 
  5912  071E                     	;# 
  5913  0796                     	;# 
  5914  0797                     	;# 
  5915  0798                     	;# 
  5916  0799                     	;# 
  5917  079A                     	;# 
  5918  079B                     	;# 
  5919  080C                     	;# 
  5920  080D                     	;# 
  5921  080E                     	;# 
  5922  080F                     	;# 
  5923  0810                     	;# 
  5924  0811                     	;# 
  5925  0812                     	;# 
  5926  0813                     	;# 
  5927  0814                     	;# 
  5928  081A                     	;# 
  5929  081B                     	;# 
  5930  081C                     	;# 
  5931  081D                     	;# 
  5932  081E                     	;# 
  5933  081F                     	;# 
  5934  088C                     	;# 
  5935  088D                     	;# 
  5936  088E                     	;# 
  5937  088F                     	;# 
  5938  0890                     	;# 
  5939  0891                     	;# 
  5940  0892                     	;# 
  5941  0893                     	;# 
  5942  0895                     	;# 
  5943  0896                     	;# 
  5944  0897                     	;# 
  5945  0898                     	;# 
  5946  0899                     	;# 
  5947  089A                     	;# 
  5948  089B                     	;# 
  5949  090C                     	;# 
  5950  090E                     	;# 
  5951  090F                     	;# 
  5952  091F                     	;# 
  5953  091F                     	;# 
  5954  098F                     	;# 
  5955  098F                     	;# 
  5956  0990                     	;# 
  5957  0991                     	;# 
  5958  0992                     	;# 
  5959  0993                     	;# 
  5960  0994                     	;# 
  5961  0995                     	;# 
  5962  0996                     	;# 
  5963  0997                     	;# 
  5964  0E0F                     	;# 
  5965  0E10                     	;# 
  5966  0E11                     	;# 
  5967  0E12                     	;# 
  5968  0E13                     	;# 
  5969  0E14                     	;# 
  5970  0E15                     	;# 
  5971  0E16                     	;# 
  5972  0E17                     	;# 
  5973  0E18                     	;# 
  5974  0E19                     	;# 
  5975  0E1A                     	;# 
  5976  0E1B                     	;# 
  5977  0E1C                     	;# 
  5978  0E1D                     	;# 
  5979  0E1E                     	;# 
  5980  0E1F                     	;# 
  5981  0E20                     	;# 
  5982  0E21                     	;# 
  5983  0E22                     	;# 
  5984  0E23                     	;# 
  5985  0E24                     	;# 
  5986  0E25                     	;# 
  5987  0E26                     	;# 
  5988  0E27                     	;# 
  5989  0E28                     	;# 
  5990  0E29                     	;# 
  5991  0E2A                     	;# 
  5992  0E2B                     	;# 
  5993  0E2C                     	;# 
  5994  0E2D                     	;# 
  5995  0E2E                     	;# 
  5996  0E2F                     	;# 
  5997  0E30                     	;# 
  5998  0E31                     	;# 
  5999  0E32                     	;# 
  6000  0E33                     	;# 
  6001  0E34                     	;# 
  6002  0E35                     	;# 
  6003  0E36                     	;# 
  6004  0E37                     	;# 
  6005  0E8F                     	;# 
  6006  0E90                     	;# 
  6007  0E91                     	;# 
  6008  0E92                     	;# 
  6009  0E93                     	;# 
  6010  0E94                     	;# 
  6011  0E95                     	;# 
  6012  0E96                     	;# 
  6013  0E97                     	;# 
  6014  0E9C                     	;# 
  6015  0E9D                     	;# 
  6016  0E9E                     	;# 
  6017  0EA1                     	;# 
  6018  0EA2                     	;# 
  6019  0EA3                     	;# 
  6020  0EA4                     	;# 
  6021  0EA5                     	;# 
  6022  0EA9                     	;# 
  6023  0EAA                     	;# 
  6024  0EAB                     	;# 
  6025  0EAC                     	;# 
  6026  0EB1                     	;# 
  6027  0EB2                     	;# 
  6028  0EB3                     	;# 
  6029  0EB8                     	;# 
  6030  0EB9                     	;# 
  6031  0EBA                     	;# 
  6032  0EBB                     	;# 
  6033  0EBC                     	;# 
  6034  0EBD                     	;# 
  6035  0EBE                     	;# 
  6036  0EC3                     	;# 
  6037  0EC5                     	;# 
  6038  0EC6                     	;# 
  6039  0EC7                     	;# 
  6040  0EC8                     	;# 
  6041  0EC9                     	;# 
  6042  0ECA                     	;# 
  6043  0ECB                     	;# 
  6044  0ECC                     	;# 
  6045  0F10                     	;# 
  6046  0F11                     	;# 
  6047  0F12                     	;# 
  6048  0F13                     	;# 
  6049  0F14                     	;# 
  6050  0F15                     	;# 
  6051  0F16                     	;# 
  6052  0F17                     	;# 
  6053  0F18                     	;# 
  6054  0F19                     	;# 
  6055  0F1A                     	;# 
  6056  0F1B                     	;# 
  6057  0F1C                     	;# 
  6058  0F1D                     	;# 
  6059  0F1E                     	;# 
  6060  0F1F                     	;# 
  6061  0F20                     	;# 
  6062  0F21                     	;# 
  6063  0F22                     	;# 
  6064  0F23                     	;# 
  6065  0F24                     	;# 
  6066  0F25                     	;# 
  6067  0F26                     	;# 
  6068  0F27                     	;# 
  6069  0F28                     	;# 
  6070  0F29                     	;# 
  6071  0F2A                     	;# 
  6072  0F2B                     	;# 
  6073  0F2C                     	;# 
  6074  0F2D                     	;# 
  6075  0F2E                     	;# 
  6076  0F2F                     	;# 
  6077  0F30                     	;# 
  6078  0F31                     	;# 
  6079  0F32                     	;# 
  6080  0F38                     	;# 
  6081  0F39                     	;# 
  6082  0F3A                     	;# 
  6083  0F3B                     	;# 
  6084  0F3C                     	;# 
  6085  0F3D                     	;# 
  6086  0F3E                     	;# 
  6087  0F3F                     	;# 
  6088  0F40                     	;# 
  6089  0F41                     	;# 
  6090  0F43                     	;# 
  6091  0F44                     	;# 
  6092  0F45                     	;# 
  6093  0F46                     	;# 
  6094  0F47                     	;# 
  6095  0F48                     	;# 
  6096  0F49                     	;# 
  6097  0F4A                     	;# 
  6098  0F4B                     	;# 
  6099  0F4C                     	;# 
  6100  0F4E                     	;# 
  6101  0F4F                     	;# 
  6102  0F50                     	;# 
  6103  0F51                     	;# 
  6104  0F52                     	;# 
  6105  0F53                     	;# 
  6106  0F54                     	;# 
  6107  0F55                     	;# 
  6108  0F56                     	;# 
  6109  0F57                     	;# 
  6110  0F59                     	;# 
  6111  0F5A                     	;# 
  6112  0F5B                     	;# 
  6113  0F5C                     	;# 
  6114  0F5D                     	;# 
  6115  0F61                     	;# 
  6116  0F62                     	;# 
  6117  0F64                     	;# 
  6118  0F65                     	;# 
  6119  0F66                     	;# 
  6120  0F67                     	;# 
  6121  0F68                     	;# 
  6122  0F69                     	;# 
  6123  0F6A                     	;# 
  6124  0F6B                     	;# 
  6125  0F6C                     	;# 
  6126  0F6D                     	;# 
  6127  0FE4                     	;# 
  6128  0FE5                     	;# 
  6129  0FE6                     	;# 
  6130  0FE7                     	;# 
  6131  0FE8                     	;# 
  6132  0FE9                     	;# 
  6133  0FEA                     	;# 
  6134  0FEB                     	;# 
  6135  0FED                     	;# 
  6136  0FEE                     	;# 
  6137  0FEF                     	;# 
  6138  0000                     	;# 
  6139  0001                     	;# 
  6140  0002                     	;# 
  6141  0003                     	;# 
  6142  0004                     	;# 
  6143  0005                     	;# 
  6144  0006                     	;# 
  6145  0007                     	;# 
  6146  0008                     	;# 
  6147  0009                     	;# 
  6148  000A                     	;# 
  6149  000B                     	;# 
  6150  000C                     	;# 
  6151  000D                     	;# 
  6152  000E                     	;# 
  6153  000F                     	;# 
  6154  0010                     	;# 
  6155  0011                     	;# 
  6156  0012                     	;# 
  6157  0013                     	;# 
  6158  0014                     	;# 
  6159  0015                     	;# 
  6160  0016                     	;# 
  6161  0017                     	;# 
  6162  0018                     	;# 
  6163  0019                     	;# 
  6164  001A                     	;# 
  6165  001C                     	;# 
  6166  001C                     	;# 
  6167  001D                     	;# 
  6168  001D                     	;# 
  6169  001E                     	;# 
  6170  001F                     	;# 
  6171  008C                     	;# 
  6172  008C                     	;# 
  6173  008D                     	;# 
  6174  008E                     	;# 
  6175  008E                     	;# 
  6176  008F                     	;# 
  6177  0090                     	;# 
  6178  0090                     	;# 
  6179  0091                     	;# 
  6180  0093                     	;# 
  6181  0094                     	;# 
  6182  0095                     	;# 
  6183  0096                     	;# 
  6184  0097                     	;# 
  6185  0098                     	;# 
  6186  0099                     	;# 
  6187  009A                     	;# 
  6188  009B                     	;# 
  6189  009C                     	;# 
  6190  009D                     	;# 
  6191  009E                     	;# 
  6192  010C                     	;# 
  6193  010D                     	;# 
  6194  010E                     	;# 
  6195  010E                     	;# 
  6196  010F                     	;# 
  6197  0110                     	;# 
  6198  0110                     	;# 
  6199  0111                     	;# 
  6200  0112                     	;# 
  6201  0112                     	;# 
  6202  0113                     	;# 
  6203  0114                     	;# 
  6204  0114                     	;# 
  6205  0115                     	;# 
  6206  0116                     	;# 
  6207  0116                     	;# 
  6208  0117                     	;# 
  6209  0119                     	;# 
  6210  0119                     	;# 
  6211  0119                     	;# 
  6212  011A                     	;# 
  6213  011A                     	;# 
  6214  011A                     	;# 
  6215  011B                     	;# 
  6216  011B                     	;# 
  6217  011B                     	;# 
  6218  011B                     	;# 
  6219  011B                     	;# 
  6220  011C                     	;# 
  6221  011C                     	;# 
  6222  011C                     	;# 
  6223  011D                     	;# 
  6224  011D                     	;# 
  6225  011D                     	;# 
  6226  011E                     	;# 
  6227  011E                     	;# 
  6228  011E                     	;# 
  6229  011F                     	;# 
  6230  011F                     	;# 
  6231  011F                     	;# 
  6232  011F                     	;# 
  6233  011F                     	;# 
  6234  018C                     	;# 
  6235  018D                     	;# 
  6236  018E                     	;# 
  6237  018F                     	;# 
  6238  0190                     	;# 
  6239  0191                     	;# 
  6240  0192                     	;# 
  6241  0196                     	;# 
  6242  0197                     	;# 
  6243  0198                     	;# 
  6244  0199                     	;# 
  6245  019A                     	;# 
  6246  019B                     	;# 
  6247  019C                     	;# 
  6248  020C                     	;# 
  6249  020C                     	;# 
  6250  020D                     	;# 
  6251  020E                     	;# 
  6252  020F                     	;# 
  6253  020F                     	;# 
  6254  0210                     	;# 
  6255  0210                     	;# 
  6256  0211                     	;# 
  6257  0211                     	;# 
  6258  0212                     	;# 
  6259  0212                     	;# 
  6260  0213                     	;# 
  6261  0214                     	;# 
  6262  0215                     	;# 
  6263  0215                     	;# 
  6264  0216                     	;# 
  6265  0216                     	;# 
  6266  0217                     	;# 
  6267  0217                     	;# 
  6268  0218                     	;# 
  6269  0218                     	;# 
  6270  0219                     	;# 
  6271  021A                     	;# 
  6272  021B                     	;# 
  6273  021B                     	;# 
  6274  021C                     	;# 
  6275  021C                     	;# 
  6276  021D                     	;# 
  6277  021D                     	;# 
  6278  021E                     	;# 
  6279  021F                     	;# 
  6280  028C                     	;# 
  6281  028C                     	;# 
  6282  028D                     	;# 
  6283  028D                     	;# 
  6284  028E                     	;# 
  6285  028F                     	;# 
  6286  0290                     	;# 
  6287  0290                     	;# 
  6288  0291                     	;# 
  6289  0292                     	;# 
  6290  0292                     	;# 
  6291  0293                     	;# 
  6292  0293                     	;# 
  6293  0294                     	;# 
  6294  0295                     	;# 
  6295  0296                     	;# 
  6296  0296                     	;# 
  6297  0297                     	;# 
  6298  0298                     	;# 
  6299  0298                     	;# 
  6300  0299                     	;# 
  6301  0299                     	;# 
  6302  029A                     	;# 
  6303  029B                     	;# 
  6304  029C                     	;# 
  6305  029C                     	;# 
  6306  029D                     	;# 
  6307  030C                     	;# 
  6308  030C                     	;# 
  6309  030D                     	;# 
  6310  030E                     	;# 
  6311  030F                     	;# 
  6312  0310                     	;# 
  6313  0310                     	;# 
  6314  0311                     	;# 
  6315  0312                     	;# 
  6316  0313                     	;# 
  6317  0314                     	;# 
  6318  0314                     	;# 
  6319  0315                     	;# 
  6320  0316                     	;# 
  6321  0317                     	;# 
  6322  0318                     	;# 
  6323  0318                     	;# 
  6324  0319                     	;# 
  6325  031A                     	;# 
  6326  031B                     	;# 
  6327  031C                     	;# 
  6328  031C                     	;# 
  6329  031D                     	;# 
  6330  031E                     	;# 
  6331  031F                     	;# 
  6332  038C                     	;# 
  6333  038C                     	;# 
  6334  038D                     	;# 
  6335  038E                     	;# 
  6336  0390                     	;# 
  6337  0390                     	;# 
  6338  0391                     	;# 
  6339  0392                     	;# 
  6340  040C                     	;# 
  6341  040D                     	;# 
  6342  040E                     	;# 
  6343  040F                     	;# 
  6344  0410                     	;# 
  6345  0411                     	;# 
  6346  0416                     	;# 
  6347  0416                     	;# 
  6348  0417                     	;# 
  6349  0418                     	;# 
  6350  0418                     	;# 
  6351  0419                     	;# 
  6352  041A                     	;# 
  6353  041A                     	;# 
  6354  041B                     	;# 
  6355  041C                     	;# 
  6356  041C                     	;# 
  6357  041D                     	;# 
  6358  041E                     	;# 
  6359  041F                     	;# 
  6360  048C                     	;# 
  6361  048C                     	;# 
  6362  048D                     	;# 
  6363  048E                     	;# 
  6364  048F                     	;# 
  6365  048F                     	;# 
  6366  0490                     	;# 
  6367  0491                     	;# 
  6368  0492                     	;# 
  6369  0492                     	;# 
  6370  0493                     	;# 
  6371  0494                     	;# 
  6372  0495                     	;# 
  6373  0495                     	;# 
  6374  0496                     	;# 
  6375  0497                     	;# 
  6376  0498                     	;# 
  6377  0499                     	;# 
  6378  049A                     	;# 
  6379  049B                     	;# 
  6380  049C                     	;# 
  6381  049D                     	;# 
  6382  050C                     	;# 
  6383  050C                     	;# 
  6384  050D                     	;# 
  6385  050E                     	;# 
  6386  050F                     	;# 
  6387  050F                     	;# 
  6388  0510                     	;# 
  6389  0511                     	;# 
  6390  0512                     	;# 
  6391  0512                     	;# 
  6392  0513                     	;# 
  6393  0514                     	;# 
  6394  0515                     	;# 
  6395  0515                     	;# 
  6396  0516                     	;# 
  6397  0517                     	;# 
  6398  0518                     	;# 
  6399  0519                     	;# 
  6400  051A                     	;# 
  6401  051B                     	;# 
  6402  051C                     	;# 
  6403  051D                     	;# 
  6404  058C                     	;# 
  6405  058C                     	;# 
  6406  058D                     	;# 
  6407  058E                     	;# 
  6408  058F                     	;# 
  6409  058F                     	;# 
  6410  0590                     	;# 
  6411  0591                     	;# 
  6412  0592                     	;# 
  6413  0593                     	;# 
  6414  060C                     	;# 
  6415  060D                     	;# 
  6416  060E                     	;# 
  6417  060F                     	;# 
  6418  0610                     	;# 
  6419  0611                     	;# 
  6420  0612                     	;# 
  6421  0613                     	;# 
  6422  0614                     	;# 
  6423  0616                     	;# 
  6424  0617                     	;# 
  6425  0618                     	;# 
  6426  0619                     	;# 
  6427  061A                     	;# 
  6428  061B                     	;# 
  6429  061C                     	;# 
  6430  061D                     	;# 
  6431  061E                     	;# 
  6432  068C                     	;# 
  6433  068D                     	;# 
  6434  068E                     	;# 
  6435  068F                     	;# 
  6436  0690                     	;# 
  6437  0691                     	;# 
  6438  0692                     	;# 
  6439  0693                     	;# 
  6440  0694                     	;# 
  6441  070C                     	;# 
  6442  070D                     	;# 
  6443  070E                     	;# 
  6444  070F                     	;# 
  6445  0710                     	;# 
  6446  0711                     	;# 
  6447  0712                     	;# 
  6448  0713                     	;# 
  6449  0714                     	;# 
  6450  0716                     	;# 
  6451  0717                     	;# 
  6452  0718                     	;# 
  6453  0719                     	;# 
  6454  071A                     	;# 
  6455  071B                     	;# 
  6456  071C                     	;# 
  6457  071D                     	;# 
  6458  071E                     	;# 
  6459  0796                     	;# 
  6460  0797                     	;# 
  6461  0798                     	;# 
  6462  0799                     	;# 
  6463  079A                     	;# 
  6464  079B                     	;# 
  6465  080C                     	;# 
  6466  080D                     	;# 
  6467  080E                     	;# 
  6468  080F                     	;# 
  6469  0810                     	;# 
  6470  0811                     	;# 
  6471  0812                     	;# 
  6472  0813                     	;# 
  6473  0814                     	;# 
  6474  081A                     	;# 
  6475  081B                     	;# 
  6476  081C                     	;# 
  6477  081D                     	;# 
  6478  081E                     	;# 
  6479  081F                     	;# 
  6480  088C                     	;# 
  6481  088D                     	;# 
  6482  088E                     	;# 
  6483  088F                     	;# 
  6484  0890                     	;# 
  6485  0891                     	;# 
  6486  0892                     	;# 
  6487  0893                     	;# 
  6488  0895                     	;# 
  6489  0896                     	;# 
  6490  0897                     	;# 
  6491  0898                     	;# 
  6492  0899                     	;# 
  6493  089A                     	;# 
  6494  089B                     	;# 
  6495  090C                     	;# 
  6496  090E                     	;# 
  6497  090F                     	;# 
  6498  091F                     	;# 
  6499  091F                     	;# 
  6500  098F                     	;# 
  6501  098F                     	;# 
  6502  0990                     	;# 
  6503  0991                     	;# 
  6504  0992                     	;# 
  6505  0993                     	;# 
  6506  0994                     	;# 
  6507  0995                     	;# 
  6508  0996                     	;# 
  6509  0997                     	;# 
  6510  0E0F                     	;# 
  6511  0E10                     	;# 
  6512  0E11                     	;# 
  6513  0E12                     	;# 
  6514  0E13                     	;# 
  6515  0E14                     	;# 
  6516  0E15                     	;# 
  6517  0E16                     	;# 
  6518  0E17                     	;# 
  6519  0E18                     	;# 
  6520  0E19                     	;# 
  6521  0E1A                     	;# 
  6522  0E1B                     	;# 
  6523  0E1C                     	;# 
  6524  0E1D                     	;# 
  6525  0E1E                     	;# 
  6526  0E1F                     	;# 
  6527  0E20                     	;# 
  6528  0E21                     	;# 
  6529  0E22                     	;# 
  6530  0E23                     	;# 
  6531  0E24                     	;# 
  6532  0E25                     	;# 
  6533  0E26                     	;# 
  6534  0E27                     	;# 
  6535  0E28                     	;# 
  6536  0E29                     	;# 
  6537  0E2A                     	;# 
  6538  0E2B                     	;# 
  6539  0E2C                     	;# 
  6540  0E2D                     	;# 
  6541  0E2E                     	;# 
  6542  0E2F                     	;# 
  6543  0E30                     	;# 
  6544  0E31                     	;# 
  6545  0E32                     	;# 
  6546  0E33                     	;# 
  6547  0E34                     	;# 
  6548  0E35                     	;# 
  6549  0E36                     	;# 
  6550  0E37                     	;# 
  6551  0E8F                     	;# 
  6552  0E90                     	;# 
  6553  0E91                     	;# 
  6554  0E92                     	;# 
  6555  0E93                     	;# 
  6556  0E94                     	;# 
  6557  0E95                     	;# 
  6558  0E96                     	;# 
  6559  0E97                     	;# 
  6560  0E9C                     	;# 
  6561  0E9D                     	;# 
  6562  0E9E                     	;# 
  6563  0EA1                     	;# 
  6564  0EA2                     	;# 
  6565  0EA3                     	;# 
  6566  0EA4                     	;# 
  6567  0EA5                     	;# 
  6568  0EA9                     	;# 
  6569  0EAA                     	;# 
  6570  0EAB                     	;# 
  6571  0EAC                     	;# 
  6572  0EB1                     	;# 
  6573  0EB2                     	;# 
  6574  0EB3                     	;# 
  6575  0EB8                     	;# 
  6576  0EB9                     	;# 
  6577  0EBA                     	;# 
  6578  0EBB                     	;# 
  6579  0EBC                     	;# 
  6580  0EBD                     	;# 
  6581  0EBE                     	;# 
  6582  0EC3                     	;# 
  6583  0EC5                     	;# 
  6584  0EC6                     	;# 
  6585  0EC7                     	;# 
  6586  0EC8                     	;# 
  6587  0EC9                     	;# 
  6588  0ECA                     	;# 
  6589  0ECB                     	;# 
  6590  0ECC                     	;# 
  6591  0F10                     	;# 
  6592  0F11                     	;# 
  6593  0F12                     	;# 
  6594  0F13                     	;# 
  6595  0F14                     	;# 
  6596  0F15                     	;# 
  6597  0F16                     	;# 
  6598  0F17                     	;# 
  6599  0F18                     	;# 
  6600  0F19                     	;# 
  6601  0F1A                     	;# 
  6602  0F1B                     	;# 
  6603  0F1C                     	;# 
  6604  0F1D                     	;# 
  6605  0F1E                     	;# 
  6606  0F1F                     	;# 
  6607  0F20                     	;# 
  6608  0F21                     	;# 
  6609  0F22                     	;# 
  6610  0F23                     	;# 
  6611  0F24                     	;# 
  6612  0F25                     	;# 
  6613  0F26                     	;# 
  6614  0F27                     	;# 
  6615  0F28                     	;# 
  6616  0F29                     	;# 
  6617  0F2A                     	;# 
  6618  0F2B                     	;# 
  6619  0F2C                     	;# 
  6620  0F2D                     	;# 
  6621  0F2E                     	;# 
  6622  0F2F                     	;# 
  6623  0F30                     	;# 
  6624  0F31                     	;# 
  6625  0F32                     	;# 
  6626  0F38                     	;# 
  6627  0F39                     	;# 
  6628  0F3A                     	;# 
  6629  0F3B                     	;# 
  6630  0F3C                     	;# 
  6631  0F3D                     	;# 
  6632  0F3E                     	;# 
  6633  0F3F                     	;# 
  6634  0F40                     	;# 
  6635  0F41                     	;# 
  6636  0F43                     	;# 
  6637  0F44                     	;# 
  6638  0F45                     	;# 
  6639  0F46                     	;# 
  6640  0F47                     	;# 
  6641  0F48                     	;# 
  6642  0F49                     	;# 
  6643  0F4A                     	;# 
  6644  0F4B                     	;# 
  6645  0F4C                     	;# 
  6646  0F4E                     	;# 
  6647  0F4F                     	;# 
  6648  0F50                     	;# 
  6649  0F51                     	;# 
  6650  0F52                     	;# 
  6651  0F53                     	;# 
  6652  0F54                     	;# 
  6653  0F55                     	;# 
  6654  0F56                     	;# 
  6655  0F57                     	;# 
  6656  0F59                     	;# 
  6657  0F5A                     	;# 
  6658  0F5B                     	;# 
  6659  0F5C                     	;# 
  6660  0F5D                     	;# 
  6661  0F61                     	;# 
  6662  0F62                     	;# 
  6663  0F64                     	;# 
  6664  0F65                     	;# 
  6665  0F66                     	;# 
  6666  0F67                     	;# 
  6667  0F68                     	;# 
  6668  0F69                     	;# 
  6669  0F6A                     	;# 
  6670  0F6B                     	;# 
  6671  0F6C                     	;# 
  6672  0F6D                     	;# 
  6673  0FE4                     	;# 
  6674  0FE5                     	;# 
  6675  0FE6                     	;# 
  6676  0FE7                     	;# 
  6677  0FE8                     	;# 
  6678  0FE9                     	;# 
  6679  0FEA                     	;# 
  6680  0FEB                     	;# 
  6681  0FED                     	;# 
  6682  0FEE                     	;# 
  6683  0FEF                     	;# 
  6684  0000                     	;# 
  6685  0001                     	;# 
  6686  0002                     	;# 
  6687  0003                     	;# 
  6688  0004                     	;# 
  6689  0005                     	;# 
  6690  0006                     	;# 
  6691  0007                     	;# 
  6692  0008                     	;# 
  6693  0009                     	;# 
  6694  000A                     	;# 
  6695  000B                     	;# 
  6696  000C                     	;# 
  6697  000D                     	;# 
  6698  000E                     	;# 
  6699  000F                     	;# 
  6700  0010                     	;# 
  6701  0011                     	;# 
  6702  0012                     	;# 
  6703  0013                     	;# 
  6704  0014                     	;# 
  6705  0015                     	;# 
  6706  0016                     	;# 
  6707  0017                     	;# 
  6708  0018                     	;# 
  6709  0019                     	;# 
  6710  001A                     	;# 
  6711  001C                     	;# 
  6712  001C                     	;# 
  6713  001D                     	;# 
  6714  001D                     	;# 
  6715  001E                     	;# 
  6716  001F                     	;# 
  6717  008C                     	;# 
  6718  008C                     	;# 
  6719  008D                     	;# 
  6720  008E                     	;# 
  6721  008E                     	;# 
  6722  008F                     	;# 
  6723  0090                     	;# 
  6724  0090                     	;# 
  6725  0091                     	;# 
  6726  0093                     	;# 
  6727  0094                     	;# 
  6728  0095                     	;# 
  6729  0096                     	;# 
  6730  0097                     	;# 
  6731  0098                     	;# 
  6732  0099                     	;# 
  6733  009A                     	;# 
  6734  009B                     	;# 
  6735  009C                     	;# 
  6736  009D                     	;# 
  6737  009E                     	;# 
  6738  010C                     	;# 
  6739  010D                     	;# 
  6740  010E                     	;# 
  6741  010E                     	;# 
  6742  010F                     	;# 
  6743  0110                     	;# 
  6744  0110                     	;# 
  6745  0111                     	;# 
  6746  0112                     	;# 
  6747  0112                     	;# 
  6748  0113                     	;# 
  6749  0114                     	;# 
  6750  0114                     	;# 
  6751  0115                     	;# 
  6752  0116                     	;# 
  6753  0116                     	;# 
  6754  0117                     	;# 
  6755  0119                     	;# 
  6756  0119                     	;# 
  6757  0119                     	;# 
  6758  011A                     	;# 
  6759  011A                     	;# 
  6760  011A                     	;# 
  6761  011B                     	;# 
  6762  011B                     	;# 
  6763  011B                     	;# 
  6764  011B                     	;# 
  6765  011B                     	;# 
  6766  011C                     	;# 
  6767  011C                     	;# 
  6768  011C                     	;# 
  6769  011D                     	;# 
  6770  011D                     	;# 
  6771  011D                     	;# 
  6772  011E                     	;# 
  6773  011E                     	;# 
  6774  011E                     	;# 
  6775  011F                     	;# 
  6776  011F                     	;# 
  6777  011F                     	;# 
  6778  011F                     	;# 
  6779  011F                     	;# 
  6780  018C                     	;# 
  6781  018D                     	;# 
  6782  018E                     	;# 
  6783  018F                     	;# 
  6784  0190                     	;# 
  6785  0191                     	;# 
  6786  0192                     	;# 
  6787  0196                     	;# 
  6788  0197                     	;# 
  6789  0198                     	;# 
  6790  0199                     	;# 
  6791  019A                     	;# 
  6792  019B                     	;# 
  6793  019C                     	;# 
  6794  020C                     	;# 
  6795  020C                     	;# 
  6796  020D                     	;# 
  6797  020E                     	;# 
  6798  020F                     	;# 
  6799  020F                     	;# 
  6800  0210                     	;# 
  6801  0210                     	;# 
  6802  0211                     	;# 
  6803  0211                     	;# 
  6804  0212                     	;# 
  6805  0212                     	;# 
  6806  0213                     	;# 
  6807  0214                     	;# 
  6808  0215                     	;# 
  6809  0215                     	;# 
  6810  0216                     	;# 
  6811  0216                     	;# 
  6812  0217                     	;# 
  6813  0217                     	;# 
  6814  0218                     	;# 
  6815  0218                     	;# 
  6816  0219                     	;# 
  6817  021A                     	;# 
  6818  021B                     	;# 
  6819  021B                     	;# 
  6820  021C                     	;# 
  6821  021C                     	;# 
  6822  021D                     	;# 
  6823  021D                     	;# 
  6824  021E                     	;# 
  6825  021F                     	;# 
  6826  028C                     	;# 
  6827  028C                     	;# 
  6828  028D                     	;# 
  6829  028D                     	;# 
  6830  028E                     	;# 
  6831  028F                     	;# 
  6832  0290                     	;# 
  6833  0290                     	;# 
  6834  0291                     	;# 
  6835  0292                     	;# 
  6836  0292                     	;# 
  6837  0293                     	;# 
  6838  0293                     	;# 
  6839  0294                     	;# 
  6840  0295                     	;# 
  6841  0296                     	;# 
  6842  0296                     	;# 
  6843  0297                     	;# 
  6844  0298                     	;# 
  6845  0298                     	;# 
  6846  0299                     	;# 
  6847  0299                     	;# 
  6848  029A                     	;# 
  6849  029B                     	;# 
  6850  029C                     	;# 
  6851  029C                     	;# 
  6852  029D                     	;# 
  6853  030C                     	;# 
  6854  030C                     	;# 
  6855  030D                     	;# 
  6856  030E                     	;# 
  6857  030F                     	;# 
  6858  0310                     	;# 
  6859  0310                     	;# 
  6860  0311                     	;# 
  6861  0312                     	;# 
  6862  0313                     	;# 
  6863  0314                     	;# 
  6864  0314                     	;# 
  6865  0315                     	;# 
  6866  0316                     	;# 
  6867  0317                     	;# 
  6868  0318                     	;# 
  6869  0318                     	;# 
  6870  0319                     	;# 
  6871  031A                     	;# 
  6872  031B                     	;# 
  6873  031C                     	;# 
  6874  031C                     	;# 
  6875  031D                     	;# 
  6876  031E                     	;# 
  6877  031F                     	;# 
  6878  038C                     	;# 
  6879  038C                     	;# 
  6880  038D                     	;# 
  6881  038E                     	;# 
  6882  0390                     	;# 
  6883  0390                     	;# 
  6884  0391                     	;# 
  6885  0392                     	;# 
  6886  040C                     	;# 
  6887  040D                     	;# 
  6888  040E                     	;# 
  6889  040F                     	;# 
  6890  0410                     	;# 
  6891  0411                     	;# 
  6892  0416                     	;# 
  6893  0416                     	;# 
  6894  0417                     	;# 
  6895  0418                     	;# 
  6896  0418                     	;# 
  6897  0419                     	;# 
  6898  041A                     	;# 
  6899  041A                     	;# 
  6900  041B                     	;# 
  6901  041C                     	;# 
  6902  041C                     	;# 
  6903  041D                     	;# 
  6904  041E                     	;# 
  6905  041F                     	;# 
  6906  048C                     	;# 
  6907  048C                     	;# 
  6908  048D                     	;# 
  6909  048E                     	;# 
  6910  048F                     	;# 
  6911  048F                     	;# 
  6912  0490                     	;# 
  6913  0491                     	;# 
  6914  0492                     	;# 
  6915  0492                     	;# 
  6916  0493                     	;# 
  6917  0494                     	;# 
  6918  0495                     	;# 
  6919  0495                     	;# 
  6920  0496                     	;# 
  6921  0497                     	;# 
  6922  0498                     	;# 
  6923  0499                     	;# 
  6924  049A                     	;# 
  6925  049B                     	;# 
  6926  049C                     	;# 
  6927  049D                     	;# 
  6928  050C                     	;# 
  6929  050C                     	;# 
  6930  050D                     	;# 
  6931  050E                     	;# 
  6932  050F                     	;# 
  6933  050F                     	;# 
  6934  0510                     	;# 
  6935  0511                     	;# 
  6936  0512                     	;# 
  6937  0512                     	;# 
  6938  0513                     	;# 
  6939  0514                     	;# 
  6940  0515                     	;# 
  6941  0515                     	;# 
  6942  0516                     	;# 
  6943  0517                     	;# 
  6944  0518                     	;# 
  6945  0519                     	;# 
  6946  051A                     	;# 
  6947  051B                     	;# 
  6948  051C                     	;# 
  6949  051D                     	;# 
  6950  058C                     	;# 
  6951  058C                     	;# 
  6952  058D                     	;# 
  6953  058E                     	;# 
  6954  058F                     	;# 
  6955  058F                     	;# 
  6956  0590                     	;# 
  6957  0591                     	;# 
  6958  0592                     	;# 
  6959  0593                     	;# 
  6960  060C                     	;# 
  6961  060D                     	;# 
  6962  060E                     	;# 
  6963  060F                     	;# 
  6964  0610                     	;# 
  6965  0611                     	;# 
  6966  0612                     	;# 
  6967  0613                     	;# 
  6968  0614                     	;# 
  6969  0616                     	;# 
  6970  0617                     	;# 
  6971  0618                     	;# 
  6972  0619                     	;# 
  6973  061A                     	;# 
  6974  061B                     	;# 
  6975  061C                     	;# 
  6976  061D                     	;# 
  6977  061E                     	;# 
  6978  068C                     	;# 
  6979  068D                     	;# 
  6980  068E                     	;# 
  6981  068F                     	;# 
  6982  0690                     	;# 
  6983  0691                     	;# 
  6984  0692                     	;# 
  6985  0693                     	;# 
  6986  0694                     	;# 
  6987  070C                     	;# 
  6988  070D                     	;# 
  6989  070E                     	;# 
  6990  070F                     	;# 
  6991  0710                     	;# 
  6992  0711                     	;# 
  6993  0712                     	;# 
  6994  0713                     	;# 
  6995  0714                     	;# 
  6996  0716                     	;# 
  6997  0717                     	;# 
  6998  0718                     	;# 
  6999  0719                     	;# 
  7000  071A                     	;# 
  7001  071B                     	;# 
  7002  071C                     	;# 
  7003  071D                     	;# 
  7004  071E                     	;# 
  7005  0796                     	;# 
  7006  0797                     	;# 
  7007  0798                     	;# 
  7008  0799                     	;# 
  7009  079A                     	;# 
  7010  079B                     	;# 
  7011  080C                     	;# 
  7012  080D                     	;# 
  7013  080E                     	;# 
  7014  080F                     	;# 
  7015  0810                     	;# 
  7016  0811                     	;# 
  7017  0812                     	;# 
  7018  0813                     	;# 
  7019  0814                     	;# 
  7020  081A                     	;# 
  7021  081B                     	;# 
  7022  081C                     	;# 
  7023  081D                     	;# 
  7024  081E                     	;# 
  7025  081F                     	;# 
  7026  088C                     	;# 
  7027  088D                     	;# 
  7028  088E                     	;# 
  7029  088F                     	;# 
  7030  0890                     	;# 
  7031  0891                     	;# 
  7032  0892                     	;# 
  7033  0893                     	;# 
  7034  0895                     	;# 
  7035  0896                     	;# 
  7036  0897                     	;# 
  7037  0898                     	;# 
  7038  0899                     	;# 
  7039  089A                     	;# 
  7040  089B                     	;# 
  7041  090C                     	;# 
  7042  090E                     	;# 
  7043  090F                     	;# 
  7044  091F                     	;# 
  7045  091F                     	;# 
  7046  098F                     	;# 
  7047  098F                     	;# 
  7048  0990                     	;# 
  7049  0991                     	;# 
  7050  0992                     	;# 
  7051  0993                     	;# 
  7052  0994                     	;# 
  7053  0995                     	;# 
  7054  0996                     	;# 
  7055  0997                     	;# 
  7056  0E0F                     	;# 
  7057  0E10                     	;# 
  7058  0E11                     	;# 
  7059  0E12                     	;# 
  7060  0E13                     	;# 
  7061  0E14                     	;# 
  7062  0E15                     	;# 
  7063  0E16                     	;# 
  7064  0E17                     	;# 
  7065  0E18                     	;# 
  7066  0E19                     	;# 
  7067  0E1A                     	;# 
  7068  0E1B                     	;# 
  7069  0E1C                     	;# 
  7070  0E1D                     	;# 
  7071  0E1E                     	;# 
  7072  0E1F                     	;# 
  7073  0E20                     	;# 
  7074  0E21                     	;# 
  7075  0E22                     	;# 
  7076  0E23                     	;# 
  7077  0E24                     	;# 
  7078  0E25                     	;# 
  7079  0E26                     	;# 
  7080  0E27                     	;# 
  7081  0E28                     	;# 
  7082  0E29                     	;# 
  7083  0E2A                     	;# 
  7084  0E2B                     	;# 
  7085  0E2C                     	;# 
  7086  0E2D                     	;# 
  7087  0E2E                     	;# 
  7088  0E2F                     	;# 
  7089  0E30                     	;# 
  7090  0E31                     	;# 
  7091  0E32                     	;# 
  7092  0E33                     	;# 
  7093  0E34                     	;# 
  7094  0E35                     	;# 
  7095  0E36                     	;# 
  7096  0E37                     	;# 
  7097  0E8F                     	;# 
  7098  0E90                     	;# 
  7099  0E91                     	;# 
  7100  0E92                     	;# 
  7101  0E93                     	;# 
  7102  0E94                     	;# 
  7103  0E95                     	;# 
  7104  0E96                     	;# 
  7105  0E97                     	;# 
  7106  0E9C                     	;# 
  7107  0E9D                     	;# 
  7108  0E9E                     	;# 
  7109  0EA1                     	;# 
  7110  0EA2                     	;# 
  7111  0EA3                     	;# 
  7112  0EA4                     	;# 
  7113  0EA5                     	;# 
  7114  0EA9                     	;# 
  7115  0EAA                     	;# 
  7116  0EAB                     	;# 
  7117  0EAC                     	;# 
  7118  0EB1                     	;# 
  7119  0EB2                     	;# 
  7120  0EB3                     	;# 
  7121  0EB8                     	;# 
  7122  0EB9                     	;# 
  7123  0EBA                     	;# 
  7124  0EBB                     	;# 
  7125  0EBC                     	;# 
  7126  0EBD                     	;# 
  7127  0EBE                     	;# 
  7128  0EC3                     	;# 
  7129  0EC5                     	;# 
  7130  0EC6                     	;# 
  7131  0EC7                     	;# 
  7132  0EC8                     	;# 
  7133  0EC9                     	;# 
  7134  0ECA                     	;# 
  7135  0ECB                     	;# 
  7136  0ECC                     	;# 
  7137  0F10                     	;# 
  7138  0F11                     	;# 
  7139  0F12                     	;# 
  7140  0F13                     	;# 
  7141  0F14                     	;# 
  7142  0F15                     	;# 
  7143  0F16                     	;# 
  7144  0F17                     	;# 
  7145  0F18                     	;# 
  7146  0F19                     	;# 
  7147  0F1A                     	;# 
  7148  0F1B                     	;# 
  7149  0F1C                     	;# 
  7150  0F1D                     	;# 
  7151  0F1E                     	;# 
  7152  0F1F                     	;# 
  7153  0F20                     	;# 
  7154  0F21                     	;# 
  7155  0F22                     	;# 
  7156  0F23                     	;# 
  7157  0F24                     	;# 
  7158  0F25                     	;# 
  7159  0F26                     	;# 
  7160  0F27                     	;# 
  7161  0F28                     	;# 
  7162  0F29                     	;# 
  7163  0F2A                     	;# 
  7164  0F2B                     	;# 
  7165  0F2C                     	;# 
  7166  0F2D                     	;# 
  7167  0F2E                     	;# 
  7168  0F2F                     	;# 
  7169  0F30                     	;# 
  7170  0F31                     	;# 
  7171  0F32                     	;# 
  7172  0F38                     	;# 
  7173  0F39                     	;# 
  7174  0F3A                     	;# 
  7175  0F3B                     	;# 
  7176  0F3C                     	;# 
  7177  0F3D                     	;# 
  7178  0F3E                     	;# 
  7179  0F3F                     	;# 
  7180  0F40                     	;# 
  7181  0F41                     	;# 
  7182  0F43                     	;# 
  7183  0F44                     	;# 
  7184  0F45                     	;# 
  7185  0F46                     	;# 
  7186  0F47                     	;# 
  7187  0F48                     	;# 
  7188  0F49                     	;# 
  7189  0F4A                     	;# 
  7190  0F4B                     	;# 
  7191  0F4C                     	;# 
  7192  0F4E                     	;# 
  7193  0F4F                     	;# 
  7194  0F50                     	;# 
  7195  0F51                     	;# 
  7196  0F52                     	;# 
  7197  0F53                     	;# 
  7198  0F54                     	;# 
  7199  0F55                     	;# 
  7200  0F56                     	;# 
  7201  0F57                     	;# 
  7202  0F59                     	;# 
  7203  0F5A                     	;# 
  7204  0F5B                     	;# 
  7205  0F5C                     	;# 
  7206  0F5D                     	;# 
  7207  0F61                     	;# 
  7208  0F62                     	;# 
  7209  0F64                     	;# 
  7210  0F65                     	;# 
  7211  0F66                     	;# 
  7212  0F67                     	;# 
  7213  0F68                     	;# 
  7214  0F69                     	;# 
  7215  0F6A                     	;# 
  7216  0F6B                     	;# 
  7217  0F6C                     	;# 
  7218  0F6D                     	;# 
  7219  0FE4                     	;# 
  7220  0FE5                     	;# 
  7221  0FE6                     	;# 
  7222  0FE7                     	;# 
  7223  0FE8                     	;# 
  7224  0FE9                     	;# 
  7225  0FEA                     	;# 
  7226  0FEB                     	;# 
  7227  0FED                     	;# 
  7228  0FEE                     	;# 
  7229  0FEF                     	;# 
  7230  0000                     	;# 
  7231  0001                     	;# 
  7232  0002                     	;# 
  7233  0003                     	;# 
  7234  0004                     	;# 
  7235  0005                     	;# 
  7236  0006                     	;# 
  7237  0007                     	;# 
  7238  0008                     	;# 
  7239  0009                     	;# 
  7240  000A                     	;# 
  7241  000B                     	;# 
  7242  000C                     	;# 
  7243  000D                     	;# 
  7244  000E                     	;# 
  7245  000F                     	;# 
  7246  0010                     	;# 
  7247  0011                     	;# 
  7248  0012                     	;# 
  7249  0013                     	;# 
  7250  0014                     	;# 
  7251  0015                     	;# 
  7252  0016                     	;# 
  7253  0017                     	;# 
  7254  0018                     	;# 
  7255  0019                     	;# 
  7256  001A                     	;# 
  7257  001C                     	;# 
  7258  001C                     	;# 
  7259  001D                     	;# 
  7260  001D                     	;# 
  7261  001E                     	;# 
  7262  001F                     	;# 
  7263  008C                     	;# 
  7264  008C                     	;# 
  7265  008D                     	;# 
  7266  008E                     	;# 
  7267  008E                     	;# 
  7268  008F                     	;# 
  7269  0090                     	;# 
  7270  0090                     	;# 
  7271  0091                     	;# 
  7272  0093                     	;# 
  7273  0094                     	;# 
  7274  0095                     	;# 
  7275  0096                     	;# 
  7276  0097                     	;# 
  7277  0098                     	;# 
  7278  0099                     	;# 
  7279  009A                     	;# 
  7280  009B                     	;# 
  7281  009C                     	;# 
  7282  009D                     	;# 
  7283  009E                     	;# 
  7284  010C                     	;# 
  7285  010D                     	;# 
  7286  010E                     	;# 
  7287  010E                     	;# 
  7288  010F                     	;# 
  7289  0110                     	;# 
  7290  0110                     	;# 
  7291  0111                     	;# 
  7292  0112                     	;# 
  7293  0112                     	;# 
  7294  0113                     	;# 
  7295  0114                     	;# 
  7296  0114                     	;# 
  7297  0115                     	;# 
  7298  0116                     	;# 
  7299  0116                     	;# 
  7300  0117                     	;# 
  7301  0119                     	;# 
  7302  0119                     	;# 
  7303  0119                     	;# 
  7304  011A                     	;# 
  7305  011A                     	;# 
  7306  011A                     	;# 
  7307  011B                     	;# 
  7308  011B                     	;# 
  7309  011B                     	;# 
  7310  011B                     	;# 
  7311  011B                     	;# 
  7312  011C                     	;# 
  7313  011C                     	;# 
  7314  011C                     	;# 
  7315  011D                     	;# 
  7316  011D                     	;# 
  7317  011D                     	;# 
  7318  011E                     	;# 
  7319  011E                     	;# 
  7320  011E                     	;# 
  7321  011F                     	;# 
  7322  011F                     	;# 
  7323  011F                     	;# 
  7324  011F                     	;# 
  7325  011F                     	;# 
  7326  018C                     	;# 
  7327  018D                     	;# 
  7328  018E                     	;# 
  7329  018F                     	;# 
  7330  0190                     	;# 
  7331  0191                     	;# 
  7332  0192                     	;# 
  7333  0196                     	;# 
  7334  0197                     	;# 
  7335  0198                     	;# 
  7336  0199                     	;# 
  7337  019A                     	;# 
  7338  019B                     	;# 
  7339  019C                     	;# 
  7340  020C                     	;# 
  7341  020C                     	;# 
  7342  020D                     	;# 
  7343  020E                     	;# 
  7344  020F                     	;# 
  7345  020F                     	;# 
  7346  0210                     	;# 
  7347  0210                     	;# 
  7348  0211                     	;# 
  7349  0211                     	;# 
  7350  0212                     	;# 
  7351  0212                     	;# 
  7352  0213                     	;# 
  7353  0214                     	;# 
  7354  0215                     	;# 
  7355  0215                     	;# 
  7356  0216                     	;# 
  7357  0216                     	;# 
  7358  0217                     	;# 
  7359  0217                     	;# 
  7360  0218                     	;# 
  7361  0218                     	;# 
  7362  0219                     	;# 
  7363  021A                     	;# 
  7364  021B                     	;# 
  7365  021B                     	;# 
  7366  021C                     	;# 
  7367  021C                     	;# 
  7368  021D                     	;# 
  7369  021D                     	;# 
  7370  021E                     	;# 
  7371  021F                     	;# 
  7372  028C                     	;# 
  7373  028C                     	;# 
  7374  028D                     	;# 
  7375  028D                     	;# 
  7376  028E                     	;# 
  7377  028F                     	;# 
  7378  0290                     	;# 
  7379  0290                     	;# 
  7380  0291                     	;# 
  7381  0292                     	;# 
  7382  0292                     	;# 
  7383  0293                     	;# 
  7384  0293                     	;# 
  7385  0294                     	;# 
  7386  0295                     	;# 
  7387  0296                     	;# 
  7388  0296                     	;# 
  7389  0297                     	;# 
  7390  0298                     	;# 
  7391  0298                     	;# 
  7392  0299                     	;# 
  7393  0299                     	;# 
  7394  029A                     	;# 
  7395  029B                     	;# 
  7396  029C                     	;# 
  7397  029C                     	;# 
  7398  029D                     	;# 
  7399  030C                     	;# 
  7400  030C                     	;# 
  7401  030D                     	;# 
  7402  030E                     	;# 
  7403  030F                     	;# 
  7404  0310                     	;# 
  7405  0310                     	;# 
  7406  0311                     	;# 
  7407  0312                     	;# 
  7408  0313                     	;# 
  7409  0314                     	;# 
  7410  0314                     	;# 
  7411  0315                     	;# 
  7412  0316                     	;# 
  7413  0317                     	;# 
  7414  0318                     	;# 
  7415  0318                     	;# 
  7416  0319                     	;# 
  7417  031A                     	;# 
  7418  031B                     	;# 
  7419  031C                     	;# 
  7420  031C                     	;# 
  7421  031D                     	;# 
  7422  031E                     	;# 
  7423  031F                     	;# 
  7424  038C                     	;# 
  7425  038C                     	;# 
  7426  038D                     	;# 
  7427  038E                     	;# 
  7428  0390                     	;# 
  7429  0390                     	;# 
  7430  0391                     	;# 
  7431  0392                     	;# 
  7432  040C                     	;# 
  7433  040D                     	;# 
  7434  040E                     	;# 
  7435  040F                     	;# 
  7436  0410                     	;# 
  7437  0411                     	;# 
  7438  0416                     	;# 
  7439  0416                     	;# 
  7440  0417                     	;# 
  7441  0418                     	;# 
  7442  0418                     	;# 
  7443  0419                     	;# 
  7444  041A                     	;# 
  7445  041A                     	;# 
  7446  041B                     	;# 
  7447  041C                     	;# 
  7448  041C                     	;# 
  7449  041D                     	;# 
  7450  041E                     	;# 
  7451  041F                     	;# 
  7452  048C                     	;# 
  7453  048C                     	;# 
  7454  048D                     	;# 
  7455  048E                     	;# 
  7456  048F                     	;# 
  7457  048F                     	;# 
  7458  0490                     	;# 
  7459  0491                     	;# 
  7460  0492                     	;# 
  7461  0492                     	;# 
  7462  0493                     	;# 
  7463  0494                     	;# 
  7464  0495                     	;# 
  7465  0495                     	;# 
  7466  0496                     	;# 
  7467  0497                     	;# 
  7468  0498                     	;# 
  7469  0499                     	;# 
  7470  049A                     	;# 
  7471  049B                     	;# 
  7472  049C                     	;# 
  7473  049D                     	;# 
  7474  050C                     	;# 
  7475  050C                     	;# 
  7476  050D                     	;# 
  7477  050E                     	;# 
  7478  050F                     	;# 
  7479  050F                     	;# 
  7480  0510                     	;# 
  7481  0511                     	;# 
  7482  0512                     	;# 
  7483  0512                     	;# 
  7484  0513                     	;# 
  7485  0514                     	;# 
  7486  0515                     	;# 
  7487  0515                     	;# 
  7488  0516                     	;# 
  7489  0517                     	;# 
  7490  0518                     	;# 
  7491  0519                     	;# 
  7492  051A                     	;# 
  7493  051B                     	;# 
  7494  051C                     	;# 
  7495  051D                     	;# 
  7496  058C                     	;# 
  7497  058C                     	;# 
  7498  058D                     	;# 
  7499  058E                     	;# 
  7500  058F                     	;# 
  7501  058F                     	;# 
  7502  0590                     	;# 
  7503  0591                     	;# 
  7504  0592                     	;# 
  7505  0593                     	;# 
  7506  060C                     	;# 
  7507  060D                     	;# 
  7508  060E                     	;# 
  7509  060F                     	;# 
  7510  0610                     	;# 
  7511  0611                     	;# 
  7512  0612                     	;# 
  7513  0613                     	;# 
  7514  0614                     	;# 
  7515  0616                     	;# 
  7516  0617                     	;# 
  7517  0618                     	;# 
  7518  0619                     	;# 
  7519  061A                     	;# 
  7520  061B                     	;# 
  7521  061C                     	;# 
  7522  061D                     	;# 
  7523  061E                     	;# 
  7524  068C                     	;# 
  7525  068D                     	;# 
  7526  068E                     	;# 
  7527  068F                     	;# 
  7528  0690                     	;# 
  7529  0691                     	;# 
  7530  0692                     	;# 
  7531  0693                     	;# 
  7532  0694                     	;# 
  7533  070C                     	;# 
  7534  070D                     	;# 
  7535  070E                     	;# 
  7536  070F                     	;# 
  7537  0710                     	;# 
  7538  0711                     	;# 
  7539  0712                     	;# 
  7540  0713                     	;# 
  7541  0714                     	;# 
  7542  0716                     	;# 
  7543  0717                     	;# 
  7544  0718                     	;# 
  7545  0719                     	;# 
  7546  071A                     	;# 
  7547  071B                     	;# 
  7548  071C                     	;# 
  7549  071D                     	;# 
  7550  071E                     	;# 
  7551  0796                     	;# 
  7552  0797                     	;# 
  7553  0798                     	;# 
  7554  0799                     	;# 
  7555  079A                     	;# 
  7556  079B                     	;# 
  7557  080C                     	;# 
  7558  080D                     	;# 
  7559  080E                     	;# 
  7560  080F                     	;# 
  7561  0810                     	;# 
  7562  0811                     	;# 
  7563  0812                     	;# 
  7564  0813                     	;# 
  7565  0814                     	;# 
  7566  081A                     	;# 
  7567  081B                     	;# 
  7568  081C                     	;# 
  7569  081D                     	;# 
  7570  081E                     	;# 
  7571  081F                     	;# 
  7572  088C                     	;# 
  7573  088D                     	;# 
  7574  088E                     	;# 
  7575  088F                     	;# 
  7576  0890                     	;# 
  7577  0891                     	;# 
  7578  0892                     	;# 
  7579  0893                     	;# 
  7580  0895                     	;# 
  7581  0896                     	;# 
  7582  0897                     	;# 
  7583  0898                     	;# 
  7584  0899                     	;# 
  7585  089A                     	;# 
  7586  089B                     	;# 
  7587  090C                     	;# 
  7588  090E                     	;# 
  7589  090F                     	;# 
  7590  091F                     	;# 
  7591  091F                     	;# 
  7592  098F                     	;# 
  7593  098F                     	;# 
  7594  0990                     	;# 
  7595  0991                     	;# 
  7596  0992                     	;# 
  7597  0993                     	;# 
  7598  0994                     	;# 
  7599  0995                     	;# 
  7600  0996                     	;# 
  7601  0997                     	;# 
  7602  0E0F                     	;# 
  7603  0E10                     	;# 
  7604  0E11                     	;# 
  7605  0E12                     	;# 
  7606  0E13                     	;# 
  7607  0E14                     	;# 
  7608  0E15                     	;# 
  7609  0E16                     	;# 
  7610  0E17                     	;# 
  7611  0E18                     	;# 
  7612  0E19                     	;# 
  7613  0E1A                     	;# 
  7614  0E1B                     	;# 
  7615  0E1C                     	;# 
  7616  0E1D                     	;# 
  7617  0E1E                     	;# 
  7618  0E1F                     	;# 
  7619  0E20                     	;# 
  7620  0E21                     	;# 
  7621  0E22                     	;# 
  7622  0E23                     	;# 
  7623  0E24                     	;# 
  7624  0E25                     	;# 
  7625  0E26                     	;# 
  7626  0E27                     	;# 
  7627  0E28                     	;# 
  7628  0E29                     	;# 
  7629  0E2A                     	;# 
  7630  0E2B                     	;# 
  7631  0E2C                     	;# 
  7632  0E2D                     	;# 
  7633  0E2E                     	;# 
  7634  0E2F                     	;# 
  7635  0E30                     	;# 
  7636  0E31                     	;# 
  7637  0E32                     	;# 
  7638  0E33                     	;# 
  7639  0E34                     	;# 
  7640  0E35                     	;# 
  7641  0E36                     	;# 
  7642  0E37                     	;# 
  7643  0E8F                     	;# 
  7644  0E90                     	;# 
  7645  0E91                     	;# 
  7646  0E92                     	;# 
  7647  0E93                     	;# 
  7648  0E94                     	;# 
  7649  0E95                     	;# 
  7650  0E96                     	;# 
  7651  0E97                     	;# 
  7652  0E9C                     	;# 
  7653  0E9D                     	;# 
  7654  0E9E                     	;# 
  7655  0EA1                     	;# 
  7656  0EA2                     	;# 
  7657  0EA3                     	;# 
  7658  0EA4                     	;# 
  7659  0EA5                     	;# 
  7660  0EA9                     	;# 
  7661  0EAA                     	;# 
  7662  0EAB                     	;# 
  7663  0EAC                     	;# 
  7664  0EB1                     	;# 
  7665  0EB2                     	;# 
  7666  0EB3                     	;# 
  7667  0EB8                     	;# 
  7668  0EB9                     	;# 
  7669  0EBA                     	;# 
  7670  0EBB                     	;# 
  7671  0EBC                     	;# 
  7672  0EBD                     	;# 
  7673  0EBE                     	;# 
  7674  0EC3                     	;# 
  7675  0EC5                     	;# 
  7676  0EC6                     	;# 
  7677  0EC7                     	;# 
  7678  0EC8                     	;# 
  7679  0EC9                     	;# 
  7680  0ECA                     	;# 
  7681  0ECB                     	;# 
  7682  0ECC                     	;# 
  7683  0F10                     	;# 
  7684  0F11                     	;# 
  7685  0F12                     	;# 
  7686  0F13                     	;# 
  7687  0F14                     	;# 
  7688  0F15                     	;# 
  7689  0F16                     	;# 
  7690  0F17                     	;# 
  7691  0F18                     	;# 
  7692  0F19                     	;# 
  7693  0F1A                     	;# 
  7694  0F1B                     	;# 
  7695  0F1C                     	;# 
  7696  0F1D                     	;# 
  7697  0F1E                     	;# 
  7698  0F1F                     	;# 
  7699  0F20                     	;# 
  7700  0F21                     	;# 
  7701  0F22                     	;# 
  7702  0F23                     	;# 
  7703  0F24                     	;# 
  7704  0F25                     	;# 
  7705  0F26                     	;# 
  7706  0F27                     	;# 
  7707  0F28                     	;# 
  7708  0F29                     	;# 
  7709  0F2A                     	;# 
  7710  0F2B                     	;# 
  7711  0F2C                     	;# 
  7712  0F2D                     	;# 
  7713  0F2E                     	;# 
  7714  0F2F                     	;# 
  7715  0F30                     	;# 
  7716  0F31                     	;# 
  7717  0F32                     	;# 
  7718  0F38                     	;# 
  7719  0F39                     	;# 
  7720  0F3A                     	;# 
  7721  0F3B                     	;# 
  7722  0F3C                     	;# 
  7723  0F3D                     	;# 
  7724  0F3E                     	;# 
  7725  0F3F                     	;# 
  7726  0F40                     	;# 
  7727  0F41                     	;# 
  7728  0F43                     	;# 
  7729  0F44                     	;# 
  7730  0F45                     	;# 
  7731  0F46                     	;# 
  7732  0F47                     	;# 
  7733  0F48                     	;# 
  7734  0F49                     	;# 
  7735  0F4A                     	;# 
  7736  0F4B                     	;# 
  7737  0F4C                     	;# 
  7738  0F4E                     	;# 
  7739  0F4F                     	;# 
  7740  0F50                     	;# 
  7741  0F51                     	;# 
  7742  0F52                     	;# 
  7743  0F53                     	;# 
  7744  0F54                     	;# 
  7745  0F55                     	;# 
  7746  0F56                     	;# 
  7747  0F57                     	;# 
  7748  0F59                     	;# 
  7749  0F5A                     	;# 
  7750  0F5B                     	;# 
  7751  0F5C                     	;# 
  7752  0F5D                     	;# 
  7753  0F61                     	;# 
  7754  0F62                     	;# 
  7755  0F64                     	;# 
  7756  0F65                     	;# 
  7757  0F66                     	;# 
  7758  0F67                     	;# 
  7759  0F68                     	;# 
  7760  0F69                     	;# 
  7761  0F6A                     	;# 
  7762  0F6B                     	;# 
  7763  0F6C                     	;# 
  7764  0F6D                     	;# 
  7765  0FE4                     	;# 
  7766  0FE5                     	;# 
  7767  0FE6                     	;# 
  7768  0FE7                     	;# 
  7769  0FE8                     	;# 
  7770  0FE9                     	;# 
  7771  0FEA                     	;# 
  7772  0FEB                     	;# 
  7773  0FED                     	;# 
  7774  0FEE                     	;# 
  7775  0FEF                     	;# 
  7776  0000                     	;# 
  7777  0001                     	;# 
  7778  0002                     	;# 
  7779  0003                     	;# 
  7780  0004                     	;# 
  7781  0005                     	;# 
  7782  0006                     	;# 
  7783  0007                     	;# 
  7784  0008                     	;# 
  7785  0009                     	;# 
  7786  000A                     	;# 
  7787  000B                     	;# 
  7788  000C                     	;# 
  7789  000D                     	;# 
  7790  000E                     	;# 
  7791  000F                     	;# 
  7792  0010                     	;# 
  7793  0011                     	;# 
  7794  0012                     	;# 
  7795  0013                     	;# 
  7796  0014                     	;# 
  7797  0015                     	;# 
  7798  0016                     	;# 
  7799  0017                     	;# 
  7800  0018                     	;# 
  7801  0019                     	;# 
  7802  001A                     	;# 
  7803  001C                     	;# 
  7804  001C                     	;# 
  7805  001D                     	;# 
  7806  001D                     	;# 
  7807  001E                     	;# 
  7808  001F                     	;# 
  7809  008C                     	;# 
  7810  008C                     	;# 
  7811  008D                     	;# 
  7812  008E                     	;# 
  7813  008E                     	;# 
  7814  008F                     	;# 
  7815  0090                     	;# 
  7816  0090                     	;# 
  7817  0091                     	;# 
  7818  0093                     	;# 
  7819  0094                     	;# 
  7820  0095                     	;# 
  7821  0096                     	;# 
  7822  0097                     	;# 
  7823  0098                     	;# 
  7824  0099                     	;# 
  7825  009A                     	;# 
  7826  009B                     	;# 
  7827  009C                     	;# 
  7828  009D                     	;# 
  7829  009E                     	;# 
  7830  010C                     	;# 
  7831  010D                     	;# 
  7832  010E                     	;# 
  7833  010E                     	;# 
  7834  010F                     	;# 
  7835  0110                     	;# 
  7836  0110                     	;# 
  7837  0111                     	;# 
  7838  0112                     	;# 
  7839  0112                     	;# 
  7840  0113                     	;# 
  7841  0114                     	;# 
  7842  0114                     	;# 
  7843  0115                     	;# 
  7844  0116                     	;# 
  7845  0116                     	;# 
  7846  0117                     	;# 
  7847  0119                     	;# 
  7848  0119                     	;# 
  7849  0119                     	;# 
  7850  011A                     	;# 
  7851  011A                     	;# 
  7852  011A                     	;# 
  7853  011B                     	;# 
  7854  011B                     	;# 
  7855  011B                     	;# 
  7856  011B                     	;# 
  7857  011B                     	;# 
  7858  011C                     	;# 
  7859  011C                     	;# 
  7860  011C                     	;# 
  7861  011D                     	;# 
  7862  011D                     	;# 
  7863  011D                     	;# 
  7864  011E                     	;# 
  7865  011E                     	;# 
  7866  011E                     	;# 
  7867  011F                     	;# 
  7868  011F                     	;# 
  7869  011F                     	;# 
  7870  011F                     	;# 
  7871  011F                     	;# 
  7872  018C                     	;# 
  7873  018D                     	;# 
  7874  018E                     	;# 
  7875  018F                     	;# 
  7876  0190                     	;# 
  7877  0191                     	;# 
  7878  0192                     	;# 
  7879  0196                     	;# 
  7880  0197                     	;# 
  7881  0198                     	;# 
  7882  0199                     	;# 
  7883  019A                     	;# 
  7884  019B                     	;# 
  7885  019C                     	;# 
  7886  020C                     	;# 
  7887  020C                     	;# 
  7888  020D                     	;# 
  7889  020E                     	;# 
  7890  020F                     	;# 
  7891  020F                     	;# 
  7892  0210                     	;# 
  7893  0210                     	;# 
  7894  0211                     	;# 
  7895  0211                     	;# 
  7896  0212                     	;# 
  7897  0212                     	;# 
  7898  0213                     	;# 
  7899  0214                     	;# 
  7900  0215                     	;# 
  7901  0215                     	;# 
  7902  0216                     	;# 
  7903  0216                     	;# 
  7904  0217                     	;# 
  7905  0217                     	;# 
  7906  0218                     	;# 
  7907  0218                     	;# 
  7908  0219                     	;# 
  7909  021A                     	;# 
  7910  021B                     	;# 
  7911  021B                     	;# 
  7912  021C                     	;# 
  7913  021C                     	;# 
  7914  021D                     	;# 
  7915  021D                     	;# 
  7916  021E                     	;# 
  7917  021F                     	;# 
  7918  028C                     	;# 
  7919  028C                     	;# 
  7920  028D                     	;# 
  7921  028D                     	;# 
  7922  028E                     	;# 
  7923  028F                     	;# 
  7924  0290                     	;# 
  7925  0290                     	;# 
  7926  0291                     	;# 
  7927  0292                     	;# 
  7928  0292                     	;# 
  7929  0293                     	;# 
  7930  0293                     	;# 
  7931  0294                     	;# 
  7932  0295                     	;# 
  7933  0296                     	;# 
  7934  0296                     	;# 
  7935  0297                     	;# 
  7936  0298                     	;# 
  7937  0298                     	;# 
  7938  0299                     	;# 
  7939  0299                     	;# 
  7940  029A                     	;# 
  7941  029B                     	;# 
  7942  029C                     	;# 
  7943  029C                     	;# 
  7944  029D                     	;# 
  7945  030C                     	;# 
  7946  030C                     	;# 
  7947  030D                     	;# 
  7948  030E                     	;# 
  7949  030F                     	;# 
  7950  0310                     	;# 
  7951  0310                     	;# 
  7952  0311                     	;# 
  7953  0312                     	;# 
  7954  0313                     	;# 
  7955  0314                     	;# 
  7956  0314                     	;# 
  7957  0315                     	;# 
  7958  0316                     	;# 
  7959  0317                     	;# 
  7960  0318                     	;# 
  7961  0318                     	;# 
  7962  0319                     	;# 
  7963  031A                     	;# 
  7964  031B                     	;# 
  7965  031C                     	;# 
  7966  031C                     	;# 
  7967  031D                     	;# 
  7968  031E                     	;# 
  7969  031F                     	;# 
  7970  038C                     	;# 
  7971  038C                     	;# 
  7972  038D                     	;# 
  7973  038E                     	;# 
  7974  0390                     	;# 
  7975  0390                     	;# 
  7976  0391                     	;# 
  7977  0392                     	;# 
  7978  040C                     	;# 
  7979  040D                     	;# 
  7980  040E                     	;# 
  7981  040F                     	;# 
  7982  0410                     	;# 
  7983  0411                     	;# 
  7984  0416                     	;# 
  7985  0416                     	;# 
  7986  0417                     	;# 
  7987  0418                     	;# 
  7988  0418                     	;# 
  7989  0419                     	;# 
  7990  041A                     	;# 
  7991  041A                     	;# 
  7992  041B                     	;# 
  7993  041C                     	;# 
  7994  041C                     	;# 
  7995  041D                     	;# 
  7996  041E                     	;# 
  7997  041F                     	;# 
  7998  048C                     	;# 
  7999  048C                     	;# 
  8000  048D                     	;# 
  8001  048E                     	;# 
  8002  048F                     	;# 
  8003  048F                     	;# 
  8004  0490                     	;# 
  8005  0491                     	;# 
  8006  0492                     	;# 
  8007  0492                     	;# 
  8008  0493                     	;# 
  8009  0494                     	;# 
  8010  0495                     	;# 
  8011  0495                     	;# 
  8012  0496                     	;# 
  8013  0497                     	;# 
  8014  0498                     	;# 
  8015  0499                     	;# 
  8016  049A                     	;# 
  8017  049B                     	;# 
  8018  049C                     	;# 
  8019  049D                     	;# 
  8020  050C                     	;# 
  8021  050C                     	;# 
  8022  050D                     	;# 
  8023  050E                     	;# 
  8024  050F                     	;# 
  8025  050F                     	;# 
  8026  0510                     	;# 
  8027  0511                     	;# 
  8028  0512                     	;# 
  8029  0512                     	;# 
  8030  0513                     	;# 
  8031  0514                     	;# 
  8032  0515                     	;# 
  8033  0515                     	;# 
  8034  0516                     	;# 
  8035  0517                     	;# 
  8036  0518                     	;# 
  8037  0519                     	;# 
  8038  051A                     	;# 
  8039  051B                     	;# 
  8040  051C                     	;# 
  8041  051D                     	;# 
  8042  058C                     	;# 
  8043  058C                     	;# 
  8044  058D                     	;# 
  8045  058E                     	;# 
  8046  058F                     	;# 
  8047  058F                     	;# 
  8048  0590                     	;# 
  8049  0591                     	;# 
  8050  0592                     	;# 
  8051  0593                     	;# 
  8052  060C                     	;# 
  8053  060D                     	;# 
  8054  060E                     	;# 
  8055  060F                     	;# 
  8056  0610                     	;# 
  8057  0611                     	;# 
  8058  0612                     	;# 
  8059  0613                     	;# 
  8060  0614                     	;# 
  8061  0616                     	;# 
  8062  0617                     	;# 
  8063  0618                     	;# 
  8064  0619                     	;# 
  8065  061A                     	;# 
  8066  061B                     	;# 
  8067  061C                     	;# 
  8068  061D                     	;# 
  8069  061E                     	;# 
  8070  068C                     	;# 
  8071  068D                     	;# 
  8072  068E                     	;# 
  8073  068F                     	;# 
  8074  0690                     	;# 
  8075  0691                     	;# 
  8076  0692                     	;# 
  8077  0693                     	;# 
  8078  0694                     	;# 
  8079  070C                     	;# 
  8080  070D                     	;# 
  8081  070E                     	;# 
  8082  070F                     	;# 
  8083  0710                     	;# 
  8084  0711                     	;# 
  8085  0712                     	;# 
  8086  0713                     	;# 
  8087  0714                     	;# 
  8088  0716                     	;# 
  8089  0717                     	;# 
  8090  0718                     	;# 
  8091  0719                     	;# 
  8092  071A                     	;# 
  8093  071B                     	;# 
  8094  071C                     	;# 
  8095  071D                     	;# 
  8096  071E                     	;# 
  8097  0796                     	;# 
  8098  0797                     	;# 
  8099  0798                     	;# 
  8100  0799                     	;# 
  8101  079A                     	;# 
  8102  079B                     	;# 
  8103  080C                     	;# 
  8104  080D                     	;# 
  8105  080E                     	;# 
  8106  080F                     	;# 
  8107  0810                     	;# 
  8108  0811                     	;# 
  8109  0812                     	;# 
  8110  0813                     	;# 
  8111  0814                     	;# 
  8112  081A                     	;# 
  8113  081B                     	;# 
  8114  081C                     	;# 
  8115  081D                     	;# 
  8116  081E                     	;# 
  8117  081F                     	;# 
  8118  088C                     	;# 
  8119  088D                     	;# 
  8120  088E                     	;# 
  8121  088F                     	;# 
  8122  0890                     	;# 
  8123  0891                     	;# 
  8124  0892                     	;# 
  8125  0893                     	;# 
  8126  0895                     	;# 
  8127  0896                     	;# 
  8128  0897                     	;# 
  8129  0898                     	;# 
  8130  0899                     	;# 
  8131  089A                     	;# 
  8132  089B                     	;# 
  8133  090C                     	;# 
  8134  090E                     	;# 
  8135  090F                     	;# 
  8136  091F                     	;# 
  8137  091F                     	;# 
  8138  098F                     	;# 
  8139  098F                     	;# 
  8140  0990                     	;# 
  8141  0991                     	;# 
  8142  0992                     	;# 
  8143  0993                     	;# 
  8144  0994                     	;# 
  8145  0995                     	;# 
  8146  0996                     	;# 
  8147  0997                     	;# 
  8148  0E0F                     	;# 
  8149  0E10                     	;# 
  8150  0E11                     	;# 
  8151  0E12                     	;# 
  8152  0E13                     	;# 
  8153  0E14                     	;# 
  8154  0E15                     	;# 
  8155  0E16                     	;# 
  8156  0E17                     	;# 
  8157  0E18                     	;# 
  8158  0E19                     	;# 
  8159  0E1A                     	;# 
  8160  0E1B                     	;# 
  8161  0E1C                     	;# 
  8162  0E1D                     	;# 
  8163  0E1E                     	;# 
  8164  0E1F                     	;# 
  8165  0E20                     	;# 
  8166  0E21                     	;# 
  8167  0E22                     	;# 
  8168  0E23                     	;# 
  8169  0E24                     	;# 
  8170  0E25                     	;# 
  8171  0E26                     	;# 
  8172  0E27                     	;# 
  8173  0E28                     	;# 
  8174  0E29                     	;# 
  8175  0E2A                     	;# 
  8176  0E2B                     	;# 
  8177  0E2C                     	;# 
  8178  0E2D                     	;# 
  8179  0E2E                     	;# 
  8180  0E2F                     	;# 
  8181  0E30                     	;# 
  8182  0E31                     	;# 
  8183  0E32                     	;# 
  8184  0E33                     	;# 
  8185  0E34                     	;# 
  8186  0E35                     	;# 
  8187  0E36                     	;# 
  8188  0E37                     	;# 
  8189  0E8F                     	;# 
  8190  0E90                     	;# 
  8191  0E91                     	;# 
  8192  0E92                     	;# 
  8193  0E93                     	;# 
  8194  0E94                     	;# 
  8195  0E95                     	;# 
  8196  0E96                     	;# 
  8197  0E97                     	;# 
  8198  0E9C                     	;# 
  8199  0E9D                     	;# 
  8200  0E9E                     	;# 
  8201  0EA1                     	;# 
  8202  0EA2                     	;# 
  8203  0EA3                     	;# 
  8204  0EA4                     	;# 
  8205  0EA5                     	;# 
  8206  0EA9                     	;# 
  8207  0EAA                     	;# 
  8208  0EAB                     	;# 
  8209  0EAC                     	;# 
  8210  0EB1                     	;# 
  8211  0EB2                     	;# 
  8212  0EB3                     	;# 
  8213  0EB8                     	;# 
  8214  0EB9                     	;# 
  8215  0EBA                     	;# 
  8216  0EBB                     	;# 
  8217  0EBC                     	;# 
  8218  0EBD                     	;# 
  8219  0EBE                     	;# 
  8220  0EC3                     	;# 
  8221  0EC5                     	;# 
  8222  0EC6                     	;# 
  8223  0EC7                     	;# 
  8224  0EC8                     	;# 
  8225  0EC9                     	;# 
  8226  0ECA                     	;# 
  8227  0ECB                     	;# 
  8228  0ECC                     	;# 
  8229  0F10                     	;# 
  8230  0F11                     	;# 
  8231  0F12                     	;# 
  8232  0F13                     	;# 
  8233  0F14                     	;# 
  8234  0F15                     	;# 
  8235  0F16                     	;# 
  8236  0F17                     	;# 
  8237  0F18                     	;# 
  8238  0F19                     	;# 
  8239  0F1A                     	;# 
  8240  0F1B                     	;# 
  8241  0F1C                     	;# 
  8242  0F1D                     	;# 
  8243  0F1E                     	;# 
  8244  0F1F                     	;# 
  8245  0F20                     	;# 
  8246  0F21                     	;# 
  8247  0F22                     	;# 
  8248  0F23                     	;# 
  8249  0F24                     	;# 
  8250  0F25                     	;# 
  8251  0F26                     	;# 
  8252  0F27                     	;# 
  8253  0F28                     	;# 
  8254  0F29                     	;# 
  8255  0F2A                     	;# 
  8256  0F2B                     	;# 
  8257  0F2C                     	;# 
  8258  0F2D                     	;# 
  8259  0F2E                     	;# 
  8260  0F2F                     	;# 
  8261  0F30                     	;# 
  8262  0F31                     	;# 
  8263  0F32                     	;# 
  8264  0F38                     	;# 
  8265  0F39                     	;# 
  8266  0F3A                     	;# 
  8267  0F3B                     	;# 
  8268  0F3C                     	;# 
  8269  0F3D                     	;# 
  8270  0F3E                     	;# 
  8271  0F3F                     	;# 
  8272  0F40                     	;# 
  8273  0F41                     	;# 
  8274  0F43                     	;# 
  8275  0F44                     	;# 
  8276  0F45                     	;# 
  8277  0F46                     	;# 
  8278  0F47                     	;# 
  8279  0F48                     	;# 
  8280  0F49                     	;# 
  8281  0F4A                     	;# 
  8282  0F4B                     	;# 
  8283  0F4C                     	;# 
  8284  0F4E                     	;# 
  8285  0F4F                     	;# 
  8286  0F50                     	;# 
  8287  0F51                     	;# 
  8288  0F52                     	;# 
  8289  0F53                     	;# 
  8290  0F54                     	;# 
  8291  0F55                     	;# 
  8292  0F56                     	;# 
  8293  0F57                     	;# 
  8294  0F59                     	;# 
  8295  0F5A                     	;# 
  8296  0F5B                     	;# 
  8297  0F5C                     	;# 
  8298  0F5D                     	;# 
  8299  0F61                     	;# 
  8300  0F62                     	;# 
  8301  0F64                     	;# 
  8302  0F65                     	;# 
  8303  0F66                     	;# 
  8304  0F67                     	;# 
  8305  0F68                     	;# 
  8306  0F69                     	;# 
  8307  0F6A                     	;# 
  8308  0F6B                     	;# 
  8309  0F6C                     	;# 
  8310  0F6D                     	;# 
  8311  0FE4                     	;# 
  8312  0FE5                     	;# 
  8313  0FE6                     	;# 
  8314  0FE7                     	;# 
  8315  0FE8                     	;# 
  8316  0FE9                     	;# 
  8317  0FEA                     	;# 
  8318  0FEB                     	;# 
  8319  0FED                     	;# 
  8320  0FEE                     	;# 
  8321  0FEF                     	;# 
  8322                           
  8323 ;; Function _rd1RegCompleteHandler is unused but had its address taken
  8324  0000                     
  8325 ;; Function _rd2RegCompleteHandler is unused but had its address taken
  8326  0000                     
  8327 ;; Function _wr1RegCompleteHandler is unused but had its address taken
  8328  0000                     
  8329 ;; Function _wr2RegCompleteHandler is unused but had its address taken
  8330  0000                     
  8331 ;; Function _rdBlkRegCompleteHandler is unused but had its address taken
  8332  0000                     
  8333 ;; Function _I2C1_DO_IDLE is unused but had its address taken
  8334  0000                     
  8335 ;; Function _I2C1_DO_SEND_ADR_READ is unused but had its address taken
  8336  0000                     
  8337 ;; Function _I2C1_DO_SEND_ADR_WRITE is unused but had its address taken
  8338  0000                     
  8339 ;; Function _I2C1_DO_TX is unused but had its address taken
  8340  0000                     
  8341 ;; Function _I2C1_DO_RX is unused but had its address taken
  8342  0000                     
  8343 ;; Function _I2C1_DO_RCEN is unused but had its address taken
  8344  0000                     
  8345 ;; Function _I2C1_DO_TX_EMPTY is unused but had its address taken
  8346  0000                     
  8347 ;; Function _I2C1_DO_SEND_RESTART_READ is unused but had its address taken
  8348  0000                     
  8349 ;; Function _I2C1_DO_SEND_RESTART_WRITE is unused but had its address taken
  8350  0000                     
  8351 ;; Function _I2C1_DO_SEND_RESTART is unused but had its address taken
  8352  0000                     
  8353 ;; Function _I2C1_DO_SEND_STOP is unused but had its address taken
  8354  0000                     
  8355 ;; Function _I2C1_DO_RX_ACK is unused but had its address taken
  8356  0000                     
  8357 ;; Function _I2C1_DO_RX_NACK_STOP is unused but had its address taken
  8358  0000                     
  8359 ;; Function _I2C1_DO_RX_NACK_RESTART is unused but had its address taken
  8360  0000                     
  8361 ;; Function _I2C1_DO_RESET is unused but had its address taken
  8362  0000                     
  8363 ;; Function _I2C1_DO_ADDRESS_NACK is unused but had its address taken
  8364  0000                     
  8365 ;; Function _I2C1_CallbackReturnStop is unused but had its address taken
  8366  0000                     
  8367 ;; Function _I2C1_CallbackReturnReset is unused but had its address taken
  8368  0000                     
  8369                           	psect	stringtext1
  8370  1800                     __pstringtext1:
  8371  1800                     _i2c1_fsmStateTable:
  8372  1800  3400               	retlw	0
  8373  1801  3400               	retlw	0
  8374  1802  3400               	retlw	0
  8375  1803  3400               	retlw	0
  8376  1804  3400               	retlw	0
  8377  1805  3400               	retlw	0
  8378  1806  3400               	retlw	0
  8379  1807  3400               	retlw	0
  8380  1808  3400               	retlw	0
  8381  1809  3400               	retlw	0
  8382  180A  3400               	retlw	0
  8383  180B  3400               	retlw	0
  8384  180C  3400               	retlw	0
  8385  180D  3400               	retlw	0
  8386  180E  3400               	retlw	0
  8387  180F  3400               	retlw	0
  8388  1810  3400               	retlw	0
  8389  1811  3400               	retlw	0
  8390  1812  3400               	retlw	0
  8391  1813  3400               	retlw	0
  8392  1814  3400               	retlw	0
  8393  1815  3400               	retlw	0
  8394  1816  3400               	retlw	0
  8395  1817  3400               	retlw	0
  8396  1818  3400               	retlw	0
  8397  1819  3400               	retlw	0
  8398  181A  3400               	retlw	0
  8399  181B  3400               	retlw	0
  8400  181C  3400               	retlw	0
  8401  181D  3400               	retlw	0
  8402  181E  3400               	retlw	0
  8403  181F  3400               	retlw	0
  8404  1820                     __end_of_i2c1_fsmStateTable:
  8405                           
  8406                           	psect	nvBANK2
  8407  0159                     __pnvBANK2:
  8408  0159                     _cursor:
  8409  0159                     	ds	4
  8410  015D                     _data_address:
  8411  015D                     	ds	2
  8412  015F                     _TMR1_InterruptHandler:
  8413  015F                     	ds	2
  8414  0161                     _timer1ReloadVal:
  8415  0161                     	ds	2
  8416  0163                     _alarmc:
  8417  0163                     	ds	1
  8418  0164                     _M:
  8419  0164                     	ds	1
  8420  0165                     _L:
  8421  0165                     	ds	1
  8422  0166                     _T:
  8423  0166                     	ds	1
  8424  0167                     _modification:
  8425  0167                     	ds	1
  8426  0168                     _pwm_control:
  8427  0168                     	ds	1
  8428  0169                     _max_temperature:
  8429  0169                     	ds	1
  8430  016A                     _last_temperature:
  8431  016A                     	ds	1
  8432  016B                     _l_threshold:
  8433  016B                     	ds	1
  8434  016C                     _t_threshold:
  8435  016C                     	ds	1
  8436  016D                     _counter:
  8437  016D                     	ds	1
  8438  016E                     _last_luminosity:
  8439  016E                     	ds	1
  8440  016F                     _max_luminosity:
  8441  016F                     	ds	1
  8442                           
  8443                           	psect	nvBANK3
  8444  01DD                     __pnvBANK3:
  8445  01DD                     _m:
  8446  01DD                     	ds	1
  8447  0013                     _TRISCbits	set	19
  8448  000E                     _PORTCbits	set	14
  8449  000D                     _PORTBbits	set	13
  8450  0016                     _LATAbits	set	22
  8451  000C                     _PORTAbits	set	12
  8452  0014                     _TRISD	set	20
  8453  0013                     _TRISC	set	19
  8454  0012                     _TRISB	set	18
  8455  0011                     _TRISA	set	17
  8456  0015                     _TRISE	set	21
  8457  0018                     _LATC	set	24
  8458  0017                     _LATB	set	23
  8459  0016                     _LATA	set	22
  8460  0019                     _LATD	set	25
  8461  001A                     _LATE	set	26
  8462  000B                     _INTCONbits	set	11
  8463  0094                     _ADCON1bits	set	148
  8464  008E                     _ADPREVL	set	142
  8465  008F                     _ADPREVH	set	143
  8466  0097                     _ADSTATbits	set	151
  8467  0090                     _ADACCL	set	144
  8468  0091                     _ADACCH	set	145
  8469  0095                     _ADCON2bits	set	149
  8470  0096                     _ADCON3bits	set	150
  8471  008C                     _ADRESL	set	140
  8472  008D                     _ADRESH	set	141
  8473  0093                     _ADCON0bits	set	147
  8474  009D                     _ADACQ	set	157
  8475  0093                     _ADCON0	set	147
  8476  0098                     _ADCLK	set	152
  8477  0099                     _ADACT	set	153
  8478  009A                     _ADREF	set	154
  8479  0097                     _ADSTAT	set	151
  8480  0096                     _ADCON3	set	150
  8481  0095                     _ADCON2	set	149
  8482  0094                     _ADCON1	set	148
  8483  009C                     _ADPRE	set	156
  8484  009B                     _ADCAP	set	155
  8485  009E                     _ADPCH	set	158
  8486  0116                     _ADERRL	set	278
  8487  0117                     _ADERRH	set	279
  8488  0114                     _ADFLTRL	set	276
  8489  0115                     _ADFLTRH	set	277
  8490  010C                     _ADCNT	set	268
  8491  010D                     _ADRPT	set	269
  8492  0113                     _ADSTPTH	set	275
  8493  0112                     _ADSTPTL	set	274
  8494  0111                     _ADUTHH	set	273
  8495  0110                     _ADUTHL	set	272
  8496  010F                     _ADLTHH	set	271
  8497  010E                     _ADLTHL	set	270
  8498  018F                     _SSP1STATbits	set	399
  8499  0191                     _SSP1CON2bits	set	401
  8500  018C                     _SSP1BUF	set	396
  8501  0190                     _SSP1CON1bits	set	400
  8502  018D                     _SSP1ADD	set	397
  8503  0191                     _SSP1CON2	set	401
  8504  0190                     _SSP1CON1	set	400
  8505  018F                     _SSP1STAT	set	399
  8506  020F                     _T1GCONbits	set	527
  8507  020E                     _T1CONbits	set	526
  8508  020E                     _T1CON	set	526
  8509  020C                     _TMR1L	set	524
  8510  020D                     _TMR1H	set	525
  8511  0211                     _T1CLK	set	529
  8512  0210                     _T1GATE	set	528
  8513  020F                     _T1GCON	set	527
  8514  021F                     _CCPTMRS1bits	set	543
  8515  028D                     _PR2	set	653
  8516  028C                     _TMR2	set	652
  8517  028E                     _T2CONbits	set	654
  8518  0291                     _T2RSTbits	set	657
  8519  028F                     _T2HLTbits	set	655
  8520  028E                     _T2CON	set	654
  8521  028C                     _T2TMR	set	652
  8522  028D                     _T2PR	set	653
  8523  0291                     _T2RST	set	657
  8524  028F                     _T2HLT	set	655
  8525  0290                     _T2CLKCON	set	656
  8526  038C                     _PWM6DCL	set	908
  8527  038D                     _PWM6DCH	set	909
  8528  038E                     _PWM6CON	set	910
  8529  0719                     _PIE3bits	set	1817
  8530  070F                     _PIR3bits	set	1807
  8531  0710                     _PIR4bits	set	1808
  8532  071A                     _PIE4bits	set	1818
  8533  079B                     _PMD5	set	1947
  8534  079A                     _PMD4	set	1946
  8535  0799                     _PMD3	set	1945
  8536  0798                     _PMD2	set	1944
  8537  0797                     _PMD1	set	1943
  8538  0796                     _PMD0	set	1942
  8539  081F                     _NVMCON2	set	2079
  8540  081C                     _NVMDATL	set	2076
  8541  081D                     _NVMDATH	set	2077
  8542  081E                     _NVMCON1bits	set	2078
  8543  081B                     _NVMADRH	set	2075
  8544  081A                     _NVMADRL	set	2074
  8545  0892                     _OSCTUNE	set	2194
  8546  0893                     _OSCFRQ	set	2195
  8547  0891                     _OSCEN	set	2193
  8548  088F                     _OSCCON3	set	2191
  8549  088D                     _OSCCON1	set	2189
  8550  0E8F                     _PPSLOCKbits	set	3727
  8551  0E8F                     _PPSLOCK	set	3727
  8552  0EC6                     _SSP1DATPPS	set	3782
  8553  0EC5                     _SSP1CLKPPS	set	3781
  8554  0F16                     _RA6PPS	set	3862
  8555  0F24                     _RC4PPS	set	3876
  8556  0F23                     _RC3PPS	set	3875
  8557  0F68                     _INLVLE	set	3944
  8558  0F5D                     _INLVLD	set	3933
  8559  0F52                     _INLVLC	set	3922
  8560  0F47                     _INLVLB	set	3911
  8561  0F3C                     _INLVLA	set	3900
  8562  0F67                     _SLRCONE	set	3943
  8563  0F5C                     _SLRCOND	set	3932
  8564  0F51                     _SLRCONC	set	3921
  8565  0F46                     _SLRCONB	set	3910
  8566  0F3B                     _SLRCONA	set	3899
  8567  0F5B                     _ODCOND	set	3931
  8568  0F50                     _ODCONC	set	3920
  8569  0F45                     _ODCONB	set	3909
  8570  0F3A                     _ODCONA	set	3898
  8571  0F66                     _ODCONE	set	3942
  8572  0F4F                     _WPUC	set	3919
  8573  0F39                     _WPUA	set	3897
  8574  0F44                     _WPUB	set	3908
  8575  0F65                     _WPUE	set	3941
  8576  0F5A                     _WPUD	set	3930
  8577  0F38                     _ANSELA	set	3896
  8578  0F64                     _ANSELE	set	3940
  8579  0F43                     _ANSELB	set	3907
  8580  0F4E                     _ANSELC	set	3918
  8581  0F59                     _ANSELD	set	3929
  8582                           
  8583                           	psect	stringtext2
  8584  1820                     __pstringtext2:
  8585  1820                     STR_1:
  8586  1820  3425               	retlw	37	;'%'
  8587  1821  3430               	retlw	48	;'0'
  8588  1822  3432               	retlw	50	;'2'
  8589  1823  3464               	retlw	100	;'d'
  8590  1824  343A               	retlw	58	;':'
  8591  1825  3425               	retlw	37	;'%'
  8592  1826  3430               	retlw	48	;'0'
  8593  1827  3432               	retlw	50	;'2'
  8594  1828  3464               	retlw	100	;'d'
  8595  1829  343A               	retlw	58	;':'
  8596  182A  3425               	retlw	37	;'%'
  8597  182B  3430               	retlw	48	;'0'
  8598  182C  3432               	retlw	50	;'2'
  8599  182D  3464               	retlw	100	;'d'
  8600  182E  3420               	retlw	32	;' '
  8601  182F  3425               	retlw	37	;'%'
  8602  1830  3463               	retlw	99	;'c'
  8603  1831  3425               	retlw	37	;'%'
  8604  1832  3463               	retlw	99	;'c'
  8605  1833  3425               	retlw	37	;'%'
  8606  1834  3463               	retlw	99	;'c'
  8607  1835  3425               	retlw	37	;'%'
  8608  1836  3463               	retlw	99	;'c'
  8609  1837  3420               	retlw	32	;' '
  8610  1838  3420               	retlw	32	;' '
  8611  1839  3425               	retlw	37	;'%'
  8612  183A  3463               	retlw	99	;'c'
  8613  183B  3400               	retlw	0
  8614                           
  8615                           	psect	stringtext3
  8616  183C                     __pstringtext3:
  8617  183C                     STR_2:
  8618  183C  3425               	retlw	37	;'%'
  8619  183D  3430               	retlw	48	;'0'
  8620  183E  3432               	retlw	50	;'2'
  8621  183F  3464               	retlw	100	;'d'
  8622  1840  3420               	retlw	32	;' '
  8623  1841  3443               	retlw	67	;'C'
  8624  1842  3420               	retlw	32	;' '
  8625  1843  3420               	retlw	32	;' '
  8626  1844  3420               	retlw	32	;' '
  8627  1845  3420               	retlw	32	;' '
  8628  1846  3420               	retlw	32	;' '
  8629  1847  3420               	retlw	32	;' '
  8630  1848  3420               	retlw	32	;' '
  8631  1849  3420               	retlw	32	;' '
  8632  184A  3420               	retlw	32	;' '
  8633  184B  3425               	retlw	37	;'%'
  8634  184C  3430               	retlw	48	;'0'
  8635  184D  3431               	retlw	49	;'1'
  8636  184E  3464               	retlw	100	;'d'
  8637  184F  3420               	retlw	32	;' '
  8638  1850  346C               	retlw	108	;'l'
  8639  1851  3400               	retlw	0
  8640                           
  8641                           	psect	stringtext4
  8642  0000                     __pstringtext4:
  8643                           
  8644                           	psect	cinit
  8645  001A                     start_initialization:	
  8646                           ; #config settings
  8647                           
  8648  001A                     __initialization:
  8649                           
  8650                           ; Clear objects allocated to BANK0
  8651  001A  0020               	movlb	0	; select bank0
  8652  001B  01EE               	clrf	__pbssBANK0& (0+127)
  8653  001C  01EF               	clrf	(__pbssBANK0+1)& (0+127)
  8654                           
  8655                           ; Clear objects allocated to BANK1
  8656  001D  0021               	movlb	1	; select bank1
  8657  001E  01EE               	clrf	__pbssBANK1& (0+127)
  8658  001F  01EF               	clrf	(__pbssBANK1+1)& (0+127)
  8659                           
  8660                           ; Clear objects allocated to BANK2
  8661  0020  3020               	movlw	low __pbssBANK2
  8662  0021  0084               	movwf	4
  8663  0022  3001               	movlw	high __pbssBANK2
  8664  0023  0085               	movwf	5
  8665  0024  301D               	movlw	29
  8666  0025  3190  2065  3180   	fcall	clear_ram0
  8667                           
  8668                           ; Clear objects allocated to BANK3
  8669  0028  30A0               	movlw	low __pbssBANK3
  8670  0029  0084               	movwf	4
  8671  002A  3001               	movlw	high __pbssBANK3
  8672  002B  0085               	movwf	5
  8673  002C  303D               	movlw	61
  8674  002D  3190  2065  3180   	fcall	clear_ram0
  8675  0030                     end_of_initialization:	
  8676                           ;End of C runtime variable initialization code
  8677                           
  8678  0030                     __end_of__initialization:
  8679  0030  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8680  0031  0020               	movlb	0
  8681  0032  3180  2834         	ljmp	_main	;jump to C main() function
  8682                           
  8683                           	psect	bssBANK0
  8684  006E                     __pbssBANK0:
  8685  006E                     _flags:
  8686  006E                     	ds	2
  8687                           
  8688                           	psect	bssBANK1
  8689  00EE                     __pbssBANK1:
  8690  00EE                     _variable2:
  8691  00EE                     	ds	1
  8692  00EF                     _variable1:
  8693  00EF                     	ds	1
  8694                           
  8695                           	psect	bssBANK2
  8696  0120                     __pbssBANK2:
  8697  0120                     _nout:
  8698  0120                     	ds	2
  8699  0122                     _width:
  8700  0122                     	ds	2
  8701  0124                     _prec:
  8702  0124                     	ds	2
  8703  0126                     _minimode:
  8704  0126                     	ds	1
  8705  0127                     _alarm2:
  8706  0127                     	ds	1
  8707  0128                     _alarm1:
  8708  0128                     	ds	1
  8709  0129                     _mode:
  8710  0129                     	ds	1
  8711  012A                     _min_temperature:
  8712  012A                     	ds	1
  8713  012B                     _tala_counter:
  8714  012B                     	ds	1
  8715  012C                     _min_luminosity:
  8716  012C                     	ds	1
  8717  012D                     _seconds:
  8718  012D                     	ds	1
  8719  012E                     _minutes:
  8720  012E                     	ds	1
  8721  012F                     _hours:
  8722  012F                     	ds	1
  8723  0130                     _checksum:
  8724  0130                     	ds	1
  8725  0131                     _CLKM:
  8726  0131                     	ds	1
  8727  0132                     _CLKH:
  8728  0132                     	ds	1
  8729  0133                     _ALAF:
  8730  0133                     	ds	1
  8731  0134                     _ALAL:
  8732  0134                     	ds	1
  8733  0135                     _ALAT:
  8734  0135                     	ds	1
  8735  0136                     _TALA:
  8736  0136                     	ds	1
  8737  0137                     _PMON:
  8738  0137                     	ds	1
  8739  0138                     _RI:
  8740  0138                     	ds	1
  8741  0139                     _WI:
  8742  0139                     	ds	1
  8743  013A                     _NR:
  8744  013A                     	ds	1
  8745  013B                     _NREG:
  8746  013B                     	ds	1
  8747  013C                     _magic_word:
  8748  013C                     	ds	1
  8749                           
  8750                           	psect	bssBANK3
  8751  01A0                     __pbssBANK3:
  8752  01A0                     _I2C1_Status:
  8753  01A0                     	ds	29
  8754  01BD                     _dbuf:
  8755  01BD                     	ds	32
  8756                           
  8757                           	psect	clrtext
  8758  1065                     clear_ram0:	
  8759                           ;	Called with FSR0 containing the base address, and
  8760                           ;	WREG with the size to clear
  8761                           
  8762  1065  0064               	clrwdt	;clear the watchdog before getting into this loop
  8763  1066                     clrloop0:
  8764  1066  0180               	clrf	0	;clear RAM location pointed to by FSR
  8765  1067  3101               	addfsr 0,1
  8766  1068  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  8767  1069  2866               	goto	clrloop0	;have we reached the end yet?
  8768  106A  3400               	retlw	0	;all done for this memory range, return
  8769                           
  8770                           	psect	cstackBANK2
  8771  013D                     __pcstackBANK2:
  8772  013D                     ??_PMD_Initialize:
  8773  013D                     ??_I2C1_Initialize:	
  8774                           ; 1 bytes @ 0x0
  8775                           
  8776  013D                     ??_OSCILLATOR_Initialize:	
  8777                           ; 1 bytes @ 0x0
  8778                           
  8779  013D                     ??_PWM6_Initialize:	
  8780                           ; 1 bytes @ 0x0
  8781                           
  8782  013D                     ??_TMR2_Initialize:	
  8783                           ; 1 bytes @ 0x0
  8784                           
  8785  013D                     ?_TMR1_SetInterruptHandler:	
  8786                           ; 1 bytes @ 0x0
  8787                           
  8788  013D                     ??_WriteI2C:	
  8789                           ; 1 bytes @ 0x0
  8790                           
  8791  013D                     ??_deactivatePWM:	
  8792                           ; 1 bytes @ 0x0
  8793                           
  8794  013D                     ??_deactivateAlarm:	
  8795                           ; 1 bytes @ 0x0
  8796                           
  8797  013D                     ??_OpenI2C:	
  8798                           ; 1 bytes @ 0x0
  8799                           
  8800  013D                     ??_PIN_MANAGER_Initialize:	
  8801                           ; 1 bytes @ 0x0
  8802                           
  8803  013D                     ??_ADCC_Initialize:	
  8804                           ; 1 bytes @ 0x0
  8805                           
  8806  013D                     ?_DATAEE_WriteByte:	
  8807                           ; 1 bytes @ 0x0
  8808                           
  8809  013D                     ?_DATAEE_ReadByte:	
  8810                           ; 1 bytes @ 0x0
  8811                           
  8812  013D                     ??_TMR2_Stop:	
  8813                           ; 1 bytes @ 0x0
  8814                           
  8815  013D                     ??_TMR2_StopTimer:	
  8816                           ; 1 bytes @ 0x0
  8817                           
  8818  013D                     ??_PWMOutputDisable:	
  8819                           ; 1 bytes @ 0x0
  8820                           
  8821  013D                     ?_operADDR:	
  8822                           ; 1 bytes @ 0x0
  8823                           
  8824  013D                     DATAEE_WriteByte@bAdd:	
  8825                           ; 2 bytes @ 0x0
  8826                           
  8827  013D                     DATAEE_ReadByte@bAdd:	
  8828                           ; 2 bytes @ 0x0
  8829                           
  8830  013D                     TMR1_SetInterruptHandler@InterruptHandler:	
  8831                           ; 2 bytes @ 0x0
  8832                           
  8833                           
  8834                           ; 2 bytes @ 0x0
  8835  013D                     	ds	1
  8836  013E                     WriteI2C@data_out:
  8837                           
  8838                           ; 1 bytes @ 0x1
  8839  013E                     	ds	1
  8840  013F                     ??_TMR1_Initialize:
  8841  013F                     ??_TMR1_SetInterruptHandler:	
  8842                           ; 1 bytes @ 0x2
  8843                           
  8844  013F                     ?_parseEPROMInitialization:	
  8845                           ; 1 bytes @ 0x2
  8846                           
  8847  013F                     ??_SYSTEM_Initialize:	
  8848                           ; 1 bytes @ 0x2
  8849                           
  8850  013F                     ??_DATAEE_ReadByte:	
  8851                           ; 1 bytes @ 0x2
  8852                           
  8853  013F                     ??_operADDR:	
  8854                           ; 1 bytes @ 0x2
  8855                           
  8856  013F                     ??_LCDsend:	
  8857                           ; 1 bytes @ 0x2
  8858                           
  8859  013F                     ?_LCDsend2x4:	
  8860                           ; 1 bytes @ 0x2
  8861                           
  8862  013F                     DATAEE_WriteByte@bData:	
  8863                           ; 1 bytes @ 0x2
  8864                           
  8865  013F                     parseEPROMInitialization@NREG:	
  8866                           ; 1 bytes @ 0x2
  8867                           
  8868  013F                     LCDsend2x4@mode:	
  8869                           ; 1 bytes @ 0x2
  8870                           
  8871                           
  8872                           ; 1 bytes @ 0x2
  8873  013F                     	ds	1
  8874  0140                     ??_DATAEE_WriteByte:
  8875  0140                     ??_LCDsend2x4:	
  8876                           ; 1 bytes @ 0x3
  8877                           
  8878  0140                     DATAEE_WriteByte@GIEBitValue:	
  8879                           ; 1 bytes @ 0x3
  8880                           
  8881  0140                     parseEPROMInitialization@NR:	
  8882                           ; 1 bytes @ 0x3
  8883                           
  8884  0140                     LCDsend@c:	
  8885                           ; 1 bytes @ 0x3
  8886                           
  8887                           
  8888                           ; 1 bytes @ 0x3
  8889  0140                     	ds	1
  8890  0141                     ??_initializeEPROM:
  8891  0141                     ??_initializeREG:	
  8892                           ; 1 bytes @ 0x4
  8893                           
  8894  0141                     operADDR@operation:	
  8895                           ; 1 bytes @ 0x4
  8896                           
  8897  0141                     parseEPROMInitialization@WI:	
  8898                           ; 1 bytes @ 0x4
  8899                           
  8900                           
  8901                           ; 1 bytes @ 0x4
  8902  0141                     	ds	1
  8903  0142                     parseEPROMInitialization@RI:
  8904  0142                     LCDsend2x4@c:	
  8905                           ; 1 bytes @ 0x5
  8906                           
  8907  0142                     operADDR@dataAddr:	
  8908                           ; 1 bytes @ 0x5
  8909                           
  8910                           
  8911                           ; 2 bytes @ 0x5
  8912  0142                     	ds	1
  8913  0143                     parseEPROMInitialization@PMON:
  8914  0143                     LCDsend2x4@hc:	
  8915                           ; 1 bytes @ 0x6
  8916                           
  8917                           
  8918                           ; 1 bytes @ 0x6
  8919  0143                     	ds	1
  8920  0144                     ?_storeEPROMBuild:
  8921  0144                     storeEPROMBuild@minutes:	
  8922                           ; 1 bytes @ 0x7
  8923                           
  8924  0144                     parseEPROMInitialization@TALA:	
  8925                           ; 1 bytes @ 0x7
  8926                           
  8927  0144                     LCDsend2x4@lc:	
  8928                           ; 1 bytes @ 0x7
  8929                           
  8930                           
  8931                           ; 1 bytes @ 0x7
  8932  0144                     	ds	1
  8933  0145                     ??_LCDinit:
  8934  0145                     storeEPROMBuild@seconds:	
  8935                           ; 1 bytes @ 0x8
  8936                           
  8937  0145                     parseEPROMInitialization@ALAT:	
  8938                           ; 1 bytes @ 0x8
  8939                           
  8940                           
  8941                           ; 1 bytes @ 0x8
  8942  0145                     	ds	1
  8943  0146                     storeEPROMBuild@temperature:
  8944  0146                     parseEPROMInitialization@ALAL:	
  8945                           ; 1 bytes @ 0x9
  8946                           
  8947                           
  8948                           ; 1 bytes @ 0x9
  8949  0146                     	ds	1
  8950  0147                     storeEPROMBuild@luminosity:
  8951  0147                     parseEPROMInitialization@ALAF:	
  8952                           ; 1 bytes @ 0xA
  8953                           
  8954                           
  8955                           ; 1 bytes @ 0xA
  8956  0147                     	ds	1
  8957  0148                     storeEPROMBuild@operation:
  8958  0148                     parseEPROMInitialization@CLKH:	
  8959                           ; 1 bytes @ 0xB
  8960                           
  8961                           
  8962                           ; 1 bytes @ 0xB
  8963  0148                     	ds	1
  8964  0149                     ??_storeEPROMBuild:
  8965  0149                     parseEPROMInitialization@CLKM:	
  8966                           ; 1 bytes @ 0xC
  8967                           
  8968                           
  8969                           ; 1 bytes @ 0xC
  8970  0149                     	ds	1
  8971  014A                     storeEPROMBuild@hours:
  8972  014A                     parseEPROMInitialization@checksum:	
  8973                           ; 1 bytes @ 0xD
  8974                           
  8975                           
  8976                           ; 1 bytes @ 0xD
  8977  014A                     	ds	1
  8978  014B                     ??_parseEPROMInitialization:
  8979  014B                     storeEPROMBuild@dataAddr:	
  8980                           ; 1 bytes @ 0xE
  8981                           
  8982                           
  8983                           ; 2 bytes @ 0xE
  8984  014B                     	ds	1
  8985  014C                     parseEPROMInitialization@magic_word:
  8986                           
  8987                           ; 1 bytes @ 0xF
  8988  014C                     	ds	1
  8989  014D                     ??_main:
  8990                           
  8991                           ; 1 bytes @ 0x10
  8992  014D                     	ds	12
  8993                           
  8994                           	psect	cstackBANK1
  8995  00A0                     __pcstackBANK1:
  8996  00A0                     ?_sprintf:
  8997  00A0                     sprintf@fmt:	
  8998                           ; 2 bytes @ 0x0
  8999                           
  9000                           
  9001                           ; 2 bytes @ 0x0
  9002  00A0                     	ds	18
  9003  00B2                     sprintf@s:
  9004                           
  9005                           ; 1 bytes @ 0x12
  9006  00B2                     	ds	1
  9007  00B3                     sprintf@ap:
  9008                           
  9009                           ; 1 bytes @ 0x13
  9010  00B3                     	ds	1
  9011  00B4                     sprintf@f:
  9012                           
  9013                           ; 5 bytes @ 0x14
  9014  00B4                     	ds	5
  9015  00B9                     ??_printLCD:
  9016                           
  9017                           ; 1 bytes @ 0x19
  9018  00B9                     	ds	16
  9019  00C9                     printLCD@buf:
  9020                           
  9021                           ; 33 bytes @ 0x29
  9022  00C9                     	ds	33
  9023  00EA                     timerInterrupt@temperature:
  9024                           
  9025                           ; 1 bytes @ 0x4A
  9026  00EA                     	ds	1
  9027  00EB                     timerInterrupt@value:
  9028                           
  9029                           ; 1 bytes @ 0x4B
  9030  00EB                     	ds	1
  9031  00EC                     timerInterrupt@lum:
  9032                           
  9033                           ; 2 bytes @ 0x4C
  9034  00EC                     	ds	2
  9035                           
  9036                           	psect	cstackCOMMON
  9037  0070                     __pcstackCOMMON:
  9038  0070                     ?_TMR1_ISR:
  9039  0070                     ?_PMD_Initialize:	
  9040                           ; 1 bytes @ 0x0
  9041                           
  9042  0070                     ?_I2C1_Initialize:	
  9043                           ; 1 bytes @ 0x0
  9044                           
  9045  0070                     ?_OSCILLATOR_Initialize:	
  9046                           ; 1 bytes @ 0x0
  9047                           
  9048  0070                     ?_PWM6_Initialize:	
  9049                           ; 1 bytes @ 0x0
  9050                           
  9051  0070                     ?_TMR2_Initialize:	
  9052                           ; 1 bytes @ 0x0
  9053                           
  9054  0070                     ?_TMR1_Initialize:	
  9055                           ; 1 bytes @ 0x0
  9056                           
  9057  0070                     ?_TMR1_DefaultInterruptHandler:	
  9058                           ; 1 bytes @ 0x0
  9059                           
  9060  0070                     ??_TMR1_DefaultInterruptHandler:	
  9061                           ; 1 bytes @ 0x0
  9062                           
  9063  0070                     ?_TMR1_CallBack:	
  9064                           ; 1 bytes @ 0x0
  9065                           
  9066  0070                     ?_WriteI2C:	
  9067                           ; 1 bytes @ 0x0
  9068                           
  9069  0070                     ?_ReadI2C:	
  9070                           ; 1 bytes @ 0x0
  9071                           
  9072  0070                     ??_ReadI2C:	
  9073                           ; 1 bytes @ 0x0
  9074                           
  9075  0070                     ?_LCDcmd:	
  9076                           ; 1 bytes @ 0x0
  9077                           
  9078  0070                     ?_LCDstr:	
  9079                           ; 1 bytes @ 0x0
  9080                           
  9081  0070                     ?_activateAlarm:	
  9082                           ; 1 bytes @ 0x0
  9083                           
  9084  0070                     ?_deactivatePWM:	
  9085                           ; 1 bytes @ 0x0
  9086                           
  9087  0070                     ?_deactivateAlarm:	
  9088                           ; 1 bytes @ 0x0
  9089                           
  9090  0070                     ?_OpenI2C:	
  9091                           ; 1 bytes @ 0x0
  9092                           
  9093  0070                     ?_LCDinit:	
  9094                           ; 1 bytes @ 0x0
  9095                           
  9096  0070                     ?_initializeEPROM:	
  9097                           ; 1 bytes @ 0x0
  9098                           
  9099  0070                     ?_putch:	
  9100                           ; 1 bytes @ 0x0
  9101                           
  9102  0070                     ??_putch:	
  9103                           ; 1 bytes @ 0x0
  9104                           
  9105  0070                     ?_INTERRUPT_InterruptManager:	
  9106                           ; 1 bytes @ 0x0
  9107                           
  9108  0070                     ?_PIN_MANAGER_Initialize:	
  9109                           ; 1 bytes @ 0x0
  9110                           
  9111  0070                     ?_ADCC_Initialize:	
  9112                           ; 1 bytes @ 0x0
  9113                           
  9114  0070                     ?_SYSTEM_Initialize:	
  9115                           ; 1 bytes @ 0x0
  9116                           
  9117  0070                     ?_PWM6_LoadDutyValue:	
  9118                           ; 1 bytes @ 0x0
  9119                           
  9120  0070                     ?_TMR1_WriteTimer:	
  9121                           ; 1 bytes @ 0x0
  9122                           
  9123  0070                     ?_TMR2_Start:	
  9124                           ; 1 bytes @ 0x0
  9125                           
  9126  0070                     ??_TMR2_Start:	
  9127                           ; 1 bytes @ 0x0
  9128                           
  9129  0070                     ?_TMR2_StartTimer:	
  9130                           ; 1 bytes @ 0x0
  9131                           
  9132  0070                     ??_TMR2_StartTimer:	
  9133                           ; 1 bytes @ 0x0
  9134                           
  9135  0070                     ?_TMR2_Stop:	
  9136                           ; 1 bytes @ 0x0
  9137                           
  9138  0070                     ?_TMR2_StopTimer:	
  9139                           ; 1 bytes @ 0x0
  9140                           
  9141  0070                     ?_readTC74:	
  9142                           ; 1 bytes @ 0x0
  9143                           
  9144  0070                     ?_initializeREG:	
  9145                           ; 1 bytes @ 0x0
  9146                           
  9147  0070                     ?_printLCD:	
  9148                           ; 1 bytes @ 0x0
  9149                           
  9150  0070                     ?_timerInterrupt:	
  9151                           ; 1 bytes @ 0x0
  9152                           
  9153  0070                     ?_main:	
  9154                           ; 1 bytes @ 0x0
  9155                           
  9156  0070                     ?_PWMOutputEnable:	
  9157                           ; 1 bytes @ 0x0
  9158                           
  9159  0070                     ??_PWMOutputEnable:	
  9160                           ; 1 bytes @ 0x0
  9161                           
  9162  0070                     ?_PWMOutputDisable:	
  9163                           ; 1 bytes @ 0x0
  9164                           
  9165  0070                     ?_LCDsend:	
  9166                           ; 1 bytes @ 0x0
  9167                           
  9168  0070                     ?_LCDrecv:	
  9169                           ; 1 bytes @ 0x0
  9170                           
  9171  0070                     ?_LCDchar:	
  9172                           ; 1 bytes @ 0x0
  9173                           
  9174  0070                     ??___aodiv:	
  9175                           ; 1 bytes @ 0x0
  9176                           
  9177  0070                     ??___aomod:	
  9178                           ; 1 bytes @ 0x0
  9179                           
  9180  0070                     ?i1_DATAEE_WriteByte:	
  9181                           ; 1 bytes @ 0x0
  9182                           
  9183  0070                     ?i1_TMR2_Stop:	
  9184                           ; 1 bytes @ 0x0
  9185                           
  9186  0070                     ??i1_TMR2_Stop:	
  9187                           ; 1 bytes @ 0x0
  9188                           
  9189  0070                     ?i1_TMR2_StopTimer:	
  9190                           ; 1 bytes @ 0x0
  9191                           
  9192  0070                     ??i1_TMR2_StopTimer:	
  9193                           ; 1 bytes @ 0x0
  9194                           
  9195  0070                     ?i1_PWMOutputDisable:	
  9196                           ; 1 bytes @ 0x0
  9197                           
  9198  0070                     ??i1_PWMOutputDisable:	
  9199                           ; 1 bytes @ 0x0
  9200                           
  9201  0070                     ?i1_deactivateAlarm:	
  9202                           ; 1 bytes @ 0x0
  9203                           
  9204  0070                     ??i1_deactivateAlarm:	
  9205                           ; 1 bytes @ 0x0
  9206                           
  9207  0070                     ?i1_deactivatePWM:	
  9208                           ; 1 bytes @ 0x0
  9209                           
  9210  0070                     ??i1_deactivatePWM:	
  9211                           ; 1 bytes @ 0x0
  9212                           
  9213  0070                     ?i1_WriteI2C:	
  9214                           ; 1 bytes @ 0x0
  9215                           
  9216  0070                     ??i1_WriteI2C:	
  9217                           ; 1 bytes @ 0x0
  9218                           
  9219  0070                     ?_fputc:	
  9220                           ; 1 bytes @ 0x0
  9221                           
  9222  0070                     ?_strlen:	
  9223                           ; 2 bytes @ 0x0
  9224                           
  9225  0070                     ?_isdigit:	
  9226                           ; 2 bytes @ 0x0
  9227                           
  9228  0070                     ?_isspace:	
  9229                           ; 2 bytes @ 0x0
  9230                           
  9231  0070                     ?_ADCC_GetSingleConversion:	
  9232                           ; 2 bytes @ 0x0
  9233                           
  9234  0070                     ?___wmul:	
  9235                           ; 2 bytes @ 0x0
  9236                           
  9237  0070                     putch@c:	
  9238                           ; 2 bytes @ 0x0
  9239                           
  9240  0070                     PWM6_LoadDutyValue@dutyValue:	
  9241                           ; 1 bytes @ 0x0
  9242                           
  9243  0070                     TMR1_WriteTimer@timerVal:	
  9244                           ; 2 bytes @ 0x0
  9245                           
  9246  0070                     ___wmul@multiplier:	
  9247                           ; 2 bytes @ 0x0
  9248                           
  9249  0070                     isdigit@c:	
  9250                           ; 2 bytes @ 0x0
  9251                           
  9252  0070                     isspace@c:	
  9253                           ; 2 bytes @ 0x0
  9254                           
  9255  0070                     fputc@c:	
  9256                           ; 2 bytes @ 0x0
  9257                           
  9258  0070                     i1DATAEE_WriteByte@bAdd:	
  9259                           ; 2 bytes @ 0x0
  9260                           
  9261                           
  9262                           ; 2 bytes @ 0x0
  9263  0070                     	ds	1
  9264  0071                     ___aodiv@counter:
  9265  0071                     ___aomod@counter:	
  9266                           ; 1 bytes @ 0x1
  9267                           
  9268  0071                     i1WriteI2C@data_out:	
  9269                           ; 1 bytes @ 0x1
  9270                           
  9271                           
  9272                           ; 1 bytes @ 0x1
  9273  0071                     	ds	1
  9274  0072                     ??_strlen:
  9275  0072                     ??_isdigit:	
  9276                           ; 1 bytes @ 0x2
  9277                           
  9278  0072                     ??_isspace:	
  9279                           ; 1 bytes @ 0x2
  9280                           
  9281  0072                     ??_ADCC_GetSingleConversion:	
  9282                           ; 1 bytes @ 0x2
  9283                           
  9284  0072                     ??_PWM6_LoadDutyValue:	
  9285                           ; 1 bytes @ 0x2
  9286                           
  9287  0072                     ??_TMR1_WriteTimer:	
  9288                           ; 1 bytes @ 0x2
  9289                           
  9290  0072                     ??_readTC74:	
  9291                           ; 1 bytes @ 0x2
  9292                           
  9293  0072                     ??_LCDrecv:	
  9294                           ; 1 bytes @ 0x2
  9295                           
  9296  0072                     ?i1_LCDsend2x4:	
  9297                           ; 1 bytes @ 0x2
  9298                           
  9299  0072                     ADCC_GetSingleConversion@channel:	
  9300                           ; 1 bytes @ 0x2
  9301                           
  9302  0072                     ___aodiv@sign:	
  9303                           ; 1 bytes @ 0x2
  9304                           
  9305  0072                     ___aomod@sign:	
  9306                           ; 1 bytes @ 0x2
  9307                           
  9308  0072                     fputc@fp:	
  9309                           ; 1 bytes @ 0x2
  9310                           
  9311  0072                     i1DATAEE_WriteByte@bData:	
  9312                           ; 1 bytes @ 0x2
  9313                           
  9314  0072                     i1LCDsend2x4@mode:	
  9315                           ; 1 bytes @ 0x2
  9316                           
  9317  0072                     ___wmul@multiplicand:	
  9318                           ; 1 bytes @ 0x2
  9319                           
  9320                           
  9321                           ; 2 bytes @ 0x2
  9322  0072                     	ds	1
  9323  0073                     ??_fputc:
  9324  0073                     ??i1_DATAEE_WriteByte:	
  9325                           ; 1 bytes @ 0x3
  9326                           
  9327  0073                     ??i1_LCDsend2x4:	
  9328                           ; 1 bytes @ 0x3
  9329                           
  9330  0073                     ?_abs:	
  9331                           ; 1 bytes @ 0x3
  9332                           
  9333  0073                     readTC74@value:	
  9334                           ; 2 bytes @ 0x3
  9335                           
  9336  0073                     strlen@a:	
  9337                           ; 1 bytes @ 0x3
  9338                           
  9339  0073                     i1DATAEE_WriteByte@GIEBitValue:	
  9340                           ; 1 bytes @ 0x3
  9341                           
  9342  0073                     abs@a:	
  9343                           ; 1 bytes @ 0x3
  9344                           
  9345  0073                     ___aodiv@quotient:	
  9346                           ; 2 bytes @ 0x3
  9347                           
  9348                           
  9349                           ; 8 bytes @ 0x3
  9350  0073                     	ds	1
  9351  0074                     ??_activateAlarm:
  9352  0074                     ?_writeRingBuffer:	
  9353                           ; 1 bytes @ 0x4
  9354                           
  9355  0074                     ??___wmul:	
  9356                           ; 1 bytes @ 0x4
  9357                           
  9358  0074                     writeRingBuffer@luminosity:	
  9359                           ; 1 bytes @ 0x4
  9360                           
  9361  0074                     activateAlarm@alarm:	
  9362                           ; 1 bytes @ 0x4
  9363                           
  9364  0074                     LCDrecv@hc:	
  9365                           ; 1 bytes @ 0x4
  9366                           
  9367  0074                     _isspace$3349:	
  9368                           ; 1 bytes @ 0x4
  9369                           
  9370  0074                     strlen@s:	
  9371                           ; 1 bytes @ 0x4
  9372                           
  9373  0074                     ___wmul@product:	
  9374                           ; 1 bytes @ 0x4
  9375                           
  9376                           
  9377                           ; 2 bytes @ 0x4
  9378  0074                     	ds	1
  9379  0075                     ??_abs:
  9380  0075                     ??_writeRingBuffer:	
  9381                           ; 1 bytes @ 0x5
  9382                           
  9383  0075                     LCDrecv@lc:	
  9384                           ; 1 bytes @ 0x5
  9385                           
  9386  0075                     i1LCDsend2x4@c:	
  9387                           ; 1 bytes @ 0x5
  9388                           
  9389                           
  9390                           ; 1 bytes @ 0x5
  9391  0075                     	ds	1
  9392  0076                     ?_atoi:
  9393  0076                     writeRingBuffer@temperature:	
  9394                           ; 2 bytes @ 0x6
  9395                           
  9396  0076                     LCDrecv@mode:	
  9397                           ; 1 bytes @ 0x6
  9398                           
  9399  0076                     i1LCDsend2x4@hc:	
  9400                           ; 1 bytes @ 0x6
  9401                           
  9402  0076                     atoi@s:	
  9403                           ; 1 bytes @ 0x6
  9404                           
  9405                           
  9406                           ; 2 bytes @ 0x6
  9407  0076                     	ds	1
  9408  0077                     ?_LCDbusy:
  9409  0077                     i1LCDsend2x4@lc:	
  9410                           ; 2 bytes @ 0x7
  9411                           
  9412                           
  9413                           ; 1 bytes @ 0x7
  9414  0077                     	ds	1
  9415  0078                     ??_LCDcmd:
  9416  0078                     ??_atoi:	
  9417                           ; 1 bytes @ 0x8
  9418                           
  9419  0078                     ??_LCDchar:	
  9420                           ; 1 bytes @ 0x8
  9421                           
  9422  0078                     ?_fputs:	
  9423                           ; 1 bytes @ 0x8
  9424                           
  9425  0078                     ?_ctoa:	
  9426                           ; 2 bytes @ 0x8
  9427                           
  9428  0078                     LCDcmd@c:	
  9429                           ; 2 bytes @ 0x8
  9430                           
  9431  0078                     LCDchar@c:	
  9432                           ; 1 bytes @ 0x8
  9433                           
  9434  0078                     ctoa@c:	
  9435                           ; 1 bytes @ 0x8
  9436                           
  9437  0078                     fputs@fp:	
  9438                           ; 1 bytes @ 0x8
  9439                           
  9440                           
  9441                           ; 1 bytes @ 0x8
  9442  0078                     	ds	1
  9443  0079                     ??_LCDbusy:
  9444  0079                     ??_LCDstr:	
  9445                           ; 1 bytes @ 0x9
  9446                           
  9447  0079                     ??_fputs:	
  9448                           ; 1 bytes @ 0x9
  9449                           
  9450                           
  9451                           ; 1 bytes @ 0x9
  9452  0079                     	ds	1
  9453  007A                     ??_ctoa:
  9454  007A                     LCDstr@c:	
  9455                           ; 1 bytes @ 0xA
  9456                           
  9457                           
  9458                           ; 1 bytes @ 0xA
  9459  007A                     	ds	1
  9460  007B                     LCDstr@p:
  9461                           
  9462                           ; 1 bytes @ 0xB
  9463  007B                     	ds	1
  9464  007C                     ??_pad:
  9465                           
  9466                           ; 1 bytes @ 0xC
  9467  007C                     	ds	1
  9468  007D                     ??_sprintf:
  9469                           
  9470                           ; 1 bytes @ 0xD
  9471  007D                     	ds	1
  9472  007E                     ??_TMR1_ISR:
  9473  007E                     ??_TMR1_CallBack:	
  9474                           ; 1 bytes @ 0xE
  9475                           
  9476  007E                     ??_INTERRUPT_InterruptManager:	
  9477                           ; 1 bytes @ 0xE
  9478                           
  9479                           
  9480                           	psect	cstackBANK0
  9481  0020                     __pcstackBANK0:	
  9482                           ; 1 bytes @ 0xE
  9483                           
  9484  0020                     ?___aodiv:
  9485  0020                     ?___aomod:	
  9486                           ; 8 bytes @ 0x0
  9487                           
  9488  0020                     fputs@c:	
  9489                           ; 8 bytes @ 0x0
  9490                           
  9491  0020                     ctoa@l:	
  9492                           ; 1 bytes @ 0x0
  9493                           
  9494  0020                     atoi@neg:	
  9495                           ; 2 bytes @ 0x0
  9496                           
  9497  0020                     ___aodiv@divisor:	
  9498                           ; 2 bytes @ 0x0
  9499                           
  9500  0020                     ___aomod@divisor:	
  9501                           ; 8 bytes @ 0x0
  9502                           
  9503                           
  9504                           ; 8 bytes @ 0x0
  9505  0020                     	ds	1
  9506  0021                     fputs@i:
  9507                           
  9508                           ; 2 bytes @ 0x1
  9509  0021                     	ds	1
  9510  0022                     ctoa@w:
  9511  0022                     _atoi$3331:	
  9512                           ; 2 bytes @ 0x2
  9513                           
  9514                           
  9515                           ; 2 bytes @ 0x2
  9516  0022                     	ds	1
  9517  0023                     fputs@s:
  9518                           
  9519                           ; 1 bytes @ 0x3
  9520  0023                     	ds	1
  9521  0024                     ?_pad:
  9522  0024                     pad@buf:	
  9523                           ; 2 bytes @ 0x4
  9524                           
  9525  0024                     ctoa@fp:	
  9526                           ; 1 bytes @ 0x4
  9527                           
  9528  0024                     _atoi$3333:	
  9529                           ; 1 bytes @ 0x4
  9530                           
  9531                           
  9532                           ; 2 bytes @ 0x4
  9533  0024                     	ds	1
  9534  0025                     pad@p:
  9535                           
  9536                           ; 2 bytes @ 0x5
  9537  0025                     	ds	1
  9538  0026                     _atoi$3332:
  9539                           
  9540                           ; 1 bytes @ 0x6
  9541  0026                     	ds	1
  9542  0027                     pad@i:
  9543  0027                     atoi@n:	
  9544                           ; 2 bytes @ 0x7
  9545                           
  9546                           
  9547                           ; 2 bytes @ 0x7
  9548  0027                     	ds	1
  9549  0028                     ___aodiv@dividend:
  9550  0028                     ___aomod@dividend:	
  9551                           ; 8 bytes @ 0x8
  9552                           
  9553                           
  9554                           ; 8 bytes @ 0x8
  9555  0028                     	ds	1
  9556  0029                     pad@w:
  9557                           
  9558                           ; 2 bytes @ 0x9
  9559  0029                     	ds	2
  9560  002B                     pad@fp:
  9561                           
  9562                           ; 1 bytes @ 0xB
  9563  002B                     	ds	5
  9564  0030                     ?_dtoa:
  9565  0030                     dtoa@d:	
  9566                           ; 2 bytes @ 0x10
  9567                           
  9568                           
  9569                           ; 8 bytes @ 0x10
  9570  0030                     	ds	8
  9571  0038                     ??_dtoa:
  9572                           
  9573                           ; 1 bytes @ 0x18
  9574  0038                     	ds	3
  9575  003B                     _dtoa$3295:
  9576                           
  9577                           ; 2 bytes @ 0x1B
  9578  003B                     	ds	2
  9579  003D                     dtoa@fp:
  9580                           
  9581                           ; 1 bytes @ 0x1D
  9582  003D                     	ds	1
  9583  003E                     dtoa@p:
  9584                           
  9585                           ; 2 bytes @ 0x1E
  9586  003E                     	ds	2
  9587  0040                     dtoa@w:
  9588                           
  9589                           ; 2 bytes @ 0x20
  9590  0040                     	ds	2
  9591  0042                     dtoa@s:
  9592                           
  9593                           ; 2 bytes @ 0x22
  9594  0042                     	ds	2
  9595  0044                     dtoa@n:
  9596                           
  9597                           ; 8 bytes @ 0x24
  9598  0044                     	ds	8
  9599  004C                     dtoa@i:
  9600                           
  9601                           ; 2 bytes @ 0x2C
  9602  004C                     	ds	2
  9603  004E                     ?_vfpfcnvrt:
  9604  004E                     vfpfcnvrt@fmt:	
  9605                           ; 2 bytes @ 0x2E
  9606                           
  9607                           
  9608                           ; 1 bytes @ 0x2E
  9609  004E                     	ds	1
  9610  004F                     vfpfcnvrt@ap:
  9611                           
  9612                           ; 1 bytes @ 0x2F
  9613  004F                     	ds	1
  9614  0050                     ??_vfpfcnvrt:
  9615                           
  9616                           ; 1 bytes @ 0x30
  9617  0050                     	ds	6
  9618  0056                     vfpfcnvrt@ll:
  9619                           
  9620                           ; 8 bytes @ 0x36
  9621  0056                     	ds	8
  9622  005E                     vfpfcnvrt@done:
  9623                           
  9624                           ; 2 bytes @ 0x3E
  9625  005E                     	ds	2
  9626  0060                     _vfpfcnvrt$3310:
  9627                           
  9628                           ; 2 bytes @ 0x40
  9629  0060                     	ds	2
  9630  0062                     vfpfcnvrt@c:
  9631                           
  9632                           ; 1 bytes @ 0x42
  9633  0062                     	ds	1
  9634  0063                     vfpfcnvrt@fp:
  9635                           
  9636                           ; 1 bytes @ 0x43
  9637  0063                     	ds	1
  9638  0064                     ?_vfprintf:
  9639  0064                     vfprintf@fmt:	
  9640                           ; 2 bytes @ 0x44
  9641                           
  9642                           
  9643                           ; 2 bytes @ 0x44
  9644  0064                     	ds	2
  9645  0066                     vfprintf@ap:
  9646                           
  9647                           ; 1 bytes @ 0x46
  9648  0066                     	ds	1
  9649  0067                     ??_vfprintf:
  9650                           
  9651                           ; 1 bytes @ 0x47
  9652  0067                     	ds	2
  9653  0069                     vfprintf@fp:
  9654                           
  9655                           ; 1 bytes @ 0x49
  9656  0069                     	ds	1
  9657  006A                     vfprintf@cfmt:
  9658                           
  9659                           ; 2 bytes @ 0x4A
  9660  006A                     	ds	2
  9661  006C                     ??_timerInterrupt:
  9662                           
  9663                           ; 1 bytes @ 0x4C
  9664  006C                     	ds	2
  9665                           
  9666                           	psect	maintext
  9667  0034                     __pmaintext:	
  9668 ;;
  9669 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
  9670 ;;
  9671 ;; *************** function _main *****************
  9672 ;; Defined at:
  9673 ;;		line 279 in file "main.c"
  9674 ;; Parameters:    Size  Location     Type
  9675 ;;		None
  9676 ;; Auto vars:     Size  Location     Type
  9677 ;;		None
  9678 ;; Return value:  Size  Location     Type
  9679 ;;                  1    wreg      void 
  9680 ;; Registers used:
  9681 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9682 ;; Tracked objects:
  9683 ;;		On entry : B1F/0
  9684 ;;		On exit  : 0/0
  9685 ;;		Unchanged: 0/0
  9686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9689 ;;      Temps:          0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0
  9690 ;;      Totals:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0
  9691 ;;Total ram usage:       12 bytes
  9692 ;; Hardware stack levels required when called: 17
  9693 ;; This function calls:
  9694 ;;		_LCDinit
  9695 ;;		_OpenI2C
  9696 ;;		_SYSTEM_Initialize
  9697 ;;		_TMR1_SetInterruptHandler
  9698 ;;		_deactivateAlarm
  9699 ;;		_initializeEPROM
  9700 ;;		_initializeREG
  9701 ;;		_parseEPROMInitialization
  9702 ;;		_storeEPROMBuild
  9703 ;; This function is called by:
  9704 ;;		Startup code after reset
  9705 ;; This function uses a non-reentrant model
  9706 ;;
  9707                           
  9708                           
  9709                           ;psect for function _main
  9710  0034                     _main:
  9711  0034                     l6651:	
  9712                           ;incstack = 0
  9713 ;; hardware stack exceeded
  9714                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9715                           
  9716                           
  9717                           ;main.c: 281:     SYSTEM_Initialize();
  9718  0034  3191  21BD  3180   	fcall	_SYSTEM_Initialize
  9719  0037                     l6653:
  9720                           
  9721                           ;main.c: 283:     (INTCONbits.GIE = 1);
  9722  0037  178B               	bsf	11,7	;volatile
  9723  0038                     l6655:
  9724                           
  9725                           ;main.c: 285:     (INTCONbits.PEIE = 1);
  9726  0038  170B               	bsf	11,6	;volatile
  9727  0039                     l6657:
  9728                           
  9729                           ;main.c: 286:     hours=0;
  9730  0039  0022               	movlb	2	; select bank2
  9731  003A  01AF               	clrf	_hours^(0+256)
  9732  003B                     l6659:
  9733                           
  9734                           ;main.c: 287:     minutes=0;
  9735  003B  01AE               	clrf	_minutes^(0+256)
  9736  003C                     l6661:
  9737                           
  9738                           ;main.c: 288:     seconds=0;
  9739  003C  01AD               	clrf	_seconds^(0+256)
  9740  003D                     l6663:
  9741                           
  9742                           ;main.c: 289:     max_luminosity=3;
  9743  003D  3003               	movlw	3
  9744  003E  00CD               	movwf	??_main^(0+256)
  9745  003F  084D               	movf	??_main^(0+256),w
  9746  0040  00EF               	movwf	_max_luminosity^(0+256)
  9747  0041                     l6665:
  9748                           
  9749                           ;main.c: 290:     min_luminosity=0;
  9750  0041  01AC               	clrf	_min_luminosity^(0+256)
  9751  0042                     l6667:
  9752                           
  9753                           ;main.c: 291:     last_luminosity=4;
  9754  0042  3004               	movlw	4
  9755  0043  00CD               	movwf	??_main^(0+256)
  9756  0044  084D               	movf	??_main^(0+256),w
  9757  0045  00EE               	movwf	_last_luminosity^(0+256)
  9758  0046                     l6669:
  9759                           
  9760                           ;main.c: 292:     counter=1;
  9761  0046  01ED               	clrf	_counter^(0+256)
  9762  0047  0AED               	incf	_counter^(0+256),f
  9763  0048                     l6671:
  9764                           
  9765                           ;main.c: 294:     pwm_control=1;
  9766  0048  01E8               	clrf	_pwm_control^(0+256)
  9767  0049  0AE8               	incf	_pwm_control^(0+256),f
  9768  004A                     l6673:
  9769                           
  9770                           ;main.c: 295:     t_threshold=19;
  9771  004A  3013               	movlw	19
  9772  004B  00CD               	movwf	??_main^(0+256)
  9773  004C  084D               	movf	??_main^(0+256),w
  9774  004D  00EC               	movwf	_t_threshold^(0+256)
  9775  004E                     l6675:
  9776                           
  9777                           ;main.c: 296:     l_threshold=2;
  9778  004E  3002               	movlw	2
  9779  004F  00CD               	movwf	??_main^(0+256)
  9780  0050  084D               	movf	??_main^(0+256),w
  9781  0051  00EB               	movwf	_l_threshold^(0+256)
  9782  0052                     l6677:
  9783                           
  9784                           ;main.c: 297:     last_temperature=255;
  9785  0052  30FF               	movlw	255
  9786  0053  00CD               	movwf	??_main^(0+256)
  9787  0054  084D               	movf	??_main^(0+256),w
  9788  0055  00EA               	movwf	_last_temperature^(0+256)
  9789  0056                     l6679:
  9790                           
  9791                           ;main.c: 298:     max_temperature=255;
  9792  0056  30FF               	movlw	255
  9793  0057  00CD               	movwf	??_main^(0+256)
  9794  0058  084D               	movf	??_main^(0+256),w
  9795  0059  00E9               	movwf	_max_temperature^(0+256)
  9796  005A                     l6681:
  9797                           
  9798                           ;main.c: 299:     min_temperature=0;
  9799  005A  01AA               	clrf	_min_temperature^(0+256)
  9800  005B                     l6683:
  9801                           
  9802                           ;main.c: 300:     data_address=0x7000;
  9803  005B  3000               	movlw	0
  9804  005C  00DD               	movwf	_data_address^(0+256)
  9805  005D  3070               	movlw	112
  9806  005E  00DE               	movwf	(_data_address^(0+256)+1)
  9807  005F                     l6685:
  9808                           
  9809                           ;main.c: 301:     mode=0;
  9810  005F  01A9               	clrf	_mode^(0+256)
  9811  0060                     l6687:
  9812                           
  9813                           ;main.c: 302:     cursor=0x80;
  9814  0060  3000               	movlw	0
  9815  0061  00DC               	movwf	(_cursor+3)^(0+256)
  9816  0062  3000               	movlw	0
  9817  0063  00DB               	movwf	(_cursor+2)^(0+256)
  9818  0064  3000               	movlw	0
  9819  0065  00DA               	movwf	(_cursor+1)^(0+256)
  9820  0066  3080               	movlw	128
  9821  0067  00D9               	movwf	_cursor^(0+256)
  9822  0068                     l6689:
  9823                           
  9824                           ;main.c: 303:     alarm1=0;
  9825  0068  01A8               	clrf	_alarm1^(0+256)
  9826  0069                     l6691:
  9827                           
  9828                           ;main.c: 304:     alarm2=0;
  9829  0069  01A7               	clrf	_alarm2^(0+256)
  9830  006A                     l6693:
  9831                           
  9832                           ;main.c: 305:     modification=1;
  9833  006A  01E7               	clrf	_modification^(0+256)
  9834  006B  0AE7               	incf	_modification^(0+256),f
  9835  006C                     l6695:
  9836                           
  9837                           ;main.c: 306:     T=' ';
  9838  006C  3020               	movlw	32
  9839  006D  00CD               	movwf	??_main^(0+256)
  9840  006E  084D               	movf	??_main^(0+256),w
  9841  006F  00E6               	movwf	_T^(0+256)
  9842  0070                     l6697:
  9843                           
  9844                           ;main.c: 307:     L=' ';
  9845  0070  3020               	movlw	32
  9846  0071  00CD               	movwf	??_main^(0+256)
  9847  0072  084D               	movf	??_main^(0+256),w
  9848  0073  00E5               	movwf	_L^(0+256)
  9849  0074                     l6699:
  9850                           
  9851                           ;main.c: 308:     M=' ';
  9852  0074  3020               	movlw	32
  9853  0075  00CD               	movwf	??_main^(0+256)
  9854  0076  084D               	movf	??_main^(0+256),w
  9855  0077  00E4               	movwf	_M^(0+256)
  9856  0078                     l6701:
  9857                           
  9858                           ;main.c: 309:     m=' ';
  9859  0078  3020               	movlw	32
  9860  0079  00CD               	movwf	??_main^(0+256)
  9861  007A  084D               	movf	??_main^(0+256),w
  9862  007B  0023               	movlb	3	; select bank3
  9863  007C  00DD               	movwf	_m^(0+384)
  9864  007D                     l6703:
  9865                           
  9866                           ;main.c: 310:     alarmc='a';
  9867  007D  3061               	movlw	97
  9868  007E  0022               	movlb	2	; select bank2
  9869  007F  00CD               	movwf	??_main^(0+256)
  9870  0080  084D               	movf	??_main^(0+256),w
  9871  0081  00E3               	movwf	_alarmc^(0+256)
  9872  0082                     l6705:
  9873                           
  9874                           ;main.c: 311:     OpenI2C();
  9875  0082  3190  20BD  3180   	fcall	_OpenI2C
  9876  0085                     l6707:
  9877                           
  9878                           ;main.c: 312:     LCDinit();
  9879  0085  3196  264D  3180   	fcall	_LCDinit
  9880  0088                     l6709:
  9881                           
  9882                           ;main.c: 314:     initializeEPROM();
  9883  0088  3196  26D0  3180   	fcall	_initializeEPROM
  9884  008B                     l6711:
  9885                           
  9886                           ;main.c: 315:     initializeREG();
  9887  008B  3193  230F  3180   	fcall	_initializeREG
  9888  008E                     l6713:
  9889                           
  9890                           ;main.c: 316:     storeEPROMBuild(0x55,0x50,0x45,0x40,0x35,101);
  9891  008E  3050               	movlw	80
  9892  008F  0022               	movlb	2	; select bank2
  9893  0090  00CD               	movwf	??_main^(0+256)
  9894  0091  084D               	movf	??_main^(0+256),w
  9895  0092  00C4               	movwf	storeEPROMBuild@minutes^(0+256)
  9896  0093  3045               	movlw	69
  9897  0094  00CE               	movwf	(??_main+1)^(0+256)
  9898  0095  084E               	movf	(??_main+1)^(0+256),w
  9899  0096  00C5               	movwf	storeEPROMBuild@seconds^(0+256)
  9900  0097  3040               	movlw	64
  9901  0098  00CF               	movwf	(??_main+2)^(0+256)
  9902  0099  084F               	movf	(??_main+2)^(0+256),w
  9903  009A  00C6               	movwf	storeEPROMBuild@temperature^(0+256)
  9904  009B  3035               	movlw	53
  9905  009C  00D0               	movwf	(??_main+3)^(0+256)
  9906  009D  0850               	movf	(??_main+3)^(0+256),w
  9907  009E  00C7               	movwf	storeEPROMBuild@luminosity^(0+256)
  9908  009F  3065               	movlw	101
  9909  00A0  00D1               	movwf	(??_main+4)^(0+256)
  9910  00A1  0851               	movf	(??_main+4)^(0+256),w
  9911  00A2  00C8               	movwf	storeEPROMBuild@operation^(0+256)
  9912  00A3  3055               	movlw	85
  9913  00A4  3194  2481  3180   	fcall	_storeEPROMBuild
  9914  00A7                     l6715:
  9915                           
  9916                           ;main.c: 318:     parseEPROMInitialization(&magic_word,&NREG,&NR,&WI,&RI,&PMON,&TALA,&AL
      +                          AT,&ALAL,&ALAF,&CLKH,&CLKM,&checksum);
  9917  00A7  303B               	movlw	(low (_NREG| (0+256)))& (0+255)
  9918  00A8  0022               	movlb	2	; select bank2
  9919  00A9  00CD               	movwf	??_main^(0+256)
  9920  00AA  084D               	movf	??_main^(0+256),w
  9921  00AB  00BF               	movwf	parseEPROMInitialization@NREG^(0+256)
  9922  00AC  303A               	movlw	(low (_NR| (0+256)))& (0+255)
  9923  00AD  00CE               	movwf	(??_main+1)^(0+256)
  9924  00AE  084E               	movf	(??_main+1)^(0+256),w
  9925  00AF  00C0               	movwf	parseEPROMInitialization@NR^(0+256)
  9926  00B0  3039               	movlw	(low (_WI| (0+256)))& (0+255)
  9927  00B1  00CF               	movwf	(??_main+2)^(0+256)
  9928  00B2  084F               	movf	(??_main+2)^(0+256),w
  9929  00B3  00C1               	movwf	parseEPROMInitialization@WI^(0+256)
  9930  00B4  3038               	movlw	(low (_RI| (0+256)))& (0+255)
  9931  00B5  00D0               	movwf	(??_main+3)^(0+256)
  9932  00B6  0850               	movf	(??_main+3)^(0+256),w
  9933  00B7  00C2               	movwf	parseEPROMInitialization@RI^(0+256)
  9934  00B8  3037               	movlw	(low (_PMON| (0+256)))& (0+255)
  9935  00B9  00D1               	movwf	(??_main+4)^(0+256)
  9936  00BA  0851               	movf	(??_main+4)^(0+256),w
  9937  00BB  00C3               	movwf	parseEPROMInitialization@PMON^(0+256)
  9938  00BC  3036               	movlw	(low (_TALA| (0+256)))& (0+255)
  9939  00BD  00D2               	movwf	(??_main+5)^(0+256)
  9940  00BE  0852               	movf	(??_main+5)^(0+256),w
  9941  00BF  00C4               	movwf	parseEPROMInitialization@TALA^(0+256)
  9942  00C0  3035               	movlw	(low (_ALAT| (0+256)))& (0+255)
  9943  00C1  00D3               	movwf	(??_main+6)^(0+256)
  9944  00C2  0853               	movf	(??_main+6)^(0+256),w
  9945  00C3  00C5               	movwf	parseEPROMInitialization@ALAT^(0+256)
  9946  00C4  3034               	movlw	(low (_ALAL| (0+256)))& (0+255)
  9947  00C5  00D4               	movwf	(??_main+7)^(0+256)
  9948  00C6  0854               	movf	(??_main+7)^(0+256),w
  9949  00C7  00C6               	movwf	parseEPROMInitialization@ALAL^(0+256)
  9950  00C8  3033               	movlw	(low (_ALAF| (0+256)))& (0+255)
  9951  00C9  00D5               	movwf	(??_main+8)^(0+256)
  9952  00CA  0855               	movf	(??_main+8)^(0+256),w
  9953  00CB  00C7               	movwf	parseEPROMInitialization@ALAF^(0+256)
  9954  00CC  3032               	movlw	(low (_CLKH| (0+256)))& (0+255)
  9955  00CD  00D6               	movwf	(??_main+9)^(0+256)
  9956  00CE  0856               	movf	(??_main+9)^(0+256),w
  9957  00CF  00C8               	movwf	parseEPROMInitialization@CLKH^(0+256)
  9958  00D0  3031               	movlw	(low (_CLKM| (0+256)))& (0+255)
  9959  00D1  00D7               	movwf	(??_main+10)^(0+256)
  9960  00D2  0857               	movf	(??_main+10)^(0+256),w
  9961  00D3  00C9               	movwf	parseEPROMInitialization@CLKM^(0+256)
  9962  00D4  3030               	movlw	(low (_checksum| (0+256)))& (0+255)
  9963  00D5  00D8               	movwf	(??_main+11)^(0+256)
  9964  00D6  0858               	movf	(??_main+11)^(0+256),w
  9965  00D7  00CA               	movwf	parseEPROMInitialization@checksum^(0+256)
  9966  00D8  303C               	movlw	(low (_magic_word| (0+256)))& (0+255)
  9967  00D9  3189  21C4  3180   	fcall	_parseEPROMInitialization
  9968  00DC                     l6717:
  9969                           
  9970                           ;main.c: 319:     tala_counter=TALA+1;
  9971  00DC  0022               	movlb	2	; select bank2
  9972  00DD  0836               	movf	_TALA^(0+256),w
  9973  00DE  3E01               	addlw	1
  9974  00DF  00CD               	movwf	??_main^(0+256)
  9975  00E0  084D               	movf	??_main^(0+256),w
  9976  00E1  00AB               	movwf	_tala_counter^(0+256)
  9977  00E2                     l6719:
  9978                           
  9979                           ;main.c: 320:     TMR1_SetInterruptHandler(timerInterrupt);
  9980  00E2  3016               	movlw	low _timerInterrupt
  9981  00E3  00BD               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+256)
  9982  00E4  3003               	movlw	high _timerInterrupt
  9983  00E5  00BE               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+256)+1)
  9984  00E6  3190  205F  3180   	fcall	_TMR1_SetInterruptHandler
  9985  00E9                     l6721:
  9986                           
  9987                           ;main.c: 322:     {;main.c: 324:         if(mode==1){
  9988  00E9  0022               	movlb	2	; select bank2
  9989  00EA  0329               	decf	_mode^(0+256),w
  9990  00EB  1D03               	btfss	3,2
  9991  00EC  28EE               	goto	u5621
  9992  00ED  28EF               	goto	u5620
  9993  00EE                     u5621:
  9994  00EE  28E9               	goto	l6721
  9995  00EF                     u5620:
  9996  00EF                     l6723:
  9997                           
  9998                           ;main.c: 325:             if(modification==1){
  9999  00EF  0367               	decf	_modification^(0+256),w
 10000  00F0  1D03               	btfss	3,2
 10001  00F1  28F3               	goto	u5631
 10002  00F2  28F4               	goto	u5630
 10003  00F3                     u5631:
 10004  00F3  2A0B               	goto	l6833
 10005  00F4                     u5630:
 10006  00F4                     l6725:
 10007                           
 10008                           ;main.c: 326:                 if(minimode==0){
 10009  00F4  0826               	movf	_minimode^(0+256),w
 10010  00F5  1D03               	btfss	3,2
 10011  00F6  28F8               	goto	u5641
 10012  00F7  28F9               	goto	u5640
 10013  00F8                     u5641:
 10014  00F8  2921               	goto	l6739
 10015  00F9                     u5640:
 10016  00F9                     l6727:
 10017                           
 10018                           ;main.c: 327:                     cursor=0x80;
 10019  00F9  3000               	movlw	0
 10020  00FA  00DC               	movwf	(_cursor+3)^(0+256)
 10021  00FB  3000               	movlw	0
 10022  00FC  00DB               	movwf	(_cursor+2)^(0+256)
 10023  00FD  3000               	movlw	0
 10024  00FE  00DA               	movwf	(_cursor+1)^(0+256)
 10025  00FF  3080               	movlw	128
 10026  0100  00D9               	movwf	_cursor^(0+256)
 10027  0101                     l6729:
 10028                           
 10029                           ;main.c: 330:                     if(PORTCbits.RC5==0){
 10030  0101  0020               	movlb	0	; select bank0
 10031  0102  1A8E               	btfsc	14,5	;volatile
 10032  0103  2905               	goto	u5651
 10033  0104  2906               	goto	u5650
 10034  0105                     u5651:
 10035  0105  29E3               	goto	l6825
 10036  0106                     u5650:
 10037  0106                     l6731:
 10038                           
 10039                           ;main.c: 331:                         if(hours<23){
 10040  0106  3017               	movlw	23
 10041  0107  0022               	movlb	2	; select bank2
 10042  0108  022F               	subwf	_hours^(0+256),w
 10043  0109  1803               	skipnc
 10044  010A  290C               	goto	u5661
 10045  010B  290D               	goto	u5660
 10046  010C                     u5661:
 10047  010C  2912               	goto	l6735
 10048  010D                     u5660:
 10049  010D                     l6733:
 10050                           
 10051                           ;main.c: 332:                             hours++;
 10052  010D  3001               	movlw	1
 10053  010E  00CD               	movwf	??_main^(0+256)
 10054  010F  084D               	movf	??_main^(0+256),w
 10055  0110  07AF               	addwf	_hours^(0+256),f
 10056                           
 10057                           ;main.c: 333:                         }else{
 10058  0111  2913               	goto	l6737
 10059  0112                     l6735:
 10060                           
 10061                           ;main.c: 334:                             hours=0;
 10062  0112  01AF               	clrf	_hours^(0+256)
 10063  0113                     l6737:
 10064                           
 10065                           ;main.c: 336:                         _delay((unsigned long)((1000)*(1000000/4000.0)));
 10066  0113  3002               	movlw	2
 10067  0114  0022               	movlb	2	; select bank2
 10068  0115  00CE               	movwf	(??_main^(0+256)+1)
 10069  0116  3045               	movlw	69
 10070  0117  00CD               	movwf	??_main^(0+256)
 10071  0118  30A9               	movlw	169
 10072  0119                     u5987:
 10073  0119  0B89               	decfsz	9,f
 10074  011A  2919               	goto	u5987
 10075  011B  0BCD               	decfsz	??_main^(0+256),f
 10076  011C  2919               	goto	u5987
 10077  011D  0BCE               	decfsz	(??_main^(0+256)+1),f
 10078  011E  2919               	goto	u5987
 10079  011F  3200               	nop2
 10080  0120  29E3               	goto	l6825
 10081  0121                     l6739:
 10082  0121  0326               	decf	_minimode^(0+256),w
 10083  0122  1D03               	btfss	3,2
 10084  0123  2925               	goto	u5671
 10085  0124  2926               	goto	u5670
 10086  0125                     u5671:
 10087  0125  2941               	goto	l6753
 10088  0126                     u5670:
 10089  0126                     l6741:
 10090                           
 10091                           ;main.c: 340:                     cursor=0x83;
 10092  0126  3000               	movlw	0
 10093  0127  00DC               	movwf	(_cursor+3)^(0+256)
 10094  0128  3000               	movlw	0
 10095  0129  00DB               	movwf	(_cursor+2)^(0+256)
 10096  012A  3000               	movlw	0
 10097  012B  00DA               	movwf	(_cursor+1)^(0+256)
 10098  012C  3083               	movlw	131
 10099  012D  00D9               	movwf	_cursor^(0+256)
 10100  012E                     l6743:
 10101                           
 10102                           ;main.c: 342:                     if(PORTCbits.RC5==0){
 10103  012E  0020               	movlb	0	; select bank0
 10104  012F  1A8E               	btfsc	14,5	;volatile
 10105  0130  2932               	goto	u5681
 10106  0131  2933               	goto	u5680
 10107  0132                     u5681:
 10108  0132  29E3               	goto	l6825
 10109  0133                     u5680:
 10110  0133                     l6745:
 10111                           
 10112                           ;main.c: 343:                         if(minutes<59){
 10113  0133  303B               	movlw	59
 10114  0134  0022               	movlb	2	; select bank2
 10115  0135  022E               	subwf	_minutes^(0+256),w
 10116  0136  1803               	skipnc
 10117  0137  2939               	goto	u5691
 10118  0138  293A               	goto	u5690
 10119  0139                     u5691:
 10120  0139  293F               	goto	l6749
 10121  013A                     u5690:
 10122  013A                     l6747:
 10123                           
 10124                           ;main.c: 344:                             minutes++;
 10125  013A  3001               	movlw	1
 10126  013B  00CD               	movwf	??_main^(0+256)
 10127  013C  084D               	movf	??_main^(0+256),w
 10128  013D  07AE               	addwf	_minutes^(0+256),f
 10129                           
 10130                           ;main.c: 345:                         }else{
 10131  013E  2913               	goto	l6737
 10132  013F                     l6749:
 10133                           
 10134                           ;main.c: 346:                             minutes=0;
 10135  013F  01AE               	clrf	_minutes^(0+256)
 10136  0140  2913               	goto	l6737
 10137  0141                     l6753:
 10138  0141  3002               	movlw	2
 10139  0142  0626               	xorwf	_minimode^(0+256),w
 10140  0143  1D03               	btfss	3,2
 10141  0144  2946               	goto	u5701
 10142  0145  2947               	goto	u5700
 10143  0146                     u5701:
 10144  0146  2962               	goto	l6767
 10145  0147                     u5700:
 10146  0147                     l6755:
 10147                           
 10148                           ;main.c: 352:                     cursor=0x86;
 10149  0147  3000               	movlw	0
 10150  0148  00DC               	movwf	(_cursor+3)^(0+256)
 10151  0149  3000               	movlw	0
 10152  014A  00DB               	movwf	(_cursor+2)^(0+256)
 10153  014B  3000               	movlw	0
 10154  014C  00DA               	movwf	(_cursor+1)^(0+256)
 10155  014D  3086               	movlw	134
 10156  014E  00D9               	movwf	_cursor^(0+256)
 10157  014F                     l6757:
 10158                           
 10159                           ;main.c: 354:                     if(PORTCbits.RC5==0){
 10160  014F  0020               	movlb	0	; select bank0
 10161  0150  1A8E               	btfsc	14,5	;volatile
 10162  0151  2953               	goto	u5711
 10163  0152  2954               	goto	u5710
 10164  0153                     u5711:
 10165  0153  29E3               	goto	l6825
 10166  0154                     u5710:
 10167  0154                     l6759:
 10168                           
 10169                           ;main.c: 355:                         if(seconds<59){
 10170  0154  303B               	movlw	59
 10171  0155  0022               	movlb	2	; select bank2
 10172  0156  022D               	subwf	_seconds^(0+256),w
 10173  0157  1803               	skipnc
 10174  0158  295A               	goto	u5721
 10175  0159  295B               	goto	u5720
 10176  015A                     u5721:
 10177  015A  2960               	goto	l6763
 10178  015B                     u5720:
 10179  015B                     l6761:
 10180                           
 10181                           ;main.c: 356:                             seconds++;
 10182  015B  3001               	movlw	1
 10183  015C  00CD               	movwf	??_main^(0+256)
 10184  015D  084D               	movf	??_main^(0+256),w
 10185  015E  07AD               	addwf	_seconds^(0+256),f
 10186                           
 10187                           ;main.c: 357:                         }else{
 10188  015F  2913               	goto	l6737
 10189  0160                     l6763:
 10190                           
 10191                           ;main.c: 358:                             seconds=0;
 10192  0160  01AD               	clrf	_seconds^(0+256)
 10193  0161  2913               	goto	l6737
 10194  0162                     l6767:
 10195  0162  3005               	movlw	5
 10196  0163  0626               	xorwf	_minimode^(0+256),w
 10197  0164  1D03               	btfss	3,2
 10198  0165  2967               	goto	u5731
 10199  0166  2968               	goto	u5730
 10200  0167                     u5731:
 10201  0167  2988               	goto	l6785
 10202  0168                     u5730:
 10203  0168                     l6769:
 10204                           
 10205                           ;main.c: 364:                     cursor=0xc0;
 10206  0168  3000               	movlw	0
 10207  0169  00DC               	movwf	(_cursor+3)^(0+256)
 10208  016A  3000               	movlw	0
 10209  016B  00DB               	movwf	(_cursor+2)^(0+256)
 10210  016C  3000               	movlw	0
 10211  016D  00DA               	movwf	(_cursor+1)^(0+256)
 10212  016E  30C0               	movlw	192
 10213  016F  00D9               	movwf	_cursor^(0+256)
 10214  0170                     l6771:
 10215                           
 10216                           ;main.c: 366:                     if(PORTCbits.RC5==0){
 10217  0170  0020               	movlb	0	; select bank0
 10218  0171  1A8E               	btfsc	14,5	;volatile
 10219  0172  2974               	goto	u5741
 10220  0173  2975               	goto	u5740
 10221  0174                     u5741:
 10222  0174  29E3               	goto	l6825
 10223  0175                     u5740:
 10224  0175                     l6773:
 10225                           
 10226                           ;main.c: 367:                         if(t_threshold<50){
 10227  0175  3032               	movlw	50
 10228  0176  0022               	movlb	2	; select bank2
 10229  0177  026C               	subwf	_t_threshold^(0+256),w
 10230  0178  1803               	skipnc
 10231  0179  297B               	goto	u5751
 10232  017A  297C               	goto	u5750
 10233  017B                     u5751:
 10234  017B  2986               	goto	l6779
 10235  017C                     u5750:
 10236  017C                     l6775:
 10237                           
 10238                           ;main.c: 368:                             t_threshold++;
 10239  017C  3001               	movlw	1
 10240  017D  00CD               	movwf	??_main^(0+256)
 10241  017E  084D               	movf	??_main^(0+256),w
 10242  017F  07EC               	addwf	_t_threshold^(0+256),f
 10243  0180                     l6777:
 10244                           
 10245                           ;main.c: 369:                             variable1=t_threshold;
 10246  0180  086C               	movf	_t_threshold^(0+256),w
 10247  0181  00CD               	movwf	??_main^(0+256)
 10248  0182  084D               	movf	??_main^(0+256),w
 10249  0183  0021               	movlb	1	; select bank1
 10250  0184  00EF               	movwf	_variable1^(0+128)
 10251                           
 10252                           ;main.c: 370:                         }else{
 10253  0185  2913               	goto	l6737
 10254  0186                     l6779:
 10255                           
 10256                           ;main.c: 371:                             t_threshold=0;
 10257  0186  01EC               	clrf	_t_threshold^(0+256)
 10258  0187  2980               	goto	l6777
 10259  0188                     l6785:
 10260  0188  3006               	movlw	6
 10261  0189  0626               	xorwf	_minimode^(0+256),w
 10262  018A  1D03               	btfss	3,2
 10263  018B  298D               	goto	u5761
 10264  018C  298E               	goto	u5760
 10265  018D                     u5761:
 10266  018D  29AE               	goto	l6803
 10267  018E                     u5760:
 10268  018E                     l6787:
 10269                           
 10270                           ;main.c: 377:                     cursor=0xcb;
 10271  018E  3000               	movlw	0
 10272  018F  00DC               	movwf	(_cursor+3)^(0+256)
 10273  0190  3000               	movlw	0
 10274  0191  00DB               	movwf	(_cursor+2)^(0+256)
 10275  0192  3000               	movlw	0
 10276  0193  00DA               	movwf	(_cursor+1)^(0+256)
 10277  0194  30CB               	movlw	203
 10278  0195  00D9               	movwf	_cursor^(0+256)
 10279  0196                     l6789:
 10280                           
 10281                           ;main.c: 379:                     if(PORTCbits.RC5==0){
 10282  0196  0020               	movlb	0	; select bank0
 10283  0197  1A8E               	btfsc	14,5	;volatile
 10284  0198  299A               	goto	u5771
 10285  0199  299B               	goto	u5770
 10286  019A                     u5771:
 10287  019A  29E3               	goto	l6825
 10288  019B                     u5770:
 10289  019B                     l6791:
 10290                           
 10291                           ;main.c: 380:                         if(l_threshold<3){
 10292  019B  3003               	movlw	3
 10293  019C  0022               	movlb	2	; select bank2
 10294  019D  026B               	subwf	_l_threshold^(0+256),w
 10295  019E  1803               	skipnc
 10296  019F  29A1               	goto	u5781
 10297  01A0  29A2               	goto	u5780
 10298  01A1                     u5781:
 10299  01A1  29AC               	goto	l6797
 10300  01A2                     u5780:
 10301  01A2                     l6793:
 10302                           
 10303                           ;main.c: 381:                             l_threshold++;
 10304  01A2  3001               	movlw	1
 10305  01A3  00CD               	movwf	??_main^(0+256)
 10306  01A4  084D               	movf	??_main^(0+256),w
 10307  01A5  07EB               	addwf	_l_threshold^(0+256),f
 10308  01A6                     l6795:
 10309                           
 10310                           ;main.c: 382:                             variable2=l_threshold;
 10311  01A6  086B               	movf	_l_threshold^(0+256),w
 10312  01A7  00CD               	movwf	??_main^(0+256)
 10313  01A8  084D               	movf	??_main^(0+256),w
 10314  01A9  0021               	movlb	1	; select bank1
 10315  01AA  00EE               	movwf	_variable2^(0+128)
 10316                           
 10317                           ;main.c: 383:                         }else{
 10318  01AB  2913               	goto	l6737
 10319  01AC                     l6797:
 10320                           
 10321                           ;main.c: 384:                             l_threshold=0;
 10322  01AC  01EB               	clrf	_l_threshold^(0+256)
 10323  01AD  29A6               	goto	l6795
 10324  01AE                     l6803:
 10325  01AE  3007               	movlw	7
 10326  01AF  0626               	xorwf	_minimode^(0+256),w
 10327  01B0  1D03               	btfss	3,2
 10328  01B1  29B3               	goto	u5791
 10329  01B2  29B4               	goto	u5790
 10330  01B3                     u5791:
 10331  01B3  29E3               	goto	l6825
 10332  01B4                     u5790:
 10333  01B4                     l6805:
 10334                           
 10335                           ;main.c: 390:                     cursor=0x8f;
 10336  01B4  3000               	movlw	0
 10337  01B5  00DC               	movwf	(_cursor+3)^(0+256)
 10338  01B6  3000               	movlw	0
 10339  01B7  00DB               	movwf	(_cursor+2)^(0+256)
 10340  01B8  3000               	movlw	0
 10341  01B9  00DA               	movwf	(_cursor+1)^(0+256)
 10342  01BA  308F               	movlw	143
 10343  01BB  00D9               	movwf	_cursor^(0+256)
 10344  01BC                     l6807:
 10345                           
 10346                           ;main.c: 392:                     if(PORTCbits.RC5==0){
 10347  01BC  0020               	movlb	0	; select bank0
 10348  01BD  1A8E               	btfsc	14,5	;volatile
 10349  01BE  29C0               	goto	u5801
 10350  01BF  29C1               	goto	u5800
 10351  01C0                     u5801:
 10352  01C0  29E3               	goto	l6825
 10353  01C1                     u5800:
 10354  01C1                     l6809:
 10355                           
 10356                           ;main.c: 393:                         if(alarm1==1 || alarm2==1){
 10357  01C1  0022               	movlb	2	; select bank2
 10358  01C2  0328               	decf	_alarm1^(0+256),w
 10359  01C3  1903               	btfsc	3,2
 10360  01C4  29C6               	goto	u5811
 10361  01C5  29C7               	goto	u5810
 10362  01C6                     u5811:
 10363  01C6  29CC               	goto	l6813
 10364  01C7                     u5810:
 10365  01C7                     l6811:
 10366  01C7  0327               	decf	_alarm2^(0+256),w
 10367  01C8  1D03               	btfss	3,2
 10368  01C9  29CB               	goto	u5821
 10369  01CA  29CC               	goto	u5820
 10370  01CB                     u5821:
 10371  01CB  29DE               	goto	l1278
 10372  01CC                     u5820:
 10373  01CC                     l6813:
 10374                           
 10375                           ;main.c: 394:                             alarm1=0;
 10376  01CC  01A8               	clrf	_alarm1^(0+256)
 10377                           
 10378                           ;main.c: 395:                             alarm2=0;
 10379  01CD  01A7               	clrf	_alarm2^(0+256)
 10380  01CE                     l6815:
 10381                           
 10382                           ;main.c: 396:                             alarmc='a';
 10383  01CE  3061               	movlw	97
 10384  01CF  00CD               	movwf	??_main^(0+256)
 10385  01D0  084D               	movf	??_main^(0+256),w
 10386  01D1  00E3               	movwf	_alarmc^(0+256)
 10387  01D2                     l6817:
 10388                           
 10389                           ;main.c: 397:                             T=' ';
 10390  01D2  3020               	movlw	32
 10391  01D3  00CD               	movwf	??_main^(0+256)
 10392  01D4  084D               	movf	??_main^(0+256),w
 10393  01D5  00E6               	movwf	_T^(0+256)
 10394  01D6                     l6819:
 10395                           
 10396                           ;main.c: 398:                             L=' ';
 10397  01D6  3020               	movlw	32
 10398  01D7  00CD               	movwf	??_main^(0+256)
 10399  01D8  084D               	movf	??_main^(0+256),w
 10400  01D9  00E5               	movwf	_L^(0+256)
 10401  01DA                     l6821:
 10402                           
 10403                           ;main.c: 399:                             deactivateAlarm();
 10404  01DA  3190  2087  3180   	fcall	_deactivateAlarm
 10405                           
 10406                           ;main.c: 400:                         }else{
 10407  01DD  2913               	goto	l6737
 10408  01DE                     l1278:
 10409                           
 10410                           ;main.c: 401:                             alarm1=1;
 10411  01DE  01A8               	clrf	_alarm1^(0+256)
 10412  01DF  0AA8               	incf	_alarm1^(0+256),f
 10413                           
 10414                           ;main.c: 402:                             alarm2=1;
 10415  01E0  01A7               	clrf	_alarm2^(0+256)
 10416  01E1  0AA7               	incf	_alarm2^(0+256),f
 10417  01E2  2913               	goto	l6737
 10418  01E3                     l6825:
 10419                           
 10420                           ;main.c: 408:             if(PORTBbits.RB4==0){
 10421  01E3  0020               	movlb	0	; select bank0
 10422  01E4  1A0D               	btfsc	13,4	;volatile
 10423  01E5  29E7               	goto	u5831
 10424  01E6  29E8               	goto	u5830
 10425  01E7                     u5831:
 10426  01E7  2B13               	goto	l1249
 10427  01E8                     u5830:
 10428  01E8                     l6827:
 10429                           
 10430                           ;main.c: 409:                     T=' ';
 10431  01E8  3020               	movlw	32
 10432  01E9  0022               	movlb	2	; select bank2
 10433  01EA  00CD               	movwf	??_main^(0+256)
 10434  01EB  084D               	movf	??_main^(0+256),w
 10435  01EC  00E6               	movwf	_T^(0+256)
 10436                           
 10437                           ;main.c: 410:                     L=' ';
 10438  01ED  3020               	movlw	32
 10439  01EE  00CD               	movwf	??_main^(0+256)
 10440  01EF  084D               	movf	??_main^(0+256),w
 10441  01F0  00E5               	movwf	_L^(0+256)
 10442                           
 10443                           ;main.c: 411:                     M=' ';
 10444  01F1  3020               	movlw	32
 10445  01F2  00CD               	movwf	??_main^(0+256)
 10446  01F3  084D               	movf	??_main^(0+256),w
 10447  01F4  00E4               	movwf	_M^(0+256)
 10448                           
 10449                           ;main.c: 412:                     m=' ';
 10450  01F5  3020               	movlw	32
 10451  01F6  00CD               	movwf	??_main^(0+256)
 10452  01F7  084D               	movf	??_main^(0+256),w
 10453  01F8  0023               	movlb	3	; select bank3
 10454  01F9  00DD               	movwf	_m^(0+384)
 10455  01FA                     l6829:
 10456                           
 10457                           ;main.c: 413:                     modification=0;
 10458  01FA  0022               	movlb	2	; select bank2
 10459  01FB  01E7               	clrf	_modification^(0+256)
 10460  01FC                     l6831:
 10461                           
 10462                           ;main.c: 414:                     mode=0;
 10463  01FC  01A9               	clrf	_mode^(0+256)
 10464                           
 10465                           ;main.c: 415:                     _delay((unsigned long)((1000)*(1000000/4000.0)));
 10466  01FD  3002               	movlw	2
 10467  01FE  0022               	movlb	2	; select bank2
 10468  01FF  00CE               	movwf	(??_main^(0+256)+1)
 10469  0200  3045               	movlw	69
 10470  0201  00CD               	movwf	??_main^(0+256)
 10471  0202  30A9               	movlw	169
 10472  0203                     u5997:
 10473  0203  0B89               	decfsz	9,f
 10474  0204  2A03               	goto	u5997
 10475  0205  0BCD               	decfsz	??_main^(0+256),f
 10476  0206  2A03               	goto	u5997
 10477  0207  0BCE               	decfsz	(??_main^(0+256)+1),f
 10478  0208  2A03               	goto	u5997
 10479  0209  3200               	nop2
 10480  020A  28E9               	goto	l6721
 10481  020B                     l6833:
 10482                           
 10483                           ;main.c: 421:                 if(minimode==0){
 10484  020B  0826               	movf	_minimode^(0+256),w
 10485  020C  1D03               	btfss	3,2
 10486  020D  2A0F               	goto	u5841
 10487  020E  2A10               	goto	u5840
 10488  020F                     u5841:
 10489  020F  2A19               	goto	l6837
 10490  0210                     u5840:
 10491  0210                     l6835:
 10492                           
 10493                           ;main.c: 423:                     cursor=0x80;
 10494  0210  3000               	movlw	0
 10495  0211  00DC               	movwf	(_cursor+3)^(0+256)
 10496  0212  3000               	movlw	0
 10497  0213  00DB               	movwf	(_cursor+2)^(0+256)
 10498  0214  3000               	movlw	0
 10499  0215  00DA               	movwf	(_cursor+1)^(0+256)
 10500  0216  3080               	movlw	128
 10501  0217  00D9               	movwf	_cursor^(0+256)
 10502                           
 10503                           ;main.c: 425:                 }else if (minimode==1){
 10504  0218  2ABF               	goto	l6865
 10505  0219                     l6837:
 10506  0219  0326               	decf	_minimode^(0+256),w
 10507  021A  1D03               	btfss	3,2
 10508  021B  2A1D               	goto	u5851
 10509  021C  2A1E               	goto	u5850
 10510  021D                     u5851:
 10511  021D  2A27               	goto	l6841
 10512  021E                     u5850:
 10513  021E                     l6839:
 10514                           
 10515                           ;main.c: 427:                     cursor=0x83;
 10516  021E  3000               	movlw	0
 10517  021F  00DC               	movwf	(_cursor+3)^(0+256)
 10518  0220  3000               	movlw	0
 10519  0221  00DB               	movwf	(_cursor+2)^(0+256)
 10520  0222  3000               	movlw	0
 10521  0223  00DA               	movwf	(_cursor+1)^(0+256)
 10522  0224  3083               	movlw	131
 10523  0225  00D9               	movwf	_cursor^(0+256)
 10524                           
 10525                           ;main.c: 429:                 }else if(minimode==2){
 10526  0226  2ABF               	goto	l6865
 10527  0227                     l6841:
 10528  0227  3002               	movlw	2
 10529  0228  0626               	xorwf	_minimode^(0+256),w
 10530  0229  1D03               	btfss	3,2
 10531  022A  2A2C               	goto	u5861
 10532  022B  2A2D               	goto	u5860
 10533  022C                     u5861:
 10534  022C  2A36               	goto	l6845
 10535  022D                     u5860:
 10536  022D                     l6843:
 10537                           
 10538                           ;main.c: 431:                     cursor=0x86;
 10539  022D  3000               	movlw	0
 10540  022E  00DC               	movwf	(_cursor+3)^(0+256)
 10541  022F  3000               	movlw	0
 10542  0230  00DB               	movwf	(_cursor+2)^(0+256)
 10543  0231  3000               	movlw	0
 10544  0232  00DA               	movwf	(_cursor+1)^(0+256)
 10545  0233  3086               	movlw	134
 10546  0234  00D9               	movwf	_cursor^(0+256)
 10547                           
 10548                           ;main.c: 433:                 }else if(minimode==3){
 10549  0235  2ABF               	goto	l6865
 10550  0236                     l6845:
 10551  0236  3003               	movlw	3
 10552  0237  0626               	xorwf	_minimode^(0+256),w
 10553  0238  1D03               	btfss	3,2
 10554  0239  2A3B               	goto	u5871
 10555  023A  2A3C               	goto	u5870
 10556  023B                     u5871:
 10557  023B  2A54               	goto	l6849
 10558  023C                     u5870:
 10559  023C                     l6847:
 10560                           
 10561                           ;main.c: 435:                     cursor=0x89;
 10562  023C  3000               	movlw	0
 10563  023D  00DC               	movwf	(_cursor+3)^(0+256)
 10564  023E  3000               	movlw	0
 10565  023F  00DB               	movwf	(_cursor+2)^(0+256)
 10566  0240  3000               	movlw	0
 10567  0241  00DA               	movwf	(_cursor+1)^(0+256)
 10568  0242  3089               	movlw	137
 10569  0243  00D9               	movwf	_cursor^(0+256)
 10570                           
 10571                           ;main.c: 437:                     M= 'M';
 10572  0244  304D               	movlw	77
 10573  0245  00CD               	movwf	??_main^(0+256)
 10574  0246  084D               	movf	??_main^(0+256),w
 10575  0247  00E4               	movwf	_M^(0+256)
 10576                           
 10577                           ;main.c: 438:                     variable1=max_temperature;
 10578  0248  0869               	movf	_max_temperature^(0+256),w
 10579  0249  00CD               	movwf	??_main^(0+256)
 10580  024A  084D               	movf	??_main^(0+256),w
 10581  024B  0021               	movlb	1	; select bank1
 10582  024C  00EF               	movwf	_variable1^(0+128)
 10583                           
 10584                           ;main.c: 439:                     variable2=max_luminosity;
 10585  024D  0022               	movlb	2	; select bank2
 10586  024E  086F               	movf	_max_luminosity^(0+256),w
 10587  024F  00CD               	movwf	??_main^(0+256)
 10588  0250  084D               	movf	??_main^(0+256),w
 10589  0251  0021               	movlb	1	; select bank1
 10590  0252  00EE               	movwf	_variable2^(0+128)
 10591                           
 10592                           ;main.c: 440:                 }else if(minimode==4){
 10593  0253  2ABF               	goto	l6865
 10594  0254                     l6849:
 10595  0254  3004               	movlw	4
 10596  0255  0626               	xorwf	_minimode^(0+256),w
 10597  0256  1D03               	btfss	3,2
 10598  0257  2A59               	goto	u5881
 10599  0258  2A5A               	goto	u5880
 10600  0259                     u5881:
 10601  0259  2A74               	goto	l6853
 10602  025A                     u5880:
 10603  025A                     l6851:
 10604                           
 10605                           ;main.c: 442:                     cursor=0x8a;
 10606  025A  3000               	movlw	0
 10607  025B  00DC               	movwf	(_cursor+3)^(0+256)
 10608  025C  3000               	movlw	0
 10609  025D  00DB               	movwf	(_cursor+2)^(0+256)
 10610  025E  3000               	movlw	0
 10611  025F  00DA               	movwf	(_cursor+1)^(0+256)
 10612  0260  308A               	movlw	138
 10613  0261  00D9               	movwf	_cursor^(0+256)
 10614                           
 10615                           ;main.c: 444:                     m= 'm';
 10616  0262  306D               	movlw	109
 10617  0263  00CD               	movwf	??_main^(0+256)
 10618  0264  084D               	movf	??_main^(0+256),w
 10619  0265  0023               	movlb	3	; select bank3
 10620  0266  00DD               	movwf	_m^(0+384)
 10621                           
 10622                           ;main.c: 445:                     variable1=min_temperature;
 10623  0267  0022               	movlb	2	; select bank2
 10624  0268  082A               	movf	_min_temperature^(0+256),w
 10625  0269  00CD               	movwf	??_main^(0+256)
 10626  026A  084D               	movf	??_main^(0+256),w
 10627  026B  0021               	movlb	1	; select bank1
 10628  026C  00EF               	movwf	_variable1^(0+128)
 10629                           
 10630                           ;main.c: 446:                     variable2=min_luminosity;
 10631  026D  0022               	movlb	2	; select bank2
 10632  026E  082C               	movf	_min_luminosity^(0+256),w
 10633  026F  00CD               	movwf	??_main^(0+256)
 10634  0270  084D               	movf	??_main^(0+256),w
 10635  0271  0021               	movlb	1	; select bank1
 10636  0272  00EE               	movwf	_variable2^(0+128)
 10637                           
 10638                           ;main.c: 447:                 }else if(minimode==5){
 10639  0273  2ABF               	goto	l6865
 10640  0274                     l6853:
 10641  0274  3005               	movlw	5
 10642  0275  0626               	xorwf	_minimode^(0+256),w
 10643  0276  1D03               	btfss	3,2
 10644  0277  2A79               	goto	u5891
 10645  0278  2A7A               	goto	u5890
 10646  0279                     u5891:
 10647  0279  2A92               	goto	l6857
 10648  027A                     u5890:
 10649  027A                     l6855:
 10650                           
 10651                           ;main.c: 449:                     cursor=0x8b;
 10652  027A  3000               	movlw	0
 10653  027B  00DC               	movwf	(_cursor+3)^(0+256)
 10654  027C  3000               	movlw	0
 10655  027D  00DB               	movwf	(_cursor+2)^(0+256)
 10656  027E  3000               	movlw	0
 10657  027F  00DA               	movwf	(_cursor+1)^(0+256)
 10658  0280  308B               	movlw	139
 10659  0281  00D9               	movwf	_cursor^(0+256)
 10660                           
 10661                           ;main.c: 451:                     T= 'T';
 10662  0282  3054               	movlw	84
 10663  0283  00CD               	movwf	??_main^(0+256)
 10664  0284  084D               	movf	??_main^(0+256),w
 10665  0285  00E6               	movwf	_T^(0+256)
 10666                           
 10667                           ;main.c: 452:                     variable1=t_threshold;
 10668  0286  086C               	movf	_t_threshold^(0+256),w
 10669  0287  00CD               	movwf	??_main^(0+256)
 10670  0288  084D               	movf	??_main^(0+256),w
 10671  0289  0021               	movlb	1	; select bank1
 10672  028A  00EF               	movwf	_variable1^(0+128)
 10673                           
 10674                           ;main.c: 453:                     variable2=l_threshold;
 10675  028B  0022               	movlb	2	; select bank2
 10676  028C  086B               	movf	_l_threshold^(0+256),w
 10677  028D  00CD               	movwf	??_main^(0+256)
 10678  028E  084D               	movf	??_main^(0+256),w
 10679  028F  0021               	movlb	1	; select bank1
 10680  0290  00EE               	movwf	_variable2^(0+128)
 10681                           
 10682                           ;main.c: 454:                 }else if(minimode==6){
 10683  0291  2ABF               	goto	l6865
 10684  0292                     l6857:
 10685  0292  3006               	movlw	6
 10686  0293  0626               	xorwf	_minimode^(0+256),w
 10687  0294  1D03               	btfss	3,2
 10688  0295  2A97               	goto	u5901
 10689  0296  2A98               	goto	u5900
 10690  0297                     u5901:
 10691  0297  2AB0               	goto	l6861
 10692  0298                     u5900:
 10693  0298                     l6859:
 10694                           
 10695                           ;main.c: 456:                     cursor=0x8c;
 10696  0298  3000               	movlw	0
 10697  0299  00DC               	movwf	(_cursor+3)^(0+256)
 10698  029A  3000               	movlw	0
 10699  029B  00DB               	movwf	(_cursor+2)^(0+256)
 10700  029C  3000               	movlw	0
 10701  029D  00DA               	movwf	(_cursor+1)^(0+256)
 10702  029E  308C               	movlw	140
 10703  029F  00D9               	movwf	_cursor^(0+256)
 10704                           
 10705                           ;main.c: 458:                     L= 'L';
 10706  02A0  304C               	movlw	76
 10707  02A1  00CD               	movwf	??_main^(0+256)
 10708  02A2  084D               	movf	??_main^(0+256),w
 10709  02A3  00E5               	movwf	_L^(0+256)
 10710                           
 10711                           ;main.c: 459:                     variable1=t_threshold;
 10712  02A4  086C               	movf	_t_threshold^(0+256),w
 10713  02A5  00CD               	movwf	??_main^(0+256)
 10714  02A6  084D               	movf	??_main^(0+256),w
 10715  02A7  0021               	movlb	1	; select bank1
 10716  02A8  00EF               	movwf	_variable1^(0+128)
 10717                           
 10718                           ;main.c: 460:                     variable2=l_threshold;
 10719  02A9  0022               	movlb	2	; select bank2
 10720  02AA  086B               	movf	_l_threshold^(0+256),w
 10721  02AB  00CD               	movwf	??_main^(0+256)
 10722  02AC  084D               	movf	??_main^(0+256),w
 10723  02AD  0021               	movlb	1	; select bank1
 10724  02AE  00EE               	movwf	_variable2^(0+128)
 10725                           
 10726                           ;main.c: 461:                 }else if(minimode==7){
 10727  02AF  2ABF               	goto	l6865
 10728  02B0                     l6861:
 10729  02B0  3007               	movlw	7
 10730  02B1  0626               	xorwf	_minimode^(0+256),w
 10731  02B2  1D03               	btfss	3,2
 10732  02B3  2AB5               	goto	u5911
 10733  02B4  2AB6               	goto	u5910
 10734  02B5                     u5911:
 10735  02B5  2ABF               	goto	l1293
 10736  02B6                     u5910:
 10737  02B6                     l6863:
 10738                           
 10739                           ;main.c: 463:                     cursor=0x8f;
 10740  02B6  3000               	movlw	0
 10741  02B7  00DC               	movwf	(_cursor+3)^(0+256)
 10742  02B8  3000               	movlw	0
 10743  02B9  00DB               	movwf	(_cursor+2)^(0+256)
 10744  02BA  3000               	movlw	0
 10745  02BB  00DA               	movwf	(_cursor+1)^(0+256)
 10746  02BC  308F               	movlw	143
 10747  02BD  00D9               	movwf	_cursor^(0+256)
 10748  02BE  2ABF               	goto	l6865
 10749  02BF                     l1293:
 10750  02BF                     l6865:
 10751                           
 10752                           ;main.c: 467:                 if(PORTBbits.RB4==0){
 10753  02BF  0020               	movlb	0	; select bank0
 10754  02C0  1A0D               	btfsc	13,4	;volatile
 10755  02C1  2AC3               	goto	u5921
 10756  02C2  2AC4               	goto	u5920
 10757  02C3                     u5921:
 10758  02C3  2AF1               	goto	l6875
 10759  02C4                     u5920:
 10760  02C4                     l6867:
 10761                           
 10762                           ;main.c: 468:                     T=' ';
 10763  02C4  3020               	movlw	32
 10764  02C5  0022               	movlb	2	; select bank2
 10765  02C6  00CD               	movwf	??_main^(0+256)
 10766  02C7  084D               	movf	??_main^(0+256),w
 10767  02C8  00E6               	movwf	_T^(0+256)
 10768                           
 10769                           ;main.c: 469:                     L=' ';
 10770  02C9  3020               	movlw	32
 10771  02CA  00CD               	movwf	??_main^(0+256)
 10772  02CB  084D               	movf	??_main^(0+256),w
 10773  02CC  00E5               	movwf	_L^(0+256)
 10774                           
 10775                           ;main.c: 470:                     M=' ';
 10776  02CD  3020               	movlw	32
 10777  02CE  00CD               	movwf	??_main^(0+256)
 10778  02CF  084D               	movf	??_main^(0+256),w
 10779  02D0  00E4               	movwf	_M^(0+256)
 10780                           
 10781                           ;main.c: 471:                     m=' ';
 10782  02D1  3020               	movlw	32
 10783  02D2  00CD               	movwf	??_main^(0+256)
 10784  02D3  084D               	movf	??_main^(0+256),w
 10785  02D4  0023               	movlb	3	; select bank3
 10786  02D5  00DD               	movwf	_m^(0+384)
 10787                           
 10788                           ;main.c: 472:                     if(minimode<7){
 10789  02D6  3007               	movlw	7
 10790  02D7  0022               	movlb	2	; select bank2
 10791  02D8  0226               	subwf	_minimode^(0+256),w
 10792  02D9  1803               	skipnc
 10793  02DA  2ADC               	goto	u5931
 10794  02DB  2ADD               	goto	u5930
 10795  02DC                     u5931:
 10796  02DC  2AEF               	goto	l6873
 10797  02DD                     u5930:
 10798  02DD                     l6869:
 10799                           
 10800                           ;main.c: 473:                         minimode++;
 10801  02DD  3001               	movlw	1
 10802  02DE  00CD               	movwf	??_main^(0+256)
 10803  02DF  084D               	movf	??_main^(0+256),w
 10804  02E0  07A6               	addwf	_minimode^(0+256),f
 10805  02E1                     l6871:
 10806                           
 10807                           ;main.c: 474:                         _delay((unsigned long)((1000)*(1000000/4000.0)));
 10808  02E1  3002               	movlw	2
 10809  02E2  0022               	movlb	2	; select bank2
 10810  02E3  00CE               	movwf	(??_main^(0+256)+1)
 10811  02E4  3045               	movlw	69
 10812  02E5  00CD               	movwf	??_main^(0+256)
 10813  02E6  30A9               	movlw	169
 10814  02E7                     u6007:
 10815  02E7  0B89               	decfsz	9,f
 10816  02E8  2AE7               	goto	u6007
 10817  02E9  0BCD               	decfsz	??_main^(0+256),f
 10818  02EA  2AE7               	goto	u6007
 10819  02EB  0BCE               	decfsz	(??_main^(0+256)+1),f
 10820  02EC  2AE7               	goto	u6007
 10821  02ED  3200               	nop2
 10822                           
 10823                           ;main.c: 475:                     }else{
 10824  02EE  2AF1               	goto	l6875
 10825  02EF                     l6873:
 10826                           
 10827                           ;main.c: 476:                         minimode=0;
 10828  02EF  01A6               	clrf	_minimode^(0+256)
 10829                           
 10830                           ;main.c: 477:                         mode=0;
 10831  02F0  01A9               	clrf	_mode^(0+256)
 10832  02F1                     l6875:
 10833                           
 10834                           ;main.c: 480:                 if(PORTCbits.RC5==0 && minimode!= 3 && minimode!=4){
 10835  02F1  0020               	movlb	0	; select bank0
 10836  02F2  1A8E               	btfsc	14,5	;volatile
 10837  02F3  2AF5               	goto	u5941
 10838  02F4  2AF6               	goto	u5940
 10839  02F5                     u5941:
 10840  02F5  2B13               	goto	l1249
 10841  02F6                     u5940:
 10842  02F6                     l6877:
 10843  02F6  3003               	movlw	3
 10844  02F7  0022               	movlb	2	; select bank2
 10845  02F8  0626               	xorwf	_minimode^(0+256),w
 10846  02F9  1903               	btfsc	3,2
 10847  02FA  2AFC               	goto	u5951
 10848  02FB  2AFD               	goto	u5950
 10849  02FC                     u5951:
 10850  02FC  2B13               	goto	l1249
 10851  02FD                     u5950:
 10852  02FD                     l6879:
 10853  02FD  3004               	movlw	4
 10854  02FE  0626               	xorwf	_minimode^(0+256),w
 10855  02FF  1903               	btfsc	3,2
 10856  0300  2B02               	goto	u5961
 10857  0301  2B03               	goto	u5960
 10858  0302                     u5961:
 10859  0302  2B13               	goto	l1249
 10860  0303                     u5960:
 10861  0303                     l6881:
 10862                           
 10863                           ;main.c: 481:                     modification=1;
 10864  0303  01E7               	clrf	_modification^(0+256)
 10865  0304  0AE7               	incf	_modification^(0+256),f
 10866  0305                     l6883:
 10867                           
 10868                           ;main.c: 482:                     _delay((unsigned long)((1000)*(1000000/4000.0)));
 10869  0305  3002               	movlw	2
 10870  0306  0022               	movlb	2	; select bank2
 10871  0307  00CE               	movwf	(??_main^(0+256)+1)
 10872  0308  3045               	movlw	69
 10873  0309  00CD               	movwf	??_main^(0+256)
 10874  030A  30A9               	movlw	169
 10875  030B                     u6017:
 10876  030B  0B89               	decfsz	9,f
 10877  030C  2B0B               	goto	u6017
 10878  030D  0BCD               	decfsz	??_main^(0+256),f
 10879  030E  2B0B               	goto	u6017
 10880  030F  0BCE               	decfsz	(??_main^(0+256)+1),f
 10881  0310  2B0B               	goto	u6017
 10882  0311  3200               	nop2
 10883  0312  28E9               	goto	l6721
 10884  0313                     l1249:	
 10885                           ;main.c: 486:         }
 10886                           
 10887  0313  28E9               	goto	l6721
 10888  0314  3180  2818         	ljmp	start
 10889  0316                     __end_of_main:
 10890                           
 10891                           	psect	text1
 10892  1481                     __ptext1:	
 10893 ;; *************** function _storeEPROMBuild *****************
 10894 ;; Defined at:
 10895 ;;		line 50 in file "EPROMlib.c"
 10896 ;; Parameters:    Size  Location     Type
 10897 ;;  hours           1    wreg     unsigned char 
 10898 ;;  minutes         1    7[BANK2 ] unsigned char 
 10899 ;;  seconds         1    8[BANK2 ] unsigned char 
 10900 ;;  temperature     1    9[BANK2 ] unsigned char 
 10901 ;;  luminosity      1   10[BANK2 ] unsigned char 
 10902 ;;  operation       1   11[BANK2 ] unsigned char 
 10903 ;; Auto vars:     Size  Location     Type
 10904 ;;  hours           1   13[BANK2 ] unsigned char 
 10905 ;;  dataAddr        2   14[BANK2 ] unsigned short 
 10906 ;; Return value:  Size  Location     Type
 10907 ;;                  1    wreg      void 
 10908 ;; Registers used:
 10909 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10910 ;; Tracked objects:
 10911 ;;		On entry : 0/0
 10912 ;;		On exit  : 0/0
 10913 ;;		Unchanged: 0/0
 10914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10915 ;;      Params:         0       0       0       5       0       0       0       0       0       0       0       0       
      +0       0
 10916 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
 10917 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 10918 ;;      Totals:         0       0       0       9       0       0       0       0       0       0       0       0       
      +0       0
 10919 ;;Total ram usage:        9 bytes
 10920 ;; Hardware stack levels used: 1
 10921 ;; Hardware stack levels required when called: 14
 10922 ;; This function calls:
 10923 ;;		_DATAEE_WriteByte
 10924 ;;		_operADDR
 10925 ;; This function is called by:
 10926 ;;		_main
 10927 ;; This function uses a non-reentrant model
 10928 ;;
 10929                           
 10930                           
 10931                           ;psect for function _storeEPROMBuild
 10932  1481                     _storeEPROMBuild:
 10933                           
 10934                           ;incstack = 0
 10935                           ; Regs used in _storeEPROMBuild: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10936                           ;storeEPROMBuild@hours stored from wreg
 10937  1481  0022               	movlb	2	; select bank2
 10938  1482  00CA               	movwf	storeEPROMBuild@hours^(0+256)
 10939  1483                     l6169:
 10940                           
 10941                           ;EPROMlib.c: 51:     uint16_t dataAddr;;EPROMlib.c: 53:     dataAddr = operADDR(operatio
      +                          n);
 10942  1483  0848               	movf	storeEPROMBuild@operation^(0+256),w
 10943  1484  3193  236B  3194   	fcall	_operADDR
 10944  1487  0022               	movlb	2	; select bank2
 10945  1488  083E               	movf	(?_operADDR+1)^(0+256),w
 10946  1489  00CC               	movwf	(storeEPROMBuild@dataAddr+1)^(0+256)
 10947  148A  083D               	movf	?_operADDR^(0+256),w
 10948  148B  00CB               	movwf	storeEPROMBuild@dataAddr^(0+256)
 10949  148C                     l6171:
 10950                           
 10951                           ;EPROMlib.c: 54:     DATAEE_WriteByte(dataAddr, hours);
 10952  148C  084C               	movf	(storeEPROMBuild@dataAddr+1)^(0+256),w
 10953  148D  00BE               	movwf	(DATAEE_WriteByte@bAdd+1)^(0+256)
 10954  148E  084B               	movf	storeEPROMBuild@dataAddr^(0+256),w
 10955  148F  00BD               	movwf	DATAEE_WriteByte@bAdd^(0+256)
 10956  1490  084A               	movf	storeEPROMBuild@hours^(0+256),w
 10957  1491  00C9               	movwf	??_storeEPROMBuild^(0+256)
 10958  1492  0849               	movf	??_storeEPROMBuild^(0+256),w
 10959  1493  00BF               	movwf	DATAEE_WriteByte@bData^(0+256)
 10960  1494  3192  229C  3194   	fcall	_DATAEE_WriteByte
 10961  1497                     l6173:
 10962                           
 10963                           ;EPROMlib.c: 55:     DATAEE_WriteByte(dataAddr + 1, minutes);
 10964  1497  0022               	movlb	2	; select bank2
 10965  1498  084B               	movf	storeEPROMBuild@dataAddr^(0+256),w
 10966  1499  3E01               	addlw	1
 10967  149A  00BD               	movwf	DATAEE_WriteByte@bAdd^(0+256)
 10968  149B  3000               	movlw	0
 10969  149C  3D4C               	addwfc	(storeEPROMBuild@dataAddr+1)^(0+256),w
 10970  149D  00BE               	movwf	(DATAEE_WriteByte@bAdd+1)^(0+256)
 10971  149E  0844               	movf	storeEPROMBuild@minutes^(0+256),w
 10972  149F  00C9               	movwf	??_storeEPROMBuild^(0+256)
 10973  14A0  0849               	movf	??_storeEPROMBuild^(0+256),w
 10974  14A1  00BF               	movwf	DATAEE_WriteByte@bData^(0+256)
 10975  14A2  3192  229C  3194   	fcall	_DATAEE_WriteByte
 10976  14A5                     l6175:
 10977                           
 10978                           ;EPROMlib.c: 56:     DATAEE_WriteByte(dataAddr + 2, seconds);
 10979  14A5  0022               	movlb	2	; select bank2
 10980  14A6  084B               	movf	storeEPROMBuild@dataAddr^(0+256),w
 10981  14A7  3E02               	addlw	2
 10982  14A8  00BD               	movwf	DATAEE_WriteByte@bAdd^(0+256)
 10983  14A9  3000               	movlw	0
 10984  14AA  3D4C               	addwfc	(storeEPROMBuild@dataAddr+1)^(0+256),w
 10985  14AB  00BE               	movwf	(DATAEE_WriteByte@bAdd+1)^(0+256)
 10986  14AC  0845               	movf	storeEPROMBuild@seconds^(0+256),w
 10987  14AD  00C9               	movwf	??_storeEPROMBuild^(0+256)
 10988  14AE  0849               	movf	??_storeEPROMBuild^(0+256),w
 10989  14AF  00BF               	movwf	DATAEE_WriteByte@bData^(0+256)
 10990  14B0  3192  229C  3194   	fcall	_DATAEE_WriteByte
 10991  14B3                     l6177:
 10992                           
 10993                           ;EPROMlib.c: 57:     DATAEE_WriteByte(dataAddr + 3, temperature);
 10994  14B3  0022               	movlb	2	; select bank2
 10995  14B4  084B               	movf	storeEPROMBuild@dataAddr^(0+256),w
 10996  14B5  3E03               	addlw	3
 10997  14B6  00BD               	movwf	DATAEE_WriteByte@bAdd^(0+256)
 10998  14B7  3000               	movlw	0
 10999  14B8  3D4C               	addwfc	(storeEPROMBuild@dataAddr+1)^(0+256),w
 11000  14B9  00BE               	movwf	(DATAEE_WriteByte@bAdd+1)^(0+256)
 11001  14BA  0846               	movf	storeEPROMBuild@temperature^(0+256),w
 11002  14BB  00C9               	movwf	??_storeEPROMBuild^(0+256)
 11003  14BC  0849               	movf	??_storeEPROMBuild^(0+256),w
 11004  14BD  00BF               	movwf	DATAEE_WriteByte@bData^(0+256)
 11005  14BE  3192  229C  3194   	fcall	_DATAEE_WriteByte
 11006  14C1                     l6179:
 11007                           
 11008                           ;EPROMlib.c: 58:     DATAEE_WriteByte(dataAddr + 4, luminosity);
 11009  14C1  0022               	movlb	2	; select bank2
 11010  14C2  084B               	movf	storeEPROMBuild@dataAddr^(0+256),w
 11011  14C3  3E04               	addlw	4
 11012  14C4  00BD               	movwf	DATAEE_WriteByte@bAdd^(0+256)
 11013  14C5  3000               	movlw	0
 11014  14C6  3D4C               	addwfc	(storeEPROMBuild@dataAddr+1)^(0+256),w
 11015  14C7  00BE               	movwf	(DATAEE_WriteByte@bAdd+1)^(0+256)
 11016  14C8  0847               	movf	storeEPROMBuild@luminosity^(0+256),w
 11017  14C9  00C9               	movwf	??_storeEPROMBuild^(0+256)
 11018  14CA  0849               	movf	??_storeEPROMBuild^(0+256),w
 11019  14CB  00BF               	movwf	DATAEE_WriteByte@bData^(0+256)
 11020  14CC  3192  229C  3194   	fcall	_DATAEE_WriteByte
 11021  14CF                     l1366:
 11022  14CF  0008               	return
 11023  14D0                     __end_of_storeEPROMBuild:
 11024                           
 11025                           	psect	text2
 11026  136B                     __ptext2:	
 11027 ;; *************** function _operADDR *****************
 11028 ;; Defined at:
 11029 ;;		line 7 in file "EPROMlib.c"
 11030 ;; Parameters:    Size  Location     Type
 11031 ;;  operation       1    wreg     unsigned char 
 11032 ;; Auto vars:     Size  Location     Type
 11033 ;;  operation       1    4[BANK2 ] unsigned char 
 11034 ;;  dataAddr        2    5[BANK2 ] unsigned short 
 11035 ;; Return value:  Size  Location     Type
 11036 ;;                  2    0[BANK2 ] unsigned short 
 11037 ;; Registers used:
 11038 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 11039 ;; Tracked objects:
 11040 ;;		On entry : 0/0
 11041 ;;		On exit  : 0/0
 11042 ;;		Unchanged: 0/0
 11043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11044 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 11045 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
 11046 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 11047 ;;      Totals:         0       0       0       7       0       0       0       0       0       0       0       0       
      +0       0
 11048 ;;Total ram usage:        7 bytes
 11049 ;; Hardware stack levels used: 1
 11050 ;; Hardware stack levels required when called: 13
 11051 ;; This function calls:
 11052 ;;		Nothing
 11053 ;; This function is called by:
 11054 ;;		_storeEPROMBuild
 11055 ;;		_parseEPROMReading
 11056 ;; This function uses a non-reentrant model
 11057 ;;
 11058                           
 11059                           
 11060                           ;psect for function _operADDR
 11061  136B                     _operADDR:
 11062                           
 11063                           ;incstack = 0
 11064                           ; Regs used in _operADDR: [wreg-fsr0h+status,2+status,0]
 11065                           ;operADDR@operation stored from wreg
 11066  136B  0022               	movlb	2	; select bank2
 11067  136C  00C1               	movwf	operADDR@operation^(0+256)
 11068  136D                     l5957:
 11069                           
 11070                           ;EPROMlib.c: 8:     uint16_t dataAddr;;EPROMlib.c: 9:     switch (operation){
 11071  136D  2B87               	goto	l5961
 11072  136E                     l1354:	
 11073                           ;EPROMlib.c: 10:         case 100:
 11074                           
 11075                           
 11076                           ;EPROMlib.c: 11:             dataAddr = 0x7000;
 11077  136E  3000               	movlw	0
 11078  136F  00C2               	movwf	operADDR@dataAddr^(0+256)
 11079  1370  3070               	movlw	112
 11080  1371  00C3               	movwf	(operADDR@dataAddr^(0+256)+1)
 11081                           
 11082                           ;EPROMlib.c: 12:             break;
 11083  1372  2B9D               	goto	l5963
 11084  1373                     l1356:	
 11085                           ;EPROMlib.c: 14:         case 101:
 11086                           
 11087                           
 11088                           ;EPROMlib.c: 15:             dataAddr = 0x7005;
 11089  1373  3005               	movlw	5
 11090  1374  00C2               	movwf	operADDR@dataAddr^(0+256)
 11091  1375  3070               	movlw	112
 11092  1376  00C3               	movwf	(operADDR@dataAddr^(0+256)+1)
 11093                           
 11094                           ;EPROMlib.c: 16:             break;
 11095  1377  2B9D               	goto	l5963
 11096  1378                     l1357:	
 11097                           ;EPROMlib.c: 18:         case 102:
 11098                           
 11099                           
 11100                           ;EPROMlib.c: 19:             dataAddr = 0x700A;
 11101  1378  300A               	movlw	10
 11102  1379  00C2               	movwf	operADDR@dataAddr^(0+256)
 11103  137A  3070               	movlw	112
 11104  137B  00C3               	movwf	(operADDR@dataAddr^(0+256)+1)
 11105                           
 11106                           ;EPROMlib.c: 20:             break;
 11107  137C  2B9D               	goto	l5963
 11108  137D                     l1358:	
 11109                           ;EPROMlib.c: 22:         case 103:
 11110                           
 11111                           
 11112                           ;EPROMlib.c: 23:             dataAddr = 0x700F;
 11113  137D  300F               	movlw	15
 11114  137E  00C2               	movwf	operADDR@dataAddr^(0+256)
 11115  137F  3070               	movlw	112
 11116  1380  00C3               	movwf	(operADDR@dataAddr^(0+256)+1)
 11117                           
 11118                           ;EPROMlib.c: 24:             break;
 11119  1381  2B9D               	goto	l5963
 11120  1382                     l1359:	
 11121                           ;EPROMlib.c: 26:         default:
 11122                           
 11123                           
 11124                           ;EPROMlib.c: 27:             dataAddr = 0xF0FF;
 11125  1382  30FF               	movlw	255
 11126  1383  00C2               	movwf	operADDR@dataAddr^(0+256)
 11127  1384  30F0               	movlw	240
 11128  1385  00C3               	movwf	(operADDR@dataAddr^(0+256)+1)
 11129                           
 11130                           ;EPROMlib.c: 28:             break;
 11131  1386  2B9D               	goto	l5963
 11132  1387                     l5961:
 11133  1387  0841               	movf	operADDR@operation^(0+256),w
 11134  1388  00BF               	movwf	??_operADDR^(0+256)
 11135  1389  01C0               	clrf	(??_operADDR^(0+256)+1)
 11136                           
 11137                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11138                           ; Switch size 1, requested type "simple"
 11139                           ; Number of cases is 1, Range of values is 0 to 0
 11140                           ; switch strategies available:
 11141                           ; Name         Instructions Cycles
 11142                           ; simple_byte            4     3 (average)
 11143                           ; direct_byte            8     6 (fixed)
 11144                           ; jumptable            260     6 (fixed)
 11145                           ;	Chosen strategy is simple_byte
 11146  138A  0840               	movf	(??_operADDR+1)^(0+256),w
 11147  138B  3A00               	xorlw	0	; case 0
 11148  138C  1903               	skipnz
 11149  138D  2B8F               	goto	l6987
 11150  138E  2B82               	goto	l1359
 11151  138F                     l6987:
 11152                           
 11153                           ; Switch size 1, requested type "simple"
 11154                           ; Number of cases is 4, Range of values is 100 to 103
 11155                           ; switch strategies available:
 11156                           ; Name         Instructions Cycles
 11157                           ; simple_byte           13     7 (average)
 11158                           ; direct_byte           17     9 (fixed)
 11159                           ; jumptable            263     9 (fixed)
 11160                           ;	Chosen strategy is simple_byte
 11161  138F  083F               	movf	??_operADDR^(0+256),w
 11162  1390  3A64               	xorlw	100	; case 100
 11163  1391  1903               	skipnz
 11164  1392  2B6E               	goto	l1354
 11165  1393  3A01               	xorlw	1	; case 101
 11166  1394  1903               	skipnz
 11167  1395  2B73               	goto	l1356
 11168  1396  3A03               	xorlw	3	; case 102
 11169  1397  1903               	skipnz
 11170  1398  2B78               	goto	l1357
 11171  1399  3A01               	xorlw	1	; case 103
 11172  139A  1903               	skipnz
 11173  139B  2B7D               	goto	l1358
 11174  139C  2B82               	goto	l1359
 11175  139D                     l5963:
 11176                           
 11177                           ;EPROMlib.c: 31:     return dataAddr;
 11178  139D  0843               	movf	(operADDR@dataAddr+1)^(0+256),w
 11179  139E  00BE               	movwf	(?_operADDR+1)^(0+256)
 11180  139F  0842               	movf	operADDR@dataAddr^(0+256),w
 11181  13A0  00BD               	movwf	?_operADDR^(0+256)
 11182  13A1                     l1360:
 11183  13A1  0008               	return
 11184  13A2                     __end_of_operADDR:
 11185                           
 11186                           	psect	text3
 11187  09C4                     __ptext3:	
 11188 ;; *************** function _parseEPROMInitialization *****************
 11189 ;; Defined at:
 11190 ;;		line 71 in file "EPROMlib.c"
 11191 ;; Parameters:    Size  Location     Type
 11192 ;;  magic_word      1    wreg     PTR unsigned char 
 11193 ;;		 -> magic_word(1), 
 11194 ;;  NREG            1    2[BANK2 ] PTR unsigned char 
 11195 ;;		 -> NREG(1), 
 11196 ;;  NR              1    3[BANK2 ] PTR unsigned char 
 11197 ;;		 -> NR(1), 
 11198 ;;  WI              1    4[BANK2 ] PTR unsigned char 
 11199 ;;		 -> WI(1), 
 11200 ;;  RI              1    5[BANK2 ] PTR unsigned char 
 11201 ;;		 -> RI(1), 
 11202 ;;  PMON            1    6[BANK2 ] PTR unsigned char 
 11203 ;;		 -> PMON(1), 
 11204 ;;  TALA            1    7[BANK2 ] PTR unsigned char 
 11205 ;;		 -> TALA(1), 
 11206 ;;  ALAT            1    8[BANK2 ] PTR unsigned char 
 11207 ;;		 -> ALAT(1), 
 11208 ;;  ALAL            1    9[BANK2 ] PTR unsigned char 
 11209 ;;		 -> ALAL(1), 
 11210 ;;  ALAF            1   10[BANK2 ] PTR unsigned char 
 11211 ;;		 -> ALAF(1), 
 11212 ;;  CLKH            1   11[BANK2 ] PTR unsigned char 
 11213 ;;		 -> CLKH(1), 
 11214 ;;  CLKM            1   12[BANK2 ] PTR unsigned char 
 11215 ;;		 -> CLKM(1), 
 11216 ;;  checksum        1   13[BANK2 ] PTR unsigned char 
 11217 ;;		 -> checksum(1), 
 11218 ;; Auto vars:     Size  Location     Type
 11219 ;;  magic_word      1   15[BANK2 ] PTR unsigned char 
 11220 ;;		 -> magic_word(1), 
 11221 ;; Return value:  Size  Location     Type
 11222 ;;                  1    wreg      unsigned char 
 11223 ;; Registers used:
 11224 ;;		wreg, fsr1l, fsr1h, status,2, pclath, cstack
 11225 ;; Tracked objects:
 11226 ;;		On entry : 0/0
 11227 ;;		On exit  : 0/0
 11228 ;;		Unchanged: 0/0
 11229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11230 ;;      Params:         0       0       0      12       0       0       0       0       0       0       0       0       
      +0       0
 11231 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 11232 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 11233 ;;      Totals:         0       0       0      14       0       0       0       0       0       0       0       0       
      +0       0
 11234 ;;Total ram usage:       14 bytes
 11235 ;; Hardware stack levels used: 1
 11236 ;; Hardware stack levels required when called: 14
 11237 ;; This function calls:
 11238 ;;		_DATAEE_ReadByte
 11239 ;; This function is called by:
 11240 ;;		_main
 11241 ;; This function uses a non-reentrant model
 11242 ;;
 11243                           
 11244                           
 11245                           ;psect for function _parseEPROMInitialization
 11246  09C4                     _parseEPROMInitialization:
 11247                           
 11248                           ;incstack = 0
 11249                           ; Regs used in _parseEPROMInitialization: [wreg+fsr1l+fsr1h+status,2+pclath+cstack]
 11250                           ;parseEPROMInitialization@magic_word stored from wreg
 11251  09C4  0022               	movlb	2	; select bank2
 11252  09C5  00CC               	movwf	parseEPROMInitialization@magic_word^(0+256)
 11253  09C6                     l6181:
 11254                           
 11255                           ;EPROMlib.c: 72:     *magic_word = DATAEE_ReadByte(0x7099);
 11256  09C6  3099               	movlw	153
 11257  09C7  00BD               	movwf	DATAEE_ReadByte@bAdd^(0+256)
 11258  09C8  3070               	movlw	112
 11259  09C9  00BE               	movwf	(DATAEE_ReadByte@bAdd^(0+256)+1)
 11260  09CA  3191  2111  3189   	fcall	_DATAEE_ReadByte
 11261  09CD  0022               	movlb	2	; select bank2
 11262  09CE  00CB               	movwf	??_parseEPROMInitialization^(0+256)
 11263  09CF  084C               	movf	parseEPROMInitialization@magic_word^(0+256),w
 11264  09D0  0086               	movwf	6
 11265  09D1  3001               	movlw	1	; select bank2/3
 11266  09D2  0087               	movwf	7
 11267  09D3  084B               	movf	??_parseEPROMInitialization^(0+256),w
 11268  09D4  0081               	movwf	1
 11269                           
 11270                           ;EPROMlib.c: 73:     *NREG = DATAEE_ReadByte(0x7099 + 1);
 11271  09D5  309A               	movlw	154
 11272  09D6  00BD               	movwf	DATAEE_ReadByte@bAdd^(0+256)
 11273  09D7  3070               	movlw	112
 11274  09D8  00BE               	movwf	(DATAEE_ReadByte@bAdd^(0+256)+1)
 11275  09D9  3191  2111  3189   	fcall	_DATAEE_ReadByte
 11276  09DC  0022               	movlb	2	; select bank2
 11277  09DD  00CB               	movwf	??_parseEPROMInitialization^(0+256)
 11278  09DE  083F               	movf	parseEPROMInitialization@NREG^(0+256),w
 11279  09DF  0086               	movwf	6
 11280  09E0  3001               	movlw	1	; select bank2/3
 11281  09E1  0087               	movwf	7
 11282  09E2  084B               	movf	??_parseEPROMInitialization^(0+256),w
 11283  09E3  0081               	movwf	1
 11284                           
 11285                           ;EPROMlib.c: 74:     *NR = DATAEE_ReadByte(0x7099 + 2);
 11286  09E4  309B               	movlw	155
 11287  09E5  00BD               	movwf	DATAEE_ReadByte@bAdd^(0+256)
 11288  09E6  3070               	movlw	112
 11289  09E7  00BE               	movwf	(DATAEE_ReadByte@bAdd^(0+256)+1)
 11290  09E8  3191  2111  3189   	fcall	_DATAEE_ReadByte
 11291  09EB  0022               	movlb	2	; select bank2
 11292  09EC  00CB               	movwf	??_parseEPROMInitialization^(0+256)
 11293  09ED  0840               	movf	parseEPROMInitialization@NR^(0+256),w
 11294  09EE  0086               	movwf	6
 11295  09EF  3001               	movlw	1	; select bank2/3
 11296  09F0  0087               	movwf	7
 11297  09F1  084B               	movf	??_parseEPROMInitialization^(0+256),w
 11298  09F2  0081               	movwf	1
 11299                           
 11300                           ;EPROMlib.c: 75:     *WI = DATAEE_ReadByte(0x7099 + 3);
 11301  09F3  309C               	movlw	156
 11302  09F4  00BD               	movwf	DATAEE_ReadByte@bAdd^(0+256)
 11303  09F5  3070               	movlw	112
 11304  09F6  00BE               	movwf	(DATAEE_ReadByte@bAdd^(0+256)+1)
 11305  09F7  3191  2111  3189   	fcall	_DATAEE_ReadByte
 11306  09FA  0022               	movlb	2	; select bank2
 11307  09FB  00CB               	movwf	??_parseEPROMInitialization^(0+256)
 11308  09FC  0841               	movf	parseEPROMInitialization@WI^(0+256),w
 11309  09FD  0086               	movwf	6
 11310  09FE  3001               	movlw	1	; select bank2/3
 11311  09FF  0087               	movwf	7
 11312  0A00  084B               	movf	??_parseEPROMInitialization^(0+256),w
 11313  0A01  0081               	movwf	1
 11314                           
 11315                           ;EPROMlib.c: 76:     *RI = DATAEE_ReadByte(0x7099 + 4);
 11316  0A02  309D               	movlw	157
 11317  0A03  00BD               	movwf	DATAEE_ReadByte@bAdd^(0+256)
 11318  0A04  3070               	movlw	112
 11319  0A05  00BE               	movwf	(DATAEE_ReadByte@bAdd^(0+256)+1)
 11320  0A06  3191  2111  3189   	fcall	_DATAEE_ReadByte
 11321  0A09  0022               	movlb	2	; select bank2
 11322  0A0A  00CB               	movwf	??_parseEPROMInitialization^(0+256)
 11323  0A0B  0842               	movf	parseEPROMInitialization@RI^(0+256),w
 11324  0A0C  0086               	movwf	6
 11325  0A0D  3001               	movlw	1	; select bank2/3
 11326  0A0E  0087               	movwf	7
 11327  0A0F  084B               	movf	??_parseEPROMInitialization^(0+256),w
 11328  0A10  0081               	movwf	1
 11329                           
 11330                           ;EPROMlib.c: 77:     *PMON = DATAEE_ReadByte(0x7099 + 5);
 11331  0A11  309E               	movlw	158
 11332  0A12  00BD               	movwf	DATAEE_ReadByte@bAdd^(0+256)
 11333  0A13  3070               	movlw	112
 11334  0A14  00BE               	movwf	(DATAEE_ReadByte@bAdd^(0+256)+1)
 11335  0A15  3191  2111  3189   	fcall	_DATAEE_ReadByte
 11336  0A18  0022               	movlb	2	; select bank2
 11337  0A19  00CB               	movwf	??_parseEPROMInitialization^(0+256)
 11338  0A1A  0843               	movf	parseEPROMInitialization@PMON^(0+256),w
 11339  0A1B  0086               	movwf	6
 11340  0A1C  3001               	movlw	1	; select bank2/3
 11341  0A1D  0087               	movwf	7
 11342  0A1E  084B               	movf	??_parseEPROMInitialization^(0+256),w
 11343  0A1F  0081               	movwf	1
 11344                           
 11345                           ;EPROMlib.c: 78:     *TALA = DATAEE_ReadByte(0x7099 + 6);
 11346  0A20  309F               	movlw	159
 11347  0A21  00BD               	movwf	DATAEE_ReadByte@bAdd^(0+256)
 11348  0A22  3070               	movlw	112
 11349  0A23  00BE               	movwf	(DATAEE_ReadByte@bAdd^(0+256)+1)
 11350  0A24  3191  2111  3189   	fcall	_DATAEE_ReadByte
 11351  0A27  0022               	movlb	2	; select bank2
 11352  0A28  00CB               	movwf	??_parseEPROMInitialization^(0+256)
 11353  0A29  0844               	movf	parseEPROMInitialization@TALA^(0+256),w
 11354  0A2A  0086               	movwf	6
 11355  0A2B  3001               	movlw	1	; select bank2/3
 11356  0A2C  0087               	movwf	7
 11357  0A2D  084B               	movf	??_parseEPROMInitialization^(0+256),w
 11358  0A2E  0081               	movwf	1
 11359                           
 11360                           ;EPROMlib.c: 79:     *ALAT = DATAEE_ReadByte(0x7099 + 7);
 11361  0A2F  30A0               	movlw	160
 11362  0A30  00BD               	movwf	DATAEE_ReadByte@bAdd^(0+256)
 11363  0A31  3070               	movlw	112
 11364  0A32  00BE               	movwf	(DATAEE_ReadByte@bAdd^(0+256)+1)
 11365  0A33  3191  2111  3189   	fcall	_DATAEE_ReadByte
 11366  0A36  0022               	movlb	2	; select bank2
 11367  0A37  00CB               	movwf	??_parseEPROMInitialization^(0+256)
 11368  0A38  0845               	movf	parseEPROMInitialization@ALAT^(0+256),w
 11369  0A39  0086               	movwf	6
 11370  0A3A  3001               	movlw	1	; select bank2/3
 11371  0A3B  0087               	movwf	7
 11372  0A3C  084B               	movf	??_parseEPROMInitialization^(0+256),w
 11373  0A3D  0081               	movwf	1
 11374                           
 11375                           ;EPROMlib.c: 80:     *ALAL = DATAEE_ReadByte(0x7099 + 8);
 11376  0A3E  30A1               	movlw	161
 11377  0A3F  00BD               	movwf	DATAEE_ReadByte@bAdd^(0+256)
 11378  0A40  3070               	movlw	112
 11379  0A41  00BE               	movwf	(DATAEE_ReadByte@bAdd^(0+256)+1)
 11380  0A42  3191  2111  3189   	fcall	_DATAEE_ReadByte
 11381  0A45  0022               	movlb	2	; select bank2
 11382  0A46  00CB               	movwf	??_parseEPROMInitialization^(0+256)
 11383  0A47  0846               	movf	parseEPROMInitialization@ALAL^(0+256),w
 11384  0A48  0086               	movwf	6
 11385  0A49  3001               	movlw	1	; select bank2/3
 11386  0A4A  0087               	movwf	7
 11387  0A4B  084B               	movf	??_parseEPROMInitialization^(0+256),w
 11388  0A4C  0081               	movwf	1
 11389                           
 11390                           ;EPROMlib.c: 81:     *ALAF = DATAEE_ReadByte(0x7099 + 9);
 11391  0A4D  30A2               	movlw	162
 11392  0A4E  00BD               	movwf	DATAEE_ReadByte@bAdd^(0+256)
 11393  0A4F  3070               	movlw	112
 11394  0A50  00BE               	movwf	(DATAEE_ReadByte@bAdd^(0+256)+1)
 11395  0A51  3191  2111  3189   	fcall	_DATAEE_ReadByte
 11396  0A54  0022               	movlb	2	; select bank2
 11397  0A55  00CB               	movwf	??_parseEPROMInitialization^(0+256)
 11398  0A56  0847               	movf	parseEPROMInitialization@ALAF^(0+256),w
 11399  0A57  0086               	movwf	6
 11400  0A58  3001               	movlw	1	; select bank2/3
 11401  0A59  0087               	movwf	7
 11402  0A5A  084B               	movf	??_parseEPROMInitialization^(0+256),w
 11403  0A5B  0081               	movwf	1
 11404                           
 11405                           ;EPROMlib.c: 82:     *CLKH = DATAEE_ReadByte(0x7099 + 10);
 11406  0A5C  30A3               	movlw	163
 11407  0A5D  00BD               	movwf	DATAEE_ReadByte@bAdd^(0+256)
 11408  0A5E  3070               	movlw	112
 11409  0A5F  00BE               	movwf	(DATAEE_ReadByte@bAdd^(0+256)+1)
 11410  0A60  3191  2111  3189   	fcall	_DATAEE_ReadByte
 11411  0A63  0022               	movlb	2	; select bank2
 11412  0A64  00CB               	movwf	??_parseEPROMInitialization^(0+256)
 11413  0A65  0848               	movf	parseEPROMInitialization@CLKH^(0+256),w
 11414  0A66  0086               	movwf	6
 11415  0A67  3001               	movlw	1	; select bank2/3
 11416  0A68  0087               	movwf	7
 11417  0A69  084B               	movf	??_parseEPROMInitialization^(0+256),w
 11418  0A6A  0081               	movwf	1
 11419                           
 11420                           ;EPROMlib.c: 83:     *CLKM = DATAEE_ReadByte(0x7099 + 11);
 11421  0A6B  30A4               	movlw	164
 11422  0A6C  00BD               	movwf	DATAEE_ReadByte@bAdd^(0+256)
 11423  0A6D  3070               	movlw	112
 11424  0A6E  00BE               	movwf	(DATAEE_ReadByte@bAdd^(0+256)+1)
 11425  0A6F  3191  2111  3189   	fcall	_DATAEE_ReadByte
 11426  0A72  0022               	movlb	2	; select bank2
 11427  0A73  00CB               	movwf	??_parseEPROMInitialization^(0+256)
 11428  0A74  0849               	movf	parseEPROMInitialization@CLKM^(0+256),w
 11429  0A75  0086               	movwf	6
 11430  0A76  3001               	movlw	1	; select bank2/3
 11431  0A77  0087               	movwf	7
 11432  0A78  084B               	movf	??_parseEPROMInitialization^(0+256),w
 11433  0A79  0081               	movwf	1
 11434                           
 11435                           ;EPROMlib.c: 84:     *checksum = DATAEE_ReadByte(0x7099 + 12);
 11436  0A7A  30A5               	movlw	165
 11437  0A7B  00BD               	movwf	DATAEE_ReadByte@bAdd^(0+256)
 11438  0A7C  3070               	movlw	112
 11439  0A7D  00BE               	movwf	(DATAEE_ReadByte@bAdd^(0+256)+1)
 11440  0A7E  3191  2111  3189   	fcall	_DATAEE_ReadByte
 11441  0A81  0022               	movlb	2	; select bank2
 11442  0A82  00CB               	movwf	??_parseEPROMInitialization^(0+256)
 11443  0A83  084A               	movf	parseEPROMInitialization@checksum^(0+256),w
 11444  0A84  0086               	movwf	6
 11445  0A85  3001               	movlw	1	; select bank2/3
 11446  0A86  0087               	movwf	7
 11447  0A87  084B               	movf	??_parseEPROMInitialization^(0+256),w
 11448  0A88  0081               	movwf	1
 11449  0A89                     l1373:
 11450  0A89  0008               	return
 11451  0A8A                     __end_of_parseEPROMInitialization:
 11452                           
 11453                           	psect	text4
 11454  1111                     __ptext4:	
 11455 ;; *************** function _DATAEE_ReadByte *****************
 11456 ;; Defined at:
 11457 ;;		line 202 in file "mcc_generated_files/memory.c"
 11458 ;; Parameters:    Size  Location     Type
 11459 ;;  bAdd            2    0[BANK2 ] unsigned short 
 11460 ;; Auto vars:     Size  Location     Type
 11461 ;;		None
 11462 ;; Return value:  Size  Location     Type
 11463 ;;                  1    wreg      unsigned char 
 11464 ;; Registers used:
 11465 ;;		wreg, status,2
 11466 ;; Tracked objects:
 11467 ;;		On entry : 0/0
 11468 ;;		On exit  : 0/0
 11469 ;;		Unchanged: 0/0
 11470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11471 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 11472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11474 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 11475 ;;Total ram usage:        2 bytes
 11476 ;; Hardware stack levels used: 1
 11477 ;; Hardware stack levels required when called: 13
 11478 ;; This function calls:
 11479 ;;		Nothing
 11480 ;; This function is called by:
 11481 ;;		_parseEPROMInitialization
 11482 ;;		_parseEPROMReading
 11483 ;; This function uses a non-reentrant model
 11484 ;;
 11485                           
 11486                           
 11487                           ;psect for function _DATAEE_ReadByte
 11488  1111                     _DATAEE_ReadByte:
 11489  1111                     l5919:	
 11490                           ;incstack = 0
 11491                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 11492                           
 11493                           
 11494                           ;mcc_generated_files/memory.c: 202: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 203: {;mcc_generated_files/memory.c: 204:     NVMADRH = ((bAdd >> 8) & 
      +                          0xFF);
 11495  1111  0022               	movlb	2	; select bank2
 11496  1112  083E               	movf	(DATAEE_ReadByte@bAdd+1)^(0+256),w
 11497  1113  0030               	movlb	16	; select bank16
 11498  1114  009B               	movwf	27	;volatile
 11499  1115                     l5921:
 11500                           
 11501                           ;mcc_generated_files/memory.c: 205:     NVMADRL = (bAdd & 0xFF);
 11502  1115  0022               	movlb	2	; select bank2
 11503  1116  083D               	movf	DATAEE_ReadByte@bAdd^(0+256),w
 11504  1117  0030               	movlb	16	; select bank16
 11505  1118  009A               	movwf	26	;volatile
 11506  1119                     l5923:
 11507                           
 11508                           ;mcc_generated_files/memory.c: 206:     NVMCON1bits.NVMREGS = 1;
 11509  1119  171E               	bsf	30,6	;volsfr
 11510  111A                     l5925:
 11511                           
 11512                           ;mcc_generated_files/memory.c: 207:     NVMCON1bits.RD = 1;
 11513  111A  141E               	bsf	30,0	;volsfr
 11514  111B                     l5927:
 11515                           
 11516                           ;mcc_generated_files/memory.c: 208:     __nop();
 11517  111B  0000               	nop
 11518  111C                     l5929:
 11519                           
 11520                           ;mcc_generated_files/memory.c: 209:     __nop();
 11521  111C  0000               	nop
 11522  111D                     l5931:
 11523                           
 11524                           ;mcc_generated_files/memory.c: 211:     return (NVMDATL);
 11525  111D  0030               	movlb	16	; select bank16
 11526  111E  081C               	movf	28,w	;volatile
 11527  111F                     l453:
 11528  111F  0008               	return
 11529  1120                     __end_of_DATAEE_ReadByte:
 11530                           
 11531                           	psect	text5
 11532  130F                     __ptext5:	
 11533 ;; *************** function _initializeREG *****************
 11534 ;; Defined at:
 11535 ;;		line 109 in file "main.c"
 11536 ;; Parameters:    Size  Location     Type
 11537 ;;		None
 11538 ;; Auto vars:     Size  Location     Type
 11539 ;;		None
 11540 ;; Return value:  Size  Location     Type
 11541 ;;                  1    wreg      void 
 11542 ;; Registers used:
 11543 ;;		wreg, status,2, status,0, pclath, cstack
 11544 ;; Tracked objects:
 11545 ;;		On entry : 0/0
 11546 ;;		On exit  : 0/0
 11547 ;;		Unchanged: 0/0
 11548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11551 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 11552 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 11553 ;;Total ram usage:        1 bytes
 11554 ;; Hardware stack levels used: 1
 11555 ;; Hardware stack levels required when called: 14
 11556 ;; This function calls:
 11557 ;;		_DATAEE_WriteByte
 11558 ;; This function is called by:
 11559 ;;		_main
 11560 ;; This function uses a non-reentrant model
 11561 ;;
 11562                           
 11563                           
 11564                           ;psect for function _initializeREG
 11565  130F                     _initializeREG:
 11566  130F                     l6117:	
 11567                           ;incstack = 0
 11568                           ; Regs used in _initializeREG: [wreg+status,2+status,0+pclath+cstack]
 11569                           
 11570                           
 11571                           ;main.c: 111:     DATAEE_WriteByte(0x7053,(uint8_t) 255);
 11572  130F  3053               	movlw	83
 11573  1310  0022               	movlb	2	; select bank2
 11574  1311  00BD               	movwf	DATAEE_WriteByte@bAdd^(0+256)
 11575  1312  3070               	movlw	112
 11576  1313  00BE               	movwf	(DATAEE_WriteByte@bAdd^(0+256)+1)
 11577  1314  30FF               	movlw	255
 11578  1315  00C1               	movwf	??_initializeREG^(0+256)
 11579  1316  0841               	movf	??_initializeREG^(0+256),w
 11580  1317  00BF               	movwf	DATAEE_WriteByte@bData^(0+256)
 11581  1318  3192  229C  3193   	fcall	_DATAEE_WriteByte
 11582                           
 11583                           ;main.c: 112:     DATAEE_WriteByte(0x7054,(uint8_t) 0);
 11584  131B  3054               	movlw	84
 11585  131C  0022               	movlb	2	; select bank2
 11586  131D  00BD               	movwf	DATAEE_WriteByte@bAdd^(0+256)
 11587  131E  3070               	movlw	112
 11588  131F  00BE               	movwf	(DATAEE_WriteByte@bAdd^(0+256)+1)
 11589  1320  01BF               	clrf	DATAEE_WriteByte@bData^(0+256)
 11590  1321  3192  229C  3193   	fcall	_DATAEE_WriteByte
 11591                           
 11592                           ;main.c: 113:     DATAEE_WriteByte(0x7055 + 2,(uint8_t) 3);
 11593  1324  3057               	movlw	87
 11594  1325  0022               	movlb	2	; select bank2
 11595  1326  00BD               	movwf	DATAEE_WriteByte@bAdd^(0+256)
 11596  1327  3070               	movlw	112
 11597  1328  00BE               	movwf	(DATAEE_WriteByte@bAdd^(0+256)+1)
 11598  1329  3003               	movlw	3
 11599  132A  00C1               	movwf	??_initializeREG^(0+256)
 11600  132B  0841               	movf	??_initializeREG^(0+256),w
 11601  132C  00BF               	movwf	DATAEE_WriteByte@bData^(0+256)
 11602  132D  3192  229C  3193   	fcall	_DATAEE_WriteByte
 11603                           
 11604                           ;main.c: 114:     DATAEE_WriteByte(0x7056 + 3,(uint8_t) 0);
 11605  1330  3059               	movlw	89
 11606  1331  0022               	movlb	2	; select bank2
 11607  1332  00BD               	movwf	DATAEE_WriteByte@bAdd^(0+256)
 11608  1333  3070               	movlw	112
 11609  1334  00BE               	movwf	(DATAEE_WriteByte@bAdd^(0+256)+1)
 11610  1335  01BF               	clrf	DATAEE_WriteByte@bData^(0+256)
 11611  1336  3192  229C  3193   	fcall	_DATAEE_WriteByte
 11612  1339                     l1172:
 11613  1339  0008               	return
 11614  133A                     __end_of_initializeREG:
 11615                           
 11616                           	psect	text6
 11617  16D0                     __ptext6:	
 11618 ;; *************** function _initializeEPROM *****************
 11619 ;; Defined at:
 11620 ;;		line 34 in file "EPROMlib.c"
 11621 ;; Parameters:    Size  Location     Type
 11622 ;;		None
 11623 ;; Auto vars:     Size  Location     Type
 11624 ;;		None
 11625 ;; Return value:  Size  Location     Type
 11626 ;;                  1    wreg      void 
 11627 ;; Registers used:
 11628 ;;		wreg, status,2, status,0, pclath, cstack
 11629 ;; Tracked objects:
 11630 ;;		On entry : 0/0
 11631 ;;		On exit  : 0/0
 11632 ;;		Unchanged: 0/0
 11633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11636 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 11637 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 11638 ;;Total ram usage:        1 bytes
 11639 ;; Hardware stack levels used: 1
 11640 ;; Hardware stack levels required when called: 14
 11641 ;; This function calls:
 11642 ;;		_DATAEE_WriteByte
 11643 ;; This function is called by:
 11644 ;;		_main
 11645 ;; This function uses a non-reentrant model
 11646 ;;
 11647                           
 11648                           
 11649                           ;psect for function _initializeEPROM
 11650  16D0                     _initializeEPROM:
 11651  16D0                     l6167:	
 11652                           ;incstack = 0
 11653                           ; Regs used in _initializeEPROM: [wreg+status,2+status,0+pclath+cstack]
 11654                           
 11655                           
 11656                           ;EPROMlib.c: 35:     DATAEE_WriteByte(0x7099,(uint8_t) 0xAA);
 11657  16D0  3099               	movlw	153
 11658  16D1  0022               	movlb	2	; select bank2
 11659  16D2  00BD               	movwf	DATAEE_WriteByte@bAdd^(0+256)
 11660  16D3  3070               	movlw	112
 11661  16D4  00BE               	movwf	(DATAEE_WriteByte@bAdd^(0+256)+1)
 11662  16D5  30AA               	movlw	170
 11663  16D6  00C1               	movwf	??_initializeEPROM^(0+256)
 11664  16D7  0841               	movf	??_initializeEPROM^(0+256),w
 11665  16D8  00BF               	movwf	DATAEE_WriteByte@bData^(0+256)
 11666  16D9  3192  229C  3196   	fcall	_DATAEE_WriteByte
 11667                           
 11668                           ;EPROMlib.c: 36:     DATAEE_WriteByte(0x7099 + 1,(uint8_t) 0xA);
 11669  16DC  309A               	movlw	154
 11670  16DD  0022               	movlb	2	; select bank2
 11671  16DE  00BD               	movwf	DATAEE_WriteByte@bAdd^(0+256)
 11672  16DF  3070               	movlw	112
 11673  16E0  00BE               	movwf	(DATAEE_WriteByte@bAdd^(0+256)+1)
 11674  16E1  300A               	movlw	10
 11675  16E2  00C1               	movwf	??_initializeEPROM^(0+256)
 11676  16E3  0841               	movf	??_initializeEPROM^(0+256),w
 11677  16E4  00BF               	movwf	DATAEE_WriteByte@bData^(0+256)
 11678  16E5  3192  229C  3196   	fcall	_DATAEE_WriteByte
 11679                           
 11680                           ;EPROMlib.c: 37:     DATAEE_WriteByte(0x7099 + 2,(uint8_t) 0x0);
 11681  16E8  309B               	movlw	155
 11682  16E9  0022               	movlb	2	; select bank2
 11683  16EA  00BD               	movwf	DATAEE_WriteByte@bAdd^(0+256)
 11684  16EB  3070               	movlw	112
 11685  16EC  00BE               	movwf	(DATAEE_WriteByte@bAdd^(0+256)+1)
 11686  16ED  01BF               	clrf	DATAEE_WriteByte@bData^(0+256)
 11687  16EE  3192  229C  3196   	fcall	_DATAEE_WriteByte
 11688                           
 11689                           ;EPROMlib.c: 38:     DATAEE_WriteByte(0x7099 + 3,(uint8_t) 0x0);
 11690  16F1  309C               	movlw	156
 11691  16F2  0022               	movlb	2	; select bank2
 11692  16F3  00BD               	movwf	DATAEE_WriteByte@bAdd^(0+256)
 11693  16F4  3070               	movlw	112
 11694  16F5  00BE               	movwf	(DATAEE_WriteByte@bAdd^(0+256)+1)
 11695  16F6  01BF               	clrf	DATAEE_WriteByte@bData^(0+256)
 11696  16F7  3192  229C  3196   	fcall	_DATAEE_WriteByte
 11697                           
 11698                           ;EPROMlib.c: 39:     DATAEE_WriteByte(0x7099 + 4,(uint8_t) 0x0);
 11699  16FA  309D               	movlw	157
 11700  16FB  0022               	movlb	2	; select bank2
 11701  16FC  00BD               	movwf	DATAEE_WriteByte@bAdd^(0+256)
 11702  16FD  3070               	movlw	112
 11703  16FE  00BE               	movwf	(DATAEE_WriteByte@bAdd^(0+256)+1)
 11704  16FF  01BF               	clrf	DATAEE_WriteByte@bData^(0+256)
 11705  1700  3192  229C  3196   	fcall	_DATAEE_WriteByte
 11706                           
 11707                           ;EPROMlib.c: 40:     DATAEE_WriteByte(0x7099 + 5,(uint8_t) 0x5);
 11708  1703  309E               	movlw	158
 11709  1704  0022               	movlb	2	; select bank2
 11710  1705  00BD               	movwf	DATAEE_WriteByte@bAdd^(0+256)
 11711  1706  3070               	movlw	112
 11712  1707  00BE               	movwf	(DATAEE_WriteByte@bAdd^(0+256)+1)
 11713  1708  3005               	movlw	5
 11714  1709  00C1               	movwf	??_initializeEPROM^(0+256)
 11715  170A  0841               	movf	??_initializeEPROM^(0+256),w
 11716  170B  00BF               	movwf	DATAEE_WriteByte@bData^(0+256)
 11717  170C  3192  229C  3196   	fcall	_DATAEE_WriteByte
 11718                           
 11719                           ;EPROMlib.c: 41:     DATAEE_WriteByte(0x7099 + 6,(uint8_t) 0x3);
 11720  170F  309F               	movlw	159
 11721  1710  0022               	movlb	2	; select bank2
 11722  1711  00BD               	movwf	DATAEE_WriteByte@bAdd^(0+256)
 11723  1712  3070               	movlw	112
 11724  1713  00BE               	movwf	(DATAEE_WriteByte@bAdd^(0+256)+1)
 11725  1714  3003               	movlw	3
 11726  1715  00C1               	movwf	??_initializeEPROM^(0+256)
 11727  1716  0841               	movf	??_initializeEPROM^(0+256),w
 11728  1717  00BF               	movwf	DATAEE_WriteByte@bData^(0+256)
 11729  1718  3192  229C  3196   	fcall	_DATAEE_WriteByte
 11730                           
 11731                           ;EPROMlib.c: 42:     DATAEE_WriteByte(0x7099 + 7,(uint8_t) 0x19);
 11732  171B  30A0               	movlw	160
 11733  171C  0022               	movlb	2	; select bank2
 11734  171D  00BD               	movwf	DATAEE_WriteByte@bAdd^(0+256)
 11735  171E  3070               	movlw	112
 11736  171F  00BE               	movwf	(DATAEE_WriteByte@bAdd^(0+256)+1)
 11737  1720  3019               	movlw	25
 11738  1721  00C1               	movwf	??_initializeEPROM^(0+256)
 11739  1722  0841               	movf	??_initializeEPROM^(0+256),w
 11740  1723  00BF               	movwf	DATAEE_WriteByte@bData^(0+256)
 11741  1724  3192  229C  3196   	fcall	_DATAEE_WriteByte
 11742                           
 11743                           ;EPROMlib.c: 43:     DATAEE_WriteByte(0x7099 + 8,(uint8_t) 0x2);
 11744  1727  30A1               	movlw	161
 11745  1728  0022               	movlb	2	; select bank2
 11746  1729  00BD               	movwf	DATAEE_WriteByte@bAdd^(0+256)
 11747  172A  3070               	movlw	112
 11748  172B  00BE               	movwf	(DATAEE_WriteByte@bAdd^(0+256)+1)
 11749  172C  3002               	movlw	2
 11750  172D  00C1               	movwf	??_initializeEPROM^(0+256)
 11751  172E  0841               	movf	??_initializeEPROM^(0+256),w
 11752  172F  00BF               	movwf	DATAEE_WriteByte@bData^(0+256)
 11753  1730  3192  229C  3196   	fcall	_DATAEE_WriteByte
 11754                           
 11755                           ;EPROMlib.c: 44:     DATAEE_WriteByte(0x7099 + 9,(uint8_t) 0x0);
 11756  1733  30A2               	movlw	162
 11757  1734  0022               	movlb	2	; select bank2
 11758  1735  00BD               	movwf	DATAEE_WriteByte@bAdd^(0+256)
 11759  1736  3070               	movlw	112
 11760  1737  00BE               	movwf	(DATAEE_WriteByte@bAdd^(0+256)+1)
 11761  1738  01BF               	clrf	DATAEE_WriteByte@bData^(0+256)
 11762  1739  3192  229C  3196   	fcall	_DATAEE_WriteByte
 11763                           
 11764                           ;EPROMlib.c: 45:     DATAEE_WriteByte(0x7099 + 10,(uint8_t) 0xC);
 11765  173C  30A3               	movlw	163
 11766  173D  0022               	movlb	2	; select bank2
 11767  173E  00BD               	movwf	DATAEE_WriteByte@bAdd^(0+256)
 11768  173F  3070               	movlw	112
 11769  1740  00BE               	movwf	(DATAEE_WriteByte@bAdd^(0+256)+1)
 11770  1741  300C               	movlw	12
 11771  1742  00C1               	movwf	??_initializeEPROM^(0+256)
 11772  1743  0841               	movf	??_initializeEPROM^(0+256),w
 11773  1744  00BF               	movwf	DATAEE_WriteByte@bData^(0+256)
 11774  1745  3192  229C  3196   	fcall	_DATAEE_WriteByte
 11775                           
 11776                           ;EPROMlib.c: 46:     DATAEE_WriteByte(0x7099 + 11,(uint8_t) 0x0);
 11777  1748  30A4               	movlw	164
 11778  1749  0022               	movlb	2	; select bank2
 11779  174A  00BD               	movwf	DATAEE_WriteByte@bAdd^(0+256)
 11780  174B  3070               	movlw	112
 11781  174C  00BE               	movwf	(DATAEE_WriteByte@bAdd^(0+256)+1)
 11782  174D  01BF               	clrf	DATAEE_WriteByte@bData^(0+256)
 11783  174E  3192  229C  3196   	fcall	_DATAEE_WriteByte
 11784                           
 11785                           ;EPROMlib.c: 47:     DATAEE_WriteByte(0x7099 + 12,(uint8_t) 0xE3);
 11786  1751  30A5               	movlw	165
 11787  1752  0022               	movlb	2	; select bank2
 11788  1753  00BD               	movwf	DATAEE_WriteByte@bAdd^(0+256)
 11789  1754  3070               	movlw	112
 11790  1755  00BE               	movwf	(DATAEE_WriteByte@bAdd^(0+256)+1)
 11791  1756  30E3               	movlw	227
 11792  1757  00C1               	movwf	??_initializeEPROM^(0+256)
 11793  1758  0841               	movf	??_initializeEPROM^(0+256),w
 11794  1759  00BF               	movwf	DATAEE_WriteByte@bData^(0+256)
 11795  175A  3192  229C  3196   	fcall	_DATAEE_WriteByte
 11796  175D                     l1363:
 11797  175D  0008               	return
 11798  175E                     __end_of_initializeEPROM:
 11799                           
 11800                           	psect	text7
 11801  129C                     __ptext7:	
 11802 ;; *************** function _DATAEE_WriteByte *****************
 11803 ;; Defined at:
 11804 ;;		line 180 in file "mcc_generated_files/memory.c"
 11805 ;; Parameters:    Size  Location     Type
 11806 ;;  bAdd            2    0[BANK2 ] unsigned short 
 11807 ;;  bData           1    2[BANK2 ] unsigned char 
 11808 ;; Auto vars:     Size  Location     Type
 11809 ;;  GIEBitValue     1    3[BANK2 ] unsigned char 
 11810 ;; Return value:  Size  Location     Type
 11811 ;;                  1    wreg      void 
 11812 ;; Registers used:
 11813 ;;		wreg, status,2, status,0
 11814 ;; Tracked objects:
 11815 ;;		On entry : 0/0
 11816 ;;		On exit  : 0/0
 11817 ;;		Unchanged: 0/0
 11818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11819 ;;      Params:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
 11820 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 11821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11822 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
 11823 ;;Total ram usage:        4 bytes
 11824 ;; Hardware stack levels used: 1
 11825 ;; Hardware stack levels required when called: 13
 11826 ;; This function calls:
 11827 ;;		Nothing
 11828 ;; This function is called by:
 11829 ;;		_initializeREG
 11830 ;;		_initializeEPROM
 11831 ;;		_storeEPROMBuild
 11832 ;; This function uses a non-reentrant model
 11833 ;;
 11834                           
 11835                           
 11836                           ;psect for function _DATAEE_WriteByte
 11837  129C                     _DATAEE_WriteByte:
 11838  129C                     l5899:	
 11839                           ;incstack = 0
 11840                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 11841                           
 11842                           
 11843                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
 11844  129C  3000               	movlw	0
 11845  129D  1B8B               	btfsc	11,7	;volatile
 11846  129E  3001               	movlw	1
 11847  129F  0022               	movlb	2	; select bank2
 11848  12A0  00C0               	movwf	DATAEE_WriteByte@GIEBitValue^(0+256)
 11849                           
 11850                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
 11851  12A1  083E               	movf	(DATAEE_WriteByte@bAdd+1)^(0+256),w
 11852  12A2  0030               	movlb	16	; select bank16
 11853  12A3  009B               	movwf	27	;volatile
 11854  12A4                     l5901:
 11855                           
 11856                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
 11857  12A4  0022               	movlb	2	; select bank2
 11858  12A5  083D               	movf	DATAEE_WriteByte@bAdd^(0+256),w
 11859  12A6  0030               	movlb	16	; select bank16
 11860  12A7  009A               	movwf	26	;volatile
 11861  12A8                     l5903:
 11862                           
 11863                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
 11864  12A8  0022               	movlb	2	; select bank2
 11865  12A9  083F               	movf	DATAEE_WriteByte@bData^(0+256),w
 11866  12AA  0030               	movlb	16	; select bank16
 11867  12AB  009C               	movwf	28	;volatile
 11868  12AC                     l5905:
 11869                           
 11870                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
 11871  12AC  171E               	bsf	30,6	;volsfr
 11872  12AD                     l5907:
 11873                           
 11874                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
 11875  12AD  151E               	bsf	30,2	;volsfr
 11876  12AE                     l5909:
 11877                           
 11878                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
 11879  12AE  138B               	bcf	11,7	;volatile
 11880  12AF                     l5911:
 11881                           
 11882                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
 11883  12AF  3055               	movlw	85
 11884  12B0  009F               	movwf	31	;volsfr
 11885  12B1                     l5913:
 11886                           
 11887                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
 11888  12B1  30AA               	movlw	170
 11889  12B2  009F               	movwf	31	;volsfr
 11890  12B3                     l5915:
 11891                           
 11892                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
 11893  12B3  149E               	bsf	30,1	;volsfr
 11894  12B4                     l447:	
 11895                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
 11896                           
 11897                           
 11898                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
 11899  12B4  189E               	btfsc	30,1	;volsfr
 11900  12B5  2AB7               	goto	u5111
 11901  12B6  2AB8               	goto	u5110
 11902  12B7                     u5111:
 11903  12B7  2AB4               	goto	l447
 11904  12B8                     u5110:
 11905  12B8                     l449:
 11906                           
 11907                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
 11908  12B8  111E               	bcf	30,2	;volsfr
 11909  12B9                     l5917:
 11910                           
 11911                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
 11912  12B9  0022               	movlb	2	; select bank2
 11913  12BA  0C40               	rrf	DATAEE_WriteByte@GIEBitValue^(0+256),w
 11914  12BB  1C03               	skipc
 11915  12BC  138B               	bcf	11,7	;volatile
 11916  12BD  1803               	skipnc
 11917  12BE  178B               	bsf	11,7	;volatile
 11918  12BF                     l450:
 11919  12BF  0008               	return
 11920  12C0                     __end_of_DATAEE_WriteByte:
 11921                           
 11922                           	psect	text8
 11923  1087                     __ptext8:	
 11924 ;; *************** function _deactivateAlarm *****************
 11925 ;; Defined at:
 11926 ;;		line 44 in file "alarm.c"
 11927 ;; Parameters:    Size  Location     Type
 11928 ;;		None
 11929 ;; Auto vars:     Size  Location     Type
 11930 ;;		None
 11931 ;; Return value:  Size  Location     Type
 11932 ;;                  1    wreg      void 
 11933 ;; Registers used:
 11934 ;;		wreg, status,2, status,0, pclath, cstack
 11935 ;; Tracked objects:
 11936 ;;		On entry : 0/0
 11937 ;;		On exit  : 0/0
 11938 ;;		Unchanged: 0/0
 11939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11944 ;;Total ram usage:        0 bytes
 11945 ;; Hardware stack levels used: 1
 11946 ;; Hardware stack levels required when called: 16
 11947 ;; This function calls:
 11948 ;;		_deactivatePWM
 11949 ;; This function is called by:
 11950 ;;		_main
 11951 ;; This function uses a non-reentrant model
 11952 ;;
 11953                           
 11954                           
 11955                           ;psect for function _deactivateAlarm
 11956  1087                     _deactivateAlarm:
 11957  1087                     l1339:	
 11958                           ;incstack = 0
 11959 ;; hardware stack exceeded
 11960                           ; Regs used in _deactivateAlarm: [wreg+status,2+status,0+pclath+cstack]
 11961                           ;alarm.c: 45:     do { LATAbits.LATA5 = 0; } while(0);
 11962                           
 11963  1087  0020               	movlb	0	; select bank0
 11964  1088  1296               	bcf	22,5	;volatile
 11965  1089                     l1341:	
 11966                           ;alarm.c: 46:     do { LATAbits.LATA4 = 0; } while(0);
 11967                           
 11968  1089  1216               	bcf	22,4	;volatile
 11969  108A                     l6119:
 11970                           
 11971                           ;alarm.c: 47:     deactivatePWM();
 11972  108A  3190  2080  3190   	fcall	_deactivatePWM
 11973  108D                     l1343:
 11974  108D  0008               	return
 11975  108E                     __end_of_deactivateAlarm:
 11976                           
 11977                           	psect	text9
 11978  1080                     __ptext9:	
 11979 ;; *************** function _deactivatePWM *****************
 11980 ;; Defined at:
 11981 ;;		line 50 in file "alarm.c"
 11982 ;; Parameters:    Size  Location     Type
 11983 ;;		None
 11984 ;; Auto vars:     Size  Location     Type
 11985 ;;		None
 11986 ;; Return value:  Size  Location     Type
 11987 ;;                  1    wreg      void 
 11988 ;; Registers used:
 11989 ;;		wreg, status,2, status,0, pclath, cstack
 11990 ;; Tracked objects:
 11991 ;;		On entry : 0/0
 11992 ;;		On exit  : 0/0
 11993 ;;		Unchanged: 0/0
 11994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11999 ;;Total ram usage:        0 bytes
 12000 ;; Hardware stack levels used: 1
 12001 ;; Hardware stack levels required when called: 15
 12002 ;; This function calls:
 12003 ;;		_PWMOutputDisable
 12004 ;;		_TMR2_StopTimer
 12005 ;; This function is called by:
 12006 ;;		_deactivateAlarm
 12007 ;; This function uses a non-reentrant model
 12008 ;;
 12009                           
 12010                           
 12011                           ;psect for function _deactivatePWM
 12012  1080                     _deactivatePWM:
 12013  1080                     l5953:	
 12014                           ;incstack = 0
 12015 ;; hardware stack exceeded
 12016                           ; Regs used in _deactivatePWM: [wreg+status,2+status,0+pclath+cstack]
 12017                           
 12018                           
 12019                           ;alarm.c: 51:     TMR2_StopTimer();
 12020  1080  3188  2001  3190   	fcall	_TMR2_StopTimer
 12021  1083                     l5955:
 12022                           
 12023                           ;alarm.c: 52:     PWMOutputDisable();
 12024  1083  3191  2102  3190   	fcall	_PWMOutputDisable
 12025  1086                     l1346:
 12026  1086  0008               	return
 12027  1087                     __end_of_deactivatePWM:
 12028                           
 12029                           	psect	text10
 12030  0801                     __ptext10:	
 12031 ;; *************** function _TMR2_StopTimer *****************
 12032 ;; Defined at:
 12033 ;;		line 117 in file "mcc_generated_files/tmr2.c"
 12034 ;; Parameters:    Size  Location     Type
 12035 ;;		None
 12036 ;; Auto vars:     Size  Location     Type
 12037 ;;		None
 12038 ;; Return value:  Size  Location     Type
 12039 ;;                  1    wreg      void 
 12040 ;; Registers used:
 12041 ;;		status,2, status,0, pclath, cstack
 12042 ;; Tracked objects:
 12043 ;;		On entry : 0/0
 12044 ;;		On exit  : 0/0
 12045 ;;		Unchanged: 0/0
 12046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12051 ;;Total ram usage:        0 bytes
 12052 ;; Hardware stack levels used: 1
 12053 ;; Hardware stack levels required when called: 14
 12054 ;; This function calls:
 12055 ;;		_TMR2_Stop
 12056 ;; This function is called by:
 12057 ;;		_deactivatePWM
 12058 ;; This function uses a non-reentrant model
 12059 ;;
 12060                           
 12061                           
 12062                           ;psect for function _TMR2_StopTimer
 12063  0801                     _TMR2_StopTimer:
 12064  0801                     l5587:	
 12065                           ;incstack = 0
 12066 ;; hardware stack exceeded
 12067                           ; Regs used in _TMR2_StopTimer: [status,2+status,0+pclath+cstack]
 12068                           
 12069                           
 12070                           ;mcc_generated_files/tmr2.c: 119:     TMR2_Stop();
 12071  0801  3190  2054  3188   	fcall	_TMR2_Stop
 12072  0804                     l916:
 12073  0804  0008               	return
 12074  0805                     __end_of_TMR2_StopTimer:
 12075                           
 12076                           	psect	text11
 12077  1054                     __ptext11:	
 12078 ;; *************** function _TMR2_Stop *****************
 12079 ;; Defined at:
 12080 ;;		line 111 in file "mcc_generated_files/tmr2.c"
 12081 ;; Parameters:    Size  Location     Type
 12082 ;;		None
 12083 ;; Auto vars:     Size  Location     Type
 12084 ;;		None
 12085 ;; Return value:  Size  Location     Type
 12086 ;;                  1    wreg      void 
 12087 ;; Registers used:
 12088 ;;		None
 12089 ;; Tracked objects:
 12090 ;;		On entry : 0/0
 12091 ;;		On exit  : 0/0
 12092 ;;		Unchanged: 0/0
 12093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12098 ;;Total ram usage:        0 bytes
 12099 ;; Hardware stack levels used: 1
 12100 ;; Hardware stack levels required when called: 13
 12101 ;; This function calls:
 12102 ;;		Nothing
 12103 ;; This function is called by:
 12104 ;;		_TMR2_StopTimer
 12105 ;; This function uses a non-reentrant model
 12106 ;;
 12107                           
 12108                           
 12109                           ;psect for function _TMR2_Stop
 12110  1054                     _TMR2_Stop:
 12111  1054                     l5481:	
 12112                           ;incstack = 0
 12113 ;; hardware stack exceeded
 12114                           ; Regs used in _TMR2_Stop: []
 12115                           
 12116                           
 12117                           ;mcc_generated_files/tmr2.c: 114:     T2CONbits.TMR2ON = 0;
 12118  1054  0025               	movlb	5	; select bank5
 12119  1055  138E               	bcf	14,7	;volatile
 12120  1056                     l913:
 12121  1056  0008               	return
 12122  1057                     __end_of_TMR2_Stop:
 12123                           
 12124                           	psect	text12
 12125  1102                     __ptext12:	
 12126 ;; *************** function _PWMOutputDisable *****************
 12127 ;; Defined at:
 12128 ;;		line 21 in file "alarm.c"
 12129 ;; Parameters:    Size  Location     Type
 12130 ;;		None
 12131 ;; Auto vars:     Size  Location     Type
 12132 ;;		None
 12133 ;; Return value:  Size  Location     Type
 12134 ;;                  1    wreg      void 
 12135 ;; Registers used:
 12136 ;;		wreg, status,2
 12137 ;; Tracked objects:
 12138 ;;		On entry : 0/0
 12139 ;;		On exit  : 0/0
 12140 ;;		Unchanged: 0/0
 12141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12146 ;;Total ram usage:        0 bytes
 12147 ;; Hardware stack levels used: 1
 12148 ;; Hardware stack levels required when called: 13
 12149 ;; This function calls:
 12150 ;;		Nothing
 12151 ;; This function is called by:
 12152 ;;		_deactivatePWM
 12153 ;; This function uses a non-reentrant model
 12154 ;;
 12155                           
 12156                           
 12157                           ;psect for function _PWMOutputDisable
 12158  1102                     _PWMOutputDisable:
 12159  1102                     l5771:	
 12160                           ;incstack = 0
 12161                           ; Regs used in _PWMOutputDisable: [wreg+status,2]
 12162                           
 12163                           
 12164                           ;alarm.c: 22:     PPSLOCK = 0x55;
 12165  1102  3055               	movlw	85
 12166  1103  003D               	movlb	29	; select bank29
 12167  1104  008F               	movwf	15	;volsfr
 12168                           
 12169                           ;alarm.c: 23:     PPSLOCK = 0xAA;
 12170  1105  30AA               	movlw	170
 12171  1106  008F               	movwf	15	;volsfr
 12172  1107                     l5773:
 12173                           
 12174                           ;alarm.c: 24:     PPSLOCKbits.PPSLOCKED = 0x00;
 12175  1107  100F               	bcf	15,0	;volsfr
 12176  1108                     l5775:
 12177                           
 12178                           ;alarm.c: 26:     RA6PPS = 0x00;
 12179  1108  003E               	movlb	30	; select bank30
 12180  1109  0196               	clrf	22	;volatile
 12181  110A                     l5777:
 12182                           
 12183                           ;alarm.c: 27:     PPSLOCK = 0x55;
 12184  110A  3055               	movlw	85
 12185  110B  003D               	movlb	29	; select bank29
 12186  110C  008F               	movwf	15	;volsfr
 12187  110D                     l5779:
 12188                           
 12189                           ;alarm.c: 28:     PPSLOCK = 0xAA;
 12190  110D  30AA               	movlw	170
 12191  110E  008F               	movwf	15	;volsfr
 12192  110F                     l5781:
 12193                           
 12194                           ;alarm.c: 29:     PPSLOCKbits.PPSLOCKED = 0x01;
 12195  110F  140F               	bsf	15,0	;volsfr
 12196  1110                     l1327:
 12197  1110  0008               	return
 12198  1111                     __end_of_PWMOutputDisable:
 12199                           
 12200                           	psect	text13
 12201  11BD                     __ptext13:	
 12202 ;; *************** function _SYSTEM_Initialize *****************
 12203 ;; Defined at:
 12204 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12205 ;; Parameters:    Size  Location     Type
 12206 ;;		None
 12207 ;; Auto vars:     Size  Location     Type
 12208 ;;		None
 12209 ;; Return value:  Size  Location     Type
 12210 ;;                  1    wreg      void 
 12211 ;; Registers used:
 12212 ;;		wreg, status,2, status,0, pclath, cstack
 12213 ;; Tracked objects:
 12214 ;;		On entry : 0/0
 12215 ;;		On exit  : 0/0
 12216 ;;		Unchanged: 0/0
 12217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12219 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12221 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12222 ;;Total ram usage:        0 bytes
 12223 ;; Hardware stack levels used: 1
 12224 ;; Hardware stack levels required when called: 15
 12225 ;; This function calls:
 12226 ;;		_ADCC_Initialize
 12227 ;;		_I2C1_Initialize
 12228 ;;		_OSCILLATOR_Initialize
 12229 ;;		_PIN_MANAGER_Initialize
 12230 ;;		_PMD_Initialize
 12231 ;;		_PWM6_Initialize
 12232 ;;		_TMR1_Initialize
 12233 ;;		_TMR2_Initialize
 12234 ;; This function is called by:
 12235 ;;		_main
 12236 ;; This function uses a non-reentrant model
 12237 ;;
 12238                           
 12239                           
 12240                           ;psect for function _SYSTEM_Initialize
 12241  11BD                     _SYSTEM_Initialize:
 12242  11BD                     l6069:	
 12243                           ;incstack = 0
 12244                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12245                           
 12246                           
 12247                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 12248  11BD  3190  2096  3191   	fcall	_PMD_Initialize
 12249  11C0                     l6071:
 12250                           
 12251                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
 12252  11C0  3190  209E  3191   	fcall	_I2C1_Initialize
 12253  11C3                     l6073:
 12254                           
 12255                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 12256  11C3  3193  23A2  3191   	fcall	_PIN_MANAGER_Initialize
 12257  11C6                     l6075:
 12258                           
 12259                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 12260  11C6  3190  20A7  3191   	fcall	_OSCILLATOR_Initialize
 12261  11C9                     l6077:
 12262                           
 12263                           ;mcc_generated_files/mcc.c: 56:     PWM6_Initialize();
 12264  11C9  3190  20CA  3191   	fcall	_PWM6_Initialize
 12265  11CC                     l6079:
 12266                           
 12267                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 12268  11CC  3191  218E  3191   	fcall	_ADCC_Initialize
 12269  11CF                     l6081:
 12270                           
 12271                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 12272  11CF  3190  20E5  3191   	fcall	_TMR2_Initialize
 12273  11D2                     l6083:
 12274                           
 12275                           ;mcc_generated_files/mcc.c: 59:     TMR1_Initialize();
 12276  11D2  3187  27DF  3191   	fcall	_TMR1_Initialize
 12277  11D5                     l400:
 12278  11D5  0008               	return
 12279  11D6                     __end_of_SYSTEM_Initialize:
 12280                           
 12281                           	psect	text14
 12282  10E5                     __ptext14:	
 12283 ;; *************** function _TMR2_Initialize *****************
 12284 ;; Defined at:
 12285 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 12286 ;; Parameters:    Size  Location     Type
 12287 ;;		None
 12288 ;; Auto vars:     Size  Location     Type
 12289 ;;		None
 12290 ;; Return value:  Size  Location     Type
 12291 ;;                  1    wreg      void 
 12292 ;; Registers used:
 12293 ;;		wreg, status,2
 12294 ;; Tracked objects:
 12295 ;;		On entry : 0/0
 12296 ;;		On exit  : 0/0
 12297 ;;		Unchanged: 0/0
 12298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12303 ;;Total ram usage:        0 bytes
 12304 ;; Hardware stack levels used: 1
 12305 ;; Hardware stack levels required when called: 13
 12306 ;; This function calls:
 12307 ;;		Nothing
 12308 ;; This function is called by:
 12309 ;;		_SYSTEM_Initialize
 12310 ;; This function uses a non-reentrant model
 12311 ;;
 12312                           
 12313                           
 12314                           ;psect for function _TMR2_Initialize
 12315  10E5                     _TMR2_Initialize:
 12316  10E5                     l5869:	
 12317                           ;incstack = 0
 12318                           ; Regs used in _TMR2_Initialize: [wreg+status,2]
 12319                           
 12320                           
 12321                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 12322  10E5  3001               	movlw	1
 12323  10E6  0025               	movlb	5	; select bank5
 12324  10E7  0090               	movwf	16	;volatile
 12325  10E8                     l5871:
 12326                           
 12327                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 12328  10E8  018F               	clrf	15	;volatile
 12329  10E9                     l5873:
 12330                           
 12331                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 12332  10E9  0191               	clrf	17	;volatile
 12333                           
 12334                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x0C;
 12335  10EA  300C               	movlw	12
 12336  10EB  008D               	movwf	13	;volatile
 12337  10EC                     l5875:
 12338                           
 12339                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 12340  10EC  018C               	clrf	12	;volatile
 12341  10ED                     l5877:
 12342                           
 12343                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 12344  10ED  002E               	movlb	14	; select bank14
 12345  10EE  1090               	bcf	16,1	;volatile
 12346  10EF                     l5879:
 12347                           
 12348                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0x80;
 12349  10EF  3080               	movlw	128
 12350  10F0  0025               	movlb	5	; select bank5
 12351  10F1  008E               	movwf	14	;volatile
 12352  10F2                     l898:
 12353  10F2  0008               	return
 12354  10F3                     __end_of_TMR2_Initialize:
 12355                           
 12356                           	psect	text15
 12357  07DF                     __ptext15:	
 12358 ;; *************** function _TMR1_Initialize *****************
 12359 ;; Defined at:
 12360 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 12361 ;; Parameters:    Size  Location     Type
 12362 ;;		None
 12363 ;; Auto vars:     Size  Location     Type
 12364 ;;		None
 12365 ;; Return value:  Size  Location     Type
 12366 ;;                  1    wreg      void 
 12367 ;; Registers used:
 12368 ;;		wreg, status,2, status,0, pclath, cstack
 12369 ;; Tracked objects:
 12370 ;;		On entry : 0/0
 12371 ;;		On exit  : 0/0
 12372 ;;		Unchanged: 0/0
 12373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12378 ;;Total ram usage:        0 bytes
 12379 ;; Hardware stack levels used: 1
 12380 ;; Hardware stack levels required when called: 14
 12381 ;; This function calls:
 12382 ;;		_TMR1_SetInterruptHandler
 12383 ;; This function is called by:
 12384 ;;		_SYSTEM_Initialize
 12385 ;; This function uses a non-reentrant model
 12386 ;;
 12387                           
 12388                           
 12389                           ;psect for function _TMR1_Initialize
 12390  07DF                     _TMR1_Initialize:
 12391  07DF                     l5881:	
 12392                           ;incstack = 0
 12393                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12394                           
 12395                           
 12396                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
 12397  07DF  0024               	movlb	4	; select bank4
 12398  07E0  018F               	clrf	15	;volatile
 12399                           
 12400                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
 12401  07E1  0190               	clrf	16	;volatile
 12402  07E2                     l5883:
 12403                           
 12404                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
 12405  07E2  3004               	movlw	4
 12406  07E3  0091               	movwf	17	;volatile
 12407  07E4                     l5885:
 12408                           
 12409                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0x86;
 12410  07E4  3086               	movlw	134
 12411  07E5  008D               	movwf	13	;volatile
 12412  07E6                     l5887:
 12413                           
 12414                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xE8;
 12415  07E6  30E8               	movlw	232
 12416  07E7  008C               	movwf	12	;volatile
 12417  07E8                     l5889:
 12418                           
 12419                           ;mcc_generated_files/tmr1.c: 84:     PIR4bits.TMR1IF = 0;
 12420  07E8  002E               	movlb	14	; select bank14
 12421  07E9  1010               	bcf	16,0	;volatile
 12422  07EA                     l5891:
 12423                           
 12424                           ;mcc_generated_files/tmr1.c: 87:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 12425  07EA  0024               	movlb	4	; select bank4
 12426  07EB  080D               	movf	13,w	;volatile
 12427  07EC  0022               	movlb	2	; select bank2
 12428  07ED  00E2               	movwf	(_timer1ReloadVal+1)^(0+256)	;volatile
 12429  07EE  0024               	movlb	4	; select bank4
 12430  07EF  080C               	movf	12,w	;volatile
 12431  07F0  0022               	movlb	2	; select bank2
 12432  07F1  00E1               	movwf	_timer1ReloadVal^(0+256)	;volatile
 12433  07F2                     l5893:
 12434                           
 12435                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
 12436  07F2  002E               	movlb	14	; select bank14
 12437  07F3  141A               	bsf	26,0	;volatile
 12438  07F4                     l5895:
 12439                           
 12440                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 12441  07F4  3003               	movlw	low _TMR1_DefaultInterruptHandler
 12442  07F5  0022               	movlb	2	; select bank2
 12443  07F6  00BD               	movwf	TMR1_SetInterruptHandler@InterruptHandler^(0+256)
 12444  07F7  3000               	movlw	high _TMR1_DefaultInterruptHandler
 12445  07F8  00BE               	movwf	(TMR1_SetInterruptHandler@InterruptHandler^(0+256)+1)
 12446  07F9  3190  205F  3187   	fcall	_TMR1_SetInterruptHandler
 12447  07FC                     l5897:
 12448                           
 12449                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x01;
 12450  07FC  3001               	movlw	1
 12451  07FD  0024               	movlb	4	; select bank4
 12452  07FE  008E               	movwf	14	;volatile
 12453  07FF                     l500:
 12454  07FF  0008               	return
 12455  0800                     __end_of_TMR1_Initialize:
 12456                           
 12457                           	psect	text16
 12458  105F                     __ptext16:	
 12459 ;; *************** function _TMR1_SetInterruptHandler *****************
 12460 ;; Defined at:
 12461 ;;		line 185 in file "mcc_generated_files/tmr1.c"
 12462 ;; Parameters:    Size  Location     Type
 12463 ;;  InterruptHan    2    0[BANK2 ] PTR FTN()void 
 12464 ;;		 -> timerInterrupt(1), TMR1_DefaultInterruptHandler(1), 
 12465 ;; Auto vars:     Size  Location     Type
 12466 ;;		None
 12467 ;; Return value:  Size  Location     Type
 12468 ;;                  1    wreg      void 
 12469 ;; Registers used:
 12470 ;;		wreg
 12471 ;; Tracked objects:
 12472 ;;		On entry : 0/0
 12473 ;;		On exit  : 0/0
 12474 ;;		Unchanged: 0/0
 12475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12476 ;;      Params:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 12477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12479 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 12480 ;;Total ram usage:        2 bytes
 12481 ;; Hardware stack levels used: 1
 12482 ;; Hardware stack levels required when called: 13
 12483 ;; This function calls:
 12484 ;;		Nothing
 12485 ;; This function is called by:
 12486 ;;		_TMR1_Initialize
 12487 ;;		_main
 12488 ;; This function uses a non-reentrant model
 12489 ;;
 12490                           
 12491                           
 12492                           ;psect for function _TMR1_SetInterruptHandler
 12493  105F                     _TMR1_SetInterruptHandler:
 12494  105F                     l5579:	
 12495                           ;incstack = 0
 12496                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 12497                           
 12498                           
 12499                           ;mcc_generated_files/tmr1.c: 186:     TMR1_InterruptHandler = InterruptHandler;
 12500  105F  0022               	movlb	2	; select bank2
 12501  1060  083E               	movf	(TMR1_SetInterruptHandler@InterruptHandler+1)^(0+256),w
 12502  1061  00E0               	movwf	(_TMR1_InterruptHandler+1)^(0+256)
 12503  1062  083D               	movf	TMR1_SetInterruptHandler@InterruptHandler^(0+256),w
 12504  1063  00DF               	movwf	_TMR1_InterruptHandler^(0+256)
 12505  1064                     l533:
 12506  1064  0008               	return
 12507  1065                     __end_of_TMR1_SetInterruptHandler:
 12508                           
 12509                           	psect	text17
 12510  10CA                     __ptext17:	
 12511 ;; *************** function _PWM6_Initialize *****************
 12512 ;; Defined at:
 12513 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 12514 ;; Parameters:    Size  Location     Type
 12515 ;;		None
 12516 ;; Auto vars:     Size  Location     Type
 12517 ;;		None
 12518 ;; Return value:  Size  Location     Type
 12519 ;;                  1    wreg      void 
 12520 ;; Registers used:
 12521 ;;		wreg, status,2, status,0
 12522 ;; Tracked objects:
 12523 ;;		On entry : 0/0
 12524 ;;		On exit  : 0/0
 12525 ;;		Unchanged: 0/0
 12526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12527 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12528 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12530 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12531 ;;Total ram usage:        0 bytes
 12532 ;; Hardware stack levels used: 1
 12533 ;; Hardware stack levels required when called: 13
 12534 ;; This function calls:
 12535 ;;		Nothing
 12536 ;; This function is called by:
 12537 ;;		_SYSTEM_Initialize
 12538 ;; This function uses a non-reentrant model
 12539 ;;
 12540                           
 12541                           
 12542                           ;psect for function _PWM6_Initialize
 12543  10CA                     _PWM6_Initialize:
 12544  10CA                     l5865:	
 12545                           ;incstack = 0
 12546                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 12547                           
 12548                           
 12549                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 12550  10CA  3080               	movlw	128
 12551  10CB  0027               	movlb	7	; select bank7
 12552  10CC  008E               	movwf	14	;volatile
 12553                           
 12554                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x06;
 12555  10CD  3006               	movlw	6
 12556  10CE  008D               	movwf	13	;volatile
 12557                           
 12558                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 12559  10CF  3040               	movlw	64
 12560  10D0  008C               	movwf	12	;volatile
 12561  10D1                     l5867:
 12562                           
 12563                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 12564  10D1  0024               	movlb	4	; select bank4
 12565  10D2  081F               	movf	31,w	;volatile
 12566  10D3  39F3               	andlw	-13
 12567  10D4  3804               	iorlw	4
 12568  10D5  009F               	movwf	31	;volatile
 12569  10D6                     l464:
 12570  10D6  0008               	return
 12571  10D7                     __end_of_PWM6_Initialize:
 12572                           
 12573                           	psect	text18
 12574  1096                     __ptext18:	
 12575 ;; *************** function _PMD_Initialize *****************
 12576 ;; Defined at:
 12577 ;;		line 76 in file "mcc_generated_files/mcc.c"
 12578 ;; Parameters:    Size  Location     Type
 12579 ;;		None
 12580 ;; Auto vars:     Size  Location     Type
 12581 ;;		None
 12582 ;; Return value:  Size  Location     Type
 12583 ;;                  1    wreg      void 
 12584 ;; Registers used:
 12585 ;;		status,2
 12586 ;; Tracked objects:
 12587 ;;		On entry : 0/0
 12588 ;;		On exit  : 0/0
 12589 ;;		Unchanged: 0/0
 12590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12595 ;;Total ram usage:        0 bytes
 12596 ;; Hardware stack levels used: 1
 12597 ;; Hardware stack levels required when called: 13
 12598 ;; This function calls:
 12599 ;;		Nothing
 12600 ;; This function is called by:
 12601 ;;		_SYSTEM_Initialize
 12602 ;; This function uses a non-reentrant model
 12603 ;;
 12604                           
 12605                           
 12606                           ;psect for function _PMD_Initialize
 12607  1096                     _PMD_Initialize:
 12608  1096                     l5847:	
 12609                           ;incstack = 0
 12610                           ; Regs used in _PMD_Initialize: [status,2]
 12611                           
 12612                           
 12613                           ;mcc_generated_files/mcc.c: 79:     PMD0 = 0x00;
 12614  1096  002F               	movlb	15	; select bank15
 12615  1097  0196               	clrf	22	;volatile
 12616                           
 12617                           ;mcc_generated_files/mcc.c: 81:     PMD1 = 0x00;
 12618  1098  0197               	clrf	23	;volatile
 12619                           
 12620                           ;mcc_generated_files/mcc.c: 83:     PMD2 = 0x00;
 12621  1099  0198               	clrf	24	;volatile
 12622                           
 12623                           ;mcc_generated_files/mcc.c: 85:     PMD3 = 0x00;
 12624  109A  0199               	clrf	25	;volatile
 12625                           
 12626                           ;mcc_generated_files/mcc.c: 87:     PMD4 = 0x00;
 12627  109B  019A               	clrf	26	;volatile
 12628                           
 12629                           ;mcc_generated_files/mcc.c: 89:     PMD5 = 0x00;
 12630  109C  019B               	clrf	27	;volatile
 12631  109D                     l406:
 12632  109D  0008               	return
 12633  109E                     __end_of_PMD_Initialize:
 12634                           
 12635                           	psect	text19
 12636  13A2                     __ptext19:	
 12637 ;; *************** function _PIN_MANAGER_Initialize *****************
 12638 ;; Defined at:
 12639 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 12640 ;; Parameters:    Size  Location     Type
 12641 ;;		None
 12642 ;; Auto vars:     Size  Location     Type
 12643 ;;		None
 12644 ;; Return value:  Size  Location     Type
 12645 ;;                  1    wreg      void 
 12646 ;; Registers used:
 12647 ;;		wreg, status,2
 12648 ;; Tracked objects:
 12649 ;;		On entry : 0/0
 12650 ;;		On exit  : 0/0
 12651 ;;		Unchanged: 0/0
 12652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12657 ;;Total ram usage:        0 bytes
 12658 ;; Hardware stack levels used: 1
 12659 ;; Hardware stack levels required when called: 13
 12660 ;; This function calls:
 12661 ;;		Nothing
 12662 ;; This function is called by:
 12663 ;;		_SYSTEM_Initialize
 12664 ;; This function uses a non-reentrant model
 12665 ;;
 12666                           
 12667                           
 12668                           ;psect for function _PIN_MANAGER_Initialize
 12669  13A2                     _PIN_MANAGER_Initialize:
 12670  13A2                     l5791:	
 12671                           ;incstack = 0
 12672                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 12673                           
 12674                           
 12675                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 12676  13A2  0020               	movlb	0	; select bank0
 12677  13A3  019A               	clrf	26	;volatile
 12678                           
 12679                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 12680  13A4  0199               	clrf	25	;volatile
 12681                           
 12682                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 12683  13A5  0196               	clrf	22	;volatile
 12684                           
 12685                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 12686  13A6  0197               	clrf	23	;volatile
 12687                           
 12688                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 12689  13A7  0198               	clrf	24	;volatile
 12690  13A8                     l5793:
 12691                           
 12692                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 12693  13A8  3007               	movlw	7
 12694  13A9  0095               	movwf	21	;volatile
 12695  13AA                     l5795:
 12696                           
 12697                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x4F;
 12698  13AA  304F               	movlw	79
 12699  13AB  0091               	movwf	17	;volatile
 12700  13AC                     l5797:
 12701                           
 12702                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 12703  13AC  30FF               	movlw	255
 12704  13AD  0092               	movwf	18	;volatile
 12705  13AE                     l5799:
 12706                           
 12707                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 12708  13AE  30FF               	movlw	255
 12709  13AF  0093               	movwf	19	;volatile
 12710  13B0                     l5801:
 12711                           
 12712                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 12713  13B0  30FF               	movlw	255
 12714  13B1  0094               	movwf	20	;volatile
 12715  13B2                     l5803:
 12716                           
 12717                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
 12718  13B2  30FF               	movlw	255
 12719  13B3  003E               	movlb	30	; select bank30
 12720  13B4  00D9               	movwf	89	;volatile
 12721  13B5                     l5805:
 12722                           
 12723                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xC7;
 12724  13B5  30C7               	movlw	199
 12725  13B6  00CE               	movwf	78	;volatile
 12726  13B7                     l5807:
 12727                           
 12728                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xEF;
 12729  13B7  30EF               	movlw	239
 12730  13B8  00C3               	movwf	67	;volatile
 12731  13B9                     l5809:
 12732                           
 12733                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 12734  13B9  3007               	movlw	7
 12735  13BA  00E4               	movwf	100	;volatile
 12736  13BB                     l5811:
 12737                           
 12738                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0xFF;
 12739  13BB  30FF               	movlw	255
 12740  13BC  00B8               	movwf	56	;volatile
 12741                           
 12742                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 12743  13BD  01DA               	clrf	90	;volatile
 12744                           
 12745                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 12746  13BE  01E5               	clrf	101	;volatile
 12747                           
 12748                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 12749  13BF  01C4               	clrf	68	;volatile
 12750                           
 12751                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 12752  13C0  01B9               	clrf	57	;volatile
 12753                           
 12754                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 12755  13C1  01CF               	clrf	79	;volatile
 12756                           
 12757                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 12758  13C2  01E6               	clrf	102	;volatile
 12759                           
 12760                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 12761  13C3  01BA               	clrf	58	;volatile
 12762                           
 12763                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 12764  13C4  01C5               	clrf	69	;volatile
 12765                           
 12766                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 12767  13C5  01D0               	clrf	80	;volatile
 12768                           
 12769                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 12770  13C6  01DB               	clrf	91	;volatile
 12771  13C7                     l5813:
 12772                           
 12773                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 12774  13C7  30FF               	movlw	255
 12775  13C8  00BB               	movwf	59	;volatile
 12776  13C9                     l5815:
 12777                           
 12778                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 12779  13C9  30FF               	movlw	255
 12780  13CA  00C6               	movwf	70	;volatile
 12781  13CB                     l5817:
 12782                           
 12783                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 12784  13CB  30FF               	movlw	255
 12785  13CC  00D1               	movwf	81	;volatile
 12786  13CD                     l5819:
 12787                           
 12788                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 12789  13CD  30FF               	movlw	255
 12790  13CE  00DC               	movwf	92	;volatile
 12791  13CF                     l5821:
 12792                           
 12793                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 12794  13CF  3007               	movlw	7
 12795  13D0  00E7               	movwf	103	;volatile
 12796  13D1                     l5823:
 12797                           
 12798                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 12799  13D1  30FF               	movlw	255
 12800  13D2  00BC               	movwf	60	;volatile
 12801  13D3                     l5825:
 12802                           
 12803                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 12804  13D3  30FF               	movlw	255
 12805  13D4  00C7               	movwf	71	;volatile
 12806  13D5                     l5827:
 12807                           
 12808                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 12809  13D5  30FF               	movlw	255
 12810  13D6  00D2               	movwf	82	;volatile
 12811  13D7                     l5829:
 12812                           
 12813                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 12814  13D7  30FF               	movlw	255
 12815  13D8  00DD               	movwf	93	;volatile
 12816  13D9                     l5831:
 12817                           
 12818                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
 12819  13D9  3007               	movlw	7
 12820  13DA  00E8               	movwf	104	;volatile
 12821  13DB                     l5833:
 12822                           
 12823                           ;mcc_generated_files/pin_manager.c: 127:     SSP1CLKPPS = 0x13;
 12824  13DB  3013               	movlw	19
 12825  13DC  003D               	movlb	29	; select bank29
 12826  13DD  00C5               	movwf	69	;volatile
 12827  13DE                     l5835:
 12828                           
 12829                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x14;
 12830  13DE  3014               	movlw	20
 12831  13DF  003E               	movlb	30	; select bank30
 12832  13E0  00A3               	movwf	35	;volatile
 12833  13E1                     l5837:
 12834                           
 12835                           ;mcc_generated_files/pin_manager.c: 129:     RC4PPS = 0x15;
 12836  13E1  3015               	movlw	21
 12837  13E2  00A4               	movwf	36	;volatile
 12838  13E3                     l5839:
 12839                           
 12840                           ;mcc_generated_files/pin_manager.c: 130:     SSP1DATPPS = 0x14;
 12841  13E3  3014               	movlw	20
 12842  13E4  003D               	movlb	29	; select bank29
 12843  13E5  00C6               	movwf	70	;volatile
 12844  13E6                     l200:
 12845  13E6  0008               	return
 12846  13E7                     __end_of_PIN_MANAGER_Initialize:
 12847                           
 12848                           	psect	text20
 12849  10A7                     __ptext20:	
 12850 ;; *************** function _OSCILLATOR_Initialize *****************
 12851 ;; Defined at:
 12852 ;;		line 62 in file "mcc_generated_files/mcc.c"
 12853 ;; Parameters:    Size  Location     Type
 12854 ;;		None
 12855 ;; Auto vars:     Size  Location     Type
 12856 ;;		None
 12857 ;; Return value:  Size  Location     Type
 12858 ;;                  1    wreg      void 
 12859 ;; Registers used:
 12860 ;;		wreg, status,2
 12861 ;; Tracked objects:
 12862 ;;		On entry : 0/0
 12863 ;;		On exit  : 0/0
 12864 ;;		Unchanged: 0/0
 12865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12870 ;;Total ram usage:        0 bytes
 12871 ;; Hardware stack levels used: 1
 12872 ;; Hardware stack levels required when called: 13
 12873 ;; This function calls:
 12874 ;;		Nothing
 12875 ;; This function is called by:
 12876 ;;		_SYSTEM_Initialize
 12877 ;; This function uses a non-reentrant model
 12878 ;;
 12879                           
 12880                           
 12881                           ;psect for function _OSCILLATOR_Initialize
 12882  10A7                     _OSCILLATOR_Initialize:
 12883  10A7                     l5857:	
 12884                           ;incstack = 0
 12885                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 12886                           
 12887                           
 12888                           ;mcc_generated_files/mcc.c: 65:     OSCCON1 = 0x62;
 12889  10A7  3062               	movlw	98
 12890  10A8  0031               	movlb	17	; select bank17
 12891  10A9  008D               	movwf	13	;volatile
 12892  10AA                     l5859:
 12893                           
 12894                           ;mcc_generated_files/mcc.c: 67:     OSCCON3 = 0x00;
 12895  10AA  018F               	clrf	15	;volatile
 12896  10AB                     l5861:
 12897                           
 12898                           ;mcc_generated_files/mcc.c: 69:     OSCEN = 0x00;
 12899  10AB  0191               	clrf	17	;volatile
 12900                           
 12901                           ;mcc_generated_files/mcc.c: 71:     OSCFRQ = 0x02;
 12902  10AC  3002               	movlw	2
 12903  10AD  0093               	movwf	19	;volatile
 12904  10AE                     l5863:
 12905                           
 12906                           ;mcc_generated_files/mcc.c: 73:     OSCTUNE = 0x00;
 12907  10AE  0192               	clrf	18	;volatile
 12908  10AF                     l403:
 12909  10AF  0008               	return
 12910  10B0                     __end_of_OSCILLATOR_Initialize:
 12911                           
 12912                           	psect	text21
 12913  109E                     __ptext21:	
 12914 ;; *************** function _I2C1_Initialize *****************
 12915 ;; Defined at:
 12916 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 12917 ;; Parameters:    Size  Location     Type
 12918 ;;		None
 12919 ;; Auto vars:     Size  Location     Type
 12920 ;;		None
 12921 ;; Return value:  Size  Location     Type
 12922 ;;                  1    wreg      void 
 12923 ;; Registers used:
 12924 ;;		wreg, status,2
 12925 ;; Tracked objects:
 12926 ;;		On entry : 0/0
 12927 ;;		On exit  : 0/0
 12928 ;;		Unchanged: 0/0
 12929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12934 ;;Total ram usage:        0 bytes
 12935 ;; Hardware stack levels used: 1
 12936 ;; Hardware stack levels required when called: 13
 12937 ;; This function calls:
 12938 ;;		Nothing
 12939 ;; This function is called by:
 12940 ;;		_SYSTEM_Initialize
 12941 ;; This function uses a non-reentrant model
 12942 ;;
 12943                           
 12944                           
 12945                           ;psect for function _I2C1_Initialize
 12946  109E                     _I2C1_Initialize:
 12947  109E                     l5849:	
 12948                           ;incstack = 0
 12949                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 12950                           
 12951                           
 12952                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x00;
 12953  109E  0023               	movlb	3	; select bank3
 12954  109F  018F               	clrf	15	;volatile
 12955  10A0                     l5851:
 12956                           
 12957                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 12958  10A0  3008               	movlw	8
 12959  10A1  0090               	movwf	16	;volatile
 12960  10A2                     l5853:
 12961                           
 12962                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 12963  10A2  0191               	clrf	17	;volatile
 12964                           
 12965                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x03;
 12966  10A3  3003               	movlw	3
 12967  10A4  008D               	movwf	13	;volatile
 12968  10A5                     l5855:
 12969                           
 12970                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 12971  10A5  1290               	bcf	16,5	;volatile
 12972  10A6                     l641:
 12973  10A6  0008               	return
 12974  10A7                     __end_of_I2C1_Initialize:
 12975                           
 12976                           	psect	text22
 12977  118E                     __ptext22:	
 12978 ;; *************** function _ADCC_Initialize *****************
 12979 ;; Defined at:
 12980 ;;		line 63 in file "mcc_generated_files/adcc.c"
 12981 ;; Parameters:    Size  Location     Type
 12982 ;;		None
 12983 ;; Auto vars:     Size  Location     Type
 12984 ;;		None
 12985 ;; Return value:  Size  Location     Type
 12986 ;;                  1    wreg      void 
 12987 ;; Registers used:
 12988 ;;		wreg, status,2
 12989 ;; Tracked objects:
 12990 ;;		On entry : 0/0
 12991 ;;		On exit  : 0/0
 12992 ;;		Unchanged: 0/0
 12993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12998 ;;Total ram usage:        0 bytes
 12999 ;; Hardware stack levels used: 1
 13000 ;; Hardware stack levels required when called: 13
 13001 ;; This function calls:
 13002 ;;		Nothing
 13003 ;; This function is called by:
 13004 ;;		_SYSTEM_Initialize
 13005 ;; This function uses a non-reentrant model
 13006 ;;
 13007                           
 13008                           
 13009                           ;psect for function _ADCC_Initialize
 13010  118E                     _ADCC_Initialize:
 13011  118E                     l5841:	
 13012                           ;incstack = 0
 13013                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 13014                           
 13015                           
 13016                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
 13017  118E  0022               	movlb	2	; select bank2
 13018  118F  018E               	clrf	14	;volatile
 13019                           
 13020                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
 13021  1190  018F               	clrf	15	;volatile
 13022                           
 13023                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 13024  1191  0190               	clrf	16	;volatile
 13025                           
 13026                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
 13027  1192  0191               	clrf	17	;volatile
 13028                           
 13029                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 13030  1193  0192               	clrf	18	;volatile
 13031                           
 13032                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 13033  1194  0193               	clrf	19	;volatile
 13034                           
 13035                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
 13036  1195  018D               	clrf	13	;volatile
 13037                           
 13038                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
 13039  1196  0021               	movlb	1	; select bank1
 13040  1197  019E               	clrf	30	;volatile
 13041                           
 13042                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
 13043  1198  019B               	clrf	27	;volatile
 13044                           
 13045                           ;mcc_generated_files/adcc.c: 85:     ADPRE = 0x00;
 13046  1199  019C               	clrf	28	;volatile
 13047                           
 13048                           ;mcc_generated_files/adcc.c: 87:     ADCON1 = 0x00;
 13049  119A  0194               	clrf	20	;volatile
 13050                           
 13051                           ;mcc_generated_files/adcc.c: 89:     ADCON2 = 0x00;
 13052  119B  0195               	clrf	21	;volatile
 13053                           
 13054                           ;mcc_generated_files/adcc.c: 91:     ADCON3 = 0x00;
 13055  119C  0196               	clrf	22	;volatile
 13056                           
 13057                           ;mcc_generated_files/adcc.c: 93:     ADSTAT = 0x00;
 13058  119D  0197               	clrf	23	;volatile
 13059                           
 13060                           ;mcc_generated_files/adcc.c: 95:     ADREF = 0x00;
 13061  119E  019A               	clrf	26	;volatile
 13062                           
 13063                           ;mcc_generated_files/adcc.c: 97:     ADACT = 0x00;
 13064  119F  0199               	clrf	25	;volatile
 13065                           
 13066                           ;mcc_generated_files/adcc.c: 99:     ADCLK = 0x00;
 13067  11A0  0198               	clrf	24	;volatile
 13068  11A1                     l5843:
 13069                           
 13070                           ;mcc_generated_files/adcc.c: 101:     ADCON0 = 0x84;
 13071  11A1  3084               	movlw	132
 13072  11A2  0093               	movwf	19	;volatile
 13073  11A3                     l5845:
 13074                           
 13075                           ;mcc_generated_files/adcc.c: 103:     ADACQ = 0x00;
 13076  11A3  019D               	clrf	29	;volatile
 13077  11A4                     l278:
 13078  11A4  0008               	return
 13079  11A5                     __end_of_ADCC_Initialize:
 13080                           
 13081                           	psect	text23
 13082  10BD                     __ptext23:	
 13083 ;; *************** function _OpenI2C *****************
 13084 ;; Defined at:
 13085 ;;		line 26 in file "I2C/i2c.c"
 13086 ;; Parameters:    Size  Location     Type
 13087 ;;		None
 13088 ;; Auto vars:     Size  Location     Type
 13089 ;;		None
 13090 ;; Return value:  Size  Location     Type
 13091 ;;                  1    wreg      void 
 13092 ;; Registers used:
 13093 ;;		wreg, status,2
 13094 ;; Tracked objects:
 13095 ;;		On entry : 0/0
 13096 ;;		On exit  : 0/0
 13097 ;;		Unchanged: 0/0
 13098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13103 ;;Total ram usage:        0 bytes
 13104 ;; Hardware stack levels used: 1
 13105 ;; Hardware stack levels required when called: 13
 13106 ;; This function calls:
 13107 ;;		Nothing
 13108 ;; This function is called by:
 13109 ;;		_main
 13110 ;; This function uses a non-reentrant model
 13111 ;;
 13112                           
 13113                           
 13114                           ;psect for function _OpenI2C
 13115  10BD                     _OpenI2C:
 13116  10BD                     l6121:	
 13117                           ;incstack = 0
 13118                           ; Regs used in _OpenI2C: [wreg+status,2]
 13119                           
 13120                           
 13121                           ;I2C/i2c.c: 28:   SSP1STAT = 0x80;
 13122  10BD  3080               	movlw	128
 13123  10BE  0023               	movlb	3	; select bank3
 13124  10BF  008F               	movwf	15	;volatile
 13125                           
 13126                           ;I2C/i2c.c: 29:   SSP1CON1 = 0x08;
 13127  10C0  3008               	movlw	8
 13128  10C1  0090               	movwf	16	;volatile
 13129  10C2                     l6123:
 13130                           
 13131                           ;I2C/i2c.c: 30:   SSP1CON2 = 0x00;
 13132  10C2  0191               	clrf	17	;volatile
 13133  10C3                     l6125:
 13134                           
 13135                           ;I2C/i2c.c: 31:   SSP1ADD = 0x03;
 13136  10C3  3003               	movlw	3
 13137  10C4  008D               	movwf	13	;volatile
 13138  10C5                     l6127:
 13139                           
 13140                           ;I2C/i2c.c: 32:   SSP1CON1bits.SSPEN = 1;
 13141  10C5  1690               	bsf	16,5	;volatile
 13142  10C6                     l6129:
 13143                           
 13144                           ;I2C/i2c.c: 34:   TRISCbits.TRISC3 = 1;
 13145  10C6  0020               	movlb	0	; select bank0
 13146  10C7  1593               	bsf	19,3	;volatile
 13147  10C8                     l6131:
 13148                           
 13149                           ;I2C/i2c.c: 35:   TRISCbits.TRISC4 = 1;
 13150  10C8  1613               	bsf	19,4	;volatile
 13151  10C9                     l1396:
 13152  10C9  0008               	return
 13153  10CA                     __end_of_OpenI2C:
 13154                           
 13155                           	psect	text24
 13156  164D                     __ptext24:	
 13157 ;; *************** function _LCDinit *****************
 13158 ;; Defined at:
 13159 ;;		line 79 in file "LCD/lcd.c"
 13160 ;; Parameters:    Size  Location     Type
 13161 ;;		None
 13162 ;; Auto vars:     Size  Location     Type
 13163 ;;		None
 13164 ;; Return value:  Size  Location     Type
 13165 ;;                  1    wreg      void 
 13166 ;; Registers used:
 13167 ;;		wreg, status,2, status,0, pclath, cstack
 13168 ;; Tracked objects:
 13169 ;;		On entry : 0/0
 13170 ;;		On exit  : 0/0
 13171 ;;		Unchanged: 0/0
 13172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13175 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 13176 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 13177 ;;Total ram usage:        1 bytes
 13178 ;; Hardware stack levels used: 1
 13179 ;; Hardware stack levels required when called: 15
 13180 ;; This function calls:
 13181 ;;		_LCDsend
 13182 ;;		_LCDsend2x4
 13183 ;; This function is called by:
 13184 ;;		_main
 13185 ;; This function uses a non-reentrant model
 13186 ;;
 13187                           
 13188                           
 13189                           ;psect for function _LCDinit
 13190  164D                     _LCDinit:
 13191  164D                     l6133:	
 13192                           ;incstack = 0
 13193                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
 13194                           
 13195                           
 13196                           ;LCD/lcd.c: 81:   _delay((unsigned long)((50)*(4000000/4000.0)));
 13197  164D  3041               	movlw	65
 13198  164E  0022               	movlb	2	; select bank2
 13199  164F  00C5               	movwf	??_LCDinit^(0+256)
 13200  1650  30EE               	movlw	238
 13201  1651                     u6027:
 13202  1651  0B89               	decfsz	9,f
 13203  1652  2E51               	goto	u6027
 13204  1653  0BC5               	decfsz	??_LCDinit^(0+256),f
 13205  1654  2E51               	goto	u6027
 13206  1655  0000               	nop
 13207  1656                     l6135:
 13208                           
 13209                           ;LCD/lcd.c: 82:   LCDsend(0x30);
 13210  1656  3030               	movlw	48
 13211  1657  3194  24D0  3196   	fcall	_LCDsend
 13212  165A                     l6137:
 13213                           
 13214                           ;LCD/lcd.c: 83:   LCDsend(0x34); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x30);
 13215  165A  3034               	movlw	52
 13216  165B  3194  24D0  3196   	fcall	_LCDsend
 13217  165E  30A6               	movlw	166
 13218  165F                     u6037:
 13219  165F  0B89               	decfsz	9,f
 13220  1660  2E5F               	goto	u6037
 13221  1661  3200               	nop2
 13222  1662                     l6139:
 13223  1662  3030               	movlw	48
 13224  1663  3194  24D0  3196   	fcall	_LCDsend
 13225  1666                     l6141:
 13226                           
 13227                           ;LCD/lcd.c: 84:   _delay((unsigned long)((5)*(4000000/4000.0)));
 13228  1666  3007               	movlw	7
 13229  1667  0022               	movlb	2	; select bank2
 13230  1668  00C5               	movwf	??_LCDinit^(0+256)
 13231  1669  307D               	movlw	125
 13232  166A                     u6047:
 13233  166A  0B89               	decfsz	9,f
 13234  166B  2E6A               	goto	u6047
 13235  166C  0BC5               	decfsz	??_LCDinit^(0+256),f
 13236  166D  2E6A               	goto	u6047
 13237                           
 13238                           ;LCD/lcd.c: 85:   LCDsend(0x30);
 13239  166E  3030               	movlw	48
 13240  166F  3194  24D0  3196   	fcall	_LCDsend
 13241                           
 13242                           ;LCD/lcd.c: 86:   LCDsend(0x34); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x30);
 13243  1672  3034               	movlw	52
 13244  1673  3194  24D0  3196   	fcall	_LCDsend
 13245  1676                     l6143:
 13246  1676  30A6               	movlw	166
 13247  1677                     u6057:
 13248  1677  0B89               	decfsz	9,f
 13249  1678  2E77               	goto	u6057
 13250  1679  3200               	nop2
 13251  167A                     l6145:
 13252  167A  3030               	movlw	48
 13253  167B  3194  24D0  3196   	fcall	_LCDsend
 13254                           
 13255                           ;LCD/lcd.c: 87:   _delay((unsigned long)((100)*(4000000/4000000.0)));
 13256  167E  3021               	movlw	33
 13257  167F                     u6067:
 13258  167F  0B89               	decfsz	9,f
 13259  1680  2E7F               	goto	u6067
 13260  1681  0000               	nop
 13261  1682                     l6147:
 13262                           
 13263                           ;LCD/lcd.c: 88:   LCDsend(0x30);
 13264  1682  3030               	movlw	48
 13265  1683  3194  24D0  3196   	fcall	_LCDsend
 13266  1686                     l6149:
 13267                           
 13268                           ;LCD/lcd.c: 89:   LCDsend(0x34); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x30);
 13269  1686  3034               	movlw	52
 13270  1687  3194  24D0  3196   	fcall	_LCDsend
 13271  168A  30A6               	movlw	166
 13272  168B                     u6077:
 13273  168B  0B89               	decfsz	9,f
 13274  168C  2E8B               	goto	u6077
 13275  168D  3200               	nop2
 13276  168E                     l6151:
 13277  168E  3030               	movlw	48
 13278  168F  3194  24D0  3196   	fcall	_LCDsend
 13279  1692                     l6153:
 13280                           
 13281                           ;LCD/lcd.c: 90:   _delay((unsigned long)((100)*(4000000/4000000.0)));
 13282  1692  3021               	movlw	33
 13283  1693                     u6087:
 13284  1693  0B89               	decfsz	9,f
 13285  1694  2E93               	goto	u6087
 13286  1695  0000               	nop
 13287                           
 13288                           ;LCD/lcd.c: 91:   LCDsend(0x20);
 13289  1696  3020               	movlw	32
 13290  1697  3194  24D0  3196   	fcall	_LCDsend
 13291                           
 13292                           ;LCD/lcd.c: 92:   LCDsend(0x24); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x20);
 13293  169A  3024               	movlw	36
 13294  169B  3194  24D0  3196   	fcall	_LCDsend
 13295  169E                     l6155:
 13296  169E  30A6               	movlw	166
 13297  169F                     u6097:
 13298  169F  0B89               	decfsz	9,f
 13299  16A0  2E9F               	goto	u6097
 13300  16A1  3200               	nop2
 13301  16A2                     l6157:
 13302  16A2  3020               	movlw	32
 13303  16A3  3194  24D0  3196   	fcall	_LCDsend
 13304                           
 13305                           ;LCD/lcd.c: 93:   _delay((unsigned long)((5)*(4000000/4000.0)));
 13306  16A6  3007               	movlw	7
 13307  16A7  0022               	movlb	2	; select bank2
 13308  16A8  00C5               	movwf	??_LCDinit^(0+256)
 13309  16A9  307D               	movlw	125
 13310  16AA                     u6107:
 13311  16AA  0B89               	decfsz	9,f
 13312  16AB  2EAA               	goto	u6107
 13313  16AC  0BC5               	decfsz	??_LCDinit^(0+256),f
 13314  16AD  2EAA               	goto	u6107
 13315  16AE                     l6159:
 13316                           
 13317                           ;LCD/lcd.c: 95:   LCDsend2x4(0x28, 0);
 13318  16AE  0022               	movlb	2	; select bank2
 13319  16AF  01BF               	clrf	LCDsend2x4@mode^(0+256)
 13320  16B0  3028               	movlw	40
 13321  16B1  318A  228A  3196   	fcall	_LCDsend2x4
 13322  16B4                     l6161:
 13323                           
 13324                           ;LCD/lcd.c: 96:   LCDsend2x4(0x06, 0);
 13325  16B4  0022               	movlb	2	; select bank2
 13326  16B5  01BF               	clrf	LCDsend2x4@mode^(0+256)
 13327  16B6  3006               	movlw	6
 13328  16B7  318A  228A  3196   	fcall	_LCDsend2x4
 13329  16BA                     l6163:
 13330                           
 13331                           ;LCD/lcd.c: 97:   LCDsend2x4(0x0f, 0);
 13332  16BA  0022               	movlb	2	; select bank2
 13333  16BB  01BF               	clrf	LCDsend2x4@mode^(0+256)
 13334  16BC  300F               	movlw	15
 13335  16BD  318A  228A  3196   	fcall	_LCDsend2x4
 13336  16C0                     l6165:
 13337                           
 13338                           ;LCD/lcd.c: 98:   LCDsend2x4(0x01, 0);
 13339  16C0  0022               	movlb	2	; select bank2
 13340  16C1  01BF               	clrf	LCDsend2x4@mode^(0+256)
 13341  16C2  3001               	movlw	1
 13342  16C3  318A  228A  3196   	fcall	_LCDsend2x4
 13343                           
 13344                           ;LCD/lcd.c: 99:   _delay((unsigned long)((2)*(4000000/4000.0)));
 13345  16C6  3003               	movlw	3
 13346  16C7  0022               	movlb	2	; select bank2
 13347  16C8  00C5               	movwf	??_LCDinit^(0+256)
 13348  16C9  3097               	movlw	151
 13349  16CA                     u6117:
 13350  16CA  0B89               	decfsz	9,f
 13351  16CB  2ECA               	goto	u6117
 13352  16CC  0BC5               	decfsz	??_LCDinit^(0+256),f
 13353  16CD  2ECA               	goto	u6117
 13354  16CE  3200               	nop2
 13355  16CF                     l1605:
 13356  16CF  0008               	return
 13357  16D0                     __end_of_LCDinit:
 13358                           
 13359                           	psect	text25
 13360  0A8A                     __ptext25:	
 13361 ;; *************** function _LCDsend2x4 *****************
 13362 ;; Defined at:
 13363 ;;		line 56 in file "LCD/lcd.c"
 13364 ;; Parameters:    Size  Location     Type
 13365 ;;  c               1    wreg     unsigned char 
 13366 ;;  mode            1    2[BANK2 ] unsigned char 
 13367 ;; Auto vars:     Size  Location     Type
 13368 ;;  c               1    5[BANK2 ] unsigned char 
 13369 ;;  lc              1    7[BANK2 ] unsigned char 
 13370 ;;  hc              1    6[BANK2 ] unsigned char 
 13371 ;; Return value:  Size  Location     Type
 13372 ;;                  1    wreg      void 
 13373 ;; Registers used:
 13374 ;;		wreg, status,2, status,0, pclath, cstack
 13375 ;; Tracked objects:
 13376 ;;		On entry : 0/0
 13377 ;;		On exit  : 0/0
 13378 ;;		Unchanged: 0/0
 13379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13380 ;;      Params:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 13381 ;;      Locals:         0       0       0       3       0       0       0       0       0       0       0       0       
      +0       0
 13382 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 13383 ;;      Totals:         0       0       0       6       0       0       0       0       0       0       0       0       
      +0       0
 13384 ;;Total ram usage:        6 bytes
 13385 ;; Hardware stack levels used: 1
 13386 ;; Hardware stack levels required when called: 14
 13387 ;; This function calls:
 13388 ;;		_WriteI2C
 13389 ;; This function is called by:
 13390 ;;		_LCDinit
 13391 ;; This function uses a non-reentrant model
 13392 ;;
 13393                           
 13394                           
 13395                           ;psect for function _LCDsend2x4
 13396  0A8A                     _LCDsend2x4:
 13397                           
 13398                           ;incstack = 0
 13399                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 13400                           ;LCDsend2x4@c stored from wreg
 13401  0A8A  0022               	movlb	2	; select bank2
 13402  0A8B  00C2               	movwf	LCDsend2x4@c^(0+256)
 13403  0A8C                     l5987:
 13404                           
 13405                           ;LCD/lcd.c: 56: void LCDsend2x4(unsigned char c, unsigned char mode);LCD/lcd.c: 57: {;LC
      +                          D/lcd.c: 58:   unsigned char hc;;LCD/lcd.c: 59:   unsigned char lc;;LCD/lcd.c: 61:   hc 
      +                          = c & 0xf0;
 13406  0A8C  0842               	movf	LCDsend2x4@c^(0+256),w
 13407  0A8D  39F0               	andlw	240
 13408  0A8E  00C0               	movwf	??_LCDsend2x4^(0+256)
 13409  0A8F  0840               	movf	??_LCDsend2x4^(0+256),w
 13410  0A90  00C3               	movwf	LCDsend2x4@hc^(0+256)
 13411  0A91                     l5989:
 13412                           
 13413                           ;LCD/lcd.c: 62:   lc = (c << 4) & 0xf0;
 13414  0A91  0842               	movf	LCDsend2x4@c^(0+256),w
 13415  0A92  00C0               	movwf	??_LCDsend2x4^(0+256)
 13416  0A93  3003               	movlw	3
 13417  0A94                     u5205:
 13418  0A94  35C0               	lslf	??_LCDsend2x4^(0+256),f
 13419  0A95  3EFF               	addlw	-1
 13420  0A96  1D03               	skipz
 13421  0A97  2A94               	goto	u5205
 13422  0A98  3540               	lslf	??_LCDsend2x4^(0+256),w
 13423  0A99  39F0               	andlw	240
 13424  0A9A  00C1               	movwf	(??_LCDsend2x4+1)^(0+256)
 13425  0A9B  0841               	movf	(??_LCDsend2x4+1)^(0+256),w
 13426  0A9C  00C4               	movwf	LCDsend2x4@lc^(0+256)
 13427  0A9D                     l5991:	
 13428                           ;LCD/lcd.c: 64:   while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13429                           
 13430  0A9D  0023               	movlb	3	; select bank3
 13431  0A9E  0C0F               	rrf	15,w	;volatile
 13432  0A9F  0C89               	rrf	9,f
 13433  0AA0  3901               	andlw	1
 13434  0AA1  0022               	movlb	2	; select bank2
 13435  0AA2  00C0               	movwf	??_LCDsend2x4^(0+256)
 13436  0AA3  0023               	movlb	3	; select bank3
 13437  0AA4  0811               	movf	17,w	;volatile
 13438  0AA5  391F               	andlw	31
 13439  0AA6  0022               	movlb	2	; select bank2
 13440  0AA7  0440               	iorwf	??_LCDsend2x4^(0+256),w
 13441  0AA8  1D03               	btfss	3,2
 13442  0AA9  2AAB               	goto	u5211
 13443  0AAA  2AAC               	goto	u5210
 13444  0AAB                     u5211:
 13445  0AAB  2A9D               	goto	l5991
 13446  0AAC                     u5210:
 13447  0AAC                     l1568:	
 13448                           ;LCD/lcd.c: 65:   do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13449                           
 13450  0AAC  0023               	movlb	3	; select bank3
 13451  0AAD  1411               	bsf	17,0	;volatile
 13452  0AAE                     l1569:
 13453  0AAE  1811               	btfsc	17,0	;volatile
 13454  0AAF  2AB1               	goto	u5221
 13455  0AB0  2AB2               	goto	u5220
 13456  0AB1                     u5221:
 13457  0AB1  2AAE               	goto	l1569
 13458  0AB2                     u5220:
 13459  0AB2                     l5993:
 13460  0AB2  0023               	movlb	3	; select bank3
 13461  0AB3  0C0F               	rrf	15,w	;volatile
 13462  0AB4  0C89               	rrf	9,f
 13463  0AB5  3901               	andlw	1
 13464  0AB6  0022               	movlb	2	; select bank2
 13465  0AB7  00C0               	movwf	??_LCDsend2x4^(0+256)
 13466  0AB8  0023               	movlb	3	; select bank3
 13467  0AB9  0811               	movf	17,w	;volatile
 13468  0ABA  391F               	andlw	31
 13469  0ABB  0022               	movlb	2	; select bank2
 13470  0ABC  0440               	iorwf	??_LCDsend2x4^(0+256),w
 13471  0ABD  1D03               	btfss	3,2
 13472  0ABE  2AC0               	goto	u5231
 13473  0ABF  2AC1               	goto	u5230
 13474  0AC0                     u5231:
 13475  0AC0  2AB2               	goto	l5993
 13476  0AC1                     u5230:
 13477  0AC1                     l5995:
 13478                           
 13479                           ;LCD/lcd.c: 66:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13480  0AC1  304E               	movlw	78
 13481  0AC2  3188  2005  318A   	fcall	_WriteI2C
 13482  0AC5                     l5997:
 13483  0AC5  0023               	movlb	3	; select bank3
 13484  0AC6  0C0F               	rrf	15,w	;volatile
 13485  0AC7  0C89               	rrf	9,f
 13486  0AC8  3901               	andlw	1
 13487  0AC9  0022               	movlb	2	; select bank2
 13488  0ACA  00C0               	movwf	??_LCDsend2x4^(0+256)
 13489  0ACB  0023               	movlb	3	; select bank3
 13490  0ACC  0811               	movf	17,w	;volatile
 13491  0ACD  391F               	andlw	31
 13492  0ACE  0022               	movlb	2	; select bank2
 13493  0ACF  0440               	iorwf	??_LCDsend2x4^(0+256),w
 13494  0AD0  1D03               	btfss	3,2
 13495  0AD1  2AD3               	goto	u5241
 13496  0AD2  2AD4               	goto	u5240
 13497  0AD3                     u5241:
 13498  0AD3  2AC5               	goto	l5997
 13499  0AD4                     u5240:
 13500  0AD4                     l5999:
 13501                           
 13502                           ;LCD/lcd.c: 67:   WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 13503  0AD4  0843               	movf	LCDsend2x4@hc^(0+256),w
 13504  0AD5  043F               	iorwf	LCDsend2x4@mode^(0+256),w
 13505  0AD6  3808               	iorlw	8
 13506  0AD7  3188  2005  318A   	fcall	_WriteI2C
 13507  0ADA                     l6001:
 13508  0ADA  0023               	movlb	3	; select bank3
 13509  0ADB  0C0F               	rrf	15,w	;volatile
 13510  0ADC  0C89               	rrf	9,f
 13511  0ADD  3901               	andlw	1
 13512  0ADE  0022               	movlb	2	; select bank2
 13513  0ADF  00C0               	movwf	??_LCDsend2x4^(0+256)
 13514  0AE0  0023               	movlb	3	; select bank3
 13515  0AE1  0811               	movf	17,w	;volatile
 13516  0AE2  391F               	andlw	31
 13517  0AE3  0022               	movlb	2	; select bank2
 13518  0AE4  0440               	iorwf	??_LCDsend2x4^(0+256),w
 13519  0AE5  1D03               	btfss	3,2
 13520  0AE6  2AE8               	goto	u5251
 13521  0AE7  2AE9               	goto	u5250
 13522  0AE8                     u5251:
 13523  0AE8  2ADA               	goto	l6001
 13524  0AE9                     u5250:
 13525  0AE9                     l6003:
 13526                           
 13527                           ;LCD/lcd.c: 68:   WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STA
      +                          Tbits.R_W));
 13528  0AE9  0843               	movf	LCDsend2x4@hc^(0+256),w
 13529  0AEA  043F               	iorwf	LCDsend2x4@mode^(0+256),w
 13530  0AEB  380C               	iorlw	12
 13531  0AEC  3188  2005  318A   	fcall	_WriteI2C
 13532  0AEF                     l6005:
 13533  0AEF  0023               	movlb	3	; select bank3
 13534  0AF0  0C0F               	rrf	15,w	;volatile
 13535  0AF1  0C89               	rrf	9,f
 13536  0AF2  3901               	andlw	1
 13537  0AF3  0022               	movlb	2	; select bank2
 13538  0AF4  00C0               	movwf	??_LCDsend2x4^(0+256)
 13539  0AF5  0023               	movlb	3	; select bank3
 13540  0AF6  0811               	movf	17,w	;volatile
 13541  0AF7  391F               	andlw	31
 13542  0AF8  0022               	movlb	2	; select bank2
 13543  0AF9  0440               	iorwf	??_LCDsend2x4^(0+256),w
 13544  0AFA  1D03               	btfss	3,2
 13545  0AFB  2AFD               	goto	u5261
 13546  0AFC  2AFE               	goto	u5260
 13547  0AFD                     u5261:
 13548  0AFD  2AEF               	goto	l6005
 13549  0AFE                     u5260:
 13550  0AFE                     l1584:
 13551                           
 13552                           ;LCD/lcd.c: 69:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 13553  0AFE  0000               	nop
 13554  0AFF                     l6007:
 13555                           
 13556                           ;LCD/lcd.c: 70:   WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 13557  0AFF  0022               	movlb	2	; select bank2
 13558  0B00  0843               	movf	LCDsend2x4@hc^(0+256),w
 13559  0B01  043F               	iorwf	LCDsend2x4@mode^(0+256),w
 13560  0B02  3808               	iorlw	8
 13561  0B03  3188  2005  318A   	fcall	_WriteI2C
 13562  0B06                     l6009:
 13563  0B06  0023               	movlb	3	; select bank3
 13564  0B07  0C0F               	rrf	15,w	;volatile
 13565  0B08  0C89               	rrf	9,f
 13566  0B09  3901               	andlw	1
 13567  0B0A  0022               	movlb	2	; select bank2
 13568  0B0B  00C0               	movwf	??_LCDsend2x4^(0+256)
 13569  0B0C  0023               	movlb	3	; select bank3
 13570  0B0D  0811               	movf	17,w	;volatile
 13571  0B0E  391F               	andlw	31
 13572  0B0F  0022               	movlb	2	; select bank2
 13573  0B10  0440               	iorwf	??_LCDsend2x4^(0+256),w
 13574  0B11  1D03               	btfss	3,2
 13575  0B12  2B14               	goto	u5271
 13576  0B13  2B15               	goto	u5270
 13577  0B14                     u5271:
 13578  0B14  2B06               	goto	l6009
 13579  0B15                     u5270:
 13580  0B15                     l6011:
 13581                           
 13582                           ;LCD/lcd.c: 71:   WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 13583  0B15  0844               	movf	LCDsend2x4@lc^(0+256),w
 13584  0B16  043F               	iorwf	LCDsend2x4@mode^(0+256),w
 13585  0B17  3808               	iorlw	8
 13586  0B18  3188  2005  318A   	fcall	_WriteI2C
 13587  0B1B                     l6013:
 13588  0B1B  0023               	movlb	3	; select bank3
 13589  0B1C  0C0F               	rrf	15,w	;volatile
 13590  0B1D  0C89               	rrf	9,f
 13591  0B1E  3901               	andlw	1
 13592  0B1F  0022               	movlb	2	; select bank2
 13593  0B20  00C0               	movwf	??_LCDsend2x4^(0+256)
 13594  0B21  0023               	movlb	3	; select bank3
 13595  0B22  0811               	movf	17,w	;volatile
 13596  0B23  391F               	andlw	31
 13597  0B24  0022               	movlb	2	; select bank2
 13598  0B25  0440               	iorwf	??_LCDsend2x4^(0+256),w
 13599  0B26  1D03               	btfss	3,2
 13600  0B27  2B29               	goto	u5281
 13601  0B28  2B2A               	goto	u5280
 13602  0B29                     u5281:
 13603  0B29  2B1B               	goto	l6013
 13604  0B2A                     u5280:
 13605  0B2A                     l6015:
 13606                           
 13607                           ;LCD/lcd.c: 72:   WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STA
      +                          Tbits.R_W));
 13608  0B2A  0844               	movf	LCDsend2x4@lc^(0+256),w
 13609  0B2B  043F               	iorwf	LCDsend2x4@mode^(0+256),w
 13610  0B2C  380C               	iorlw	12
 13611  0B2D  3188  2005  318A   	fcall	_WriteI2C
 13612  0B30                     l6017:
 13613  0B30  0023               	movlb	3	; select bank3
 13614  0B31  0C0F               	rrf	15,w	;volatile
 13615  0B32  0C89               	rrf	9,f
 13616  0B33  3901               	andlw	1
 13617  0B34  0022               	movlb	2	; select bank2
 13618  0B35  00C0               	movwf	??_LCDsend2x4^(0+256)
 13619  0B36  0023               	movlb	3	; select bank3
 13620  0B37  0811               	movf	17,w	;volatile
 13621  0B38  391F               	andlw	31
 13622  0B39  0022               	movlb	2	; select bank2
 13623  0B3A  0440               	iorwf	??_LCDsend2x4^(0+256),w
 13624  0B3B  1D03               	btfss	3,2
 13625  0B3C  2B3E               	goto	u5291
 13626  0B3D  2B3F               	goto	u5290
 13627  0B3E                     u5291:
 13628  0B3E  2B30               	goto	l6017
 13629  0B3F                     u5290:
 13630  0B3F                     l1593:
 13631                           
 13632                           ;LCD/lcd.c: 73:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 13633  0B3F  0000               	nop
 13634  0B40                     l6019:
 13635                           
 13636                           ;LCD/lcd.c: 74:   WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 13637  0B40  0022               	movlb	2	; select bank2
 13638  0B41  0844               	movf	LCDsend2x4@lc^(0+256),w
 13639  0B42  043F               	iorwf	LCDsend2x4@mode^(0+256),w
 13640  0B43  3808               	iorlw	8
 13641  0B44  3188  2005  318A   	fcall	_WriteI2C
 13642  0B47                     l6021:
 13643  0B47  0023               	movlb	3	; select bank3
 13644  0B48  0C0F               	rrf	15,w	;volatile
 13645  0B49  0C89               	rrf	9,f
 13646  0B4A  3901               	andlw	1
 13647  0B4B  0022               	movlb	2	; select bank2
 13648  0B4C  00C0               	movwf	??_LCDsend2x4^(0+256)
 13649  0B4D  0023               	movlb	3	; select bank3
 13650  0B4E  0811               	movf	17,w	;volatile
 13651  0B4F  391F               	andlw	31
 13652  0B50  0022               	movlb	2	; select bank2
 13653  0B51  0440               	iorwf	??_LCDsend2x4^(0+256),w
 13654  0B52  1D03               	btfss	3,2
 13655  0B53  2B55               	goto	u5301
 13656  0B54  2B56               	goto	u5300
 13657  0B55                     u5301:
 13658  0B55  2B47               	goto	l6021
 13659  0B56                     u5300:
 13660  0B56                     l1597:	
 13661                           ;LCD/lcd.c: 75:   do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 13662                           
 13663  0B56  0023               	movlb	3	; select bank3
 13664  0B57  1511               	bsf	17,2	;volatile
 13665  0B58                     l1598:
 13666  0B58  1911               	btfsc	17,2	;volatile
 13667  0B59  2B5B               	goto	u5311
 13668  0B5A  2B5C               	goto	u5310
 13669  0B5B                     u5311:
 13670  0B5B  2B58               	goto	l1598
 13671  0B5C                     u5310:
 13672  0B5C                     l6023:
 13673                           
 13674                           ;LCD/lcd.c: 76:   _delay((unsigned long)((50)*(4000000/4000000.0)));
 13675  0B5C  3010               	movlw	16
 13676  0B5D                     u6127:
 13677  0B5D  0B89               	decfsz	9,f
 13678  0B5E  2B5D               	goto	u6127
 13679  0B5F  3200               	nop2
 13680  0B60                     l1602:
 13681  0B60  0008               	return
 13682  0B61                     __end_of_LCDsend2x4:
 13683                           
 13684                           	psect	text26
 13685  14D0                     __ptext26:	
 13686 ;; *************** function _LCDsend *****************
 13687 ;; Defined at:
 13688 ;;		line 17 in file "LCD/lcd.c"
 13689 ;; Parameters:    Size  Location     Type
 13690 ;;  c               1    wreg     unsigned char 
 13691 ;; Auto vars:     Size  Location     Type
 13692 ;;  c               1    3[BANK2 ] unsigned char 
 13693 ;; Return value:  Size  Location     Type
 13694 ;;                  1    wreg      void 
 13695 ;; Registers used:
 13696 ;;		wreg, status,2, status,0, pclath, cstack
 13697 ;; Tracked objects:
 13698 ;;		On entry : 0/0
 13699 ;;		On exit  : 0/0
 13700 ;;		Unchanged: 0/0
 13701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13703 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 13704 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 13705 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 13706 ;;Total ram usage:        2 bytes
 13707 ;; Hardware stack levels used: 1
 13708 ;; Hardware stack levels required when called: 14
 13709 ;; This function calls:
 13710 ;;		_WriteI2C
 13711 ;; This function is called by:
 13712 ;;		_LCDinit
 13713 ;; This function uses a non-reentrant model
 13714 ;;
 13715                           
 13716                           
 13717                           ;psect for function _LCDsend
 13718  14D0                     _LCDsend:
 13719                           
 13720                           ;incstack = 0
 13721                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
 13722                           ;LCDsend@c stored from wreg
 13723  14D0  0022               	movlb	2	; select bank2
 13724  14D1  00C0               	movwf	LCDsend@c^(0+256)
 13725  14D2                     l5973:
 13726  14D2                     l5975:	
 13727                           ;LCD/lcd.c: 17: void LCDsend(unsigned char c);LCD/lcd.c: 18: {;LCD/lcd.c: 19:   while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13728                           
 13729  14D2  0023               	movlb	3	; select bank3
 13730  14D3  0C0F               	rrf	15,w	;volatile
 13731  14D4  0C89               	rrf	9,f
 13732  14D5  3901               	andlw	1
 13733  14D6  0022               	movlb	2	; select bank2
 13734  14D7  00BF               	movwf	??_LCDsend^(0+256)
 13735  14D8  0023               	movlb	3	; select bank3
 13736  14D9  0811               	movf	17,w	;volatile
 13737  14DA  391F               	andlw	31
 13738  14DB  0022               	movlb	2	; select bank2
 13739  14DC  043F               	iorwf	??_LCDsend^(0+256),w
 13740  14DD  1D03               	btfss	3,2
 13741  14DE  2CE0               	goto	u5141
 13742  14DF  2CE1               	goto	u5140
 13743  14E0                     u5141:
 13744  14E0  2CD2               	goto	l5975
 13745  14E1                     u5140:
 13746  14E1                     l1446:	
 13747                           ;LCD/lcd.c: 20:   do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13748                           
 13749  14E1  0023               	movlb	3	; select bank3
 13750  14E2  1411               	bsf	17,0	;volatile
 13751  14E3                     l1447:
 13752  14E3  1811               	btfsc	17,0	;volatile
 13753  14E4  2CE6               	goto	u5151
 13754  14E5  2CE7               	goto	u5150
 13755  14E6                     u5151:
 13756  14E6  2CE3               	goto	l1447
 13757  14E7                     u5150:
 13758  14E7                     l5977:
 13759  14E7  0023               	movlb	3	; select bank3
 13760  14E8  0C0F               	rrf	15,w	;volatile
 13761  14E9  0C89               	rrf	9,f
 13762  14EA  3901               	andlw	1
 13763  14EB  0022               	movlb	2	; select bank2
 13764  14EC  00BF               	movwf	??_LCDsend^(0+256)
 13765  14ED  0023               	movlb	3	; select bank3
 13766  14EE  0811               	movf	17,w	;volatile
 13767  14EF  391F               	andlw	31
 13768  14F0  0022               	movlb	2	; select bank2
 13769  14F1  043F               	iorwf	??_LCDsend^(0+256),w
 13770  14F2  1D03               	btfss	3,2
 13771  14F3  2CF5               	goto	u5161
 13772  14F4  2CF6               	goto	u5160
 13773  14F5                     u5161:
 13774  14F5  2CE7               	goto	l5977
 13775  14F6                     u5160:
 13776  14F6                     l5979:
 13777                           
 13778                           ;LCD/lcd.c: 21:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13779  14F6  304E               	movlw	78
 13780  14F7  3188  2005  3194   	fcall	_WriteI2C
 13781  14FA                     l5981:
 13782  14FA  0023               	movlb	3	; select bank3
 13783  14FB  0C0F               	rrf	15,w	;volatile
 13784  14FC  0C89               	rrf	9,f
 13785  14FD  3901               	andlw	1
 13786  14FE  0022               	movlb	2	; select bank2
 13787  14FF  00BF               	movwf	??_LCDsend^(0+256)
 13788  1500  0023               	movlb	3	; select bank3
 13789  1501  0811               	movf	17,w	;volatile
 13790  1502  391F               	andlw	31
 13791  1503  0022               	movlb	2	; select bank2
 13792  1504  043F               	iorwf	??_LCDsend^(0+256),w
 13793  1505  1D03               	btfss	3,2
 13794  1506  2D08               	goto	u5171
 13795  1507  2D09               	goto	u5170
 13796  1508                     u5171:
 13797  1508  2CFA               	goto	l5981
 13798  1509                     u5170:
 13799  1509                     l5983:
 13800                           
 13801                           ;LCD/lcd.c: 22:   WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13802  1509  0840               	movf	LCDsend@c^(0+256),w
 13803  150A  3188  2005  3194   	fcall	_WriteI2C
 13804  150D                     l5985:
 13805  150D  0023               	movlb	3	; select bank3
 13806  150E  0C0F               	rrf	15,w	;volatile
 13807  150F  0C89               	rrf	9,f
 13808  1510  3901               	andlw	1
 13809  1511  0022               	movlb	2	; select bank2
 13810  1512  00BF               	movwf	??_LCDsend^(0+256)
 13811  1513  0023               	movlb	3	; select bank3
 13812  1514  0811               	movf	17,w	;volatile
 13813  1515  391F               	andlw	31
 13814  1516  0022               	movlb	2	; select bank2
 13815  1517  043F               	iorwf	??_LCDsend^(0+256),w
 13816  1518  1D03               	btfss	3,2
 13817  1519  2D1B               	goto	u5181
 13818  151A  2D1C               	goto	u5180
 13819  151B                     u5181:
 13820  151B  2D0D               	goto	l5985
 13821  151C                     u5180:
 13822  151C                     l1460:	
 13823                           ;LCD/lcd.c: 23:   do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 13824                           
 13825  151C  0023               	movlb	3	; select bank3
 13826  151D  1511               	bsf	17,2	;volatile
 13827  151E                     l1461:
 13828  151E  1911               	btfsc	17,2	;volatile
 13829  151F  2D21               	goto	u5191
 13830  1520  2D22               	goto	u5190
 13831  1521                     u5191:
 13832  1521  2D1E               	goto	l1461
 13833  1522                     u5190:
 13834  1522                     l1465:
 13835  1522  0008               	return
 13836  1523                     __end_of_LCDsend:
 13837                           
 13838                           	psect	text27
 13839  0805                     __ptext27:	
 13840 ;; *************** function _WriteI2C *****************
 13841 ;; Defined at:
 13842 ;;		line 59 in file "I2C/i2c.c"
 13843 ;; Parameters:    Size  Location     Type
 13844 ;;  data_out        1    wreg     unsigned char 
 13845 ;; Auto vars:     Size  Location     Type
 13846 ;;  data_out        1    1[BANK2 ] unsigned char 
 13847 ;; Return value:  Size  Location     Type
 13848 ;;                  1    wreg      char 
 13849 ;; Registers used:
 13850 ;;		wreg, status,2, status,0
 13851 ;; Tracked objects:
 13852 ;;		On entry : 0/0
 13853 ;;		On exit  : 0/0
 13854 ;;		Unchanged: 0/0
 13855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13857 ;;      Locals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 13858 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
 13859 ;;      Totals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
 13860 ;;Total ram usage:        2 bytes
 13861 ;; Hardware stack levels used: 1
 13862 ;; Hardware stack levels required when called: 13
 13863 ;; This function calls:
 13864 ;;		Nothing
 13865 ;; This function is called by:
 13866 ;;		_LCDsend
 13867 ;;		_LCDsend2x4
 13868 ;; This function uses a non-reentrant model
 13869 ;;
 13870                           
 13871                           
 13872                           ;psect for function _WriteI2C
 13873  0805                     _WriteI2C:
 13874                           
 13875                           ;incstack = 0
 13876                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 13877                           ;WriteI2C@data_out stored from wreg
 13878  0805  0022               	movlb	2	; select bank2
 13879  0806  00BE               	movwf	WriteI2C@data_out^(0+256)
 13880  0807                     l5589:
 13881                           
 13882                           ;I2C/i2c.c: 59: signed char WriteI2C( unsigned char data_out );I2C/i2c.c: 60: {;I2C/i2c.
      +                          c: 61:   SSP1BUF = data_out;
 13883  0807  083E               	movf	WriteI2C@data_out^(0+256),w
 13884  0808  0023               	movlb	3	; select bank3
 13885  0809  008C               	movwf	12	;volatile
 13886  080A                     l5591:
 13887                           
 13888                           ;I2C/i2c.c: 62:   if ( SSP1CON1bits.WCOL )
 13889  080A  1F90               	btfss	16,7	;volatile
 13890  080B  280D               	goto	u4711
 13891  080C  280E               	goto	u4710
 13892  080D                     u4711:
 13893  080D  280F               	goto	l5597
 13894  080E                     u4710:
 13895  080E  285E               	goto	l1409
 13896  080F                     l5597:
 13897                           
 13898                           ;I2C/i2c.c: 65:   {;I2C/i2c.c: 66:  if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)!=0x0
      +                          B) )
 13899  080F  300F               	movlw	15
 13900  0810  0510               	andwf	16,w	;volatile
 13901  0811  0022               	movlb	2	; select bank2
 13902  0812  00BD               	movwf	??_WriteI2C^(0+256)
 13903  0813  3008               	movlw	8
 13904  0814  063D               	xorwf	??_WriteI2C^(0+256),w
 13905  0815  1903               	btfsc	3,2
 13906  0816  2818               	goto	u4721
 13907  0817  2819               	goto	u4720
 13908  0818                     u4721:
 13909  0818  2832               	goto	l5609
 13910  0819                     u4720:
 13911  0819                     l5599:
 13912  0819  300F               	movlw	15
 13913  081A  0023               	movlb	3	; select bank3
 13914  081B  0510               	andwf	16,w	;volatile
 13915  081C  0022               	movlb	2	; select bank2
 13916  081D  00BD               	movwf	??_WriteI2C^(0+256)
 13917  081E  300B               	movlw	11
 13918  081F  063D               	xorwf	??_WriteI2C^(0+256),w
 13919  0820  1903               	btfsc	3,2
 13920  0821  2823               	goto	u4731
 13921  0822  2824               	goto	u4730
 13922  0823                     u4731:
 13923  0823  2832               	goto	l5609
 13924  0824                     u4730:
 13925  0824                     l5601:
 13926                           
 13927                           ;I2C/i2c.c: 67:  {;I2C/i2c.c: 68:        SSP1CON1bits.CKP = 1;
 13928  0824  0023               	movlb	3	; select bank3
 13929  0825  1610               	bsf	16,4	;volatile
 13930  0826                     l1412:	
 13931                           ;I2C/i2c.c: 69:        while ( !PIR3bits.SSP1IF );
 13932                           
 13933  0826  002E               	movlb	14	; select bank14
 13934  0827  1C0F               	btfss	15,0	;volatile
 13935  0828  282A               	goto	u4741
 13936  0829  282B               	goto	u4740
 13937  082A                     u4741:
 13938  082A  2826               	goto	l1412
 13939  082B                     u4740:
 13940  082B                     l1414:
 13941                           
 13942                           ;I2C/i2c.c: 71:        if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 13943  082B  0023               	movlb	3	; select bank3
 13944  082C  190F               	btfsc	15,2	;volatile
 13945  082D  282F               	goto	u4751
 13946  082E  2830               	goto	u4750
 13947  082F                     u4751:
 13948  082F  285E               	goto	l1409
 13949  0830                     u4750:
 13950  0830                     l5603:
 13951  0830  080F               	movf	15,w	;volatile
 13952  0831  285E               	goto	l1409
 13953  0832                     l5609:
 13954  0832  300F               	movlw	15
 13955  0833  0023               	movlb	3	; select bank3
 13956  0834  0510               	andwf	16,w	;volatile
 13957  0835  0022               	movlb	2	; select bank2
 13958  0836  00BD               	movwf	??_WriteI2C^(0+256)
 13959  0837  3008               	movlw	8
 13960  0838  063D               	xorwf	??_WriteI2C^(0+256),w
 13961  0839  1903               	btfsc	3,2
 13962  083A  283C               	goto	u4761
 13963  083B  283D               	goto	u4760
 13964  083C                     u4761:
 13965  083C  2848               	goto	l1421
 13966  083D                     u4760:
 13967  083D                     l5611:
 13968  083D  300F               	movlw	15
 13969  083E  0023               	movlb	3	; select bank3
 13970  083F  0510               	andwf	16,w	;volatile
 13971  0840  0022               	movlb	2	; select bank2
 13972  0841  00BD               	movwf	??_WriteI2C^(0+256)
 13973  0842  300B               	movlw	11
 13974  0843  063D               	xorwf	??_WriteI2C^(0+256),w
 13975  0844  1D03               	btfss	3,2
 13976  0845  2847               	goto	u4771
 13977  0846  2848               	goto	u4770
 13978  0847                     u4771:
 13979  0847  285E               	goto	l1409
 13980  0848                     u4770:
 13981  0848                     l1421:
 13982  0848  0023               	movlb	3	; select bank3
 13983  0849  180F               	btfsc	15,0	;volatile
 13984  084A  284C               	goto	u4781
 13985  084B  284D               	goto	u4780
 13986  084C                     u4781:
 13987  084C  2848               	goto	l1421
 13988  084D                     u4780:
 13989  084D                     l5613:
 13990  084D  0023               	movlb	3	; select bank3
 13991  084E  0C0F               	rrf	15,w	;volatile
 13992  084F  0C89               	rrf	9,f
 13993  0850  3901               	andlw	1
 13994  0851  0022               	movlb	2	; select bank2
 13995  0852  00BD               	movwf	??_WriteI2C^(0+256)
 13996  0853  0023               	movlb	3	; select bank3
 13997  0854  0811               	movf	17,w	;volatile
 13998  0855  391F               	andlw	31
 13999  0856  0022               	movlb	2	; select bank2
 14000  0857  043D               	iorwf	??_WriteI2C^(0+256),w
 14001  0858  1D03               	btfss	3,2
 14002  0859  285B               	goto	u4791
 14003  085A  285C               	goto	u4790
 14004  085B                     u4791:
 14005  085B  284D               	goto	l5613
 14006  085C                     u4790:
 14007  085C                     l1426:
 14008                           
 14009                           ;I2C/i2c.c: 84:      if ( SSP1CON2bits.ACKSTAT )
 14010  085C  0023               	movlb	3	; select bank3
 14011  085D  0811               	movf	17,w	;volatile
 14012  085E                     l1409:
 14013  085E  0008               	return
 14014  085F                     __end_of_WriteI2C:
 14015                           
 14016                           	psect	intentry
 14017  0004                     __pintentry:	
 14018 ;; *************** function _INTERRUPT_InterruptManager *****************
 14019 ;; Defined at:
 14020 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 14021 ;; Parameters:    Size  Location     Type
 14022 ;;		None
 14023 ;; Auto vars:     Size  Location     Type
 14024 ;;		None
 14025 ;; Return value:  Size  Location     Type
 14026 ;;                  1    wreg      void 
 14027 ;; Registers used:
 14028 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14029 ;; Tracked objects:
 14030 ;;		On entry : 0/0
 14031 ;;		On exit  : 0/0
 14032 ;;		Unchanged: 0/0
 14033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14038 ;;Total ram usage:        0 bytes
 14039 ;; Hardware stack levels used: 1
 14040 ;; Hardware stack levels required when called: 12
 14041 ;; This function calls:
 14042 ;;		_TMR1_ISR
 14043 ;; This function is called by:
 14044 ;;		Interrupt level 1
 14045 ;; This function uses a non-reentrant model
 14046 ;;
 14047                           
 14048  0004                     _INTERRUPT_InterruptManager:
 14049                           
 14050                           ;incstack = 0
 14051 ;; hardware stack exceeded
 14052  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 14053                           
 14054                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14055  0005  3180               	pagesel	$
 14056  0006                     i1l6339:
 14057                           
 14058                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
 14059  0006  1F0B               	btfss	11,6	;volatile
 14060  0007  2809               	goto	u550_21
 14061  0008  280A               	goto	u550_20
 14062  0009                     u550_21:
 14063  0009  2816               	goto	i1l119
 14064  000A                     u550_20:
 14065  000A                     i1l6341:
 14066                           
 14067                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
 14068  000A  002E               	movlb	14	; select bank14
 14069  000B  1C1A               	btfss	26,0	;volatile
 14070  000C  280E               	goto	u551_21
 14071  000D  280F               	goto	u551_20
 14072  000E                     u551_21:
 14073  000E  2816               	goto	i1l119
 14074  000F                     u551_20:
 14075  000F                     i1l6343:
 14076  000F  1C10               	btfss	16,0	;volatile
 14077  0010  2812               	goto	u552_21
 14078  0011  2813               	goto	u552_20
 14079  0012                     u552_21:
 14080  0012  2816               	goto	i1l119
 14081  0013                     u552_20:
 14082  0013                     i1l6345:
 14083                           
 14084                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
 14085  0013  3190  20D7  3180   	fcall	_TMR1_ISR
 14086  0016                     i1l119:	
 14087                           ;mcc_generated_files/interrupt_manager.c: 60:         }
 14088                           
 14089  0016  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 14090  0017  0009               	retfie
 14091  0018                     __end_of_INTERRUPT_InterruptManager:
 14092                           
 14093                           	psect	text29
 14094  10D7                     __ptext29:	
 14095 ;; *************** function _TMR1_ISR *****************
 14096 ;; Defined at:
 14097 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 14098 ;; Parameters:    Size  Location     Type
 14099 ;;		None
 14100 ;; Auto vars:     Size  Location     Type
 14101 ;;		None
 14102 ;; Return value:  Size  Location     Type
 14103 ;;                  1    wreg      void 
 14104 ;; Registers used:
 14105 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14106 ;; Tracked objects:
 14107 ;;		On entry : 0/0
 14108 ;;		On exit  : 0/0
 14109 ;;		Unchanged: 0/0
 14110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14115 ;;Total ram usage:        0 bytes
 14116 ;; Hardware stack levels used: 1
 14117 ;; Hardware stack levels required when called: 11
 14118 ;; This function calls:
 14119 ;;		_TMR1_CallBack
 14120 ;;		_TMR1_WriteTimer
 14121 ;; This function is called by:
 14122 ;;		_INTERRUPT_InterruptManager
 14123 ;; This function uses a non-reentrant model
 14124 ;;
 14125                           
 14126                           
 14127                           ;psect for function _TMR1_ISR
 14128  10D7                     _TMR1_ISR:
 14129  10D7                     i1l6063:	
 14130                           ;incstack = 0
 14131 ;; hardware stack exceeded
 14132                           ; Regs used in _TMR1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14133                           
 14134                           
 14135                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 14136  10D7  002E               	movlb	14	; select bank14
 14137  10D8  1010               	bcf	16,0	;volatile
 14138  10D9                     i1l6065:
 14139                           
 14140                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 14141  10D9  0022               	movlb	2	; select bank2
 14142  10DA  0862               	movf	(_timer1ReloadVal+1)^(0+256),w	;volatile
 14143  10DB  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 14144  10DC  0861               	movf	_timer1ReloadVal^(0+256),w	;volatile
 14145  10DD  00F0               	movwf	TMR1_WriteTimer@timerVal
 14146  10DE  3191  2141  3190   	fcall	_TMR1_WriteTimer
 14147  10E1                     i1l6067:
 14148                           
 14149                           ;mcc_generated_files/tmr1.c: 173:     TMR1_CallBack();
 14150  10E1  3190  20B0  3190   	fcall	_TMR1_CallBack
 14151  10E4                     i1l526:
 14152  10E4  0008               	return
 14153  10E5                     __end_of_TMR1_ISR:
 14154                           
 14155                           	psect	text30
 14156  1141                     __ptext30:	
 14157 ;; *************** function _TMR1_WriteTimer *****************
 14158 ;; Defined at:
 14159 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 14160 ;; Parameters:    Size  Location     Type
 14161 ;;  timerVal        2    0[COMMON] unsigned short 
 14162 ;; Auto vars:     Size  Location     Type
 14163 ;;		None
 14164 ;; Return value:  Size  Location     Type
 14165 ;;                  1    wreg      void 
 14166 ;; Registers used:
 14167 ;;		wreg, status,2
 14168 ;; Tracked objects:
 14169 ;;		On entry : 0/0
 14170 ;;		On exit  : 0/0
 14171 ;;		Unchanged: 0/0
 14172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14173 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14176 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14177 ;;Total ram usage:        2 bytes
 14178 ;; Hardware stack levels used: 1
 14179 ;; This function calls:
 14180 ;;		Nothing
 14181 ;; This function is called by:
 14182 ;;		_TMR1_ISR
 14183 ;;		_TMR1_Reload
 14184 ;; This function uses a non-reentrant model
 14185 ;;
 14186                           
 14187                           
 14188                           ;psect for function _TMR1_WriteTimer
 14189  1141                     _TMR1_WriteTimer:
 14190  1141                     i1l5935:	
 14191                           ;incstack = 0
 14192                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 14193                           
 14194                           
 14195                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 14196  1141  0024               	movlb	4	; select bank4
 14197  1142  1D0E               	btfss	14,2	;volatile
 14198  1143  2945               	goto	u512_21
 14199  1144  2946               	goto	u512_20
 14200  1145                     u512_21:
 14201  1145  294D               	goto	i1l5945
 14202  1146                     u512_20:
 14203  1146                     i1l5937:
 14204                           
 14205                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 14206  1146  100E               	bcf	14,0	;volatile
 14207  1147                     i1l5939:
 14208                           
 14209                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (uint8_t)(timerVal >> 8);
 14210  1147  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 14211  1148  008D               	movwf	13	;volatile
 14212  1149                     i1l5941:
 14213                           
 14214                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = (uint8_t)timerVal;
 14215  1149  0870               	movf	TMR1_WriteTimer@timerVal,w
 14216  114A  008C               	movwf	12	;volatile
 14217  114B                     i1l5943:
 14218                           
 14219                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 14220  114B  140E               	bsf	14,0	;volatile
 14221                           
 14222                           ;mcc_generated_files/tmr1.c: 140:     }
 14223  114C  2951               	goto	i1l514
 14224  114D                     i1l5945:
 14225                           
 14226                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 14227  114D  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 14228  114E  008D               	movwf	13	;volatile
 14229  114F                     i1l5947:
 14230                           
 14231                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = (uint8_t)timerVal;
 14232  114F  0870               	movf	TMR1_WriteTimer@timerVal,w
 14233  1150  008C               	movwf	12	;volatile
 14234  1151                     i1l514:
 14235  1151  0008               	return
 14236  1152                     __end_of_TMR1_WriteTimer:
 14237                           
 14238                           	psect	text31
 14239  10B0                     __ptext31:	
 14240 ;; *************** function _TMR1_CallBack *****************
 14241 ;; Defined at:
 14242 ;;		line 176 in file "mcc_generated_files/tmr1.c"
 14243 ;; Parameters:    Size  Location     Type
 14244 ;;		None
 14245 ;; Auto vars:     Size  Location     Type
 14246 ;;		None
 14247 ;; Return value:  Size  Location     Type
 14248 ;;                  1    wreg      void 
 14249 ;; Registers used:
 14250 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14251 ;; Tracked objects:
 14252 ;;		On entry : 0/0
 14253 ;;		On exit  : 0/0
 14254 ;;		Unchanged: 0/0
 14255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14260 ;;Total ram usage:        0 bytes
 14261 ;; Hardware stack levels used: 1
 14262 ;; Hardware stack levels required when called: 10
 14263 ;; This function calls:
 14264 ;;		Absolute function
 14265 ;;		_TMR1_DefaultInterruptHandler
 14266 ;;		_timerInterrupt
 14267 ;; This function is called by:
 14268 ;;		_TMR1_ISR
 14269 ;; This function uses a non-reentrant model
 14270 ;;
 14271                           
 14272                           
 14273                           ;psect for function _TMR1_CallBack
 14274  10B0                     _TMR1_CallBack:
 14275  10B0                     i1l5949:	
 14276                           ;incstack = 0
 14277 ;; hardware stack exceeded
 14278                           ; Regs used in _TMR1_CallBack: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14279                           
 14280                           
 14281                           ;mcc_generated_files/tmr1.c: 179:     if(TMR1_InterruptHandler)
 14282  10B0  0022               	movlb	2	; select bank2
 14283  10B1  085F               	movf	_TMR1_InterruptHandler^(0+256),w
 14284  10B2  0460               	iorwf	(_TMR1_InterruptHandler+1)^(0+256),w
 14285  10B3  1903               	btfsc	3,2
 14286  10B4  28B6               	goto	u513_21
 14287  10B5  28B7               	goto	u513_20
 14288  10B6                     u513_21:
 14289  10B6  28BC               	goto	i1l530
 14290  10B7                     u513_20:
 14291  10B7                     i1l5951:
 14292                           
 14293                           ;mcc_generated_files/tmr1.c: 180:     {;mcc_generated_files/tmr1.c: 181:         TMR1_In
      +                          terruptHandler();
 14294  10B7  0860               	movf	(_TMR1_InterruptHandler+1)^(0+256),w
 14295  10B8  008A               	movwf	10
 14296  10B9  085F               	movf	_TMR1_InterruptHandler^(0+256),w
 14297  10BA  000A               	callw
 14298  10BB  3190               	pagesel	$
 14299  10BC                     i1l530:
 14300  10BC  0008               	return
 14301  10BD                     __end_of_TMR1_CallBack:
 14302                           
 14303                           	psect	text32
 14304  0003                     __ptext32:	
 14305 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 14306 ;; Defined at:
 14307 ;;		line 189 in file "mcc_generated_files/tmr1.c"
 14308 ;; Parameters:    Size  Location     Type
 14309 ;;		None
 14310 ;; Auto vars:     Size  Location     Type
 14311 ;;		None
 14312 ;; Return value:  Size  Location     Type
 14313 ;;                  1    wreg      void 
 14314 ;; Registers used:
 14315 ;;		None
 14316 ;; Tracked objects:
 14317 ;;		On entry : 0/0
 14318 ;;		On exit  : 0/0
 14319 ;;		Unchanged: 0/0
 14320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14325 ;;Total ram usage:        0 bytes
 14326 ;; Hardware stack levels used: 1
 14327 ;; This function calls:
 14328 ;;		Nothing
 14329 ;; This function is called by:
 14330 ;;		_TMR1_Initialize
 14331 ;;		_TMR1_CallBack
 14332 ;; This function uses a non-reentrant model
 14333 ;;
 14334                           
 14335                           
 14336                           ;psect for function _TMR1_DefaultInterruptHandler
 14337  0003                     _TMR1_DefaultInterruptHandler:
 14338  0003                     i1l536:	
 14339                           ;incstack = 0
 14340                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 14341                           
 14342  0003  0008               	return
 14343  0004                     __end_of_TMR1_DefaultInterruptHandler:
 14344                           
 14345                           	psect	text33
 14346  0316                     __ptext33:	
 14347 ;; *************** function _timerInterrupt *****************
 14348 ;; Defined at:
 14349 ;;		line 160 in file "main.c"
 14350 ;; Parameters:    Size  Location     Type
 14351 ;;		None
 14352 ;; Auto vars:     Size  Location     Type
 14353 ;;  lum             2   76[BANK1 ] unsigned short 
 14354 ;;  value           1   75[BANK1 ] unsigned char 
 14355 ;;  temperature     1   74[BANK1 ] unsigned char 
 14356 ;; Return value:  Size  Location     Type
 14357 ;;                  1    wreg      void 
 14358 ;; Registers used:
 14359 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14360 ;; Tracked objects:
 14361 ;;		On entry : 0/0
 14362 ;;		On exit  : 0/0
 14363 ;;		Unchanged: 0/0
 14364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14366 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14367 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14368 ;;      Totals:         0       2       4       0       0       0       0       0       0       0       0       0       
      +0       0
 14369 ;;Total ram usage:        6 bytes
 14370 ;; Hardware stack levels used: 1
 14371 ;; Hardware stack levels required when called: 9
 14372 ;; This function calls:
 14373 ;;		_ADCC_GetSingleConversion
 14374 ;;		_PWM6_LoadDutyValue
 14375 ;;		_activateAlarm
 14376 ;;		_printLCD
 14377 ;;		_readTC74
 14378 ;;		_writeRingBuffer
 14379 ;;		i1_DATAEE_WriteByte
 14380 ;;		i1_deactivateAlarm
 14381 ;;		i1_deactivatePWM
 14382 ;; This function is called by:
 14383 ;;		_main
 14384 ;;		_TMR1_CallBack
 14385 ;; This function uses a non-reentrant model
 14386 ;;
 14387                           
 14388                           
 14389                           ;psect for function _timerInterrupt
 14390  0316                     _timerInterrupt:
 14391  0316                     i1l5619:	
 14392                           ;incstack = 0
 14393 ;; hardware stack exceeded
 14394                           ; Regs used in _timerInterrupt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14395                           
 14396                           
 14397                           ;main.c: 161:     uint8_t value;;main.c: 162:    adc_result_t lum = ADCC_GetSingleConver
      +                          sion(channel_ANA0);
 14398  0316  3000               	movlw	0
 14399  0317  3191  2152  3183   	fcall	_ADCC_GetSingleConversion
 14400  031A  0871               	movf	?_ADCC_GetSingleConversion+1,w
 14401  031B  0021               	movlb	1	; select bank1
 14402  031C  00ED               	movwf	(timerInterrupt@lum+1)^(0+128)
 14403  031D  0870               	movf	?_ADCC_GetSingleConversion,w
 14404  031E  00EC               	movwf	timerInterrupt@lum^(0+128)
 14405  031F                     i1l5621:
 14406                           
 14407                           ;main.c: 164:    if(mode==0){
 14408  031F  0022               	movlb	2	; select bank2
 14409  0320  0829               	movf	_mode^(0+256),w
 14410  0321  1D03               	btfss	3,2
 14411  0322  2B24               	goto	u480_21
 14412  0323  2B25               	goto	u480_20
 14413  0324                     u480_21:
 14414  0324  2B52               	goto	i1l5641
 14415  0325                     u480_20:
 14416  0325                     i1l5623:
 14417                           
 14418                           ;main.c: 165:         if(seconds<59){
 14419  0325  303B               	movlw	59
 14420  0326  022D               	subwf	_seconds^(0+256),w
 14421  0327  1803               	skipnc
 14422  0328  2B2A               	goto	u481_21
 14423  0329  2B2B               	goto	u481_20
 14424  032A                     u481_21:
 14425  032A  2B32               	goto	i1l5627
 14426  032B                     u481_20:
 14427  032B                     i1l5625:
 14428                           
 14429                           ;main.c: 166:             seconds++;
 14430  032B  3001               	movlw	1
 14431  032C  0020               	movlb	0	; select bank0
 14432  032D  00EC               	movwf	??_timerInterrupt
 14433  032E  086C               	movf	??_timerInterrupt,w
 14434  032F  0022               	movlb	2	; select bank2
 14435  0330  07AD               	addwf	_seconds^(0+256),f
 14436                           
 14437                           ;main.c: 167:         }else if(minutes<59){
 14438  0331  2B52               	goto	i1l5641
 14439  0332                     i1l5627:
 14440  0332  303B               	movlw	59
 14441  0333  022E               	subwf	_minutes^(0+256),w
 14442  0334  1803               	skipnc
 14443  0335  2B37               	goto	u482_21
 14444  0336  2B38               	goto	u482_20
 14445  0337                     u482_21:
 14446  0337  2B40               	goto	i1l5633
 14447  0338                     u482_20:
 14448  0338                     i1l5629:
 14449                           
 14450                           ;main.c: 168:             seconds=0;
 14451  0338  01AD               	clrf	_seconds^(0+256)
 14452  0339                     i1l5631:
 14453                           
 14454                           ;main.c: 169:             minutes++;
 14455  0339  3001               	movlw	1
 14456  033A  0020               	movlb	0	; select bank0
 14457  033B  00EC               	movwf	??_timerInterrupt
 14458  033C  086C               	movf	??_timerInterrupt,w
 14459  033D  0022               	movlb	2	; select bank2
 14460  033E  07AE               	addwf	_minutes^(0+256),f
 14461                           
 14462                           ;main.c: 170:         }else if(hours<24){
 14463  033F  2B52               	goto	i1l5641
 14464  0340                     i1l5633:
 14465  0340  3018               	movlw	24
 14466  0341  022F               	subwf	_hours^(0+256),w
 14467  0342  1803               	skipnc
 14468  0343  2B45               	goto	u483_21
 14469  0344  2B46               	goto	u483_20
 14470  0345                     u483_21:
 14471  0345  2B4F               	goto	i1l5639
 14472  0346                     u483_20:
 14473  0346                     i1l5635:
 14474                           
 14475                           ;main.c: 171:             seconds=0;
 14476  0346  01AD               	clrf	_seconds^(0+256)
 14477                           
 14478                           ;main.c: 172:             minutes=0;
 14479  0347  01AE               	clrf	_minutes^(0+256)
 14480  0348                     i1l5637:
 14481                           
 14482                           ;main.c: 173:             hours++;
 14483  0348  3001               	movlw	1
 14484  0349  0020               	movlb	0	; select bank0
 14485  034A  00EC               	movwf	??_timerInterrupt
 14486  034B  086C               	movf	??_timerInterrupt,w
 14487  034C  0022               	movlb	2	; select bank2
 14488  034D  07AF               	addwf	_hours^(0+256),f
 14489                           
 14490                           ;main.c: 174:         }else{
 14491  034E  2B52               	goto	i1l5641
 14492  034F                     i1l5639:
 14493                           
 14494                           ;main.c: 175:             seconds=0;
 14495  034F  01AD               	clrf	_seconds^(0+256)
 14496                           
 14497                           ;main.c: 176:             minutes=0;
 14498  0350  01AE               	clrf	_minutes^(0+256)
 14499                           
 14500                           ;main.c: 177:             hours=0;
 14501  0351  01AF               	clrf	_hours^(0+256)
 14502  0352                     i1l5641:
 14503                           
 14504                           ;main.c: 181:     if(lum>0x2FD){
 14505  0352  3002               	movlw	2
 14506  0353  0021               	movlb	1	; select bank1
 14507  0354  026D               	subwf	(timerInterrupt@lum+1)^(0+128),w
 14508  0355  30FE               	movlw	254
 14509  0356  1903               	skipnz
 14510  0357  026C               	subwf	timerInterrupt@lum^(0+128),w
 14511  0358  1C03               	skipc
 14512  0359  2B5B               	goto	u484_21
 14513  035A  2B5C               	goto	u484_20
 14514  035B                     u484_21:
 14515  035B  2B63               	goto	i1l5645
 14516  035C                     u484_20:
 14517  035C                     i1l5643:
 14518                           
 14519                           ;main.c: 182:         value=3;
 14520  035C  3003               	movlw	3
 14521  035D  0020               	movlb	0	; select bank0
 14522  035E  00EC               	movwf	??_timerInterrupt
 14523  035F  086C               	movf	??_timerInterrupt,w
 14524  0360  0021               	movlb	1	; select bank1
 14525  0361  00EB               	movwf	timerInterrupt@value^(0+128)
 14526                           
 14527                           ;main.c: 183:     }else if(lum<0x2FD && lum>0x1FE){
 14528  0362  2B92               	goto	i1l5659
 14529  0363                     i1l5645:
 14530  0363  3002               	movlw	2
 14531  0364  026D               	subwf	(timerInterrupt@lum+1)^(0+128),w
 14532  0365  30FD               	movlw	253
 14533  0366  1903               	skipnz
 14534  0367  026C               	subwf	timerInterrupt@lum^(0+128),w
 14535  0368  1803               	skipnc
 14536  0369  2B6B               	goto	u485_21
 14537  036A  2B6C               	goto	u485_20
 14538  036B                     u485_21:
 14539  036B  2B7C               	goto	i1l5651
 14540  036C                     u485_20:
 14541  036C                     i1l5647:
 14542  036C  3001               	movlw	1
 14543  036D  026D               	subwf	(timerInterrupt@lum+1)^(0+128),w
 14544  036E  30FF               	movlw	255
 14545  036F  1903               	skipnz
 14546  0370  026C               	subwf	timerInterrupt@lum^(0+128),w
 14547  0371  1C03               	skipc
 14548  0372  2B74               	goto	u486_21
 14549  0373  2B75               	goto	u486_20
 14550  0374                     u486_21:
 14551  0374  2B7C               	goto	i1l5651
 14552  0375                     u486_20:
 14553  0375                     i1l5649:
 14554                           
 14555                           ;main.c: 184:         value=2;
 14556  0375  3002               	movlw	2
 14557  0376  0020               	movlb	0	; select bank0
 14558  0377  00EC               	movwf	??_timerInterrupt
 14559  0378  086C               	movf	??_timerInterrupt,w
 14560  0379  0021               	movlb	1	; select bank1
 14561  037A  00EB               	movwf	timerInterrupt@value^(0+128)
 14562                           
 14563                           ;main.c: 185:     }else if(lum<0x1FE && lum>0xFF){
 14564  037B  2B92               	goto	i1l5659
 14565  037C                     i1l5651:
 14566  037C  3001               	movlw	1
 14567  037D  026D               	subwf	(timerInterrupt@lum+1)^(0+128),w
 14568  037E  30FE               	movlw	254
 14569  037F  1903               	skipnz
 14570  0380  026C               	subwf	timerInterrupt@lum^(0+128),w
 14571  0381  1803               	skipnc
 14572  0382  2B84               	goto	u487_21
 14573  0383  2B85               	goto	u487_20
 14574  0384                     u487_21:
 14575  0384  2B91               	goto	i1l5657
 14576  0385                     u487_20:
 14577  0385                     i1l5653:
 14578  0385  3001               	movlw	1
 14579  0386  026D               	subwf	(timerInterrupt@lum+1)^(0+128),w
 14580  0387  3000               	movlw	0
 14581  0388  1903               	skipnz
 14582  0389  026C               	subwf	timerInterrupt@lum^(0+128),w
 14583  038A  1C03               	skipc
 14584  038B  2B8D               	goto	u488_21
 14585  038C  2B8E               	goto	u488_20
 14586  038D                     u488_21:
 14587  038D  2B91               	goto	i1l5657
 14588  038E                     u488_20:
 14589  038E                     i1l5655:
 14590                           
 14591                           ;main.c: 186:         value=1;
 14592  038E  01EB               	clrf	timerInterrupt@value^(0+128)
 14593  038F  0AEB               	incf	timerInterrupt@value^(0+128),f
 14594                           
 14595                           ;main.c: 187:     }else{
 14596  0390  2B92               	goto	i1l5659
 14597  0391                     i1l5657:
 14598                           
 14599                           ;main.c: 188:         value=0;
 14600  0391  01EB               	clrf	timerInterrupt@value^(0+128)
 14601  0392                     i1l5659:
 14602                           
 14603                           ;main.c: 191:     unsigned char temperature = readTC74();
 14604  0392  3186  26D2  3183   	fcall	_readTC74
 14605  0395  0020               	movlb	0	; select bank0
 14606  0396  00EC               	movwf	??_timerInterrupt
 14607  0397  086C               	movf	??_timerInterrupt,w
 14608  0398  0021               	movlb	1	; select bank1
 14609  0399  00EA               	movwf	timerInterrupt@temperature^(0+128)
 14610  039A                     i1l5661:
 14611                           
 14612                           ;main.c: 192:     if(mode==0){
 14613  039A  0022               	movlb	2	; select bank2
 14614  039B  0829               	movf	_mode^(0+256),w
 14615  039C  1D03               	btfss	3,2
 14616  039D  2B9F               	goto	u489_21
 14617  039E  2BA0               	goto	u489_20
 14618  039F                     u489_21:
 14619  039F  2BAD               	goto	i1l5665
 14620  03A0                     u489_20:
 14621  03A0                     i1l5663:
 14622                           
 14623                           ;main.c: 193:         variable1=temperature;
 14624  03A0  0021               	movlb	1	; select bank1
 14625  03A1  086A               	movf	timerInterrupt@temperature^(0+128),w
 14626  03A2  0020               	movlb	0	; select bank0
 14627  03A3  00EC               	movwf	??_timerInterrupt
 14628  03A4  086C               	movf	??_timerInterrupt,w
 14629  03A5  0021               	movlb	1	; select bank1
 14630  03A6  00EF               	movwf	_variable1^(0+128)
 14631                           
 14632                           ;main.c: 194:         variable2=value;
 14633  03A7  086B               	movf	timerInterrupt@value^(0+128),w
 14634  03A8  0020               	movlb	0	; select bank0
 14635  03A9  00EC               	movwf	??_timerInterrupt
 14636  03AA  086C               	movf	??_timerInterrupt,w
 14637  03AB  0021               	movlb	1	; select bank1
 14638  03AC  00EE               	movwf	_variable2^(0+128)
 14639  03AD                     i1l5665:
 14640                           
 14641                           ;main.c: 197:     printLCD();
 14642  03AD  3197  275E  3183   	fcall	_printLCD
 14643  03B0                     i1l5667:
 14644                           
 14645                           ;main.c: 199:     if(counter == PMON){
 14646  03B0  0022               	movlb	2	; select bank2
 14647  03B1  086D               	movf	_counter^(0+256),w
 14648  03B2  0637               	xorwf	_PMON^(0+256),w
 14649  03B3  1D03               	skipz
 14650  03B4  2BB6               	goto	u490_21
 14651  03B5  2BB7               	goto	u490_20
 14652  03B6                     u490_21:
 14653  03B6  2C74               	goto	i1l5721
 14654  03B7                     u490_20:
 14655  03B7                     i1l5669:
 14656                           
 14657                           ;main.c: 200:         if(variable1 > max_temperature){
 14658  03B7  0021               	movlb	1	; select bank1
 14659  03B8  086F               	movf	_variable1^(0+128),w
 14660  03B9  0022               	movlb	2	; select bank2
 14661  03BA  0269               	subwf	_max_temperature^(0+256),w
 14662  03BB  1803               	skipnc
 14663  03BC  2BBE               	goto	u491_21
 14664  03BD  2BBF               	goto	u491_20
 14665  03BE                     u491_21:
 14666  03BE  2BD3               	goto	i1l5675
 14667  03BF                     u491_20:
 14668  03BF                     i1l5671:
 14669                           
 14670                           ;main.c: 201:             DATAEE_WriteByte(0x7053, last_temperature);
 14671  03BF  3053               	movlw	83
 14672  03C0  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 14673  03C1  3070               	movlw	112
 14674  03C2  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 14675  03C3  086A               	movf	_last_temperature^(0+256),w
 14676  03C4  0020               	movlb	0	; select bank0
 14677  03C5  00EC               	movwf	??_timerInterrupt
 14678  03C6  086C               	movf	??_timerInterrupt,w
 14679  03C7  00F2               	movwf	i1DATAEE_WriteByte@bData
 14680  03C8  3192  223E  3183   	fcall	i1_DATAEE_WriteByte
 14681  03CB                     i1l5673:
 14682                           
 14683                           ;main.c: 202:             max_temperature=variable1;
 14684  03CB  0021               	movlb	1	; select bank1
 14685  03CC  086F               	movf	_variable1^(0+128),w
 14686  03CD  0020               	movlb	0	; select bank0
 14687  03CE  00EC               	movwf	??_timerInterrupt
 14688  03CF  086C               	movf	??_timerInterrupt,w
 14689  03D0  0022               	movlb	2	; select bank2
 14690  03D1  00E9               	movwf	_max_temperature^(0+256)
 14691                           
 14692                           ;main.c: 203:         }else if(variable1 < min_temperature){
 14693  03D2  2BEE               	goto	i1l5681
 14694  03D3                     i1l5675:
 14695  03D3  082A               	movf	_min_temperature^(0+256),w
 14696  03D4  0021               	movlb	1	; select bank1
 14697  03D5  026F               	subwf	_variable1^(0+128),w
 14698  03D6  1803               	skipnc
 14699  03D7  2BD9               	goto	u492_21
 14700  03D8  2BDA               	goto	u492_20
 14701  03D9                     u492_21:
 14702  03D9  2BEE               	goto	i1l5681
 14703  03DA                     u492_20:
 14704  03DA                     i1l5677:
 14705                           
 14706                           ;main.c: 204:             DATAEE_WriteByte(0x7054, last_temperature);
 14707  03DA  3054               	movlw	84
 14708  03DB  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 14709  03DC  3070               	movlw	112
 14710  03DD  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 14711  03DE  0022               	movlb	2	; select bank2
 14712  03DF  086A               	movf	_last_temperature^(0+256),w
 14713  03E0  0020               	movlb	0	; select bank0
 14714  03E1  00EC               	movwf	??_timerInterrupt
 14715  03E2  086C               	movf	??_timerInterrupt,w
 14716  03E3  00F2               	movwf	i1DATAEE_WriteByte@bData
 14717  03E4  3192  223E  3183   	fcall	i1_DATAEE_WriteByte
 14718  03E7                     i1l5679:
 14719                           
 14720                           ;main.c: 205:             min_temperature=variable1;
 14721  03E7  0021               	movlb	1	; select bank1
 14722  03E8  086F               	movf	_variable1^(0+128),w
 14723  03E9  0020               	movlb	0	; select bank0
 14724  03EA  00EC               	movwf	??_timerInterrupt
 14725  03EB  086C               	movf	??_timerInterrupt,w
 14726  03EC  0022               	movlb	2	; select bank2
 14727  03ED  00AA               	movwf	_min_temperature^(0+256)
 14728  03EE                     i1l5681:
 14729                           
 14730                           ;main.c: 207:         if(variable2 > max_luminosity){
 14731  03EE  0021               	movlb	1	; select bank1
 14732  03EF  086E               	movf	_variable2^(0+128),w
 14733  03F0  0022               	movlb	2	; select bank2
 14734  03F1  026F               	subwf	_max_luminosity^(0+256),w
 14735  03F2  1803               	skipnc
 14736  03F3  2BF5               	goto	u493_21
 14737  03F4  2BF6               	goto	u493_20
 14738  03F5                     u493_21:
 14739  03F5  2C0A               	goto	i1l5687
 14740  03F6                     u493_20:
 14741  03F6                     i1l5683:
 14742                           
 14743                           ;main.c: 208:             DATAEE_WriteByte(0x7055, last_luminosity);
 14744  03F6  3055               	movlw	85
 14745  03F7  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 14746  03F8  3070               	movlw	112
 14747  03F9  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 14748  03FA  086E               	movf	_last_luminosity^(0+256),w
 14749  03FB  0020               	movlb	0	; select bank0
 14750  03FC  00EC               	movwf	??_timerInterrupt
 14751  03FD  086C               	movf	??_timerInterrupt,w
 14752  03FE  00F2               	movwf	i1DATAEE_WriteByte@bData
 14753  03FF  3192  223E  3183   	fcall	i1_DATAEE_WriteByte
 14754  0402                     i1l5685:
 14755                           
 14756                           ;main.c: 209:             max_luminosity=variable2;
 14757  0402  0021               	movlb	1	; select bank1
 14758  0403  086E               	movf	_variable2^(0+128),w
 14759  0404  0020               	movlb	0	; select bank0
 14760  0405  00EC               	movwf	??_timerInterrupt
 14761  0406  086C               	movf	??_timerInterrupt,w
 14762  0407  0022               	movlb	2	; select bank2
 14763  0408  00EF               	movwf	_max_luminosity^(0+256)
 14764                           
 14765                           ;main.c: 210:         }else if(variable2 < min_luminosity){
 14766  0409  2C25               	goto	i1l5693
 14767  040A                     i1l5687:
 14768  040A  082C               	movf	_min_luminosity^(0+256),w
 14769  040B  0021               	movlb	1	; select bank1
 14770  040C  026E               	subwf	_variable2^(0+128),w
 14771  040D  1803               	skipnc
 14772  040E  2C10               	goto	u494_21
 14773  040F  2C11               	goto	u494_20
 14774  0410                     u494_21:
 14775  0410  2C25               	goto	i1l5693
 14776  0411                     u494_20:
 14777  0411                     i1l5689:
 14778                           
 14779                           ;main.c: 211:             DATAEE_WriteByte(0x7056, last_luminosity);
 14780  0411  3056               	movlw	86
 14781  0412  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 14782  0413  3070               	movlw	112
 14783  0414  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 14784  0415  0022               	movlb	2	; select bank2
 14785  0416  086E               	movf	_last_luminosity^(0+256),w
 14786  0417  0020               	movlb	0	; select bank0
 14787  0418  00EC               	movwf	??_timerInterrupt
 14788  0419  086C               	movf	??_timerInterrupt,w
 14789  041A  00F2               	movwf	i1DATAEE_WriteByte@bData
 14790  041B  3192  223E  3183   	fcall	i1_DATAEE_WriteByte
 14791  041E                     i1l5691:
 14792                           
 14793                           ;main.c: 212:             min_luminosity=variable2;
 14794  041E  0021               	movlb	1	; select bank1
 14795  041F  086E               	movf	_variable2^(0+128),w
 14796  0420  0020               	movlb	0	; select bank0
 14797  0421  00EC               	movwf	??_timerInterrupt
 14798  0422  086C               	movf	??_timerInterrupt,w
 14799  0423  0022               	movlb	2	; select bank2
 14800  0424  00AC               	movwf	_min_luminosity^(0+256)
 14801  0425                     i1l5693:
 14802                           
 14803                           ;main.c: 214:         if(variable1 > t_threshold || alarm1==1){
 14804  0425  0021               	movlb	1	; select bank1
 14805  0426  086F               	movf	_variable1^(0+128),w
 14806  0427  0022               	movlb	2	; select bank2
 14807  0428  026C               	subwf	_t_threshold^(0+256),w
 14808  0429  1C03               	skipc
 14809  042A  2C2C               	goto	u495_21
 14810  042B  2C2D               	goto	u495_20
 14811  042C                     u495_21:
 14812  042C  2C32               	goto	i1l5697
 14813  042D                     u495_20:
 14814  042D                     i1l5695:
 14815  042D  0328               	decf	_alarm1^(0+256),w
 14816  042E  1D03               	btfss	3,2
 14817  042F  2C31               	goto	u496_21
 14818  0430  2C32               	goto	u496_20
 14819  0431                     u496_21:
 14820  0431  2C3F               	goto	i1l5705
 14821  0432                     u496_20:
 14822  0432                     i1l5697:
 14823                           
 14824                           ;main.c: 215:             tala_counter=0;
 14825  0432  01AB               	clrf	_tala_counter^(0+256)
 14826  0433                     i1l5699:
 14827                           
 14828                           ;main.c: 216:             activateAlarm(46);
 14829  0433  302E               	movlw	46
 14830  0434  3191  21D6  3183   	fcall	_activateAlarm
 14831  0437                     i1l5701:
 14832                           
 14833                           ;main.c: 217:             pwm_control=0;
 14834  0437  0022               	movlb	2	; select bank2
 14835  0438  01E8               	clrf	_pwm_control^(0+256)
 14836  0439                     i1l5703:
 14837                           
 14838                           ;main.c: 218:             T='T';
 14839  0439  3054               	movlw	84
 14840  043A  0020               	movlb	0	; select bank0
 14841  043B  00EC               	movwf	??_timerInterrupt
 14842  043C  086C               	movf	??_timerInterrupt,w
 14843  043D  0022               	movlb	2	; select bank2
 14844  043E  00E6               	movwf	_T^(0+256)
 14845  043F                     i1l5705:
 14846                           
 14847                           ;main.c: 220:         if(variable2 < l_threshold || alarm2==1){
 14848  043F  086B               	movf	_l_threshold^(0+256),w
 14849  0440  0021               	movlb	1	; select bank1
 14850  0441  026E               	subwf	_variable2^(0+128),w
 14851  0442  1C03               	skipc
 14852  0443  2C45               	goto	u497_21
 14853  0444  2C46               	goto	u497_20
 14854  0445                     u497_21:
 14855  0445  2C4C               	goto	i1l5709
 14856  0446                     u497_20:
 14857  0446                     i1l5707:
 14858  0446  0022               	movlb	2	; select bank2
 14859  0447  0327               	decf	_alarm2^(0+256),w
 14860  0448  1D03               	btfss	3,2
 14861  0449  2C4B               	goto	u498_21
 14862  044A  2C4C               	goto	u498_20
 14863  044B                     u498_21:
 14864  044B  2C59               	goto	i1l5715
 14865  044C                     u498_20:
 14866  044C                     i1l5709:
 14867                           
 14868                           ;main.c: 221:             tala_counter=0;
 14869  044C  0022               	movlb	2	; select bank2
 14870  044D  01AB               	clrf	_tala_counter^(0+256)
 14871                           
 14872                           ;main.c: 222:             pwm_control=0;
 14873  044E  01E8               	clrf	_pwm_control^(0+256)
 14874  044F                     i1l5711:
 14875                           
 14876                           ;main.c: 223:             activateAlarm(64);
 14877  044F  3040               	movlw	64
 14878  0450  3191  21D6  3183   	fcall	_activateAlarm
 14879  0453                     i1l5713:
 14880                           
 14881                           ;main.c: 224:             L='L';
 14882  0453  304C               	movlw	76
 14883  0454  0020               	movlb	0	; select bank0
 14884  0455  00EC               	movwf	??_timerInterrupt
 14885  0456  086C               	movf	??_timerInterrupt,w
 14886  0457  0022               	movlb	2	; select bank2
 14887  0458  00E5               	movwf	_L^(0+256)
 14888  0459                     i1l5715:
 14889                           
 14890                           ;main.c: 227:         if(temperature!= last_temperature || value!= last_luminosity){
 14891  0459  0021               	movlb	1	; select bank1
 14892  045A  086A               	movf	timerInterrupt@temperature^(0+128),w
 14893  045B  0022               	movlb	2	; select bank2
 14894  045C  066A               	xorwf	_last_temperature^(0+256),w
 14895  045D  1D03               	skipz
 14896  045E  2C60               	goto	u499_21
 14897  045F  2C61               	goto	u499_20
 14898  0460                     u499_21:
 14899  0460  2C69               	goto	i1l5719
 14900  0461                     u499_20:
 14901  0461                     i1l5717:
 14902  0461  0021               	movlb	1	; select bank1
 14903  0462  086B               	movf	timerInterrupt@value^(0+128),w
 14904  0463  0022               	movlb	2	; select bank2
 14905  0464  066E               	xorwf	_last_luminosity^(0+256),w
 14906  0465  1903               	skipnz
 14907  0466  2C68               	goto	u500_21
 14908  0467  2C69               	goto	u500_20
 14909  0468                     u500_21:
 14910  0468  2C74               	goto	i1l5721
 14911  0469                     u500_20:
 14912  0469                     i1l5719:
 14913                           
 14914                           ;main.c: 228:             writeRingBuffer(temperature, value);
 14915  0469  0021               	movlb	1	; select bank1
 14916  046A  086B               	movf	timerInterrupt@value^(0+128),w
 14917  046B  0020               	movlb	0	; select bank0
 14918  046C  00EC               	movwf	??_timerInterrupt
 14919  046D  086C               	movf	??_timerInterrupt,w
 14920  046E  00F4               	movwf	writeRingBuffer@luminosity
 14921  046F  0021               	movlb	1	; select bank1
 14922  0470  086A               	movf	timerInterrupt@temperature^(0+128),w
 14923  0471  3195  2579  3183   	fcall	_writeRingBuffer
 14924  0474                     i1l5721:
 14925                           
 14926                           ;main.c: 232:     if(counter == PMON){
 14927  0474  0022               	movlb	2	; select bank2
 14928  0475  086D               	movf	_counter^(0+256),w
 14929  0476  0637               	xorwf	_PMON^(0+256),w
 14930  0477  1D03               	skipz
 14931  0478  2C7A               	goto	u501_21
 14932  0479  2C7B               	goto	u501_20
 14933  047A                     u501_21:
 14934  047A  2C7E               	goto	i1l5725
 14935  047B                     u501_20:
 14936  047B                     i1l5723:
 14937                           
 14938                           ;main.c: 233:         counter = 1;
 14939  047B  01ED               	clrf	_counter^(0+256)
 14940  047C  0AED               	incf	_counter^(0+256),f
 14941                           
 14942                           ;main.c: 234:     }else{
 14943  047D  2C84               	goto	i1l5727
 14944  047E                     i1l5725:
 14945                           
 14946                           ;main.c: 235:         counter ++;
 14947  047E  3001               	movlw	1
 14948  047F  0020               	movlb	0	; select bank0
 14949  0480  00EC               	movwf	??_timerInterrupt
 14950  0481  086C               	movf	??_timerInterrupt,w
 14951  0482  0022               	movlb	2	; select bank2
 14952  0483  07ED               	addwf	_counter^(0+256),f
 14953  0484                     i1l5727:
 14954                           
 14955                           ;main.c: 238:     if(tala_counter == TALA){
 14956  0484  082B               	movf	_tala_counter^(0+256),w
 14957  0485  0636               	xorwf	_TALA^(0+256),w
 14958  0486  1D03               	skipz
 14959  0487  2C89               	goto	u502_21
 14960  0488  2C8A               	goto	u502_20
 14961  0489                     u502_21:
 14962  0489  2C94               	goto	i1l5733
 14963  048A                     u502_20:
 14964  048A                     i1l5729:
 14965                           
 14966                           ;main.c: 239:         deactivatePWM();
 14967  048A  3190  2072  3183   	fcall	i1_deactivatePWM
 14968  048D                     i1l5731:
 14969                           
 14970                           ;main.c: 241:         tala_counter ++;
 14971  048D  3001               	movlw	1
 14972  048E  0020               	movlb	0	; select bank0
 14973  048F  00EC               	movwf	??_timerInterrupt
 14974  0490  086C               	movf	??_timerInterrupt,w
 14975  0491  0022               	movlb	2	; select bank2
 14976  0492  07AB               	addwf	_tala_counter^(0+256),f
 14977                           
 14978                           ;main.c: 243:     }else if(tala_counter<TALA){
 14979  0493  2CBA               	goto	i1l5749
 14980  0494                     i1l5733:
 14981  0494  0836               	movf	_TALA^(0+256),w
 14982  0495  022B               	subwf	_tala_counter^(0+256),w
 14983  0496  1803               	skipnc
 14984  0497  2C99               	goto	u503_21
 14985  0498  2C9A               	goto	u503_20
 14986  0499                     u503_21:
 14987  0499  2CBA               	goto	i1l5749
 14988  049A                     u503_20:
 14989  049A                     i1l5735:
 14990                           
 14991                           ;main.c: 244:         if(pwm_control==0){
 14992  049A  0868               	movf	_pwm_control^(0+256),w
 14993  049B  1D03               	btfss	3,2
 14994  049C  2C9E               	goto	u504_21
 14995  049D  2C9F               	goto	u504_20
 14996  049E                     u504_21:
 14997  049E  2CB0               	goto	i1l5743
 14998  049F                     u504_20:
 14999  049F                     i1l5737:
 15000                           
 15001                           ;main.c: 246:             alarmc='A';
 15002  049F  3041               	movlw	65
 15003  04A0  0020               	movlb	0	; select bank0
 15004  04A1  00EC               	movwf	??_timerInterrupt
 15005  04A2  086C               	movf	??_timerInterrupt,w
 15006  04A3  0022               	movlb	2	; select bank2
 15007  04A4  00E3               	movwf	_alarmc^(0+256)
 15008  04A5                     i1l5739:
 15009                           
 15010                           ;main.c: 247:             PWM6_LoadDutyValue(0xA);
 15011  04A5  300A               	movlw	10
 15012  04A6  00F0               	movwf	PWM6_LoadDutyValue@dutyValue
 15013  04A7  3000               	movlw	0
 15014  04A8  00F1               	movwf	PWM6_LoadDutyValue@dutyValue+1
 15015  04A9  3191  2178  3183   	fcall	_PWM6_LoadDutyValue
 15016  04AC                     i1l5741:
 15017                           
 15018                           ;main.c: 248:             pwm_control=1;
 15019  04AC  0022               	movlb	2	; select bank2
 15020  04AD  01E8               	clrf	_pwm_control^(0+256)
 15021  04AE  0AE8               	incf	_pwm_control^(0+256),f
 15022                           
 15023                           ;main.c: 249:         }else{
 15024  04AF  2C8D               	goto	i1l5731
 15025  04B0                     i1l5743:
 15026                           
 15027                           ;main.c: 251:             PWM6_LoadDutyValue(0x3);
 15028  04B0  3003               	movlw	3
 15029  04B1  00F0               	movwf	PWM6_LoadDutyValue@dutyValue
 15030  04B2  3000               	movlw	0
 15031  04B3  00F1               	movwf	PWM6_LoadDutyValue@dutyValue+1
 15032  04B4  3191  2178  3183   	fcall	_PWM6_LoadDutyValue
 15033  04B7                     i1l5745:
 15034                           
 15035                           ;main.c: 252:             pwm_control=0;
 15036  04B7  0022               	movlb	2	; select bank2
 15037  04B8  01E8               	clrf	_pwm_control^(0+256)
 15038  04B9  2C8D               	goto	i1l5731
 15039  04BA                     i1l5749:
 15040                           
 15041                           ;main.c: 257:     if(PORTAbits.RA7==0){
 15042  04BA  0020               	movlb	0	; select bank0
 15043  04BB  1B8C               	btfsc	12,7	;volatile
 15044  04BC  2CBE               	goto	u505_21
 15045  04BD  2CBF               	goto	u505_20
 15046  04BE                     u505_21:
 15047  04BE  2CC1               	goto	i1l1236
 15048  04BF                     u505_20:
 15049  04BF                     i1l1233:	
 15050                           ;main.c: 258:         do { LATAbits.LATA7 = 1; } while(0);
 15051                           
 15052  04BF  1796               	bsf	22,7	;volatile
 15053  04C0  2CC2               	goto	i1l5751
 15054  04C1                     i1l1236:	
 15055                           ;main.c: 260:         do { LATAbits.LATA7 = 0; } while(0);
 15056                           
 15057  04C1  1396               	bcf	22,7	;volatile
 15058  04C2                     i1l5751:
 15059                           
 15060                           ;main.c: 262:     if(alarmc=='A'){
 15061  04C2  3041               	movlw	65
 15062  04C3  0022               	movlb	2	; select bank2
 15063  04C4  0663               	xorwf	_alarmc^(0+256),w
 15064  04C5  1D03               	btfss	3,2
 15065  04C6  2CC8               	goto	u506_21
 15066  04C7  2CC9               	goto	u506_20
 15067  04C8                     u506_21:
 15068  04C8  2CE5               	goto	i1l5763
 15069  04C9                     u506_20:
 15070  04C9                     i1l5753:
 15071                           
 15072                           ;main.c: 263:         if(PORTBbits.RB4==0){
 15073  04C9  0020               	movlb	0	; select bank0
 15074  04CA  1A0D               	btfsc	13,4	;volatile
 15075  04CB  2CCD               	goto	u507_21
 15076  04CC  2CCE               	goto	u507_20
 15077  04CD                     u507_21:
 15078  04CD  2CFF               	goto	i1l1243
 15079  04CE                     u507_20:
 15080  04CE                     i1l5755:
 15081                           
 15082                           ;main.c: 264:             alarmc='a';
 15083  04CE  3061               	movlw	97
 15084  04CF  00EC               	movwf	??_timerInterrupt
 15085  04D0  086C               	movf	??_timerInterrupt,w
 15086  04D1  0022               	movlb	2	; select bank2
 15087  04D2  00E3               	movwf	_alarmc^(0+256)
 15088                           
 15089                           ;main.c: 265:             T=' ';
 15090  04D3  3020               	movlw	32
 15091  04D4  0020               	movlb	0	; select bank0
 15092  04D5  00EC               	movwf	??_timerInterrupt
 15093  04D6  086C               	movf	??_timerInterrupt,w
 15094  04D7  0022               	movlb	2	; select bank2
 15095  04D8  00E6               	movwf	_T^(0+256)
 15096                           
 15097                           ;main.c: 266:             L=' ';
 15098  04D9  3020               	movlw	32
 15099  04DA  0020               	movlb	0	; select bank0
 15100  04DB  00EC               	movwf	??_timerInterrupt
 15101  04DC  086C               	movf	??_timerInterrupt,w
 15102  04DD  0022               	movlb	2	; select bank2
 15103  04DE  00E5               	movwf	_L^(0+256)
 15104  04DF                     i1l5757:
 15105                           
 15106                           ;main.c: 267:             alarm1=0;
 15107  04DF  01A8               	clrf	_alarm1^(0+256)
 15108  04E0                     i1l5759:
 15109                           
 15110                           ;main.c: 268:             alarm2=0;
 15111  04E0  01A7               	clrf	_alarm2^(0+256)
 15112  04E1                     i1l5761:
 15113                           
 15114                           ;main.c: 269:             deactivateAlarm();
 15115  04E1  3190  2079  3183   	fcall	i1_deactivateAlarm
 15116  04E4  2CFF               	goto	i1l1243
 15117  04E5                     i1l5763:
 15118  04E5  0829               	movf	_mode^(0+256),w
 15119  04E6  1D03               	btfss	3,2
 15120  04E7  2CE9               	goto	u508_21
 15121  04E8  2CEA               	goto	u508_20
 15122  04E9                     u508_21:
 15123  04E9  2CFF               	goto	i1l1243
 15124  04EA                     u508_20:
 15125  04EA                     i1l5765:
 15126                           
 15127                           ;main.c: 272:         if(PORTBbits.RB4==0){
 15128  04EA  0020               	movlb	0	; select bank0
 15129  04EB  1A0D               	btfsc	13,4	;volatile
 15130  04EC  2CEE               	goto	u509_21
 15131  04ED  2CEF               	goto	u509_20
 15132  04EE                     u509_21:
 15133  04EE  2CFF               	goto	i1l1243
 15134  04EF                     u509_20:
 15135  04EF                     i1l5767:
 15136                           
 15137                           ;main.c: 273:             mode=1;
 15138  04EF  0022               	movlb	2	; select bank2
 15139  04F0  01A9               	clrf	_mode^(0+256)
 15140  04F1  0AA9               	incf	_mode^(0+256),f
 15141  04F2                     i1l5769:
 15142                           
 15143                           ;main.c: 274:             _delay((unsigned long)((1000)*(1000000/4000.0)));
 15144  04F2  3002               	movlw	2
 15145  04F3  0020               	movlb	0	; select bank0
 15146  04F4  00ED               	movwf	??_timerInterrupt+1
 15147  04F5  3045               	movlw	69
 15148  04F6  00EC               	movwf	??_timerInterrupt
 15149  04F7  30A9               	movlw	169
 15150  04F8                     u613_27:
 15151  04F8  0B89               	decfsz	9,f
 15152  04F9  2CF8               	goto	u613_27
 15153  04FA  0BEC               	decfsz	??_timerInterrupt,f
 15154  04FB  2CF8               	goto	u613_27
 15155  04FC  0BED               	decfsz	??_timerInterrupt+1,f
 15156  04FD  2CF8               	goto	u613_27
 15157  04FE  3200               	nop2
 15158  04FF                     i1l1243:
 15159  04FF  0008               	return
 15160  0500                     __end_of_timerInterrupt:
 15161                           
 15162                           	psect	text34
 15163  1079                     __ptext34:	
 15164 ;; *************** function i1_deactivateAlarm *****************
 15165 ;; Defined at:
 15166 ;;		line 44 in file "alarm.c"
 15167 ;; Parameters:    Size  Location     Type
 15168 ;;		None
 15169 ;; Auto vars:     Size  Location     Type
 15170 ;;		None
 15171 ;; Return value:  Size  Location     Type
 15172 ;;                  1    wreg      void 
 15173 ;; Registers used:
 15174 ;;		wreg, status,2, status,0, pclath, cstack
 15175 ;; Tracked objects:
 15176 ;;		On entry : 0/0
 15177 ;;		On exit  : 0/0
 15178 ;;		Unchanged: 0/0
 15179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15184 ;;Total ram usage:        0 bytes
 15185 ;; Hardware stack levels used: 1
 15186 ;; Hardware stack levels required when called: 3
 15187 ;; This function calls:
 15188 ;;		i1_deactivatePWM
 15189 ;; This function is called by:
 15190 ;;		_timerInterrupt
 15191 ;; This function uses a non-reentrant model
 15192 ;;
 15193                           
 15194                           
 15195                           ;psect for function i1_deactivateAlarm
 15196  1079                     i1_deactivateAlarm:
 15197  1079                     i1l1339:	
 15198                           ;incstack = 0
 15199                           ; Regs used in i1_deactivateAlarm: [wreg+status,2+status,0+pclath+cstack]
 15200                           ;alarm.c: 45:     do { LATAbits.LATA5 = 0; } while(0);
 15201                           
 15202  1079  0020               	movlb	0	; select bank0
 15203  107A  1296               	bcf	22,5	;volatile
 15204  107B                     i1l1341:	
 15205                           ;alarm.c: 46:     do { LATAbits.LATA4 = 0; } while(0);
 15206                           
 15207  107B  1216               	bcf	22,4	;volatile
 15208  107C                     i1l5577:
 15209                           
 15210                           ;alarm.c: 47:     deactivatePWM();
 15211  107C  3190  2072  3190   	fcall	i1_deactivatePWM
 15212  107F                     i1l1343:
 15213  107F  0008               	return
 15214  1080                     __end_ofi1_deactivateAlarm:
 15215                           
 15216                           	psect	text35
 15217  1072                     __ptext35:	
 15218 ;; *************** function i1_deactivatePWM *****************
 15219 ;; Defined at:
 15220 ;;		line 50 in file "alarm.c"
 15221 ;; Parameters:    Size  Location     Type
 15222 ;;		None
 15223 ;; Auto vars:     Size  Location     Type
 15224 ;;		None
 15225 ;; Return value:  Size  Location     Type
 15226 ;;                  1    wreg      void 
 15227 ;; Registers used:
 15228 ;;		wreg, status,2, status,0, pclath, cstack
 15229 ;; Tracked objects:
 15230 ;;		On entry : 0/0
 15231 ;;		On exit  : 0/0
 15232 ;;		Unchanged: 0/0
 15233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15238 ;;Total ram usage:        0 bytes
 15239 ;; Hardware stack levels used: 1
 15240 ;; Hardware stack levels required when called: 2
 15241 ;; This function calls:
 15242 ;;		i1_PWMOutputDisable
 15243 ;;		i1_TMR2_StopTimer
 15244 ;; This function is called by:
 15245 ;;		_timerInterrupt
 15246 ;;		i1_deactivateAlarm
 15247 ;; This function uses a non-reentrant model
 15248 ;;
 15249                           
 15250                           
 15251                           ;psect for function i1_deactivatePWM
 15252  1072                     i1_deactivatePWM:
 15253  1072                     i1l5463:	
 15254                           ;incstack = 0
 15255                           ; Regs used in i1_deactivatePWM: [wreg+status,2+status,0+pclath+cstack]
 15256                           
 15257                           
 15258                           ;alarm.c: 51:     TMR2_StopTimer();
 15259  1072  3190  205B  3190   	fcall	i1_TMR2_StopTimer
 15260  1075                     i1l5465:
 15261                           
 15262                           ;alarm.c: 52:     PWMOutputDisable();
 15263  1075  3190  20F3  3190   	fcall	i1_PWMOutputDisable
 15264  1078                     i1l1346:
 15265  1078  0008               	return
 15266  1079                     __end_ofi1_deactivatePWM:
 15267                           
 15268                           	psect	text36
 15269  105B                     __ptext36:	
 15270 ;; *************** function i1_TMR2_StopTimer *****************
 15271 ;; Defined at:
 15272 ;;		line 117 in file "mcc_generated_files/tmr2.c"
 15273 ;; Parameters:    Size  Location     Type
 15274 ;;		None
 15275 ;; Auto vars:     Size  Location     Type
 15276 ;;		None
 15277 ;; Return value:  Size  Location     Type
 15278 ;;                  1    wreg      void 
 15279 ;; Registers used:
 15280 ;;		status,2, status,0, pclath, cstack
 15281 ;; Tracked objects:
 15282 ;;		On entry : 0/0
 15283 ;;		On exit  : 0/0
 15284 ;;		Unchanged: 0/0
 15285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15290 ;;Total ram usage:        0 bytes
 15291 ;; Hardware stack levels used: 1
 15292 ;; Hardware stack levels required when called: 1
 15293 ;; This function calls:
 15294 ;;		i1_TMR2_Stop
 15295 ;; This function is called by:
 15296 ;;		i1_deactivatePWM
 15297 ;; This function uses a non-reentrant model
 15298 ;;
 15299                           
 15300                           
 15301                           ;psect for function i1_TMR2_StopTimer
 15302  105B                     i1_TMR2_StopTimer:
 15303  105B                     i1l5389:	
 15304                           ;incstack = 0
 15305                           ; Regs used in i1_TMR2_StopTimer: [status,2+status,0+pclath+cstack]
 15306                           
 15307                           
 15308                           ;mcc_generated_files/tmr2.c: 119:     TMR2_Stop();
 15309  105B  3190  2051  3190   	fcall	i1_TMR2_Stop
 15310  105E                     i1l916:
 15311  105E  0008               	return
 15312  105F                     __end_ofi1_TMR2_StopTimer:
 15313                           
 15314                           	psect	text37
 15315  1051                     __ptext37:	
 15316 ;; *************** function i1_TMR2_Stop *****************
 15317 ;; Defined at:
 15318 ;;		line 111 in file "mcc_generated_files/tmr2.c"
 15319 ;; Parameters:    Size  Location     Type
 15320 ;;		None
 15321 ;; Auto vars:     Size  Location     Type
 15322 ;;		None
 15323 ;; Return value:  Size  Location     Type
 15324 ;;                  1    wreg      void 
 15325 ;; Registers used:
 15326 ;;		None
 15327 ;; Tracked objects:
 15328 ;;		On entry : 0/0
 15329 ;;		On exit  : 0/0
 15330 ;;		Unchanged: 0/0
 15331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15336 ;;Total ram usage:        0 bytes
 15337 ;; Hardware stack levels used: 1
 15338 ;; This function calls:
 15339 ;;		Nothing
 15340 ;; This function is called by:
 15341 ;;		i1_TMR2_StopTimer
 15342 ;; This function uses a non-reentrant model
 15343 ;;
 15344                           
 15345                           
 15346                           ;psect for function i1_TMR2_Stop
 15347  1051                     i1_TMR2_Stop:
 15348  1051                     i1l5267:	
 15349                           ;incstack = 0
 15350                           ; Regs used in i1_TMR2_Stop: []
 15351                           
 15352                           
 15353                           ;mcc_generated_files/tmr2.c: 114:     T2CONbits.TMR2ON = 0;
 15354  1051  0025               	movlb	5	; select bank5
 15355  1052  138E               	bcf	14,7	;volatile
 15356  1053                     i1l913:
 15357  1053  0008               	return
 15358  1054                     __end_ofi1_TMR2_Stop:
 15359                           
 15360                           	psect	text38
 15361  10F3                     __ptext38:	
 15362 ;; *************** function i1_PWMOutputDisable *****************
 15363 ;; Defined at:
 15364 ;;		line 21 in file "alarm.c"
 15365 ;; Parameters:    Size  Location     Type
 15366 ;;		None
 15367 ;; Auto vars:     Size  Location     Type
 15368 ;;		None
 15369 ;; Return value:  Size  Location     Type
 15370 ;;                  1    wreg      void 
 15371 ;; Registers used:
 15372 ;;		wreg, status,2
 15373 ;; Tracked objects:
 15374 ;;		On entry : 0/0
 15375 ;;		On exit  : 0/0
 15376 ;;		Unchanged: 0/0
 15377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15378 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15379 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15381 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15382 ;;Total ram usage:        0 bytes
 15383 ;; Hardware stack levels used: 1
 15384 ;; This function calls:
 15385 ;;		Nothing
 15386 ;; This function is called by:
 15387 ;;		i1_deactivatePWM
 15388 ;; This function uses a non-reentrant model
 15389 ;;
 15390                           
 15391                           
 15392                           ;psect for function i1_PWMOutputDisable
 15393  10F3                     i1_PWMOutputDisable:
 15394  10F3                     i1l5391:	
 15395                           ;incstack = 0
 15396                           ; Regs used in i1_PWMOutputDisable: [wreg+status,2]
 15397                           
 15398                           
 15399                           ;alarm.c: 22:     PPSLOCK = 0x55;
 15400  10F3  3055               	movlw	85
 15401  10F4  003D               	movlb	29	; select bank29
 15402  10F5  008F               	movwf	15	;volsfr
 15403                           
 15404                           ;alarm.c: 23:     PPSLOCK = 0xAA;
 15405  10F6  30AA               	movlw	170
 15406  10F7  008F               	movwf	15	;volsfr
 15407  10F8                     i1l5393:
 15408                           
 15409                           ;alarm.c: 24:     PPSLOCKbits.PPSLOCKED = 0x00;
 15410  10F8  100F               	bcf	15,0	;volsfr
 15411  10F9                     i1l5395:
 15412                           
 15413                           ;alarm.c: 26:     RA6PPS = 0x00;
 15414  10F9  003E               	movlb	30	; select bank30
 15415  10FA  0196               	clrf	22	;volatile
 15416  10FB                     i1l5397:
 15417                           
 15418                           ;alarm.c: 27:     PPSLOCK = 0x55;
 15419  10FB  3055               	movlw	85
 15420  10FC  003D               	movlb	29	; select bank29
 15421  10FD  008F               	movwf	15	;volsfr
 15422  10FE                     i1l5399:
 15423                           
 15424                           ;alarm.c: 28:     PPSLOCK = 0xAA;
 15425  10FE  30AA               	movlw	170
 15426  10FF  008F               	movwf	15	;volsfr
 15427  1100                     i1l5401:
 15428                           
 15429                           ;alarm.c: 29:     PPSLOCKbits.PPSLOCKED = 0x01;
 15430  1100  140F               	bsf	15,0	;volsfr
 15431  1101                     i1l1327:
 15432  1101  0008               	return
 15433  1102                     __end_ofi1_PWMOutputDisable:
 15434                           
 15435                           	psect	text39
 15436  1579                     __ptext39:	
 15437 ;; *************** function _writeRingBuffer *****************
 15438 ;; Defined at:
 15439 ;;		line 121 in file "main.c"
 15440 ;; Parameters:    Size  Location     Type
 15441 ;;  temperature     1    wreg     unsigned char 
 15442 ;;  luminosity      1    4[COMMON] unsigned char 
 15443 ;; Auto vars:     Size  Location     Type
 15444 ;;  temperature     1    6[COMMON] unsigned char 
 15445 ;; Return value:  Size  Location     Type
 15446 ;;                  1    wreg      void 
 15447 ;; Registers used:
 15448 ;;		wreg, status,2, status,0, pclath, cstack
 15449 ;; Tracked objects:
 15450 ;;		On entry : 0/0
 15451 ;;		On exit  : 0/0
 15452 ;;		Unchanged: 0/0
 15453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15454 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15455 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15456 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15457 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15458 ;;Total ram usage:        3 bytes
 15459 ;; Hardware stack levels used: 1
 15460 ;; Hardware stack levels required when called: 1
 15461 ;; This function calls:
 15462 ;;		i1_DATAEE_WriteByte
 15463 ;; This function is called by:
 15464 ;;		_timerInterrupt
 15465 ;; This function uses a non-reentrant model
 15466 ;;
 15467                           
 15468                           
 15469                           ;psect for function _writeRingBuffer
 15470  1579                     _writeRingBuffer:
 15471                           
 15472                           ;incstack = 0
 15473                           ; Regs used in _writeRingBuffer: [wreg+status,2+status,0+pclath+cstack]
 15474                           ;writeRingBuffer@temperature stored from wreg
 15475  1579  00F6               	movwf	writeRingBuffer@temperature
 15476  157A                     i1l5535:
 15477                           
 15478                           ;main.c: 123:     DATAEE_WriteByte(data_address, hours);
 15479  157A  0022               	movlb	2	; select bank2
 15480  157B  085E               	movf	(_data_address+1)^(0+256),w
 15481  157C  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 15482  157D  085D               	movf	_data_address^(0+256),w
 15483  157E  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 15484  157F  082F               	movf	_hours^(0+256),w
 15485  1580  00F5               	movwf	??_writeRingBuffer
 15486  1581  0875               	movf	??_writeRingBuffer,w
 15487  1582  00F2               	movwf	i1DATAEE_WriteByte@bData
 15488  1583  3192  223E  3195   	fcall	i1_DATAEE_WriteByte
 15489                           
 15490                           ;main.c: 124:     DATAEE_WriteByte(data_address + 1, minutes);
 15491  1586  0022               	movlb	2	; select bank2
 15492  1587  085D               	movf	_data_address^(0+256),w
 15493  1588  3E01               	addlw	1
 15494  1589  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 15495  158A  3000               	movlw	0
 15496  158B  3D5E               	addwfc	(_data_address+1)^(0+256),w
 15497  158C  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 15498  158D  082E               	movf	_minutes^(0+256),w
 15499  158E  00F5               	movwf	??_writeRingBuffer
 15500  158F  0875               	movf	??_writeRingBuffer,w
 15501  1590  00F2               	movwf	i1DATAEE_WriteByte@bData
 15502  1591  3192  223E  3195   	fcall	i1_DATAEE_WriteByte
 15503                           
 15504                           ;main.c: 125:     DATAEE_WriteByte(data_address + 2, seconds);
 15505  1594  0022               	movlb	2	; select bank2
 15506  1595  085D               	movf	_data_address^(0+256),w
 15507  1596  3E02               	addlw	2
 15508  1597  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 15509  1598  3000               	movlw	0
 15510  1599  3D5E               	addwfc	(_data_address+1)^(0+256),w
 15511  159A  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 15512  159B  082D               	movf	_seconds^(0+256),w
 15513  159C  00F5               	movwf	??_writeRingBuffer
 15514  159D  0875               	movf	??_writeRingBuffer,w
 15515  159E  00F2               	movwf	i1DATAEE_WriteByte@bData
 15516  159F  3192  223E  3195   	fcall	i1_DATAEE_WriteByte
 15517                           
 15518                           ;main.c: 126:     DATAEE_WriteByte(data_address + 3, temperature);
 15519  15A2  0022               	movlb	2	; select bank2
 15520  15A3  085D               	movf	_data_address^(0+256),w
 15521  15A4  3E03               	addlw	3
 15522  15A5  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 15523  15A6  3000               	movlw	0
 15524  15A7  3D5E               	addwfc	(_data_address+1)^(0+256),w
 15525  15A8  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 15526  15A9  0876               	movf	writeRingBuffer@temperature,w
 15527  15AA  00F5               	movwf	??_writeRingBuffer
 15528  15AB  0875               	movf	??_writeRingBuffer,w
 15529  15AC  00F2               	movwf	i1DATAEE_WriteByte@bData
 15530  15AD  3192  223E  3195   	fcall	i1_DATAEE_WriteByte
 15531                           
 15532                           ;main.c: 127:     DATAEE_WriteByte(data_address + 4, luminosity);
 15533  15B0  0022               	movlb	2	; select bank2
 15534  15B1  085D               	movf	_data_address^(0+256),w
 15535  15B2  3E04               	addlw	4
 15536  15B3  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 15537  15B4  3000               	movlw	0
 15538  15B5  3D5E               	addwfc	(_data_address+1)^(0+256),w
 15539  15B6  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 15540  15B7  0874               	movf	writeRingBuffer@luminosity,w
 15541  15B8  00F5               	movwf	??_writeRingBuffer
 15542  15B9  0875               	movf	??_writeRingBuffer,w
 15543  15BA  00F2               	movwf	i1DATAEE_WriteByte@bData
 15544  15BB  3192  223E  3195   	fcall	i1_DATAEE_WriteByte
 15545  15BE                     i1l5537:
 15546                           
 15547                           ;main.c: 129:     last_temperature = temperature;
 15548  15BE  0876               	movf	writeRingBuffer@temperature,w
 15549  15BF  00F5               	movwf	??_writeRingBuffer
 15550  15C0  0875               	movf	??_writeRingBuffer,w
 15551  15C1  0022               	movlb	2	; select bank2
 15552  15C2  00EA               	movwf	_last_temperature^(0+256)
 15553  15C3                     i1l5539:
 15554                           
 15555                           ;main.c: 130:     last_luminosity = luminosity;
 15556  15C3  0874               	movf	writeRingBuffer@luminosity,w
 15557  15C4  00F5               	movwf	??_writeRingBuffer
 15558  15C5  0875               	movf	??_writeRingBuffer,w
 15559  15C6  00EE               	movwf	_last_luminosity^(0+256)
 15560  15C7                     i1l5541:
 15561                           
 15562                           ;main.c: 133:     if(data_address == (0x7000 + 20)){
 15563  15C7  3014               	movlw	20
 15564  15C8  065D               	xorwf	_data_address^(0+256),w
 15565  15C9  3070               	movlw	112
 15566  15CA  1903               	skipnz
 15567  15CB  065E               	xorwf	(_data_address+1)^(0+256),w
 15568  15CC  1D03               	btfss	3,2
 15569  15CD  2DCF               	goto	u464_21
 15570  15CE  2DD0               	goto	u464_20
 15571  15CF                     u464_21:
 15572  15CF  2DD5               	goto	i1l5545
 15573  15D0                     u464_20:
 15574  15D0                     i1l5543:
 15575                           
 15576                           ;main.c: 135:         data_address = 0x7000;
 15577  15D0  3000               	movlw	0
 15578  15D1  00DD               	movwf	_data_address^(0+256)
 15579  15D2  3070               	movlw	112
 15580  15D3  00DE               	movwf	(_data_address^(0+256)+1)
 15581                           
 15582                           ;main.c: 137:     }else{
 15583  15D4  2DDB               	goto	i1l1177
 15584  15D5                     i1l5545:
 15585                           
 15586                           ;main.c: 139:         data_address = data_address + 5;
 15587  15D5  085D               	movf	_data_address^(0+256),w
 15588  15D6  3E05               	addlw	5
 15589  15D7  00DD               	movwf	_data_address^(0+256)
 15590  15D8  3000               	movlw	0
 15591  15D9  3D5E               	addwfc	(_data_address+1)^(0+256),w
 15592  15DA  00DE               	movwf	(_data_address+1)^(0+256)
 15593  15DB                     i1l1177:
 15594  15DB  0008               	return
 15595  15DC                     __end_of_writeRingBuffer:
 15596                           
 15597                           	psect	text40
 15598  123E                     __ptext40:	
 15599 ;; *************** function i1_DATAEE_WriteByte *****************
 15600 ;; Defined at:
 15601 ;;		line 180 in file "mcc_generated_files/memory.c"
 15602 ;; Parameters:    Size  Location     Type
 15603 ;;  bAdd            2    0[COMMON] unsigned short 
 15604 ;;  bData           1    2[COMMON] unsigned char 
 15605 ;; Auto vars:     Size  Location     Type
 15606 ;;  GIEBitValue     1    3[COMMON] unsigned char 
 15607 ;; Return value:  Size  Location     Type
 15608 ;;                  1    wreg      void 
 15609 ;; Registers used:
 15610 ;;		wreg, status,2, status,0
 15611 ;; Tracked objects:
 15612 ;;		On entry : 0/0
 15613 ;;		On exit  : 0/0
 15614 ;;		Unchanged: 0/0
 15615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15616 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15617 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15619 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15620 ;;Total ram usage:        4 bytes
 15621 ;; Hardware stack levels used: 1
 15622 ;; This function calls:
 15623 ;;		Nothing
 15624 ;; This function is called by:
 15625 ;;		_writeRingBuffer
 15626 ;;		_timerInterrupt
 15627 ;; This function uses a non-reentrant model
 15628 ;;
 15629                           
 15630                           
 15631                           ;psect for function i1_DATAEE_WriteByte
 15632  123E                     i1_DATAEE_WriteByte:
 15633  123E                     i1l5443:	
 15634                           ;incstack = 0
 15635                           ; Regs used in i1_DATAEE_WriteByte: [wreg+status,2+status,0]
 15636                           
 15637                           
 15638                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
 15639  123E  3000               	movlw	0
 15640  123F  1B8B               	btfsc	11,7	;volatile
 15641  1240  3001               	movlw	1
 15642  1241  00F3               	movwf	i1DATAEE_WriteByte@GIEBitValue
 15643                           
 15644                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
 15645  1242  0871               	movf	i1DATAEE_WriteByte@bAdd+1,w
 15646  1243  0030               	movlb	16	; select bank16
 15647  1244  009B               	movwf	27	;volatile
 15648  1245                     i1l5445:
 15649                           
 15650                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
 15651  1245  0870               	movf	i1DATAEE_WriteByte@bAdd,w
 15652  1246  009A               	movwf	26	;volatile
 15653  1247                     i1l5447:
 15654                           
 15655                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
 15656  1247  0872               	movf	i1DATAEE_WriteByte@bData,w
 15657  1248  009C               	movwf	28	;volatile
 15658  1249                     i1l5449:
 15659                           
 15660                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
 15661  1249  171E               	bsf	30,6	;volsfr
 15662  124A                     i1l5451:
 15663                           
 15664                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
 15665  124A  151E               	bsf	30,2	;volsfr
 15666  124B                     i1l5453:
 15667                           
 15668                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
 15669  124B  138B               	bcf	11,7	;volatile
 15670  124C                     i1l5455:
 15671                           
 15672                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
 15673  124C  3055               	movlw	85
 15674  124D  009F               	movwf	31	;volsfr
 15675  124E                     i1l5457:
 15676                           
 15677                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
 15678  124E  30AA               	movlw	170
 15679  124F  009F               	movwf	31	;volsfr
 15680  1250                     i1l5459:
 15681                           
 15682                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
 15683  1250  149E               	bsf	30,1	;volsfr
 15684  1251                     i1l447:	
 15685                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
 15686                           
 15687                           
 15688                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
 15689  1251  189E               	btfsc	30,1	;volsfr
 15690  1252  2A54               	goto	u437_21
 15691  1253  2A55               	goto	u437_20
 15692  1254                     u437_21:
 15693  1254  2A51               	goto	i1l447
 15694  1255                     u437_20:
 15695  1255                     i1l449:
 15696                           
 15697                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
 15698  1255  111E               	bcf	30,2	;volsfr
 15699  1256                     i1l5461:
 15700                           
 15701                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
 15702  1256  0C73               	rrf	i1DATAEE_WriteByte@GIEBitValue,w
 15703  1257  1C03               	skipc
 15704  1258  138B               	bcf	11,7	;volatile
 15705  1259  1803               	skipnc
 15706  125A  178B               	bsf	11,7	;volatile
 15707  125B                     i1l450:
 15708  125B  0008               	return
 15709  125C                     __end_ofi1_DATAEE_WriteByte:
 15710                           
 15711                           	psect	text41
 15712  06D2                     __ptext41:	
 15713 ;; *************** function _readTC74 *****************
 15714 ;; Defined at:
 15715 ;;		line 78 in file "main.c"
 15716 ;; Parameters:    Size  Location     Type
 15717 ;;		None
 15718 ;; Auto vars:     Size  Location     Type
 15719 ;;  value           1    3[COMMON] unsigned char 
 15720 ;; Return value:  Size  Location     Type
 15721 ;;                  1    wreg      unsigned char 
 15722 ;; Registers used:
 15723 ;;		wreg, status,2, status,0, pclath, cstack
 15724 ;; Tracked objects:
 15725 ;;		On entry : 0/0
 15726 ;;		On exit  : 0/0
 15727 ;;		Unchanged: 0/0
 15728 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15730 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15731 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15732 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15733 ;;Total ram usage:        2 bytes
 15734 ;; Hardware stack levels used: 1
 15735 ;; Hardware stack levels required when called: 1
 15736 ;; This function calls:
 15737 ;;		_ReadI2C
 15738 ;;		i1_WriteI2C
 15739 ;; This function is called by:
 15740 ;;		_timerInterrupt
 15741 ;; This function uses a non-reentrant model
 15742 ;;
 15743                           
 15744                           
 15745                           ;psect for function _readTC74
 15746  06D2                     _readTC74:
 15747  06D2                     i1l1079:	
 15748                           ;incstack = 0
 15749                           ; Regs used in _readTC74: [wreg+status,2+status,0+pclath+cstack]
 15750                           ;main.c: 80:  unsigned char value;;main.c: 81: do{
 15751                           
 15752  06D2                     i1l5483:	
 15753                           ;main.c: 82:  while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15754                           
 15755  06D2  0023               	movlb	3	; select bank3
 15756  06D3  0C0F               	rrf	15,w	;volatile
 15757  06D4  0C89               	rrf	9,f
 15758  06D5  3901               	andlw	1
 15759  06D6  00F2               	movwf	??_readTC74
 15760  06D7  0811               	movf	17,w	;volatile
 15761  06D8  391F               	andlw	31
 15762  06D9  0472               	iorwf	??_readTC74,w
 15763  06DA  1D03               	btfss	3,2
 15764  06DB  2EDD               	goto	u439_21
 15765  06DC  2EDE               	goto	u439_20
 15766  06DD                     u439_21:
 15767  06DD  2ED2               	goto	i1l5483
 15768  06DE                     u439_20:
 15769  06DE                     i1l1083:	
 15770                           ;main.c: 83:  do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((SSP1
      +                          CON2 & 0x1F) | (SSP1STATbits.R_W));
 15771                           
 15772  06DE  1411               	bsf	17,0	;volatile
 15773  06DF                     i1l1084:
 15774  06DF  1811               	btfsc	17,0	;volatile
 15775  06E0  2EE2               	goto	u440_21
 15776  06E1  2EE3               	goto	u440_20
 15777  06E2                     u440_21:
 15778  06E2  2EDF               	goto	i1l1084
 15779  06E3                     u440_20:
 15780  06E3                     i1l5485:
 15781  06E3  0C0F               	rrf	15,w	;volatile
 15782  06E4  0C89               	rrf	9,f
 15783  06E5  3901               	andlw	1
 15784  06E6  00F2               	movwf	??_readTC74
 15785  06E7  0811               	movf	17,w	;volatile
 15786  06E8  391F               	andlw	31
 15787  06E9  0472               	iorwf	??_readTC74,w
 15788  06EA  1D03               	btfss	3,2
 15789  06EB  2EED               	goto	u441_21
 15790  06EC  2EEE               	goto	u441_20
 15791  06ED                     u441_21:
 15792  06ED  2EE3               	goto	i1l5485
 15793  06EE                     u441_20:
 15794  06EE                     i1l5487:
 15795                           
 15796                           ;main.c: 85:  WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15797  06EE  309A               	movlw	154
 15798  06EF  3193  23E7  3186   	fcall	i1_WriteI2C
 15799  06F2                     i1l5489:
 15800  06F2  0023               	movlb	3	; select bank3
 15801  06F3  0C0F               	rrf	15,w	;volatile
 15802  06F4  0C89               	rrf	9,f
 15803  06F5  3901               	andlw	1
 15804  06F6  00F2               	movwf	??_readTC74
 15805  06F7  0811               	movf	17,w	;volatile
 15806  06F8  391F               	andlw	31
 15807  06F9  0472               	iorwf	??_readTC74,w
 15808  06FA  1D03               	btfss	3,2
 15809  06FB  2EFD               	goto	u442_21
 15810  06FC  2EFE               	goto	u442_20
 15811  06FD                     u442_21:
 15812  06FD  2EF2               	goto	i1l5489
 15813  06FE                     u442_20:
 15814  06FE                     i1l5491:
 15815                           
 15816                           ;main.c: 86:  WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15817  06FE  3001               	movlw	1
 15818  06FF  3193  23E7  3186   	fcall	i1_WriteI2C
 15819  0702                     i1l5493:
 15820  0702  0023               	movlb	3	; select bank3
 15821  0703  0C0F               	rrf	15,w	;volatile
 15822  0704  0C89               	rrf	9,f
 15823  0705  3901               	andlw	1
 15824  0706  00F2               	movwf	??_readTC74
 15825  0707  0811               	movf	17,w	;volatile
 15826  0708  391F               	andlw	31
 15827  0709  0472               	iorwf	??_readTC74,w
 15828  070A  1D03               	btfss	3,2
 15829  070B  2F0D               	goto	u443_21
 15830  070C  2F0E               	goto	u443_20
 15831  070D                     u443_21:
 15832  070D  2F02               	goto	i1l5493
 15833  070E                     u443_20:
 15834  070E                     i1l1097:	
 15835                           ;main.c: 87:  do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while ((SS
      +                          P1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15836                           
 15837  070E  1491               	bsf	17,1	;volatile
 15838  070F                     i1l1098:
 15839  070F  1891               	btfsc	17,1	;volatile
 15840  0710  2F12               	goto	u444_21
 15841  0711  2F13               	goto	u444_20
 15842  0712                     u444_21:
 15843  0712  2F0F               	goto	i1l1098
 15844  0713                     u444_20:
 15845  0713                     i1l5495:
 15846  0713  0C0F               	rrf	15,w	;volatile
 15847  0714  0C89               	rrf	9,f
 15848  0715  3901               	andlw	1
 15849  0716  00F2               	movwf	??_readTC74
 15850  0717  0811               	movf	17,w	;volatile
 15851  0718  391F               	andlw	31
 15852  0719  0472               	iorwf	??_readTC74,w
 15853  071A  1D03               	btfss	3,2
 15854  071B  2F1D               	goto	u445_21
 15855  071C  2F1E               	goto	u445_20
 15856  071D                     u445_21:
 15857  071D  2F13               	goto	i1l5495
 15858  071E                     u445_20:
 15859  071E                     i1l5497:
 15860                           
 15861                           ;main.c: 88:  WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15862  071E  309B               	movlw	155
 15863  071F  3193  23E7  3186   	fcall	i1_WriteI2C
 15864  0722                     i1l5499:
 15865  0722  0023               	movlb	3	; select bank3
 15866  0723  0C0F               	rrf	15,w	;volatile
 15867  0724  0C89               	rrf	9,f
 15868  0725  3901               	andlw	1
 15869  0726  00F2               	movwf	??_readTC74
 15870  0727  0811               	movf	17,w	;volatile
 15871  0728  391F               	andlw	31
 15872  0729  0472               	iorwf	??_readTC74,w
 15873  072A  1D03               	btfss	3,2
 15874  072B  2F2D               	goto	u446_21
 15875  072C  2F2E               	goto	u446_20
 15876  072D                     u446_21:
 15877  072D  2F22               	goto	i1l5499
 15878  072E                     u446_20:
 15879  072E                     i1l5501:
 15880                           
 15881                           ;main.c: 89:  value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15882  072E  3191  21F0  3186   	fcall	_ReadI2C
 15883  0731  00F2               	movwf	??_readTC74
 15884  0732  0872               	movf	??_readTC74,w
 15885  0733  00F3               	movwf	readTC74@value
 15886  0734                     i1l5503:
 15887  0734  0023               	movlb	3	; select bank3
 15888  0735  0C0F               	rrf	15,w	;volatile
 15889  0736  0C89               	rrf	9,f
 15890  0737  3901               	andlw	1
 15891  0738  00F2               	movwf	??_readTC74
 15892  0739  0811               	movf	17,w	;volatile
 15893  073A  391F               	andlw	31
 15894  073B  0472               	iorwf	??_readTC74,w
 15895  073C  1D03               	btfss	3,2
 15896  073D  2F3F               	goto	u447_21
 15897  073E  2F40               	goto	u447_20
 15898  073F                     u447_21:
 15899  073F  2F34               	goto	i1l5503
 15900  0740                     u447_20:
 15901  0740                     i1l1111:	
 15902                           ;main.c: 90:  do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); 
      +                          } while (0); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15903                           
 15904  0740  1691               	bsf	17,5	;volatile
 15905  0741  1611               	bsf	17,4	;volatile
 15906  0742                     i1l1112:
 15907  0742  1A11               	btfsc	17,4	;volatile
 15908  0743  2F45               	goto	u448_21
 15909  0744  2F46               	goto	u448_20
 15910  0745                     u448_21:
 15911  0745  2F42               	goto	i1l1112
 15912  0746                     u448_20:
 15913  0746                     i1l5505:
 15914  0746  0C0F               	rrf	15,w	;volatile
 15915  0747  0C89               	rrf	9,f
 15916  0748  3901               	andlw	1
 15917  0749  00F2               	movwf	??_readTC74
 15918  074A  0811               	movf	17,w	;volatile
 15919  074B  391F               	andlw	31
 15920  074C  0472               	iorwf	??_readTC74,w
 15921  074D  1D03               	btfss	3,2
 15922  074E  2F50               	goto	u449_21
 15923  074F  2F51               	goto	u449_20
 15924  0750                     u449_21:
 15925  0750  2F46               	goto	i1l5505
 15926  0751                     u449_20:
 15927  0751                     i1l1119:	
 15928                           ;main.c: 91:  do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 15929                           
 15930  0751  1511               	bsf	17,2	;volatile
 15931  0752                     i1l1120:
 15932  0752  1911               	btfsc	17,2	;volatile
 15933  0753  2F55               	goto	u450_21
 15934  0754  2F56               	goto	u450_20
 15935  0755                     u450_21:
 15936  0755  2F52               	goto	i1l1120
 15937  0756                     u450_20:
 15938  0756                     i1l1123:
 15939                           
 15940                           ;main.c: 92: } while (!(value & 0x40));
 15941  0756  1F73               	btfss	readTC74@value,6
 15942  0757  2F59               	goto	u451_21
 15943  0758  2F5A               	goto	u451_20
 15944  0759                     u451_21:
 15945  0759  2ED2               	goto	i1l1079
 15946  075A                     u451_20:
 15947  075A                     i1l5507:
 15948  075A  0C0F               	rrf	15,w	;volatile
 15949  075B  0C89               	rrf	9,f
 15950  075C  3901               	andlw	1
 15951  075D  00F2               	movwf	??_readTC74
 15952  075E  0811               	movf	17,w	;volatile
 15953  075F  391F               	andlw	31
 15954  0760  0472               	iorwf	??_readTC74,w
 15955  0761  1D03               	btfss	3,2
 15956  0762  2F64               	goto	u452_21
 15957  0763  2F65               	goto	u452_20
 15958  0764                     u452_21:
 15959  0764  2F5A               	goto	i1l5507
 15960  0765                     u452_20:
 15961  0765                     i1l1128:	
 15962                           ;main.c: 95:  do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((SSP1
      +                          CON2 & 0x1F) | (SSP1STATbits.R_W));
 15963                           
 15964  0765  1411               	bsf	17,0	;volatile
 15965  0766                     i1l1129:
 15966  0766  1811               	btfsc	17,0	;volatile
 15967  0767  2F69               	goto	u453_21
 15968  0768  2F6A               	goto	u453_20
 15969  0769                     u453_21:
 15970  0769  2F66               	goto	i1l1129
 15971  076A                     u453_20:
 15972  076A                     i1l5509:
 15973  076A  0C0F               	rrf	15,w	;volatile
 15974  076B  0C89               	rrf	9,f
 15975  076C  3901               	andlw	1
 15976  076D  00F2               	movwf	??_readTC74
 15977  076E  0811               	movf	17,w	;volatile
 15978  076F  391F               	andlw	31
 15979  0770  0472               	iorwf	??_readTC74,w
 15980  0771  1D03               	btfss	3,2
 15981  0772  2F74               	goto	u454_21
 15982  0773  2F75               	goto	u454_20
 15983  0774                     u454_21:
 15984  0774  2F6A               	goto	i1l5509
 15985  0775                     u454_20:
 15986  0775                     i1l5511:
 15987                           
 15988                           ;main.c: 96:  WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15989  0775  309A               	movlw	154
 15990  0776  3193  23E7  3186   	fcall	i1_WriteI2C
 15991  0779                     i1l5513:
 15992  0779  0023               	movlb	3	; select bank3
 15993  077A  0C0F               	rrf	15,w	;volatile
 15994  077B  0C89               	rrf	9,f
 15995  077C  3901               	andlw	1
 15996  077D  00F2               	movwf	??_readTC74
 15997  077E  0811               	movf	17,w	;volatile
 15998  077F  391F               	andlw	31
 15999  0780  0472               	iorwf	??_readTC74,w
 16000  0781  1D03               	btfss	3,2
 16001  0782  2F84               	goto	u455_21
 16002  0783  2F85               	goto	u455_20
 16003  0784                     u455_21:
 16004  0784  2F79               	goto	i1l5513
 16005  0785                     u455_20:
 16006  0785                     i1l5515:
 16007                           
 16008                           ;main.c: 97:  WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 16009  0785  3000               	movlw	0
 16010  0786  3193  23E7  3186   	fcall	i1_WriteI2C
 16011  0789                     i1l5517:
 16012  0789  0023               	movlb	3	; select bank3
 16013  078A  0C0F               	rrf	15,w	;volatile
 16014  078B  0C89               	rrf	9,f
 16015  078C  3901               	andlw	1
 16016  078D  00F2               	movwf	??_readTC74
 16017  078E  0811               	movf	17,w	;volatile
 16018  078F  391F               	andlw	31
 16019  0790  0472               	iorwf	??_readTC74,w
 16020  0791  1D03               	btfss	3,2
 16021  0792  2F94               	goto	u456_21
 16022  0793  2F95               	goto	u456_20
 16023  0794                     u456_21:
 16024  0794  2F89               	goto	i1l5517
 16025  0795                     u456_20:
 16026  0795                     i1l1142:	
 16027                           ;main.c: 98:  do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while ((SS
      +                          P1CON2 & 0x1F) | (SSP1STATbits.R_W));
 16028                           
 16029  0795  1491               	bsf	17,1	;volatile
 16030  0796                     i1l1143:
 16031  0796  1891               	btfsc	17,1	;volatile
 16032  0797  2F99               	goto	u457_21
 16033  0798  2F9A               	goto	u457_20
 16034  0799                     u457_21:
 16035  0799  2F96               	goto	i1l1143
 16036  079A                     u457_20:
 16037  079A                     i1l5519:
 16038  079A  0C0F               	rrf	15,w	;volatile
 16039  079B  0C89               	rrf	9,f
 16040  079C  3901               	andlw	1
 16041  079D  00F2               	movwf	??_readTC74
 16042  079E  0811               	movf	17,w	;volatile
 16043  079F  391F               	andlw	31
 16044  07A0  0472               	iorwf	??_readTC74,w
 16045  07A1  1D03               	btfss	3,2
 16046  07A2  2FA4               	goto	u458_21
 16047  07A3  2FA5               	goto	u458_20
 16048  07A4                     u458_21:
 16049  07A4  2F9A               	goto	i1l5519
 16050  07A5                     u458_20:
 16051  07A5                     i1l5521:
 16052                           
 16053                           ;main.c: 99:  WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 16054  07A5  309B               	movlw	155
 16055  07A6  3193  23E7  3186   	fcall	i1_WriteI2C
 16056  07A9                     i1l5523:
 16057  07A9  0023               	movlb	3	; select bank3
 16058  07AA  0C0F               	rrf	15,w	;volatile
 16059  07AB  0C89               	rrf	9,f
 16060  07AC  3901               	andlw	1
 16061  07AD  00F2               	movwf	??_readTC74
 16062  07AE  0811               	movf	17,w	;volatile
 16063  07AF  391F               	andlw	31
 16064  07B0  0472               	iorwf	??_readTC74,w
 16065  07B1  1D03               	btfss	3,2
 16066  07B2  2FB4               	goto	u459_21
 16067  07B3  2FB5               	goto	u459_20
 16068  07B4                     u459_21:
 16069  07B4  2FA9               	goto	i1l5523
 16070  07B5                     u459_20:
 16071  07B5                     i1l5525:
 16072                           
 16073                           ;main.c: 100:  value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 16074  07B5  3191  21F0  3186   	fcall	_ReadI2C
 16075  07B8  00F2               	movwf	??_readTC74
 16076  07B9  0872               	movf	??_readTC74,w
 16077  07BA  00F3               	movwf	readTC74@value
 16078  07BB                     i1l5527:
 16079  07BB  0023               	movlb	3	; select bank3
 16080  07BC  0C0F               	rrf	15,w	;volatile
 16081  07BD  0C89               	rrf	9,f
 16082  07BE  3901               	andlw	1
 16083  07BF  00F2               	movwf	??_readTC74
 16084  07C0  0811               	movf	17,w	;volatile
 16085  07C1  391F               	andlw	31
 16086  07C2  0472               	iorwf	??_readTC74,w
 16087  07C3  1D03               	btfss	3,2
 16088  07C4  2FC6               	goto	u460_21
 16089  07C5  2FC7               	goto	u460_20
 16090  07C6                     u460_21:
 16091  07C6  2FBB               	goto	i1l5527
 16092  07C7                     u460_20:
 16093  07C7                     i1l1156:	
 16094                           ;main.c: 101:  do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN);
      +                           } while (0); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 16095                           
 16096  07C7  1691               	bsf	17,5	;volatile
 16097  07C8  1611               	bsf	17,4	;volatile
 16098  07C9                     i1l1157:
 16099  07C9  1A11               	btfsc	17,4	;volatile
 16100  07CA  2FCC               	goto	u461_21
 16101  07CB  2FCD               	goto	u461_20
 16102  07CC                     u461_21:
 16103  07CC  2FC9               	goto	i1l1157
 16104  07CD                     u461_20:
 16105  07CD                     i1l5529:
 16106  07CD  0C0F               	rrf	15,w	;volatile
 16107  07CE  0C89               	rrf	9,f
 16108  07CF  3901               	andlw	1
 16109  07D0  00F2               	movwf	??_readTC74
 16110  07D1  0811               	movf	17,w	;volatile
 16111  07D2  391F               	andlw	31
 16112  07D3  0472               	iorwf	??_readTC74,w
 16113  07D4  1D03               	btfss	3,2
 16114  07D5  2FD7               	goto	u462_21
 16115  07D6  2FD8               	goto	u462_20
 16116  07D7                     u462_21:
 16117  07D7  2FCD               	goto	i1l5529
 16118  07D8                     u462_20:
 16119  07D8                     i1l1164:	
 16120                           ;main.c: 102:  do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 16121                           
 16122  07D8  1511               	bsf	17,2	;volatile
 16123  07D9                     i1l1165:
 16124  07D9  1911               	btfsc	17,2	;volatile
 16125  07DA  2FDC               	goto	u463_21
 16126  07DB  2FDD               	goto	u463_20
 16127  07DC                     u463_21:
 16128  07DC  2FD9               	goto	i1l1165
 16129  07DD                     u463_20:
 16130  07DD                     i1l5531:
 16131                           
 16132                           ;main.c: 104:  return value;
 16133  07DD  0873               	movf	readTC74@value,w
 16134  07DE                     i1l1169:
 16135  07DE  0008               	return
 16136  07DF                     __end_of_readTC74:
 16137                           
 16138                           	psect	text42
 16139  175E                     __ptext42:	
 16140 ;; *************** function _printLCD *****************
 16141 ;; Defined at:
 16142 ;;		line 143 in file "main.c"
 16143 ;; Parameters:    Size  Location     Type
 16144 ;;		None
 16145 ;; Auto vars:     Size  Location     Type
 16146 ;;  buf            33   41[BANK1 ] unsigned char [33]
 16147 ;; Return value:  Size  Location     Type
 16148 ;;                  1    wreg      void 
 16149 ;; Registers used:
 16150 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16151 ;; Tracked objects:
 16152 ;;		On entry : 0/0
 16153 ;;		On exit  : 0/0
 16154 ;;		Unchanged: 0/0
 16155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16157 ;;      Locals:         0       0      33       0       0       0       0       0       0       0       0       0       
      +0       0
 16158 ;;      Temps:          0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
 16159 ;;      Totals:         0       0      49       0       0       0       0       0       0       0       0       0       
      +0       0
 16160 ;;Total ram usage:       49 bytes
 16161 ;; Hardware stack levels used: 1
 16162 ;; Hardware stack levels required when called: 8
 16163 ;; This function calls:
 16164 ;;		_LCDbusy
 16165 ;;		_LCDcmd
 16166 ;;		_LCDstr
 16167 ;;		_sprintf
 16168 ;; This function is called by:
 16169 ;;		_timerInterrupt
 16170 ;; This function uses a non-reentrant model
 16171 ;;
 16172                           
 16173                           
 16174                           ;psect for function _printLCD
 16175  175E                     _printLCD:
 16176  175E                     i1l5547:	
 16177                           ;incstack = 0
 16178 ;; hardware stack exceeded
 16179                           ; Regs used in _printLCD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16180                           
 16181                           
 16182                           ;main.c: 145:     char buf[33];;main.c: 146:     LCDcmd(0x80);
 16183  175E  3080               	movlw	128
 16184  175F  3190  206B  3197   	fcall	_LCDcmd
 16185  1762                     i1l5549:	
 16186                           ;main.c: 147:     while (LCDbusy());
 16187                           
 16188  1762  3191  2130  3197   	fcall	_LCDbusy
 16189  1765  0877               	movf	?_LCDbusy,w
 16190  1766  0478               	iorwf	?_LCDbusy+1,w
 16191  1767  1D03               	btfss	3,2
 16192  1768  2F6A               	goto	u465_21
 16193  1769  2F6B               	goto	u465_20
 16194  176A                     u465_21:
 16195  176A  2F62               	goto	i1l5549
 16196  176B                     u465_20:
 16197  176B                     i1l5551:
 16198                           
 16199                           ;main.c: 148:     sprintf(buf, "%02d:%02d:%02d %c%c%c%c  %c", hours, minutes, seconds, M
      +                          , m, T, L, alarmc);
 16200  176B  3020               	movlw	low (STR_1| (0+32768))
 16201  176C  0021               	movlb	1	; select bank1
 16202  176D  00A0               	movwf	sprintf@fmt^(0+128)
 16203  176E  3098               	movlw	high (STR_1| (0+32768))
 16204  176F  00A1               	movwf	(sprintf@fmt^(0+128)+1)
 16205  1770  0022               	movlb	2	; select bank2
 16206  1771  082F               	movf	_hours^(0+256),w
 16207  1772  0021               	movlb	1	; select bank1
 16208  1773  00B9               	movwf	??_printLCD^(0+128)
 16209  1774  01BA               	clrf	(??_printLCD^(0+128)+1)
 16210  1775  0839               	movf	??_printLCD^(0+128),w
 16211  1776  00A2               	movwf	(?_sprintf^(0+128)+2)
 16212  1777  083A               	movf	(??_printLCD+1)^(0+128),w
 16213  1778  00A3               	movwf	((?_sprintf+1)^(0+128)+2)
 16214  1779  0022               	movlb	2	; select bank2
 16215  177A  082E               	movf	_minutes^(0+256),w
 16216  177B  0021               	movlb	1	; select bank1
 16217  177C  00BB               	movwf	(??_printLCD+2)^(0+128)
 16218  177D  01BC               	clrf	((??_printLCD+2)^(0+128)+1)
 16219  177E  083B               	movf	(??_printLCD+2)^(0+128),w
 16220  177F  00A4               	movwf	(?_sprintf^(0+128)+4)
 16221  1780  083C               	movf	(??_printLCD+3)^(0+128),w
 16222  1781  00A5               	movwf	((?_sprintf+1)^(0+128)+4)
 16223  1782  0022               	movlb	2	; select bank2
 16224  1783  082D               	movf	_seconds^(0+256),w
 16225  1784  0021               	movlb	1	; select bank1
 16226  1785  00BD               	movwf	(??_printLCD+4)^(0+128)
 16227  1786  01BE               	clrf	((??_printLCD+4)^(0+128)+1)
 16228  1787  083D               	movf	(??_printLCD+4)^(0+128),w
 16229  1788  00A6               	movwf	(?_sprintf^(0+128)+6)
 16230  1789  083E               	movf	(??_printLCD+5)^(0+128),w
 16231  178A  00A7               	movwf	((?_sprintf+1)^(0+128)+6)
 16232  178B  0022               	movlb	2	; select bank2
 16233  178C  0864               	movf	_M^(0+256),w
 16234  178D  0021               	movlb	1	; select bank1
 16235  178E  00BF               	movwf	(??_printLCD+6)^(0+128)
 16236  178F  01C0               	clrf	((??_printLCD+6)^(0+128)+1)
 16237  1790  083F               	movf	(??_printLCD+6)^(0+128),w
 16238  1791  00A8               	movwf	(?_sprintf^(0+128)+8)
 16239  1792  0840               	movf	(??_printLCD+7)^(0+128),w
 16240  1793  00A9               	movwf	((?_sprintf+1)^(0+128)+8)
 16241  1794  0023               	movlb	3	; select bank3
 16242  1795  085D               	movf	_m^(0+384),w
 16243  1796  0021               	movlb	1	; select bank1
 16244  1797  00C1               	movwf	(??_printLCD+8)^(0+128)
 16245  1798  01C2               	clrf	((??_printLCD+8)^(0+128)+1)
 16246  1799  0841               	movf	(??_printLCD+8)^(0+128),w
 16247  179A  00AA               	movwf	(?_sprintf^(0+128)+10)
 16248  179B  0842               	movf	(??_printLCD+9)^(0+128),w
 16249  179C  00AB               	movwf	((?_sprintf+1)^(0+128)+10)
 16250  179D  0022               	movlb	2	; select bank2
 16251  179E  0866               	movf	_T^(0+256),w
 16252  179F  0021               	movlb	1	; select bank1
 16253  17A0  00C3               	movwf	(??_printLCD+10)^(0+128)
 16254  17A1  01C4               	clrf	((??_printLCD+10)^(0+128)+1)
 16255  17A2  0843               	movf	(??_printLCD+10)^(0+128),w
 16256  17A3  00AC               	movwf	(?_sprintf^(0+128)+12)
 16257  17A4  0844               	movf	(??_printLCD+11)^(0+128),w
 16258  17A5  00AD               	movwf	((?_sprintf+1)^(0+128)+12)
 16259  17A6  0022               	movlb	2	; select bank2
 16260  17A7  0865               	movf	_L^(0+256),w
 16261  17A8  0021               	movlb	1	; select bank1
 16262  17A9  00C5               	movwf	(??_printLCD+12)^(0+128)
 16263  17AA  01C6               	clrf	((??_printLCD+12)^(0+128)+1)
 16264  17AB  0845               	movf	(??_printLCD+12)^(0+128),w
 16265  17AC  00AE               	movwf	(?_sprintf^(0+128)+14)
 16266  17AD  0846               	movf	(??_printLCD+13)^(0+128),w
 16267  17AE  00AF               	movwf	((?_sprintf+1)^(0+128)+14)
 16268  17AF  0022               	movlb	2	; select bank2
 16269  17B0  0863               	movf	_alarmc^(0+256),w
 16270  17B1  0021               	movlb	1	; select bank1
 16271  17B2  00C7               	movwf	(??_printLCD+14)^(0+128)
 16272  17B3  01C8               	clrf	((??_printLCD+14)^(0+128)+1)
 16273  17B4  0847               	movf	(??_printLCD+14)^(0+128),w
 16274  17B5  00B0               	movwf	(?_sprintf^(0+128)+16)
 16275  17B6  0848               	movf	(??_printLCD+15)^(0+128),w
 16276  17B7  00B1               	movwf	((?_sprintf+1)^(0+128)+16)
 16277  17B8  30C9               	movlw	(low (printLCD@buf| 0))& (0+255)
 16278  17B9  3192  22C0  3197   	fcall	_sprintf
 16279  17BC                     i1l5553:
 16280                           
 16281                           ;main.c: 149:     LCDstr(buf);
 16282  17BC  30C9               	movlw	(low (printLCD@buf| 0))& (0+255)
 16283  17BD  3191  2164  3197   	fcall	_LCDstr
 16284  17C0                     i1l5555:	
 16285                           ;main.c: 150:     while (LCDbusy());
 16286                           
 16287  17C0  3191  2130  3197   	fcall	_LCDbusy
 16288  17C3  0877               	movf	?_LCDbusy,w
 16289  17C4  0478               	iorwf	?_LCDbusy+1,w
 16290  17C5  1D03               	btfss	3,2
 16291  17C6  2FC8               	goto	u466_21
 16292  17C7  2FC9               	goto	u466_20
 16293  17C8                     u466_21:
 16294  17C8  2FC0               	goto	i1l5555
 16295  17C9                     u466_20:
 16296  17C9                     i1l5557:
 16297                           
 16298                           ;main.c: 151:     LCDcmd(0xc0);
 16299  17C9  30C0               	movlw	192
 16300  17CA  3190  206B  3197   	fcall	_LCDcmd
 16301  17CD                     i1l5559:
 16302                           
 16303                           ;main.c: 152:     sprintf(buf, "%02d C         %01d l", variable1, variable2);
 16304  17CD  303C               	movlw	low (STR_2| (0+32768))
 16305  17CE  0021               	movlb	1	; select bank1
 16306  17CF  00A0               	movwf	sprintf@fmt^(0+128)
 16307  17D0  3098               	movlw	high (STR_2| (0+32768))
 16308  17D1  00A1               	movwf	(sprintf@fmt^(0+128)+1)
 16309  17D2  086F               	movf	_variable1^(0+128),w
 16310  17D3  00B9               	movwf	??_printLCD^(0+128)
 16311  17D4  01BA               	clrf	(??_printLCD^(0+128)+1)
 16312  17D5  0839               	movf	??_printLCD^(0+128),w
 16313  17D6  00A2               	movwf	(?_sprintf^(0+128)+2)
 16314  17D7  083A               	movf	(??_printLCD+1)^(0+128),w
 16315  17D8  00A3               	movwf	((?_sprintf+1)^(0+128)+2)
 16316  17D9  086E               	movf	_variable2^(0+128),w
 16317  17DA  00BB               	movwf	(??_printLCD+2)^(0+128)
 16318  17DB  01BC               	clrf	((??_printLCD+2)^(0+128)+1)
 16319  17DC  083B               	movf	(??_printLCD+2)^(0+128),w
 16320  17DD  00A4               	movwf	(?_sprintf^(0+128)+4)
 16321  17DE  083C               	movf	(??_printLCD+3)^(0+128),w
 16322  17DF  00A5               	movwf	((?_sprintf+1)^(0+128)+4)
 16323  17E0  30C9               	movlw	(low (printLCD@buf| 0))& (0+255)
 16324  17E1  3192  22C0  3197   	fcall	_sprintf
 16325  17E4                     i1l5561:	
 16326                           ;main.c: 153:     while (LCDbusy());
 16327                           
 16328  17E4  3191  2130  3197   	fcall	_LCDbusy
 16329  17E7  0877               	movf	?_LCDbusy,w
 16330  17E8  0478               	iorwf	?_LCDbusy+1,w
 16331  17E9  1D03               	btfss	3,2
 16332  17EA  2FEC               	goto	u467_21
 16333  17EB  2FED               	goto	u467_20
 16334  17EC                     u467_21:
 16335  17EC  2FE4               	goto	i1l5561
 16336  17ED                     u467_20:
 16337  17ED                     i1l5563:
 16338                           
 16339                           ;main.c: 154:     LCDstr(buf);
 16340  17ED  30C9               	movlw	(low (printLCD@buf| 0))& (0+255)
 16341  17EE  3191  2164  3197   	fcall	_LCDstr
 16342  17F1                     i1l5565:	
 16343                           ;main.c: 155:     while (LCDbusy());
 16344                           
 16345  17F1  3191  2130  3197   	fcall	_LCDbusy
 16346  17F4  0877               	movf	?_LCDbusy,w
 16347  17F5  0478               	iorwf	?_LCDbusy+1,w
 16348  17F6  1D03               	btfss	3,2
 16349  17F7  2FF9               	goto	u468_21
 16350  17F8  2FFA               	goto	u468_20
 16351  17F9                     u468_21:
 16352  17F9  2FF1               	goto	i1l5565
 16353  17FA                     u468_20:
 16354  17FA                     i1l5567:
 16355                           
 16356                           ;main.c: 156:     LCDcmd(cursor);
 16357  17FA  0022               	movlb	2	; select bank2
 16358  17FB  0859               	movf	_cursor^(0+256),w
 16359  17FC  3190  206B  3197   	fcall	_LCDcmd
 16360  17FF                     i1l1192:
 16361  17FF  0008               	return
 16362  1800                     __end_of_printLCD:
 16363                           
 16364                           	psect	text43
 16365  12C0                     __ptext43:	
 16366 ;; *************** function _sprintf *****************
 16367 ;; Defined at:
 16368 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
 16369 ;; Parameters:    Size  Location     Type
 16370 ;;  s               1    wreg     PTR unsigned char 
 16371 ;;		 -> printLCD@buf(33), 
 16372 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
 16373 ;;		 -> STR_2(22), STR_1(28), 
 16374 ;; Auto vars:     Size  Location     Type
 16375 ;;  s               1   18[BANK1 ] PTR unsigned char 
 16376 ;;		 -> printLCD@buf(33), 
 16377 ;;  f               5   20[BANK1 ] struct _IO_FILE
 16378 ;;  ret             2    0        int 
 16379 ;;  ap              1   19[BANK1 ] PTR void [1]
 16380 ;;		 -> ?_sprintf(2), 
 16381 ;; Return value:  Size  Location     Type
 16382 ;;                  2    0[BANK1 ] int 
 16383 ;; Registers used:
 16384 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16385 ;; Tracked objects:
 16386 ;;		On entry : 0/0
 16387 ;;		On exit  : 0/0
 16388 ;;		Unchanged: 0/0
 16389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16390 ;;      Params:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
 16391 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 16392 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16393 ;;      Totals:         1       0      25       0       0       0       0       0       0       0       0       0       
      +0       0
 16394 ;;Total ram usage:       26 bytes
 16395 ;; Hardware stack levels used: 1
 16396 ;; Hardware stack levels required when called: 7
 16397 ;; This function calls:
 16398 ;;		_vfprintf
 16399 ;; This function is called by:
 16400 ;;		_printLCD
 16401 ;; This function uses a non-reentrant model
 16402 ;;
 16403                           
 16404                           
 16405                           ;psect for function _sprintf
 16406  12C0                     _sprintf:
 16407                           
 16408                           ;incstack = 0
 16409 ;; hardware stack exceeded
 16410                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16411                           ;sprintf@s stored from wreg
 16412  12C0  0021               	movlb	1	; select bank1
 16413  12C1  00B2               	movwf	sprintf@s^(0+128)
 16414  12C2                     i1l5419:
 16415  12C2  30A2               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
 16416  12C3  00FD               	movwf	??_sprintf
 16417  12C4  087D               	movf	??_sprintf,w
 16418  12C5  00B3               	movwf	sprintf@ap^(0+128)
 16419  12C6  0832               	movf	sprintf@s^(0+128),w
 16420  12C7  00FD               	movwf	??_sprintf
 16421  12C8  087D               	movf	??_sprintf,w
 16422  12C9  00B4               	movwf	sprintf@f^(0+128)
 16423  12CA                     i1l5421:
 16424  12CA  01B5               	clrf	(sprintf@f^(0+128)+1)
 16425  12CB  01B6               	clrf	((sprintf@f+1)^(0+128)+1)
 16426  12CC                     i1l5423:
 16427  12CC  01B7               	clrf	(sprintf@f^(0+128)+3)
 16428  12CD  01B8               	clrf	((sprintf@f+1)^(0+128)+3)
 16429  12CE                     i1l5425:
 16430  12CE  0821               	movf	(sprintf@fmt+1)^(0+128),w
 16431  12CF  0020               	movlb	0	; select bank0
 16432  12D0  00E5               	movwf	vfprintf@fmt+1
 16433  12D1  0021               	movlb	1	; select bank1
 16434  12D2  0820               	movf	sprintf@fmt^(0+128),w
 16435  12D3  0020               	movlb	0	; select bank0
 16436  12D4  00E4               	movwf	vfprintf@fmt
 16437  12D5  30B3               	movlw	(low (sprintf@ap| 0))& (0+255)
 16438  12D6  00FD               	movwf	??_sprintf
 16439  12D7  087D               	movf	??_sprintf,w
 16440  12D8  00E6               	movwf	vfprintf@ap
 16441  12D9  30B4               	movlw	(low (sprintf@f| 0))& (0+255)
 16442  12DA  3193  233A  3192   	fcall	_vfprintf
 16443  12DD                     i1l5427:
 16444  12DD  0021               	movlb	1	; select bank1
 16445  12DE  0835               	movf	(sprintf@f^(0+128)+1),w
 16446  12DF  0732               	addwf	sprintf@s^(0+128),w
 16447  12E0  00FD               	movwf	??_sprintf
 16448  12E1  087D               	movf	??_sprintf,w
 16449  12E2  0086               	movwf	6
 16450  12E3  0187               	clrf	7
 16451  12E4  0181               	clrf	1
 16452  12E5                     i1l2241:
 16453  12E5  0008               	return
 16454  12E6                     __end_of_sprintf:
 16455                           
 16456                           	psect	text44
 16457  133A                     __ptext44:	
 16458 ;; *************** function _vfprintf *****************
 16459 ;; Defined at:
 16460 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 16461 ;; Parameters:    Size  Location     Type
 16462 ;;  fp              1    wreg     PTR struct _IO_FILE
 16463 ;;		 -> sprintf@f(5), 
 16464 ;;  fmt             2   68[BANK0 ] PTR const unsigned char 
 16465 ;;		 -> STR_2(22), STR_1(28), 
 16466 ;;  ap              1   70[BANK0 ] PTR PTR void 
 16467 ;;		 -> sprintf@ap(1), 
 16468 ;; Auto vars:     Size  Location     Type
 16469 ;;  fp              1   73[BANK0 ] PTR struct _IO_FILE
 16470 ;;		 -> sprintf@f(5), 
 16471 ;;  cfmt            2   74[BANK0 ] PTR unsigned char 
 16472 ;;		 -> STR_2(22), STR_1(28), 
 16473 ;; Return value:  Size  Location     Type
 16474 ;;                  2   68[BANK0 ] int 
 16475 ;; Registers used:
 16476 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16477 ;; Tracked objects:
 16478 ;;		On entry : 0/0
 16479 ;;		On exit  : 0/0
 16480 ;;		Unchanged: 0/0
 16481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16482 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16483 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16484 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16485 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16486 ;;Total ram usage:        8 bytes
 16487 ;; Hardware stack levels used: 1
 16488 ;; Hardware stack levels required when called: 6
 16489 ;; This function calls:
 16490 ;;		_vfpfcnvrt
 16491 ;; This function is called by:
 16492 ;;		_sprintf
 16493 ;; This function uses a non-reentrant model
 16494 ;;
 16495                           
 16496                           
 16497                           ;psect for function _vfprintf
 16498  133A                     _vfprintf:
 16499                           
 16500                           ;incstack = 0
 16501 ;; hardware stack exceeded
 16502                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16503                           ;vfprintf@fp stored from wreg
 16504  133A  0020               	movlb	0	; select bank0
 16505  133B  00E9               	movwf	vfprintf@fp
 16506  133C                     i1l5377:
 16507                           
 16508                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
 16509  133C  0865               	movf	vfprintf@fmt+1,w
 16510  133D  00EB               	movwf	vfprintf@cfmt+1
 16511  133E  0864               	movf	vfprintf@fmt,w
 16512  133F  00EA               	movwf	vfprintf@cfmt
 16513  1340                     i1l5379:
 16514                           
 16515                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
 16516  1340  0022               	movlb	2	; select bank2
 16517  1341  01A0               	clrf	_nout^(0+256)
 16518  1342  01A1               	clrf	(_nout+1)^(0+256)
 16519                           
 16520                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 16521  1343  2B58               	goto	i1l5383
 16522  1344                     i1l5381:
 16523                           
 16524                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
 16525  1344  306A               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 16526  1345  00E7               	movwf	??_vfprintf
 16527  1346  0867               	movf	??_vfprintf,w
 16528  1347  00CE               	movwf	vfpfcnvrt@fmt
 16529  1348  0866               	movf	vfprintf@ap,w
 16530  1349  00E8               	movwf	??_vfprintf+1
 16531  134A  0868               	movf	??_vfprintf+1,w
 16532  134B  00CF               	movwf	vfpfcnvrt@ap
 16533  134C  0869               	movf	vfprintf@fp,w
 16534  134D  3185  2500  3193   	fcall	_vfpfcnvrt
 16535  1350  0020               	movlb	0	; select bank0
 16536  1351  084E               	movf	?_vfpfcnvrt,w
 16537  1352  0022               	movlb	2	; select bank2
 16538  1353  07A0               	addwf	_nout^(0+256),f
 16539  1354  0020               	movlb	0	; select bank0
 16540  1355  084F               	movf	?_vfpfcnvrt+1,w
 16541  1356  0022               	movlb	2	; select bank2
 16542  1357  3DA1               	addwfc	(_nout+1)^(0+256),f
 16543  1358                     i1l5383:
 16544                           
 16545                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 16546  1358  0020               	movlb	0	; select bank0
 16547  1359  086A               	movf	vfprintf@cfmt,w
 16548  135A  0084               	movwf	4
 16549  135B  086B               	movf	vfprintf@cfmt+1,w
 16550  135C  0085               	movwf	5
 16551  135D  0012               	moviw fsr0++
 16552  135E  1D03               	btfss	3,2
 16553  135F  2B61               	goto	u433_21
 16554  1360  2B62               	goto	u433_20
 16555  1361                     u433_21:
 16556  1361  2B44               	goto	i1l5381
 16557  1362                     u433_20:
 16558  1362                     i1l5385:
 16559                           
 16560                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
 16561  1362  0022               	movlb	2	; select bank2
 16562  1363  0821               	movf	(_nout+1)^(0+256),w
 16563  1364  0020               	movlb	0	; select bank0
 16564  1365  00E5               	movwf	?_vfprintf+1
 16565  1366  0022               	movlb	2	; select bank2
 16566  1367  0820               	movf	_nout^(0+256),w
 16567  1368  0020               	movlb	0	; select bank0
 16568  1369  00E4               	movwf	?_vfprintf
 16569  136A                     i1l2356:
 16570  136A  0008               	return
 16571  136B                     __end_of_vfprintf:
 16572                           
 16573                           	psect	text45
 16574  0500                     __ptext45:	
 16575 ;; *************** function _vfpfcnvrt *****************
 16576 ;; Defined at:
 16577 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 16578 ;; Parameters:    Size  Location     Type
 16579 ;;  fp              1    wreg     PTR struct _IO_FILE
 16580 ;;		 -> sprintf@f(5), 
 16581 ;;  fmt             1   46[BANK0 ] PTR PTR unsigned char 
 16582 ;;		 -> vfprintf@cfmt(2), 
 16583 ;;  ap              1   47[BANK0 ] PTR PTR void 
 16584 ;;		 -> sprintf@ap(1), 
 16585 ;; Auto vars:     Size  Location     Type
 16586 ;;  fp              1   67[BANK0 ] PTR struct _IO_FILE
 16587 ;;		 -> sprintf@f(5), 
 16588 ;;  ll              8   54[BANK0 ] long long 
 16589 ;;  llu             8    0        unsigned long long 
 16590 ;;  f               4    0        unsigned long long 
 16591 ;;  ct              3    0        unsigned char [3]
 16592 ;;  done            2   62[BANK0 ] int 
 16593 ;;  vp              2    0        PTR void 
 16594 ;;  i               2    0        int 
 16595 ;;  cp              2    0        PTR unsigned char 
 16596 ;;  c               1   66[BANK0 ] unsigned char 
 16597 ;; Return value:  Size  Location     Type
 16598 ;;                  2   46[BANK0 ] int 
 16599 ;; Registers used:
 16600 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 16601 ;; Tracked objects:
 16602 ;;		On entry : 0/0
 16603 ;;		On exit  : 0/0
 16604 ;;		Unchanged: 0/0
 16605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16606 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16607 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16608 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16609 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16610 ;;Total ram usage:       22 bytes
 16611 ;; Hardware stack levels used: 1
 16612 ;; Hardware stack levels required when called: 5
 16613 ;; This function calls:
 16614 ;;		_atoi
 16615 ;;		_ctoa
 16616 ;;		_dtoa
 16617 ;;		_fputc
 16618 ;;		_isdigit
 16619 ;; This function is called by:
 16620 ;;		_vfprintf
 16621 ;; This function uses a non-reentrant model
 16622 ;;
 16623                           
 16624                           
 16625                           ;psect for function _vfpfcnvrt
 16626  0500                     _vfpfcnvrt:
 16627                           
 16628                           ;incstack = 0
 16629 ;; hardware stack exceeded
 16630                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 16631                           ;vfpfcnvrt@fp stored from wreg
 16632  0500  0020               	movlb	0	; select bank0
 16633  0501  00E3               	movwf	vfpfcnvrt@fp
 16634  0502                     i1l5165:
 16635                           
 16636                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
 16637  0502  084E               	movf	vfpfcnvrt@fmt,w
 16638  0503  0086               	movwf	6
 16639  0504  0187               	clrf	7
 16640  0505  3F40               	moviw [0]fsr1
 16641  0506  00D0               	movwf	??_vfpfcnvrt
 16642  0507  3F41               	moviw [1]fsr1
 16643  0508  00D1               	movwf	??_vfpfcnvrt+1
 16644  0509  0850               	movf	??_vfpfcnvrt,w
 16645  050A  0084               	movwf	4
 16646  050B  0851               	movf	??_vfpfcnvrt+1,w
 16647  050C  0085               	movwf	5
 16648  050D  0012               	moviw fsr0++
 16649  050E  3A25               	xorlw	37
 16650  050F  1D03               	btfss	3,2
 16651  0510  2D12               	goto	u382_21
 16652  0511  2D13               	goto	u382_20
 16653  0512                     u382_21:
 16654  0512  2EAE               	goto	i1l5255
 16655  0513                     u382_20:
 16656  0513                     i1l5167:
 16657                           
 16658                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
 16659  0513  084E               	movf	vfpfcnvrt@fmt,w
 16660  0514  0086               	movwf	6
 16661  0515  0187               	clrf	7
 16662  0516  3001               	movlw	1
 16663  0517  0781               	addwf	1,f
 16664  0518  3141               	addfsr 1,1
 16665  0519  1803               	skipnc
 16666  051A  0A81               	incf	1,f
 16667  051B                     i1l5169:
 16668                           
 16669                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
 16670  051B  0022               	movlb	2	; select bank2
 16671  051C  01A2               	clrf	_width^(0+256)
 16672  051D  01A3               	clrf	(_width+1)^(0+256)
 16673  051E  0020               	movlb	0	; select bank0
 16674  051F  01EE               	clrf	_flags
 16675  0520  01EF               	clrf	_flags+1
 16676  0521                     i1l5171:
 16677                           
 16678                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
 16679  0521  30FF               	movlw	255
 16680  0522  0022               	movlb	2	; select bank2
 16681  0523  00A4               	movwf	_prec^(0+256)
 16682  0524  30FF               	movlw	255
 16683  0525  00A5               	movwf	(_prec^(0+256)+1)
 16684  0526                     i1l5173:
 16685                           
 16686                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
 16687  0526  0020               	movlb	0	; select bank0
 16688  0527  01DE               	clrf	vfpfcnvrt@done
 16689  0528  01DF               	clrf	vfpfcnvrt@done+1
 16690                           
 16691                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
 16692  0529  2D65               	goto	i1l5191
 16693  052A                     i1l2326:	
 16694                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 713:             
      +                              case '-' :
 16695                           
 16696                           
 16697                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
 16698  052A  146E               	bsf	_flags,0
 16699  052B                     i1l5175:
 16700                           
 16701                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
 16702  052B  084E               	movf	vfpfcnvrt@fmt,w
 16703  052C  0086               	movwf	6
 16704  052D  0187               	clrf	7
 16705  052E  3001               	movlw	1
 16706  052F  0781               	addwf	1,f
 16707  0530  3141               	addfsr 1,1
 16708  0531  1803               	skipnc
 16709  0532  0A81               	incf	1,f
 16710                           
 16711                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
 16712  0533  2D65               	goto	i1l5191
 16713  0534                     i1l2328:	
 16714                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 717:             
      +                              case '0' :
 16715                           
 16716                           
 16717                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
 16718  0534  14EE               	bsf	_flags,1
 16719  0535  2D2B               	goto	i1l5175
 16720  0536                     i1l2329:	
 16721                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 721:             
      +                              case '+' :
 16722                           
 16723                           
 16724                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
 16725  0536  156E               	bsf	_flags,2
 16726  0537  2D2B               	goto	i1l5175
 16727  0538                     i1l2330:	
 16728                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 725:             
      +                              case ' ' :
 16729                           
 16730                           
 16731                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
 16732  0538  15EE               	bsf	_flags,3
 16733  0539  2D2B               	goto	i1l5175
 16734  053A                     i1l2331:	
 16735                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 729:             
      +                              case '#' :
 16736                           
 16737                           
 16738                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
 16739  053A  166E               	bsf	_flags,4
 16740  053B  2D2B               	goto	i1l5175
 16741  053C                     i1l5185:
 16742                           
 16743                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
 16744  053C  3001               	movlw	1
 16745  053D  00DE               	movwf	vfpfcnvrt@done
 16746  053E  3000               	movlw	0
 16747  053F  00DF               	movwf	vfpfcnvrt@done+1
 16748                           
 16749                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
 16750  0540  2D65               	goto	i1l5191
 16751  0541                     i1l5189:
 16752  0541  084E               	movf	vfpfcnvrt@fmt,w
 16753  0542  0086               	movwf	6
 16754  0543  0187               	clrf	7
 16755  0544  3F40               	moviw [0]fsr1
 16756  0545  00D0               	movwf	??_vfpfcnvrt
 16757  0546  3F41               	moviw [1]fsr1
 16758  0547  00D1               	movwf	??_vfpfcnvrt+1
 16759  0548  0850               	movf	??_vfpfcnvrt,w
 16760  0549  0084               	movwf	4
 16761  054A  0851               	movf	??_vfpfcnvrt+1,w
 16762  054B  0085               	movwf	5
 16763  054C  0800               	movf	0,w	;code access
 16764  054D  00D2               	movwf	??_vfpfcnvrt+2
 16765  054E  01D3               	clrf	??_vfpfcnvrt+3
 16766                           
 16767                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16768                           ; Switch size 1, requested type "simple"
 16769                           ; Number of cases is 1, Range of values is 0 to 0
 16770                           ; switch strategies available:
 16771                           ; Name         Instructions Cycles
 16772                           ; simple_byte            4     3 (average)
 16773                           ; direct_byte            8     6 (fixed)
 16774                           ; jumptable            260     6 (fixed)
 16775                           ;	Chosen strategy is simple_byte
 16776  054F  0853               	movf	??_vfpfcnvrt+3,w
 16777  0550  3A00               	xorlw	0	; case 0
 16778  0551  1903               	skipnz
 16779  0552  2D54               	goto	i1l6989
 16780  0553  2D3C               	goto	i1l5185
 16781  0554                     i1l6989:
 16782                           
 16783                           ; Switch size 1, requested type "simple"
 16784                           ; Number of cases is 5, Range of values is 32 to 48
 16785                           ; switch strategies available:
 16786                           ; Name         Instructions Cycles
 16787                           ; simple_byte           16     9 (average)
 16788                           ; direct_byte           43     9 (fixed)
 16789                           ; jumptable            263     9 (fixed)
 16790                           ;	Chosen strategy is simple_byte
 16791  0554  0852               	movf	??_vfpfcnvrt+2,w
 16792  0555  3A20               	xorlw	32	; case 32
 16793  0556  1903               	skipnz
 16794  0557  2D38               	goto	i1l2330
 16795  0558  3A03               	xorlw	3	; case 35
 16796  0559  1903               	skipnz
 16797  055A  2D3A               	goto	i1l2331
 16798  055B  3A08               	xorlw	8	; case 43
 16799  055C  1903               	skipnz
 16800  055D  2D36               	goto	i1l2329
 16801  055E  3A06               	xorlw	6	; case 45
 16802  055F  1903               	skipnz
 16803  0560  2D2A               	goto	i1l2326
 16804  0561  3A1D               	xorlw	29	; case 48
 16805  0562  1903               	skipnz
 16806  0563  2D34               	goto	i1l2328
 16807  0564  2D3C               	goto	i1l5185
 16808  0565                     i1l5191:
 16809                           
 16810                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
 16811  0565  085E               	movf	vfpfcnvrt@done,w
 16812  0566  045F               	iorwf	vfpfcnvrt@done+1,w
 16813  0567  1903               	btfsc	3,2
 16814  0568  2D6A               	goto	u383_21
 16815  0569  2D6B               	goto	u383_20
 16816  056A                     u383_21:
 16817  056A  2D41               	goto	i1l5189
 16818  056B                     u383_20:
 16819  056B                     i1l2333:
 16820                           
 16821                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
 16822  056B  1C6E               	btfss	_flags,0
 16823  056C  2D6E               	goto	u384_21
 16824  056D  2D6F               	goto	u384_20
 16825  056E                     u384_21:
 16826  056E  2D73               	goto	i1l5195
 16827  056F                     u384_20:
 16828  056F                     i1l5193:
 16829                           
 16830                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
 16831  056F  30FD               	movlw	253
 16832  0570  05EE               	andwf	_flags,f
 16833  0571  30FF               	movlw	255
 16834  0572  05EF               	andwf	_flags+1,f
 16835  0573                     i1l5195:
 16836                           
 16837                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
 16838  0573  084E               	movf	vfpfcnvrt@fmt,w
 16839  0574  0086               	movwf	6
 16840  0575  0187               	clrf	7
 16841  0576  3F40               	moviw [0]fsr1
 16842  0577  00D0               	movwf	??_vfpfcnvrt
 16843  0578  3F41               	moviw [1]fsr1
 16844  0579  00D1               	movwf	??_vfpfcnvrt+1
 16845  057A  0850               	movf	??_vfpfcnvrt,w
 16846  057B  0084               	movwf	4
 16847  057C  0851               	movf	??_vfpfcnvrt+1,w
 16848  057D  0085               	movwf	5
 16849  057E  0012               	moviw fsr0++
 16850  057F  3A2A               	xorlw	42
 16851  0580  1D03               	btfss	3,2
 16852  0581  2D83               	goto	u385_21
 16853  0582  2D84               	goto	u385_20
 16854  0583                     u385_21:
 16855  0583  2DA6               	goto	i1l5207
 16856  0584                     u385_20:
 16857  0584                     i1l5197:
 16858                           
 16859                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
 16860  0584  084E               	movf	vfpfcnvrt@fmt,w
 16861  0585  0086               	movwf	6
 16862  0586  0187               	clrf	7
 16863  0587  3001               	movlw	1
 16864  0588  0781               	addwf	1,f
 16865  0589  3141               	addfsr 1,1
 16866  058A  1803               	skipnc
 16867  058B  0A81               	incf	1,f
 16868  058C                     i1l5199:
 16869                           
 16870                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
 16871  058C  084F               	movf	vfpfcnvrt@ap,w
 16872  058D  0086               	movwf	6
 16873  058E  0187               	clrf	7
 16874  058F  0801               	movf	1,w
 16875  0590  0084               	movwf	4
 16876  0591  0185               	clrf	5
 16877  0592  3002               	movlw	2
 16878  0593  0781               	addwf	1,f
 16879  0594  3F00               	moviw [0]fsr0
 16880  0595  0022               	movlb	2	; select bank2
 16881  0596  00A2               	movwf	_width^(0+256)
 16882  0597  3F01               	moviw [1]fsr0
 16883  0598  00A3               	movwf	(_width+1)^(0+256)
 16884  0599                     i1l5201:
 16885                           
 16886                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
 16887  0599  1FA3               	btfss	(_width+1)^(0+256),7
 16888  059A  2D9C               	goto	u386_21
 16889  059B  2D9D               	goto	u386_20
 16890  059C                     u386_21:
 16891  059C  2DE8               	goto	i1l5217
 16892  059D                     u386_20:
 16893  059D                     i1l5203:
 16894                           
 16895                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
 16896  059D  0020               	movlb	0	; select bank0
 16897  059E  146E               	bsf	_flags,0
 16898  059F                     i1l5205:
 16899                           
 16900                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
 16901  059F  0022               	movlb	2	; select bank2
 16902  05A0  09A2               	comf	_width^(0+256),f
 16903  05A1  09A3               	comf	(_width+1)^(0+256),f
 16904  05A2  0AA2               	incf	_width^(0+256),f
 16905  05A3  1903               	skipnz
 16906  05A4  0AA3               	incf	(_width+1)^(0+256),f
 16907  05A5  2DE8               	goto	i1l5217
 16908  05A6                     i1l5207:
 16909                           
 16910                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
 16911  05A6  084E               	movf	vfpfcnvrt@fmt,w
 16912  05A7  0086               	movwf	6
 16913  05A8  0187               	clrf	7
 16914  05A9  3F40               	moviw [0]fsr1
 16915  05AA  00F6               	movwf	atoi@s
 16916  05AB  3F41               	moviw [1]fsr1
 16917  05AC  00F7               	movwf	atoi@s+1
 16918  05AD  3188  205F  3185   	fcall	_atoi
 16919  05B0  0877               	movf	?_atoi+1,w
 16920  05B1  0022               	movlb	2	; select bank2
 16921  05B2  00A3               	movwf	(_width+1)^(0+256)
 16922  05B3  0876               	movf	?_atoi,w
 16923  05B4  00A2               	movwf	_width^(0+256)
 16924                           
 16925                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 16926  05B5  2DBE               	goto	i1l5211
 16927  05B6                     i1l5209:
 16928                           
 16929                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
 16930  05B6  084E               	movf	vfpfcnvrt@fmt,w
 16931  05B7  0086               	movwf	6
 16932  05B8  0187               	clrf	7
 16933  05B9  3001               	movlw	1
 16934  05BA  0781               	addwf	1,f
 16935  05BB  3141               	addfsr 1,1
 16936  05BC  1803               	skipnc
 16937  05BD  0A81               	incf	1,f
 16938  05BE                     i1l5211:
 16939  05BE  0020               	movlb	0	; select bank0
 16940  05BF  084E               	movf	vfpfcnvrt@fmt,w
 16941  05C0  0086               	movwf	6
 16942  05C1  0187               	clrf	7
 16943  05C2  3F40               	moviw [0]fsr1
 16944  05C3  00D0               	movwf	??_vfpfcnvrt
 16945  05C4  3F41               	moviw [1]fsr1
 16946  05C5  00D1               	movwf	??_vfpfcnvrt+1
 16947  05C6  0850               	movf	??_vfpfcnvrt,w
 16948  05C7  0084               	movwf	4
 16949  05C8  0851               	movf	??_vfpfcnvrt+1,w
 16950  05C9  0085               	movwf	5
 16951  05CA  0800               	movf	0,w	;code access
 16952  05CB  3ED0               	addlw	208
 16953  05CC  00D2               	movwf	??_vfpfcnvrt+2
 16954  05CD  30FF               	movlw	255
 16955  05CE  1803               	skipnc
 16956  05CF  3000               	movlw	0
 16957  05D0  00D3               	movwf	??_vfpfcnvrt+3
 16958  05D1  3000               	movlw	0
 16959  05D2  0253               	subwf	??_vfpfcnvrt+3,w
 16960  05D3  300A               	movlw	10
 16961  05D4  1903               	skipnz
 16962  05D5  0252               	subwf	??_vfpfcnvrt+2,w
 16963  05D6  1C03               	skipc
 16964  05D7  2DD9               	goto	u387_21
 16965  05D8  2DDB               	goto	u387_20
 16966  05D9                     u387_21:
 16967  05D9  3001               	movlw	1
 16968  05DA  2DDC               	goto	u388_20
 16969  05DB                     u387_20:
 16970  05DB  3000               	movlw	0
 16971  05DC                     u388_20:
 16972  05DC  00D4               	movwf	??_vfpfcnvrt+4
 16973  05DD  01D5               	clrf	??_vfpfcnvrt+5
 16974  05DE  0854               	movf	??_vfpfcnvrt+4,w
 16975  05DF  00E0               	movwf	_vfpfcnvrt$3310
 16976  05E0  0855               	movf	??_vfpfcnvrt+5,w
 16977  05E1  00E1               	movwf	_vfpfcnvrt$3310+1
 16978  05E2                     i1l5215:
 16979  05E2  0860               	movf	_vfpfcnvrt$3310,w
 16980  05E3  0461               	iorwf	_vfpfcnvrt$3310+1,w
 16981  05E4  1D03               	btfss	3,2
 16982  05E5  2DE7               	goto	u389_21
 16983  05E6  2DE8               	goto	u389_20
 16984  05E7                     u389_21:
 16985  05E7  2DB6               	goto	i1l5209
 16986  05E8                     u389_20:
 16987  05E8                     i1l5217:
 16988                           
 16989                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 814:         if (
      +                          *fmt[0] == 'c') {
 16990  05E8  0020               	movlb	0	; select bank0
 16991  05E9  084E               	movf	vfpfcnvrt@fmt,w
 16992  05EA  0086               	movwf	6
 16993  05EB  0187               	clrf	7
 16994  05EC  3F40               	moviw [0]fsr1
 16995  05ED  00D0               	movwf	??_vfpfcnvrt
 16996  05EE  3F41               	moviw [1]fsr1
 16997  05EF  00D1               	movwf	??_vfpfcnvrt+1
 16998  05F0  0850               	movf	??_vfpfcnvrt,w
 16999  05F1  0084               	movwf	4
 17000  05F2  0851               	movf	??_vfpfcnvrt+1,w
 17001  05F3  0085               	movwf	5
 17002  05F4  0012               	moviw fsr0++
 17003  05F5  3A63               	xorlw	99
 17004  05F6  1D03               	btfss	3,2
 17005  05F7  2DF9               	goto	u390_21
 17006  05F8  2DFA               	goto	u390_20
 17007  05F9                     u390_21:
 17008  05F9  2E1C               	goto	i1l5227
 17009  05FA                     u390_20:
 17010  05FA                     i1l5219:
 17011                           
 17012                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 815:             
      +                          ++*fmt;
 17013  05FA  084E               	movf	vfpfcnvrt@fmt,w
 17014  05FB  0086               	movwf	6
 17015  05FC  0187               	clrf	7
 17016  05FD  3001               	movlw	1
 17017  05FE  0781               	addwf	1,f
 17018  05FF  3141               	addfsr 1,1
 17019  0600  1803               	skipnc
 17020  0601  0A81               	incf	1,f
 17021  0602                     i1l5221:
 17022                           
 17023                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 816:             
      +                          c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
 17024  0602  084F               	movf	vfpfcnvrt@ap,w
 17025  0603  0086               	movwf	6
 17026  0604  0187               	clrf	7
 17027  0605  0801               	movf	1,w
 17028  0606  0084               	movwf	4
 17029  0607  0185               	clrf	5
 17030  0608  3002               	movlw	2
 17031  0609  0781               	addwf	1,f
 17032  060A  0800               	movf	0,w
 17033  060B  00D0               	movwf	??_vfpfcnvrt
 17034  060C  0850               	movf	??_vfpfcnvrt,w
 17035  060D  00E2               	movwf	vfpfcnvrt@c
 17036  060E                     i1l5223:
 17037                           
 17038                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 817:             
      +                          return ctoa(fp, c);
 17039  060E  0862               	movf	vfpfcnvrt@c,w
 17040  060F  00D0               	movwf	??_vfpfcnvrt
 17041  0610  0850               	movf	??_vfpfcnvrt,w
 17042  0611  00F8               	movwf	ctoa@c
 17043  0612  0863               	movf	vfpfcnvrt@fp,w
 17044  0613  3195  25DC  3185   	fcall	_ctoa
 17045  0616  0879               	movf	?_ctoa+1,w
 17046  0617  0020               	movlb	0	; select bank0
 17047  0618  00CF               	movwf	?_vfpfcnvrt+1
 17048  0619  0878               	movf	?_ctoa,w
 17049  061A  00CE               	movwf	?_vfpfcnvrt
 17050  061B  2ED1               	goto	i1l2346
 17051  061C                     i1l5227:
 17052                           
 17053                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 17054  061C  084E               	movf	vfpfcnvrt@fmt,w
 17055  061D  0086               	movwf	6
 17056  061E  0187               	clrf	7
 17057  061F  3F40               	moviw [0]fsr1
 17058  0620  00D0               	movwf	??_vfpfcnvrt
 17059  0621  3F41               	moviw [1]fsr1
 17060  0622  00D1               	movwf	??_vfpfcnvrt+1
 17061  0623  0850               	movf	??_vfpfcnvrt,w
 17062  0624  0084               	movwf	4
 17063  0625  0851               	movf	??_vfpfcnvrt+1,w
 17064  0626  0085               	movwf	5
 17065  0627  0012               	moviw fsr0++
 17066  0628  3A64               	xorlw	100
 17067  0629  1903               	btfsc	3,2
 17068  062A  2E2C               	goto	u391_21
 17069  062B  2E2D               	goto	u391_20
 17070  062C                     u391_21:
 17071  062C  2E3E               	goto	i1l5231
 17072  062D                     u391_20:
 17073  062D                     i1l5229:
 17074  062D  084E               	movf	vfpfcnvrt@fmt,w
 17075  062E  0086               	movwf	6
 17076  062F  0187               	clrf	7
 17077  0630  3F40               	moviw [0]fsr1
 17078  0631  00D0               	movwf	??_vfpfcnvrt
 17079  0632  3F41               	moviw [1]fsr1
 17080  0633  00D1               	movwf	??_vfpfcnvrt+1
 17081  0634  0850               	movf	??_vfpfcnvrt,w
 17082  0635  0084               	movwf	4
 17083  0636  0851               	movf	??_vfpfcnvrt+1,w
 17084  0637  0085               	movwf	5
 17085  0638  0012               	moviw fsr0++
 17086  0639  3A69               	xorlw	105
 17087  063A  1D03               	btfss	3,2
 17088  063B  2E3D               	goto	u392_21
 17089  063C  2E3E               	goto	u392_20
 17090  063D                     u392_21:
 17091  063D  2E79               	goto	i1l5239
 17092  063E                     u392_20:
 17093  063E                     i1l5231:
 17094                           
 17095                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
 17096  063E  084E               	movf	vfpfcnvrt@fmt,w
 17097  063F  0086               	movwf	6
 17098  0640  0187               	clrf	7
 17099  0641  3001               	movlw	1
 17100  0642  0781               	addwf	1,f
 17101  0643  3141               	addfsr 1,1
 17102  0644  1803               	skipnc
 17103  0645  0A81               	incf	1,f
 17104  0646                     i1l5233:
 17105                           
 17106                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 17107  0646  084F               	movf	vfpfcnvrt@ap,w
 17108  0647  0086               	movwf	6
 17109  0648  0187               	clrf	7
 17110  0649  0801               	movf	1,w
 17111  064A  0084               	movwf	4
 17112  064B  0185               	clrf	5
 17113  064C  3002               	movlw	2
 17114  064D  0781               	addwf	1,f
 17115  064E  3F00               	moviw [0]fsr0
 17116  064F  00D0               	movwf	??_vfpfcnvrt
 17117  0650  3F01               	moviw [1]fsr0
 17118  0651  00D1               	movwf	??_vfpfcnvrt+1
 17119  0652  0850               	movf	??_vfpfcnvrt,w
 17120  0653  00D6               	movwf	vfpfcnvrt@ll
 17121  0654  0851               	movf	??_vfpfcnvrt+1,w
 17122  0655  00D7               	movwf	vfpfcnvrt@ll+1
 17123  0656  0D89               	rlf	9,f
 17124  0657  3B89               	subwfb	9,f
 17125  0658  0989               	comf	9,f
 17126  0659  00D8               	movwf	vfpfcnvrt@ll+2
 17127  065A  00D9               	movwf	vfpfcnvrt@ll+3
 17128  065B  00DA               	movwf	vfpfcnvrt@ll+4
 17129  065C  00DB               	movwf	vfpfcnvrt@ll+5
 17130  065D  00DC               	movwf	vfpfcnvrt@ll+6
 17131  065E  00DD               	movwf	vfpfcnvrt@ll+7
 17132  065F                     i1l5235:
 17133                           
 17134                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
 17135  065F  0856               	movf	vfpfcnvrt@ll,w
 17136  0660  00B0               	movwf	dtoa@d
 17137  0661  0857               	movf	vfpfcnvrt@ll+1,w
 17138  0662  00B1               	movwf	dtoa@d+1
 17139  0663  0858               	movf	vfpfcnvrt@ll+2,w
 17140  0664  00B2               	movwf	dtoa@d+2
 17141  0665  0859               	movf	vfpfcnvrt@ll+3,w
 17142  0666  00B3               	movwf	dtoa@d+3
 17143  0667  085A               	movf	vfpfcnvrt@ll+4,w
 17144  0668  00B4               	movwf	dtoa@d+4
 17145  0669  085B               	movf	vfpfcnvrt@ll+5,w
 17146  066A  00B5               	movwf	dtoa@d+5
 17147  066B  085C               	movf	vfpfcnvrt@ll+6,w
 17148  066C  00B6               	movwf	dtoa@d+6
 17149  066D  085D               	movf	vfpfcnvrt@ll+7,w
 17150  066E  00B7               	movwf	dtoa@d+7
 17151  066F  0863               	movf	vfpfcnvrt@fp,w
 17152  0670  318E  2694  3185   	fcall	_dtoa
 17153  0673  0020               	movlb	0	; select bank0
 17154  0674  0831               	movf	?_dtoa+1,w
 17155  0675  00CF               	movwf	?_vfpfcnvrt+1
 17156  0676  0830               	movf	?_dtoa,w
 17157  0677  00CE               	movwf	?_vfpfcnvrt
 17158  0678  2ED1               	goto	i1l2346
 17159  0679                     i1l5239:
 17160                           
 17161                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
 17162  0679  084E               	movf	vfpfcnvrt@fmt,w
 17163  067A  0086               	movwf	6
 17164  067B  0187               	clrf	7
 17165  067C  3F40               	moviw [0]fsr1
 17166  067D  00D0               	movwf	??_vfpfcnvrt
 17167  067E  3F41               	moviw [1]fsr1
 17168  067F  00D1               	movwf	??_vfpfcnvrt+1
 17169  0680  0850               	movf	??_vfpfcnvrt,w
 17170  0681  0084               	movwf	4
 17171  0682  0851               	movf	??_vfpfcnvrt+1,w
 17172  0683  0085               	movwf	5
 17173  0684  0012               	moviw fsr0++
 17174  0685  3A25               	xorlw	37
 17175  0686  1D03               	btfss	3,2
 17176  0687  2E89               	goto	u393_21
 17177  0688  2E8A               	goto	u393_20
 17178  0689                     u393_21:
 17179  0689  2EA3               	goto	i1l5249
 17180  068A                     u393_20:
 17181  068A                     i1l5241:
 17182                           
 17183                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
 17184  068A  084E               	movf	vfpfcnvrt@fmt,w
 17185  068B  0086               	movwf	6
 17186  068C  0187               	clrf	7
 17187  068D  3001               	movlw	1
 17188  068E  0781               	addwf	1,f
 17189  068F  3141               	addfsr 1,1
 17190  0690  1803               	skipnc
 17191  0691  0A81               	incf	1,f
 17192  0692                     i1l5243:
 17193                           
 17194                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
 17195  0692  3025               	movlw	37
 17196  0693  00F0               	movwf	fputc@c
 17197  0694  3000               	movlw	0
 17198  0695  00F1               	movwf	fputc@c+1
 17199  0696  0863               	movf	vfpfcnvrt@fp,w
 17200  0697  00D0               	movwf	??_vfpfcnvrt
 17201  0698  0850               	movf	??_vfpfcnvrt,w
 17202  0699  00F2               	movwf	fputc@fp
 17203  069A  3194  2432  3185   	fcall	_fputc
 17204  069D                     i1l5245:
 17205                           
 17206                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
 17207  069D  3001               	movlw	1
 17208  069E  0020               	movlb	0	; select bank0
 17209  069F  00CE               	movwf	?_vfpfcnvrt
 17210  06A0  3000               	movlw	0
 17211  06A1  00CF               	movwf	?_vfpfcnvrt+1
 17212  06A2  2ED1               	goto	i1l2346
 17213  06A3                     i1l5249:
 17214                           
 17215                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
 17216  06A3  084E               	movf	vfpfcnvrt@fmt,w
 17217  06A4  0086               	movwf	6
 17218  06A5  0187               	clrf	7
 17219  06A6  3001               	movlw	1
 17220  06A7  0781               	addwf	1,f
 17221  06A8  3141               	addfsr 1,1
 17222  06A9  1803               	skipnc
 17223  06AA  0A81               	incf	1,f
 17224  06AB                     i1l5251:
 17225                           
 17226                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
 17227  06AB  01CE               	clrf	?_vfpfcnvrt
 17228  06AC  01CF               	clrf	?_vfpfcnvrt+1
 17229  06AD  2ED1               	goto	i1l2346
 17230  06AE                     i1l5255:
 17231                           
 17232                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
 17233  06AE  084E               	movf	vfpfcnvrt@fmt,w
 17234  06AF  0086               	movwf	6
 17235  06B0  0187               	clrf	7
 17236  06B1  3F40               	moviw [0]fsr1
 17237  06B2  00D0               	movwf	??_vfpfcnvrt
 17238  06B3  3F41               	moviw [1]fsr1
 17239  06B4  00D1               	movwf	??_vfpfcnvrt+1
 17240  06B5  0850               	movf	??_vfpfcnvrt,w
 17241  06B6  0084               	movwf	4
 17242  06B7  0851               	movf	??_vfpfcnvrt+1,w
 17243  06B8  0085               	movwf	5
 17244  06B9  0800               	movf	0,w	;code access
 17245  06BA  00D2               	movwf	??_vfpfcnvrt+2
 17246  06BB  01D3               	clrf	??_vfpfcnvrt+3
 17247  06BC  0852               	movf	??_vfpfcnvrt+2,w
 17248  06BD  00F0               	movwf	fputc@c
 17249  06BE  0853               	movf	??_vfpfcnvrt+3,w
 17250  06BF  00F1               	movwf	fputc@c+1
 17251  06C0  0863               	movf	vfpfcnvrt@fp,w
 17252  06C1  00D4               	movwf	??_vfpfcnvrt+4
 17253  06C2  0854               	movf	??_vfpfcnvrt+4,w
 17254  06C3  00F2               	movwf	fputc@fp
 17255  06C4  3194  2432  3185   	fcall	_fputc
 17256  06C7                     i1l5257:
 17257                           
 17258                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
 17259  06C7  0020               	movlb	0	; select bank0
 17260  06C8  084E               	movf	vfpfcnvrt@fmt,w
 17261  06C9  0086               	movwf	6
 17262  06CA  0187               	clrf	7
 17263  06CB  3001               	movlw	1
 17264  06CC  0781               	addwf	1,f
 17265  06CD  3141               	addfsr 1,1
 17266  06CE  1803               	skipnc
 17267  06CF  0A81               	incf	1,f
 17268  06D0  2E9D               	goto	i1l5245
 17269  06D1                     i1l2346:
 17270  06D1  0008               	return
 17271  06D2                     __end_of_vfpfcnvrt:
 17272                           
 17273                           	psect	text46
 17274  0E94                     __ptext46:	
 17275 ;; *************** function _dtoa *****************
 17276 ;; Defined at:
 17277 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 17278 ;; Parameters:    Size  Location     Type
 17279 ;;  fp              1    wreg     PTR struct _IO_FILE
 17280 ;;		 -> sprintf@f(5), 
 17281 ;;  d               8   16[BANK0 ] long long 
 17282 ;; Auto vars:     Size  Location     Type
 17283 ;;  fp              1   29[BANK0 ] PTR struct _IO_FILE
 17284 ;;		 -> sprintf@f(5), 
 17285 ;;  n               8   36[BANK0 ] long long 
 17286 ;;  i               2   44[BANK0 ] int 
 17287 ;;  s               2   34[BANK0 ] int 
 17288 ;;  w               2   32[BANK0 ] int 
 17289 ;;  p               2   30[BANK0 ] int 
 17290 ;; Return value:  Size  Location     Type
 17291 ;;                  2   16[BANK0 ] int 
 17292 ;; Registers used:
 17293 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17294 ;; Tracked objects:
 17295 ;;		On entry : 0/0
 17296 ;;		On exit  : 0/0
 17297 ;;		Unchanged: 0/0
 17298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17299 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17300 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17301 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17302 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17303 ;;Total ram usage:       30 bytes
 17304 ;; Hardware stack levels used: 1
 17305 ;; Hardware stack levels required when called: 4
 17306 ;; This function calls:
 17307 ;;		___aodiv
 17308 ;;		___aomod
 17309 ;;		_abs
 17310 ;;		_pad
 17311 ;; This function is called by:
 17312 ;;		_vfpfcnvrt
 17313 ;; This function uses a non-reentrant model
 17314 ;;
 17315                           
 17316                           
 17317                           ;psect for function _dtoa
 17318  0E94                     _dtoa:
 17319                           
 17320                           ;incstack = 0
 17321 ;; hardware stack exceeded
 17322                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17323                           ;dtoa@fp stored from wreg
 17324  0E94  0020               	movlb	0	; select bank0
 17325  0E95  00BD               	movwf	dtoa@fp
 17326  0E96                     i1l5023:
 17327                           
 17328                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
 17329  0E96  0830               	movf	dtoa@d,w
 17330  0E97  00C4               	movwf	dtoa@n
 17331  0E98  0831               	movf	dtoa@d+1,w
 17332  0E99  00C5               	movwf	dtoa@n+1
 17333  0E9A  0832               	movf	dtoa@d+2,w
 17334  0E9B  00C6               	movwf	dtoa@n+2
 17335  0E9C  0833               	movf	dtoa@d+3,w
 17336  0E9D  00C7               	movwf	dtoa@n+3
 17337  0E9E  0834               	movf	dtoa@d+4,w
 17338  0E9F  00C8               	movwf	dtoa@n+4
 17339  0EA0  0835               	movf	dtoa@d+5,w
 17340  0EA1  00C9               	movwf	dtoa@n+5
 17341  0EA2  0836               	movf	dtoa@d+6,w
 17342  0EA3  00CA               	movwf	dtoa@n+6
 17343  0EA4  0837               	movf	dtoa@d+7,w
 17344  0EA5  00CB               	movwf	dtoa@n+7
 17345  0EA6                     i1l5025:
 17346                           
 17347                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
 17348  0EA6  3044               	movlw	low dtoa@n
 17349  0EA7  0086               	movwf	6
 17350  0EA8  3000               	movlw	high dtoa@n
 17351  0EA9  0087               	movwf	7
 17352  0EAA  3F47               	moviw [7]fsr1
 17353  0EAB  00B8               	movwf	??_dtoa
 17354  0EAC  1BB8               	btfsc	??_dtoa,7
 17355  0EAD  2EAF               	goto	u347_21
 17356  0EAE  2EB1               	goto	u347_20
 17357  0EAF                     u347_21:
 17358  0EAF  3001               	movlw	1
 17359  0EB0  2EB2               	goto	u348_20
 17360  0EB1                     u347_20:
 17361  0EB1  3000               	movlw	0
 17362  0EB2                     u348_20:
 17363  0EB2  0020               	movlb	0	; select bank0
 17364  0EB3  00B9               	movwf	??_dtoa+1
 17365  0EB4  01BA               	clrf	??_dtoa+2
 17366  0EB5  0839               	movf	??_dtoa+1,w
 17367  0EB6  00C2               	movwf	dtoa@s
 17368  0EB7  083A               	movf	??_dtoa+2,w
 17369  0EB8  00C3               	movwf	dtoa@s+1
 17370  0EB9                     i1l5027:
 17371                           
 17372                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
 17373  0EB9  0842               	movf	dtoa@s,w
 17374  0EBA  0443               	iorwf	dtoa@s+1,w
 17375  0EBB  1903               	btfsc	3,2
 17376  0EBC  2EBE               	goto	u349_21
 17377  0EBD  2EBF               	goto	u349_20
 17378  0EBE                     u349_21:
 17379  0EBE  2EDD               	goto	i1l2296
 17380  0EBF                     u349_20:
 17381  0EBF                     i1l5029:
 17382                           
 17383                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
 17384  0EBF  09C4               	comf	dtoa@n,f
 17385  0EC0  09C5               	comf	dtoa@n+1,f
 17386  0EC1  09C6               	comf	dtoa@n+2,f
 17387  0EC2  09C7               	comf	dtoa@n+3,f
 17388  0EC3  09C8               	comf	dtoa@n+4,f
 17389  0EC4  09C9               	comf	dtoa@n+5,f
 17390  0EC5  09CA               	comf	dtoa@n+6,f
 17391  0EC6  09CB               	comf	dtoa@n+7,f
 17392  0EC7  0AC4               	incf	dtoa@n,f
 17393  0EC8  1D03               	skipz
 17394  0EC9  2EDD               	goto	u350_2lld
 17395  0ECA  0AC5               	incf	dtoa@n+1,f
 17396  0ECB  1D03               	skipz
 17397  0ECC  2EDD               	goto	u350_2lld
 17398  0ECD  0AC6               	incf	dtoa@n+2,f
 17399  0ECE  1D03               	skipz
 17400  0ECF  2EDD               	goto	u350_2lld
 17401  0ED0  0AC7               	incf	dtoa@n+3,f
 17402  0ED1  1D03               	skipz
 17403  0ED2  2EDD               	goto	u350_2lld
 17404  0ED3  0AC8               	incf	dtoa@n+4,f
 17405  0ED4  1D03               	skipz
 17406  0ED5  2EDD               	goto	u350_2lld
 17407  0ED6  0AC9               	incf	dtoa@n+5,f
 17408  0ED7  1D03               	skipz
 17409  0ED8  2EDD               	goto	u350_2lld
 17410  0ED9  0ACA               	incf	dtoa@n+6,f
 17411  0EDA  1D03               	skipz
 17412  0EDB  2EDD               	goto	u350_2lld
 17413  0EDC  0ACB               	incf	dtoa@n+7,f
 17414  0EDD                     u350_2lld:
 17415  0EDD                     i1l2296:	
 17416                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 297:     }
 17417                           
 17418                           
 17419                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
 17420  0EDD  0022               	movlb	2	; select bank2
 17421  0EDE  1BA5               	btfsc	(_prec+1)^(0+256),7
 17422  0EDF  2EE1               	goto	u351_21
 17423  0EE0  2EE2               	goto	u351_20
 17424  0EE1                     u351_21:
 17425  0EE1  2EE7               	goto	i1l2297
 17426  0EE2                     u351_20:
 17427  0EE2                     i1l5031:
 17428                           
 17429                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
 17430  0EE2  30FD               	movlw	253
 17431  0EE3  0020               	movlb	0	; select bank0
 17432  0EE4  05EE               	andwf	_flags,f
 17433  0EE5  30FF               	movlw	255
 17434  0EE6  05EF               	andwf	_flags+1,f
 17435  0EE7                     i1l2297:	
 17436                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 302:     }
 17437                           
 17438                           
 17439                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
 17440  0EE7  0022               	movlb	2	; select bank2
 17441  0EE8  0825               	movf	(_prec+1)^(0+256),w
 17442  0EE9  3A80               	xorlw	128
 17443  0EEA  0020               	movlb	0	; select bank0
 17444  0EEB  00B8               	movwf	??_dtoa
 17445  0EEC  3080               	movlw	128
 17446  0EED  0238               	subwf	??_dtoa,w
 17447  0EEE  1D03               	skipz
 17448  0EEF  2EF3               	goto	u352_25
 17449  0EF0  3001               	movlw	1
 17450  0EF1  0022               	movlb	2	; select bank2
 17451  0EF2  0224               	subwf	_prec^(0+256),w
 17452  0EF3                     u352_25:
 17453  0EF3  1803               	skipnc
 17454  0EF4  2EF6               	goto	u352_21
 17455  0EF5  2EF7               	goto	u352_20
 17456  0EF6                     u352_21:
 17457  0EF6  2EFD               	goto	i1l5035
 17458  0EF7                     u352_20:
 17459  0EF7                     i1l5033:
 17460  0EF7  3001               	movlw	1
 17461  0EF8  0020               	movlb	0	; select bank0
 17462  0EF9  00BE               	movwf	dtoa@p
 17463  0EFA  3000               	movlw	0
 17464  0EFB  00BF               	movwf	dtoa@p+1
 17465  0EFC  2F05               	goto	i1l2301
 17466  0EFD                     i1l5035:
 17467  0EFD  0022               	movlb	2	; select bank2
 17468  0EFE  0825               	movf	(_prec+1)^(0+256),w
 17469  0EFF  0020               	movlb	0	; select bank0
 17470  0F00  00BF               	movwf	dtoa@p+1
 17471  0F01  0022               	movlb	2	; select bank2
 17472  0F02  0824               	movf	_prec^(0+256),w
 17473  0F03  0020               	movlb	0	; select bank0
 17474  0F04  00BE               	movwf	dtoa@p
 17475  0F05                     i1l2301:
 17476                           
 17477                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
 17478  0F05  0022               	movlb	2	; select bank2
 17479  0F06  0823               	movf	(_width+1)^(0+256),w
 17480  0F07  0020               	movlb	0	; select bank0
 17481  0F08  00C1               	movwf	dtoa@w+1
 17482  0F09  0022               	movlb	2	; select bank2
 17483  0F0A  0822               	movf	_width^(0+256),w
 17484  0F0B  0020               	movlb	0	; select bank0
 17485  0F0C  00C0               	movwf	dtoa@w
 17486  0F0D                     i1l5037:
 17487                           
 17488                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
 17489  0F0D  0842               	movf	dtoa@s,w
 17490  0F0E  0443               	iorwf	dtoa@s+1,w
 17491  0F0F  1D03               	btfss	3,2
 17492  0F10  2F12               	goto	u353_21
 17493  0F11  2F13               	goto	u353_20
 17494  0F12                     u353_21:
 17495  0F12  2F17               	goto	i1l5041
 17496  0F13                     u353_20:
 17497  0F13                     i1l5039:
 17498  0F13  1D6E               	btfss	_flags,2
 17499  0F14  2F16               	goto	u354_21
 17500  0F15  2F17               	goto	u354_20
 17501  0F16                     u354_21:
 17502  0F16  2F1B               	goto	i1l2302
 17503  0F17                     u354_20:
 17504  0F17                     i1l5041:
 17505                           
 17506                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
 17507  0F17  30FF               	movlw	255
 17508  0F18  07C0               	addwf	dtoa@w,f
 17509  0F19  30FF               	movlw	255
 17510  0F1A  3DC1               	addwfc	dtoa@w+1,f
 17511  0F1B                     i1l2302:	
 17512                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 307:     }
 17513                           
 17514                           
 17515                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
 17516  0F1B  301F               	movlw	31
 17517  0F1C  00CC               	movwf	dtoa@i
 17518  0F1D  3000               	movlw	0
 17519  0F1E  00CD               	movwf	dtoa@i+1
 17520  0F1F                     i1l5043:
 17521                           
 17522                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
 17523  0F1F  0023               	movlb	3	; select bank3
 17524  0F20  01DC               	clrf	(_dbuf^(0+384)+31)
 17525                           
 17526                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17527  0F21  2F8B               	goto	i1l2305
 17528  0F22                     i1l5045:
 17529                           
 17530                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
 17531  0F22  30FF               	movlw	255
 17532  0F23  0020               	movlb	0	; select bank0
 17533  0F24  07CC               	addwf	dtoa@i,f
 17534  0F25  30FF               	movlw	255
 17535  0F26  3DCD               	addwfc	dtoa@i+1,f
 17536  0F27                     i1l5047:
 17537                           
 17538                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
 17539  0F27  300A               	movlw	10
 17540  0F28  00A0               	movwf	___aomod@divisor
 17541  0F29  01A1               	clrf	___aomod@divisor+1
 17542  0F2A  01A2               	clrf	___aomod@divisor+2
 17543  0F2B  01A3               	clrf	___aomod@divisor+3
 17544  0F2C  01A4               	clrf	___aomod@divisor+4
 17545  0F2D  01A5               	clrf	___aomod@divisor+5
 17546  0F2E  01A6               	clrf	___aomod@divisor+6
 17547  0F2F  01A7               	clrf	___aomod@divisor+7
 17548  0F30  0844               	movf	dtoa@n,w
 17549  0F31  00A8               	movwf	___aomod@dividend
 17550  0F32  0845               	movf	dtoa@n+1,w
 17551  0F33  00A9               	movwf	___aomod@dividend+1
 17552  0F34  0846               	movf	dtoa@n+2,w
 17553  0F35  00AA               	movwf	___aomod@dividend+2
 17554  0F36  0847               	movf	dtoa@n+3,w
 17555  0F37  00AB               	movwf	___aomod@dividend+3
 17556  0F38  0848               	movf	dtoa@n+4,w
 17557  0F39  00AC               	movwf	___aomod@dividend+4
 17558  0F3A  0849               	movf	dtoa@n+5,w
 17559  0F3B  00AD               	movwf	___aomod@dividend+5
 17560  0F3C  084A               	movf	dtoa@n+6,w
 17561  0F3D  00AE               	movwf	___aomod@dividend+6
 17562  0F3E  084B               	movf	dtoa@n+7,w
 17563  0F3F  00AF               	movwf	___aomod@dividend+7
 17564  0F40  318B  2361  318E   	fcall	___aomod
 17565  0F43  0020               	movlb	0	; select bank0
 17566  0F44  0821               	movf	?___aomod+1,w
 17567  0F45  00F4               	movwf	abs@a+1
 17568  0F46  0820               	movf	?___aomod,w
 17569  0F47  00F3               	movwf	abs@a
 17570  0F48  3192  220A  318E   	fcall	_abs
 17571  0F4B  0873               	movf	?_abs,w
 17572  0F4C  3E30               	addlw	48
 17573  0F4D  0020               	movlb	0	; select bank0
 17574  0F4E  00B8               	movwf	??_dtoa
 17575  0F4F  084C               	movf	dtoa@i,w
 17576  0F50  3EBD               	addlw	(low (_dbuf| (0+256)))& (0+255)
 17577  0F51  0086               	movwf	6
 17578  0F52  3001               	movlw	1	; select bank3/4
 17579  0F53  0087               	movwf	7
 17580  0F54  0838               	movf	??_dtoa,w
 17581  0F55  0081               	movwf	1
 17582  0F56                     i1l5049:
 17583                           
 17584                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
 17585  0F56  30FF               	movlw	255
 17586  0F57  07BE               	addwf	dtoa@p,f
 17587  0F58  30FF               	movlw	255
 17588  0F59  3DBF               	addwfc	dtoa@p+1,f
 17589  0F5A                     i1l5051:
 17590                           
 17591                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
 17592  0F5A  30FF               	movlw	255
 17593  0F5B  07C0               	addwf	dtoa@w,f
 17594  0F5C  30FF               	movlw	255
 17595  0F5D  3DC1               	addwfc	dtoa@w+1,f
 17596  0F5E                     i1l5053:
 17597                           
 17598                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
 17599  0F5E  300A               	movlw	10
 17600  0F5F  00A0               	movwf	___aodiv@divisor
 17601  0F60  01A1               	clrf	___aodiv@divisor+1
 17602  0F61  01A2               	clrf	___aodiv@divisor+2
 17603  0F62  01A3               	clrf	___aodiv@divisor+3
 17604  0F63  01A4               	clrf	___aodiv@divisor+4
 17605  0F64  01A5               	clrf	___aodiv@divisor+5
 17606  0F65  01A6               	clrf	___aodiv@divisor+6
 17607  0F66  01A7               	clrf	___aodiv@divisor+7
 17608  0F67  0844               	movf	dtoa@n,w
 17609  0F68  00A8               	movwf	___aodiv@dividend
 17610  0F69  0845               	movf	dtoa@n+1,w
 17611  0F6A  00A9               	movwf	___aodiv@dividend+1
 17612  0F6B  0846               	movf	dtoa@n+2,w
 17613  0F6C  00AA               	movwf	___aodiv@dividend+2
 17614  0F6D  0847               	movf	dtoa@n+3,w
 17615  0F6E  00AB               	movwf	___aodiv@dividend+3
 17616  0F6F  0848               	movf	dtoa@n+4,w
 17617  0F70  00AC               	movwf	___aodiv@dividend+4
 17618  0F71  0849               	movf	dtoa@n+5,w
 17619  0F72  00AD               	movwf	___aodiv@dividend+5
 17620  0F73  084A               	movf	dtoa@n+6,w
 17621  0F74  00AE               	movwf	___aodiv@dividend+6
 17622  0F75  084B               	movf	dtoa@n+7,w
 17623  0F76  00AF               	movwf	___aodiv@dividend+7
 17624  0F77  318C  244B  318E   	fcall	___aodiv
 17625  0F7A  0020               	movlb	0	; select bank0
 17626  0F7B  0820               	movf	?___aodiv,w
 17627  0F7C  00C4               	movwf	dtoa@n
 17628  0F7D  0821               	movf	?___aodiv+1,w
 17629  0F7E  00C5               	movwf	dtoa@n+1
 17630  0F7F  0822               	movf	?___aodiv+2,w
 17631  0F80  00C6               	movwf	dtoa@n+2
 17632  0F81  0823               	movf	?___aodiv+3,w
 17633  0F82  00C7               	movwf	dtoa@n+3
 17634  0F83  0824               	movf	?___aodiv+4,w
 17635  0F84  00C8               	movwf	dtoa@n+4
 17636  0F85  0825               	movf	?___aodiv+5,w
 17637  0F86  00C9               	movwf	dtoa@n+5
 17638  0F87  0826               	movf	?___aodiv+6,w
 17639  0F88  00CA               	movwf	dtoa@n+6
 17640  0F89  0827               	movf	?___aodiv+7,w
 17641  0F8A  00CB               	movwf	dtoa@n+7
 17642  0F8B                     i1l2305:	
 17643                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 318:     }
 17644                           
 17645                           
 17646                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 17647  0F8B  0020               	movlb	0	; select bank0
 17648  0F8C  084D               	movf	dtoa@i+1,w
 17649  0F8D  3A80               	xorlw	128
 17650  0F8E  00B8               	movwf	??_dtoa
 17651  0F8F  3080               	movlw	128
 17652  0F90  0238               	subwf	??_dtoa,w
 17653  0F91  1D03               	skipz
 17654  0F92  2F95               	goto	u355_25
 17655  0F93  3001               	movlw	1
 17656  0F94  024C               	subwf	dtoa@i,w
 17657  0F95                     u355_25:
 17658  0F95  1C03               	skipc
 17659  0F96  2F98               	goto	u355_21
 17660  0F97  2F99               	goto	u355_20
 17661  0F98                     u355_21:
 17662  0F98  2FC6               	goto	i1l5063
 17663  0F99                     u355_20:
 17664  0F99                     i1l5055:
 17665  0F99  0020               	movlb	0	; select bank0
 17666  0F9A  0844               	movf	dtoa@n,w
 17667  0F9B  0445               	iorwf	dtoa@n+1,w
 17668  0F9C  0446               	iorwf	dtoa@n+2,w
 17669  0F9D  0447               	iorwf	dtoa@n+3,w
 17670  0F9E  0448               	iorwf	dtoa@n+4,w
 17671  0F9F  0449               	iorwf	dtoa@n+5,w
 17672  0FA0  044A               	iorwf	dtoa@n+6,w
 17673  0FA1  044B               	iorwf	dtoa@n+7,w
 17674  0FA2  1D03               	skipz
 17675  0FA3  2FA5               	goto	u356_21
 17676  0FA4  2FA6               	goto	u356_20
 17677  0FA5                     u356_21:
 17678  0FA5  2F22               	goto	i1l5045
 17679  0FA6                     u356_20:
 17680  0FA6                     i1l5057:
 17681  0FA6  083F               	movf	dtoa@p+1,w
 17682  0FA7  3A80               	xorlw	128
 17683  0FA8  00B8               	movwf	??_dtoa
 17684  0FA9  3080               	movlw	128
 17685  0FAA  0238               	subwf	??_dtoa,w
 17686  0FAB  1D03               	skipz
 17687  0FAC  2FAF               	goto	u357_25
 17688  0FAD  3001               	movlw	1
 17689  0FAE  023E               	subwf	dtoa@p,w
 17690  0FAF                     u357_25:
 17691  0FAF  1803               	skipnc
 17692  0FB0  2FB2               	goto	u357_21
 17693  0FB1  2FB3               	goto	u357_20
 17694  0FB2                     u357_21:
 17695  0FB2  2F22               	goto	i1l5045
 17696  0FB3                     u357_20:
 17697  0FB3                     i1l5059:
 17698  0FB3  0020               	movlb	0	; select bank0
 17699  0FB4  0841               	movf	dtoa@w+1,w
 17700  0FB5  3A80               	xorlw	128
 17701  0FB6  00B8               	movwf	??_dtoa
 17702  0FB7  3080               	movlw	128
 17703  0FB8  0238               	subwf	??_dtoa,w
 17704  0FB9  1D03               	skipz
 17705  0FBA  2FBD               	goto	u358_25
 17706  0FBB  3001               	movlw	1
 17707  0FBC  0240               	subwf	dtoa@w,w
 17708  0FBD                     u358_25:
 17709  0FBD  1C03               	skipc
 17710  0FBE  2FC0               	goto	u358_21
 17711  0FBF  2FC1               	goto	u358_20
 17712  0FC0                     u358_21:
 17713  0FC0  2FC6               	goto	i1l5063
 17714  0FC1                     u358_20:
 17715  0FC1                     i1l5061:
 17716  0FC1  0020               	movlb	0	; select bank0
 17717  0FC2  18EE               	btfsc	_flags,1
 17718  0FC3  2FC5               	goto	u359_21
 17719  0FC4  2FC6               	goto	u359_20
 17720  0FC5                     u359_21:
 17721  0FC5  2F22               	goto	i1l5045
 17722  0FC6                     u359_20:
 17723  0FC6                     i1l5063:
 17724                           
 17725                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
 17726  0FC6  0020               	movlb	0	; select bank0
 17727  0FC7  0842               	movf	dtoa@s,w
 17728  0FC8  0443               	iorwf	dtoa@s+1,w
 17729  0FC9  1D03               	btfss	3,2
 17730  0FCA  2FCC               	goto	u360_21
 17731  0FCB  2FCD               	goto	u360_20
 17732  0FCC                     u360_21:
 17733  0FCC  2FD1               	goto	i1l5067
 17734  0FCD                     u360_20:
 17735  0FCD                     i1l5065:
 17736  0FCD  1D6E               	btfss	_flags,2
 17737  0FCE  2FD0               	goto	u361_21
 17738  0FCF  2FD1               	goto	u361_20
 17739  0FD0                     u361_21:
 17740  0FD0  2FED               	goto	i1l5077
 17741  0FD1                     u361_20:
 17742  0FD1                     i1l5067:
 17743                           
 17744                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
 17745  0FD1  30FF               	movlw	255
 17746  0FD2  07CC               	addwf	dtoa@i,f
 17747  0FD3  30FF               	movlw	255
 17748  0FD4  3DCD               	addwfc	dtoa@i+1,f
 17749  0FD5                     i1l5069:
 17750                           
 17751                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
 17752  0FD5  0842               	movf	dtoa@s,w
 17753  0FD6  0443               	iorwf	dtoa@s+1,w
 17754  0FD7  1D03               	btfss	3,2
 17755  0FD8  2FDA               	goto	u362_21
 17756  0FD9  2FDB               	goto	u362_20
 17757  0FDA                     u362_21:
 17758  0FDA  2FE0               	goto	i1l5073
 17759  0FDB                     u362_20:
 17760  0FDB                     i1l5071:
 17761  0FDB  302B               	movlw	43
 17762  0FDC  00BB               	movwf	_dtoa$3295
 17763  0FDD  3000               	movlw	0
 17764  0FDE  00BC               	movwf	_dtoa$3295+1
 17765  0FDF  2FE4               	goto	i1l5075
 17766  0FE0                     i1l5073:
 17767  0FE0  302D               	movlw	45
 17768  0FE1  00BB               	movwf	_dtoa$3295
 17769  0FE2  3000               	movlw	0
 17770  0FE3  00BC               	movwf	_dtoa$3295+1
 17771  0FE4                     i1l5075:
 17772  0FE4  083B               	movf	_dtoa$3295,w
 17773  0FE5  00B8               	movwf	??_dtoa
 17774  0FE6  084C               	movf	dtoa@i,w
 17775  0FE7  3EBD               	addlw	(low (_dbuf| (0+256)))& (0+255)
 17776  0FE8  0086               	movwf	6
 17777  0FE9  3001               	movlw	1	; select bank3/4
 17778  0FEA  0087               	movwf	7
 17779  0FEB  0838               	movf	??_dtoa,w
 17780  0FEC  0081               	movwf	1
 17781  0FED                     i1l5077:
 17782                           
 17783                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
 17784  0FED  084C               	movf	dtoa@i,w
 17785  0FEE  3EBD               	addlw	(low (_dbuf| (0+256)))& (0+255)
 17786  0FEF  00B8               	movwf	??_dtoa
 17787  0FF0  0838               	movf	??_dtoa,w
 17788  0FF1  00A4               	movwf	pad@buf
 17789  0FF2  0841               	movf	dtoa@w+1,w
 17790  0FF3  00A6               	movwf	pad@p+1
 17791  0FF4  0840               	movf	dtoa@w,w
 17792  0FF5  00A5               	movwf	pad@p
 17793  0FF6  083D               	movf	dtoa@fp,w
 17794  0FF7  3195  2523  318E   	fcall	_pad
 17795  0FFA  0020               	movlb	0	; select bank0
 17796  0FFB  0825               	movf	?_pad+1,w
 17797  0FFC  00B1               	movwf	?_dtoa+1
 17798  0FFD  0824               	movf	?_pad,w
 17799  0FFE  00B0               	movwf	?_dtoa
 17800  0FFF                     i1l2319:
 17801  0FFF  0008               	return
 17802  1000                     __end_of_dtoa:
 17803                           
 17804                           	psect	text47
 17805  1523                     __ptext47:	
 17806 ;; *************** function _pad *****************
 17807 ;; Defined at:
 17808 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 17809 ;; Parameters:    Size  Location     Type
 17810 ;;  fp              1    wreg     PTR struct _IO_FILE
 17811 ;;		 -> sprintf@f(5), 
 17812 ;;  buf             1    4[BANK0 ] PTR unsigned char 
 17813 ;;		 -> dbuf(32), 
 17814 ;;  p               2    5[BANK0 ] int 
 17815 ;; Auto vars:     Size  Location     Type
 17816 ;;  fp              1   11[BANK0 ] PTR struct _IO_FILE
 17817 ;;		 -> sprintf@f(5), 
 17818 ;;  w               2    9[BANK0 ] int 
 17819 ;;  i               2    7[BANK0 ] int 
 17820 ;; Return value:  Size  Location     Type
 17821 ;;                  2    4[BANK0 ] int 
 17822 ;; Registers used:
 17823 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 17824 ;; Tracked objects:
 17825 ;;		On entry : 0/0
 17826 ;;		On exit  : 0/0
 17827 ;;		Unchanged: 0/0
 17828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17829 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17830 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17831 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17832 ;;      Totals:         1       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17833 ;;Total ram usage:        9 bytes
 17834 ;; Hardware stack levels used: 1
 17835 ;; Hardware stack levels required when called: 3
 17836 ;; This function calls:
 17837 ;;		_fputc
 17838 ;;		_fputs
 17839 ;;		_strlen
 17840 ;; This function is called by:
 17841 ;;		_dtoa
 17842 ;; This function uses a non-reentrant model
 17843 ;;
 17844                           
 17845                           
 17846                           ;psect for function _pad
 17847  1523                     _pad:
 17848                           
 17849                           ;incstack = 0
 17850 ;; hardware stack exceeded
 17851                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 17852                           ;pad@fp stored from wreg
 17853  1523  0020               	movlb	0	; select bank0
 17854  1524  00AB               	movwf	pad@fp
 17855  1525                     i1l4953:
 17856                           
 17857                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 17858  1525  1C6E               	btfss	_flags,0
 17859  1526  2D28               	goto	u333_21
 17860  1527  2D29               	goto	u333_20
 17861  1528                     u333_21:
 17862  1528  2D31               	goto	i1l4957
 17863  1529                     u333_20:
 17864  1529                     i1l4955:
 17865                           
 17866                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 17867  1529  082B               	movf	pad@fp,w
 17868  152A  00FC               	movwf	??_pad
 17869  152B  087C               	movf	??_pad,w
 17870  152C  00F8               	movwf	fputs@fp
 17871  152D  0824               	movf	pad@buf,w
 17872  152E  3192  22E6  3195   	fcall	_fputs
 17873  1531                     i1l4957:
 17874                           
 17875                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 17876  1531  0020               	movlb	0	; select bank0
 17877  1532  1BA6               	btfsc	pad@p+1,7
 17878  1533  2D35               	goto	u334_21
 17879  1534  2D36               	goto	u334_20
 17880  1535                     u334_21:
 17881  1535  2D3B               	goto	i1l4961
 17882  1536                     u334_20:
 17883  1536                     i1l4959:
 17884  1536  0826               	movf	pad@p+1,w
 17885  1537  00AA               	movwf	pad@w+1
 17886  1538  0825               	movf	pad@p,w
 17887  1539  00A9               	movwf	pad@w
 17888  153A  2D3D               	goto	i1l2272
 17889  153B                     i1l4961:
 17890  153B  01A9               	clrf	pad@w
 17891  153C  01AA               	clrf	pad@w+1
 17892  153D                     i1l2272:
 17893                           
 17894                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 17895  153D  01A7               	clrf	pad@i
 17896  153E  01A8               	clrf	pad@i+1
 17897                           
 17898                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 17899  153F  2D51               	goto	i1l4967
 17900  1540                     i1l4963:
 17901                           
 17902                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 17903  1540  3020               	movlw	32
 17904  1541  00F0               	movwf	fputc@c
 17905  1542  3000               	movlw	0
 17906  1543  00F1               	movwf	fputc@c+1
 17907  1544  0020               	movlb	0	; select bank0
 17908  1545  082B               	movf	pad@fp,w
 17909  1546  00FC               	movwf	??_pad
 17910  1547  087C               	movf	??_pad,w
 17911  1548  00F2               	movwf	fputc@fp
 17912  1549  3194  2432  3195   	fcall	_fputc
 17913  154C                     i1l4965:
 17914                           
 17915                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
 17916  154C  3001               	movlw	1
 17917  154D  0020               	movlb	0	; select bank0
 17918  154E  07A7               	addwf	pad@i,f
 17919  154F  3000               	movlw	0
 17920  1550  3DA8               	addwfc	pad@i+1,f
 17921  1551                     i1l4967:
 17922                           
 17923                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 17924  1551  0828               	movf	pad@i+1,w
 17925  1552  3A80               	xorlw	128
 17926  1553  00FC               	movwf	??_pad
 17927  1554  082A               	movf	pad@w+1,w
 17928  1555  3A80               	xorlw	128
 17929  1556  027C               	subwf	??_pad,w
 17930  1557  1D03               	skipz
 17931  1558  2D5B               	goto	u335_25
 17932  1559  0829               	movf	pad@w,w
 17933  155A  0227               	subwf	pad@i,w
 17934  155B                     u335_25:
 17935  155B  1C03               	skipc
 17936  155C  2D5E               	goto	u335_21
 17937  155D  2D5F               	goto	u335_20
 17938  155E                     u335_21:
 17939  155E  2D40               	goto	i1l4963
 17940  155F                     u335_20:
 17941  155F                     i1l2275:
 17942                           
 17943                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 17944  155F  0020               	movlb	0	; select bank0
 17945  1560  186E               	btfsc	_flags,0
 17946  1561  2D63               	goto	u336_21
 17947  1562  2D64               	goto	u336_20
 17948  1563                     u336_21:
 17949  1563  2D6C               	goto	i1l4971
 17950  1564                     u336_20:
 17951  1564                     i1l4969:
 17952                           
 17953                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 17954  1564  082B               	movf	pad@fp,w
 17955  1565  00FC               	movwf	??_pad
 17956  1566  087C               	movf	??_pad,w
 17957  1567  00F8               	movwf	fputs@fp
 17958  1568  0824               	movf	pad@buf,w
 17959  1569  3192  22E6  3195   	fcall	_fputs
 17960  156C                     i1l4971:
 17961                           
 17962                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 17963  156C  0020               	movlb	0	; select bank0
 17964  156D  0824               	movf	pad@buf,w
 17965  156E  3192  2224  3195   	fcall	_strlen
 17966  1571  0020               	movlb	0	; select bank0
 17967  1572  0829               	movf	pad@w,w
 17968  1573  0770               	addwf	?_strlen,w
 17969  1574  00A4               	movwf	?_pad
 17970  1575  082A               	movf	pad@w+1,w
 17971  1576  3D71               	addwfc	?_strlen+1,w
 17972  1577  00A5               	movwf	?_pad+1
 17973  1578                     i1l2277:
 17974  1578  0008               	return
 17975  1579                     __end_of_pad:
 17976                           
 17977                           	psect	text48
 17978  1224                     __ptext48:	
 17979 ;; *************** function _strlen *****************
 17980 ;; Defined at:
 17981 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
 17982 ;; Parameters:    Size  Location     Type
 17983 ;;  s               1    wreg     PTR const unsigned char 
 17984 ;;		 -> dbuf(32), 
 17985 ;; Auto vars:     Size  Location     Type
 17986 ;;  s               1    4[COMMON] PTR const unsigned char 
 17987 ;;		 -> dbuf(32), 
 17988 ;;  a               1    3[COMMON] PTR const unsigned char 
 17989 ;;		 -> dbuf(32), 
 17990 ;; Return value:  Size  Location     Type
 17991 ;;                  2    0[COMMON] unsigned int 
 17992 ;; Registers used:
 17993 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 17994 ;; Tracked objects:
 17995 ;;		On entry : 0/0
 17996 ;;		On exit  : 0/0
 17997 ;;		Unchanged: 0/0
 17998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17999 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18000 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18001 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18002 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18003 ;;Total ram usage:        5 bytes
 18004 ;; Hardware stack levels used: 1
 18005 ;; This function calls:
 18006 ;;		Nothing
 18007 ;; This function is called by:
 18008 ;;		_pad
 18009 ;; This function uses a non-reentrant model
 18010 ;;
 18011                           
 18012                           
 18013                           ;psect for function _strlen
 18014  1224                     _strlen:
 18015                           
 18016                           ;incstack = 0
 18017                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 18018                           ;strlen@s stored from wreg
 18019  1224  00F4               	movwf	strlen@s
 18020  1225                     i1l4861:
 18021  1225  0874               	movf	strlen@s,w
 18022  1226  00F2               	movwf	??_strlen
 18023  1227  0872               	movf	??_strlen,w
 18024  1228  00F3               	movwf	strlen@a
 18025  1229  2A2E               	goto	i1l4865
 18026  122A                     i1l4863:
 18027  122A  3001               	movlw	1
 18028  122B  00F2               	movwf	??_strlen
 18029  122C  0872               	movf	??_strlen,w
 18030  122D  07F4               	addwf	strlen@s,f
 18031  122E                     i1l4865:
 18032  122E  0874               	movf	strlen@s,w
 18033  122F  0086               	movwf	6
 18034  1230  3001               	movlw	1	; select bank2/3
 18035  1231  0087               	movwf	7
 18036  1232  0801               	movf	1,w
 18037  1233  1D03               	btfss	3,2
 18038  1234  2A36               	goto	u307_21
 18039  1235  2A37               	goto	u307_20
 18040  1236                     u307_21:
 18041  1236  2A2A               	goto	i1l4863
 18042  1237                     u307_20:
 18043  1237                     i1l4867:
 18044  1237  0873               	movf	strlen@a,w
 18045  1238  0274               	subwf	strlen@s,w
 18046  1239  00F0               	movwf	?_strlen
 18047  123A  01F1               	clrf	?_strlen+1
 18048  123B  1BF0               	btfsc	?_strlen,7
 18049  123C  03F1               	decf	?_strlen+1,f
 18050  123D                     i1l2437:
 18051  123D  0008               	return
 18052  123E                     __end_of_strlen:
 18053                           
 18054                           	psect	text49
 18055  12E6                     __ptext49:	
 18056 ;; *************** function _fputs *****************
 18057 ;; Defined at:
 18058 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
 18059 ;; Parameters:    Size  Location     Type
 18060 ;;  s               1    wreg     PTR const unsigned char 
 18061 ;;		 -> dbuf(32), 
 18062 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
 18063 ;;		 -> sprintf@f(5), 
 18064 ;; Auto vars:     Size  Location     Type
 18065 ;;  s               1    3[BANK0 ] PTR const unsigned char 
 18066 ;;		 -> dbuf(32), 
 18067 ;;  i               2    1[BANK0 ] int 
 18068 ;;  c               1    0[BANK0 ] unsigned char 
 18069 ;; Return value:  Size  Location     Type
 18070 ;;                  2    8[COMMON] int 
 18071 ;; Registers used:
 18072 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18073 ;; Tracked objects:
 18074 ;;		On entry : 0/0
 18075 ;;		On exit  : 0/0
 18076 ;;		Unchanged: 0/0
 18077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18078 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18079 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18080 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18081 ;;      Totals:         4       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18082 ;;Total ram usage:        8 bytes
 18083 ;; Hardware stack levels used: 1
 18084 ;; Hardware stack levels required when called: 2
 18085 ;; This function calls:
 18086 ;;		_fputc
 18087 ;; This function is called by:
 18088 ;;		_pad
 18089 ;; This function uses a non-reentrant model
 18090 ;;
 18091                           
 18092                           
 18093                           ;psect for function _fputs
 18094  12E6                     _fputs:
 18095                           
 18096                           ;incstack = 0
 18097 ;; hardware stack exceeded
 18098                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18099                           ;fputs@s stored from wreg
 18100  12E6  0020               	movlb	0	; select bank0
 18101  12E7  00A3               	movwf	fputs@s
 18102  12E8                     i1l4853:
 18103  12E8  01A1               	clrf	fputs@i
 18104  12E9  01A2               	clrf	fputs@i+1
 18105  12EA  2AFE               	goto	i1l4859
 18106  12EB                     i1l4855:
 18107  12EB  0820               	movf	fputs@c,w
 18108  12EC  00F9               	movwf	??_fputs
 18109  12ED  01FA               	clrf	??_fputs+1
 18110  12EE  0879               	movf	??_fputs,w
 18111  12EF  00F0               	movwf	fputc@c
 18112  12F0  087A               	movf	??_fputs+1,w
 18113  12F1  00F1               	movwf	fputc@c+1
 18114  12F2  0878               	movf	fputs@fp,w
 18115  12F3  00FB               	movwf	??_fputs+2
 18116  12F4  087B               	movf	??_fputs+2,w
 18117  12F5  00F2               	movwf	fputc@fp
 18118  12F6  3194  2432  3192   	fcall	_fputc
 18119  12F9                     i1l4857:
 18120  12F9  3001               	movlw	1
 18121  12FA  0020               	movlb	0	; select bank0
 18122  12FB  07A1               	addwf	fputs@i,f
 18123  12FC  3000               	movlw	0
 18124  12FD  3DA2               	addwfc	fputs@i+1,f
 18125  12FE                     i1l4859:
 18126  12FE  0821               	movf	fputs@i,w
 18127  12FF  0723               	addwf	fputs@s,w
 18128  1300  00F9               	movwf	??_fputs
 18129  1301  0879               	movf	??_fputs,w
 18130  1302  0086               	movwf	6
 18131  1303  3001               	movlw	1	; select bank2/3
 18132  1304  0087               	movwf	7
 18133  1305  0801               	movf	1,w
 18134  1306  00FA               	movwf	??_fputs+1
 18135  1307  087A               	movf	??_fputs+1,w
 18136  1308  00A0               	movwf	fputs@c
 18137  1309  0820               	movf	fputs@c,w
 18138  130A  1D03               	btfss	3,2
 18139  130B  2B0D               	goto	u306_21
 18140  130C  2B0E               	goto	u306_20
 18141  130D                     u306_21:
 18142  130D  2AEB               	goto	i1l4855
 18143  130E                     u306_20:
 18144  130E                     i1l2428:
 18145  130E  0008               	return
 18146  130F                     __end_of_fputs:
 18147                           
 18148                           	psect	text50
 18149  120A                     __ptext50:	
 18150 ;; *************** function _abs *****************
 18151 ;; Defined at:
 18152 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
 18153 ;; Parameters:    Size  Location     Type
 18154 ;;  a               2    3[COMMON] int 
 18155 ;; Auto vars:     Size  Location     Type
 18156 ;;		None
 18157 ;; Return value:  Size  Location     Type
 18158 ;;                  2    3[COMMON] int 
 18159 ;; Registers used:
 18160 ;;		wreg, status,2, status,0
 18161 ;; Tracked objects:
 18162 ;;		On entry : 0/0
 18163 ;;		On exit  : 0/0
 18164 ;;		Unchanged: 0/0
 18165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18166 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18168 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18169 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18170 ;;Total ram usage:        4 bytes
 18171 ;; Hardware stack levels used: 1
 18172 ;; This function calls:
 18173 ;;		Nothing
 18174 ;; This function is called by:
 18175 ;;		_dtoa
 18176 ;; This function uses a non-reentrant model
 18177 ;;
 18178                           
 18179                           
 18180                           ;psect for function _abs
 18181  120A                     _abs:
 18182  120A                     i1l4975:	
 18183                           ;incstack = 0
 18184                           ; Regs used in _abs: [wreg+status,2+status,0]
 18185                           
 18186  120A  0874               	movf	abs@a+1,w
 18187  120B  3A80               	xorlw	128
 18188  120C  00F5               	movwf	??_abs
 18189  120D  3080               	movlw	128
 18190  120E  0275               	subwf	??_abs,w
 18191  120F  1D03               	skipz
 18192  1210  2A13               	goto	u337_25
 18193  1211  3001               	movlw	1
 18194  1212  0273               	subwf	abs@a,w
 18195  1213                     u337_25:
 18196  1213  1803               	skipnc
 18197  1214  2A16               	goto	u337_21
 18198  1215  2A17               	goto	u337_20
 18199  1216                     u337_21:
 18200  1216  2A23               	goto	i1l2360
 18201  1217                     u337_20:
 18202  1217                     i1l4977:
 18203  1217  0973               	comf	abs@a,w
 18204  1218  00F5               	movwf	??_abs
 18205  1219  0974               	comf	abs@a+1,w
 18206  121A  00F6               	movwf	??_abs+1
 18207  121B  0AF5               	incf	??_abs,f
 18208  121C  1903               	skipnz
 18209  121D  0AF6               	incf	??_abs+1,f
 18210  121E  0875               	movf	??_abs,w
 18211  121F  00F3               	movwf	?_abs
 18212  1220  0876               	movf	??_abs+1,w
 18213  1221  00F4               	movwf	?_abs+1
 18214  1222  2A23               	goto	i1l2363
 18215  1223                     i1l2360:
 18216  1223                     i1l2363:
 18217  1223  0008               	return
 18218  1224                     __end_of_abs:
 18219                           
 18220                           	psect	text51
 18221  0B61                     __ptext51:	
 18222 ;; *************** function ___aomod *****************
 18223 ;; Defined at:
 18224 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
 18225 ;; Parameters:    Size  Location     Type
 18226 ;;  divisor         8    0[BANK0 ] long long 
 18227 ;;  dividend        8    8[BANK0 ] long long 
 18228 ;; Auto vars:     Size  Location     Type
 18229 ;;  sign            1    2[COMMON] unsigned char 
 18230 ;;  counter         1    1[COMMON] unsigned char 
 18231 ;; Return value:  Size  Location     Type
 18232 ;;                  8    0[BANK0 ] long long 
 18233 ;; Registers used:
 18234 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18235 ;; Tracked objects:
 18236 ;;		On entry : 0/0
 18237 ;;		On exit  : 0/0
 18238 ;;		Unchanged: 0/0
 18239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18240 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18241 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18242 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18243 ;;      Totals:         3      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18244 ;;Total ram usage:       19 bytes
 18245 ;; Hardware stack levels used: 1
 18246 ;; This function calls:
 18247 ;;		Nothing
 18248 ;; This function is called by:
 18249 ;;		_dtoa
 18250 ;; This function uses a non-reentrant model
 18251 ;;
 18252                           
 18253                           
 18254                           ;psect for function ___aomod
 18255  0B61                     ___aomod:
 18256  0B61                     i1l4923:	
 18257                           ;incstack = 0
 18258                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
 18259                           
 18260  0B61  01F2               	clrf	___aomod@sign
 18261  0B62                     i1l4925:
 18262  0B62  3028               	movlw	low ___aomod@dividend
 18263  0B63  0086               	movwf	6
 18264  0B64  3000               	movlw	high ___aomod@dividend
 18265  0B65  0087               	movwf	7
 18266  0B66  3F47               	moviw [7]fsr1
 18267  0B67  00F0               	movwf	??___aomod
 18268  0B68  1FF0               	btfss	??___aomod,7
 18269  0B69  2B6B               	goto	u323_21
 18270  0B6A  2B6C               	goto	u323_20
 18271  0B6B                     u323_21:
 18272  0B6B  2B8D               	goto	i1l4929
 18273  0B6C                     u323_20:
 18274  0B6C                     i1l4927:
 18275  0B6C  0020               	movlb	0	; select bank0
 18276  0B6D  09A8               	comf	___aomod@dividend,f
 18277  0B6E  09A9               	comf	___aomod@dividend+1,f
 18278  0B6F  09AA               	comf	___aomod@dividend+2,f
 18279  0B70  09AB               	comf	___aomod@dividend+3,f
 18280  0B71  09AC               	comf	___aomod@dividend+4,f
 18281  0B72  09AD               	comf	___aomod@dividend+5,f
 18282  0B73  09AE               	comf	___aomod@dividend+6,f
 18283  0B74  09AF               	comf	___aomod@dividend+7,f
 18284  0B75  0AA8               	incf	___aomod@dividend,f
 18285  0B76  1D03               	skipz
 18286  0B77  2B8B               	goto	u324_2lld
 18287  0B78  0AA9               	incf	___aomod@dividend+1,f
 18288  0B79  1D03               	skipz
 18289  0B7A  2B8B               	goto	u324_2lld
 18290  0B7B  0AAA               	incf	___aomod@dividend+2,f
 18291  0B7C  1D03               	skipz
 18292  0B7D  2B8B               	goto	u324_2lld
 18293  0B7E  0AAB               	incf	___aomod@dividend+3,f
 18294  0B7F  1D03               	skipz
 18295  0B80  2B8B               	goto	u324_2lld
 18296  0B81  0AAC               	incf	___aomod@dividend+4,f
 18297  0B82  1D03               	skipz
 18298  0B83  2B8B               	goto	u324_2lld
 18299  0B84  0AAD               	incf	___aomod@dividend+5,f
 18300  0B85  1D03               	skipz
 18301  0B86  2B8B               	goto	u324_2lld
 18302  0B87  0AAE               	incf	___aomod@dividend+6,f
 18303  0B88  1D03               	skipz
 18304  0B89  2B8B               	goto	u324_2lld
 18305  0B8A  0AAF               	incf	___aomod@dividend+7,f
 18306  0B8B                     u324_2lld:
 18307  0B8B  01F2               	clrf	___aomod@sign
 18308  0B8C  0AF2               	incf	___aomod@sign,f
 18309  0B8D                     i1l4929:
 18310  0B8D  3020               	movlw	low ___aomod@divisor
 18311  0B8E  0086               	movwf	6
 18312  0B8F  3000               	movlw	high ___aomod@divisor
 18313  0B90  0087               	movwf	7
 18314  0B91  3F47               	moviw [7]fsr1
 18315  0B92  00F0               	movwf	??___aomod
 18316  0B93  1FF0               	btfss	??___aomod,7
 18317  0B94  2B96               	goto	u325_21
 18318  0B95  2B97               	goto	u325_20
 18319  0B96                     u325_21:
 18320  0B96  2BB6               	goto	i1l4933
 18321  0B97                     u325_20:
 18322  0B97                     i1l4931:
 18323  0B97  0020               	movlb	0	; select bank0
 18324  0B98  09A0               	comf	___aomod@divisor,f
 18325  0B99  09A1               	comf	___aomod@divisor+1,f
 18326  0B9A  09A2               	comf	___aomod@divisor+2,f
 18327  0B9B  09A3               	comf	___aomod@divisor+3,f
 18328  0B9C  09A4               	comf	___aomod@divisor+4,f
 18329  0B9D  09A5               	comf	___aomod@divisor+5,f
 18330  0B9E  09A6               	comf	___aomod@divisor+6,f
 18331  0B9F  09A7               	comf	___aomod@divisor+7,f
 18332  0BA0  0AA0               	incf	___aomod@divisor,f
 18333  0BA1  1D03               	skipz
 18334  0BA2  2BB6               	goto	u326_2lld
 18335  0BA3  0AA1               	incf	___aomod@divisor+1,f
 18336  0BA4  1D03               	skipz
 18337  0BA5  2BB6               	goto	u326_2lld
 18338  0BA6  0AA2               	incf	___aomod@divisor+2,f
 18339  0BA7  1D03               	skipz
 18340  0BA8  2BB6               	goto	u326_2lld
 18341  0BA9  0AA3               	incf	___aomod@divisor+3,f
 18342  0BAA  1D03               	skipz
 18343  0BAB  2BB6               	goto	u326_2lld
 18344  0BAC  0AA4               	incf	___aomod@divisor+4,f
 18345  0BAD  1D03               	skipz
 18346  0BAE  2BB6               	goto	u326_2lld
 18347  0BAF  0AA5               	incf	___aomod@divisor+5,f
 18348  0BB0  1D03               	skipz
 18349  0BB1  2BB6               	goto	u326_2lld
 18350  0BB2  0AA6               	incf	___aomod@divisor+6,f
 18351  0BB3  1D03               	skipz
 18352  0BB4  2BB6               	goto	u326_2lld
 18353  0BB5  0AA7               	incf	___aomod@divisor+7,f
 18354  0BB6                     u326_2lld:
 18355  0BB6                     i1l4933:
 18356  0BB6  0020               	movlb	0	; select bank0
 18357  0BB7  0820               	movf	___aomod@divisor,w
 18358  0BB8  0421               	iorwf	___aomod@divisor+1,w
 18359  0BB9  0422               	iorwf	___aomod@divisor+2,w
 18360  0BBA  0423               	iorwf	___aomod@divisor+3,w
 18361  0BBB  0424               	iorwf	___aomod@divisor+4,w
 18362  0BBC  0425               	iorwf	___aomod@divisor+5,w
 18363  0BBD  0426               	iorwf	___aomod@divisor+6,w
 18364  0BBE  0427               	iorwf	___aomod@divisor+7,w
 18365  0BBF  1903               	skipnz
 18366  0BC0  2BC2               	goto	u327_21
 18367  0BC1  2BC3               	goto	u327_20
 18368  0BC2                     u327_21:
 18369  0BC2  2C16               	goto	i1l4949
 18370  0BC3                     u327_20:
 18371  0BC3                     i1l4935:
 18372  0BC3  01F1               	clrf	___aomod@counter
 18373  0BC4  0AF1               	incf	___aomod@counter,f
 18374  0BC5  2BD2               	goto	i1l4941
 18375  0BC6                     i1l4937:
 18376  0BC6  35A0               	lslf	___aomod@divisor,f
 18377  0BC7  0DA1               	rlf	___aomod@divisor+1,f
 18378  0BC8  0DA2               	rlf	___aomod@divisor+2,f
 18379  0BC9  0DA3               	rlf	___aomod@divisor+3,f
 18380  0BCA  0DA4               	rlf	___aomod@divisor+4,f
 18381  0BCB  0DA5               	rlf	___aomod@divisor+5,f
 18382  0BCC  0DA6               	rlf	___aomod@divisor+6,f
 18383  0BCD  0DA7               	rlf	___aomod@divisor+7,f
 18384  0BCE                     i1l4939:
 18385  0BCE  3001               	movlw	1
 18386  0BCF  00F0               	movwf	??___aomod
 18387  0BD0  0870               	movf	??___aomod,w
 18388  0BD1  07F1               	addwf	___aomod@counter,f
 18389  0BD2                     i1l4941:
 18390  0BD2  1FA7               	btfss	___aomod@divisor+7,7
 18391  0BD3  2BD5               	goto	u328_21
 18392  0BD4  2BD6               	goto	u328_20
 18393  0BD5                     u328_21:
 18394  0BD5  2BC6               	goto	i1l4937
 18395  0BD6                     u328_20:
 18396  0BD6                     i1l4943:
 18397  0BD6  0827               	movf	___aomod@divisor+7,w
 18398  0BD7  022F               	subwf	___aomod@dividend+7,w
 18399  0BD8  1D03               	skipz
 18400  0BD9  2BF4               	goto	u329_25
 18401  0BDA  0826               	movf	___aomod@divisor+6,w
 18402  0BDB  022E               	subwf	___aomod@dividend+6,w
 18403  0BDC  1D03               	skipz
 18404  0BDD  2BF4               	goto	u329_25
 18405  0BDE  0825               	movf	___aomod@divisor+5,w
 18406  0BDF  022D               	subwf	___aomod@dividend+5,w
 18407  0BE0  1D03               	skipz
 18408  0BE1  2BF4               	goto	u329_25
 18409  0BE2  0824               	movf	___aomod@divisor+4,w
 18410  0BE3  022C               	subwf	___aomod@dividend+4,w
 18411  0BE4  1D03               	skipz
 18412  0BE5  2BF4               	goto	u329_25
 18413  0BE6  0823               	movf	___aomod@divisor+3,w
 18414  0BE7  022B               	subwf	___aomod@dividend+3,w
 18415  0BE8  1D03               	skipz
 18416  0BE9  2BF4               	goto	u329_25
 18417  0BEA  0822               	movf	___aomod@divisor+2,w
 18418  0BEB  022A               	subwf	___aomod@dividend+2,w
 18419  0BEC  1D03               	skipz
 18420  0BED  2BF4               	goto	u329_25
 18421  0BEE  0821               	movf	___aomod@divisor+1,w
 18422  0BEF  0229               	subwf	___aomod@dividend+1,w
 18423  0BF0  1D03               	skipz
 18424  0BF1  2BF4               	goto	u329_25
 18425  0BF2  0820               	movf	___aomod@divisor,w
 18426  0BF3  0228               	subwf	___aomod@dividend,w
 18427  0BF4                     u329_25:
 18428  0BF4  1C03               	skipc
 18429  0BF5  2BF7               	goto	u329_21
 18430  0BF6  2BF8               	goto	u329_20
 18431  0BF7                     u329_21:
 18432  0BF7  2C08               	goto	i1l4947
 18433  0BF8                     u329_20:
 18434  0BF8                     i1l4945:
 18435  0BF8  0820               	movf	___aomod@divisor,w
 18436  0BF9  02A8               	subwf	___aomod@dividend,f
 18437  0BFA  0821               	movf	___aomod@divisor+1,w
 18438  0BFB  3BA9               	subwfb	___aomod@dividend+1,f
 18439  0BFC  0822               	movf	___aomod@divisor+2,w
 18440  0BFD  3BAA               	subwfb	___aomod@dividend+2,f
 18441  0BFE  0823               	movf	___aomod@divisor+3,w
 18442  0BFF  3BAB               	subwfb	___aomod@dividend+3,f
 18443  0C00  0824               	movf	___aomod@divisor+4,w
 18444  0C01  3BAC               	subwfb	___aomod@dividend+4,f
 18445  0C02  0825               	movf	___aomod@divisor+5,w
 18446  0C03  3BAD               	subwfb	___aomod@dividend+5,f
 18447  0C04  0826               	movf	___aomod@divisor+6,w
 18448  0C05  3BAE               	subwfb	___aomod@dividend+6,f
 18449  0C06  0827               	movf	___aomod@divisor+7,w
 18450  0C07  3BAF               	subwfb	___aomod@dividend+7,f
 18451  0C08                     i1l4947:
 18452  0C08  36A7               	lsrf	___aomod@divisor+7,f
 18453  0C09  0CA6               	rrf	___aomod@divisor+6,f
 18454  0C0A  0CA5               	rrf	___aomod@divisor+5,f
 18455  0C0B  0CA4               	rrf	___aomod@divisor+4,f
 18456  0C0C  0CA3               	rrf	___aomod@divisor+3,f
 18457  0C0D  0CA2               	rrf	___aomod@divisor+2,f
 18458  0C0E  0CA1               	rrf	___aomod@divisor+1,f
 18459  0C0F  0CA0               	rrf	___aomod@divisor,f
 18460  0C10  3001               	movlw	1
 18461  0C11  02F1               	subwf	___aomod@counter,f
 18462  0C12  1D03               	btfss	3,2
 18463  0C13  2C15               	goto	u330_21
 18464  0C14  2C16               	goto	u330_20
 18465  0C15                     u330_21:
 18466  0C15  2BD6               	goto	i1l4943
 18467  0C16                     u330_20:
 18468  0C16                     i1l4949:
 18469  0C16  0872               	movf	___aomod@sign,w
 18470  0C17  1903               	btfsc	3,2
 18471  0C18  2C1A               	goto	u331_21
 18472  0C19  2C1B               	goto	u331_20
 18473  0C1A                     u331_21:
 18474  0C1A  2C39               	goto	i1l1891
 18475  0C1B                     u331_20:
 18476  0C1B                     i1l4951:
 18477  0C1B  09A8               	comf	___aomod@dividend,f
 18478  0C1C  09A9               	comf	___aomod@dividend+1,f
 18479  0C1D  09AA               	comf	___aomod@dividend+2,f
 18480  0C1E  09AB               	comf	___aomod@dividend+3,f
 18481  0C1F  09AC               	comf	___aomod@dividend+4,f
 18482  0C20  09AD               	comf	___aomod@dividend+5,f
 18483  0C21  09AE               	comf	___aomod@dividend+6,f
 18484  0C22  09AF               	comf	___aomod@dividend+7,f
 18485  0C23  0AA8               	incf	___aomod@dividend,f
 18486  0C24  1D03               	skipz
 18487  0C25  2C39               	goto	u332_2lld
 18488  0C26  0AA9               	incf	___aomod@dividend+1,f
 18489  0C27  1D03               	skipz
 18490  0C28  2C39               	goto	u332_2lld
 18491  0C29  0AAA               	incf	___aomod@dividend+2,f
 18492  0C2A  1D03               	skipz
 18493  0C2B  2C39               	goto	u332_2lld
 18494  0C2C  0AAB               	incf	___aomod@dividend+3,f
 18495  0C2D  1D03               	skipz
 18496  0C2E  2C39               	goto	u332_2lld
 18497  0C2F  0AAC               	incf	___aomod@dividend+4,f
 18498  0C30  1D03               	skipz
 18499  0C31  2C39               	goto	u332_2lld
 18500  0C32  0AAD               	incf	___aomod@dividend+5,f
 18501  0C33  1D03               	skipz
 18502  0C34  2C39               	goto	u332_2lld
 18503  0C35  0AAE               	incf	___aomod@dividend+6,f
 18504  0C36  1D03               	skipz
 18505  0C37  2C39               	goto	u332_2lld
 18506  0C38  0AAF               	incf	___aomod@dividend+7,f
 18507  0C39                     u332_2lld:
 18508  0C39                     i1l1891:
 18509  0C39  0020               	movlb	0	; select bank0
 18510  0C3A  0828               	movf	___aomod@dividend,w
 18511  0C3B  00A0               	movwf	?___aomod
 18512  0C3C  0829               	movf	___aomod@dividend+1,w
 18513  0C3D  00A1               	movwf	?___aomod+1
 18514  0C3E  082A               	movf	___aomod@dividend+2,w
 18515  0C3F  00A2               	movwf	?___aomod+2
 18516  0C40  082B               	movf	___aomod@dividend+3,w
 18517  0C41  00A3               	movwf	?___aomod+3
 18518  0C42  082C               	movf	___aomod@dividend+4,w
 18519  0C43  00A4               	movwf	?___aomod+4
 18520  0C44  082D               	movf	___aomod@dividend+5,w
 18521  0C45  00A5               	movwf	?___aomod+5
 18522  0C46  082E               	movf	___aomod@dividend+6,w
 18523  0C47  00A6               	movwf	?___aomod+6
 18524  0C48  082F               	movf	___aomod@dividend+7,w
 18525  0C49  00A7               	movwf	?___aomod+7
 18526  0C4A                     i1l1892:
 18527  0C4A  0008               	return
 18528  0C4B                     __end_of___aomod:
 18529                           
 18530                           	psect	text52
 18531  0C4B                     __ptext52:	
 18532 ;; *************** function ___aodiv *****************
 18533 ;; Defined at:
 18534 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
 18535 ;; Parameters:    Size  Location     Type
 18536 ;;  divisor         8    0[BANK0 ] long long 
 18537 ;;  dividend        8    8[BANK0 ] long long 
 18538 ;; Auto vars:     Size  Location     Type
 18539 ;;  quotient        8    3[COMMON] long long 
 18540 ;;  sign            1    2[COMMON] unsigned char 
 18541 ;;  counter         1    1[COMMON] unsigned char 
 18542 ;; Return value:  Size  Location     Type
 18543 ;;                  8    0[BANK0 ] long long 
 18544 ;; Registers used:
 18545 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 18546 ;; Tracked objects:
 18547 ;;		On entry : 0/0
 18548 ;;		On exit  : 0/0
 18549 ;;		Unchanged: 0/0
 18550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18551 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18552 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18553 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18554 ;;      Totals:        11      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18555 ;;Total ram usage:       27 bytes
 18556 ;; Hardware stack levels used: 1
 18557 ;; This function calls:
 18558 ;;		Nothing
 18559 ;; This function is called by:
 18560 ;;		_dtoa
 18561 ;; This function uses a non-reentrant model
 18562 ;;
 18563                           
 18564                           
 18565                           ;psect for function ___aodiv
 18566  0C4B                     ___aodiv:
 18567  0C4B                     i1l4885:	
 18568                           ;incstack = 0
 18569                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 18570                           
 18571  0C4B  01F2               	clrf	___aodiv@sign
 18572  0C4C                     i1l4887:
 18573  0C4C  3020               	movlw	low ___aodiv@divisor
 18574  0C4D  0086               	movwf	6
 18575  0C4E  3000               	movlw	high ___aodiv@divisor
 18576  0C4F  0087               	movwf	7
 18577  0C50  3F47               	moviw [7]fsr1
 18578  0C51  00F0               	movwf	??___aodiv
 18579  0C52  1FF0               	btfss	??___aodiv,7
 18580  0C53  2C55               	goto	u312_21
 18581  0C54  2C56               	goto	u312_20
 18582  0C55                     u312_21:
 18583  0C55  2C77               	goto	i1l4891
 18584  0C56                     u312_20:
 18585  0C56                     i1l4889:
 18586  0C56  0020               	movlb	0	; select bank0
 18587  0C57  09A0               	comf	___aodiv@divisor,f
 18588  0C58  09A1               	comf	___aodiv@divisor+1,f
 18589  0C59  09A2               	comf	___aodiv@divisor+2,f
 18590  0C5A  09A3               	comf	___aodiv@divisor+3,f
 18591  0C5B  09A4               	comf	___aodiv@divisor+4,f
 18592  0C5C  09A5               	comf	___aodiv@divisor+5,f
 18593  0C5D  09A6               	comf	___aodiv@divisor+6,f
 18594  0C5E  09A7               	comf	___aodiv@divisor+7,f
 18595  0C5F  0AA0               	incf	___aodiv@divisor,f
 18596  0C60  1D03               	skipz
 18597  0C61  2C75               	goto	u313_2lld
 18598  0C62  0AA1               	incf	___aodiv@divisor+1,f
 18599  0C63  1D03               	skipz
 18600  0C64  2C75               	goto	u313_2lld
 18601  0C65  0AA2               	incf	___aodiv@divisor+2,f
 18602  0C66  1D03               	skipz
 18603  0C67  2C75               	goto	u313_2lld
 18604  0C68  0AA3               	incf	___aodiv@divisor+3,f
 18605  0C69  1D03               	skipz
 18606  0C6A  2C75               	goto	u313_2lld
 18607  0C6B  0AA4               	incf	___aodiv@divisor+4,f
 18608  0C6C  1D03               	skipz
 18609  0C6D  2C75               	goto	u313_2lld
 18610  0C6E  0AA5               	incf	___aodiv@divisor+5,f
 18611  0C6F  1D03               	skipz
 18612  0C70  2C75               	goto	u313_2lld
 18613  0C71  0AA6               	incf	___aodiv@divisor+6,f
 18614  0C72  1D03               	skipz
 18615  0C73  2C75               	goto	u313_2lld
 18616  0C74  0AA7               	incf	___aodiv@divisor+7,f
 18617  0C75                     u313_2lld:
 18618  0C75  01F2               	clrf	___aodiv@sign
 18619  0C76  0AF2               	incf	___aodiv@sign,f
 18620  0C77                     i1l4891:
 18621  0C77  3028               	movlw	low ___aodiv@dividend
 18622  0C78  0086               	movwf	6
 18623  0C79  3000               	movlw	high ___aodiv@dividend
 18624  0C7A  0087               	movwf	7
 18625  0C7B  3F47               	moviw [7]fsr1
 18626  0C7C  00F0               	movwf	??___aodiv
 18627  0C7D  1FF0               	btfss	??___aodiv,7
 18628  0C7E  2C80               	goto	u314_21
 18629  0C7F  2C81               	goto	u314_20
 18630  0C80                     u314_21:
 18631  0C80  2CA4               	goto	i1l4897
 18632  0C81                     u314_20:
 18633  0C81                     i1l4893:
 18634  0C81  0020               	movlb	0	; select bank0
 18635  0C82  09A8               	comf	___aodiv@dividend,f
 18636  0C83  09A9               	comf	___aodiv@dividend+1,f
 18637  0C84  09AA               	comf	___aodiv@dividend+2,f
 18638  0C85  09AB               	comf	___aodiv@dividend+3,f
 18639  0C86  09AC               	comf	___aodiv@dividend+4,f
 18640  0C87  09AD               	comf	___aodiv@dividend+5,f
 18641  0C88  09AE               	comf	___aodiv@dividend+6,f
 18642  0C89  09AF               	comf	___aodiv@dividend+7,f
 18643  0C8A  0AA8               	incf	___aodiv@dividend,f
 18644  0C8B  1D03               	skipz
 18645  0C8C  2CA0               	goto	u315_2lld
 18646  0C8D  0AA9               	incf	___aodiv@dividend+1,f
 18647  0C8E  1D03               	skipz
 18648  0C8F  2CA0               	goto	u315_2lld
 18649  0C90  0AAA               	incf	___aodiv@dividend+2,f
 18650  0C91  1D03               	skipz
 18651  0C92  2CA0               	goto	u315_2lld
 18652  0C93  0AAB               	incf	___aodiv@dividend+3,f
 18653  0C94  1D03               	skipz
 18654  0C95  2CA0               	goto	u315_2lld
 18655  0C96  0AAC               	incf	___aodiv@dividend+4,f
 18656  0C97  1D03               	skipz
 18657  0C98  2CA0               	goto	u315_2lld
 18658  0C99  0AAD               	incf	___aodiv@dividend+5,f
 18659  0C9A  1D03               	skipz
 18660  0C9B  2CA0               	goto	u315_2lld
 18661  0C9C  0AAE               	incf	___aodiv@dividend+6,f
 18662  0C9D  1D03               	skipz
 18663  0C9E  2CA0               	goto	u315_2lld
 18664  0C9F  0AAF               	incf	___aodiv@dividend+7,f
 18665  0CA0                     u315_2lld:
 18666  0CA0                     i1l4895:
 18667  0CA0  3001               	movlw	1
 18668  0CA1  00F0               	movwf	??___aodiv
 18669  0CA2  0870               	movf	??___aodiv,w
 18670  0CA3  06F2               	xorwf	___aodiv@sign,f
 18671  0CA4                     i1l4897:
 18672  0CA4  3073               	movlw	low ___aodiv@quotient
 18673  0CA5  0086               	movwf	6
 18674  0CA6  3000               	movlw	high ___aodiv@quotient
 18675  0CA7  0087               	movwf	7
 18676  0CA8  3008               	movlw	8
 18677  0CA9  00F0               	movwf	??___aodiv
 18678  0CAA  3000               	movlw	0
 18679  0CAB                     u316_20:
 18680  0CAB  001E               	movwi fsr1++
 18681  0CAC  0BF0               	decfsz	??___aodiv,f
 18682  0CAD  2CAB               	goto	u316_20
 18683  0CAE                     i1l4899:
 18684  0CAE  0020               	movlb	0	; select bank0
 18685  0CAF  0820               	movf	___aodiv@divisor,w
 18686  0CB0  0421               	iorwf	___aodiv@divisor+1,w
 18687  0CB1  0422               	iorwf	___aodiv@divisor+2,w
 18688  0CB2  0423               	iorwf	___aodiv@divisor+3,w
 18689  0CB3  0424               	iorwf	___aodiv@divisor+4,w
 18690  0CB4  0425               	iorwf	___aodiv@divisor+5,w
 18691  0CB5  0426               	iorwf	___aodiv@divisor+6,w
 18692  0CB6  0427               	iorwf	___aodiv@divisor+7,w
 18693  0CB7  1903               	skipnz
 18694  0CB8  2CBA               	goto	u317_21
 18695  0CB9  2CBB               	goto	u317_20
 18696  0CBA                     u317_21:
 18697  0CBA  2D17               	goto	i1l4919
 18698  0CBB                     u317_20:
 18699  0CBB                     i1l4901:
 18700  0CBB  01F1               	clrf	___aodiv@counter
 18701  0CBC  0AF1               	incf	___aodiv@counter,f
 18702  0CBD  2CCA               	goto	i1l4907
 18703  0CBE                     i1l4903:
 18704  0CBE  35A0               	lslf	___aodiv@divisor,f
 18705  0CBF  0DA1               	rlf	___aodiv@divisor+1,f
 18706  0CC0  0DA2               	rlf	___aodiv@divisor+2,f
 18707  0CC1  0DA3               	rlf	___aodiv@divisor+3,f
 18708  0CC2  0DA4               	rlf	___aodiv@divisor+4,f
 18709  0CC3  0DA5               	rlf	___aodiv@divisor+5,f
 18710  0CC4  0DA6               	rlf	___aodiv@divisor+6,f
 18711  0CC5  0DA7               	rlf	___aodiv@divisor+7,f
 18712  0CC6                     i1l4905:
 18713  0CC6  3001               	movlw	1
 18714  0CC7  00F0               	movwf	??___aodiv
 18715  0CC8  0870               	movf	??___aodiv,w
 18716  0CC9  07F1               	addwf	___aodiv@counter,f
 18717  0CCA                     i1l4907:
 18718  0CCA  1FA7               	btfss	___aodiv@divisor+7,7
 18719  0CCB  2CCD               	goto	u318_21
 18720  0CCC  2CCE               	goto	u318_20
 18721  0CCD                     u318_21:
 18722  0CCD  2CBE               	goto	i1l4903
 18723  0CCE                     u318_20:
 18724  0CCE                     i1l4909:
 18725  0CCE  35F3               	lslf	___aodiv@quotient,f
 18726  0CCF  0DF4               	rlf	___aodiv@quotient+1,f
 18727  0CD0  0DF5               	rlf	___aodiv@quotient+2,f
 18728  0CD1  0DF6               	rlf	___aodiv@quotient+3,f
 18729  0CD2  0DF7               	rlf	___aodiv@quotient+4,f
 18730  0CD3  0DF8               	rlf	___aodiv@quotient+5,f
 18731  0CD4  0DF9               	rlf	___aodiv@quotient+6,f
 18732  0CD5  0DFA               	rlf	___aodiv@quotient+7,f
 18733  0CD6                     i1l4911:
 18734  0CD6  0827               	movf	___aodiv@divisor+7,w
 18735  0CD7  022F               	subwf	___aodiv@dividend+7,w
 18736  0CD8  1D03               	skipz
 18737  0CD9  2CF4               	goto	u319_25
 18738  0CDA  0826               	movf	___aodiv@divisor+6,w
 18739  0CDB  022E               	subwf	___aodiv@dividend+6,w
 18740  0CDC  1D03               	skipz
 18741  0CDD  2CF4               	goto	u319_25
 18742  0CDE  0825               	movf	___aodiv@divisor+5,w
 18743  0CDF  022D               	subwf	___aodiv@dividend+5,w
 18744  0CE0  1D03               	skipz
 18745  0CE1  2CF4               	goto	u319_25
 18746  0CE2  0824               	movf	___aodiv@divisor+4,w
 18747  0CE3  022C               	subwf	___aodiv@dividend+4,w
 18748  0CE4  1D03               	skipz
 18749  0CE5  2CF4               	goto	u319_25
 18750  0CE6  0823               	movf	___aodiv@divisor+3,w
 18751  0CE7  022B               	subwf	___aodiv@dividend+3,w
 18752  0CE8  1D03               	skipz
 18753  0CE9  2CF4               	goto	u319_25
 18754  0CEA  0822               	movf	___aodiv@divisor+2,w
 18755  0CEB  022A               	subwf	___aodiv@dividend+2,w
 18756  0CEC  1D03               	skipz
 18757  0CED  2CF4               	goto	u319_25
 18758  0CEE  0821               	movf	___aodiv@divisor+1,w
 18759  0CEF  0229               	subwf	___aodiv@dividend+1,w
 18760  0CF0  1D03               	skipz
 18761  0CF1  2CF4               	goto	u319_25
 18762  0CF2  0820               	movf	___aodiv@divisor,w
 18763  0CF3  0228               	subwf	___aodiv@dividend,w
 18764  0CF4                     u319_25:
 18765  0CF4  1C03               	skipc
 18766  0CF5  2CF7               	goto	u319_21
 18767  0CF6  2CF8               	goto	u319_20
 18768  0CF7                     u319_21:
 18769  0CF7  2D09               	goto	i1l4917
 18770  0CF8                     u319_20:
 18771  0CF8                     i1l4913:
 18772  0CF8  0820               	movf	___aodiv@divisor,w
 18773  0CF9  02A8               	subwf	___aodiv@dividend,f
 18774  0CFA  0821               	movf	___aodiv@divisor+1,w
 18775  0CFB  3BA9               	subwfb	___aodiv@dividend+1,f
 18776  0CFC  0822               	movf	___aodiv@divisor+2,w
 18777  0CFD  3BAA               	subwfb	___aodiv@dividend+2,f
 18778  0CFE  0823               	movf	___aodiv@divisor+3,w
 18779  0CFF  3BAB               	subwfb	___aodiv@dividend+3,f
 18780  0D00  0824               	movf	___aodiv@divisor+4,w
 18781  0D01  3BAC               	subwfb	___aodiv@dividend+4,f
 18782  0D02  0825               	movf	___aodiv@divisor+5,w
 18783  0D03  3BAD               	subwfb	___aodiv@dividend+5,f
 18784  0D04  0826               	movf	___aodiv@divisor+6,w
 18785  0D05  3BAE               	subwfb	___aodiv@dividend+6,f
 18786  0D06  0827               	movf	___aodiv@divisor+7,w
 18787  0D07  3BAF               	subwfb	___aodiv@dividend+7,f
 18788  0D08                     i1l4915:
 18789  0D08  1473               	bsf	___aodiv@quotient,0
 18790  0D09                     i1l4917:
 18791  0D09  36A7               	lsrf	___aodiv@divisor+7,f
 18792  0D0A  0CA6               	rrf	___aodiv@divisor+6,f
 18793  0D0B  0CA5               	rrf	___aodiv@divisor+5,f
 18794  0D0C  0CA4               	rrf	___aodiv@divisor+4,f
 18795  0D0D  0CA3               	rrf	___aodiv@divisor+3,f
 18796  0D0E  0CA2               	rrf	___aodiv@divisor+2,f
 18797  0D0F  0CA1               	rrf	___aodiv@divisor+1,f
 18798  0D10  0CA0               	rrf	___aodiv@divisor,f
 18799  0D11  3001               	movlw	1
 18800  0D12  02F1               	subwf	___aodiv@counter,f
 18801  0D13  1D03               	btfss	3,2
 18802  0D14  2D16               	goto	u320_21
 18803  0D15  2D17               	goto	u320_20
 18804  0D16                     u320_21:
 18805  0D16  2CCE               	goto	i1l4909
 18806  0D17                     u320_20:
 18807  0D17                     i1l4919:
 18808  0D17  0872               	movf	___aodiv@sign,w
 18809  0D18  1903               	btfsc	3,2
 18810  0D19  2D1B               	goto	u321_21
 18811  0D1A  2D1C               	goto	u321_20
 18812  0D1B                     u321_21:
 18813  0D1B  2D3A               	goto	i1l1878
 18814  0D1C                     u321_20:
 18815  0D1C                     i1l4921:
 18816  0D1C  09F3               	comf	___aodiv@quotient,f
 18817  0D1D  09F4               	comf	___aodiv@quotient+1,f
 18818  0D1E  09F5               	comf	___aodiv@quotient+2,f
 18819  0D1F  09F6               	comf	___aodiv@quotient+3,f
 18820  0D20  09F7               	comf	___aodiv@quotient+4,f
 18821  0D21  09F8               	comf	___aodiv@quotient+5,f
 18822  0D22  09F9               	comf	___aodiv@quotient+6,f
 18823  0D23  09FA               	comf	___aodiv@quotient+7,f
 18824  0D24  0AF3               	incf	___aodiv@quotient,f
 18825  0D25  1D03               	skipz
 18826  0D26  2D3A               	goto	u322_2lld
 18827  0D27  0AF4               	incf	___aodiv@quotient+1,f
 18828  0D28  1D03               	skipz
 18829  0D29  2D3A               	goto	u322_2lld
 18830  0D2A  0AF5               	incf	___aodiv@quotient+2,f
 18831  0D2B  1D03               	skipz
 18832  0D2C  2D3A               	goto	u322_2lld
 18833  0D2D  0AF6               	incf	___aodiv@quotient+3,f
 18834  0D2E  1D03               	skipz
 18835  0D2F  2D3A               	goto	u322_2lld
 18836  0D30  0AF7               	incf	___aodiv@quotient+4,f
 18837  0D31  1D03               	skipz
 18838  0D32  2D3A               	goto	u322_2lld
 18839  0D33  0AF8               	incf	___aodiv@quotient+5,f
 18840  0D34  1D03               	skipz
 18841  0D35  2D3A               	goto	u322_2lld
 18842  0D36  0AF9               	incf	___aodiv@quotient+6,f
 18843  0D37  1D03               	skipz
 18844  0D38  2D3A               	goto	u322_2lld
 18845  0D39  0AFA               	incf	___aodiv@quotient+7,f
 18846  0D3A                     u322_2lld:
 18847  0D3A                     i1l1878:
 18848  0D3A  0873               	movf	___aodiv@quotient,w
 18849  0D3B  0020               	movlb	0	; select bank0
 18850  0D3C  00A0               	movwf	?___aodiv
 18851  0D3D  0874               	movf	___aodiv@quotient+1,w
 18852  0D3E  00A1               	movwf	?___aodiv+1
 18853  0D3F  0875               	movf	___aodiv@quotient+2,w
 18854  0D40  00A2               	movwf	?___aodiv+2
 18855  0D41  0876               	movf	___aodiv@quotient+3,w
 18856  0D42  00A3               	movwf	?___aodiv+3
 18857  0D43  0877               	movf	___aodiv@quotient+4,w
 18858  0D44  00A4               	movwf	?___aodiv+4
 18859  0D45  0878               	movf	___aodiv@quotient+5,w
 18860  0D46  00A5               	movwf	?___aodiv+5
 18861  0D47  0879               	movf	___aodiv@quotient+6,w
 18862  0D48  00A6               	movwf	?___aodiv+6
 18863  0D49  087A               	movf	___aodiv@quotient+7,w
 18864  0D4A  00A7               	movwf	?___aodiv+7
 18865  0D4B                     i1l1879:
 18866  0D4B  0008               	return
 18867  0D4C                     __end_of___aodiv:
 18868                           
 18869                           	psect	text53
 18870  15DC                     __ptext53:	
 18871 ;; *************** function _ctoa *****************
 18872 ;; Defined at:
 18873 ;;		line 259 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 18874 ;; Parameters:    Size  Location     Type
 18875 ;;  fp              1    wreg     PTR struct _IO_FILE
 18876 ;;		 -> sprintf@f(5), 
 18877 ;;  c               1    8[COMMON] unsigned char 
 18878 ;; Auto vars:     Size  Location     Type
 18879 ;;  fp              1    4[BANK0 ] PTR struct _IO_FILE
 18880 ;;		 -> sprintf@f(5), 
 18881 ;;  w               2    2[BANK0 ] int 
 18882 ;;  l               2    0[BANK0 ] int 
 18883 ;; Return value:  Size  Location     Type
 18884 ;;                  2    8[COMMON] int 
 18885 ;; Registers used:
 18886 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 18887 ;; Tracked objects:
 18888 ;;		On entry : 0/0
 18889 ;;		On exit  : 0/0
 18890 ;;		Unchanged: 0/0
 18891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18892 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18893 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18894 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18895 ;;      Totals:         5       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18896 ;;Total ram usage:       10 bytes
 18897 ;; Hardware stack levels used: 1
 18898 ;; Hardware stack levels required when called: 2
 18899 ;; This function calls:
 18900 ;;		_fputc
 18901 ;; This function is called by:
 18902 ;;		_vfpfcnvrt
 18903 ;; This function uses a non-reentrant model
 18904 ;;
 18905                           
 18906                           
 18907                           ;psect for function _ctoa
 18908  15DC                     _ctoa:
 18909                           
 18910                           ;incstack = 0
 18911                           ; Regs used in _ctoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 18912                           ;ctoa@fp stored from wreg
 18913  15DC  0020               	movlb	0	; select bank0
 18914  15DD  00A4               	movwf	ctoa@fp
 18915  15DE                     i1l4995:
 18916                           
 18917                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 259: static int c
      +                          toa(FILE *fp, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt
      +                          .c: 260: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 261:   
      +                            int l, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 264:  
      +                             w = width ? width - 1 : width;
 18918  15DE  0022               	movlb	2	; select bank2
 18919  15DF  0822               	movf	_width^(0+256),w
 18920  15E0  0423               	iorwf	(_width+1)^(0+256),w
 18921  15E1  1D03               	btfss	3,2
 18922  15E2  2DE4               	goto	u342_21
 18923  15E3  2DE5               	goto	u342_20
 18924  15E4                     u342_21:
 18925  15E4  2DED               	goto	i1l4999
 18926  15E5                     u342_20:
 18927  15E5                     i1l4997:
 18928  15E5  0823               	movf	(_width+1)^(0+256),w
 18929  15E6  0020               	movlb	0	; select bank0
 18930  15E7  00A3               	movwf	ctoa@w+1
 18931  15E8  0022               	movlb	2	; select bank2
 18932  15E9  0822               	movf	_width^(0+256),w
 18933  15EA  0020               	movlb	0	; select bank0
 18934  15EB  00A2               	movwf	ctoa@w
 18935  15EC  2DF6               	goto	i1l5001
 18936  15ED                     i1l4999:
 18937  15ED  0822               	movf	_width^(0+256),w
 18938  15EE  3EFF               	addlw	255
 18939  15EF  0020               	movlb	0	; select bank0
 18940  15F0  00A2               	movwf	ctoa@w
 18941  15F1  30FF               	movlw	255
 18942  15F2  0022               	movlb	2	; select bank2
 18943  15F3  3D23               	addwfc	(_width+1)^(0+256),w
 18944  15F4  0020               	movlb	0	; select bank0
 18945  15F5  00A3               	movwf	ctoa@w+1
 18946  15F6                     i1l5001:
 18947                           
 18948                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 267:     if (flag
      +                          s & (1 << 0)) {
 18949  15F6  1C6E               	btfss	_flags,0
 18950  15F7  2DF9               	goto	u343_21
 18951  15F8  2DFA               	goto	u343_20
 18952  15F9                     u343_21:
 18953  15F9  2E08               	goto	i1l5005
 18954  15FA                     u343_20:
 18955  15FA                     i1l5003:
 18956                           
 18957                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 268:         fput
      +                          c(c, fp);
 18958  15FA  0878               	movf	ctoa@c,w
 18959  15FB  00FA               	movwf	??_ctoa
 18960  15FC  01FB               	clrf	??_ctoa+1
 18961  15FD  087A               	movf	??_ctoa,w
 18962  15FE  00F0               	movwf	fputc@c
 18963  15FF  087B               	movf	??_ctoa+1,w
 18964  1600  00F1               	movwf	fputc@c+1
 18965  1601  0824               	movf	ctoa@fp,w
 18966  1602  00FC               	movwf	??_ctoa+2
 18967  1603  087C               	movf	??_ctoa+2,w
 18968  1604  00F2               	movwf	fputc@fp
 18969  1605  3194  2432  3195   	fcall	_fputc
 18970  1608                     i1l5005:
 18971                           
 18972                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 271:     w = (w <
      +                           0) ? 0 : w;
 18973  1608  0020               	movlb	0	; select bank0
 18974  1609  1BA3               	btfsc	ctoa@w+1,7
 18975  160A  2E0C               	goto	u344_21
 18976  160B  2E0D               	goto	u344_20
 18977  160C                     u344_21:
 18978  160C  2E0E               	goto	i1l5009
 18979  160D                     u344_20:
 18980  160D  2E10               	goto	i1l2288
 18981  160E                     i1l5009:
 18982  160E  01A2               	clrf	ctoa@w
 18983  160F  01A3               	clrf	ctoa@w+1
 18984  1610                     i1l2288:
 18985                           
 18986                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 272:     l = 0;
 18987  1610  01A0               	clrf	ctoa@l
 18988  1611  01A1               	clrf	ctoa@l+1
 18989                           
 18990                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
 18991  1612  2E24               	goto	i1l5015
 18992  1613                     i1l5011:
 18993                           
 18994                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 274:         fput
      +                          c(' ', fp);
 18995  1613  3020               	movlw	32
 18996  1614  00F0               	movwf	fputc@c
 18997  1615  3000               	movlw	0
 18998  1616  00F1               	movwf	fputc@c+1
 18999  1617  0020               	movlb	0	; select bank0
 19000  1618  0824               	movf	ctoa@fp,w
 19001  1619  00FA               	movwf	??_ctoa
 19002  161A  087A               	movf	??_ctoa,w
 19003  161B  00F2               	movwf	fputc@fp
 19004  161C  3194  2432  3195   	fcall	_fputc
 19005  161F                     i1l5013:
 19006                           
 19007                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 275:         ++l;
 19008  161F  3001               	movlw	1
 19009  1620  0020               	movlb	0	; select bank0
 19010  1621  07A0               	addwf	ctoa@l,f
 19011  1622  3000               	movlw	0
 19012  1623  3DA1               	addwfc	ctoa@l+1,f
 19013  1624                     i1l5015:
 19014                           
 19015                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 273:     while (l
      +                           < w) {
 19016  1624  0821               	movf	ctoa@l+1,w
 19017  1625  3A80               	xorlw	128
 19018  1626  00FA               	movwf	??_ctoa
 19019  1627  0823               	movf	ctoa@w+1,w
 19020  1628  3A80               	xorlw	128
 19021  1629  027A               	subwf	??_ctoa,w
 19022  162A  1D03               	skipz
 19023  162B  2E2E               	goto	u345_25
 19024  162C  0822               	movf	ctoa@w,w
 19025  162D  0220               	subwf	ctoa@l,w
 19026  162E                     u345_25:
 19027  162E  1C03               	skipc
 19028  162F  2E31               	goto	u345_21
 19029  1630  2E32               	goto	u345_20
 19030  1631                     u345_21:
 19031  1631  2E13               	goto	i1l5011
 19032  1632                     u345_20:
 19033  1632                     i1l2291:
 19034                           
 19035                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 278:     if (!(fl
      +                          ags & (1 << 0))) {
 19036  1632  0020               	movlb	0	; select bank0
 19037  1633  186E               	btfsc	_flags,0
 19038  1634  2E36               	goto	u346_21
 19039  1635  2E37               	goto	u346_20
 19040  1636                     u346_21:
 19041  1636  2E45               	goto	i1l5019
 19042  1637                     u346_20:
 19043  1637                     i1l5017:
 19044                           
 19045                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 279:         fput
      +                          c(c, fp);
 19046  1637  0878               	movf	ctoa@c,w
 19047  1638  00FA               	movwf	??_ctoa
 19048  1639  01FB               	clrf	??_ctoa+1
 19049  163A  087A               	movf	??_ctoa,w
 19050  163B  00F0               	movwf	fputc@c
 19051  163C  087B               	movf	??_ctoa+1,w
 19052  163D  00F1               	movwf	fputc@c+1
 19053  163E  0824               	movf	ctoa@fp,w
 19054  163F  00FC               	movwf	??_ctoa+2
 19055  1640  087C               	movf	??_ctoa+2,w
 19056  1641  00F2               	movwf	fputc@fp
 19057  1642  3194  2432  3195   	fcall	_fputc
 19058  1645                     i1l5019:
 19059                           
 19060                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 282:     return l
      +                          +1;
 19061  1645  0020               	movlb	0	; select bank0
 19062  1646  0820               	movf	ctoa@l,w
 19063  1647  3E01               	addlw	1
 19064  1648  00F8               	movwf	?_ctoa
 19065  1649  3000               	movlw	0
 19066  164A  3D21               	addwfc	ctoa@l+1,w
 19067  164B  00F9               	movwf	?_ctoa+1
 19068  164C                     i1l2293:
 19069  164C  0008               	return
 19070  164D                     __end_of_ctoa:
 19071                           
 19072                           	psect	text54
 19073  1432                     __ptext54:	
 19074 ;; *************** function _fputc *****************
 19075 ;; Defined at:
 19076 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
 19077 ;; Parameters:    Size  Location     Type
 19078 ;;  c               2    0[COMMON] int 
 19079 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
 19080 ;;		 -> sprintf@f(5), 
 19081 ;; Auto vars:     Size  Location     Type
 19082 ;;		None
 19083 ;; Return value:  Size  Location     Type
 19084 ;;                  2    0[COMMON] int 
 19085 ;; Registers used:
 19086 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19087 ;; Tracked objects:
 19088 ;;		On entry : 0/0
 19089 ;;		On exit  : 0/0
 19090 ;;		Unchanged: 0/0
 19091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19092 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19094 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19095 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19096 ;;Total ram usage:        8 bytes
 19097 ;; Hardware stack levels used: 1
 19098 ;; Hardware stack levels required when called: 1
 19099 ;; This function calls:
 19100 ;;		_putch
 19101 ;; This function is called by:
 19102 ;;		_pad
 19103 ;;		_ctoa
 19104 ;;		_vfpfcnvrt
 19105 ;;		_fputs
 19106 ;; This function uses a non-reentrant model
 19107 ;;
 19108                           
 19109                           
 19110                           ;psect for function _fputc
 19111  1432                     _fputc:
 19112  1432                     i1l4837:	
 19113                           ;incstack = 0
 19114                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 19115                           
 19116  1432  0872               	movf	fputc@fp,w
 19117  1433  1903               	btfsc	3,2
 19118  1434  2C36               	goto	u302_21
 19119  1435  2C37               	goto	u302_20
 19120  1436                     u302_21:
 19121  1436  2C3C               	goto	i1l4841
 19122  1437                     u302_20:
 19123  1437                     i1l4839:
 19124  1437  0872               	movf	fputc@fp,w
 19125  1438  1D03               	btfss	3,2
 19126  1439  2C3B               	goto	u303_21
 19127  143A  2C3C               	goto	u303_20
 19128  143B                     u303_21:
 19129  143B  2C41               	goto	i1l4843
 19130  143C                     u303_20:
 19131  143C                     i1l4841:
 19132  143C  0870               	movf	fputc@c,w
 19133  143D  3180  2002  3194   	fcall	_putch
 19134  1440  2C80               	goto	i1l2420
 19135  1441                     i1l4843:
 19136  1441  0872               	movf	fputc@fp,w
 19137  1442  3E03               	addlw	3
 19138  1443  0086               	movwf	6
 19139  1444  0187               	clrf	7
 19140  1445  0016               	moviw fsr1++
 19141  1446  0401               	iorwf	1,w
 19142  1447  1903               	btfsc	3,2
 19143  1448  2C4A               	goto	u304_21
 19144  1449  2C4B               	goto	u304_20
 19145  144A                     u304_21:
 19146  144A  2C68               	goto	i1l4847
 19147  144B                     u304_20:
 19148  144B                     i1l4845:
 19149  144B  0872               	movf	fputc@fp,w
 19150  144C  3E03               	addlw	3
 19151  144D  0086               	movwf	6
 19152  144E  0187               	clrf	7
 19153  144F  3F40               	moviw [0]fsr1
 19154  1450  00F3               	movwf	??_fputc
 19155  1451  3F41               	moviw [1]fsr1
 19156  1452  00F4               	movwf	??_fputc+1
 19157  1453  0A72               	incf	fputc@fp,w
 19158  1454  0086               	movwf	6
 19159  1455  0187               	clrf	7
 19160  1456  3F40               	moviw [0]fsr1
 19161  1457  00F5               	movwf	??_fputc+2
 19162  1458  3F41               	moviw [1]fsr1
 19163  1459  00F6               	movwf	??_fputc+3
 19164  145A  0876               	movf	??_fputc+3,w
 19165  145B  3A80               	xorlw	128
 19166  145C  00F7               	movwf	??_fputc+4
 19167  145D  0874               	movf	??_fputc+1,w
 19168  145E  3A80               	xorlw	128
 19169  145F  0277               	subwf	??_fputc+4,w
 19170  1460  1D03               	skipz
 19171  1461  2C64               	goto	u305_25
 19172  1462  0873               	movf	??_fputc,w
 19173  1463  0275               	subwf	??_fputc+2,w
 19174  1464                     u305_25:
 19175  1464  1803               	skipnc
 19176  1465  2C67               	goto	u305_21
 19177  1466  2C68               	goto	u305_20
 19178  1467                     u305_21:
 19179  1467  2C80               	goto	i1l2420
 19180  1468                     u305_20:
 19181  1468                     i1l4847:
 19182  1468  0870               	movf	fputc@c,w
 19183  1469  00F3               	movwf	??_fputc
 19184  146A  0872               	movf	fputc@fp,w
 19185  146B  0086               	movwf	6
 19186  146C  0187               	clrf	7
 19187  146D  0A72               	incf	fputc@fp,w
 19188  146E  0084               	movwf	4
 19189  146F  0185               	clrf	5
 19190  1470  0800               	movf	0,w
 19191  1471  0701               	addwf	1,w
 19192  1472  00F4               	movwf	??_fputc+1
 19193  1473  0874               	movf	??_fputc+1,w
 19194  1474  0086               	movwf	6
 19195  1475  0187               	clrf	7
 19196  1476  0873               	movf	??_fputc,w
 19197  1477  0081               	movwf	1
 19198  1478                     i1l4849:
 19199  1478  0A72               	incf	fputc@fp,w
 19200  1479  0086               	movwf	6
 19201  147A  0187               	clrf	7
 19202  147B  3001               	movlw	1
 19203  147C  0781               	addwf	1,f
 19204  147D  3141               	addfsr 1,1
 19205  147E  1803               	skipnc
 19206  147F  0A81               	incf	1,f
 19207  1480                     i1l2420:
 19208  1480  0008               	return
 19209  1481                     __end_of_fputc:
 19210                           
 19211                           	psect	text55
 19212  0002                     __ptext55:	
 19213 ;; *************** function _putch *****************
 19214 ;; Defined at:
 19215 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
 19216 ;; Parameters:    Size  Location     Type
 19217 ;;  c               1    wreg     unsigned char 
 19218 ;; Auto vars:     Size  Location     Type
 19219 ;;  c               1    0[COMMON] unsigned char 
 19220 ;; Return value:  Size  Location     Type
 19221 ;;                  1    wreg      void 
 19222 ;; Registers used:
 19223 ;;		wreg
 19224 ;; Tracked objects:
 19225 ;;		On entry : 0/0
 19226 ;;		On exit  : 0/0
 19227 ;;		Unchanged: 0/0
 19228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19233 ;;Total ram usage:        0 bytes
 19234 ;; Hardware stack levels used: 1
 19235 ;; This function calls:
 19236 ;;		Nothing
 19237 ;; This function is called by:
 19238 ;;		_fputc
 19239 ;; This function uses a non-reentrant model
 19240 ;;
 19241                           
 19242                           
 19243                           ;psect for function _putch
 19244  0002                     _putch:
 19245  0002                     i1l2431:	
 19246                           ;incstack = 0
 19247                           ; Regs used in _putch: [wreg]
 19248                           
 19249  0002  0008               	return
 19250  0003                     __end_of_putch:
 19251                           
 19252                           	psect	text56
 19253  085F                     __ptext56:	
 19254 ;; *************** function _atoi *****************
 19255 ;; Defined at:
 19256 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
 19257 ;; Parameters:    Size  Location     Type
 19258 ;;  s               2    6[COMMON] PTR const unsigned char 
 19259 ;;		 -> STR_2(22), STR_1(28), 
 19260 ;; Auto vars:     Size  Location     Type
 19261 ;;  n               2    7[BANK0 ] int 
 19262 ;;  neg             2    0[BANK0 ] int 
 19263 ;; Return value:  Size  Location     Type
 19264 ;;                  2    6[COMMON] int 
 19265 ;; Registers used:
 19266 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 19267 ;; Tracked objects:
 19268 ;;		On entry : 0/0
 19269 ;;		On exit  : 0/0
 19270 ;;		Unchanged: 0/0
 19271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19272 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19273 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19274 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19275 ;;      Totals:         6       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19276 ;;Total ram usage:       15 bytes
 19277 ;; Hardware stack levels used: 1
 19278 ;; Hardware stack levels required when called: 1
 19279 ;; This function calls:
 19280 ;;		___wmul
 19281 ;;		_isdigit
 19282 ;;		_isspace
 19283 ;; This function is called by:
 19284 ;;		_vfpfcnvrt
 19285 ;; This function uses a non-reentrant model
 19286 ;;
 19287                           
 19288                           
 19289                           ;psect for function _atoi
 19290  085F                     _atoi:
 19291  085F                     i1l5081:	
 19292                           ;incstack = 0
 19293                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 19294                           
 19295  085F  0020               	movlb	0	; select bank0
 19296  0860  01A7               	clrf	atoi@n
 19297  0861  01A8               	clrf	atoi@n+1
 19298  0862  01A0               	clrf	atoi@neg
 19299  0863  01A1               	clrf	atoi@neg+1
 19300  0864  2869               	goto	i1l5085
 19301  0865                     i1l5083:
 19302  0865  3001               	movlw	1
 19303  0866  07F6               	addwf	atoi@s,f
 19304  0867  3000               	movlw	0
 19305  0868  3DF7               	addwfc	atoi@s+1,f
 19306  0869                     i1l5085:
 19307  0869  01A6               	clrf	_atoi$3332
 19308  086A  0AA6               	incf	_atoi$3332,f
 19309  086B                     i1l5087:
 19310  086B  0876               	movf	atoi@s,w
 19311  086C  0084               	movwf	4
 19312  086D  0877               	movf	atoi@s+1,w
 19313  086E  0085               	movwf	5
 19314  086F  0012               	moviw fsr0++
 19315  0870  3A20               	xorlw	32
 19316  0871  1903               	btfsc	3,2
 19317  0872  2874               	goto	u363_21
 19318  0873  2875               	goto	u363_20
 19319  0874                     u363_21:
 19320  0874  288A               	goto	i1l5093
 19321  0875                     u363_20:
 19322  0875                     i1l5089:
 19323  0875  0876               	movf	atoi@s,w
 19324  0876  0084               	movwf	4
 19325  0877  0877               	movf	atoi@s+1,w
 19326  0878  0085               	movwf	5
 19327  0879  0800               	movf	0,w	;code access
 19328  087A  3EF7               	addlw	247
 19329  087B  00F8               	movwf	??_atoi
 19330  087C  30FF               	movlw	255
 19331  087D  1803               	skipnc
 19332  087E  3000               	movlw	0
 19333  087F  00F9               	movwf	??_atoi+1
 19334  0880  3000               	movlw	0
 19335  0881  0279               	subwf	??_atoi+1,w
 19336  0882  3005               	movlw	5
 19337  0883  1903               	skipnz
 19338  0884  0278               	subwf	??_atoi,w
 19339  0885  1C03               	skipc
 19340  0886  2888               	goto	u364_21
 19341  0887  2889               	goto	u364_20
 19342  0888                     u364_21:
 19343  0888  288A               	goto	i1l5093
 19344  0889                     u364_20:
 19345  0889                     i1l5091:
 19346  0889  01A6               	clrf	_atoi$3332
 19347  088A                     i1l5093:
 19348  088A  0826               	movf	_atoi$3332,w
 19349  088B  00F8               	movwf	??_atoi
 19350  088C  01F9               	clrf	??_atoi+1
 19351  088D  0878               	movf	??_atoi,w
 19352  088E  00A2               	movwf	_atoi$3331
 19353  088F  0879               	movf	??_atoi+1,w
 19354  0890  00A3               	movwf	_atoi$3331+1
 19355  0891                     i1l5097:
 19356  0891  0822               	movf	_atoi$3331,w
 19357  0892  0423               	iorwf	_atoi$3331+1,w
 19358  0893  1D03               	btfss	3,2
 19359  0894  2896               	goto	u365_21
 19360  0895  2897               	goto	u365_20
 19361  0896                     u365_21:
 19362  0896  2865               	goto	i1l5083
 19363  0897                     u365_20:
 19364  0897  28A1               	goto	i1l5101
 19365  0898                     i1l5099:
 19366  0898  3001               	movlw	1
 19367  0899  00A0               	movwf	atoi@neg
 19368  089A  3000               	movlw	0
 19369  089B  00A1               	movwf	atoi@neg+1
 19370  089C                     i1l2381:
 19371  089C  3001               	movlw	1
 19372  089D  07F6               	addwf	atoi@s,f
 19373  089E  3000               	movlw	0
 19374  089F  3DF7               	addwfc	atoi@s+1,f
 19375  08A0  28D5               	goto	i1l5107
 19376  08A1                     i1l5101:
 19377  08A1  0876               	movf	atoi@s,w
 19378  08A2  0084               	movwf	4
 19379  08A3  0877               	movf	atoi@s+1,w
 19380  08A4  0085               	movwf	5
 19381  08A5  0800               	movf	0,w	;code access
 19382  08A6  00F8               	movwf	??_atoi
 19383  08A7  01F9               	clrf	??_atoi+1
 19384                           
 19385                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19386                           ; Switch size 1, requested type "simple"
 19387                           ; Number of cases is 1, Range of values is 0 to 0
 19388                           ; switch strategies available:
 19389                           ; Name         Instructions Cycles
 19390                           ; simple_byte            4     3 (average)
 19391                           ; direct_byte            8     6 (fixed)
 19392                           ; jumptable            260     6 (fixed)
 19393                           ;	Chosen strategy is simple_byte
 19394  08A8  0879               	movf	??_atoi+1,w
 19395  08A9  3A00               	xorlw	0	; case 0
 19396  08AA  1903               	skipnz
 19397  08AB  28AD               	goto	i1l6991
 19398  08AC  28D5               	goto	i1l5107
 19399  08AD                     i1l6991:
 19400                           
 19401                           ; Switch size 1, requested type "simple"
 19402                           ; Number of cases is 2, Range of values is 43 to 45
 19403                           ; switch strategies available:
 19404                           ; Name         Instructions Cycles
 19405                           ; simple_byte            7     4 (average)
 19406                           ; direct_byte           15     9 (fixed)
 19407                           ; jumptable            263     9 (fixed)
 19408                           ;	Chosen strategy is simple_byte
 19409  08AD  0878               	movf	??_atoi,w
 19410  08AE  3A2B               	xorlw	43	; case 43
 19411  08AF  1903               	skipnz
 19412  08B0  289C               	goto	i1l2381
 19413  08B1  3A06               	xorlw	6	; case 45
 19414  08B2  1903               	skipnz
 19415  08B3  2898               	goto	i1l5099
 19416  08B4  28D5               	goto	i1l5107
 19417  08B5                     i1l5103:
 19418  08B5  0876               	movf	atoi@s,w
 19419  08B6  0084               	movwf	4
 19420  08B7  0877               	movf	atoi@s+1,w
 19421  08B8  0085               	movwf	5
 19422  08B9  0800               	movf	0,w	;code access
 19423  08BA  00F8               	movwf	??_atoi
 19424  08BB  0828               	movf	atoi@n+1,w
 19425  08BC  00F1               	movwf	___wmul@multiplier+1
 19426  08BD  0827               	movf	atoi@n,w
 19427  08BE  00F0               	movwf	___wmul@multiplier
 19428  08BF  300A               	movlw	10
 19429  08C0  00F2               	movwf	___wmul@multiplicand
 19430  08C1  3000               	movlw	0
 19431  08C2  00F3               	movwf	___wmul@multiplicand+1
 19432  08C3  3192  225C  3188   	fcall	___wmul
 19433  08C6  0871               	movf	?___wmul+1,w
 19434  08C7  00FA               	movwf	??_atoi+2
 19435  08C8  0878               	movf	??_atoi,w
 19436  08C9  0270               	subwf	?___wmul,w
 19437  08CA  00F9               	movwf	??_atoi+1
 19438  08CB  1C03               	skipc
 19439  08CC  03FA               	decf	??_atoi+2,f
 19440  08CD  0879               	movf	??_atoi+1,w
 19441  08CE  3E30               	addlw	48
 19442  08CF  0020               	movlb	0	; select bank0
 19443  08D0  00A7               	movwf	atoi@n
 19444  08D1  3000               	movlw	0
 19445  08D2  3D7A               	addwfc	??_atoi+2,w
 19446  08D3  00A8               	movwf	atoi@n+1
 19447  08D4  289C               	goto	i1l2381
 19448  08D5                     i1l5107:
 19449  08D5  0876               	movf	atoi@s,w
 19450  08D6  0084               	movwf	4
 19451  08D7  0877               	movf	atoi@s+1,w
 19452  08D8  0085               	movwf	5
 19453  08D9  0800               	movf	0,w	;code access
 19454  08DA  3ED0               	addlw	208
 19455  08DB  00F8               	movwf	??_atoi
 19456  08DC  30FF               	movlw	255
 19457  08DD  1803               	skipnc
 19458  08DE  3000               	movlw	0
 19459  08DF  00F9               	movwf	??_atoi+1
 19460  08E0  3000               	movlw	0
 19461  08E1  0279               	subwf	??_atoi+1,w
 19462  08E2  300A               	movlw	10
 19463  08E3  1903               	skipnz
 19464  08E4  0278               	subwf	??_atoi,w
 19465  08E5  1C03               	skipc
 19466  08E6  28E8               	goto	u366_21
 19467  08E7  28EA               	goto	u366_20
 19468  08E8                     u366_21:
 19469  08E8  3001               	movlw	1
 19470  08E9  28EB               	goto	u367_20
 19471  08EA                     u366_20:
 19472  08EA  3000               	movlw	0
 19473  08EB                     u367_20:
 19474  08EB  00FA               	movwf	??_atoi+2
 19475  08EC  01FB               	clrf	??_atoi+3
 19476  08ED  087A               	movf	??_atoi+2,w
 19477  08EE  00A4               	movwf	_atoi$3333
 19478  08EF  087B               	movf	??_atoi+3,w
 19479  08F0  00A5               	movwf	_atoi$3333+1
 19480  08F1                     i1l5111:
 19481  08F1  0824               	movf	_atoi$3333,w
 19482  08F2  0425               	iorwf	_atoi$3333+1,w
 19483  08F3  1D03               	btfss	3,2
 19484  08F4  28F6               	goto	u368_21
 19485  08F5  28F7               	goto	u368_20
 19486  08F6                     u368_21:
 19487  08F6  28B5               	goto	i1l5103
 19488  08F7                     u368_20:
 19489  08F7                     i1l5113:
 19490  08F7  0820               	movf	atoi@neg,w
 19491  08F8  0421               	iorwf	atoi@neg+1,w
 19492  08F9  1D03               	btfss	3,2
 19493  08FA  28FC               	goto	u369_21
 19494  08FB  28FD               	goto	u369_20
 19495  08FC                     u369_21:
 19496  08FC  2909               	goto	i1l5117
 19497  08FD                     u369_20:
 19498  08FD                     i1l5115:
 19499  08FD  0927               	comf	atoi@n,w
 19500  08FE  00F8               	movwf	??_atoi
 19501  08FF  0928               	comf	atoi@n+1,w
 19502  0900  00F9               	movwf	??_atoi+1
 19503  0901  0AF8               	incf	??_atoi,f
 19504  0902  1903               	skipnz
 19505  0903  0AF9               	incf	??_atoi+1,f
 19506  0904  0878               	movf	??_atoi,w
 19507  0905  00F6               	movwf	?_atoi
 19508  0906  0879               	movf	??_atoi+1,w
 19509  0907  00F7               	movwf	?_atoi+1
 19510  0908  290D               	goto	i1l2394
 19511  0909                     i1l5117:
 19512  0909  0828               	movf	atoi@n+1,w
 19513  090A  00F7               	movwf	?_atoi+1
 19514  090B  0827               	movf	atoi@n,w
 19515  090C  00F6               	movwf	?_atoi
 19516  090D                     i1l2394:
 19517  090D  0008               	return
 19518  090E                     __end_of_atoi:
 19519                           
 19520                           	psect	text57
 19521  127B                     __ptext57:	
 19522 ;; *************** function _isspace *****************
 19523 ;; Defined at:
 19524 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
 19525 ;; Parameters:    Size  Location     Type
 19526 ;;  c               2    0[COMMON] int 
 19527 ;; Auto vars:     Size  Location     Type
 19528 ;;		None
 19529 ;; Return value:  Size  Location     Type
 19530 ;;                  2    0[COMMON] int 
 19531 ;; Registers used:
 19532 ;;		wreg, status,2, status,0
 19533 ;; Tracked objects:
 19534 ;;		On entry : 0/0
 19535 ;;		On exit  : 0/0
 19536 ;;		Unchanged: 0/0
 19537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19538 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19539 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19540 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19541 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19542 ;;Total ram usage:        5 bytes
 19543 ;; Hardware stack levels used: 1
 19544 ;; This function calls:
 19545 ;;		Nothing
 19546 ;; This function is called by:
 19547 ;;		_atoi
 19548 ;; This function uses a non-reentrant model
 19549 ;;
 19550                           
 19551                           
 19552                           ;psect for function _isspace
 19553  127B                     _isspace:
 19554  127B                     i1l4983:	
 19555                           ;incstack = 0
 19556                           ; Regs used in _isspace: [wreg+status,2+status,0]
 19557                           
 19558  127B  01F4               	clrf	_isspace$3349
 19559  127C  0AF4               	incf	_isspace$3349,f
 19560  127D                     i1l4985:
 19561  127D  3020               	movlw	32
 19562  127E  0670               	xorwf	isspace@c,w
 19563  127F  0471               	iorwf	isspace@c+1,w
 19564  1280  1903               	btfsc	3,2
 19565  1281  2A83               	goto	u340_21
 19566  1282  2A84               	goto	u340_20
 19567  1283                     u340_21:
 19568  1283  2A94               	goto	i1l4991
 19569  1284                     u340_20:
 19570  1284                     i1l4987:
 19571  1284  0870               	movf	isspace@c,w
 19572  1285  3EF7               	addlw	247
 19573  1286  00F2               	movwf	??_isspace
 19574  1287  30FF               	movlw	255
 19575  1288  3D71               	addwfc	isspace@c+1,w
 19576  1289  00F3               	movwf	??_isspace+1
 19577  128A  3000               	movlw	0
 19578  128B  0273               	subwf	??_isspace+1,w
 19579  128C  3005               	movlw	5
 19580  128D  1903               	skipnz
 19581  128E  0272               	subwf	??_isspace,w
 19582  128F  1C03               	skipc
 19583  1290  2A92               	goto	u341_21
 19584  1291  2A93               	goto	u341_20
 19585  1292                     u341_21:
 19586  1292  2A94               	goto	i1l4991
 19587  1293                     u341_20:
 19588  1293                     i1l4989:
 19589  1293  01F4               	clrf	_isspace$3349
 19590  1294                     i1l4991:
 19591  1294  0874               	movf	_isspace$3349,w
 19592  1295  00F2               	movwf	??_isspace
 19593  1296  01F3               	clrf	??_isspace+1
 19594  1297  0872               	movf	??_isspace,w
 19595  1298  00F0               	movwf	?_isspace
 19596  1299  0873               	movf	??_isspace+1,w
 19597  129A  00F1               	movwf	?_isspace+1
 19598  129B                     i1l2405:
 19599  129B  0008               	return
 19600  129C                     __end_of_isspace:
 19601                           
 19602                           	psect	text58
 19603  11A5                     __ptext58:	
 19604 ;; *************** function _isdigit *****************
 19605 ;; Defined at:
 19606 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
 19607 ;; Parameters:    Size  Location     Type
 19608 ;;  c               2    0[COMMON] int 
 19609 ;; Auto vars:     Size  Location     Type
 19610 ;;		None
 19611 ;; Return value:  Size  Location     Type
 19612 ;;                  2    0[COMMON] int 
 19613 ;; Registers used:
 19614 ;;		wreg, status,2, status,0
 19615 ;; Tracked objects:
 19616 ;;		On entry : 0/0
 19617 ;;		On exit  : 0/0
 19618 ;;		Unchanged: 0/0
 19619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19620 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19622 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19623 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19624 ;;Total ram usage:        6 bytes
 19625 ;; Hardware stack levels used: 1
 19626 ;; This function calls:
 19627 ;;		Nothing
 19628 ;; This function is called by:
 19629 ;;		_vfpfcnvrt
 19630 ;;		_atoi
 19631 ;; This function uses a non-reentrant model
 19632 ;;
 19633                           
 19634                           
 19635                           ;psect for function _isdigit
 19636  11A5                     _isdigit:
 19637  11A5                     i1l4979:	
 19638                           ;incstack = 0
 19639                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 19640                           
 19641  11A5  0870               	movf	isdigit@c,w
 19642  11A6  3ED0               	addlw	208
 19643  11A7  00F2               	movwf	??_isdigit
 19644  11A8  30FF               	movlw	255
 19645  11A9  3D71               	addwfc	isdigit@c+1,w
 19646  11AA  00F3               	movwf	??_isdigit+1
 19647  11AB  3000               	movlw	0
 19648  11AC  0273               	subwf	??_isdigit+1,w
 19649  11AD  300A               	movlw	10
 19650  11AE  1903               	skipnz
 19651  11AF  0272               	subwf	??_isdigit,w
 19652  11B0  1C03               	skipc
 19653  11B1  29B3               	goto	u338_21
 19654  11B2  29B5               	goto	u338_20
 19655  11B3                     u338_21:
 19656  11B3  3001               	movlw	1
 19657  11B4  29B6               	goto	u339_20
 19658  11B5                     u338_20:
 19659  11B5  3000               	movlw	0
 19660  11B6                     u339_20:
 19661  11B6  00F4               	movwf	??_isdigit+2
 19662  11B7  01F5               	clrf	??_isdigit+3
 19663  11B8  0874               	movf	??_isdigit+2,w
 19664  11B9  00F0               	movwf	?_isdigit
 19665  11BA  0875               	movf	??_isdigit+3,w
 19666  11BB  00F1               	movwf	?_isdigit+1
 19667  11BC                     i1l2397:
 19668  11BC  0008               	return
 19669  11BD                     __end_of_isdigit:
 19670                           
 19671                           	psect	text59
 19672  125C                     __ptext59:	
 19673 ;; *************** function ___wmul *****************
 19674 ;; Defined at:
 19675 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 19676 ;; Parameters:    Size  Location     Type
 19677 ;;  multiplier      2    0[COMMON] unsigned int 
 19678 ;;  multiplicand    2    2[COMMON] unsigned int 
 19679 ;; Auto vars:     Size  Location     Type
 19680 ;;  product         2    4[COMMON] unsigned int 
 19681 ;; Return value:  Size  Location     Type
 19682 ;;                  2    0[COMMON] unsigned int 
 19683 ;; Registers used:
 19684 ;;		wreg, status,2, status,0
 19685 ;; Tracked objects:
 19686 ;;		On entry : 0/0
 19687 ;;		On exit  : 0/0
 19688 ;;		Unchanged: 0/0
 19689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19690 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19691 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19693 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19694 ;;Total ram usage:        6 bytes
 19695 ;; Hardware stack levels used: 1
 19696 ;; This function calls:
 19697 ;;		Nothing
 19698 ;; This function is called by:
 19699 ;;		_atoi
 19700 ;; This function uses a non-reentrant model
 19701 ;;
 19702                           
 19703                           
 19704                           ;psect for function ___wmul
 19705  125C                     ___wmul:
 19706  125C                     i1l4871:	
 19707                           ;incstack = 0
 19708                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 19709                           
 19710  125C  01F4               	clrf	___wmul@product
 19711  125D  01F5               	clrf	___wmul@product+1
 19712  125E                     i1l4873:
 19713  125E  1C70               	btfss	___wmul@multiplier,0
 19714  125F  2A61               	goto	u308_21
 19715  1260  2A62               	goto	u308_20
 19716  1261                     u308_21:
 19717  1261  2A66               	goto	i1l1778
 19718  1262                     u308_20:
 19719  1262                     i1l4875:
 19720  1262  0872               	movf	___wmul@multiplicand,w
 19721  1263  07F4               	addwf	___wmul@product,f
 19722  1264  0873               	movf	___wmul@multiplicand+1,w
 19723  1265  3DF5               	addwfc	___wmul@product+1,f
 19724  1266                     i1l1778:
 19725  1266  3001               	movlw	1
 19726  1267                     u309_25:
 19727  1267  35F2               	lslf	___wmul@multiplicand,f
 19728  1268  0DF3               	rlf	___wmul@multiplicand+1,f
 19729  1269  0B89               	decfsz	9,f
 19730  126A  2A67               	goto	u309_25
 19731  126B                     i1l4877:
 19732  126B  3001               	movlw	1
 19733  126C                     u310_25:
 19734  126C  36F1               	lsrf	___wmul@multiplier+1,f
 19735  126D  0CF0               	rrf	___wmul@multiplier,f
 19736  126E  0B89               	decfsz	9,f
 19737  126F  2A6C               	goto	u310_25
 19738  1270                     i1l4879:
 19739  1270  0870               	movf	___wmul@multiplier,w
 19740  1271  0471               	iorwf	___wmul@multiplier+1,w
 19741  1272  1D03               	btfss	3,2
 19742  1273  2A75               	goto	u311_21
 19743  1274  2A76               	goto	u311_20
 19744  1275                     u311_21:
 19745  1275  2A5E               	goto	i1l4873
 19746  1276                     u311_20:
 19747  1276                     i1l4881:
 19748  1276  0875               	movf	___wmul@product+1,w
 19749  1277  00F1               	movwf	?___wmul+1
 19750  1278  0874               	movf	___wmul@product,w
 19751  1279  00F0               	movwf	?___wmul
 19752  127A                     i1l1780:
 19753  127A  0008               	return
 19754  127B                     __end_of___wmul:
 19755                           
 19756                           	psect	text60
 19757  1164                     __ptext60:	
 19758 ;; *************** function _LCDstr *****************
 19759 ;; Defined at:
 19760 ;;		line 112 in file "LCD/lcd.c"
 19761 ;; Parameters:    Size  Location     Type
 19762 ;;  p               1    wreg     PTR unsigned char 
 19763 ;;		 -> printLCD@buf(33), 
 19764 ;; Auto vars:     Size  Location     Type
 19765 ;;  p               1   11[COMMON] PTR unsigned char 
 19766 ;;		 -> printLCD@buf(33), 
 19767 ;;  c               1   10[COMMON] unsigned char 
 19768 ;; Return value:  Size  Location     Type
 19769 ;;                  1    wreg      void 
 19770 ;; Registers used:
 19771 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 19772 ;; Tracked objects:
 19773 ;;		On entry : 0/0
 19774 ;;		On exit  : 0/0
 19775 ;;		Unchanged: 0/0
 19776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19778 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19779 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19780 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19781 ;;Total ram usage:        3 bytes
 19782 ;; Hardware stack levels used: 1
 19783 ;; Hardware stack levels required when called: 3
 19784 ;; This function calls:
 19785 ;;		_LCDchar
 19786 ;; This function is called by:
 19787 ;;		_printLCD
 19788 ;; This function uses a non-reentrant model
 19789 ;;
 19790                           
 19791                           
 19792                           ;psect for function _LCDstr
 19793  1164                     _LCDstr:
 19794                           
 19795                           ;incstack = 0
 19796                           ; Regs used in _LCDstr: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 19797                           ;LCDstr@p stored from wreg
 19798  1164  00FB               	movwf	LCDstr@p
 19799  1165                     i1l5431:
 19800                           
 19801                           ;LCD/lcd.c: 112: void LCDstr(char *p);LCD/lcd.c: 113: {;LCD/lcd.c: 114:   unsigned char 
      +                          c;;LCD/lcd.c: 116:   while((c = *p++)) LCDchar(c);
 19802  1165  296A               	goto	i1l5435
 19803  1166                     i1l5433:
 19804  1166  087A               	movf	LCDstr@c,w
 19805  1167  3190  208E  3191   	fcall	_LCDchar
 19806  116A                     i1l5435:
 19807  116A  087B               	movf	LCDstr@p,w
 19808  116B  0086               	movwf	6
 19809  116C  0187               	clrf	7
 19810  116D  0AFB               	incf	LCDstr@p,f
 19811  116E  0801               	movf	1,w
 19812  116F  00F9               	movwf	??_LCDstr
 19813  1170  0879               	movf	??_LCDstr,w
 19814  1171  00FA               	movwf	LCDstr@c
 19815  1172  087A               	movf	LCDstr@c,w
 19816  1173  1D03               	btfss	3,2
 19817  1174  2976               	goto	u436_21
 19818  1175  2977               	goto	u436_20
 19819  1176                     u436_21:
 19820  1176  2966               	goto	i1l5433
 19821  1177                     u436_20:
 19822  1177                     i1l1617:
 19823  1177  0008               	return
 19824  1178                     __end_of_LCDstr:
 19825                           
 19826                           	psect	text61
 19827  108E                     __ptext61:	
 19828 ;; *************** function _LCDchar *****************
 19829 ;; Defined at:
 19830 ;;		line 107 in file "LCD/lcd.c"
 19831 ;; Parameters:    Size  Location     Type
 19832 ;;  c               1    wreg     unsigned char 
 19833 ;; Auto vars:     Size  Location     Type
 19834 ;;  c               1    8[COMMON] unsigned char 
 19835 ;; Return value:  Size  Location     Type
 19836 ;;                  1    wreg      void 
 19837 ;; Registers used:
 19838 ;;		wreg, status,2, status,0, pclath, cstack
 19839 ;; Tracked objects:
 19840 ;;		On entry : 0/0
 19841 ;;		On exit  : 0/0
 19842 ;;		Unchanged: 0/0
 19843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19845 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19847 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19848 ;;Total ram usage:        1 bytes
 19849 ;; Hardware stack levels used: 1
 19850 ;; Hardware stack levels required when called: 2
 19851 ;; This function calls:
 19852 ;;		i1_LCDsend2x4
 19853 ;; This function is called by:
 19854 ;;		_LCDstr
 19855 ;; This function uses a non-reentrant model
 19856 ;;
 19857                           
 19858                           
 19859                           ;psect for function _LCDchar
 19860  108E                     _LCDchar:
 19861                           
 19862                           ;incstack = 0
 19863                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
 19864                           ;LCDchar@c stored from wreg
 19865  108E  00F8               	movwf	LCDchar@c
 19866  108F                     i1l5375:
 19867                           
 19868                           ;LCD/lcd.c: 107: void LCDchar(unsigned char c);LCD/lcd.c: 108: {;LCD/lcd.c: 109:   LCDse
      +                          nd2x4(c, 0x01);
 19869  108F  01F2               	clrf	i1LCDsend2x4@mode
 19870  1090  0AF2               	incf	i1LCDsend2x4@mode,f
 19871  1091  0878               	movf	LCDchar@c,w
 19872  1092  3189  210E  3190   	fcall	i1_LCDsend2x4
 19873  1095                     i1l1611:
 19874  1095  0008               	return
 19875  1096                     __end_of_LCDchar:
 19876                           
 19877                           	psect	text62
 19878  106B                     __ptext62:	
 19879 ;; *************** function _LCDcmd *****************
 19880 ;; Defined at:
 19881 ;;		line 102 in file "LCD/lcd.c"
 19882 ;; Parameters:    Size  Location     Type
 19883 ;;  c               1    wreg     unsigned char 
 19884 ;; Auto vars:     Size  Location     Type
 19885 ;;  c               1    8[COMMON] unsigned char 
 19886 ;; Return value:  Size  Location     Type
 19887 ;;                  1    wreg      void 
 19888 ;; Registers used:
 19889 ;;		wreg, status,2, status,0, pclath, cstack
 19890 ;; Tracked objects:
 19891 ;;		On entry : 0/0
 19892 ;;		On exit  : 0/0
 19893 ;;		Unchanged: 0/0
 19894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19896 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19898 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19899 ;;Total ram usage:        1 bytes
 19900 ;; Hardware stack levels used: 1
 19901 ;; Hardware stack levels required when called: 2
 19902 ;; This function calls:
 19903 ;;		i1_LCDsend2x4
 19904 ;; This function is called by:
 19905 ;;		_printLCD
 19906 ;;		_LCDpos
 19907 ;; This function uses a non-reentrant model
 19908 ;;
 19909                           
 19910                           
 19911                           ;psect for function _LCDcmd
 19912  106B                     _LCDcmd:
 19913                           
 19914                           ;incstack = 0
 19915                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
 19916                           ;LCDcmd@c stored from wreg
 19917  106B  00F8               	movwf	LCDcmd@c
 19918  106C                     i1l5407:
 19919                           
 19920                           ;LCD/lcd.c: 102: void LCDcmd(unsigned char c);LCD/lcd.c: 103: {;LCD/lcd.c: 104:   LCDsen
      +                          d2x4(c, 0);
 19921  106C  01F2               	clrf	i1LCDsend2x4@mode
 19922  106D  0878               	movf	LCDcmd@c,w
 19923  106E  3189  210E  3190   	fcall	i1_LCDsend2x4
 19924  1071                     i1l1608:
 19925  1071  0008               	return
 19926  1072                     __end_of_LCDcmd:
 19927                           
 19928                           	psect	text63
 19929  090E                     __ptext63:	
 19930 ;; *************** function i1_LCDsend2x4 *****************
 19931 ;; Defined at:
 19932 ;;		line 56 in file "LCD/lcd.c"
 19933 ;; Parameters:    Size  Location     Type
 19934 ;;  c               1    wreg     unsigned char 
 19935 ;;  mode            1    2[COMMON] unsigned char 
 19936 ;; Auto vars:     Size  Location     Type
 19937 ;;  c               1    5[COMMON] unsigned char 
 19938 ;;  lc              1    7[COMMON] unsigned char 
 19939 ;;  hc              1    6[COMMON] unsigned char 
 19940 ;; Return value:  Size  Location     Type
 19941 ;;                  1    wreg      void 
 19942 ;; Registers used:
 19943 ;;		wreg, status,2, status,0, pclath, cstack
 19944 ;; Tracked objects:
 19945 ;;		On entry : 0/0
 19946 ;;		On exit  : 0/0
 19947 ;;		Unchanged: 0/0
 19948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19949 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19950 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19951 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19952 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19953 ;;Total ram usage:        6 bytes
 19954 ;; Hardware stack levels used: 1
 19955 ;; Hardware stack levels required when called: 1
 19956 ;; This function calls:
 19957 ;;		i1_WriteI2C
 19958 ;; This function is called by:
 19959 ;;		_LCDcmd
 19960 ;;		_LCDchar
 19961 ;; This function uses a non-reentrant model
 19962 ;;
 19963                           
 19964                           
 19965                           ;psect for function i1_LCDsend2x4
 19966  090E                     i1_LCDsend2x4:
 19967                           
 19968                           ;incstack = 0
 19969                           ; Regs used in i1_LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 19970                           ;i1LCDsend2x4@c stored from wreg
 19971  090E  00F5               	movwf	i1LCDsend2x4@c
 19972  090F                     i1l5269:
 19973                           
 19974                           ;LCD/lcd.c: 56: void LCDsend2x4(unsigned char c, unsigned char mode);LCD/lcd.c: 57: {;LC
      +                          D/lcd.c: 58:   unsigned char hc;;LCD/lcd.c: 59:   unsigned char lc;;LCD/lcd.c: 61:   hc 
      +                          = c & 0xf0;
 19975  090F  0875               	movf	i1LCDsend2x4@c,w
 19976  0910  39F0               	andlw	240
 19977  0911  00F3               	movwf	??i1_LCDsend2x4
 19978  0912  0873               	movf	??i1_LCDsend2x4,w
 19979  0913  00F6               	movwf	i1LCDsend2x4@hc
 19980  0914                     i1l5271:
 19981                           
 19982                           ;LCD/lcd.c: 62:   lc = (c << 4) & 0xf0;
 19983  0914  0875               	movf	i1LCDsend2x4@c,w
 19984  0915  00F3               	movwf	??i1_LCDsend2x4
 19985  0916  3003               	movlw	3
 19986  0917                     u394_25:
 19987  0917  35F3               	lslf	??i1_LCDsend2x4,f
 19988  0918  3EFF               	addlw	-1
 19989  0919  1D03               	skipz
 19990  091A  2917               	goto	u394_25
 19991  091B  3573               	lslf	??i1_LCDsend2x4,w
 19992  091C  39F0               	andlw	240
 19993  091D  00F4               	movwf	??i1_LCDsend2x4+1
 19994  091E  0874               	movf	??i1_LCDsend2x4+1,w
 19995  091F  00F7               	movwf	i1LCDsend2x4@lc
 19996  0920                     i1l5273:	
 19997                           ;LCD/lcd.c: 64:   while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19998                           
 19999  0920  0023               	movlb	3	; select bank3
 20000  0921  0C0F               	rrf	15,w	;volatile
 20001  0922  0C89               	rrf	9,f
 20002  0923  3901               	andlw	1
 20003  0924  00F3               	movwf	??i1_LCDsend2x4
 20004  0925  0811               	movf	17,w	;volatile
 20005  0926  391F               	andlw	31
 20006  0927  0473               	iorwf	??i1_LCDsend2x4,w
 20007  0928  1D03               	btfss	3,2
 20008  0929  292B               	goto	u395_21
 20009  092A  292C               	goto	u395_20
 20010  092B                     u395_21:
 20011  092B  2920               	goto	i1l5273
 20012  092C                     u395_20:
 20013  092C                     i1l1568:	
 20014                           ;LCD/lcd.c: 65:   do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 20015                           
 20016  092C  1411               	bsf	17,0	;volatile
 20017  092D                     i1l1569:
 20018  092D  1811               	btfsc	17,0	;volatile
 20019  092E  2930               	goto	u396_21
 20020  092F  2931               	goto	u396_20
 20021  0930                     u396_21:
 20022  0930  292D               	goto	i1l1569
 20023  0931                     u396_20:
 20024  0931                     i1l5275:
 20025  0931  0C0F               	rrf	15,w	;volatile
 20026  0932  0C89               	rrf	9,f
 20027  0933  3901               	andlw	1
 20028  0934  00F3               	movwf	??i1_LCDsend2x4
 20029  0935  0811               	movf	17,w	;volatile
 20030  0936  391F               	andlw	31
 20031  0937  0473               	iorwf	??i1_LCDsend2x4,w
 20032  0938  1D03               	btfss	3,2
 20033  0939  293B               	goto	u397_21
 20034  093A  293C               	goto	u397_20
 20035  093B                     u397_21:
 20036  093B  2931               	goto	i1l5275
 20037  093C                     u397_20:
 20038  093C                     i1l5277:
 20039                           
 20040                           ;LCD/lcd.c: 66:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 20041  093C  304E               	movlw	78
 20042  093D  3193  23E7  3189   	fcall	i1_WriteI2C
 20043  0940                     i1l5279:
 20044  0940  0023               	movlb	3	; select bank3
 20045  0941  0C0F               	rrf	15,w	;volatile
 20046  0942  0C89               	rrf	9,f
 20047  0943  3901               	andlw	1
 20048  0944  00F3               	movwf	??i1_LCDsend2x4
 20049  0945  0811               	movf	17,w	;volatile
 20050  0946  391F               	andlw	31
 20051  0947  0473               	iorwf	??i1_LCDsend2x4,w
 20052  0948  1D03               	btfss	3,2
 20053  0949  294B               	goto	u398_21
 20054  094A  294C               	goto	u398_20
 20055  094B                     u398_21:
 20056  094B  2940               	goto	i1l5279
 20057  094C                     u398_20:
 20058  094C                     i1l5281:
 20059                           
 20060                           ;LCD/lcd.c: 67:   WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 20061  094C  0876               	movf	i1LCDsend2x4@hc,w
 20062  094D  0472               	iorwf	i1LCDsend2x4@mode,w
 20063  094E  3808               	iorlw	8
 20064  094F  3193  23E7  3189   	fcall	i1_WriteI2C
 20065  0952                     i1l5283:
 20066  0952  0023               	movlb	3	; select bank3
 20067  0953  0C0F               	rrf	15,w	;volatile
 20068  0954  0C89               	rrf	9,f
 20069  0955  3901               	andlw	1
 20070  0956  00F3               	movwf	??i1_LCDsend2x4
 20071  0957  0811               	movf	17,w	;volatile
 20072  0958  391F               	andlw	31
 20073  0959  0473               	iorwf	??i1_LCDsend2x4,w
 20074  095A  1D03               	btfss	3,2
 20075  095B  295D               	goto	u399_21
 20076  095C  295E               	goto	u399_20
 20077  095D                     u399_21:
 20078  095D  2952               	goto	i1l5283
 20079  095E                     u399_20:
 20080  095E                     i1l5285:
 20081                           
 20082                           ;LCD/lcd.c: 68:   WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STA
      +                          Tbits.R_W));
 20083  095E  0876               	movf	i1LCDsend2x4@hc,w
 20084  095F  0472               	iorwf	i1LCDsend2x4@mode,w
 20085  0960  380C               	iorlw	12
 20086  0961  3193  23E7  3189   	fcall	i1_WriteI2C
 20087  0964                     i1l5287:
 20088  0964  0023               	movlb	3	; select bank3
 20089  0965  0C0F               	rrf	15,w	;volatile
 20090  0966  0C89               	rrf	9,f
 20091  0967  3901               	andlw	1
 20092  0968  00F3               	movwf	??i1_LCDsend2x4
 20093  0969  0811               	movf	17,w	;volatile
 20094  096A  391F               	andlw	31
 20095  096B  0473               	iorwf	??i1_LCDsend2x4,w
 20096  096C  1D03               	btfss	3,2
 20097  096D  296F               	goto	u400_21
 20098  096E  2970               	goto	u400_20
 20099  096F                     u400_21:
 20100  096F  2964               	goto	i1l5287
 20101  0970                     u400_20:
 20102  0970                     i1l1584:
 20103                           
 20104                           ;LCD/lcd.c: 69:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 20105  0970  0000               	nop
 20106  0971                     i1l5289:
 20107                           
 20108                           ;LCD/lcd.c: 70:   WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 20109  0971  0876               	movf	i1LCDsend2x4@hc,w
 20110  0972  0472               	iorwf	i1LCDsend2x4@mode,w
 20111  0973  3808               	iorlw	8
 20112  0974  3193  23E7  3189   	fcall	i1_WriteI2C
 20113  0977                     i1l5291:
 20114  0977  0023               	movlb	3	; select bank3
 20115  0978  0C0F               	rrf	15,w	;volatile
 20116  0979  0C89               	rrf	9,f
 20117  097A  3901               	andlw	1
 20118  097B  00F3               	movwf	??i1_LCDsend2x4
 20119  097C  0811               	movf	17,w	;volatile
 20120  097D  391F               	andlw	31
 20121  097E  0473               	iorwf	??i1_LCDsend2x4,w
 20122  097F  1D03               	btfss	3,2
 20123  0980  2982               	goto	u401_21
 20124  0981  2983               	goto	u401_20
 20125  0982                     u401_21:
 20126  0982  2977               	goto	i1l5291
 20127  0983                     u401_20:
 20128  0983                     i1l5293:
 20129                           
 20130                           ;LCD/lcd.c: 71:   WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 20131  0983  0877               	movf	i1LCDsend2x4@lc,w
 20132  0984  0472               	iorwf	i1LCDsend2x4@mode,w
 20133  0985  3808               	iorlw	8
 20134  0986  3193  23E7  3189   	fcall	i1_WriteI2C
 20135  0989                     i1l5295:
 20136  0989  0023               	movlb	3	; select bank3
 20137  098A  0C0F               	rrf	15,w	;volatile
 20138  098B  0C89               	rrf	9,f
 20139  098C  3901               	andlw	1
 20140  098D  00F3               	movwf	??i1_LCDsend2x4
 20141  098E  0811               	movf	17,w	;volatile
 20142  098F  391F               	andlw	31
 20143  0990  0473               	iorwf	??i1_LCDsend2x4,w
 20144  0991  1D03               	btfss	3,2
 20145  0992  2994               	goto	u402_21
 20146  0993  2995               	goto	u402_20
 20147  0994                     u402_21:
 20148  0994  2989               	goto	i1l5295
 20149  0995                     u402_20:
 20150  0995                     i1l5297:
 20151                           
 20152                           ;LCD/lcd.c: 72:   WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STA
      +                          Tbits.R_W));
 20153  0995  0877               	movf	i1LCDsend2x4@lc,w
 20154  0996  0472               	iorwf	i1LCDsend2x4@mode,w
 20155  0997  380C               	iorlw	12
 20156  0998  3193  23E7  3189   	fcall	i1_WriteI2C
 20157  099B                     i1l5299:
 20158  099B  0023               	movlb	3	; select bank3
 20159  099C  0C0F               	rrf	15,w	;volatile
 20160  099D  0C89               	rrf	9,f
 20161  099E  3901               	andlw	1
 20162  099F  00F3               	movwf	??i1_LCDsend2x4
 20163  09A0  0811               	movf	17,w	;volatile
 20164  09A1  391F               	andlw	31
 20165  09A2  0473               	iorwf	??i1_LCDsend2x4,w
 20166  09A3  1D03               	btfss	3,2
 20167  09A4  29A6               	goto	u403_21
 20168  09A5  29A7               	goto	u403_20
 20169  09A6                     u403_21:
 20170  09A6  299B               	goto	i1l5299
 20171  09A7                     u403_20:
 20172  09A7                     i1l1593:
 20173                           
 20174                           ;LCD/lcd.c: 73:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 20175  09A7  0000               	nop
 20176  09A8                     i1l5301:
 20177                           
 20178                           ;LCD/lcd.c: 74:   WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 20179  09A8  0877               	movf	i1LCDsend2x4@lc,w
 20180  09A9  0472               	iorwf	i1LCDsend2x4@mode,w
 20181  09AA  3808               	iorlw	8
 20182  09AB  3193  23E7  3189   	fcall	i1_WriteI2C
 20183  09AE                     i1l5303:
 20184  09AE  0023               	movlb	3	; select bank3
 20185  09AF  0C0F               	rrf	15,w	;volatile
 20186  09B0  0C89               	rrf	9,f
 20187  09B1  3901               	andlw	1
 20188  09B2  00F3               	movwf	??i1_LCDsend2x4
 20189  09B3  0811               	movf	17,w	;volatile
 20190  09B4  391F               	andlw	31
 20191  09B5  0473               	iorwf	??i1_LCDsend2x4,w
 20192  09B6  1D03               	btfss	3,2
 20193  09B7  29B9               	goto	u404_21
 20194  09B8  29BA               	goto	u404_20
 20195  09B9                     u404_21:
 20196  09B9  29AE               	goto	i1l5303
 20197  09BA                     u404_20:
 20198  09BA                     i1l1597:	
 20199                           ;LCD/lcd.c: 75:   do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 20200                           
 20201  09BA  1511               	bsf	17,2	;volatile
 20202  09BB                     i1l1598:
 20203  09BB  1911               	btfsc	17,2	;volatile
 20204  09BC  29BE               	goto	u405_21
 20205  09BD  29BF               	goto	u405_20
 20206  09BE                     u405_21:
 20207  09BE  29BB               	goto	i1l1598
 20208  09BF                     u405_20:
 20209  09BF                     i1l5305:
 20210                           
 20211                           ;LCD/lcd.c: 76:   _delay((unsigned long)((50)*(4000000/4000000.0)));
 20212  09BF  3010               	movlw	16
 20213  09C0                     u614_27:
 20214  09C0  0B89               	decfsz	9,f
 20215  09C1  29C0               	goto	u614_27
 20216  09C2  3200               	nop2
 20217  09C3                     i1l1602:
 20218  09C3  0008               	return
 20219  09C4                     __end_ofi1_LCDsend2x4:
 20220                           
 20221                           	psect	text64
 20222  1130                     __ptext64:	
 20223 ;; *************** function _LCDbusy *****************
 20224 ;; Defined at:
 20225 ;;		line 119 in file "LCD/lcd.c"
 20226 ;; Parameters:    Size  Location     Type
 20227 ;;		None
 20228 ;; Auto vars:     Size  Location     Type
 20229 ;;		None
 20230 ;; Return value:  Size  Location     Type
 20231 ;;                  2    7[COMMON] int 
 20232 ;; Registers used:
 20233 ;;		wreg, status,2, status,0, pclath, cstack
 20234 ;; Tracked objects:
 20235 ;;		On entry : 0/0
 20236 ;;		On exit  : 0/0
 20237 ;;		Unchanged: 0/0
 20238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20239 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20242 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20243 ;;Total ram usage:        2 bytes
 20244 ;; Hardware stack levels used: 1
 20245 ;; Hardware stack levels required when called: 2
 20246 ;; This function calls:
 20247 ;;		_LCDrecv
 20248 ;; This function is called by:
 20249 ;;		_printLCD
 20250 ;; This function uses a non-reentrant model
 20251 ;;
 20252                           
 20253                           
 20254                           ;psect for function _LCDbusy
 20255  1130                     _LCDbusy:
 20256  1130                     i1l5409:	
 20257                           ;incstack = 0
 20258                           ; Regs used in _LCDbusy: [wreg+status,2+status,0+pclath+cstack]
 20259                           
 20260                           
 20261                           ;LCD/lcd.c: 121:   if(LCDrecv(0) & 0x80) return 1;
 20262  1130  3000               	movlw	0
 20263  1131  318D  254C  3191   	fcall	_LCDrecv
 20264  1134  3980               	andlw	128
 20265  1135  1903               	btfsc	3,2
 20266  1136  2938               	goto	u435_21
 20267  1137  2939               	goto	u435_20
 20268  1138                     u435_21:
 20269  1138  293E               	goto	i1l5415
 20270  1139                     u435_20:
 20271  1139                     i1l5411:
 20272  1139  3001               	movlw	1
 20273  113A  00F7               	movwf	?_LCDbusy
 20274  113B  3000               	movlw	0
 20275  113C  00F8               	movwf	?_LCDbusy+1
 20276  113D  2940               	goto	i1l1621
 20277  113E                     i1l5415:
 20278                           
 20279                           ;LCD/lcd.c: 122:   return 0;
 20280  113E  01F7               	clrf	?_LCDbusy
 20281  113F  01F8               	clrf	?_LCDbusy+1
 20282  1140                     i1l1621:
 20283  1140  0008               	return
 20284  1141                     __end_of_LCDbusy:
 20285                           
 20286                           	psect	text65
 20287  0D4C                     __ptext65:	
 20288 ;; *************** function _LCDrecv *****************
 20289 ;; Defined at:
 20290 ;;		line 25 in file "LCD/lcd.c"
 20291 ;; Parameters:    Size  Location     Type
 20292 ;;  mode            1    wreg     unsigned char 
 20293 ;; Auto vars:     Size  Location     Type
 20294 ;;  mode            1    6[COMMON] unsigned char 
 20295 ;;  lc              1    5[COMMON] unsigned char 
 20296 ;;  hc              1    4[COMMON] unsigned char 
 20297 ;; Return value:  Size  Location     Type
 20298 ;;                  1    wreg      unsigned char 
 20299 ;; Registers used:
 20300 ;;		wreg, status,2, status,0, pclath, cstack
 20301 ;; Tracked objects:
 20302 ;;		On entry : 0/0
 20303 ;;		On exit  : 0/0
 20304 ;;		Unchanged: 0/0
 20305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20307 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20308 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20309 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20310 ;;Total ram usage:        5 bytes
 20311 ;; Hardware stack levels used: 1
 20312 ;; Hardware stack levels required when called: 1
 20313 ;; This function calls:
 20314 ;;		_ReadI2C
 20315 ;;		i1_WriteI2C
 20316 ;; This function is called by:
 20317 ;;		_LCDbusy
 20318 ;; This function uses a non-reentrant model
 20319 ;;
 20320                           
 20321                           
 20322                           ;psect for function _LCDrecv
 20323  0D4C                     _LCDrecv:
 20324                           
 20325                           ;incstack = 0
 20326                           ; Regs used in _LCDrecv: [wreg+status,2+status,0+pclath+cstack]
 20327                           ;LCDrecv@mode stored from wreg
 20328  0D4C  00F6               	movwf	LCDrecv@mode
 20329  0D4D                     i1l5309:
 20330  0D4D                     i1l5311:	
 20331                           ;LCD/lcd.c: 25: unsigned char LCDrecv(unsigned char mode);LCD/lcd.c: 26: {;LCD/lcd.c: 27
      +                          :   unsigned char hc;;LCD/lcd.c: 28:   unsigned char lc;;LCD/lcd.c: 30:   while ((SSP1CO
      +                          N2 & 0x1F) | (SSP1STATbits.R_W));
 20332                           
 20333  0D4D  0023               	movlb	3	; select bank3
 20334  0D4E  0C0F               	rrf	15,w	;volatile
 20335  0D4F  0C89               	rrf	9,f
 20336  0D50  3901               	andlw	1
 20337  0D51  00F2               	movwf	??_LCDrecv
 20338  0D52  0811               	movf	17,w	;volatile
 20339  0D53  391F               	andlw	31
 20340  0D54  0472               	iorwf	??_LCDrecv,w
 20341  0D55  1D03               	btfss	3,2
 20342  0D56  2D58               	goto	u406_21
 20343  0D57  2D59               	goto	u406_20
 20344  0D58                     u406_21:
 20345  0D58  2D4D               	goto	i1l5311
 20346  0D59                     u406_20:
 20347  0D59                     i1l1471:	
 20348                           ;LCD/lcd.c: 31:   do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 20349                           
 20350  0D59  1411               	bsf	17,0	;volatile
 20351  0D5A                     i1l1472:
 20352  0D5A  1811               	btfsc	17,0	;volatile
 20353  0D5B  2D5D               	goto	u407_21
 20354  0D5C  2D5E               	goto	u407_20
 20355  0D5D                     u407_21:
 20356  0D5D  2D5A               	goto	i1l1472
 20357  0D5E                     u407_20:
 20358  0D5E                     i1l5313:
 20359  0D5E  0C0F               	rrf	15,w	;volatile
 20360  0D5F  0C89               	rrf	9,f
 20361  0D60  3901               	andlw	1
 20362  0D61  00F2               	movwf	??_LCDrecv
 20363  0D62  0811               	movf	17,w	;volatile
 20364  0D63  391F               	andlw	31
 20365  0D64  0472               	iorwf	??_LCDrecv,w
 20366  0D65  1D03               	btfss	3,2
 20367  0D66  2D68               	goto	u408_21
 20368  0D67  2D69               	goto	u408_20
 20369  0D68                     u408_21:
 20370  0D68  2D5E               	goto	i1l5313
 20371  0D69                     u408_20:
 20372  0D69                     i1l5315:
 20373                           
 20374                           ;LCD/lcd.c: 32:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 20375  0D69  304E               	movlw	78
 20376  0D6A  3193  23E7  318D   	fcall	i1_WriteI2C
 20377  0D6D                     i1l5317:
 20378  0D6D  0023               	movlb	3	; select bank3
 20379  0D6E  0C0F               	rrf	15,w	;volatile
 20380  0D6F  0C89               	rrf	9,f
 20381  0D70  3901               	andlw	1
 20382  0D71  00F2               	movwf	??_LCDrecv
 20383  0D72  0811               	movf	17,w	;volatile
 20384  0D73  391F               	andlw	31
 20385  0D74  0472               	iorwf	??_LCDrecv,w
 20386  0D75  1D03               	btfss	3,2
 20387  0D76  2D78               	goto	u409_21
 20388  0D77  2D79               	goto	u409_20
 20389  0D78                     u409_21:
 20390  0D78  2D6D               	goto	i1l5317
 20391  0D79                     u409_20:
 20392  0D79                     i1l5319:
 20393                           
 20394                           ;LCD/lcd.c: 33:   WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1S
      +                          TATbits.R_W));
 20395  0D79  0876               	movf	LCDrecv@mode,w
 20396  0D7A  38FA               	iorlw	250
 20397  0D7B  3193  23E7  318D   	fcall	i1_WriteI2C
 20398  0D7E                     i1l5321:
 20399  0D7E  0023               	movlb	3	; select bank3
 20400  0D7F  0C0F               	rrf	15,w	;volatile
 20401  0D80  0C89               	rrf	9,f
 20402  0D81  3901               	andlw	1
 20403  0D82  00F2               	movwf	??_LCDrecv
 20404  0D83  0811               	movf	17,w	;volatile
 20405  0D84  391F               	andlw	31
 20406  0D85  0472               	iorwf	??_LCDrecv,w
 20407  0D86  1D03               	btfss	3,2
 20408  0D87  2D89               	goto	u410_21
 20409  0D88  2D8A               	goto	u410_20
 20410  0D89                     u410_21:
 20411  0D89  2D7E               	goto	i1l5321
 20412  0D8A                     u410_20:
 20413  0D8A                     i1l5323:
 20414                           
 20415                           ;LCD/lcd.c: 34:   WriteI2C(0xf0 | 0x08 | 0x04 | 0x02 | mode); while ((SSP1CON2 & 0x1F) |
      +                           (SSP1STATbits.R_W));
 20416  0D8A  0876               	movf	LCDrecv@mode,w
 20417  0D8B  38FE               	iorlw	254
 20418  0D8C  3193  23E7  318D   	fcall	i1_WriteI2C
 20419  0D8F                     i1l5325:
 20420  0D8F  0023               	movlb	3	; select bank3
 20421  0D90  0C0F               	rrf	15,w	;volatile
 20422  0D91  0C89               	rrf	9,f
 20423  0D92  3901               	andlw	1
 20424  0D93  00F2               	movwf	??_LCDrecv
 20425  0D94  0811               	movf	17,w	;volatile
 20426  0D95  391F               	andlw	31
 20427  0D96  0472               	iorwf	??_LCDrecv,w
 20428  0D97  1D03               	btfss	3,2
 20429  0D98  2D9A               	goto	u411_21
 20430  0D99  2D9B               	goto	u411_20
 20431  0D9A                     u411_21:
 20432  0D9A  2D8F               	goto	i1l5325
 20433  0D9B                     u411_20:
 20434  0D9B                     i1l1487:
 20435                           
 20436                           ;LCD/lcd.c: 35:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 20437  0D9B  0000               	nop
 20438  0D9C                     i1l1488:	
 20439                           ;LCD/lcd.c: 36:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 20440                           
 20441  0D9C  0023               	movlb	3	; select bank3
 20442  0D9D  1491               	bsf	17,1	;volatile
 20443  0D9E                     i1l1489:
 20444  0D9E  1891               	btfsc	17,1	;volatile
 20445  0D9F  2DA1               	goto	u412_21
 20446  0DA0  2DA2               	goto	u412_20
 20447  0DA1                     u412_21:
 20448  0DA1  2D9E               	goto	i1l1489
 20449  0DA2                     u412_20:
 20450  0DA2                     i1l5327:
 20451  0DA2  0C0F               	rrf	15,w	;volatile
 20452  0DA3  0C89               	rrf	9,f
 20453  0DA4  3901               	andlw	1
 20454  0DA5  00F2               	movwf	??_LCDrecv
 20455  0DA6  0811               	movf	17,w	;volatile
 20456  0DA7  391F               	andlw	31
 20457  0DA8  0472               	iorwf	??_LCDrecv,w
 20458  0DA9  1D03               	btfss	3,2
 20459  0DAA  2DAC               	goto	u413_21
 20460  0DAB  2DAD               	goto	u413_20
 20461  0DAC                     u413_21:
 20462  0DAC  2DA2               	goto	i1l5327
 20463  0DAD                     u413_20:
 20464  0DAD                     i1l5329:
 20465                           
 20466                           ;LCD/lcd.c: 37:   WriteI2C(0x4e | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 20467  0DAD  304F               	movlw	79
 20468  0DAE  3193  23E7  318D   	fcall	i1_WriteI2C
 20469  0DB1                     i1l5331:
 20470  0DB1  0023               	movlb	3	; select bank3
 20471  0DB2  0C0F               	rrf	15,w	;volatile
 20472  0DB3  0C89               	rrf	9,f
 20473  0DB4  3901               	andlw	1
 20474  0DB5  00F2               	movwf	??_LCDrecv
 20475  0DB6  0811               	movf	17,w	;volatile
 20476  0DB7  391F               	andlw	31
 20477  0DB8  0472               	iorwf	??_LCDrecv,w
 20478  0DB9  1D03               	btfss	3,2
 20479  0DBA  2DBC               	goto	u414_21
 20480  0DBB  2DBD               	goto	u414_20
 20481  0DBC                     u414_21:
 20482  0DBC  2DB1               	goto	i1l5331
 20483  0DBD                     u414_20:
 20484  0DBD                     i1l5333:
 20485                           
 20486                           ;LCD/lcd.c: 38:   hc = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 20487  0DBD  3191  21F0  318D   	fcall	_ReadI2C
 20488  0DC0  00F2               	movwf	??_LCDrecv
 20489  0DC1  0872               	movf	??_LCDrecv,w
 20490  0DC2  00F4               	movwf	LCDrecv@hc
 20491  0DC3                     i1l5335:
 20492  0DC3  0023               	movlb	3	; select bank3
 20493  0DC4  0C0F               	rrf	15,w	;volatile
 20494  0DC5  0C89               	rrf	9,f
 20495  0DC6  3901               	andlw	1
 20496  0DC7  00F2               	movwf	??_LCDrecv
 20497  0DC8  0811               	movf	17,w	;volatile
 20498  0DC9  391F               	andlw	31
 20499  0DCA  0472               	iorwf	??_LCDrecv,w
 20500  0DCB  1D03               	btfss	3,2
 20501  0DCC  2DCE               	goto	u415_21
 20502  0DCD  2DCF               	goto	u415_20
 20503  0DCE                     u415_21:
 20504  0DCE  2DC3               	goto	i1l5335
 20505  0DCF                     u415_20:
 20506  0DCF                     i1l1502:	
 20507                           ;LCD/lcd.c: 39:   do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKE
      +                          N); } while (0);
 20508                           
 20509  0DCF  1691               	bsf	17,5	;volatile
 20510  0DD0  1611               	bsf	17,4	;volatile
 20511  0DD1                     i1l1503:
 20512  0DD1  1A11               	btfsc	17,4	;volatile
 20513  0DD2  2DD4               	goto	u416_21
 20514  0DD3  2DD5               	goto	u416_20
 20515  0DD4                     u416_21:
 20516  0DD4  2DD1               	goto	i1l1503
 20517  0DD5                     u416_20:
 20518  0DD5                     i1l1507:	
 20519                           ;LCD/lcd.c: 40:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 20520                           
 20521  0DD5  1491               	bsf	17,1	;volatile
 20522  0DD6                     i1l1508:
 20523  0DD6  1891               	btfsc	17,1	;volatile
 20524  0DD7  2DD9               	goto	u417_21
 20525  0DD8  2DDA               	goto	u417_20
 20526  0DD9                     u417_21:
 20527  0DD9  2DD6               	goto	i1l1508
 20528  0DDA                     u417_20:
 20529  0DDA                     i1l5337:
 20530  0DDA  0C0F               	rrf	15,w	;volatile
 20531  0DDB  0C89               	rrf	9,f
 20532  0DDC  3901               	andlw	1
 20533  0DDD  00F2               	movwf	??_LCDrecv
 20534  0DDE  0811               	movf	17,w	;volatile
 20535  0DDF  391F               	andlw	31
 20536  0DE0  0472               	iorwf	??_LCDrecv,w
 20537  0DE1  1D03               	btfss	3,2
 20538  0DE2  2DE4               	goto	u418_21
 20539  0DE3  2DE5               	goto	u418_20
 20540  0DE4                     u418_21:
 20541  0DE4  2DDA               	goto	i1l5337
 20542  0DE5                     u418_20:
 20543  0DE5                     i1l5339:
 20544                           
 20545                           ;LCD/lcd.c: 41:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 20546  0DE5  304E               	movlw	78
 20547  0DE6  3193  23E7  318D   	fcall	i1_WriteI2C
 20548  0DE9                     i1l5341:
 20549  0DE9  0023               	movlb	3	; select bank3
 20550  0DEA  0C0F               	rrf	15,w	;volatile
 20551  0DEB  0C89               	rrf	9,f
 20552  0DEC  3901               	andlw	1
 20553  0DED  00F2               	movwf	??_LCDrecv
 20554  0DEE  0811               	movf	17,w	;volatile
 20555  0DEF  391F               	andlw	31
 20556  0DF0  0472               	iorwf	??_LCDrecv,w
 20557  0DF1  1D03               	btfss	3,2
 20558  0DF2  2DF4               	goto	u419_21
 20559  0DF3  2DF5               	goto	u419_20
 20560  0DF4                     u419_21:
 20561  0DF4  2DE9               	goto	i1l5341
 20562  0DF5                     u419_20:
 20563  0DF5                     i1l5343:
 20564                           
 20565                           ;LCD/lcd.c: 42:   WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1S
      +                          TATbits.R_W));
 20566  0DF5  0876               	movf	LCDrecv@mode,w
 20567  0DF6  38FA               	iorlw	250
 20568  0DF7  3193  23E7  318D   	fcall	i1_WriteI2C
 20569  0DFA                     i1l5345:
 20570  0DFA  0023               	movlb	3	; select bank3
 20571  0DFB  0C0F               	rrf	15,w	;volatile
 20572  0DFC  0C89               	rrf	9,f
 20573  0DFD  3901               	andlw	1
 20574  0DFE  00F2               	movwf	??_LCDrecv
 20575  0DFF  0811               	movf	17,w	;volatile
 20576  0E00  391F               	andlw	31
 20577  0E01  0472               	iorwf	??_LCDrecv,w
 20578  0E02  1D03               	btfss	3,2
 20579  0E03  2E05               	goto	u420_21
 20580  0E04  2E06               	goto	u420_20
 20581  0E05                     u420_21:
 20582  0E05  2DFA               	goto	i1l5345
 20583  0E06                     u420_20:
 20584  0E06                     i1l5347:
 20585                           
 20586                           ;LCD/lcd.c: 43:   WriteI2C(0xf0 | 0x08 | 0x04 | 0x02 | mode); while ((SSP1CON2 & 0x1F) |
      +                           (SSP1STATbits.R_W));
 20587  0E06  0876               	movf	LCDrecv@mode,w
 20588  0E07  38FE               	iorlw	254
 20589  0E08  3193  23E7  318D   	fcall	i1_WriteI2C
 20590  0E0B                     i1l5349:
 20591  0E0B  0023               	movlb	3	; select bank3
 20592  0E0C  0C0F               	rrf	15,w	;volatile
 20593  0E0D  0C89               	rrf	9,f
 20594  0E0E  3901               	andlw	1
 20595  0E0F  00F2               	movwf	??_LCDrecv
 20596  0E10  0811               	movf	17,w	;volatile
 20597  0E11  391F               	andlw	31
 20598  0E12  0472               	iorwf	??_LCDrecv,w
 20599  0E13  1D03               	btfss	3,2
 20600  0E14  2E16               	goto	u421_21
 20601  0E15  2E17               	goto	u421_20
 20602  0E16                     u421_21:
 20603  0E16  2E0B               	goto	i1l5349
 20604  0E17                     u421_20:
 20605  0E17                     i1l1523:
 20606                           
 20607                           ;LCD/lcd.c: 44:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 20608  0E17  0000               	nop
 20609  0E18                     i1l1524:	
 20610                           ;LCD/lcd.c: 45:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 20611                           
 20612  0E18  0023               	movlb	3	; select bank3
 20613  0E19  1491               	bsf	17,1	;volatile
 20614  0E1A                     i1l1525:
 20615  0E1A  1891               	btfsc	17,1	;volatile
 20616  0E1B  2E1D               	goto	u422_21
 20617  0E1C  2E1E               	goto	u422_20
 20618  0E1D                     u422_21:
 20619  0E1D  2E1A               	goto	i1l1525
 20620  0E1E                     u422_20:
 20621  0E1E                     i1l5351:
 20622  0E1E  0C0F               	rrf	15,w	;volatile
 20623  0E1F  0C89               	rrf	9,f
 20624  0E20  3901               	andlw	1
 20625  0E21  00F2               	movwf	??_LCDrecv
 20626  0E22  0811               	movf	17,w	;volatile
 20627  0E23  391F               	andlw	31
 20628  0E24  0472               	iorwf	??_LCDrecv,w
 20629  0E25  1D03               	btfss	3,2
 20630  0E26  2E28               	goto	u423_21
 20631  0E27  2E29               	goto	u423_20
 20632  0E28                     u423_21:
 20633  0E28  2E1E               	goto	i1l5351
 20634  0E29                     u423_20:
 20635  0E29                     i1l5353:
 20636                           
 20637                           ;LCD/lcd.c: 46:   WriteI2C(0x4e | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 20638  0E29  304F               	movlw	79
 20639  0E2A  3193  23E7  318D   	fcall	i1_WriteI2C
 20640  0E2D                     i1l5355:
 20641  0E2D  0023               	movlb	3	; select bank3
 20642  0E2E  0C0F               	rrf	15,w	;volatile
 20643  0E2F  0C89               	rrf	9,f
 20644  0E30  3901               	andlw	1
 20645  0E31  00F2               	movwf	??_LCDrecv
 20646  0E32  0811               	movf	17,w	;volatile
 20647  0E33  391F               	andlw	31
 20648  0E34  0472               	iorwf	??_LCDrecv,w
 20649  0E35  1D03               	btfss	3,2
 20650  0E36  2E38               	goto	u424_21
 20651  0E37  2E39               	goto	u424_20
 20652  0E38                     u424_21:
 20653  0E38  2E2D               	goto	i1l5355
 20654  0E39                     u424_20:
 20655  0E39                     i1l5357:
 20656                           
 20657                           ;LCD/lcd.c: 47:   lc = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 20658  0E39  3191  21F0  318D   	fcall	_ReadI2C
 20659  0E3C  00F2               	movwf	??_LCDrecv
 20660  0E3D  0872               	movf	??_LCDrecv,w
 20661  0E3E  00F5               	movwf	LCDrecv@lc
 20662  0E3F                     i1l5359:
 20663  0E3F  0023               	movlb	3	; select bank3
 20664  0E40  0C0F               	rrf	15,w	;volatile
 20665  0E41  0C89               	rrf	9,f
 20666  0E42  3901               	andlw	1
 20667  0E43  00F2               	movwf	??_LCDrecv
 20668  0E44  0811               	movf	17,w	;volatile
 20669  0E45  391F               	andlw	31
 20670  0E46  0472               	iorwf	??_LCDrecv,w
 20671  0E47  1D03               	btfss	3,2
 20672  0E48  2E4A               	goto	u425_21
 20673  0E49  2E4B               	goto	u425_20
 20674  0E4A                     u425_21:
 20675  0E4A  2E3F               	goto	i1l5359
 20676  0E4B                     u425_20:
 20677  0E4B                     i1l1538:	
 20678                           ;LCD/lcd.c: 48:   do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKE
      +                          N); } while (0);
 20679                           
 20680  0E4B  1691               	bsf	17,5	;volatile
 20681  0E4C  1611               	bsf	17,4	;volatile
 20682  0E4D                     i1l1539:
 20683  0E4D  1A11               	btfsc	17,4	;volatile
 20684  0E4E  2E50               	goto	u426_21
 20685  0E4F  2E51               	goto	u426_20
 20686  0E50                     u426_21:
 20687  0E50  2E4D               	goto	i1l1539
 20688  0E51                     u426_20:
 20689  0E51                     i1l1543:	
 20690                           ;LCD/lcd.c: 49:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 20691                           
 20692  0E51  1491               	bsf	17,1	;volatile
 20693  0E52                     i1l1544:
 20694  0E52  1891               	btfsc	17,1	;volatile
 20695  0E53  2E55               	goto	u427_21
 20696  0E54  2E56               	goto	u427_20
 20697  0E55                     u427_21:
 20698  0E55  2E52               	goto	i1l1544
 20699  0E56                     u427_20:
 20700  0E56                     i1l5361:
 20701  0E56  0C0F               	rrf	15,w	;volatile
 20702  0E57  0C89               	rrf	9,f
 20703  0E58  3901               	andlw	1
 20704  0E59  00F2               	movwf	??_LCDrecv
 20705  0E5A  0811               	movf	17,w	;volatile
 20706  0E5B  391F               	andlw	31
 20707  0E5C  0472               	iorwf	??_LCDrecv,w
 20708  0E5D  1D03               	btfss	3,2
 20709  0E5E  2E60               	goto	u428_21
 20710  0E5F  2E61               	goto	u428_20
 20711  0E60                     u428_21:
 20712  0E60  2E56               	goto	i1l5361
 20713  0E61                     u428_20:
 20714  0E61                     i1l5363:
 20715                           
 20716                           ;LCD/lcd.c: 50:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 20717  0E61  304E               	movlw	78
 20718  0E62  3193  23E7  318D   	fcall	i1_WriteI2C
 20719  0E65                     i1l5365:
 20720  0E65  0023               	movlb	3	; select bank3
 20721  0E66  0C0F               	rrf	15,w	;volatile
 20722  0E67  0C89               	rrf	9,f
 20723  0E68  3901               	andlw	1
 20724  0E69  00F2               	movwf	??_LCDrecv
 20725  0E6A  0811               	movf	17,w	;volatile
 20726  0E6B  391F               	andlw	31
 20727  0E6C  0472               	iorwf	??_LCDrecv,w
 20728  0E6D  1D03               	btfss	3,2
 20729  0E6E  2E70               	goto	u429_21
 20730  0E6F  2E71               	goto	u429_20
 20731  0E70                     u429_21:
 20732  0E70  2E65               	goto	i1l5365
 20733  0E71                     u429_20:
 20734  0E71                     i1l5367:
 20735                           
 20736                           ;LCD/lcd.c: 51:   WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1S
      +                          TATbits.R_W));
 20737  0E71  0876               	movf	LCDrecv@mode,w
 20738  0E72  38FA               	iorlw	250
 20739  0E73  3193  23E7  318D   	fcall	i1_WriteI2C
 20740  0E76                     i1l5369:
 20741  0E76  0023               	movlb	3	; select bank3
 20742  0E77  0C0F               	rrf	15,w	;volatile
 20743  0E78  0C89               	rrf	9,f
 20744  0E79  3901               	andlw	1
 20745  0E7A  00F2               	movwf	??_LCDrecv
 20746  0E7B  0811               	movf	17,w	;volatile
 20747  0E7C  391F               	andlw	31
 20748  0E7D  0472               	iorwf	??_LCDrecv,w
 20749  0E7E  1D03               	btfss	3,2
 20750  0E7F  2E81               	goto	u430_21
 20751  0E80  2E82               	goto	u430_20
 20752  0E81                     u430_21:
 20753  0E81  2E76               	goto	i1l5369
 20754  0E82                     u430_20:
 20755  0E82                     i1l1557:	
 20756                           ;LCD/lcd.c: 52:   do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 20757                           
 20758  0E82  1511               	bsf	17,2	;volatile
 20759  0E83                     i1l1558:
 20760  0E83  1911               	btfsc	17,2	;volatile
 20761  0E84  2E86               	goto	u431_21
 20762  0E85  2E87               	goto	u431_20
 20763  0E86                     u431_21:
 20764  0E86  2E83               	goto	i1l1558
 20765  0E87                     u431_20:
 20766  0E87                     i1l5371:
 20767                           
 20768                           ;LCD/lcd.c: 53:   return ((hc&0xf0) | ((lc>>4)&0x0f));
 20769  0E87  0875               	movf	LCDrecv@lc,w
 20770  0E88  00F2               	movwf	??_LCDrecv
 20771  0E89  3004               	movlw	4
 20772  0E8A                     u432_25:
 20773  0E8A  36F2               	lsrf	??_LCDrecv,f
 20774  0E8B  0B89               	decfsz	9,f
 20775  0E8C  2E8A               	goto	u432_25
 20776  0E8D  300F               	movlw	15
 20777  0E8E  0572               	andwf	??_LCDrecv,w
 20778  0E8F  00F3               	movwf	??_LCDrecv+1
 20779  0E90  0874               	movf	LCDrecv@hc,w
 20780  0E91  39F0               	andlw	240
 20781  0E92  0473               	iorwf	??_LCDrecv+1,w
 20782  0E93                     i1l1562:
 20783  0E93  0008               	return
 20784  0E94                     __end_of_LCDrecv:
 20785                           
 20786                           	psect	text66
 20787  13E7                     __ptext66:	
 20788 ;; *************** function i1_WriteI2C *****************
 20789 ;; Defined at:
 20790 ;;		line 59 in file "I2C/i2c.c"
 20791 ;; Parameters:    Size  Location     Type
 20792 ;;  data_out        1    wreg     unsigned char 
 20793 ;; Auto vars:     Size  Location     Type
 20794 ;;  data_out        1    1[COMMON] unsigned char 
 20795 ;; Return value:  Size  Location     Type
 20796 ;;                  1    wreg      char 
 20797 ;; Registers used:
 20798 ;;		wreg, status,2, status,0
 20799 ;; Tracked objects:
 20800 ;;		On entry : 0/0
 20801 ;;		On exit  : 0/0
 20802 ;;		Unchanged: 0/0
 20803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20805 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20806 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20807 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20808 ;;Total ram usage:        2 bytes
 20809 ;; Hardware stack levels used: 1
 20810 ;; This function calls:
 20811 ;;		Nothing
 20812 ;; This function is called by:
 20813 ;;		_readTC74
 20814 ;;		_LCDrecv
 20815 ;;		i1_LCDsend2x4
 20816 ;; This function uses a non-reentrant model
 20817 ;;
 20818                           
 20819                           
 20820                           ;psect for function i1_WriteI2C
 20821  13E7                     i1_WriteI2C:
 20822                           
 20823                           ;incstack = 0
 20824                           ; Regs used in i1_WriteI2C: [wreg+status,2+status,0]
 20825                           ;i1WriteI2C@data_out stored from wreg
 20826  13E7  00F1               	movwf	i1WriteI2C@data_out
 20827  13E8                     i1l5127:
 20828                           
 20829                           ;I2C/i2c.c: 59: signed char WriteI2C( unsigned char data_out );I2C/i2c.c: 60: {;I2C/i2c.
      +                          c: 61:   SSP1BUF = data_out;
 20830  13E8  0871               	movf	i1WriteI2C@data_out,w
 20831  13E9  0023               	movlb	3	; select bank3
 20832  13EA  008C               	movwf	12	;volatile
 20833  13EB                     i1l5129:
 20834                           
 20835                           ;I2C/i2c.c: 62:   if ( SSP1CON1bits.WCOL )
 20836  13EB  1F90               	btfss	16,7	;volatile
 20837  13EC  2BEE               	goto	u370_21
 20838  13ED  2BEF               	goto	u370_20
 20839  13EE                     u370_21:
 20840  13EE  2BF0               	goto	i1l5135
 20841  13EF                     u370_20:
 20842  13EF  2C31               	goto	i1l1409
 20843  13F0                     i1l5135:
 20844                           
 20845                           ;I2C/i2c.c: 65:   {;I2C/i2c.c: 66:  if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)!=0x0
      +                          B) )
 20846  13F0  300F               	movlw	15
 20847  13F1  0510               	andwf	16,w	;volatile
 20848  13F2  00F0               	movwf	??i1_WriteI2C
 20849  13F3  3008               	movlw	8
 20850  13F4  0670               	xorwf	??i1_WriteI2C,w
 20851  13F5  1903               	btfsc	3,2
 20852  13F6  2BF8               	goto	u371_21
 20853  13F7  2BF9               	goto	u371_20
 20854  13F8                     u371_21:
 20855  13F8  2C0F               	goto	i1l5147
 20856  13F9                     u371_20:
 20857  13F9                     i1l5137:
 20858  13F9  300F               	movlw	15
 20859  13FA  0510               	andwf	16,w	;volatile
 20860  13FB  00F0               	movwf	??i1_WriteI2C
 20861  13FC  300B               	movlw	11
 20862  13FD  0670               	xorwf	??i1_WriteI2C,w
 20863  13FE  1903               	btfsc	3,2
 20864  13FF  2C01               	goto	u372_21
 20865  1400  2C02               	goto	u372_20
 20866  1401                     u372_21:
 20867  1401  2C0F               	goto	i1l5147
 20868  1402                     u372_20:
 20869  1402                     i1l5139:
 20870                           
 20871                           ;I2C/i2c.c: 67:  {;I2C/i2c.c: 68:        SSP1CON1bits.CKP = 1;
 20872  1402  1610               	bsf	16,4	;volatile
 20873  1403                     i1l1412:	
 20874                           ;I2C/i2c.c: 69:        while ( !PIR3bits.SSP1IF );
 20875                           
 20876  1403  002E               	movlb	14	; select bank14
 20877  1404  1C0F               	btfss	15,0	;volatile
 20878  1405  2C07               	goto	u373_21
 20879  1406  2C08               	goto	u373_20
 20880  1407                     u373_21:
 20881  1407  2C03               	goto	i1l1412
 20882  1408                     u373_20:
 20883  1408                     i1l1414:
 20884                           
 20885                           ;I2C/i2c.c: 71:        if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 20886  1408  0023               	movlb	3	; select bank3
 20887  1409  190F               	btfsc	15,2	;volatile
 20888  140A  2C0C               	goto	u374_21
 20889  140B  2C0D               	goto	u374_20
 20890  140C                     u374_21:
 20891  140C  2C31               	goto	i1l1409
 20892  140D                     u374_20:
 20893  140D                     i1l5141:
 20894  140D  080F               	movf	15,w	;volatile
 20895  140E  2C31               	goto	i1l1409
 20896  140F                     i1l5147:
 20897  140F  300F               	movlw	15
 20898  1410  0510               	andwf	16,w	;volatile
 20899  1411  00F0               	movwf	??i1_WriteI2C
 20900  1412  3008               	movlw	8
 20901  1413  0670               	xorwf	??i1_WriteI2C,w
 20902  1414  1903               	btfsc	3,2
 20903  1415  2C17               	goto	u375_21
 20904  1416  2C18               	goto	u375_20
 20905  1417                     u375_21:
 20906  1417  2C21               	goto	i1l1421
 20907  1418                     u375_20:
 20908  1418                     i1l5149:
 20909  1418  300F               	movlw	15
 20910  1419  0510               	andwf	16,w	;volatile
 20911  141A  00F0               	movwf	??i1_WriteI2C
 20912  141B  300B               	movlw	11
 20913  141C  0670               	xorwf	??i1_WriteI2C,w
 20914  141D  1D03               	btfss	3,2
 20915  141E  2C20               	goto	u376_21
 20916  141F  2C21               	goto	u376_20
 20917  1420                     u376_21:
 20918  1420  2C31               	goto	i1l1409
 20919  1421                     u376_20:
 20920  1421                     i1l1421:
 20921  1421  180F               	btfsc	15,0	;volatile
 20922  1422  2C24               	goto	u377_21
 20923  1423  2C25               	goto	u377_20
 20924  1424                     u377_21:
 20925  1424  2C21               	goto	i1l1421
 20926  1425                     u377_20:
 20927  1425                     i1l5151:
 20928  1425  0C0F               	rrf	15,w	;volatile
 20929  1426  0C89               	rrf	9,f
 20930  1427  3901               	andlw	1
 20931  1428  00F0               	movwf	??i1_WriteI2C
 20932  1429  0811               	movf	17,w	;volatile
 20933  142A  391F               	andlw	31
 20934  142B  0470               	iorwf	??i1_WriteI2C,w
 20935  142C  1D03               	btfss	3,2
 20936  142D  2C2F               	goto	u378_21
 20937  142E  2C30               	goto	u378_20
 20938  142F                     u378_21:
 20939  142F  2C25               	goto	i1l5151
 20940  1430                     u378_20:
 20941  1430                     i1l1426:
 20942                           
 20943                           ;I2C/i2c.c: 84:      if ( SSP1CON2bits.ACKSTAT )
 20944  1430  0811               	movf	17,w	;volatile
 20945  1431                     i1l1409:
 20946  1431  0008               	return
 20947  1432                     __end_ofi1_WriteI2C:
 20948                           
 20949                           	psect	text67
 20950  11F0                     __ptext67:	
 20951 ;; *************** function _ReadI2C *****************
 20952 ;; Defined at:
 20953 ;;		line 44 in file "I2C/i2c.c"
 20954 ;; Parameters:    Size  Location     Type
 20955 ;;		None
 20956 ;; Auto vars:     Size  Location     Type
 20957 ;;		None
 20958 ;; Return value:  Size  Location     Type
 20959 ;;                  1    wreg      unsigned char 
 20960 ;; Registers used:
 20961 ;;		wreg, status,2, status,0
 20962 ;; Tracked objects:
 20963 ;;		On entry : 0/0
 20964 ;;		On exit  : 0/0
 20965 ;;		Unchanged: 0/0
 20966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20968 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20969 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20970 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20971 ;;Total ram usage:        1 bytes
 20972 ;; Hardware stack levels used: 1
 20973 ;; This function calls:
 20974 ;;		Nothing
 20975 ;; This function is called by:
 20976 ;;		_readTC74
 20977 ;;		_LCDrecv
 20978 ;; This function uses a non-reentrant model
 20979 ;;
 20980                           
 20981                           
 20982                           ;psect for function _ReadI2C
 20983  11F0                     _ReadI2C:
 20984  11F0                     i1l5157:	
 20985                           ;incstack = 0
 20986                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 20987                           
 20988                           
 20989                           ;I2C/i2c.c: 46: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 20990  11F0  300F               	movlw	15
 20991  11F1  0023               	movlb	3	; select bank3
 20992  11F2  0510               	andwf	16,w	;volatile
 20993  11F3  00F0               	movwf	??_ReadI2C
 20994  11F4  3008               	movlw	8
 20995  11F5  0670               	xorwf	??_ReadI2C,w
 20996  11F6  1903               	btfsc	3,2
 20997  11F7  29F9               	goto	u379_21
 20998  11F8  29FA               	goto	u379_20
 20999  11F9                     u379_21:
 21000  11F9  2A03               	goto	i1l1401
 21001  11FA                     u379_20:
 21002  11FA                     i1l5159:
 21003  11FA  300F               	movlw	15
 21004  11FB  0510               	andwf	16,w	;volatile
 21005  11FC  00F0               	movwf	??_ReadI2C
 21006  11FD  300B               	movlw	11
 21007  11FE  0670               	xorwf	??_ReadI2C,w
 21008  11FF  1D03               	btfss	3,2
 21009  1200  2A02               	goto	u380_21
 21010  1201  2A03               	goto	u380_20
 21011  1202                     u380_21:
 21012  1202  2A04               	goto	i1l1402
 21013  1203                     u380_20:
 21014  1203                     i1l1401:
 21015                           
 21016                           ;I2C/i2c.c: 47:   SSP1CON2bits.RCEN = 1;
 21017  1203  1591               	bsf	17,3	;volatile
 21018  1204                     i1l1402:
 21019  1204  1C0F               	btfss	15,0	;volatile
 21020  1205  2A07               	goto	u381_21
 21021  1206  2A08               	goto	u381_20
 21022  1207                     u381_21:
 21023  1207  2A04               	goto	i1l1402
 21024  1208                     u381_20:
 21025  1208                     i1l5161:
 21026                           
 21027                           ;I2C/i2c.c: 49:   return ( SSP1BUF );
 21028  1208  080C               	movf	12,w	;volatile
 21029  1209                     i1l1405:
 21030  1209  0008               	return
 21031  120A                     __end_of_ReadI2C:
 21032                           
 21033                           	psect	text68
 21034  11D6                     __ptext68:	
 21035 ;; *************** function _activateAlarm *****************
 21036 ;; Defined at:
 21037 ;;		line 32 in file "alarm.c"
 21038 ;; Parameters:    Size  Location     Type
 21039 ;;  alarm           1    wreg     unsigned char 
 21040 ;; Auto vars:     Size  Location     Type
 21041 ;;  alarm           1    4[COMMON] unsigned char 
 21042 ;; Return value:  Size  Location     Type
 21043 ;;                  1    wreg      void 
 21044 ;; Registers used:
 21045 ;;		wreg, status,2, status,0, pclath, cstack
 21046 ;; Tracked objects:
 21047 ;;		On entry : 0/0
 21048 ;;		On exit  : 0/0
 21049 ;;		Unchanged: 0/0
 21050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21052 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21054 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21055 ;;Total ram usage:        1 bytes
 21056 ;; Hardware stack levels used: 1
 21057 ;; Hardware stack levels required when called: 2
 21058 ;; This function calls:
 21059 ;;		_PWM6_LoadDutyValue
 21060 ;;		_PWMOutputEnable
 21061 ;;		_TMR2_StartTimer
 21062 ;; This function is called by:
 21063 ;;		_timerInterrupt
 21064 ;; This function uses a non-reentrant model
 21065 ;;
 21066                           
 21067                           
 21068                           ;psect for function _activateAlarm
 21069  11D6                     _activateAlarm:
 21070                           
 21071                           ;incstack = 0
 21072                           ; Regs used in _activateAlarm: [wreg+status,2+status,0+pclath+cstack]
 21073                           ;activateAlarm@alarm stored from wreg
 21074  11D6  00F4               	movwf	activateAlarm@alarm
 21075  11D7                     i1l5569:
 21076                           
 21077                           ;alarm.c: 33:     if (alarm == 46){
 21078  11D7  302E               	movlw	46
 21079  11D8  0674               	xorwf	activateAlarm@alarm,w
 21080  11D9  1D03               	btfss	3,2
 21081  11DA  29DC               	goto	u469_21
 21082  11DB  29DD               	goto	u469_20
 21083  11DC                     u469_21:
 21084  11DC  29E0               	goto	i1l1334
 21085  11DD                     u469_20:
 21086  11DD                     i1l1331:	
 21087                           ;alarm.c: 34:         do { LATAbits.LATA5 = 1; } while(0);
 21088                           
 21089  11DD  0020               	movlb	0	; select bank0
 21090  11DE  1696               	bsf	22,5	;volatile
 21091  11DF  29E2               	goto	i1l5571
 21092  11E0                     i1l1334:	
 21093                           ;alarm.c: 36:         do { LATAbits.LATA4 = 1; } while(0);
 21094                           
 21095  11E0  0020               	movlb	0	; select bank0
 21096  11E1  1616               	bsf	22,4	;volatile
 21097  11E2                     i1l5571:
 21098                           
 21099                           ;alarm.c: 38:     TMR2_StartTimer();
 21100  11E2  3190  2057  3191   	fcall	_TMR2_StartTimer
 21101  11E5                     i1l5573:
 21102                           
 21103                           ;alarm.c: 39:     PWMOutputEnable();
 21104  11E5  3191  2120  3191   	fcall	_PWMOutputEnable
 21105  11E8                     i1l5575:
 21106                           
 21107                           ;alarm.c: 41:     PWM6_LoadDutyValue(0x3);
 21108  11E8  3003               	movlw	3
 21109  11E9  00F0               	movwf	PWM6_LoadDutyValue@dutyValue
 21110  11EA  3000               	movlw	0
 21111  11EB  00F1               	movwf	PWM6_LoadDutyValue@dutyValue+1
 21112  11EC  3191  2178  3191   	fcall	_PWM6_LoadDutyValue
 21113  11EF                     i1l1336:
 21114  11EF  0008               	return
 21115  11F0                     __end_of_activateAlarm:
 21116                           
 21117                           	psect	text69
 21118  1057                     __ptext69:	
 21119 ;; *************** function _TMR2_StartTimer *****************
 21120 ;; Defined at:
 21121 ;;		line 106 in file "mcc_generated_files/tmr2.c"
 21122 ;; Parameters:    Size  Location     Type
 21123 ;;		None
 21124 ;; Auto vars:     Size  Location     Type
 21125 ;;		None
 21126 ;; Return value:  Size  Location     Type
 21127 ;;                  1    wreg      void 
 21128 ;; Registers used:
 21129 ;;		status,2, status,0, pclath, cstack
 21130 ;; Tracked objects:
 21131 ;;		On entry : 0/0
 21132 ;;		On exit  : 0/0
 21133 ;;		Unchanged: 0/0
 21134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21139 ;;Total ram usage:        0 bytes
 21140 ;; Hardware stack levels used: 1
 21141 ;; Hardware stack levels required when called: 1
 21142 ;; This function calls:
 21143 ;;		_TMR2_Start
 21144 ;; This function is called by:
 21145 ;;		_activateAlarm
 21146 ;; This function uses a non-reentrant model
 21147 ;;
 21148                           
 21149                           
 21150                           ;psect for function _TMR2_StartTimer
 21151  1057                     _TMR2_StartTimer:
 21152  1057                     i1l5405:	
 21153                           ;incstack = 0
 21154                           ; Regs used in _TMR2_StartTimer: [status,2+status,0+pclath+cstack]
 21155                           
 21156                           
 21157                           ;mcc_generated_files/tmr2.c: 108:     TMR2_Start();
 21158  1057  3190  204E  3190   	fcall	_TMR2_Start
 21159  105A                     i1l910:
 21160  105A  0008               	return
 21161  105B                     __end_of_TMR2_StartTimer:
 21162                           
 21163                           	psect	text70
 21164  104E                     __ptext70:	
 21165 ;; *************** function _TMR2_Start *****************
 21166 ;; Defined at:
 21167 ;;		line 100 in file "mcc_generated_files/tmr2.c"
 21168 ;; Parameters:    Size  Location     Type
 21169 ;;		None
 21170 ;; Auto vars:     Size  Location     Type
 21171 ;;		None
 21172 ;; Return value:  Size  Location     Type
 21173 ;;                  1    wreg      void 
 21174 ;; Registers used:
 21175 ;;		None
 21176 ;; Tracked objects:
 21177 ;;		On entry : 0/0
 21178 ;;		On exit  : 0/0
 21179 ;;		Unchanged: 0/0
 21180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21182 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21184 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21185 ;;Total ram usage:        0 bytes
 21186 ;; Hardware stack levels used: 1
 21187 ;; This function calls:
 21188 ;;		Nothing
 21189 ;; This function is called by:
 21190 ;;		_TMR2_StartTimer
 21191 ;; This function uses a non-reentrant model
 21192 ;;
 21193                           
 21194                           
 21195                           ;psect for function _TMR2_Start
 21196  104E                     _TMR2_Start:
 21197  104E                     i1l5307:	
 21198                           ;incstack = 0
 21199                           ; Regs used in _TMR2_Start: []
 21200                           
 21201                           
 21202                           ;mcc_generated_files/tmr2.c: 103:     T2CONbits.TMR2ON = 1;
 21203  104E  0025               	movlb	5	; select bank5
 21204  104F  178E               	bsf	14,7	;volatile
 21205  1050                     i1l907:
 21206  1050  0008               	return
 21207  1051                     __end_of_TMR2_Start:
 21208                           
 21209                           	psect	text71
 21210  1120                     __ptext71:	
 21211 ;; *************** function _PWMOutputEnable *****************
 21212 ;; Defined at:
 21213 ;;		line 8 in file "alarm.c"
 21214 ;; Parameters:    Size  Location     Type
 21215 ;;		None
 21216 ;; Auto vars:     Size  Location     Type
 21217 ;;		None
 21218 ;; Return value:  Size  Location     Type
 21219 ;;                  1    wreg      void 
 21220 ;; Registers used:
 21221 ;;		wreg
 21222 ;; Tracked objects:
 21223 ;;		On entry : 0/0
 21224 ;;		On exit  : 0/0
 21225 ;;		Unchanged: 0/0
 21226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21231 ;;Total ram usage:        0 bytes
 21232 ;; Hardware stack levels used: 1
 21233 ;; This function calls:
 21234 ;;		Nothing
 21235 ;; This function is called by:
 21236 ;;		_activateAlarm
 21237 ;; This function uses a non-reentrant model
 21238 ;;
 21239                           
 21240                           
 21241                           ;psect for function _PWMOutputEnable
 21242  1120                     _PWMOutputEnable:
 21243  1120                     i1l5437:	
 21244                           ;incstack = 0
 21245                           ; Regs used in _PWMOutputEnable: [wreg]
 21246                           
 21247                           
 21248                           ;alarm.c: 9:     PPSLOCK = 0x55;
 21249  1120  3055               	movlw	85
 21250  1121  003D               	movlb	29	; select bank29
 21251  1122  008F               	movwf	15	;volsfr
 21252                           
 21253                           ;alarm.c: 10:     PPSLOCK = 0xAA;
 21254  1123  30AA               	movlw	170
 21255  1124  008F               	movwf	15	;volsfr
 21256  1125                     i1l5439:
 21257                           
 21258                           ;alarm.c: 11:     PPSLOCKbits.PPSLOCKED = 0x00;
 21259  1125  100F               	bcf	15,0	;volsfr
 21260                           
 21261                           ;alarm.c: 14:     RA6PPS = 0x0D;
 21262  1126  300D               	movlw	13
 21263  1127  003E               	movlb	30	; select bank30
 21264  1128  0096               	movwf	22	;volatile
 21265                           
 21266                           ;alarm.c: 16:     PPSLOCK = 0x55;
 21267  1129  3055               	movlw	85
 21268  112A  003D               	movlb	29	; select bank29
 21269  112B  008F               	movwf	15	;volsfr
 21270                           
 21271                           ;alarm.c: 17:     PPSLOCK = 0xAA;
 21272  112C  30AA               	movlw	170
 21273  112D  008F               	movwf	15	;volsfr
 21274  112E                     i1l5441:
 21275                           
 21276                           ;alarm.c: 18:     PPSLOCKbits.PPSLOCKED = 0x01;
 21277  112E  140F               	bsf	15,0	;volsfr
 21278  112F                     i1l1324:
 21279  112F  0008               	return
 21280  1130                     __end_of_PWMOutputEnable:
 21281                           
 21282                           	psect	text72
 21283  1178                     __ptext72:	
 21284 ;; *************** function _PWM6_LoadDutyValue *****************
 21285 ;; Defined at:
 21286 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 21287 ;; Parameters:    Size  Location     Type
 21288 ;;  dutyValue       2    0[COMMON] unsigned short 
 21289 ;; Auto vars:     Size  Location     Type
 21290 ;;		None
 21291 ;; Return value:  Size  Location     Type
 21292 ;;                  1    wreg      void 
 21293 ;; Registers used:
 21294 ;;		wreg, status,2, status,0
 21295 ;; Tracked objects:
 21296 ;;		On entry : 0/0
 21297 ;;		On exit  : 0/0
 21298 ;;		Unchanged: 0/0
 21299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21300 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21302 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21303 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21304 ;;Total ram usage:        4 bytes
 21305 ;; Hardware stack levels used: 1
 21306 ;; This function calls:
 21307 ;;		Nothing
 21308 ;; This function is called by:
 21309 ;;		_timerInterrupt
 21310 ;;		_activateAlarm
 21311 ;; This function uses a non-reentrant model
 21312 ;;
 21313                           
 21314                           
 21315                           ;psect for function _PWM6_LoadDutyValue
 21316  1178                     _PWM6_LoadDutyValue:
 21317  1178                     i1l5403:	
 21318                           ;incstack = 0
 21319                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 21320                           
 21321                           
 21322                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 21323  1178  0871               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 21324  1179  00F3               	movwf	??_PWM6_LoadDutyValue+1
 21325  117A  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
 21326  117B  00F2               	movwf	??_PWM6_LoadDutyValue
 21327  117C  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 21328  117D  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 21329  117E  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 21330  117F  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 21331  1180  0872               	movf	??_PWM6_LoadDutyValue,w
 21332  1181  0027               	movlb	7	; select bank7
 21333  1182  008D               	movwf	13	;volatile
 21334                           
 21335                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 21336  1183  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
 21337  1184  3903               	andlw	3
 21338  1185  00F2               	movwf	??_PWM6_LoadDutyValue
 21339  1186  3005               	movlw	5
 21340  1187                     u434_25:
 21341  1187  35F2               	lslf	??_PWM6_LoadDutyValue,f
 21342  1188  3EFF               	addlw	-1
 21343  1189  1D03               	skipz
 21344  118A  2987               	goto	u434_25
 21345  118B  3572               	lslf	??_PWM6_LoadDutyValue,w
 21346  118C  008C               	movwf	12	;volatile
 21347  118D                     i1l467:
 21348  118D  0008               	return
 21349  118E                     __end_of_PWM6_LoadDutyValue:
 21350                           
 21351                           	psect	text73
 21352  1152                     __ptext73:	
 21353 ;; *************** function _ADCC_GetSingleConversion *****************
 21354 ;; Defined at:
 21355 ;;		line 132 in file "mcc_generated_files/adcc.c"
 21356 ;; Parameters:    Size  Location     Type
 21357 ;;  channel         1    wreg     enum E12206
 21358 ;; Auto vars:     Size  Location     Type
 21359 ;;  channel         1    2[COMMON] enum E12206
 21360 ;; Return value:  Size  Location     Type
 21361 ;;                  2    0[COMMON] unsigned short 
 21362 ;; Registers used:
 21363 ;;		wreg
 21364 ;; Tracked objects:
 21365 ;;		On entry : 0/0
 21366 ;;		On exit  : 0/0
 21367 ;;		Unchanged: 0/0
 21368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 21369 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21370 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21372 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 21373 ;;Total ram usage:        3 bytes
 21374 ;; Hardware stack levels used: 1
 21375 ;; This function calls:
 21376 ;;		Nothing
 21377 ;; This function is called by:
 21378 ;;		_timerInterrupt
 21379 ;; This function uses a non-reentrant model
 21380 ;;
 21381                           
 21382                           
 21383                           ;psect for function _ADCC_GetSingleConversion
 21384  1152                     _ADCC_GetSingleConversion:
 21385                           
 21386                           ;incstack = 0
 21387                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 21388                           ;ADCC_GetSingleConversion@channel stored from wreg
 21389  1152  00F2               	movwf	ADCC_GetSingleConversion@channel
 21390  1153                     i1l5467:
 21391                           
 21392                           ;mcc_generated_files/adcc.c: 132: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 133: {;mcc_generated_files/adcc.c: 135:     ADPCH = 
      +                          channel;
 21393  1153  0872               	movf	ADCC_GetSingleConversion@channel,w
 21394  1154  0021               	movlb	1	; select bank1
 21395  1155  009E               	movwf	30	;volatile
 21396  1156                     i1l5469:
 21397                           
 21398                           ;mcc_generated_files/adcc.c: 138:     ADCON0bits.ADON = 1;
 21399  1156  1793               	bsf	19,7	;volatile
 21400  1157                     i1l5471:
 21401                           
 21402                           ;mcc_generated_files/adcc.c: 141:     ADCON0bits.ADCONT = 0;
 21403  1157  1313               	bcf	19,6	;volatile
 21404  1158                     i1l5473:
 21405                           
 21406                           ;mcc_generated_files/adcc.c: 144:     ADCON0bits.ADGO = 1;
 21407  1158  1413               	bsf	19,0	;volatile
 21408  1159                     i1l5475:
 21409                           
 21410                           ;mcc_generated_files/adcc.c: 147:     __nop();
 21411  1159  0000               	nop
 21412  115A                     i1l290:	
 21413                           ;mcc_generated_files/adcc.c: 151:     {;mcc_generated_files/adcc.c: 152:     }
 21414                           
 21415                           
 21416                           ;mcc_generated_files/adcc.c: 150:     while (ADCON0bits.ADGO)
 21417  115A  0021               	movlb	1	; select bank1
 21418  115B  1813               	btfsc	19,0	;volatile
 21419  115C  295E               	goto	u438_21
 21420  115D  295F               	goto	u438_20
 21421  115E                     u438_21:
 21422  115E  295A               	goto	i1l290
 21423  115F                     u438_20:
 21424  115F                     i1l5477:
 21425                           
 21426                           ;mcc_generated_files/adcc.c: 156:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 21427  115F  080D               	movf	13,w	;volatile
 21428  1160  00F1               	movwf	?_ADCC_GetSingleConversion+1
 21429  1161  080C               	movf	12,w	;volatile
 21430  1162  00F0               	movwf	?_ADCC_GetSingleConversion
 21431  1163                     i1l293:
 21432  1163  0008               	return
 21433  1164                     __end_of_ADCC_GetSingleConversion:
 21434  007E                     btemp	set	126	;btemp
 21435  007E                     int$flags	set	126
 21436  007E                     wtemp0	set	126
 21437                           
 21438                           	psect	config
 21439                           
 21440                           ;Config register CONFIG1 @ 0x8007
 21441                           ;	External Oscillator mode selection bits
 21442                           ;	FEXTOSC = OFF, Oscillator not enabled
 21443                           ;	Power-up default value for COSC bits
 21444                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 21445                           ;	Clock Out Enable bit
 21446                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 21447                           ;	Clock Switch Enable bit
 21448                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 21449                           ;	Fail-Safe Clock Monitor Enable bit
 21450                           ;	FCMEN = ON, FSCM timer enabled
 21451  8007                     	org	32775
 21452  8007  3FEC               	dw	16364
 21453                           
 21454                           ;Config register CONFIG2 @ 0x8008
 21455                           ;	Master Clear Enable bit
 21456                           ;	MCLRE = ON, MCLR pin is Master Clear function
 21457                           ;	Power-up Timer Enable bit
 21458                           ;	PWRTE = OFF, PWRT disabled
 21459                           ;	Low-Power BOR enable bit
 21460                           ;	LPBOREN = OFF, ULPBOR disabled
 21461                           ;	Brown-out reset enable bits
 21462                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 21463                           ;	Brown-out Reset Voltage Selection
 21464                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 21465                           ;	Zero-cross detect disable
 21466                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 21467                           ;	Peripheral Pin Select one-way control
 21468                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 21469                           ;	Stack Overflow/Underflow Reset Enable bit
 21470                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 21471                           ;	Background Debugger
 21472                           ;	DEBUG = OFF, Background Debugger disabled
 21473  8008                     	org	32776
 21474  8008  3FFF               	dw	16383
 21475                           
 21476                           ;Config register CONFIG3 @ 0x8009
 21477                           ;	WDT Period Select bits
 21478                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 21479                           ;	WDT operating mode
 21480                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 21481                           ;	WDT Window Select bits
 21482                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 21483                           ;	WDT input clock selector
 21484                           ;	WDTCCS = SC, Software Control
 21485  8009                     	org	32777
 21486  8009  3F9F               	dw	16287
 21487                           
 21488                           ;Config register CONFIG4 @ 0x800A
 21489                           ;	UserNVM self-write protection bits
 21490                           ;	WRT = OFF, Write protection off
 21491                           ;	Scanner Enable bit
 21492                           ;	SCANE = available, Scanner module is available for use
 21493                           ;	Low Voltage Programming Enable bit
 21494                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 21495  800A                     	org	32778
 21496  800A  3FFF               	dw	16383
 21497                           
 21498                           ;Config register CONFIG5 @ 0x800B
 21499                           ;	UserNVM Program memory code protection bit
 21500                           ;	CP = OFF, Program Memory code protection disabled
 21501                           ;	DataNVM code protection bit
 21502                           ;	CPD = OFF, Data EEPROM code protection disabled
 21503  800B                     	org	32779
 21504  800B  3FFF               	dw	16383

Data Sizes:
    Strings     50
    Constant    32
    Data        0
    BSS         94
    Persistent  56
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      80
    BANK1            80     78      80
    BANK2            80     28      80
    BANK3            80      0      62
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_DO_TX$3793$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S940$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 33
		 -> printLCD@buf(BANK1[33]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_2(CODE[22]), STR_1(CODE[28]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_2(CODE[22]), STR_1(CODE[28]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 28
		 -> STR_2(CODE[22]), STR_1(CODE[28]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    ctoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK3[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_2(CODE[22]), STR_1(CODE[28]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 33
		 -> printLCD@buf(BANK1[33]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S3207_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 33
		 -> printLCD@buf(BANK1[33]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 33
		 -> printLCD@buf(BANK1[33]), 

    LCDstr@p	PTR unsigned char  size(1) Largest target is 33
		 -> printLCD@buf(BANK1[33]), 

    parseEPROMInitialization@checksum	PTR unsigned char  size(1) Largest target is 1
		 -> checksum(BANK2[1]), 

    parseEPROMInitialization@CLKM	PTR unsigned char  size(1) Largest target is 1
		 -> CLKM(BANK2[1]), 

    parseEPROMInitialization@CLKH	PTR unsigned char  size(1) Largest target is 1
		 -> CLKH(BANK2[1]), 

    parseEPROMInitialization@ALAF	PTR unsigned char  size(1) Largest target is 1
		 -> ALAF(BANK2[1]), 

    parseEPROMInitialization@ALAL	PTR unsigned char  size(1) Largest target is 1
		 -> ALAL(BANK2[1]), 

    parseEPROMInitialization@ALAT	PTR unsigned char  size(1) Largest target is 1
		 -> ALAT(BANK2[1]), 

    parseEPROMInitialization@TALA	PTR unsigned char  size(1) Largest target is 1
		 -> TALA(BANK2[1]), 

    parseEPROMInitialization@PMON	PTR unsigned char  size(1) Largest target is 1
		 -> PMON(BANK2[1]), 

    parseEPROMInitialization@RI	PTR unsigned char  size(1) Largest target is 1
		 -> RI(BANK2[1]), 

    parseEPROMInitialization@WI	PTR unsigned char  size(1) Largest target is 1
		 -> WI(BANK2[1]), 

    parseEPROMInitialization@NR	PTR unsigned char  size(1) Largest target is 1
		 -> NR(BANK2[1]), 

    parseEPROMInitialization@NREG	PTR unsigned char  size(1) Largest target is 1
		 -> NREG(BANK2[1]), 

    parseEPROMInitialization@magic_word	PTR unsigned char  size(1) Largest target is 1
		 -> magic_word(BANK2[1]), 

    S940$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S940$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S940$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    i2c1_fsmStateTable	const PTR FTN()enum E12595[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerInterrupt(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerInterrupt(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(1) Largest target is 0

    S94$data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _writeRingBuffer->i1_DATAEE_WriteByte
    _readTC74->i1_WriteI2C
    _printLCD->_sprintf
    _vfpfcnvrt->_ctoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _ctoa->_fputc
    _atoi->___wmul
    _atoi->_isdigit
    _LCDstr->_LCDchar
    _LCDchar->i1_LCDsend2x4
    _LCDcmd->i1_LCDsend2x4
    i1_LCDsend2x4->i1_WriteI2C
    _LCDbusy->_LCDrecv
    _LCDrecv->i1_WriteI2C
    _activateAlarm->_PWM6_LoadDutyValue

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _TMR1_CallBack->_timerInterrupt
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _dtoa->___aomod
    _pad->_fputs
    _abs->___aomod

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    _TMR1_CallBack->_timerInterrupt
    _timerInterrupt->_printLCD
    _printLCD->_sprintf

Critical Paths under _main in BANK2

    _main->_parseEPROMInitialization
    _main->_storeEPROMBuild
    _storeEPROMBuild->_operADDR
    _parseEPROMInitialization->_DATAEE_ReadByte
    _initializeREG->_DATAEE_WriteByte
    _initializeEPROM->_DATAEE_WriteByte
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _LCDinit->_LCDsend2x4
    _LCDsend2x4->_WriteI2C
    _LCDsend->_WriteI2C

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0   17728
                                             16 BANK2     12    12      0
                            _LCDinit
                            _OpenI2C
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                    _deactivateAlarm
                    _initializeEPROM
                      _initializeREG
           _parseEPROMInitialization
                    _storeEPROMBuild
 ---------------------------------------------------------------------------------
 (1) _storeEPROMBuild                                      9     4      5    5005
                                              7 BANK2      9     4      5
                   _DATAEE_WriteByte
                           _operADDR
 ---------------------------------------------------------------------------------
 (2) _operADDR                                             7     5      2      49
                                              0 BANK2      7     5      2
 ---------------------------------------------------------------------------------
 (1) _parseEPROMInitialization                            14     2     12    2929
                                              2 BANK2     14     2     12
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2    1412
                                              0 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initializeREG                                        1     1      0    4333
                                              4 BANK2      1     1      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (1) _initializeEPROM                                      1     1      0    4333
                                              4 BANK2      1     1      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3    4333
                                              0 BANK2      4     1      3
 ---------------------------------------------------------------------------------
 (1) _deactivateAlarm                                      0     0      0       0
                      _deactivatePWM
 ---------------------------------------------------------------------------------
 (2) _deactivatePWM                                        0     0      0       0
                   _PWMOutputDisable
                     _TMR2_StopTimer
 ---------------------------------------------------------------------------------
 (3) _TMR2_StopTimer                                       0     0      0       0
                          _TMR2_Stop
 ---------------------------------------------------------------------------------
 (4) _TMR2_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWMOutputDisable                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     174
                    _ADCC_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              0 BANK2      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OpenI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0     780
                                              8 BANK2      1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (2) _LCDsend2x4                                           6     5      1     736
                                              2 BANK2      6     5      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      44
                                              2 BANK2      2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (3) _WriteI2C                                             2     2      0      22
                                              0 BANK2      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0   15500
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR1_ISR                                             0     0      0   15500
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) _TMR1_CallBack                                        0     0      0   15260
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                     _timerInterrupt *
 ---------------------------------------------------------------------------------
 (8) _timerInterrupt                                       6     6      0   15260
                                             76 BANK0      2     2      0
                                             74 BANK1      4     4      0
           _ADCC_GetSingleConversion
                 _PWM6_LoadDutyValue
                      _activateAlarm
                           _printLCD
                           _readTC74
                    _writeRingBuffer
                 i1_DATAEE_WriteByte
                  i1_deactivateAlarm
                    i1_deactivatePWM
 ---------------------------------------------------------------------------------
 (9) i1_deactivateAlarm                                    0     0      0       0
                    i1_deactivatePWM
 ---------------------------------------------------------------------------------
 (9) i1_deactivatePWM                                      0     0      0       0
                 i1_PWMOutputDisable
                   i1_TMR2_StopTimer
 ---------------------------------------------------------------------------------
 (10) i1_TMR2_StopTimer                                    0     0      0       0
                        i1_TMR2_Stop
 ---------------------------------------------------------------------------------
 (11) i1_TMR2_Stop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (10) i1_PWMOutputDisable                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _writeRingBuffer                                      3     2      1     721
                                              4 COMMON     3     2      1
                 i1_DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (9) i1_DATAEE_WriteByte                                   4     1      3     557
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (9) _readTC74                                             2     2      0      68
                                              2 COMMON     2     2      0
                            _ReadI2C
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (9) _printLCD                                            49    49      0   13078
                                             25 BANK1     49    49      0
                            _LCDbusy
                             _LCDcmd
                             _LCDstr
                            _sprintf
 ---------------------------------------------------------------------------------
 (10) _sprintf                                            28    10     18   11884
                                             13 COMMON     1     1      0
                                              0 BANK1     25     7     18
                           _vfprintf
 ---------------------------------------------------------------------------------
 (11) _vfprintf                                            8     5      3   11463
                                             68 BANK0      8     5      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (12) _vfpfcnvrt                                          43    41      2   11130
                                             46 BANK0     22    20      2
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (13) _dtoa                                               30    22      8    5055
                                             16 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (14) _pad                                                 9     6      3    3449
                                             12 COMMON     1     1      0
                                              4 BANK0      8     5      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (15) _strlen                                              5     3      2     123
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (15) _fputs                                               8     7      1    1605
                                              8 COMMON     4     3      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (14) _abs                                                 4     2      2     142
                                              3 COMMON     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (14) ___aomod                                            19     3     16     448
                                              0 COMMON     3     3      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (14) ___aodiv                                            27    11     16     452
                                              0 COMMON    11    11      0
                                              0 BANK0     16     0     16
 ---------------------------------------------------------------------------------
 (13) _ctoa                                               10     8      2    1602
                                              8 COMMON     5     3      2
                                              0 BANK0      5     5      0
                              _fputc
 ---------------------------------------------------------------------------------
 (13) _fputc                                               8     5      3    1290
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (14) _putch                                               1     1      0       0
 ---------------------------------------------------------------------------------
 (13) _atoi                                               15    13      2    1985
                                              6 COMMON     6     4      2
                                              0 BANK0      9     9      0
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (14) _isspace                                             5     3      2     207
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (13) _isdigit                                             6     4      2     237
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (14) ___wmul                                              6     2      4    1144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (10) _LCDstr                                              3     3      0     517
                                              9 COMMON     3     3      0
                            _LCDchar
 ---------------------------------------------------------------------------------
 (11) _LCDchar                                             1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (10) _LCDcmd                                              1     1      0     406
                                              8 COMMON     1     1      0
                       i1_LCDsend2x4
 ---------------------------------------------------------------------------------
 (12) i1_LCDsend2x4                                        6     5      1     384
                                              2 COMMON     6     5      1
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (10) _LCDbusy                                             2     0      2     178
                                              7 COMMON     2     0      2
                            _LCDrecv
 ---------------------------------------------------------------------------------
 (11) _LCDrecv                                             5     5      0     178
                                              2 COMMON     5     5      0
                            _ReadI2C
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (10) i1_WriteI2C                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (10) _ReadI2C                                             1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _activateAlarm                                        1     1      0     294
                                              4 COMMON     1     1      0
                 _PWM6_LoadDutyValue
                    _PWMOutputEnable
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (10) _TMR2_StartTimer                                     0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (11) _TMR2_Start                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _PWMOutputEnable                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _PWM6_LoadDutyValue                                  4     2      2     272
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (9) _ADCC_GetSingleConversion                             3     1      2      22
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (8) _TMR1_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
       _WriteI2C
   _OpenI2C
   _SYSTEM_Initialize
     _ADCC_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
   _TMR1_SetInterruptHandler
   _deactivateAlarm
     _deactivatePWM
       _PWMOutputDisable
       _TMR2_StopTimer
         _TMR2_Stop
   _initializeEPROM
     _DATAEE_WriteByte
   _initializeREG
     _DATAEE_WriteByte
   _parseEPROMInitialization
     _DATAEE_ReadByte
   _storeEPROMBuild
     _DATAEE_WriteByte
     _operADDR

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _timerInterrupt *
         _ADCC_GetSingleConversion
         _PWM6_LoadDutyValue
         _activateAlarm
           _PWM6_LoadDutyValue
           _PWMOutputEnable
           _TMR2_StartTimer
             _TMR2_Start
         _printLCD
           _LCDbusy
             _LCDrecv
               _ReadI2C
               i1_WriteI2C
           _LCDcmd
             i1_LCDsend2x4
               i1_WriteI2C
           _LCDstr
             _LCDchar
               i1_LCDsend2x4
           _sprintf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   ___wmul
                   _isdigit
                   _isspace
                 _ctoa
                   _fputc
                     _putch
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                     _fputs
                       _fputc
                     _strlen
                 _fputc
                 _isdigit
         _readTC74
           _ReadI2C
           i1_WriteI2C
         _writeRingBuffer
           i1_DATAEE_WriteByte
         i1_DATAEE_WriteByte
         i1_deactivateAlarm
           i1_deactivatePWM
             i1_PWMOutputDisable
             i1_TMR2_StopTimer
               i1_TMR2_Stop
         i1_deactivatePWM
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     4E      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50     1C      50       9      100.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      3E      11       77.5%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     13C      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     13C      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Jan 26 11:32:52 2022

                             _pwm_control 0168                                         _L 0165  
                                       _M 0164                                         _T 0166  
       __size_of_parseEPROMInitialization 00C6                                         _m 01DD  
                              i1_WriteI2C 13E7                 ?_parseEPROMInitialization 013F  
                   __end_of_deactivatePWM 1087                                        _RI 0138  
                                      _NR 013A                                        _WI 0139  
                     ___wmul@multiplicand 0072               __size_of_PWM6_LoadDutyValue 0016  
                                     l200 13E6                                       l400 11D5  
                                     l403 10AF                                       l500 07FF  
                                     l406 109D                                       l450 12BF  
                                     l533 1064                                       l453 111F  
                                     l278 11A4                                       l447 12B4  
                                     l464 10D6                                       l641 10A6  
                                     l449 12B8                                       l913 1056  
                                     l916 0804                                       l898 10F2  
                                     _PR2 028D                           _timer1ReloadVal 0161  
                                     _abs 120A                                       _pad 1523  
                 __size_of_PMD_Initialize 0008                           _TMR2_Initialize 10E5  
                                     wreg 0009                      _I2C1_DO_RX_NACK_STOP 0000  
                 __end_of_deactivateAlarm 108E                           _last_luminosity 016E  
                             ?_LCDsend2x4 013F                           __end_of_LCDchar 1096  
                                    ?_abs 0073                                      l1412 0826  
                                    l1172 1339                                      l1421 0848  
                                    l1341 1089                                      l1414 082B  
                                    l1327 1110                                      l1343 108D  
                                    l1360 13A1                                      l1409 085E  
                                    l1249 0313                                      l1426 085C  
                                    l1602 0B60                                      l1346 1086  
                                    l1354 136E                                      l1339 1087  
                                    l1363 175D                                      l1460 151C  
                                    l1356 1373                                      l1461 151E  
                                    l1605 16CF                                      l1373 0A89  
                                    l1357 1378                                      l1293 02BF  
                                    l1446 14E1                                      l1358 137D  
                                    l1366 14CF                                      l1278 01DE  
                                    l1447 14E3                                      l1359 1382  
                                    l1465 1522                                      l1396 10C9  
                                    l1584 0AFE                                      l1568 0AAC  
                                    l1593 0B3F                                      l6001 0ADA  
                                    l1569 0AAE                                      l6011 0B15  
                                    l6003 0AE9                                      l1597 0B56  
                                    l6021 0B47                                      l6013 0B1B  
                                    l6005 0AEF                                      l1598 0B58  
                                    l6023 0B5C                                      l6015 0B2A  
                                    l6007 0AFF                                      l6017 0B30  
                                    l6009 0B06                                      l6121 10BD  
                                    l6019 0B40                                      l6131 10C8  
                                    l6123 10C2                                      l6141 1666  
                                    l6133 164D                                      l6125 10C3  
                                    l6117 130F                           __end_of_LCDbusy 1141  
                                    ?_pad 0024                                      l6151 168E  
                                    l6143 1676                                      l6135 1656  
                                    l6127 10C5                                      l6071 11C0  
                                    l6119 108A                                      l5601 0824  
                                    l6161 16B4                                      l6153 1692  
                                    l6145 167A                                      l6137 165A  
                         __end_of_LCDinit 16D0                                      l6129 10C6  
                                    l6081 11CF                                      l6073 11C3  
                                    l5611 083D                                      l5603 0830  
                                    l6163 16BA                                      l6155 169E  
                                    l6147 1682                                      l6139 1662  
                                    l6083 11D2                                      l6075 11C6  
                                    l6171 148C                                      l5613 084D  
                                    l6165 16C0                                      l6157 16A2  
                                    l6149 1686                                      l6077 11C9  
                                    l6069 11BD                                      l6181 09C6  
                                    l6173 1497                                      l6159 16AE  
                                    l6079 11CC                                      l6167 16D0  
                                    l6175 14A5                                      l5609 0832  
                                    l5801 13B0                                      l5481 1054  
                                    l6177 14B3                                      l6169 1483  
                                    l5811 13BB                                      l5803 13B2  
                                    l6179 14C1                                      l5821 13CF  
                                    l5813 13C7                                      l5805 13B5  
                                    l5901 12A4                                      l6701 0078  
                                    l5591 080A                                      l5831 13D9  
                                    l5823 13D1                                      l5815 13C9  
                                    l5807 13B7                                      l5911 12AF  
                                    l5903 12A8                                      l6711 008B  
                                    l6703 007D                                      l5841 118E  
                                    l5833 13DB                                      l5825 13D3  
                                    l5817 13CB                                      l5809 13B9  
                                    l5913 12B1                                      l5905 12AC  
                                    l5921 1115                                      l6721 00E9  
                                    l6713 008E                                      l6705 0082  
                                    l5843 11A1                                      l5851 10A0  
                                    l5835 13DE                                      l5827 13D5  
                                    l5819 13CD                                      l5579 105F  
                                    l5771 1102                                      l5587 0801  
                                    l5915 12B3                                      l5907 12AD  
                                    l5931 111D                                      l5923 1119  
                                    l6811 01C7                                      l6803 01AE  
                                    l6731 0106                                      l6723 00EF  
                                    l6715 00A7                                      l6707 0085  
                                    l6651 0034                                      l5597 080F  
                                    l5589 0807                                      l5845 11A3  
                                    l5853 10A2                                      l5861 10AB  
                                    l5837 13E1                                      l5829 13D7  
                                    l5781 110F                                      l5773 1107  
                                    l5917 12B9                                      l5909 12AE  
                                    l5925 111A                                      l6821 01DA  
                                    l6813 01CC                                      l6805 01B4  
                                    l6741 0126                                      l6733 010D  
                                    l6725 00F4                                      l6717 00DC  
                                    l6709 0088                                      l6661 003C  
                                    l6653 0037                                      l5599 0819  
                                    l5855 10A5                                      l5863 10AE  
                                    l5839 13E3                                      l5791 13A2  
                                    l5847 1096                                      l5871 10E8  
                                    l5775 1108                                      l5927 111B  
                                    l5919 1111                                      l6831 01FC  
                                    l6815 01CE                                      l6807 01BC  
                                    l6743 012E                                      l6735 0112  
                                    l6727 00F9                                      l6719 00E2  
                                    l6671 0048                                      l6663 003D  
                                    l6655 0038                                      l5849 109E  
                                    l5857 10A7                                      l5793 13A8  
                                    l5865 10CA                                      l5881 07DF  
                                    l5873 10E9                                      l5777 110A  
                                    l5953 1080                                      l5929 111C  
                                    l5961 1387                                      l6841 0227  
                                    l6817 01D2                                      l6809 01C1  
                                    l6761 015B                                      l6745 0133  
                                    l6753 0141                                      l6737 0113  
                                    l6825 01E3                                      l6729 0101  
                                    l6833 020B                                      l6681 005A  
                                    l6673 004A                                      l6665 0041  
                                    l6657 0039                           __end_of_LCDrecv 0E94  
                                    l5859 10AA                                      l5795 13AA  
                                    l5867 10D1                                      l5891 07EA  
                                    l5883 07E2                                      l5875 10EC  
                                    l5779 110D                                      l5955 1083  
                                    l5963 139D                                      l6851 025A  
                                    l6843 022D                                      l6835 0210  
                                    l6827 01E8                                      l6819 01D6  
                                    l6771 0170                                      l6763 0160  
                                    l6755 0147                                      l6747 013A  
                                    l6739 0121                                      l6691 0069  
                                    l6683 005B                                      l6675 004E  
                                    l6667 0042                                      l6659 003B  
                                    l5981 14FA                                      l5973 14D2  
                                    l5797 13AC                                      l5893 07F2  
                                    l5885 07E4                                      l5877 10ED  
                                    l5869 10E5                                      l5957 136D  
                                    l6861 02B0                                      l6853 0274  
                                    l6845 0236                                      l6837 0219  
                                    l6829 01FA                                      l6773 0175  
                                    l6757 014F                                      l6749 013F  
                                    l6693 006A                                      l6685 005F  
                                    l6677 0052                                      l6669 0046  
                                    l5983 1509                                      l5975 14D2  
                                    l5991 0A9D                                      l5799 13AE  
                                    l5895 07F4                                      l5887 07E6  
                                    l5879 10EF                                      l6871 02E1  
                                    l6863 02B6                                      l6855 027A  
                                    l6847 023C                                      l6839 021E  
                                    l6791 019B                                      l6775 017C  
                                    l6759 0154                                      l6767 0162  
                                    l6695 006C                                      l6687 0060  
                                    l6679 0056                                      _ALAF 0133  
                                    l5985 150D                                      l5977 14E7  
                                    l5993 0AB2                                      l5897 07FC  
                                    l5889 07E8                                      l6881 0303  
                                    l6873 02EF                                      l6857 0292  
                                    l6849 0254                                      l6865 02BF  
                                    l6793 01A2                                      l6777 0180  
                                    l6769 0168                                      l6785 0188  
                                    l6697 0070                                      l6689 0068  
                                    l5979 14F6                                      l5995 0AC1  
                                    l5987 0A8C                                      l5899 129C  
                                    l6883 0305                                      l6867 02C4  
                                    l6875 02F1                                      l6859 0298  
                                    l6795 01A6                                      l6787 018E  
                                    l6779 0186                                      l6699 0074  
                                    l5997 0AC5                                      l5989 0A91  
                                    l6877 02F6                                      l6869 02DD  
                                    l6797 01AC                                      l6789 0196  
                                    _ALAL 0134                           __end_of_LCDsend 1523  
                                    l5999 0AD4                                      l6879 02FD  
                                    l6987 138F                                      _ALAT 0135  
                                    STR_1 1820                                      STR_2 183C  
                                    _CLKH 0132                                      _CLKM 0131  
                                    _LATA 0016                                      _LATB 0017  
                                    _LATC 0018                                      _LATD 0019  
                                    _LATE 001A                                      _T2PR 028D  
                                    u5110 12B8                                      u5111 12B7  
                                    u5210 0AAC                                      u5211 0AAB  
                                    u5140 14E1                                      u5300 0B56  
                                    u5220 0AB2                                      u5141 14E0  
                                    u5301 0B55                                      u5221 0AB1  
                                    u5205 0A94                                      u5150 14E7  
                                    u5310 0B5C                                      u5230 0AC1  
                                    u5151 14E6                                      u5311 0B5B  
                                    u5231 0AC0                                      u6007 02E7  
                                    u5160 14F6                                      u5240 0AD4  
                                    u5161 14F5                                      u5241 0AD3  
                                    u6017 030B                                      u5170 1509  
                                    u5250 0AE9                                      u5171 1508  
                                    u5251 0AE8                                      u6107 16AA  
                                    u6027 1651                                      u5180 151C  
                                    u5260 0AFE                                      _PMD0 0796  
                                    u5181 151B                                      u5261 0AFD  
                                    u6117 16CA                                      u6037 165F  
                                    _PMD1 0797                                      u4710 080E  
                                    u5190 1522                                      u5270 0B15  
                                    _PMD2 0798                                      u4711 080D  
                                    u5191 1521                                      u6127 0B5D  
                                    u5271 0B14                                      u6047 166A  
                                    _PMD3 0799                                      u4720 0819  
                                    u5280 0B2A                                      _PMD4 079A  
                                    u4721 0818                                      u5281 0B29  
                                    u6057 1677                                      _PMD5 079B  
                                    u4730 0824                                      u5290 0B3F  
                                    u4731 0823                                      u5291 0B3E  
                                    u6067 167F                                      u4740 082B  
                                    u5700 0147                                      u5620 00EF  
                                    u4741 082A                                      u6077 168B  
                                    u5701 0146                                      u5621 00EE  
                                    u4750 0830                                      u5710 0154  
                                    u5630 00F4                                      u4751 082F  
                                    u6087 1693                                      u5711 0153  
                                    u5631 00F3                                      u4760 083D  
                                    u5800 01C1                                      u5720 015B  
                                    u5640 00F9                                      u4761 083C  
                                    u6097 169F                                      u5801 01C0  
                                    u5721 015A                                      u5641 00F8  
                                    u4770 0848                                      u5810 01C7  
                                    u5730 0168                                      u5650 0106  
                                    u4771 0847                                      u5811 01C6  
                                    u5731 0167                                      u5651 0105  
                                    u4780 084D                                      u5900 0298  
                                    u5820 01CC                                      u5740 0175  
                                    u5660 010D                                      u4781 084C  
                                    u5901 0297                                      u5821 01CB  
                                    u5741 0174                                      u5661 010C  
                                    _TALA 0136                                      u4790 085C  
                                    u5910 02B6                                      u5830 01E8  
                                    u5750 017C                                      u5670 0126  
                                    u4791 085B                                      u5911 02B5  
                                    u5831 01E7                                      u5751 017B  
                                    u5671 0125                                      u5920 02C4  
                                    u5840 0210                                      u5760 018E  
                                    u5680 0133                                      u5921 02C3  
                                    u5841 020F                                      u5761 018D  
                                    u5681 0132                                      u5930 02DD  
                                    u5850 021E                                      u5770 019B  
                                    u5690 013A                                      u5931 02DC  
                                    u5851 021D                                      u5771 019A  
                                    u5691 0139                                      u5940 02F6  
                                    u5860 022D                                      u5780 01A2  
                                    u5941 02F5                                      u5861 022C  
                                    u5781 01A1                                      u5950 02FD  
                                    u5870 023C                                      u5790 01B4  
                                    u5951 02FC                                      u5871 023B  
                                    u5791 01B3                                      u5960 0303  
                                    u5880 025A                                      u5961 0302  
                                    u5881 0259                                      _NREG 013B  
                                    u5890 027A                                      u5891 0279  
                                    u5987 0119                                      u5997 0203  
                                    _PMON 0137                                      _TMR2 028C  
                                    _WPUA 0F39                                      _WPUB 0F44  
                                    _WPUC 0F4F                                      _WPUD 0F5A  
                                    _WPUE 0F65                                      abs@a 0073  
                                    _dbuf 01BD                  __size_of_writeRingBuffer 0063  
                                    _atoi 085F                                      _ctoa 15DC  
                                    _main 0034                                      _dtoa 0E94  
                                    _mode 0129                                      _prec 0124  
                                    _nout 0120                                      pad@i 0027  
                                    pad@p 0025                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      pad@w 0029  
                                    btemp 007E                                      start 0018  
              ??_TMR1_SetInterruptHandler 013F                          ??_timerInterrupt 006C  
                         __end_of_ReadI2C 120A                           __end_of_OpenI2C 10CA  
                                   ??_abs 0075                                     ??_pad 007C  
               __size_of_DATAEE_WriteByte 0024                          _last_temperature 016A  
          __size_of_OSCILLATOR_Initialize 0009             __end_of_OSCILLATOR_Initialize 10B0  
                         __end_of___aodiv 0D4C                                     _ADACQ 009D  
                                   _ADCAP 009B                                     _ADACT 0099  
                                   ?_atoi 0076                                     ?_ctoa 0078  
                                   ?_main 0070                                     ?_dtoa 0030  
                                   _ADCLK 0098                           __end_of___aomod 0C4B  
                                   _ADCNT 010C                                     _ADPCH 009E  
                                   _ADREF 009A                         ??_initializeEPROM 0141  
                                   _ADPRE 009C                                     _ADRPT 010D  
                                   _T1CLK 0211                                     _T1CON 020E  
                                   _T2CON 028E                                     _T2HLT 028F  
                                   _T2TMR 028C                                     i1l119 0016  
                                   _T2RST 0291                                     i1l290 115A  
                                   i1l450 125B                                     i1l530 10BC  
                                   i1l514 1151                                     i1l293 1163  
                                   i1l526 10E4                                     i1l447 1251  
                                   i1l536 0003                                     i1l449 1255  
                                   i1l467 118D                                     i1l910 105A  
                                   i1l913 1053                                     i1l907 1050  
                                   i1l916 105E                __end_of_i2c1_fsmStateTable 1820  
                                   _OSCEN 0891                     __end_of_activateAlarm 11F0  
                            vfpfcnvrt@fmt 004E                                     _TMR1H 020D  
                                   _TMR1L 020C                                     _TRISA 0011  
                                   _TRISB 0012                                     _TRISC 0013  
                                   _TRISD 0014                                     _TRISE 0015  
                         _PWM6_Initialize 10CA                  __end_ofi1_TMR2_StopTimer 105F  
                       ??_I2C1_Initialize 013D                          __end_of_TMR1_ISR 10E5  
                         _DATAEE_ReadByte 1111                                     _flags 006E  
                      __size_of_TMR2_Stop 0003                               ?_TMR2_Start 0070  
                                   _fputc 1432                                     _fputs 12E6  
                         __end_of_isdigit 11BD                                     _hours 012F  
                  storeEPROMBuild@minutes 0144                    storeEPROMBuild@seconds 0145  
                                   atoi@n 0027                                     pad@fp 002B  
                                   atoi@s 0076                                     _width 0122  
                                   ctoa@c 0078                                     _putch 0002  
                                   ctoa@l 0020                                     ctoa@w 0022  
                                   dtoa@d 0030                                     dtoa@i 004C  
                                   dtoa@n 0044                                     dtoa@p 003E  
                                   dtoa@s 0042                                     dtoa@w 0040  
                         __end_of_isspace 129C                   __end_of_TMR1_Initialize 0800  
                                   pclath 000A                                     status 0003  
                                   wtemp0 007E                           __end_of_sprintf 12E6  
                         _TMR2_StartTimer 1057                writeRingBuffer@temperature 0076  
                         _TMR1_WriteTimer 1141                           __initialization 001A  
                            ?i1_TMR2_Stop 0070                              __end_of_atoi 090E  
                            __end_of_ctoa 164D                              __end_of_main 0316  
                            __end_of_dtoa 1000                               ?i1_WriteI2C 0070  
                     __size_of_LCDsend2x4 00D7                   __end_of_TMR2_Initialize 10F3  
             ?_INTERRUPT_InterruptManager 0070                                    ??_atoi 0078  
                                  ??_ctoa 007A                                    ??_main 014D  
                                  ??_dtoa 0038                                 ??_LCDchar 0078  
                               ??_LCDbusy 0079                                 ??_LCDinit 0145  
                               ??_LCDrecv 0072                                 ??_LCDsend 013F  
              __end_ofi1_DATAEE_WriteByte 125C                                    _ADACCH 0091  
                                  _ADACCL 0090                          ?_deactivateAlarm 0070  
                                  _ADCON0 0093                                    _ADCON1 0094  
                                  _ADCON2 0095                                    _ADCON3 0096  
                                  _ADERRH 0117                                    _ADERRL 0116  
                                  ?_fputc 0070                                    _ADLTHH 010F  
                                  _ADLTHL 010E                                    ?_fputs 0078  
                                  _ADRESH 008D                                    _ADRESL 008C  
                                  _ADSTAT 0097                                    _ADUTHH 0111  
                                  _ADUTHL 0110                          __end_of_WriteI2C 085F  
                                  _ANSELA 0F38                                    ?_putch 0070  
                                  _ANSELB 0F43                                    _ANSELC 0F4E  
                                  _ANSELD 0F59                                    _ANSELE 0F64  
                                  _T1GATE 0210                                    _T1GCON 020F  
                 storeEPROMBuild@dataAddr 014B                                    _RA6PPS 0F16  
                                  _RC3PPS 0F23                                    i1l1111 0740  
                                  i1l1120 0752                                    i1l1112 0742  
                 TMR1_WriteTimer@timerVal 0070                                    i1l1123 0756  
                                  _RC4PPS 0F24                                    i1l1142 0795  
                                  i1l1143 0796                                    i1l1119 0751  
                                  i1l1128 0765                                    i1l1401 1203  
                                  i1l1129 0766                                    i1l1233 04BF  
                                  i1l1402 1204                                    i1l1331 11DD  
                                  i1l1083 06DE                                    i1l1243 04FF  
                                  i1l1324 112F                                    i1l1412 1403  
                                  i1l1164 07D8                                    i1l1156 07C7  
                                  i1l1084 06DF                                    i1l1236 04C1  
                                  i1l1405 1209                                    i1l1421 1421  
                                  i1l2301 0F05                                    i1l1165 07D9  
                                  i1l1157 07C9                                    i1l1341 107B  
                                  i1l1334 11E0                                    i1l1414 1408  
                                  i1l1502 0DCF                                    i1l2302 0F1B  
                                  i1l1503 0DD1                                    i1l1079 06D2  
                                  i1l1327 1101                                    i1l1343 107F  
                                  i1l1336 11EF                                    i1l1192 17FF  
                                  i1l1409 1431                                    i1l2305 0F8B  
                                  i1l2241 12E5                                    i1l1169 07DE  
                                  i1l1097 070E                                    i1l1177 15DB  
                                  _ODCONA 0F3A                                    i1l1426 1430  
                                  i1l1602 09C3                                    i1l2330 0538  
                                  i1l1098 070F                                    i1l1346 1078  
                                  _ODCONB 0F45                                    i1l1523 0E17  
                                  i1l1507 0DD5                                    i1l1611 1095  
                                  i1l2331 053A                                    i1l1339 1079  
                                  _ODCONC 0F50                                    i1l1524 0E18  
                                  i1l1508 0DD6                                    i1l2420 1480  
                                  _ODCOND 0F5B                                    i1l1525 0E1A  
                                  i1l1621 1140                                    i1l2405 129B  
                                  i1l2333 056B                                    _ODCONE 0F66  
                                  i1l2326 052A                                    i1l1543 0E51  
                                  i1l1471 0D59                                    i1l2431 0002  
                                  i1l2319 0FFF                                    i1l1544 0E52  
                                  i1l1472 0D5A                                    i1l1608 1071  
                                  i1l2360 1223                                    i1l2272 153D  
                                  i1l2328 0534                                    i1l1617 1177  
                                  i1l5001 15F6                                    i1l2329 0536  
                                  i1l1562 0E93                                    i1l1538 0E4B  
                                  i1l2346 06D1                                    i1l1539 0E4D  
                                  i1l2291 1632                                    i1l5011 1613  
                                  i1l5003 15FA                                    i1l2363 1223  
                                  i1l2275 155F                                    i1l2428 130E  
                                  i1l2356 136A                                    i1l1557 0E82  
                                  i1l2381 089C                                    i1l5101 08A1  
                                  i1l2293 164C                                    i1l5013 161F  
                                  i1l5005 1608                                    i1l2437 123D  
                                  i1l2277 1578                                    i1l1558 0E83  
                                  i1l1487 0D9B                                    i1l5111 08F1  
                                  i1l5103 08B5                                    i1l5015 1624  
                                  i1l5031 0EE2                                    i1l5023 0E96  
                                  i1l1488 0D9C                                    i1l1584 0970  
                                  i1l1568 092C                                    i1l2288 1610  
                                  i1l2296 0EDD                                    i1l1489 0D9E  
                                  i1l1593 09A7                                    i1l1569 092D  
                                  i1l5113 08F7                                    i1l5017 1637  
                                  i1l5009 160E                                    i1l5041 0F17  
                                  i1l5033 0EF7                                    i1l2297 0EE7  
                                  i1l5025 0EA6                                    i1l5201 0599  
                                  i1l2394 090D                                    i1l5115 08FD  
                                  i1l5107 08D5                                    i1l5019 1645  
                                  i1l5051 0F5A                                    i1l5043 0F1F  
                                  i1l5035 0EFD                                    i1l5027 0EB9  
                                  i1l5211 05BE                                    i1l5203 059D  
                                  i1l1780 127A                                    i1l5141 140D  
                                  i1l1597 09BA                                    i1l5301 09A8  
                                  i1l2397 11BC                                    i1l5117 0909  
                                  i1l5061 0FC1                                    i1l5053 0F5E  
                                  i1l5045 0F22                                    i1l5037 0F0D  
                                  i1l5029 0EBF                                    i1l5221 0602  
                                  i1l5205 059F                                    i1l1598 09BB  
                                  i1l5151 1425                                    i1l5135 13F0  
                                  i1l5127 13E8                                    i1l5311 0D4D  
                                  i1l5303 09AE                                    i1l5071 0FDB  
                                  i1l5055 0F99                                    i1l5063 0FC6  
                                  i1l5047 0F27                                    i1l5039 0F13  
                                  i1l5231 063E                                    i1l5223 060E  
                                  i1l5215 05E2                                    i1l5207 05A6  
                                  i1l5161 1208                                    i1l5137 13F9  
                                  i1l5129 13EB                                    i1l5321 0D7E  
                                  i1l5313 0D5E                                    i1l5305 09BF  
                                  i1l5081 085F                                    i1l5073 0FE0  
                                  i1l5065 0FCD                                    i1l5057 0FA6  
                                  i1l5049 0F56                                    i1l5241 068A  
                                  i1l5233 0646                                    i1l5209 05B6  
                                  i1l5217 05E8                                    i1l5401 1100  
                                  i1l1778 1266                                    i1l5403 1178  
                                  i1l5307 104E                                    i1l5139 1402  
                                  i1l5147 140F                                    i1l5331 0DB1  
                                  i1l5323 0D8A                                    i1l5315 0D69  
                                  i1l5411 1139                                    i1l5091 0889  
                                  i1l5083 0865                                    i1l1891 0C39  
                                  i1l5075 0FE4                                    i1l5067 0FD1  
                                  i1l5059 0FB3                                    i1l5251 06AB  
                                  i1l5243 0692                                    i1l5235 065F  
                                  i1l5219 05FA                                    i1l5227 061C  
                                  i1l5171 0521                                    i1l1892 0C4A  
                                  i1l5405 1057                                    i1l5157 11F0  
                                  i1l5149 1418                                    i1l5341 0DE9  
                                  i1l5333 0DBD                                    i1l5325 0D8F  
                                  i1l5317 0D6D                                    i1l5309 0D4D  
                                  i1l5093 088A                                    i1l5085 0869  
                                  i1l5069 0FD5                                    i1l5077 0FED  
                                  i1l5245 069D                                    i1l5229 062D  
                                  i1l5173 0526                                    i1l5165 0502  
                                  i1l5421 12CA                                    i1l5501 072E  
                                  i1l1878 0D3A                                    i1l5159 11FA  
                                  i1l5351 0E1E                                    i1l5343 0DF5  
                                  i1l5335 0DC3                                    i1l5327 0DA2  
                                  i1l5319 0D79                                    i1l5415 113E  
                                  i1l5271 0914                                    i1l5407 106C  
                                  i1l5431 1165                                    i1l5087 086B  
                                  i1l1879 0D4B                                    i1l5239 0679  
                                  i1l5175 052B                                    i1l5191 0565  
                                  i1l5167 0513                                    i1l5255 06AE  
                                  i1l5423 12CC                                    i1l5511 0775  
                                  i1l5503 0734                                    i1l6063 10D7  
                                  i1l5441 112E                                    i1l5361 0E56  
                                  i1l5353 0E29                                    i1l5345 0DFA  
                                  i1l5337 0DDA                                    i1l5329 0DAD  
                                  i1l5409 1130                                    i1l5281 094C  
                                  i1l5273 0920                                    i1l5433 1166  
                                  i1l5097 0891                                    i1l5089 0875  
                                  i1l5257 06C7                                    i1l5249 06A3  
                                  i1l5193 056F                                    i1l5185 053C  
                                  i1l5169 051B                                    i1l5425 12CE  
                                  i1l5521 07A5                                    i1l5513 0779  
                                  i1l5505 0746                                    i1l6065 10D9  
                                  i1l5371 0E87                                    i1l5363 0E61  
                                  i1l5355 0E2D                                    i1l5347 0E06  
                                  i1l5339 0DE5                                    i1l5291 0977  
                                  i1l5283 0952                                    i1l5275 0931  
                                  i1l5435 116A                                    i1l5099 0898  
                                  i1l5195 0573                                    i1l5427 12DD  
                                  i1l5419 12C2                                    i1l5531 07DD  
                                  i1l5523 07A9                                    i1l5515 0785  
                                  i1l5507 075A                                    i1l5451 124A  
                                  i1l5443 123E                                    i1l5267 1051  
                                  i1l6067 10E1                                    i1l5437 1120  
                                  i1l5365 0E65                                    i1l5357 0E39  
                                  i1l5349 0E0B                                    i1l5293 0983  
                                  i1l5285 095E                                    i1l5277 093C  
                                  i1l5269 090F                                    i1l4901 0CBB  
                                  i1l5197 0584                                    i1l5189 0541  
                                  i1l5381 1344                                    i1l5525 07B5  
                                  i1l5517 0789                                    i1l5509 076A  
                                  i1l5461 1256                                    i1l5453 124B  
                                  i1l5445 1245                                    i1l5541 15C7  
                                  i1l5701 0437                                    i1l5621 031F  
                                  i1l6341 000A                                    i1l5471 1157  
                                  i1l5439 1125                                    i1l5367 0E71  
                                  i1l5359 0E3F                                    i1l5295 0989  
                                  i1l5287 0964                                    i1l5279 0940  
                                  i1l5375 108F                                    i1l4911 0CD6  
                                  i1l4903 0CBE                                    i1l5199 058C  
                                  i1l5383 1358                                    i1l5551 176B  
                                  i1l5527 07BB                                    i1l5519 079A  
                                  i1l5455 124C                                    i1l5447 1247  
                                  i1l5543 15D0                                    i1l5535 157A  
                                  i1l5391 10F3                                    i1l5463 1072  
                                  i1l5711 044F                                    i1l5703 0439  
                                  i1l5631 0339                                    i1l5623 0325  
                                  i1l6343 000F                                    i1l5473 1158  
                                  i1l5369 0E76                                    i1l5297 0995  
                                  i1l5289 0971                                    i1l4841 143C  
                                  i1l4921 0D1C                                    i1l4913 0CF8  
                                  i1l4905 0CC6                                    i1l5385 1362  
                                  i1l5377 133C                                    i1l5561 17E4  
                                  i1l5553 17BC                                    i1l5529 07CD  
                                  i1l5457 124E                                    i1l5449 1249  
                                  i1l5545 15D5                                    i1l5537 15BE  
                                  i1l5393 10F8                                    i1l5465 1075  
                                  i1l5713 0453                                    i1l5705 043F  
                                  i1l5721 0474                                    i1l5633 0340  
                                  i1l5625 032B                                    i1l5641 0352  
                                  i1l6345 0013                                    i1l5475 1159  
                                  i1l5467 1153                                    i1l5571 11E2  
                                  i1l5299 099B                                    i1l4843 1441  
                                  i1l4915 0D08                                    i1l4907 0CCA  
                                  i1l4931 0B97                                    i1l4923 0B61  
                                  i1l5379 1340                                    i1l5563 17ED  
                                  i1l5555 17C0                                    i1l5547 175E  
                                  i1l5491 06FE                                    i1l5483 06D2  
                                  i1l5459 1250                                    i1l5539 15C3  
                                  i1l5395 10F9                                    i1l5731 048D  
                                  i1l5723 047B                                    i1l5715 0459  
                                  i1l5707 0446                                    i1l5651 037C  
                                  i1l5643 035C                                    i1l5635 0346  
                                  i1l5627 0332                                    i1l5619 0316  
                                  i1l6339 0006                                    i1l5477 115F  
                                  i1l5469 1156                                    i1l5573 11E5  
                                  i1l4845 144B                                    i1l4837 1432  
                                  i1l4917 0D09                                    i1l4909 0CCE  
                                  i1l4941 0BD2                                    i1l4933 0BB6  
                                  i1l4925 0B62                                    i1l4853 12E8  
                                  i1l4861 1225                                    i1l5565 17F1  
                                  i1l5557 17C9                                    i1l5549 1762  
                                  i1l5493 0702                                    i1l5485 06E3  
                                  i1l5397 10FB                                    i1l5389 105B  
                                  i1l5741 04AC                                    i1l5733 0494  
                                  i1l5725 047E                                    i1l5717 0461  
                                  i1l5709 044C                                    i1l5661 039A  
                                  i1l5653 0385                                    i1l5645 0363  
                                  i1l5637 0348                                    i1l5629 0338  
                                  i1l5575 11E8                                    i1l4871 125C  
                                  i1l4847 1468                                    i1l4839 1437  
                                  i1l4919 0D17                                    i1l4951 0C1B  
                                  i1l4943 0BD6                                    i1l4935 0BC3  
                                  i1l4927 0B6C                                    i1l4855 12EB  
                                  i1l4863 122A                                    i1l5567 17FA  
                                  i1l5559 17CD                                    i1l5495 0713  
                                  i1l5487 06EE                                    i1l5399 10FE  
                                  i1l5751 04C2                                    i1l5743 04B0  
                                  i1l5735 049A                                    i1l5727 0484  
                                  i1l5719 0469                                    i1l5671 03BF  
                                  i1l5663 03A0                                    i1l5655 038E  
                                  i1l5647 036C                                    i1l5639 034F  
                                  u302_20 1437                                    i1l5569 11D7  
                                  i1l4881 1276                                    i1l4873 125E  
                                  i1l4849 1478                                    u302_21 1436  
                                  i1l4945 0BF8                                    i1l4937 0BC6  
                                  i1l4929 0B8D                                    i1l4857 12F9  
                                  i1l4865 122E                                    i1l4961 153B  
                                  i1l4953 1525                                    i1l5497 071E  
                                  i1l5489 06F2                                    i1l5577 107C  
                                  i1l5761 04E1                                    i1l5753 04C9  
                                  i1l5745 04B7                                    i1l5737 049F  
                                  i1l5729 048A                                    i1l5681 03EE  
                                  i1l5673 03CB                                    i1l5665 03AD  
                                  i1l5657 0391                                    i1l5649 0375  
                                  i1l4875 1262                                    i1l4891 0C77  
                                  i1l4947 0C08                                    i1l4939 0BCE  
                                  i1l4859 12FE                                    i1l4867 1237  
                                  i1l4971 156C                                    i1l4963 1540  
                                  i1l4955 1529                                    i1l5499 0722  
                                  i1l5755 04CE                                    i1l5763 04E5  
                                  i1l5739 04A5                                    i1l5691 041E  
                                  i1l5683 03F6                                    i1l5675 03D3  
                                  i1l5667 03B0                                    i1l5659 0392  
                                  u310_25 126C                                    i1l4877 126B  
                                  i1l4893 0C81                                    i1l4885 0C4B  
                                  i1l4949 0C16                                    i1l4965 154C  
                                  i1l4957 1531                                    i1l5765 04EA  
                                  i1l5757 04DF                                    i1l5749 04BA  
                                  i1l5693 0425                                    i1l5685 0402  
                                  i1l5677 03DA                                    i1l5669 03B7  
                                  i1l5941 1149                                    i1l4879 1270  
                                  i1l4991 1294                                    i1l4983 127B  
                                  i1l4895 0CA0                                    i1l4887 0C4C  
                                  i1l4975 120A                                    i1l4967 1551  
                                  i1l4959 1536                                    i1l5767 04EF  
                                  i1l5759 04E0                                    i1l5695 042D  
                                  i1l5687 040A                                    i1l5679 03E7  
                                  i1l5951 10B7                                    i1l5943 114B  
                                  i1l5935 1141                                    u311_20 1276  
                                  u303_20 143C                                    u311_21 1275  
                                  i1l4985 127D                                    u303_21 143B  
                                  i1l4897 0CA4                                    i1l4889 0C56  
                                  i1l4977 1217                                    i1l4969 1564  
                                  i1l5769 04F2                                    i1l5697 0432  
                                  i1l5689 0411                                    i1l5937 1146  
                                  i1l5945 114D                                    i1l4979 11A5  
                                  i1l4987 1284                                    i1l4995 15DE  
                                  i1l4899 0CAE                                    i1l5699 0433  
                                  i1l5947 114F                                    i1l5939 1147  
                                  i1l4989 1293                                    i1l4997 15E5  
                                  i1l5949 10B0                                    i1l4999 15ED  
                                  u400_20 0970                                    u304_20 144B  
                                  u320_20 0D17                                    u312_20 0C56  
                                  u400_21 096F                                    u304_21 144A  
                                  u320_21 0D16                                    u312_21 0C55  
                                  _INLVLA 0F3C                                    _INLVLB 0F47  
                                  _INLVLC 0F52                                    _INLVLD 0F5D  
                                  _INLVLE 0F68                                    i1l6991 08AD  
                                  u401_20 0983                                    u305_20 1468  
                                  u321_20 0D1C                                    u401_21 0982  
                                  u305_21 1467                                    u321_21 0D1B  
                                  _LCDcmd 106B                                    u305_25 1464  
                                  i1l6989 0554                                    u410_20 0D8A  
                                  u402_20 0995                                    u314_20 0C81  
                                  u330_20 0C16                                    u306_20 130E  
                                  u410_21 0D89                                    u402_21 0994  
                                  u314_21 0C80                                    u330_21 0C15  
                                  u306_21 130D                                    u411_20 0D9B  
                                  u403_20 09A7                                    u331_20 0C1B  
                                  u323_20 0B6C                                    u307_20 1237  
                                  u411_21 0D9A                                    u403_21 09A6  
                                  u331_21 0C1A                                    u323_21 0B6B  
                                  u307_21 1236                                    u420_20 0E06  
                                  u412_20 0DA2                                    u404_20 09BA  
                                  u308_20 1262                                    u340_20 1284  
                                  u316_20 0CAB                                    u500_20 0469  
                                  u420_21 0E05                                    u412_21 0DA1  
                                  u404_21 09B9                                    u308_21 1261  
                                  u340_21 1283                                    u500_21 0468  
                                  u421_20 0E17                                    u413_20 0DAD  
                                  u405_20 09BF                                    u341_20 1293  
                                  u317_20 0CBB                                    u325_20 0B97  
                                  u333_20 1529                                    u501_20 047B  
                                  u421_21 0E16                                    u413_21 0DAC  
                                  u405_21 09BE                                    u341_21 1292  
                                  u317_21 0CBA                                    u325_21 0B96  
                                  u333_21 1528                                    u501_21 047A  
                                  u309_25 1267                                    u430_20 0E82  
                                  u422_20 0E1E                                    u414_20 0DBD  
                                  u406_20 0D59                                    u342_20 15E5  
                                  u318_20 0CCE                                    u334_20 1536  
                                  u502_20 048A                                    u430_21 0E81  
                                  u422_21 0E1D                                    u414_21 0DBC  
                                  u406_21 0D58                                    u342_21 15E4  
                                  u318_21 0CCD                                    u334_21 1535  
                                  u502_21 0489                                    u431_20 0E87  
                                  u423_20 0E29                                    u415_20 0DCF  
                                  u407_20 0D5E                                    u343_20 15FA  
                                  u319_20 0CF8                                    u327_20 0BC3  
                                  u335_20 155F                                    u351_20 0EE2  
                                  u503_20 049A                                    u431_21 0E86  
                                  u423_21 0E28                                    u415_21 0DCE  
                                  u407_21 0D5D                                    u343_21 15F9  
                                  u319_21 0CF7                                    u327_21 0BC2  
                                  u335_21 155E                                    u351_21 0EE1  
                                  u503_21 0499                                    u319_25 0CF4  
                                  u335_25 155B                                    u424_20 0E39  
                                  u416_20 0DD5                                    u408_20 0D69  
                                  u344_20 160D                                    u328_20 0BD6  
                                  u336_20 1564                                    u360_20 0FCD  
                                  u352_20 0EF7                                    u440_20 06E3  
                                  u504_20 049F                                    u512_20 1146  
                                  u424_21 0E38                                    u416_21 0DD4  
                                  u408_21 0D68                                    u344_21 160C  
                                  u328_21 0BD5                                    u336_21 1563  
                                  u360_21 0FCC                                    u352_21 0EF6  
                                  u440_21 06E2                                    u504_21 049E  
                                  u512_21 1145                                    u432_25 0E8A  
                                  u352_25 0EF3                                    u425_20 0E4B  
                                  u417_20 0DDA                                    u409_20 0D79  
                                  u345_20 1632                                    u329_20 0BF8  
                                  u337_20 1217                                    u361_20 0FD1  
                                  u353_20 0F13                                    u433_20 1362  
                                  u441_20 06EE                                    u505_20 04BF  
                                  u513_20 10B7                                    u425_21 0E4A  
                                  u417_21 0DD9                                    u409_21 0D78  
                                  u345_21 1631                                    u329_21 0BF7  
                                  u337_21 1216                                    u361_21 0FD0  
                                  u353_21 0F12                                    u433_21 1361  
                                  u441_21 06ED                                    u505_21 04BE  
                                  u513_21 10B6                                    u345_25 162E  
                                  u329_25 0BF4                                    u337_25 1213  
                                  u370_20 13EF                                    u426_20 0E51  
                                  u418_20 0DE5                                    u338_20 11B5  
                                  u346_20 1637                                    u362_20 0FDB  
                                  u354_20 0F17                                    u450_20 0756  
                                  u442_20 06FE                                    u506_20 04C9  
                                  u370_21 13EE                                    u426_21 0E50  
                                  u418_21 0DE4                                    u338_21 11B3  
                                  u346_21 1636                                    u362_21 0FDA  
                                  u354_21 0F16                                    u450_21 0755  
                                  u442_21 06FD                                    u506_21 04C8  
                                  u434_25 1187                                    u371_20 13F9  
                                  u427_20 0E56                                    u419_20 0DF5  
                                  u435_20 1139                                    u339_20 11B6  
                                  u363_20 0875                                    u355_20 0F99  
                                  u347_20 0EB1                                    u451_20 075A  
                                  u443_20 070E                                    u507_20 04CE  
                                  u371_21 13F8                                    u427_21 0E55  
                                  u419_21 0DF4                                    u435_21 1138  
                                  u363_21 0874                                    u355_21 0F98  
                                  u347_21 0EAF                                    u451_21 0759  
                                  u443_21 070D                                    u507_21 04CD  
                                  u355_25 0F95                                    u380_20 1203  
                                  u372_20 1402                                    u428_20 0E61  
                                  u436_20 1177                                    u364_20 0889  
                                  u356_20 0FA6                                    u348_20 0EB2  
                                  u460_20 07C7                                    u452_20 0765  
                                  u444_20 0713                                    u508_20 04EA  
                                  u380_21 1202                                    u372_21 1401  
                                  u428_21 0E60                                    u436_21 1176  
                                  u364_21 0888                                    u356_21 0FA5  
                                  u460_21 07C6                                    u452_21 0764  
                                  u444_21 0712                                    u508_21 04E9  
                                  _LCDstr 1164                                    u381_20 1208  
                                  u373_20 1408                                    u429_20 0E71  
                                  u365_20 0897                                    u357_20 0FB3  
                                  u349_20 0EBF                                    u461_20 07CD  
                                  u453_20 076A                                    u445_20 071E  
                                  u437_20 1255                                    u509_20 04EF  
                                  u381_21 1207                                    u373_21 1407  
                                  u429_21 0E70                                    u365_21 0896  
                                  u357_21 0FB2                                    u349_21 0EBE  
                                  u461_21 07CC                                    u453_21 0769  
                                  u445_21 071D                                    u437_21 1254  
                                  u509_21 04EE                                    u357_25 0FAF  
                                  u613_27 04F8                                    u438_20 115F  
                                  u374_20 140D                                    u366_20 08EA  
                                  u358_20 0FC1                                    u390_20 05FA  
                                  u382_20 0513                                    u462_20 07D8  
                                  u454_20 0775                                    u446_20 072E  
                                  u550_20 000A                                    u438_21 115E  
                                  u374_21 140C                                    u366_21 08E8  
                                  u358_21 0FC0                                    u390_21 05F9  
                                  u382_21 0512                                    u462_21 07D7  
                                  u454_21 0774                                    u446_21 072D  
                                  u550_21 0009                                    u358_25 0FBD  
                                  u614_27 09C0                                    u375_20 1418  
                                  u367_20 08EB                                    u359_20 0FC6  
                                  u391_20 062D                                    u383_20 056B  
                                  u463_20 07DD                                    u455_20 0785  
                                  u447_20 0740                                    u439_20 06DE  
                                  u551_20 000F                                    u375_21 1417  
                                  u359_21 0FC5                                    u391_21 062C  
                                  u383_21 056A                                    u463_21 07DC  
                                  u455_21 0784                                    u447_21 073F  
                                  u439_21 06DD                                    u551_21 000E  
                                  u376_20 1421                                    u368_20 08F7  
                                  u392_20 063E                                    u384_20 056F  
                                  u456_20 0795                                    u448_20 0746  
                                  u464_20 15D0                                    u480_20 0325  
                                  u552_20 0013                                    u376_21 1420  
                                  u368_21 08F6                                    u392_21 063D  
                                  u384_21 056E                                    u456_21 0794  
                                  u448_21 0745                                    u464_21 15CF  
                                  u480_21 0324                                    u552_21 0012  
                                  u377_20 1425                                    u369_20 08FD  
                                  u393_20 068A                                    u385_20 0584  
                                  u465_20 176B                                    u457_20 079A  
                                  u449_20 0751                                    u481_20 032B  
                                  u377_21 1424                                    u369_21 08FC  
                                  u393_21 0689                                    u385_21 0583  
                                  u465_21 176A                                    u457_21 0799  
                                  u449_21 0750                                    u481_21 032A  
                                  u378_20 1430                                    u386_20 059D  
                                  u466_20 17C9                                    u458_20 07A5  
                                  u490_20 03B7                                    u482_20 0338  
                                  u378_21 142F                                    u386_21 059C  
                                  u466_21 17C8                                    u458_21 07A4  
                                  u490_21 03B6                                    u482_21 0337  
                                  u394_25 0917                                    u379_20 11FA  
                                  u395_20 092C                                    u387_20 05DB  
                                  u467_20 17ED                                    u459_20 07B5  
                                  u491_20 03BF                                    u483_20 0346  
                                  u379_21 11F9                                    u395_21 092B  
                                  u387_21 05D9                                    u467_21 17EC  
                                  u459_21 07B4                                    u491_21 03BE  
                                  u483_21 0345                                    u396_20 0931  
                                  u388_20 05DC                                    u468_20 17FA  
                                  u492_20 03DA                                    u484_20 035C  
                                  u396_21 0930                                    u468_21 17F9  
                                  u492_21 03D9                                    u484_21 035B  
                                  _OSCFRQ 0893                                    u469_20 11DD  
                                  u397_20 093C                                    u389_20 05E8  
                                  u493_20 03F6                                    u485_20 036C  
                                  u469_21 11DC                                    u397_21 093B  
                                  u389_21 05E7                                    u493_21 03F5  
                                  u485_21 036B                                    u398_20 094C  
                                  u494_20 0411                                    u486_20 0375  
                                  u398_21 094B                                    u494_21 0410  
                                  u486_21 0374                                    u399_20 095E  
                                  u495_20 042D                                    u487_20 0385  
                                  u399_21 095D                                    u495_21 042C  
                                  u487_21 0384                                    u496_20 0432  
                                  u488_20 038E                                    u496_21 0431  
                                  u488_21 038D                             vfpfcnvrt@done 005E  
                                  u497_20 0446                                    u489_20 03A0  
                                  u497_21 0445                                    u489_21 039F  
                                  u498_20 044C                                    u498_21 044B  
                                  u499_20 0461                                    u499_21 0460  
                               ??_ReadI2C 0070                               LCDsend2x4@c 0142  
                             LCDrecv@mode 0076                 __size_of_PWMOutputDisable 000F  
                               ??_OpenI2C 013D                          _I2C1_DO_TX_EMPTY 0000  
                         _max_temperature 0169      __end_of_TMR1_DefaultInterruptHandler 0004  
   __size_of_TMR1_DefaultInterruptHandler 0001              _TMR1_DefaultInterruptHandler 0003  
                            _CCPTMRS1bits 021F                              vfprintf@cfmt 006A  
                       ??_writeRingBuffer 0075                                 ??___aodiv 0070  
                           ?i1_LCDsend2x4 0072                                 ??___aomod 0070  
                                  ___wmul 125C                                    _alarm1 0128  
                                  _alarm2 0127                         __end_of_TMR2_Stop 1057  
                                  _alarmc 0163                          __end_of_readTC74 07DF  
                     __size_of_TMR2_Start 0003                                    _cursor 0159  
                 __end_of_PWM6_Initialize 10D7                          __end_of_operADDR 13A2  
                                  pad@buf 0024                                    ctoa@fp 0024  
                                  dtoa@fp 003D                   __end_of_DATAEE_ReadByte 1120  
                                  _strlen 1224                           _ADCC_Initialize 118E  
                   _I2C1_DO_SEND_ADR_READ 0000                                    fputc@c 0070  
                          _PMD_Initialize 1096                                    fputs@c 0020  
                                  fputs@i 0021                                    fputs@s 0023  
                               ??_isdigit 0072                          __end_of_printLCD 1800  
                               ??_isspace 0072                  __size_ofi1_deactivatePWM 0007  
                  __size_of_initializeREG 002B             i1DATAEE_WriteByte@GIEBitValue 0073  
       __size_of_ADCC_GetSingleConversion 0012                                    putch@c 0070  
                        __end_of_vfprintf 136B                 ?_ADCC_GetSingleConversion 0070  
                 __end_of_TMR2_StartTimer 105B  TMR1_SetInterruptHandler@InterruptHandler 013D  
                               ??_sprintf 007D                   __end_of_TMR1_WriteTimer 1152  
                 _I2C1_DO_RX_NACK_RESTART 0000                       __size_ofi1_WriteI2C 004B  
                   __end_of_TMR1_CallBack 10BD                          ?_TMR1_Initialize 0070  
                       _SYSTEM_Initialize 11BD                   __end_of__initialization 0030  
                      ?_SYSTEM_Initialize 0070                              _data_address 015D  
                 _rdBlkRegCompleteHandler 0000                            __pcstackCOMMON 0070  
                          ??i1_LCDsend2x4 0073                       ??_SYSTEM_Initialize 013F  
                __size_of_storeEPROMBuild 004F        parseEPROMInitialization@magic_word 014C  
                               ?_TMR1_ISR 0070             ?_TMR1_DefaultInterruptHandler 0070  
                        _DATAEE_WriteByte 129C                      storeEPROMBuild@hours 014A  
                           __end_of_fputc 1481                             __end_of_fputs 130F  
                           __end_of_putch 0003                          ?_TMR2_Initialize 0070  
              __end_ofi1_PWMOutputDisable 1102                    __end_of_PMD_Initialize 109E  
                               LCDrecv@hc 0074                                 LCDrecv@lc 0075  
                __size_of_PWMOutputEnable 0010                              ??_LCDsend2x4 0140  
                                 ??_fputc 0073                 __end_of_SYSTEM_Initialize 11D6  
                                 ??_fputs 0079                                   ??_putch 0070  
                              __pbssBANK0 006E                                __pbssBANK1 00EE  
                              __pbssBANK2 0120                                __pbssBANK3 01A0  
                  i1DATAEE_WriteByte@bAdd 0070                                   ?_LCDcmd 0070  
                                 ?_LCDstr 0070                                   LCDcmd@c 0078  
                   _rd1RegCompleteHandler 0000                                   LCDstr@c 007A  
                                 LCDstr@p 007B              parseEPROMInitialization@ALAF 0147  
            parseEPROMInitialization@ALAL 0146              parseEPROMInitialization@ALAT 0145  
            parseEPROMInitialization@CLKH 0148              parseEPROMInitialization@CLKM 0149  
            parseEPROMInitialization@TALA 0144              parseEPROMInitialization@NREG 013F  
            parseEPROMInitialization@PMON 0143                         _I2C1_DO_SEND_STOP 0000  
                         _initializeEPROM 16D0                     _wr1RegCompleteHandler 0000  
                           _initializeREG 130F                                __pmaintext 0034  
                                 ?___wmul 0070                                ??_TMR1_ISR 007E  
                 __end_of_ADCC_Initialize 11A5                __end_of_PWM6_LoadDutyValue 118E  
                              __pintentry 0004                           _I2C1_Initialize 109E  
                                 _ADFLTRH 0115                                   _ADFLTRL 0114  
                    __size_ofi1_TMR2_Stop 0003                        __end_of_LCDsend2x4 0B61  
                                 _ADPREVH 008F                                   _ADPREVL 008E  
                               ?_WriteI2C 0070                          ?_PWM6_Initialize 0070  
                                 _ADSTPTH 0113                                   _ADSTPTL 0112  
                         ?_PMD_Initialize 0070                                   ?_strlen 0070  
                        ?_DATAEE_ReadByte 013D                                   _LCDchar 108E  
                                 _LCDbusy 1130                                   _LCDinit 164D  
                                 _LCDrecv 0D4C                                   _LCDsend 14D0  
                                 _OSCCON1 088D                                   _OSCCON3 088F  
                      __size_of_vfpfcnvrt 01D2                                   _NVMADRH 081B  
                                 _NVMADRL 081A                                   _NVMDATH 081D  
                                 _OSCTUNE 0892                                   _NVMDATL 081C  
                                 _NVMCON2 081F                                   _PWM6DCH 038D  
                                 _PWM6DCL 038C                         ?i1_TMR2_StopTimer 0070  
                                 _PWM6CON 038E                                   _SSP1ADD 018D  
                                 _SLRCONA 0F3B                                   _SLRCONB 0F46  
                                 _SLRCONC 0F51                                   _SLRCOND 0F5C  
                                 _SLRCONE 0F67                                   _PPSLOCK 0E8F  
                                 _SSP1BUF 018C                              ??_TMR2_Start 0070  
                 __size_of_TMR2_StopTimer 0004                          ?_TMR2_StartTimer 0070  
                       timerInterrupt@lum 00EC                          ?_TMR1_WriteTimer 0070  
                      ??i1_TMR2_StopTimer 0070                                _magic_word 013C  
                            LCDsend2x4@hc 0143                              LCDsend2x4@lc 0144  
                  __size_of_deactivatePWM 0007                                 ?_readTC74 0070  
                         __size_of_LCDcmd 0007                      DATAEE_WriteByte@bAdd 013D  
                       ??i1_deactivatePWM 0070                        _i2c1_fsmStateTable 1800  
                         __size_of_LCDstr 0014                                   _ReadI2C 11F0  
                               ?_operADDR 013D                          _PWMOutputDisable 1102  
                                 _OpenI2C 10BD                  _parseEPROMInitialization 09C4  
                          ?_initializeREG 0070                                 ?_printLCD 0070  
                                 ___aodiv 0C4B                              ??i1_WriteI2C 0070  
                                 ___aomod 0B61                           __size_of___wmul 001F  
                               ?_vfprintf 0064                        __end_of_TMR2_Start 1051  
                              ??_WriteI2C 013D                                   __ptext1 1481  
                                 __ptext2 136B                                   __ptext3 09C4  
                                 __ptext4 1111                                   __ptext5 130F  
                                 __ptext6 16D0                                   __ptext7 129C  
                                 __ptext8 1087                                   __ptext9 1080  
          ??_TMR1_DefaultInterruptHandler 0070                           __size_of_strlen 001A  
                       ??_storeEPROMBuild 0149                                 _T1CONbits 020E  
                                 _counter 016D                     _OSCILLATOR_Initialize 10A7  
                               _T2CONbits 028E                              __size_of_abs 001A  
                            __size_of_pad 0056                                   _isdigit 11A5  
       __size_of_TMR1_SetInterruptHandler 0006                                   _minutes 012E  
                ??_PIN_MANAGER_Initialize 013D                                   _seconds 012D  
                                 _isspace 127B                 ?_TMR1_SetInterruptHandler 013D  
                               _T2HLTbits 028F                parseEPROMInitialization@RI 0142  
              parseEPROMInitialization@NR 0140                parseEPROMInitialization@WI 0141  
                                 atoi@neg 0020                  storeEPROMBuild@operation 0148  
                    __end_ofi1_LCDsend2x4 09C4                __size_of_SYSTEM_Initialize 0019  
                                 _sprintf 12C0                                   clrloop0 1066  
                    end_of_initialization 0030                                 _T2RSTbits 0291  
                              ??_readTC74 0072                           _writeRingBuffer 1579  
                 __end_of_initializeEPROM 175E                        __end_ofi1_WriteI2C 1432  
                                 fputc@fp 0072                         ??_PWMOutputEnable 0070  
                                 fputs@fp 0078                    _I2C1_DO_SEND_ADR_WRITE 0000  
                          i1LCDsend2x4@hc 0076                            i1LCDsend2x4@lc 0077  
                              ??_operADDR 013F                        i1_DATAEE_WriteByte 123E  
                 __end_of_I2C1_Initialize 10A7                    __size_of_activateAlarm 001A  
                             _I2C1_Status 01A0                         __end_of_vfpfcnvrt 06D2  
                              ??_printLCD 00B9                       ?i1_DATAEE_WriteByte 0070  
                        ?_ADCC_Initialize 0070                                ??_vfprintf 0067  
                             printLCD@buf 00C9          __end_of_ADCC_GetSingleConversion 1164  
               storeEPROMBuild@luminosity 0147                             _deactivatePWM 1080  
              _I2C1_DO_SEND_RESTART_WRITE 0000                                   strlen@a 0073  
                                 strlen@s 0074                                 _PORTAbits 000C  
                               _PORTBbits 000D                                 _PORTCbits 000E  
                               _TMR2_Stop 1054                   __size_of_timerInterrupt 01EA  
                               _TRISCbits 0013                       timerInterrupt@value 00EB  
                    ??i1_DATAEE_WriteByte 0073                  __end_of_DATAEE_WriteByte 12C0  
                       i1_deactivateAlarm 1079                             readTC74@value 0073  
                      ?i1_deactivateAlarm 0070                            __end_of_LCDcmd 1072  
                         ??_initializeREG 0141                            __end_of_LCDstr 1178  
                          LCDsend2x4@mode 013F                  __size_of_deactivateAlarm 0007  
                     ??i1_deactivateAlarm 0070                            ?_deactivatePWM 0070  
                             vfpfcnvrt@ap 004F                               vfpfcnvrt@fp 0063  
                             vfpfcnvrt@ll 0056                            __end_of___wmul 127B  
                          _I2C1_DO_RX_ACK 0000                         __size_of_TMR1_ISR 000E  
              storeEPROMBuild@temperature 0146                                ?_TMR2_Stop 0070  
                  ?_OSCILLATOR_Initialize 0070                            __end_of_strlen 123E  
                           _activateAlarm 11D6                       start_initialization 001A  
                 __end_of_writeRingBuffer 15DC           __size_of_PIN_MANAGER_Initialize 0045  
                             __end_of_abs 1224                               __end_of_pad 1579  
                          _TMR2_StopTimer 0801                 __end_ofi1_deactivateAlarm 1080  
                      i1_PWMOutputDisable 10F3                          WriteI2C@data_out 013E  
                                ??_LCDcmd 0078                                  ??_LCDstr 0079  
                        ?_initializeEPROM 0070                       ?i1_PWMOutputDisable 0070  
                     DATAEE_ReadByte@bAdd 013D                          ?_I2C1_Initialize 0070  
                          _max_luminosity 016F                  __size_of_TMR1_Initialize 0021  
                             vfprintf@fmt 0064                          ??_PMD_Initialize 013D  
                         _min_temperature 012A                                  ??___wmul 0074  
                  __size_of_TMR1_CallBack 000D                                  ??_strlen 0072  
                    ??i1_PWMOutputDisable 0070                         __size_of_WriteI2C 005A  
                   __size_ofi1_LCDsend2x4 00B6                  __end_of_PWMOutputDisable 1111  
                _ADCC_GetSingleConversion 1152                            ?_activateAlarm 0070  
                 i1DATAEE_WriteByte@bData 0072                           i1_deactivatePWM 1072  
                  __end_of_TMR2_StopTimer 0805                                  ?_LCDchar 0070  
                                ?_LCDbusy 0077                                  ?_LCDinit 0070  
                    _I2C1_DO_SEND_RESTART 0000                                  ?_LCDrecv 0070  
                                ?_LCDsend 0070                                 ___latbits 0002  
                           __pcstackBANK0 0020                             __pcstackBANK1 00A0  
                           __pcstackBANK2 013D                          ___aodiv@dividend 0028  
                      _PWM6_LoadDutyValue 1178                  __size_of_TMR2_Initialize 000E  
                      activateAlarm@alarm 0074                                  LCDchar@c 0078  
              ??_parseEPROMInitialization 014B                                  LCDsend@c 0140  
                     ?_PWM6_LoadDutyValue 0070                                  ?_ReadI2C 0070  
                               _atoi$3331 0022                                 _atoi$3332 0026  
                               _atoi$3333 0024                         __size_of_readTC74 010D  
                               __pnvBANK2 0159                                 __pnvBANK3 01DD  
                   _rd2RegCompleteHandler 0000                                  ?_OpenI2C 0070  
                  _PIN_MANAGER_Initialize 13A2                     _wr2RegCompleteHandler 0000  
                               _dtoa$3295 003B                 __size_ofi1_TMR2_StopTimer 0004  
                       __size_of_operADDR 0037                           _storeEPROMBuild 1481  
                           ??i1_TMR2_Stop 0070                           ??_deactivatePWM 013D  
        __end_of_TMR1_SetInterruptHandler 1065           ADCC_GetSingleConversion@channel 0072  
                                ?___aodiv 0020                                  ?___aomod 0020  
                        ___aodiv@quotient 0073                              i1_LCDsend2x4 090E  
                       ??_deactivateAlarm 013D                         __size_of_printLCD 00A2  
                    ??_PWM6_LoadDutyValue 0072              ??_INTERRUPT_InterruptManager 007E  
                             ??_TMR2_Stop 013D                         __size_of_vfprintf 0031  
                          _timerInterrupt 0316                                  ?_isdigit 0070  
                         ?_TMR2_StopTimer 0070                           _PWMOutputEnable 1120  
                                ?_isspace 0070                          ?_writeRingBuffer 0074  
                __size_of_PWM6_Initialize 000D                __size_ofi1_deactivateAlarm 0007  
                                ?_sprintf 00A0                            __size_of_fputc 004F  
                                _T2CLKCON 0290                            __size_of_fputs 0029  
                __size_of_DATAEE_ReadByte 000F                            __size_of_putch 0001  
                           _TMR1_CallBack 10B0                            ___wmul@product 0074  
                                _LATAbits 0016                                _I2C1_DO_RX 0000  
                              _I2C1_DO_TX 0000                                 clear_ram0 1065  
                                _PIE3bits 0719                                  _PIE4bits 071A  
                            _modification 0167                  __size_of_TMR2_StartTimer 0004  
                           i1LCDsend2x4@c 0075                                  u313_2lld 0C75  
                                u322_2lld 0D3A                                  u315_2lld 0CA0  
                                u332_2lld 0C39                                  u324_2lld 0B8B  
                __size_of_TMR1_WriteTimer 0011                                  u326_2lld 0BB6  
                                u350_2lld 0EDD       __size_of_INTERRUPT_InterruptManager 0014  
                                _PIR3bits 070F                                  _PIR4bits 0710  
                               _variable1 00EF                                 _variable2 00EE  
               _I2C1_DO_SEND_RESTART_READ 0000                                  _SSP1CON1 0190  
                                _SSP1CON2 0191                                  _TMR1_ISR 10D7  
                                _SSP1STAT 018F                   __end_ofi1_deactivatePWM 1079  
                               _vfpfcnvrt 0500                    __end_of_timerInterrupt 0500  
                            _tala_counter 012B                         ??_TMR1_Initialize 013F  
                         ??_activateAlarm 0074                                _ADCON0bits 0093  
                              _ADCON1bits 0094                                _ADCON2bits 0095  
                     __end_ofi1_TMR2_Stop 1054                                _ADCON3bits 0096  
                       ___wmul@multiplier 0070                        i1WriteI2C@data_out 0071  
               writeRingBuffer@luminosity 0074                          __size_of_LCDchar 0008  
                   DATAEE_WriteByte@bData 013F                          __size_of_LCDbusy 0011  
                        __size_of_LCDinit 0083                          __size_of_LCDrecv 0148  
                        __size_of_LCDsend 0053                              _isspace$3349 0074  
                           _I2C1_DO_RESET 0000                                vfpfcnvrt@c 0062  
                          ?_TMR1_CallBack 0070                         ?_DATAEE_WriteByte 013D  
                 __end_of_storeEPROMBuild 14D0                         ??_TMR2_Initialize 013D  
                      ??_DATAEE_WriteByte 0140                               _l_threshold 016B  
                        __size_of_ReadI2C 001A                                _ADSTATbits 0097  
                        __size_of_OpenI2C 000D                                vfprintf@ap 0066  
                              vfprintf@fp 0069                            _min_luminosity 012C  
                 ??_OSCILLATOR_Initialize 013D                          __size_of___aodiv 0101  
                        __size_of___aomod 00EA                   __end_of_PWMOutputEnable 1130  
                              ?_vfpfcnvrt 004E                                  _WriteI2C 0805  
                         ?_timerInterrupt 0070                           ___aodiv@divisor 0020  
                _TMR1_SetInterruptHandler 105F                          i1LCDsend2x4@mode 0072  
                         ___aodiv@counter 0071                     _TMR1_InterruptHandler 015F  
                              sprintf@fmt 00A0                  __size_of_ADCC_Initialize 0017  
                                _checksum 0130                          __size_of_isdigit 0018  
                        __size_of_isspace 0021                                  __ptext10 0801  
                                __ptext11 1054                                  __ptext20 10A7  
                                __ptext12 1102                                  __ptext21 109E  
                                __ptext13 11BD                                _T1GCONbits 020F  
                                __ptext30 1141                                  __ptext22 118E  
                                __ptext14 10E5                                  __ptext31 10B0  
                                __ptext23 10BD                                  __ptext15 07DF  
                                __ptext40 123E                                  __ptext32 0003  
                                __ptext24 164D                                  __ptext16 105F  
                                __ptext41 06D2                                  __ptext33 0316  
                                __ptext25 0A8A                                  __ptext17 10CA  
                                __ptext50 120A                                  __ptext42 175E  
                                __ptext34 1079                                  __ptext26 14D0  
                                __ptext18 1096                                  __ptext51 0B61  
                                __ptext43 12C0                                  __ptext35 1072  
                                __ptext27 0805                                  __ptext19 13A2  
                                __ptext60 1164                                  __ptext52 0C4B  
                                __ptext44 133A                                  __ptext36 105B  
                                __ptext61 108E                                  __ptext53 15DC  
                                __ptext45 0500                                  __ptext37 1051  
                                __ptext29 10D7                                  __ptext70 104E  
                                __ptext62 106B                                  __ptext54 1432  
                                __ptext46 0E94                                  __ptext38 10F3  
                                __ptext71 1120                                  __ptext63 090E  
                                __ptext55 0002                                  __ptext47 1523  
                                __ptext39 1579                                  __ptext72 1178  
                                __ptext64 1130                                  __ptext56 085F  
                                __ptext48 1224                                  __ptext73 1152  
                                __ptext65 0D4C                                  __ptext57 127B  
                                __ptext49 12E6                                  __ptext66 13E7  
                                __ptext58 11A5                                  __ptext67 11F0  
                                __ptext59 125C                                  __ptext68 11D6  
                                __ptext69 1057          __end_of_parseEPROMInitialization 0A8A  
                            _SSP1CON1bits 0190                              _SSP1CON2bits 0191  
             __size_ofi1_DATAEE_WriteByte 001E                          __size_of_sprintf 0026  
             DATAEE_WriteByte@GIEBitValue 0140                                  _readTC74 06D2  
                _I2C1_CallbackReturnReset 0000                         ??_PWM6_Initialize 013D  
                           __size_of_atoi 00AF                             __size_of_ctoa 0071  
                           __size_of_main 02E2                             __size_of_dtoa 016C  
                                _operADDR 136B                                  _minimode 0126  
                       ??_DATAEE_ReadByte 013F                     __end_of_initializeREG 133A  
                        i1_TMR2_StopTimer 105B                                  _printLCD 175E  
                             i1_TMR2_Stop 1051                ??_ADCC_GetSingleConversion 0072  
                                int$flags 007E                 timerInterrupt@temperature 00EA  
                                _vfprintf 133A                         ??_TMR2_StartTimer 0070  
      __end_of_INTERRUPT_InterruptManager 0018                _INTERRUPT_InterruptManager 0004  
                        ?i1_deactivatePWM 0070                              _SSP1STATbits 018F  
                       ??_TMR1_WriteTimer 0072                              _I2C1_DO_IDLE 0000  
                            _I2C1_DO_RCEN 0000                          ___aomod@dividend 0028  
                          _vfpfcnvrt$3310 0060                                _INTCONbits 000B  
                       ?_PWMOutputDisable 0070                               _NVMCON1bits 081E  
                                isdigit@c 0070                        ??_PWMOutputDisable 013D  
                         ??_TMR1_CallBack 007E                                _LCDsend2x4 0A8A  
        parseEPROMInitialization@checksum 014A                                  intlevel1 0000  
                               sprintf@ap 00B3                           _deactivateAlarm 1087  
                                isspace@c 0070                          ?_storeEPROMBuild 0144  
                 ?_PIN_MANAGER_Initialize 0070                               _PPSLOCKbits 0E8F  
                 _I2C1_CallbackReturnStop 0000                               _t_threshold 016C  
                    _I2C1_DO_ADDRESS_NACK 0000                  __size_of_initializeEPROM 008E  
                         ___aomod@divisor 0020                               ??_vfpfcnvrt 0050  
                        ??_TMR2_StopTimer 013D                           ___aomod@counter 0071  
                        ?_PWMOutputEnable 0070                  __size_of_I2C1_Initialize 0009  
                           __pstringtext1 1800                             __pstringtext2 1820  
                           __pstringtext3 183C                             __pstringtext4 0000  
                                sprintf@f 00B4                                  sprintf@s 00B2  
                        operADDR@dataAddr 0142               __size_ofi1_PWMOutputDisable 000F  
                              _SSP1DATPPS 0EC6                                _SSP1CLKPPS 0EC5  
             PWM6_LoadDutyValue@dutyValue 0070                                _TMR2_Start 104E  
                            ___aodiv@sign 0072            __end_of_PIN_MANAGER_Initialize 13E7  
                       ??_ADCC_Initialize 013D                              ___aomod@sign 0072  
                         _TMR1_Initialize 07DF                         operADDR@operation 0141  
