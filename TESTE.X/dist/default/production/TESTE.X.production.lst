

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Dec 14 11:22:23 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    33                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	intentry,global,class=CODE,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    65                           	dabs	1,0x7E,2
    66  0000                     
    67                           ; Version 2.35
    68                           ; Generated 13/04/2021 GMT
    69                           ; 
    70                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution. Publication is not required when
    84                           ;        this file is used in an embedded application.
    85                           ; 
    86                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    87                           ;        software without specific prior written permission.
    88                           ; 
    89                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    90                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    91                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    92                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    93                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    94                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    95                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    96                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    97                           ; 
    98                           ; 
    99                           ; Code-generator required, PIC16F18875 Definitions
   100                           ; 
   101                           ; SFR Addresses
   102  0000                     	;# 
   103  0001                     	;# 
   104  0002                     	;# 
   105  0003                     	;# 
   106  0004                     	;# 
   107  0005                     	;# 
   108  0006                     	;# 
   109  0007                     	;# 
   110  0008                     	;# 
   111  0009                     	;# 
   112  000A                     	;# 
   113  000B                     	;# 
   114  000C                     	;# 
   115  000D                     	;# 
   116  000E                     	;# 
   117  000F                     	;# 
   118  0010                     	;# 
   119  0011                     	;# 
   120  0012                     	;# 
   121  0013                     	;# 
   122  0014                     	;# 
   123  0015                     	;# 
   124  0016                     	;# 
   125  0017                     	;# 
   126  0018                     	;# 
   127  0019                     	;# 
   128  001A                     	;# 
   129  001C                     	;# 
   130  001C                     	;# 
   131  001D                     	;# 
   132  001D                     	;# 
   133  001E                     	;# 
   134  001F                     	;# 
   135  008C                     	;# 
   136  008C                     	;# 
   137  008D                     	;# 
   138  008E                     	;# 
   139  008E                     	;# 
   140  008F                     	;# 
   141  0090                     	;# 
   142  0090                     	;# 
   143  0091                     	;# 
   144  0093                     	;# 
   145  0094                     	;# 
   146  0095                     	;# 
   147  0096                     	;# 
   148  0097                     	;# 
   149  0098                     	;# 
   150  0099                     	;# 
   151  009A                     	;# 
   152  009B                     	;# 
   153  009C                     	;# 
   154  009D                     	;# 
   155  009E                     	;# 
   156  010C                     	;# 
   157  010D                     	;# 
   158  010E                     	;# 
   159  010E                     	;# 
   160  010F                     	;# 
   161  0110                     	;# 
   162  0110                     	;# 
   163  0111                     	;# 
   164  0112                     	;# 
   165  0112                     	;# 
   166  0113                     	;# 
   167  0114                     	;# 
   168  0114                     	;# 
   169  0115                     	;# 
   170  0116                     	;# 
   171  0116                     	;# 
   172  0117                     	;# 
   173  0119                     	;# 
   174  0119                     	;# 
   175  0119                     	;# 
   176  011A                     	;# 
   177  011A                     	;# 
   178  011A                     	;# 
   179  011B                     	;# 
   180  011B                     	;# 
   181  011B                     	;# 
   182  011B                     	;# 
   183  011B                     	;# 
   184  011C                     	;# 
   185  011C                     	;# 
   186  011C                     	;# 
   187  011D                     	;# 
   188  011D                     	;# 
   189  011D                     	;# 
   190  011E                     	;# 
   191  011E                     	;# 
   192  011E                     	;# 
   193  011F                     	;# 
   194  011F                     	;# 
   195  011F                     	;# 
   196  011F                     	;# 
   197  011F                     	;# 
   198  018C                     	;# 
   199  018D                     	;# 
   200  018E                     	;# 
   201  018F                     	;# 
   202  0190                     	;# 
   203  0191                     	;# 
   204  0192                     	;# 
   205  0196                     	;# 
   206  0197                     	;# 
   207  0198                     	;# 
   208  0199                     	;# 
   209  019A                     	;# 
   210  019B                     	;# 
   211  019C                     	;# 
   212  020C                     	;# 
   213  020C                     	;# 
   214  020D                     	;# 
   215  020E                     	;# 
   216  020F                     	;# 
   217  020F                     	;# 
   218  0210                     	;# 
   219  0210                     	;# 
   220  0211                     	;# 
   221  0211                     	;# 
   222  0212                     	;# 
   223  0212                     	;# 
   224  0213                     	;# 
   225  0214                     	;# 
   226  0215                     	;# 
   227  0215                     	;# 
   228  0216                     	;# 
   229  0216                     	;# 
   230  0217                     	;# 
   231  0217                     	;# 
   232  0218                     	;# 
   233  0218                     	;# 
   234  0219                     	;# 
   235  021A                     	;# 
   236  021B                     	;# 
   237  021B                     	;# 
   238  021C                     	;# 
   239  021C                     	;# 
   240  021D                     	;# 
   241  021D                     	;# 
   242  021E                     	;# 
   243  021F                     	;# 
   244  028C                     	;# 
   245  028C                     	;# 
   246  028D                     	;# 
   247  028D                     	;# 
   248  028E                     	;# 
   249  028F                     	;# 
   250  0290                     	;# 
   251  0290                     	;# 
   252  0291                     	;# 
   253  0292                     	;# 
   254  0292                     	;# 
   255  0293                     	;# 
   256  0293                     	;# 
   257  0294                     	;# 
   258  0295                     	;# 
   259  0296                     	;# 
   260  0296                     	;# 
   261  0297                     	;# 
   262  0298                     	;# 
   263  0298                     	;# 
   264  0299                     	;# 
   265  0299                     	;# 
   266  029A                     	;# 
   267  029B                     	;# 
   268  029C                     	;# 
   269  029C                     	;# 
   270  029D                     	;# 
   271  030C                     	;# 
   272  030C                     	;# 
   273  030D                     	;# 
   274  030E                     	;# 
   275  030F                     	;# 
   276  0310                     	;# 
   277  0310                     	;# 
   278  0311                     	;# 
   279  0312                     	;# 
   280  0313                     	;# 
   281  0314                     	;# 
   282  0314                     	;# 
   283  0315                     	;# 
   284  0316                     	;# 
   285  0317                     	;# 
   286  0318                     	;# 
   287  0318                     	;# 
   288  0319                     	;# 
   289  031A                     	;# 
   290  031B                     	;# 
   291  031C                     	;# 
   292  031C                     	;# 
   293  031D                     	;# 
   294  031E                     	;# 
   295  031F                     	;# 
   296  038C                     	;# 
   297  038C                     	;# 
   298  038D                     	;# 
   299  038E                     	;# 
   300  0390                     	;# 
   301  0390                     	;# 
   302  0391                     	;# 
   303  0392                     	;# 
   304  040C                     	;# 
   305  040D                     	;# 
   306  040E                     	;# 
   307  040F                     	;# 
   308  0410                     	;# 
   309  0411                     	;# 
   310  0416                     	;# 
   311  0416                     	;# 
   312  0417                     	;# 
   313  0418                     	;# 
   314  0418                     	;# 
   315  0419                     	;# 
   316  041A                     	;# 
   317  041A                     	;# 
   318  041B                     	;# 
   319  041C                     	;# 
   320  041C                     	;# 
   321  041D                     	;# 
   322  041E                     	;# 
   323  041F                     	;# 
   324  048C                     	;# 
   325  048C                     	;# 
   326  048D                     	;# 
   327  048E                     	;# 
   328  048F                     	;# 
   329  048F                     	;# 
   330  0490                     	;# 
   331  0491                     	;# 
   332  0492                     	;# 
   333  0492                     	;# 
   334  0493                     	;# 
   335  0494                     	;# 
   336  0495                     	;# 
   337  0495                     	;# 
   338  0496                     	;# 
   339  0497                     	;# 
   340  0498                     	;# 
   341  0499                     	;# 
   342  049A                     	;# 
   343  049B                     	;# 
   344  049C                     	;# 
   345  049D                     	;# 
   346  050C                     	;# 
   347  050C                     	;# 
   348  050D                     	;# 
   349  050E                     	;# 
   350  050F                     	;# 
   351  050F                     	;# 
   352  0510                     	;# 
   353  0511                     	;# 
   354  0512                     	;# 
   355  0512                     	;# 
   356  0513                     	;# 
   357  0514                     	;# 
   358  0515                     	;# 
   359  0515                     	;# 
   360  0516                     	;# 
   361  0517                     	;# 
   362  0518                     	;# 
   363  0519                     	;# 
   364  051A                     	;# 
   365  051B                     	;# 
   366  051C                     	;# 
   367  051D                     	;# 
   368  058C                     	;# 
   369  058C                     	;# 
   370  058D                     	;# 
   371  058E                     	;# 
   372  058F                     	;# 
   373  058F                     	;# 
   374  0590                     	;# 
   375  0591                     	;# 
   376  0592                     	;# 
   377  0593                     	;# 
   378  060C                     	;# 
   379  060D                     	;# 
   380  060E                     	;# 
   381  060F                     	;# 
   382  0610                     	;# 
   383  0611                     	;# 
   384  0612                     	;# 
   385  0613                     	;# 
   386  0614                     	;# 
   387  0616                     	;# 
   388  0617                     	;# 
   389  0618                     	;# 
   390  0619                     	;# 
   391  061A                     	;# 
   392  061B                     	;# 
   393  061C                     	;# 
   394  061D                     	;# 
   395  061E                     	;# 
   396  068C                     	;# 
   397  068D                     	;# 
   398  068E                     	;# 
   399  068F                     	;# 
   400  0690                     	;# 
   401  0691                     	;# 
   402  0692                     	;# 
   403  0693                     	;# 
   404  0694                     	;# 
   405  070C                     	;# 
   406  070D                     	;# 
   407  070E                     	;# 
   408  070F                     	;# 
   409  0710                     	;# 
   410  0711                     	;# 
   411  0712                     	;# 
   412  0713                     	;# 
   413  0714                     	;# 
   414  0716                     	;# 
   415  0717                     	;# 
   416  0718                     	;# 
   417  0719                     	;# 
   418  071A                     	;# 
   419  071B                     	;# 
   420  071C                     	;# 
   421  071D                     	;# 
   422  071E                     	;# 
   423  0796                     	;# 
   424  0797                     	;# 
   425  0798                     	;# 
   426  0799                     	;# 
   427  079A                     	;# 
   428  079B                     	;# 
   429  080C                     	;# 
   430  080D                     	;# 
   431  080E                     	;# 
   432  080F                     	;# 
   433  0810                     	;# 
   434  0811                     	;# 
   435  0812                     	;# 
   436  0813                     	;# 
   437  0814                     	;# 
   438  081A                     	;# 
   439  081B                     	;# 
   440  081C                     	;# 
   441  081D                     	;# 
   442  081E                     	;# 
   443  081F                     	;# 
   444  088C                     	;# 
   445  088D                     	;# 
   446  088E                     	;# 
   447  088F                     	;# 
   448  0890                     	;# 
   449  0891                     	;# 
   450  0892                     	;# 
   451  0893                     	;# 
   452  0895                     	;# 
   453  0896                     	;# 
   454  0897                     	;# 
   455  0898                     	;# 
   456  0899                     	;# 
   457  089A                     	;# 
   458  089B                     	;# 
   459  090C                     	;# 
   460  090E                     	;# 
   461  090F                     	;# 
   462  091F                     	;# 
   463  091F                     	;# 
   464  098F                     	;# 
   465  098F                     	;# 
   466  0990                     	;# 
   467  0991                     	;# 
   468  0992                     	;# 
   469  0993                     	;# 
   470  0994                     	;# 
   471  0995                     	;# 
   472  0996                     	;# 
   473  0997                     	;# 
   474  0E0F                     	;# 
   475  0E10                     	;# 
   476  0E11                     	;# 
   477  0E12                     	;# 
   478  0E13                     	;# 
   479  0E14                     	;# 
   480  0E15                     	;# 
   481  0E16                     	;# 
   482  0E17                     	;# 
   483  0E18                     	;# 
   484  0E19                     	;# 
   485  0E1A                     	;# 
   486  0E1B                     	;# 
   487  0E1C                     	;# 
   488  0E1D                     	;# 
   489  0E1E                     	;# 
   490  0E1F                     	;# 
   491  0E20                     	;# 
   492  0E21                     	;# 
   493  0E22                     	;# 
   494  0E23                     	;# 
   495  0E24                     	;# 
   496  0E25                     	;# 
   497  0E26                     	;# 
   498  0E27                     	;# 
   499  0E28                     	;# 
   500  0E29                     	;# 
   501  0E2A                     	;# 
   502  0E2B                     	;# 
   503  0E2C                     	;# 
   504  0E2D                     	;# 
   505  0E2E                     	;# 
   506  0E2F                     	;# 
   507  0E30                     	;# 
   508  0E31                     	;# 
   509  0E32                     	;# 
   510  0E33                     	;# 
   511  0E34                     	;# 
   512  0E35                     	;# 
   513  0E36                     	;# 
   514  0E37                     	;# 
   515  0E8F                     	;# 
   516  0E90                     	;# 
   517  0E91                     	;# 
   518  0E92                     	;# 
   519  0E93                     	;# 
   520  0E94                     	;# 
   521  0E95                     	;# 
   522  0E96                     	;# 
   523  0E97                     	;# 
   524  0E9C                     	;# 
   525  0E9D                     	;# 
   526  0E9E                     	;# 
   527  0EA1                     	;# 
   528  0EA2                     	;# 
   529  0EA3                     	;# 
   530  0EA4                     	;# 
   531  0EA5                     	;# 
   532  0EA9                     	;# 
   533  0EAA                     	;# 
   534  0EAB                     	;# 
   535  0EAC                     	;# 
   536  0EB1                     	;# 
   537  0EB2                     	;# 
   538  0EB3                     	;# 
   539  0EB8                     	;# 
   540  0EB9                     	;# 
   541  0EBA                     	;# 
   542  0EBB                     	;# 
   543  0EBC                     	;# 
   544  0EBD                     	;# 
   545  0EBE                     	;# 
   546  0EC3                     	;# 
   547  0EC5                     	;# 
   548  0EC6                     	;# 
   549  0EC7                     	;# 
   550  0EC8                     	;# 
   551  0EC9                     	;# 
   552  0ECA                     	;# 
   553  0ECB                     	;# 
   554  0ECC                     	;# 
   555  0F10                     	;# 
   556  0F11                     	;# 
   557  0F12                     	;# 
   558  0F13                     	;# 
   559  0F14                     	;# 
   560  0F15                     	;# 
   561  0F16                     	;# 
   562  0F17                     	;# 
   563  0F18                     	;# 
   564  0F19                     	;# 
   565  0F1A                     	;# 
   566  0F1B                     	;# 
   567  0F1C                     	;# 
   568  0F1D                     	;# 
   569  0F1E                     	;# 
   570  0F1F                     	;# 
   571  0F20                     	;# 
   572  0F21                     	;# 
   573  0F22                     	;# 
   574  0F23                     	;# 
   575  0F24                     	;# 
   576  0F25                     	;# 
   577  0F26                     	;# 
   578  0F27                     	;# 
   579  0F28                     	;# 
   580  0F29                     	;# 
   581  0F2A                     	;# 
   582  0F2B                     	;# 
   583  0F2C                     	;# 
   584  0F2D                     	;# 
   585  0F2E                     	;# 
   586  0F2F                     	;# 
   587  0F30                     	;# 
   588  0F31                     	;# 
   589  0F32                     	;# 
   590  0F38                     	;# 
   591  0F39                     	;# 
   592  0F3A                     	;# 
   593  0F3B                     	;# 
   594  0F3C                     	;# 
   595  0F3D                     	;# 
   596  0F3E                     	;# 
   597  0F3F                     	;# 
   598  0F40                     	;# 
   599  0F41                     	;# 
   600  0F43                     	;# 
   601  0F44                     	;# 
   602  0F45                     	;# 
   603  0F46                     	;# 
   604  0F47                     	;# 
   605  0F48                     	;# 
   606  0F49                     	;# 
   607  0F4A                     	;# 
   608  0F4B                     	;# 
   609  0F4C                     	;# 
   610  0F4E                     	;# 
   611  0F4F                     	;# 
   612  0F50                     	;# 
   613  0F51                     	;# 
   614  0F52                     	;# 
   615  0F53                     	;# 
   616  0F54                     	;# 
   617  0F55                     	;# 
   618  0F56                     	;# 
   619  0F57                     	;# 
   620  0F59                     	;# 
   621  0F5A                     	;# 
   622  0F5B                     	;# 
   623  0F5C                     	;# 
   624  0F5D                     	;# 
   625  0F61                     	;# 
   626  0F62                     	;# 
   627  0F64                     	;# 
   628  0F65                     	;# 
   629  0F66                     	;# 
   630  0F67                     	;# 
   631  0F68                     	;# 
   632  0F69                     	;# 
   633  0F6A                     	;# 
   634  0F6B                     	;# 
   635  0F6C                     	;# 
   636  0F6D                     	;# 
   637  0FE4                     	;# 
   638  0FE5                     	;# 
   639  0FE6                     	;# 
   640  0FE7                     	;# 
   641  0FE8                     	;# 
   642  0FE9                     	;# 
   643  0FEA                     	;# 
   644  0FEB                     	;# 
   645  0FED                     	;# 
   646  0FEE                     	;# 
   647  0FEF                     	;# 
   648  0000                     	;# 
   649  0001                     	;# 
   650  0002                     	;# 
   651  0003                     	;# 
   652  0004                     	;# 
   653  0005                     	;# 
   654  0006                     	;# 
   655  0007                     	;# 
   656  0008                     	;# 
   657  0009                     	;# 
   658  000A                     	;# 
   659  000B                     	;# 
   660  000C                     	;# 
   661  000D                     	;# 
   662  000E                     	;# 
   663  000F                     	;# 
   664  0010                     	;# 
   665  0011                     	;# 
   666  0012                     	;# 
   667  0013                     	;# 
   668  0014                     	;# 
   669  0015                     	;# 
   670  0016                     	;# 
   671  0017                     	;# 
   672  0018                     	;# 
   673  0019                     	;# 
   674  001A                     	;# 
   675  001C                     	;# 
   676  001C                     	;# 
   677  001D                     	;# 
   678  001D                     	;# 
   679  001E                     	;# 
   680  001F                     	;# 
   681  008C                     	;# 
   682  008C                     	;# 
   683  008D                     	;# 
   684  008E                     	;# 
   685  008E                     	;# 
   686  008F                     	;# 
   687  0090                     	;# 
   688  0090                     	;# 
   689  0091                     	;# 
   690  0093                     	;# 
   691  0094                     	;# 
   692  0095                     	;# 
   693  0096                     	;# 
   694  0097                     	;# 
   695  0098                     	;# 
   696  0099                     	;# 
   697  009A                     	;# 
   698  009B                     	;# 
   699  009C                     	;# 
   700  009D                     	;# 
   701  009E                     	;# 
   702  010C                     	;# 
   703  010D                     	;# 
   704  010E                     	;# 
   705  010E                     	;# 
   706  010F                     	;# 
   707  0110                     	;# 
   708  0110                     	;# 
   709  0111                     	;# 
   710  0112                     	;# 
   711  0112                     	;# 
   712  0113                     	;# 
   713  0114                     	;# 
   714  0114                     	;# 
   715  0115                     	;# 
   716  0116                     	;# 
   717  0116                     	;# 
   718  0117                     	;# 
   719  0119                     	;# 
   720  0119                     	;# 
   721  0119                     	;# 
   722  011A                     	;# 
   723  011A                     	;# 
   724  011A                     	;# 
   725  011B                     	;# 
   726  011B                     	;# 
   727  011B                     	;# 
   728  011B                     	;# 
   729  011B                     	;# 
   730  011C                     	;# 
   731  011C                     	;# 
   732  011C                     	;# 
   733  011D                     	;# 
   734  011D                     	;# 
   735  011D                     	;# 
   736  011E                     	;# 
   737  011E                     	;# 
   738  011E                     	;# 
   739  011F                     	;# 
   740  011F                     	;# 
   741  011F                     	;# 
   742  011F                     	;# 
   743  011F                     	;# 
   744  018C                     	;# 
   745  018D                     	;# 
   746  018E                     	;# 
   747  018F                     	;# 
   748  0190                     	;# 
   749  0191                     	;# 
   750  0192                     	;# 
   751  0196                     	;# 
   752  0197                     	;# 
   753  0198                     	;# 
   754  0199                     	;# 
   755  019A                     	;# 
   756  019B                     	;# 
   757  019C                     	;# 
   758  020C                     	;# 
   759  020C                     	;# 
   760  020D                     	;# 
   761  020E                     	;# 
   762  020F                     	;# 
   763  020F                     	;# 
   764  0210                     	;# 
   765  0210                     	;# 
   766  0211                     	;# 
   767  0211                     	;# 
   768  0212                     	;# 
   769  0212                     	;# 
   770  0213                     	;# 
   771  0214                     	;# 
   772  0215                     	;# 
   773  0215                     	;# 
   774  0216                     	;# 
   775  0216                     	;# 
   776  0217                     	;# 
   777  0217                     	;# 
   778  0218                     	;# 
   779  0218                     	;# 
   780  0219                     	;# 
   781  021A                     	;# 
   782  021B                     	;# 
   783  021B                     	;# 
   784  021C                     	;# 
   785  021C                     	;# 
   786  021D                     	;# 
   787  021D                     	;# 
   788  021E                     	;# 
   789  021F                     	;# 
   790  028C                     	;# 
   791  028C                     	;# 
   792  028D                     	;# 
   793  028D                     	;# 
   794  028E                     	;# 
   795  028F                     	;# 
   796  0290                     	;# 
   797  0290                     	;# 
   798  0291                     	;# 
   799  0292                     	;# 
   800  0292                     	;# 
   801  0293                     	;# 
   802  0293                     	;# 
   803  0294                     	;# 
   804  0295                     	;# 
   805  0296                     	;# 
   806  0296                     	;# 
   807  0297                     	;# 
   808  0298                     	;# 
   809  0298                     	;# 
   810  0299                     	;# 
   811  0299                     	;# 
   812  029A                     	;# 
   813  029B                     	;# 
   814  029C                     	;# 
   815  029C                     	;# 
   816  029D                     	;# 
   817  030C                     	;# 
   818  030C                     	;# 
   819  030D                     	;# 
   820  030E                     	;# 
   821  030F                     	;# 
   822  0310                     	;# 
   823  0310                     	;# 
   824  0311                     	;# 
   825  0312                     	;# 
   826  0313                     	;# 
   827  0314                     	;# 
   828  0314                     	;# 
   829  0315                     	;# 
   830  0316                     	;# 
   831  0317                     	;# 
   832  0318                     	;# 
   833  0318                     	;# 
   834  0319                     	;# 
   835  031A                     	;# 
   836  031B                     	;# 
   837  031C                     	;# 
   838  031C                     	;# 
   839  031D                     	;# 
   840  031E                     	;# 
   841  031F                     	;# 
   842  038C                     	;# 
   843  038C                     	;# 
   844  038D                     	;# 
   845  038E                     	;# 
   846  0390                     	;# 
   847  0390                     	;# 
   848  0391                     	;# 
   849  0392                     	;# 
   850  040C                     	;# 
   851  040D                     	;# 
   852  040E                     	;# 
   853  040F                     	;# 
   854  0410                     	;# 
   855  0411                     	;# 
   856  0416                     	;# 
   857  0416                     	;# 
   858  0417                     	;# 
   859  0418                     	;# 
   860  0418                     	;# 
   861  0419                     	;# 
   862  041A                     	;# 
   863  041A                     	;# 
   864  041B                     	;# 
   865  041C                     	;# 
   866  041C                     	;# 
   867  041D                     	;# 
   868  041E                     	;# 
   869  041F                     	;# 
   870  048C                     	;# 
   871  048C                     	;# 
   872  048D                     	;# 
   873  048E                     	;# 
   874  048F                     	;# 
   875  048F                     	;# 
   876  0490                     	;# 
   877  0491                     	;# 
   878  0492                     	;# 
   879  0492                     	;# 
   880  0493                     	;# 
   881  0494                     	;# 
   882  0495                     	;# 
   883  0495                     	;# 
   884  0496                     	;# 
   885  0497                     	;# 
   886  0498                     	;# 
   887  0499                     	;# 
   888  049A                     	;# 
   889  049B                     	;# 
   890  049C                     	;# 
   891  049D                     	;# 
   892  050C                     	;# 
   893  050C                     	;# 
   894  050D                     	;# 
   895  050E                     	;# 
   896  050F                     	;# 
   897  050F                     	;# 
   898  0510                     	;# 
   899  0511                     	;# 
   900  0512                     	;# 
   901  0512                     	;# 
   902  0513                     	;# 
   903  0514                     	;# 
   904  0515                     	;# 
   905  0515                     	;# 
   906  0516                     	;# 
   907  0517                     	;# 
   908  0518                     	;# 
   909  0519                     	;# 
   910  051A                     	;# 
   911  051B                     	;# 
   912  051C                     	;# 
   913  051D                     	;# 
   914  058C                     	;# 
   915  058C                     	;# 
   916  058D                     	;# 
   917  058E                     	;# 
   918  058F                     	;# 
   919  058F                     	;# 
   920  0590                     	;# 
   921  0591                     	;# 
   922  0592                     	;# 
   923  0593                     	;# 
   924  060C                     	;# 
   925  060D                     	;# 
   926  060E                     	;# 
   927  060F                     	;# 
   928  0610                     	;# 
   929  0611                     	;# 
   930  0612                     	;# 
   931  0613                     	;# 
   932  0614                     	;# 
   933  0616                     	;# 
   934  0617                     	;# 
   935  0618                     	;# 
   936  0619                     	;# 
   937  061A                     	;# 
   938  061B                     	;# 
   939  061C                     	;# 
   940  061D                     	;# 
   941  061E                     	;# 
   942  068C                     	;# 
   943  068D                     	;# 
   944  068E                     	;# 
   945  068F                     	;# 
   946  0690                     	;# 
   947  0691                     	;# 
   948  0692                     	;# 
   949  0693                     	;# 
   950  0694                     	;# 
   951  070C                     	;# 
   952  070D                     	;# 
   953  070E                     	;# 
   954  070F                     	;# 
   955  0710                     	;# 
   956  0711                     	;# 
   957  0712                     	;# 
   958  0713                     	;# 
   959  0714                     	;# 
   960  0716                     	;# 
   961  0717                     	;# 
   962  0718                     	;# 
   963  0719                     	;# 
   964  071A                     	;# 
   965  071B                     	;# 
   966  071C                     	;# 
   967  071D                     	;# 
   968  071E                     	;# 
   969  0796                     	;# 
   970  0797                     	;# 
   971  0798                     	;# 
   972  0799                     	;# 
   973  079A                     	;# 
   974  079B                     	;# 
   975  080C                     	;# 
   976  080D                     	;# 
   977  080E                     	;# 
   978  080F                     	;# 
   979  0810                     	;# 
   980  0811                     	;# 
   981  0812                     	;# 
   982  0813                     	;# 
   983  0814                     	;# 
   984  081A                     	;# 
   985  081B                     	;# 
   986  081C                     	;# 
   987  081D                     	;# 
   988  081E                     	;# 
   989  081F                     	;# 
   990  088C                     	;# 
   991  088D                     	;# 
   992  088E                     	;# 
   993  088F                     	;# 
   994  0890                     	;# 
   995  0891                     	;# 
   996  0892                     	;# 
   997  0893                     	;# 
   998  0895                     	;# 
   999  0896                     	;# 
  1000  0897                     	;# 
  1001  0898                     	;# 
  1002  0899                     	;# 
  1003  089A                     	;# 
  1004  089B                     	;# 
  1005  090C                     	;# 
  1006  090E                     	;# 
  1007  090F                     	;# 
  1008  091F                     	;# 
  1009  091F                     	;# 
  1010  098F                     	;# 
  1011  098F                     	;# 
  1012  0990                     	;# 
  1013  0991                     	;# 
  1014  0992                     	;# 
  1015  0993                     	;# 
  1016  0994                     	;# 
  1017  0995                     	;# 
  1018  0996                     	;# 
  1019  0997                     	;# 
  1020  0E0F                     	;# 
  1021  0E10                     	;# 
  1022  0E11                     	;# 
  1023  0E12                     	;# 
  1024  0E13                     	;# 
  1025  0E14                     	;# 
  1026  0E15                     	;# 
  1027  0E16                     	;# 
  1028  0E17                     	;# 
  1029  0E18                     	;# 
  1030  0E19                     	;# 
  1031  0E1A                     	;# 
  1032  0E1B                     	;# 
  1033  0E1C                     	;# 
  1034  0E1D                     	;# 
  1035  0E1E                     	;# 
  1036  0E1F                     	;# 
  1037  0E20                     	;# 
  1038  0E21                     	;# 
  1039  0E22                     	;# 
  1040  0E23                     	;# 
  1041  0E24                     	;# 
  1042  0E25                     	;# 
  1043  0E26                     	;# 
  1044  0E27                     	;# 
  1045  0E28                     	;# 
  1046  0E29                     	;# 
  1047  0E2A                     	;# 
  1048  0E2B                     	;# 
  1049  0E2C                     	;# 
  1050  0E2D                     	;# 
  1051  0E2E                     	;# 
  1052  0E2F                     	;# 
  1053  0E30                     	;# 
  1054  0E31                     	;# 
  1055  0E32                     	;# 
  1056  0E33                     	;# 
  1057  0E34                     	;# 
  1058  0E35                     	;# 
  1059  0E36                     	;# 
  1060  0E37                     	;# 
  1061  0E8F                     	;# 
  1062  0E90                     	;# 
  1063  0E91                     	;# 
  1064  0E92                     	;# 
  1065  0E93                     	;# 
  1066  0E94                     	;# 
  1067  0E95                     	;# 
  1068  0E96                     	;# 
  1069  0E97                     	;# 
  1070  0E9C                     	;# 
  1071  0E9D                     	;# 
  1072  0E9E                     	;# 
  1073  0EA1                     	;# 
  1074  0EA2                     	;# 
  1075  0EA3                     	;# 
  1076  0EA4                     	;# 
  1077  0EA5                     	;# 
  1078  0EA9                     	;# 
  1079  0EAA                     	;# 
  1080  0EAB                     	;# 
  1081  0EAC                     	;# 
  1082  0EB1                     	;# 
  1083  0EB2                     	;# 
  1084  0EB3                     	;# 
  1085  0EB8                     	;# 
  1086  0EB9                     	;# 
  1087  0EBA                     	;# 
  1088  0EBB                     	;# 
  1089  0EBC                     	;# 
  1090  0EBD                     	;# 
  1091  0EBE                     	;# 
  1092  0EC3                     	;# 
  1093  0EC5                     	;# 
  1094  0EC6                     	;# 
  1095  0EC7                     	;# 
  1096  0EC8                     	;# 
  1097  0EC9                     	;# 
  1098  0ECA                     	;# 
  1099  0ECB                     	;# 
  1100  0ECC                     	;# 
  1101  0F10                     	;# 
  1102  0F11                     	;# 
  1103  0F12                     	;# 
  1104  0F13                     	;# 
  1105  0F14                     	;# 
  1106  0F15                     	;# 
  1107  0F16                     	;# 
  1108  0F17                     	;# 
  1109  0F18                     	;# 
  1110  0F19                     	;# 
  1111  0F1A                     	;# 
  1112  0F1B                     	;# 
  1113  0F1C                     	;# 
  1114  0F1D                     	;# 
  1115  0F1E                     	;# 
  1116  0F1F                     	;# 
  1117  0F20                     	;# 
  1118  0F21                     	;# 
  1119  0F22                     	;# 
  1120  0F23                     	;# 
  1121  0F24                     	;# 
  1122  0F25                     	;# 
  1123  0F26                     	;# 
  1124  0F27                     	;# 
  1125  0F28                     	;# 
  1126  0F29                     	;# 
  1127  0F2A                     	;# 
  1128  0F2B                     	;# 
  1129  0F2C                     	;# 
  1130  0F2D                     	;# 
  1131  0F2E                     	;# 
  1132  0F2F                     	;# 
  1133  0F30                     	;# 
  1134  0F31                     	;# 
  1135  0F32                     	;# 
  1136  0F38                     	;# 
  1137  0F39                     	;# 
  1138  0F3A                     	;# 
  1139  0F3B                     	;# 
  1140  0F3C                     	;# 
  1141  0F3D                     	;# 
  1142  0F3E                     	;# 
  1143  0F3F                     	;# 
  1144  0F40                     	;# 
  1145  0F41                     	;# 
  1146  0F43                     	;# 
  1147  0F44                     	;# 
  1148  0F45                     	;# 
  1149  0F46                     	;# 
  1150  0F47                     	;# 
  1151  0F48                     	;# 
  1152  0F49                     	;# 
  1153  0F4A                     	;# 
  1154  0F4B                     	;# 
  1155  0F4C                     	;# 
  1156  0F4E                     	;# 
  1157  0F4F                     	;# 
  1158  0F50                     	;# 
  1159  0F51                     	;# 
  1160  0F52                     	;# 
  1161  0F53                     	;# 
  1162  0F54                     	;# 
  1163  0F55                     	;# 
  1164  0F56                     	;# 
  1165  0F57                     	;# 
  1166  0F59                     	;# 
  1167  0F5A                     	;# 
  1168  0F5B                     	;# 
  1169  0F5C                     	;# 
  1170  0F5D                     	;# 
  1171  0F61                     	;# 
  1172  0F62                     	;# 
  1173  0F64                     	;# 
  1174  0F65                     	;# 
  1175  0F66                     	;# 
  1176  0F67                     	;# 
  1177  0F68                     	;# 
  1178  0F69                     	;# 
  1179  0F6A                     	;# 
  1180  0F6B                     	;# 
  1181  0F6C                     	;# 
  1182  0F6D                     	;# 
  1183  0FE4                     	;# 
  1184  0FE5                     	;# 
  1185  0FE6                     	;# 
  1186  0FE7                     	;# 
  1187  0FE8                     	;# 
  1188  0FE9                     	;# 
  1189  0FEA                     	;# 
  1190  0FEB                     	;# 
  1191  0FED                     	;# 
  1192  0FEE                     	;# 
  1193  0FEF                     	;# 
  1194  0000                     	;# 
  1195  0001                     	;# 
  1196  0002                     	;# 
  1197  0003                     	;# 
  1198  0004                     	;# 
  1199  0005                     	;# 
  1200  0006                     	;# 
  1201  0007                     	;# 
  1202  0008                     	;# 
  1203  0009                     	;# 
  1204  000A                     	;# 
  1205  000B                     	;# 
  1206  000C                     	;# 
  1207  000D                     	;# 
  1208  000E                     	;# 
  1209  000F                     	;# 
  1210  0010                     	;# 
  1211  0011                     	;# 
  1212  0012                     	;# 
  1213  0013                     	;# 
  1214  0014                     	;# 
  1215  0015                     	;# 
  1216  0016                     	;# 
  1217  0017                     	;# 
  1218  0018                     	;# 
  1219  0019                     	;# 
  1220  001A                     	;# 
  1221  001C                     	;# 
  1222  001C                     	;# 
  1223  001D                     	;# 
  1224  001D                     	;# 
  1225  001E                     	;# 
  1226  001F                     	;# 
  1227  008C                     	;# 
  1228  008C                     	;# 
  1229  008D                     	;# 
  1230  008E                     	;# 
  1231  008E                     	;# 
  1232  008F                     	;# 
  1233  0090                     	;# 
  1234  0090                     	;# 
  1235  0091                     	;# 
  1236  0093                     	;# 
  1237  0094                     	;# 
  1238  0095                     	;# 
  1239  0096                     	;# 
  1240  0097                     	;# 
  1241  0098                     	;# 
  1242  0099                     	;# 
  1243  009A                     	;# 
  1244  009B                     	;# 
  1245  009C                     	;# 
  1246  009D                     	;# 
  1247  009E                     	;# 
  1248  010C                     	;# 
  1249  010D                     	;# 
  1250  010E                     	;# 
  1251  010E                     	;# 
  1252  010F                     	;# 
  1253  0110                     	;# 
  1254  0110                     	;# 
  1255  0111                     	;# 
  1256  0112                     	;# 
  1257  0112                     	;# 
  1258  0113                     	;# 
  1259  0114                     	;# 
  1260  0114                     	;# 
  1261  0115                     	;# 
  1262  0116                     	;# 
  1263  0116                     	;# 
  1264  0117                     	;# 
  1265  0119                     	;# 
  1266  0119                     	;# 
  1267  0119                     	;# 
  1268  011A                     	;# 
  1269  011A                     	;# 
  1270  011A                     	;# 
  1271  011B                     	;# 
  1272  011B                     	;# 
  1273  011B                     	;# 
  1274  011B                     	;# 
  1275  011B                     	;# 
  1276  011C                     	;# 
  1277  011C                     	;# 
  1278  011C                     	;# 
  1279  011D                     	;# 
  1280  011D                     	;# 
  1281  011D                     	;# 
  1282  011E                     	;# 
  1283  011E                     	;# 
  1284  011E                     	;# 
  1285  011F                     	;# 
  1286  011F                     	;# 
  1287  011F                     	;# 
  1288  011F                     	;# 
  1289  011F                     	;# 
  1290  018C                     	;# 
  1291  018D                     	;# 
  1292  018E                     	;# 
  1293  018F                     	;# 
  1294  0190                     	;# 
  1295  0191                     	;# 
  1296  0192                     	;# 
  1297  0196                     	;# 
  1298  0197                     	;# 
  1299  0198                     	;# 
  1300  0199                     	;# 
  1301  019A                     	;# 
  1302  019B                     	;# 
  1303  019C                     	;# 
  1304  020C                     	;# 
  1305  020C                     	;# 
  1306  020D                     	;# 
  1307  020E                     	;# 
  1308  020F                     	;# 
  1309  020F                     	;# 
  1310  0210                     	;# 
  1311  0210                     	;# 
  1312  0211                     	;# 
  1313  0211                     	;# 
  1314  0212                     	;# 
  1315  0212                     	;# 
  1316  0213                     	;# 
  1317  0214                     	;# 
  1318  0215                     	;# 
  1319  0215                     	;# 
  1320  0216                     	;# 
  1321  0216                     	;# 
  1322  0217                     	;# 
  1323  0217                     	;# 
  1324  0218                     	;# 
  1325  0218                     	;# 
  1326  0219                     	;# 
  1327  021A                     	;# 
  1328  021B                     	;# 
  1329  021B                     	;# 
  1330  021C                     	;# 
  1331  021C                     	;# 
  1332  021D                     	;# 
  1333  021D                     	;# 
  1334  021E                     	;# 
  1335  021F                     	;# 
  1336  028C                     	;# 
  1337  028C                     	;# 
  1338  028D                     	;# 
  1339  028D                     	;# 
  1340  028E                     	;# 
  1341  028F                     	;# 
  1342  0290                     	;# 
  1343  0290                     	;# 
  1344  0291                     	;# 
  1345  0292                     	;# 
  1346  0292                     	;# 
  1347  0293                     	;# 
  1348  0293                     	;# 
  1349  0294                     	;# 
  1350  0295                     	;# 
  1351  0296                     	;# 
  1352  0296                     	;# 
  1353  0297                     	;# 
  1354  0298                     	;# 
  1355  0298                     	;# 
  1356  0299                     	;# 
  1357  0299                     	;# 
  1358  029A                     	;# 
  1359  029B                     	;# 
  1360  029C                     	;# 
  1361  029C                     	;# 
  1362  029D                     	;# 
  1363  030C                     	;# 
  1364  030C                     	;# 
  1365  030D                     	;# 
  1366  030E                     	;# 
  1367  030F                     	;# 
  1368  0310                     	;# 
  1369  0310                     	;# 
  1370  0311                     	;# 
  1371  0312                     	;# 
  1372  0313                     	;# 
  1373  0314                     	;# 
  1374  0314                     	;# 
  1375  0315                     	;# 
  1376  0316                     	;# 
  1377  0317                     	;# 
  1378  0318                     	;# 
  1379  0318                     	;# 
  1380  0319                     	;# 
  1381  031A                     	;# 
  1382  031B                     	;# 
  1383  031C                     	;# 
  1384  031C                     	;# 
  1385  031D                     	;# 
  1386  031E                     	;# 
  1387  031F                     	;# 
  1388  038C                     	;# 
  1389  038C                     	;# 
  1390  038D                     	;# 
  1391  038E                     	;# 
  1392  0390                     	;# 
  1393  0390                     	;# 
  1394  0391                     	;# 
  1395  0392                     	;# 
  1396  040C                     	;# 
  1397  040D                     	;# 
  1398  040E                     	;# 
  1399  040F                     	;# 
  1400  0410                     	;# 
  1401  0411                     	;# 
  1402  0416                     	;# 
  1403  0416                     	;# 
  1404  0417                     	;# 
  1405  0418                     	;# 
  1406  0418                     	;# 
  1407  0419                     	;# 
  1408  041A                     	;# 
  1409  041A                     	;# 
  1410  041B                     	;# 
  1411  041C                     	;# 
  1412  041C                     	;# 
  1413  041D                     	;# 
  1414  041E                     	;# 
  1415  041F                     	;# 
  1416  048C                     	;# 
  1417  048C                     	;# 
  1418  048D                     	;# 
  1419  048E                     	;# 
  1420  048F                     	;# 
  1421  048F                     	;# 
  1422  0490                     	;# 
  1423  0491                     	;# 
  1424  0492                     	;# 
  1425  0492                     	;# 
  1426  0493                     	;# 
  1427  0494                     	;# 
  1428  0495                     	;# 
  1429  0495                     	;# 
  1430  0496                     	;# 
  1431  0497                     	;# 
  1432  0498                     	;# 
  1433  0499                     	;# 
  1434  049A                     	;# 
  1435  049B                     	;# 
  1436  049C                     	;# 
  1437  049D                     	;# 
  1438  050C                     	;# 
  1439  050C                     	;# 
  1440  050D                     	;# 
  1441  050E                     	;# 
  1442  050F                     	;# 
  1443  050F                     	;# 
  1444  0510                     	;# 
  1445  0511                     	;# 
  1446  0512                     	;# 
  1447  0512                     	;# 
  1448  0513                     	;# 
  1449  0514                     	;# 
  1450  0515                     	;# 
  1451  0515                     	;# 
  1452  0516                     	;# 
  1453  0517                     	;# 
  1454  0518                     	;# 
  1455  0519                     	;# 
  1456  051A                     	;# 
  1457  051B                     	;# 
  1458  051C                     	;# 
  1459  051D                     	;# 
  1460  058C                     	;# 
  1461  058C                     	;# 
  1462  058D                     	;# 
  1463  058E                     	;# 
  1464  058F                     	;# 
  1465  058F                     	;# 
  1466  0590                     	;# 
  1467  0591                     	;# 
  1468  0592                     	;# 
  1469  0593                     	;# 
  1470  060C                     	;# 
  1471  060D                     	;# 
  1472  060E                     	;# 
  1473  060F                     	;# 
  1474  0610                     	;# 
  1475  0611                     	;# 
  1476  0612                     	;# 
  1477  0613                     	;# 
  1478  0614                     	;# 
  1479  0616                     	;# 
  1480  0617                     	;# 
  1481  0618                     	;# 
  1482  0619                     	;# 
  1483  061A                     	;# 
  1484  061B                     	;# 
  1485  061C                     	;# 
  1486  061D                     	;# 
  1487  061E                     	;# 
  1488  068C                     	;# 
  1489  068D                     	;# 
  1490  068E                     	;# 
  1491  068F                     	;# 
  1492  0690                     	;# 
  1493  0691                     	;# 
  1494  0692                     	;# 
  1495  0693                     	;# 
  1496  0694                     	;# 
  1497  070C                     	;# 
  1498  070D                     	;# 
  1499  070E                     	;# 
  1500  070F                     	;# 
  1501  0710                     	;# 
  1502  0711                     	;# 
  1503  0712                     	;# 
  1504  0713                     	;# 
  1505  0714                     	;# 
  1506  0716                     	;# 
  1507  0717                     	;# 
  1508  0718                     	;# 
  1509  0719                     	;# 
  1510  071A                     	;# 
  1511  071B                     	;# 
  1512  071C                     	;# 
  1513  071D                     	;# 
  1514  071E                     	;# 
  1515  0796                     	;# 
  1516  0797                     	;# 
  1517  0798                     	;# 
  1518  0799                     	;# 
  1519  079A                     	;# 
  1520  079B                     	;# 
  1521  080C                     	;# 
  1522  080D                     	;# 
  1523  080E                     	;# 
  1524  080F                     	;# 
  1525  0810                     	;# 
  1526  0811                     	;# 
  1527  0812                     	;# 
  1528  0813                     	;# 
  1529  0814                     	;# 
  1530  081A                     	;# 
  1531  081B                     	;# 
  1532  081C                     	;# 
  1533  081D                     	;# 
  1534  081E                     	;# 
  1535  081F                     	;# 
  1536  088C                     	;# 
  1537  088D                     	;# 
  1538  088E                     	;# 
  1539  088F                     	;# 
  1540  0890                     	;# 
  1541  0891                     	;# 
  1542  0892                     	;# 
  1543  0893                     	;# 
  1544  0895                     	;# 
  1545  0896                     	;# 
  1546  0897                     	;# 
  1547  0898                     	;# 
  1548  0899                     	;# 
  1549  089A                     	;# 
  1550  089B                     	;# 
  1551  090C                     	;# 
  1552  090E                     	;# 
  1553  090F                     	;# 
  1554  091F                     	;# 
  1555  091F                     	;# 
  1556  098F                     	;# 
  1557  098F                     	;# 
  1558  0990                     	;# 
  1559  0991                     	;# 
  1560  0992                     	;# 
  1561  0993                     	;# 
  1562  0994                     	;# 
  1563  0995                     	;# 
  1564  0996                     	;# 
  1565  0997                     	;# 
  1566  0E0F                     	;# 
  1567  0E10                     	;# 
  1568  0E11                     	;# 
  1569  0E12                     	;# 
  1570  0E13                     	;# 
  1571  0E14                     	;# 
  1572  0E15                     	;# 
  1573  0E16                     	;# 
  1574  0E17                     	;# 
  1575  0E18                     	;# 
  1576  0E19                     	;# 
  1577  0E1A                     	;# 
  1578  0E1B                     	;# 
  1579  0E1C                     	;# 
  1580  0E1D                     	;# 
  1581  0E1E                     	;# 
  1582  0E1F                     	;# 
  1583  0E20                     	;# 
  1584  0E21                     	;# 
  1585  0E22                     	;# 
  1586  0E23                     	;# 
  1587  0E24                     	;# 
  1588  0E25                     	;# 
  1589  0E26                     	;# 
  1590  0E27                     	;# 
  1591  0E28                     	;# 
  1592  0E29                     	;# 
  1593  0E2A                     	;# 
  1594  0E2B                     	;# 
  1595  0E2C                     	;# 
  1596  0E2D                     	;# 
  1597  0E2E                     	;# 
  1598  0E2F                     	;# 
  1599  0E30                     	;# 
  1600  0E31                     	;# 
  1601  0E32                     	;# 
  1602  0E33                     	;# 
  1603  0E34                     	;# 
  1604  0E35                     	;# 
  1605  0E36                     	;# 
  1606  0E37                     	;# 
  1607  0E8F                     	;# 
  1608  0E90                     	;# 
  1609  0E91                     	;# 
  1610  0E92                     	;# 
  1611  0E93                     	;# 
  1612  0E94                     	;# 
  1613  0E95                     	;# 
  1614  0E96                     	;# 
  1615  0E97                     	;# 
  1616  0E9C                     	;# 
  1617  0E9D                     	;# 
  1618  0E9E                     	;# 
  1619  0EA1                     	;# 
  1620  0EA2                     	;# 
  1621  0EA3                     	;# 
  1622  0EA4                     	;# 
  1623  0EA5                     	;# 
  1624  0EA9                     	;# 
  1625  0EAA                     	;# 
  1626  0EAB                     	;# 
  1627  0EAC                     	;# 
  1628  0EB1                     	;# 
  1629  0EB2                     	;# 
  1630  0EB3                     	;# 
  1631  0EB8                     	;# 
  1632  0EB9                     	;# 
  1633  0EBA                     	;# 
  1634  0EBB                     	;# 
  1635  0EBC                     	;# 
  1636  0EBD                     	;# 
  1637  0EBE                     	;# 
  1638  0EC3                     	;# 
  1639  0EC5                     	;# 
  1640  0EC6                     	;# 
  1641  0EC7                     	;# 
  1642  0EC8                     	;# 
  1643  0EC9                     	;# 
  1644  0ECA                     	;# 
  1645  0ECB                     	;# 
  1646  0ECC                     	;# 
  1647  0F10                     	;# 
  1648  0F11                     	;# 
  1649  0F12                     	;# 
  1650  0F13                     	;# 
  1651  0F14                     	;# 
  1652  0F15                     	;# 
  1653  0F16                     	;# 
  1654  0F17                     	;# 
  1655  0F18                     	;# 
  1656  0F19                     	;# 
  1657  0F1A                     	;# 
  1658  0F1B                     	;# 
  1659  0F1C                     	;# 
  1660  0F1D                     	;# 
  1661  0F1E                     	;# 
  1662  0F1F                     	;# 
  1663  0F20                     	;# 
  1664  0F21                     	;# 
  1665  0F22                     	;# 
  1666  0F23                     	;# 
  1667  0F24                     	;# 
  1668  0F25                     	;# 
  1669  0F26                     	;# 
  1670  0F27                     	;# 
  1671  0F28                     	;# 
  1672  0F29                     	;# 
  1673  0F2A                     	;# 
  1674  0F2B                     	;# 
  1675  0F2C                     	;# 
  1676  0F2D                     	;# 
  1677  0F2E                     	;# 
  1678  0F2F                     	;# 
  1679  0F30                     	;# 
  1680  0F31                     	;# 
  1681  0F32                     	;# 
  1682  0F38                     	;# 
  1683  0F39                     	;# 
  1684  0F3A                     	;# 
  1685  0F3B                     	;# 
  1686  0F3C                     	;# 
  1687  0F3D                     	;# 
  1688  0F3E                     	;# 
  1689  0F3F                     	;# 
  1690  0F40                     	;# 
  1691  0F41                     	;# 
  1692  0F43                     	;# 
  1693  0F44                     	;# 
  1694  0F45                     	;# 
  1695  0F46                     	;# 
  1696  0F47                     	;# 
  1697  0F48                     	;# 
  1698  0F49                     	;# 
  1699  0F4A                     	;# 
  1700  0F4B                     	;# 
  1701  0F4C                     	;# 
  1702  0F4E                     	;# 
  1703  0F4F                     	;# 
  1704  0F50                     	;# 
  1705  0F51                     	;# 
  1706  0F52                     	;# 
  1707  0F53                     	;# 
  1708  0F54                     	;# 
  1709  0F55                     	;# 
  1710  0F56                     	;# 
  1711  0F57                     	;# 
  1712  0F59                     	;# 
  1713  0F5A                     	;# 
  1714  0F5B                     	;# 
  1715  0F5C                     	;# 
  1716  0F5D                     	;# 
  1717  0F61                     	;# 
  1718  0F62                     	;# 
  1719  0F64                     	;# 
  1720  0F65                     	;# 
  1721  0F66                     	;# 
  1722  0F67                     	;# 
  1723  0F68                     	;# 
  1724  0F69                     	;# 
  1725  0F6A                     	;# 
  1726  0F6B                     	;# 
  1727  0F6C                     	;# 
  1728  0F6D                     	;# 
  1729  0FE4                     	;# 
  1730  0FE5                     	;# 
  1731  0FE6                     	;# 
  1732  0FE7                     	;# 
  1733  0FE8                     	;# 
  1734  0FE9                     	;# 
  1735  0FEA                     	;# 
  1736  0FEB                     	;# 
  1737  0FED                     	;# 
  1738  0FEE                     	;# 
  1739  0FEF                     	;# 
  1740  0000                     	;# 
  1741  0001                     	;# 
  1742  0002                     	;# 
  1743  0003                     	;# 
  1744  0004                     	;# 
  1745  0005                     	;# 
  1746  0006                     	;# 
  1747  0007                     	;# 
  1748  0008                     	;# 
  1749  0009                     	;# 
  1750  000A                     	;# 
  1751  000B                     	;# 
  1752  000C                     	;# 
  1753  000D                     	;# 
  1754  000E                     	;# 
  1755  000F                     	;# 
  1756  0010                     	;# 
  1757  0011                     	;# 
  1758  0012                     	;# 
  1759  0013                     	;# 
  1760  0014                     	;# 
  1761  0015                     	;# 
  1762  0016                     	;# 
  1763  0017                     	;# 
  1764  0018                     	;# 
  1765  0019                     	;# 
  1766  001A                     	;# 
  1767  001C                     	;# 
  1768  001C                     	;# 
  1769  001D                     	;# 
  1770  001D                     	;# 
  1771  001E                     	;# 
  1772  001F                     	;# 
  1773  008C                     	;# 
  1774  008C                     	;# 
  1775  008D                     	;# 
  1776  008E                     	;# 
  1777  008E                     	;# 
  1778  008F                     	;# 
  1779  0090                     	;# 
  1780  0090                     	;# 
  1781  0091                     	;# 
  1782  0093                     	;# 
  1783  0094                     	;# 
  1784  0095                     	;# 
  1785  0096                     	;# 
  1786  0097                     	;# 
  1787  0098                     	;# 
  1788  0099                     	;# 
  1789  009A                     	;# 
  1790  009B                     	;# 
  1791  009C                     	;# 
  1792  009D                     	;# 
  1793  009E                     	;# 
  1794  010C                     	;# 
  1795  010D                     	;# 
  1796  010E                     	;# 
  1797  010E                     	;# 
  1798  010F                     	;# 
  1799  0110                     	;# 
  1800  0110                     	;# 
  1801  0111                     	;# 
  1802  0112                     	;# 
  1803  0112                     	;# 
  1804  0113                     	;# 
  1805  0114                     	;# 
  1806  0114                     	;# 
  1807  0115                     	;# 
  1808  0116                     	;# 
  1809  0116                     	;# 
  1810  0117                     	;# 
  1811  0119                     	;# 
  1812  0119                     	;# 
  1813  0119                     	;# 
  1814  011A                     	;# 
  1815  011A                     	;# 
  1816  011A                     	;# 
  1817  011B                     	;# 
  1818  011B                     	;# 
  1819  011B                     	;# 
  1820  011B                     	;# 
  1821  011B                     	;# 
  1822  011C                     	;# 
  1823  011C                     	;# 
  1824  011C                     	;# 
  1825  011D                     	;# 
  1826  011D                     	;# 
  1827  011D                     	;# 
  1828  011E                     	;# 
  1829  011E                     	;# 
  1830  011E                     	;# 
  1831  011F                     	;# 
  1832  011F                     	;# 
  1833  011F                     	;# 
  1834  011F                     	;# 
  1835  011F                     	;# 
  1836  018C                     	;# 
  1837  018D                     	;# 
  1838  018E                     	;# 
  1839  018F                     	;# 
  1840  0190                     	;# 
  1841  0191                     	;# 
  1842  0192                     	;# 
  1843  0196                     	;# 
  1844  0197                     	;# 
  1845  0198                     	;# 
  1846  0199                     	;# 
  1847  019A                     	;# 
  1848  019B                     	;# 
  1849  019C                     	;# 
  1850  020C                     	;# 
  1851  020C                     	;# 
  1852  020D                     	;# 
  1853  020E                     	;# 
  1854  020F                     	;# 
  1855  020F                     	;# 
  1856  0210                     	;# 
  1857  0210                     	;# 
  1858  0211                     	;# 
  1859  0211                     	;# 
  1860  0212                     	;# 
  1861  0212                     	;# 
  1862  0213                     	;# 
  1863  0214                     	;# 
  1864  0215                     	;# 
  1865  0215                     	;# 
  1866  0216                     	;# 
  1867  0216                     	;# 
  1868  0217                     	;# 
  1869  0217                     	;# 
  1870  0218                     	;# 
  1871  0218                     	;# 
  1872  0219                     	;# 
  1873  021A                     	;# 
  1874  021B                     	;# 
  1875  021B                     	;# 
  1876  021C                     	;# 
  1877  021C                     	;# 
  1878  021D                     	;# 
  1879  021D                     	;# 
  1880  021E                     	;# 
  1881  021F                     	;# 
  1882  028C                     	;# 
  1883  028C                     	;# 
  1884  028D                     	;# 
  1885  028D                     	;# 
  1886  028E                     	;# 
  1887  028F                     	;# 
  1888  0290                     	;# 
  1889  0290                     	;# 
  1890  0291                     	;# 
  1891  0292                     	;# 
  1892  0292                     	;# 
  1893  0293                     	;# 
  1894  0293                     	;# 
  1895  0294                     	;# 
  1896  0295                     	;# 
  1897  0296                     	;# 
  1898  0296                     	;# 
  1899  0297                     	;# 
  1900  0298                     	;# 
  1901  0298                     	;# 
  1902  0299                     	;# 
  1903  0299                     	;# 
  1904  029A                     	;# 
  1905  029B                     	;# 
  1906  029C                     	;# 
  1907  029C                     	;# 
  1908  029D                     	;# 
  1909  030C                     	;# 
  1910  030C                     	;# 
  1911  030D                     	;# 
  1912  030E                     	;# 
  1913  030F                     	;# 
  1914  0310                     	;# 
  1915  0310                     	;# 
  1916  0311                     	;# 
  1917  0312                     	;# 
  1918  0313                     	;# 
  1919  0314                     	;# 
  1920  0314                     	;# 
  1921  0315                     	;# 
  1922  0316                     	;# 
  1923  0317                     	;# 
  1924  0318                     	;# 
  1925  0318                     	;# 
  1926  0319                     	;# 
  1927  031A                     	;# 
  1928  031B                     	;# 
  1929  031C                     	;# 
  1930  031C                     	;# 
  1931  031D                     	;# 
  1932  031E                     	;# 
  1933  031F                     	;# 
  1934  038C                     	;# 
  1935  038C                     	;# 
  1936  038D                     	;# 
  1937  038E                     	;# 
  1938  0390                     	;# 
  1939  0390                     	;# 
  1940  0391                     	;# 
  1941  0392                     	;# 
  1942  040C                     	;# 
  1943  040D                     	;# 
  1944  040E                     	;# 
  1945  040F                     	;# 
  1946  0410                     	;# 
  1947  0411                     	;# 
  1948  0416                     	;# 
  1949  0416                     	;# 
  1950  0417                     	;# 
  1951  0418                     	;# 
  1952  0418                     	;# 
  1953  0419                     	;# 
  1954  041A                     	;# 
  1955  041A                     	;# 
  1956  041B                     	;# 
  1957  041C                     	;# 
  1958  041C                     	;# 
  1959  041D                     	;# 
  1960  041E                     	;# 
  1961  041F                     	;# 
  1962  048C                     	;# 
  1963  048C                     	;# 
  1964  048D                     	;# 
  1965  048E                     	;# 
  1966  048F                     	;# 
  1967  048F                     	;# 
  1968  0490                     	;# 
  1969  0491                     	;# 
  1970  0492                     	;# 
  1971  0492                     	;# 
  1972  0493                     	;# 
  1973  0494                     	;# 
  1974  0495                     	;# 
  1975  0495                     	;# 
  1976  0496                     	;# 
  1977  0497                     	;# 
  1978  0498                     	;# 
  1979  0499                     	;# 
  1980  049A                     	;# 
  1981  049B                     	;# 
  1982  049C                     	;# 
  1983  049D                     	;# 
  1984  050C                     	;# 
  1985  050C                     	;# 
  1986  050D                     	;# 
  1987  050E                     	;# 
  1988  050F                     	;# 
  1989  050F                     	;# 
  1990  0510                     	;# 
  1991  0511                     	;# 
  1992  0512                     	;# 
  1993  0512                     	;# 
  1994  0513                     	;# 
  1995  0514                     	;# 
  1996  0515                     	;# 
  1997  0515                     	;# 
  1998  0516                     	;# 
  1999  0517                     	;# 
  2000  0518                     	;# 
  2001  0519                     	;# 
  2002  051A                     	;# 
  2003  051B                     	;# 
  2004  051C                     	;# 
  2005  051D                     	;# 
  2006  058C                     	;# 
  2007  058C                     	;# 
  2008  058D                     	;# 
  2009  058E                     	;# 
  2010  058F                     	;# 
  2011  058F                     	;# 
  2012  0590                     	;# 
  2013  0591                     	;# 
  2014  0592                     	;# 
  2015  0593                     	;# 
  2016  060C                     	;# 
  2017  060D                     	;# 
  2018  060E                     	;# 
  2019  060F                     	;# 
  2020  0610                     	;# 
  2021  0611                     	;# 
  2022  0612                     	;# 
  2023  0613                     	;# 
  2024  0614                     	;# 
  2025  0616                     	;# 
  2026  0617                     	;# 
  2027  0618                     	;# 
  2028  0619                     	;# 
  2029  061A                     	;# 
  2030  061B                     	;# 
  2031  061C                     	;# 
  2032  061D                     	;# 
  2033  061E                     	;# 
  2034  068C                     	;# 
  2035  068D                     	;# 
  2036  068E                     	;# 
  2037  068F                     	;# 
  2038  0690                     	;# 
  2039  0691                     	;# 
  2040  0692                     	;# 
  2041  0693                     	;# 
  2042  0694                     	;# 
  2043  070C                     	;# 
  2044  070D                     	;# 
  2045  070E                     	;# 
  2046  070F                     	;# 
  2047  0710                     	;# 
  2048  0711                     	;# 
  2049  0712                     	;# 
  2050  0713                     	;# 
  2051  0714                     	;# 
  2052  0716                     	;# 
  2053  0717                     	;# 
  2054  0718                     	;# 
  2055  0719                     	;# 
  2056  071A                     	;# 
  2057  071B                     	;# 
  2058  071C                     	;# 
  2059  071D                     	;# 
  2060  071E                     	;# 
  2061  0796                     	;# 
  2062  0797                     	;# 
  2063  0798                     	;# 
  2064  0799                     	;# 
  2065  079A                     	;# 
  2066  079B                     	;# 
  2067  080C                     	;# 
  2068  080D                     	;# 
  2069  080E                     	;# 
  2070  080F                     	;# 
  2071  0810                     	;# 
  2072  0811                     	;# 
  2073  0812                     	;# 
  2074  0813                     	;# 
  2075  0814                     	;# 
  2076  081A                     	;# 
  2077  081B                     	;# 
  2078  081C                     	;# 
  2079  081D                     	;# 
  2080  081E                     	;# 
  2081  081F                     	;# 
  2082  088C                     	;# 
  2083  088D                     	;# 
  2084  088E                     	;# 
  2085  088F                     	;# 
  2086  0890                     	;# 
  2087  0891                     	;# 
  2088  0892                     	;# 
  2089  0893                     	;# 
  2090  0895                     	;# 
  2091  0896                     	;# 
  2092  0897                     	;# 
  2093  0898                     	;# 
  2094  0899                     	;# 
  2095  089A                     	;# 
  2096  089B                     	;# 
  2097  090C                     	;# 
  2098  090E                     	;# 
  2099  090F                     	;# 
  2100  091F                     	;# 
  2101  091F                     	;# 
  2102  098F                     	;# 
  2103  098F                     	;# 
  2104  0990                     	;# 
  2105  0991                     	;# 
  2106  0992                     	;# 
  2107  0993                     	;# 
  2108  0994                     	;# 
  2109  0995                     	;# 
  2110  0996                     	;# 
  2111  0997                     	;# 
  2112  0E0F                     	;# 
  2113  0E10                     	;# 
  2114  0E11                     	;# 
  2115  0E12                     	;# 
  2116  0E13                     	;# 
  2117  0E14                     	;# 
  2118  0E15                     	;# 
  2119  0E16                     	;# 
  2120  0E17                     	;# 
  2121  0E18                     	;# 
  2122  0E19                     	;# 
  2123  0E1A                     	;# 
  2124  0E1B                     	;# 
  2125  0E1C                     	;# 
  2126  0E1D                     	;# 
  2127  0E1E                     	;# 
  2128  0E1F                     	;# 
  2129  0E20                     	;# 
  2130  0E21                     	;# 
  2131  0E22                     	;# 
  2132  0E23                     	;# 
  2133  0E24                     	;# 
  2134  0E25                     	;# 
  2135  0E26                     	;# 
  2136  0E27                     	;# 
  2137  0E28                     	;# 
  2138  0E29                     	;# 
  2139  0E2A                     	;# 
  2140  0E2B                     	;# 
  2141  0E2C                     	;# 
  2142  0E2D                     	;# 
  2143  0E2E                     	;# 
  2144  0E2F                     	;# 
  2145  0E30                     	;# 
  2146  0E31                     	;# 
  2147  0E32                     	;# 
  2148  0E33                     	;# 
  2149  0E34                     	;# 
  2150  0E35                     	;# 
  2151  0E36                     	;# 
  2152  0E37                     	;# 
  2153  0E8F                     	;# 
  2154  0E90                     	;# 
  2155  0E91                     	;# 
  2156  0E92                     	;# 
  2157  0E93                     	;# 
  2158  0E94                     	;# 
  2159  0E95                     	;# 
  2160  0E96                     	;# 
  2161  0E97                     	;# 
  2162  0E9C                     	;# 
  2163  0E9D                     	;# 
  2164  0E9E                     	;# 
  2165  0EA1                     	;# 
  2166  0EA2                     	;# 
  2167  0EA3                     	;# 
  2168  0EA4                     	;# 
  2169  0EA5                     	;# 
  2170  0EA9                     	;# 
  2171  0EAA                     	;# 
  2172  0EAB                     	;# 
  2173  0EAC                     	;# 
  2174  0EB1                     	;# 
  2175  0EB2                     	;# 
  2176  0EB3                     	;# 
  2177  0EB8                     	;# 
  2178  0EB9                     	;# 
  2179  0EBA                     	;# 
  2180  0EBB                     	;# 
  2181  0EBC                     	;# 
  2182  0EBD                     	;# 
  2183  0EBE                     	;# 
  2184  0EC3                     	;# 
  2185  0EC5                     	;# 
  2186  0EC6                     	;# 
  2187  0EC7                     	;# 
  2188  0EC8                     	;# 
  2189  0EC9                     	;# 
  2190  0ECA                     	;# 
  2191  0ECB                     	;# 
  2192  0ECC                     	;# 
  2193  0F10                     	;# 
  2194  0F11                     	;# 
  2195  0F12                     	;# 
  2196  0F13                     	;# 
  2197  0F14                     	;# 
  2198  0F15                     	;# 
  2199  0F16                     	;# 
  2200  0F17                     	;# 
  2201  0F18                     	;# 
  2202  0F19                     	;# 
  2203  0F1A                     	;# 
  2204  0F1B                     	;# 
  2205  0F1C                     	;# 
  2206  0F1D                     	;# 
  2207  0F1E                     	;# 
  2208  0F1F                     	;# 
  2209  0F20                     	;# 
  2210  0F21                     	;# 
  2211  0F22                     	;# 
  2212  0F23                     	;# 
  2213  0F24                     	;# 
  2214  0F25                     	;# 
  2215  0F26                     	;# 
  2216  0F27                     	;# 
  2217  0F28                     	;# 
  2218  0F29                     	;# 
  2219  0F2A                     	;# 
  2220  0F2B                     	;# 
  2221  0F2C                     	;# 
  2222  0F2D                     	;# 
  2223  0F2E                     	;# 
  2224  0F2F                     	;# 
  2225  0F30                     	;# 
  2226  0F31                     	;# 
  2227  0F32                     	;# 
  2228  0F38                     	;# 
  2229  0F39                     	;# 
  2230  0F3A                     	;# 
  2231  0F3B                     	;# 
  2232  0F3C                     	;# 
  2233  0F3D                     	;# 
  2234  0F3E                     	;# 
  2235  0F3F                     	;# 
  2236  0F40                     	;# 
  2237  0F41                     	;# 
  2238  0F43                     	;# 
  2239  0F44                     	;# 
  2240  0F45                     	;# 
  2241  0F46                     	;# 
  2242  0F47                     	;# 
  2243  0F48                     	;# 
  2244  0F49                     	;# 
  2245  0F4A                     	;# 
  2246  0F4B                     	;# 
  2247  0F4C                     	;# 
  2248  0F4E                     	;# 
  2249  0F4F                     	;# 
  2250  0F50                     	;# 
  2251  0F51                     	;# 
  2252  0F52                     	;# 
  2253  0F53                     	;# 
  2254  0F54                     	;# 
  2255  0F55                     	;# 
  2256  0F56                     	;# 
  2257  0F57                     	;# 
  2258  0F59                     	;# 
  2259  0F5A                     	;# 
  2260  0F5B                     	;# 
  2261  0F5C                     	;# 
  2262  0F5D                     	;# 
  2263  0F61                     	;# 
  2264  0F62                     	;# 
  2265  0F64                     	;# 
  2266  0F65                     	;# 
  2267  0F66                     	;# 
  2268  0F67                     	;# 
  2269  0F68                     	;# 
  2270  0F69                     	;# 
  2271  0F6A                     	;# 
  2272  0F6B                     	;# 
  2273  0F6C                     	;# 
  2274  0F6D                     	;# 
  2275  0FE4                     	;# 
  2276  0FE5                     	;# 
  2277  0FE6                     	;# 
  2278  0FE7                     	;# 
  2279  0FE8                     	;# 
  2280  0FE9                     	;# 
  2281  0FEA                     	;# 
  2282  0FEB                     	;# 
  2283  0FED                     	;# 
  2284  0FEE                     	;# 
  2285  0FEF                     	;# 
  2286  0000                     	;# 
  2287  0001                     	;# 
  2288  0002                     	;# 
  2289  0003                     	;# 
  2290  0004                     	;# 
  2291  0005                     	;# 
  2292  0006                     	;# 
  2293  0007                     	;# 
  2294  0008                     	;# 
  2295  0009                     	;# 
  2296  000A                     	;# 
  2297  000B                     	;# 
  2298  000C                     	;# 
  2299  000D                     	;# 
  2300  000E                     	;# 
  2301  000F                     	;# 
  2302  0010                     	;# 
  2303  0011                     	;# 
  2304  0012                     	;# 
  2305  0013                     	;# 
  2306  0014                     	;# 
  2307  0015                     	;# 
  2308  0016                     	;# 
  2309  0017                     	;# 
  2310  0018                     	;# 
  2311  0019                     	;# 
  2312  001A                     	;# 
  2313  001C                     	;# 
  2314  001C                     	;# 
  2315  001D                     	;# 
  2316  001D                     	;# 
  2317  001E                     	;# 
  2318  001F                     	;# 
  2319  008C                     	;# 
  2320  008C                     	;# 
  2321  008D                     	;# 
  2322  008E                     	;# 
  2323  008E                     	;# 
  2324  008F                     	;# 
  2325  0090                     	;# 
  2326  0090                     	;# 
  2327  0091                     	;# 
  2328  0093                     	;# 
  2329  0094                     	;# 
  2330  0095                     	;# 
  2331  0096                     	;# 
  2332  0097                     	;# 
  2333  0098                     	;# 
  2334  0099                     	;# 
  2335  009A                     	;# 
  2336  009B                     	;# 
  2337  009C                     	;# 
  2338  009D                     	;# 
  2339  009E                     	;# 
  2340  010C                     	;# 
  2341  010D                     	;# 
  2342  010E                     	;# 
  2343  010E                     	;# 
  2344  010F                     	;# 
  2345  0110                     	;# 
  2346  0110                     	;# 
  2347  0111                     	;# 
  2348  0112                     	;# 
  2349  0112                     	;# 
  2350  0113                     	;# 
  2351  0114                     	;# 
  2352  0114                     	;# 
  2353  0115                     	;# 
  2354  0116                     	;# 
  2355  0116                     	;# 
  2356  0117                     	;# 
  2357  0119                     	;# 
  2358  0119                     	;# 
  2359  0119                     	;# 
  2360  011A                     	;# 
  2361  011A                     	;# 
  2362  011A                     	;# 
  2363  011B                     	;# 
  2364  011B                     	;# 
  2365  011B                     	;# 
  2366  011B                     	;# 
  2367  011B                     	;# 
  2368  011C                     	;# 
  2369  011C                     	;# 
  2370  011C                     	;# 
  2371  011D                     	;# 
  2372  011D                     	;# 
  2373  011D                     	;# 
  2374  011E                     	;# 
  2375  011E                     	;# 
  2376  011E                     	;# 
  2377  011F                     	;# 
  2378  011F                     	;# 
  2379  011F                     	;# 
  2380  011F                     	;# 
  2381  011F                     	;# 
  2382  018C                     	;# 
  2383  018D                     	;# 
  2384  018E                     	;# 
  2385  018F                     	;# 
  2386  0190                     	;# 
  2387  0191                     	;# 
  2388  0192                     	;# 
  2389  0196                     	;# 
  2390  0197                     	;# 
  2391  0198                     	;# 
  2392  0199                     	;# 
  2393  019A                     	;# 
  2394  019B                     	;# 
  2395  019C                     	;# 
  2396  020C                     	;# 
  2397  020C                     	;# 
  2398  020D                     	;# 
  2399  020E                     	;# 
  2400  020F                     	;# 
  2401  020F                     	;# 
  2402  0210                     	;# 
  2403  0210                     	;# 
  2404  0211                     	;# 
  2405  0211                     	;# 
  2406  0212                     	;# 
  2407  0212                     	;# 
  2408  0213                     	;# 
  2409  0214                     	;# 
  2410  0215                     	;# 
  2411  0215                     	;# 
  2412  0216                     	;# 
  2413  0216                     	;# 
  2414  0217                     	;# 
  2415  0217                     	;# 
  2416  0218                     	;# 
  2417  0218                     	;# 
  2418  0219                     	;# 
  2419  021A                     	;# 
  2420  021B                     	;# 
  2421  021B                     	;# 
  2422  021C                     	;# 
  2423  021C                     	;# 
  2424  021D                     	;# 
  2425  021D                     	;# 
  2426  021E                     	;# 
  2427  021F                     	;# 
  2428  028C                     	;# 
  2429  028C                     	;# 
  2430  028D                     	;# 
  2431  028D                     	;# 
  2432  028E                     	;# 
  2433  028F                     	;# 
  2434  0290                     	;# 
  2435  0290                     	;# 
  2436  0291                     	;# 
  2437  0292                     	;# 
  2438  0292                     	;# 
  2439  0293                     	;# 
  2440  0293                     	;# 
  2441  0294                     	;# 
  2442  0295                     	;# 
  2443  0296                     	;# 
  2444  0296                     	;# 
  2445  0297                     	;# 
  2446  0298                     	;# 
  2447  0298                     	;# 
  2448  0299                     	;# 
  2449  0299                     	;# 
  2450  029A                     	;# 
  2451  029B                     	;# 
  2452  029C                     	;# 
  2453  029C                     	;# 
  2454  029D                     	;# 
  2455  030C                     	;# 
  2456  030C                     	;# 
  2457  030D                     	;# 
  2458  030E                     	;# 
  2459  030F                     	;# 
  2460  0310                     	;# 
  2461  0310                     	;# 
  2462  0311                     	;# 
  2463  0312                     	;# 
  2464  0313                     	;# 
  2465  0314                     	;# 
  2466  0314                     	;# 
  2467  0315                     	;# 
  2468  0316                     	;# 
  2469  0317                     	;# 
  2470  0318                     	;# 
  2471  0318                     	;# 
  2472  0319                     	;# 
  2473  031A                     	;# 
  2474  031B                     	;# 
  2475  031C                     	;# 
  2476  031C                     	;# 
  2477  031D                     	;# 
  2478  031E                     	;# 
  2479  031F                     	;# 
  2480  038C                     	;# 
  2481  038C                     	;# 
  2482  038D                     	;# 
  2483  038E                     	;# 
  2484  0390                     	;# 
  2485  0390                     	;# 
  2486  0391                     	;# 
  2487  0392                     	;# 
  2488  040C                     	;# 
  2489  040D                     	;# 
  2490  040E                     	;# 
  2491  040F                     	;# 
  2492  0410                     	;# 
  2493  0411                     	;# 
  2494  0416                     	;# 
  2495  0416                     	;# 
  2496  0417                     	;# 
  2497  0418                     	;# 
  2498  0418                     	;# 
  2499  0419                     	;# 
  2500  041A                     	;# 
  2501  041A                     	;# 
  2502  041B                     	;# 
  2503  041C                     	;# 
  2504  041C                     	;# 
  2505  041D                     	;# 
  2506  041E                     	;# 
  2507  041F                     	;# 
  2508  048C                     	;# 
  2509  048C                     	;# 
  2510  048D                     	;# 
  2511  048E                     	;# 
  2512  048F                     	;# 
  2513  048F                     	;# 
  2514  0490                     	;# 
  2515  0491                     	;# 
  2516  0492                     	;# 
  2517  0492                     	;# 
  2518  0493                     	;# 
  2519  0494                     	;# 
  2520  0495                     	;# 
  2521  0495                     	;# 
  2522  0496                     	;# 
  2523  0497                     	;# 
  2524  0498                     	;# 
  2525  0499                     	;# 
  2526  049A                     	;# 
  2527  049B                     	;# 
  2528  049C                     	;# 
  2529  049D                     	;# 
  2530  050C                     	;# 
  2531  050C                     	;# 
  2532  050D                     	;# 
  2533  050E                     	;# 
  2534  050F                     	;# 
  2535  050F                     	;# 
  2536  0510                     	;# 
  2537  0511                     	;# 
  2538  0512                     	;# 
  2539  0512                     	;# 
  2540  0513                     	;# 
  2541  0514                     	;# 
  2542  0515                     	;# 
  2543  0515                     	;# 
  2544  0516                     	;# 
  2545  0517                     	;# 
  2546  0518                     	;# 
  2547  0519                     	;# 
  2548  051A                     	;# 
  2549  051B                     	;# 
  2550  051C                     	;# 
  2551  051D                     	;# 
  2552  058C                     	;# 
  2553  058C                     	;# 
  2554  058D                     	;# 
  2555  058E                     	;# 
  2556  058F                     	;# 
  2557  058F                     	;# 
  2558  0590                     	;# 
  2559  0591                     	;# 
  2560  0592                     	;# 
  2561  0593                     	;# 
  2562  060C                     	;# 
  2563  060D                     	;# 
  2564  060E                     	;# 
  2565  060F                     	;# 
  2566  0610                     	;# 
  2567  0611                     	;# 
  2568  0612                     	;# 
  2569  0613                     	;# 
  2570  0614                     	;# 
  2571  0616                     	;# 
  2572  0617                     	;# 
  2573  0618                     	;# 
  2574  0619                     	;# 
  2575  061A                     	;# 
  2576  061B                     	;# 
  2577  061C                     	;# 
  2578  061D                     	;# 
  2579  061E                     	;# 
  2580  068C                     	;# 
  2581  068D                     	;# 
  2582  068E                     	;# 
  2583  068F                     	;# 
  2584  0690                     	;# 
  2585  0691                     	;# 
  2586  0692                     	;# 
  2587  0693                     	;# 
  2588  0694                     	;# 
  2589  070C                     	;# 
  2590  070D                     	;# 
  2591  070E                     	;# 
  2592  070F                     	;# 
  2593  0710                     	;# 
  2594  0711                     	;# 
  2595  0712                     	;# 
  2596  0713                     	;# 
  2597  0714                     	;# 
  2598  0716                     	;# 
  2599  0717                     	;# 
  2600  0718                     	;# 
  2601  0719                     	;# 
  2602  071A                     	;# 
  2603  071B                     	;# 
  2604  071C                     	;# 
  2605  071D                     	;# 
  2606  071E                     	;# 
  2607  0796                     	;# 
  2608  0797                     	;# 
  2609  0798                     	;# 
  2610  0799                     	;# 
  2611  079A                     	;# 
  2612  079B                     	;# 
  2613  080C                     	;# 
  2614  080D                     	;# 
  2615  080E                     	;# 
  2616  080F                     	;# 
  2617  0810                     	;# 
  2618  0811                     	;# 
  2619  0812                     	;# 
  2620  0813                     	;# 
  2621  0814                     	;# 
  2622  081A                     	;# 
  2623  081B                     	;# 
  2624  081C                     	;# 
  2625  081D                     	;# 
  2626  081E                     	;# 
  2627  081F                     	;# 
  2628  088C                     	;# 
  2629  088D                     	;# 
  2630  088E                     	;# 
  2631  088F                     	;# 
  2632  0890                     	;# 
  2633  0891                     	;# 
  2634  0892                     	;# 
  2635  0893                     	;# 
  2636  0895                     	;# 
  2637  0896                     	;# 
  2638  0897                     	;# 
  2639  0898                     	;# 
  2640  0899                     	;# 
  2641  089A                     	;# 
  2642  089B                     	;# 
  2643  090C                     	;# 
  2644  090E                     	;# 
  2645  090F                     	;# 
  2646  091F                     	;# 
  2647  091F                     	;# 
  2648  098F                     	;# 
  2649  098F                     	;# 
  2650  0990                     	;# 
  2651  0991                     	;# 
  2652  0992                     	;# 
  2653  0993                     	;# 
  2654  0994                     	;# 
  2655  0995                     	;# 
  2656  0996                     	;# 
  2657  0997                     	;# 
  2658  0E0F                     	;# 
  2659  0E10                     	;# 
  2660  0E11                     	;# 
  2661  0E12                     	;# 
  2662  0E13                     	;# 
  2663  0E14                     	;# 
  2664  0E15                     	;# 
  2665  0E16                     	;# 
  2666  0E17                     	;# 
  2667  0E18                     	;# 
  2668  0E19                     	;# 
  2669  0E1A                     	;# 
  2670  0E1B                     	;# 
  2671  0E1C                     	;# 
  2672  0E1D                     	;# 
  2673  0E1E                     	;# 
  2674  0E1F                     	;# 
  2675  0E20                     	;# 
  2676  0E21                     	;# 
  2677  0E22                     	;# 
  2678  0E23                     	;# 
  2679  0E24                     	;# 
  2680  0E25                     	;# 
  2681  0E26                     	;# 
  2682  0E27                     	;# 
  2683  0E28                     	;# 
  2684  0E29                     	;# 
  2685  0E2A                     	;# 
  2686  0E2B                     	;# 
  2687  0E2C                     	;# 
  2688  0E2D                     	;# 
  2689  0E2E                     	;# 
  2690  0E2F                     	;# 
  2691  0E30                     	;# 
  2692  0E31                     	;# 
  2693  0E32                     	;# 
  2694  0E33                     	;# 
  2695  0E34                     	;# 
  2696  0E35                     	;# 
  2697  0E36                     	;# 
  2698  0E37                     	;# 
  2699  0E8F                     	;# 
  2700  0E90                     	;# 
  2701  0E91                     	;# 
  2702  0E92                     	;# 
  2703  0E93                     	;# 
  2704  0E94                     	;# 
  2705  0E95                     	;# 
  2706  0E96                     	;# 
  2707  0E97                     	;# 
  2708  0E9C                     	;# 
  2709  0E9D                     	;# 
  2710  0E9E                     	;# 
  2711  0EA1                     	;# 
  2712  0EA2                     	;# 
  2713  0EA3                     	;# 
  2714  0EA4                     	;# 
  2715  0EA5                     	;# 
  2716  0EA9                     	;# 
  2717  0EAA                     	;# 
  2718  0EAB                     	;# 
  2719  0EAC                     	;# 
  2720  0EB1                     	;# 
  2721  0EB2                     	;# 
  2722  0EB3                     	;# 
  2723  0EB8                     	;# 
  2724  0EB9                     	;# 
  2725  0EBA                     	;# 
  2726  0EBB                     	;# 
  2727  0EBC                     	;# 
  2728  0EBD                     	;# 
  2729  0EBE                     	;# 
  2730  0EC3                     	;# 
  2731  0EC5                     	;# 
  2732  0EC6                     	;# 
  2733  0EC7                     	;# 
  2734  0EC8                     	;# 
  2735  0EC9                     	;# 
  2736  0ECA                     	;# 
  2737  0ECB                     	;# 
  2738  0ECC                     	;# 
  2739  0F10                     	;# 
  2740  0F11                     	;# 
  2741  0F12                     	;# 
  2742  0F13                     	;# 
  2743  0F14                     	;# 
  2744  0F15                     	;# 
  2745  0F16                     	;# 
  2746  0F17                     	;# 
  2747  0F18                     	;# 
  2748  0F19                     	;# 
  2749  0F1A                     	;# 
  2750  0F1B                     	;# 
  2751  0F1C                     	;# 
  2752  0F1D                     	;# 
  2753  0F1E                     	;# 
  2754  0F1F                     	;# 
  2755  0F20                     	;# 
  2756  0F21                     	;# 
  2757  0F22                     	;# 
  2758  0F23                     	;# 
  2759  0F24                     	;# 
  2760  0F25                     	;# 
  2761  0F26                     	;# 
  2762  0F27                     	;# 
  2763  0F28                     	;# 
  2764  0F29                     	;# 
  2765  0F2A                     	;# 
  2766  0F2B                     	;# 
  2767  0F2C                     	;# 
  2768  0F2D                     	;# 
  2769  0F2E                     	;# 
  2770  0F2F                     	;# 
  2771  0F30                     	;# 
  2772  0F31                     	;# 
  2773  0F32                     	;# 
  2774  0F38                     	;# 
  2775  0F39                     	;# 
  2776  0F3A                     	;# 
  2777  0F3B                     	;# 
  2778  0F3C                     	;# 
  2779  0F3D                     	;# 
  2780  0F3E                     	;# 
  2781  0F3F                     	;# 
  2782  0F40                     	;# 
  2783  0F41                     	;# 
  2784  0F43                     	;# 
  2785  0F44                     	;# 
  2786  0F45                     	;# 
  2787  0F46                     	;# 
  2788  0F47                     	;# 
  2789  0F48                     	;# 
  2790  0F49                     	;# 
  2791  0F4A                     	;# 
  2792  0F4B                     	;# 
  2793  0F4C                     	;# 
  2794  0F4E                     	;# 
  2795  0F4F                     	;# 
  2796  0F50                     	;# 
  2797  0F51                     	;# 
  2798  0F52                     	;# 
  2799  0F53                     	;# 
  2800  0F54                     	;# 
  2801  0F55                     	;# 
  2802  0F56                     	;# 
  2803  0F57                     	;# 
  2804  0F59                     	;# 
  2805  0F5A                     	;# 
  2806  0F5B                     	;# 
  2807  0F5C                     	;# 
  2808  0F5D                     	;# 
  2809  0F61                     	;# 
  2810  0F62                     	;# 
  2811  0F64                     	;# 
  2812  0F65                     	;# 
  2813  0F66                     	;# 
  2814  0F67                     	;# 
  2815  0F68                     	;# 
  2816  0F69                     	;# 
  2817  0F6A                     	;# 
  2818  0F6B                     	;# 
  2819  0F6C                     	;# 
  2820  0F6D                     	;# 
  2821  0FE4                     	;# 
  2822  0FE5                     	;# 
  2823  0FE6                     	;# 
  2824  0FE7                     	;# 
  2825  0FE8                     	;# 
  2826  0FE9                     	;# 
  2827  0FEA                     	;# 
  2828  0FEB                     	;# 
  2829  0FED                     	;# 
  2830  0FEE                     	;# 
  2831  0FEF                     	;# 
  2832  0000                     	;# 
  2833  0001                     	;# 
  2834  0002                     	;# 
  2835  0003                     	;# 
  2836  0004                     	;# 
  2837  0005                     	;# 
  2838  0006                     	;# 
  2839  0007                     	;# 
  2840  0008                     	;# 
  2841  0009                     	;# 
  2842  000A                     	;# 
  2843  000B                     	;# 
  2844  000C                     	;# 
  2845  000D                     	;# 
  2846  000E                     	;# 
  2847  000F                     	;# 
  2848  0010                     	;# 
  2849  0011                     	;# 
  2850  0012                     	;# 
  2851  0013                     	;# 
  2852  0014                     	;# 
  2853  0015                     	;# 
  2854  0016                     	;# 
  2855  0017                     	;# 
  2856  0018                     	;# 
  2857  0019                     	;# 
  2858  001A                     	;# 
  2859  001C                     	;# 
  2860  001C                     	;# 
  2861  001D                     	;# 
  2862  001D                     	;# 
  2863  001E                     	;# 
  2864  001F                     	;# 
  2865  008C                     	;# 
  2866  008C                     	;# 
  2867  008D                     	;# 
  2868  008E                     	;# 
  2869  008E                     	;# 
  2870  008F                     	;# 
  2871  0090                     	;# 
  2872  0090                     	;# 
  2873  0091                     	;# 
  2874  0093                     	;# 
  2875  0094                     	;# 
  2876  0095                     	;# 
  2877  0096                     	;# 
  2878  0097                     	;# 
  2879  0098                     	;# 
  2880  0099                     	;# 
  2881  009A                     	;# 
  2882  009B                     	;# 
  2883  009C                     	;# 
  2884  009D                     	;# 
  2885  009E                     	;# 
  2886  010C                     	;# 
  2887  010D                     	;# 
  2888  010E                     	;# 
  2889  010E                     	;# 
  2890  010F                     	;# 
  2891  0110                     	;# 
  2892  0110                     	;# 
  2893  0111                     	;# 
  2894  0112                     	;# 
  2895  0112                     	;# 
  2896  0113                     	;# 
  2897  0114                     	;# 
  2898  0114                     	;# 
  2899  0115                     	;# 
  2900  0116                     	;# 
  2901  0116                     	;# 
  2902  0117                     	;# 
  2903  0119                     	;# 
  2904  0119                     	;# 
  2905  0119                     	;# 
  2906  011A                     	;# 
  2907  011A                     	;# 
  2908  011A                     	;# 
  2909  011B                     	;# 
  2910  011B                     	;# 
  2911  011B                     	;# 
  2912  011B                     	;# 
  2913  011B                     	;# 
  2914  011C                     	;# 
  2915  011C                     	;# 
  2916  011C                     	;# 
  2917  011D                     	;# 
  2918  011D                     	;# 
  2919  011D                     	;# 
  2920  011E                     	;# 
  2921  011E                     	;# 
  2922  011E                     	;# 
  2923  011F                     	;# 
  2924  011F                     	;# 
  2925  011F                     	;# 
  2926  011F                     	;# 
  2927  011F                     	;# 
  2928  018C                     	;# 
  2929  018D                     	;# 
  2930  018E                     	;# 
  2931  018F                     	;# 
  2932  0190                     	;# 
  2933  0191                     	;# 
  2934  0192                     	;# 
  2935  0196                     	;# 
  2936  0197                     	;# 
  2937  0198                     	;# 
  2938  0199                     	;# 
  2939  019A                     	;# 
  2940  019B                     	;# 
  2941  019C                     	;# 
  2942  020C                     	;# 
  2943  020C                     	;# 
  2944  020D                     	;# 
  2945  020E                     	;# 
  2946  020F                     	;# 
  2947  020F                     	;# 
  2948  0210                     	;# 
  2949  0210                     	;# 
  2950  0211                     	;# 
  2951  0211                     	;# 
  2952  0212                     	;# 
  2953  0212                     	;# 
  2954  0213                     	;# 
  2955  0214                     	;# 
  2956  0215                     	;# 
  2957  0215                     	;# 
  2958  0216                     	;# 
  2959  0216                     	;# 
  2960  0217                     	;# 
  2961  0217                     	;# 
  2962  0218                     	;# 
  2963  0218                     	;# 
  2964  0219                     	;# 
  2965  021A                     	;# 
  2966  021B                     	;# 
  2967  021B                     	;# 
  2968  021C                     	;# 
  2969  021C                     	;# 
  2970  021D                     	;# 
  2971  021D                     	;# 
  2972  021E                     	;# 
  2973  021F                     	;# 
  2974  028C                     	;# 
  2975  028C                     	;# 
  2976  028D                     	;# 
  2977  028D                     	;# 
  2978  028E                     	;# 
  2979  028F                     	;# 
  2980  0290                     	;# 
  2981  0290                     	;# 
  2982  0291                     	;# 
  2983  0292                     	;# 
  2984  0292                     	;# 
  2985  0293                     	;# 
  2986  0293                     	;# 
  2987  0294                     	;# 
  2988  0295                     	;# 
  2989  0296                     	;# 
  2990  0296                     	;# 
  2991  0297                     	;# 
  2992  0298                     	;# 
  2993  0298                     	;# 
  2994  0299                     	;# 
  2995  0299                     	;# 
  2996  029A                     	;# 
  2997  029B                     	;# 
  2998  029C                     	;# 
  2999  029C                     	;# 
  3000  029D                     	;# 
  3001  030C                     	;# 
  3002  030C                     	;# 
  3003  030D                     	;# 
  3004  030E                     	;# 
  3005  030F                     	;# 
  3006  0310                     	;# 
  3007  0310                     	;# 
  3008  0311                     	;# 
  3009  0312                     	;# 
  3010  0313                     	;# 
  3011  0314                     	;# 
  3012  0314                     	;# 
  3013  0315                     	;# 
  3014  0316                     	;# 
  3015  0317                     	;# 
  3016  0318                     	;# 
  3017  0318                     	;# 
  3018  0319                     	;# 
  3019  031A                     	;# 
  3020  031B                     	;# 
  3021  031C                     	;# 
  3022  031C                     	;# 
  3023  031D                     	;# 
  3024  031E                     	;# 
  3025  031F                     	;# 
  3026  038C                     	;# 
  3027  038C                     	;# 
  3028  038D                     	;# 
  3029  038E                     	;# 
  3030  0390                     	;# 
  3031  0390                     	;# 
  3032  0391                     	;# 
  3033  0392                     	;# 
  3034  040C                     	;# 
  3035  040D                     	;# 
  3036  040E                     	;# 
  3037  040F                     	;# 
  3038  0410                     	;# 
  3039  0411                     	;# 
  3040  0416                     	;# 
  3041  0416                     	;# 
  3042  0417                     	;# 
  3043  0418                     	;# 
  3044  0418                     	;# 
  3045  0419                     	;# 
  3046  041A                     	;# 
  3047  041A                     	;# 
  3048  041B                     	;# 
  3049  041C                     	;# 
  3050  041C                     	;# 
  3051  041D                     	;# 
  3052  041E                     	;# 
  3053  041F                     	;# 
  3054  048C                     	;# 
  3055  048C                     	;# 
  3056  048D                     	;# 
  3057  048E                     	;# 
  3058  048F                     	;# 
  3059  048F                     	;# 
  3060  0490                     	;# 
  3061  0491                     	;# 
  3062  0492                     	;# 
  3063  0492                     	;# 
  3064  0493                     	;# 
  3065  0494                     	;# 
  3066  0495                     	;# 
  3067  0495                     	;# 
  3068  0496                     	;# 
  3069  0497                     	;# 
  3070  0498                     	;# 
  3071  0499                     	;# 
  3072  049A                     	;# 
  3073  049B                     	;# 
  3074  049C                     	;# 
  3075  049D                     	;# 
  3076  050C                     	;# 
  3077  050C                     	;# 
  3078  050D                     	;# 
  3079  050E                     	;# 
  3080  050F                     	;# 
  3081  050F                     	;# 
  3082  0510                     	;# 
  3083  0511                     	;# 
  3084  0512                     	;# 
  3085  0512                     	;# 
  3086  0513                     	;# 
  3087  0514                     	;# 
  3088  0515                     	;# 
  3089  0515                     	;# 
  3090  0516                     	;# 
  3091  0517                     	;# 
  3092  0518                     	;# 
  3093  0519                     	;# 
  3094  051A                     	;# 
  3095  051B                     	;# 
  3096  051C                     	;# 
  3097  051D                     	;# 
  3098  058C                     	;# 
  3099  058C                     	;# 
  3100  058D                     	;# 
  3101  058E                     	;# 
  3102  058F                     	;# 
  3103  058F                     	;# 
  3104  0590                     	;# 
  3105  0591                     	;# 
  3106  0592                     	;# 
  3107  0593                     	;# 
  3108  060C                     	;# 
  3109  060D                     	;# 
  3110  060E                     	;# 
  3111  060F                     	;# 
  3112  0610                     	;# 
  3113  0611                     	;# 
  3114  0612                     	;# 
  3115  0613                     	;# 
  3116  0614                     	;# 
  3117  0616                     	;# 
  3118  0617                     	;# 
  3119  0618                     	;# 
  3120  0619                     	;# 
  3121  061A                     	;# 
  3122  061B                     	;# 
  3123  061C                     	;# 
  3124  061D                     	;# 
  3125  061E                     	;# 
  3126  068C                     	;# 
  3127  068D                     	;# 
  3128  068E                     	;# 
  3129  068F                     	;# 
  3130  0690                     	;# 
  3131  0691                     	;# 
  3132  0692                     	;# 
  3133  0693                     	;# 
  3134  0694                     	;# 
  3135  070C                     	;# 
  3136  070D                     	;# 
  3137  070E                     	;# 
  3138  070F                     	;# 
  3139  0710                     	;# 
  3140  0711                     	;# 
  3141  0712                     	;# 
  3142  0713                     	;# 
  3143  0714                     	;# 
  3144  0716                     	;# 
  3145  0717                     	;# 
  3146  0718                     	;# 
  3147  0719                     	;# 
  3148  071A                     	;# 
  3149  071B                     	;# 
  3150  071C                     	;# 
  3151  071D                     	;# 
  3152  071E                     	;# 
  3153  0796                     	;# 
  3154  0797                     	;# 
  3155  0798                     	;# 
  3156  0799                     	;# 
  3157  079A                     	;# 
  3158  079B                     	;# 
  3159  080C                     	;# 
  3160  080D                     	;# 
  3161  080E                     	;# 
  3162  080F                     	;# 
  3163  0810                     	;# 
  3164  0811                     	;# 
  3165  0812                     	;# 
  3166  0813                     	;# 
  3167  0814                     	;# 
  3168  081A                     	;# 
  3169  081B                     	;# 
  3170  081C                     	;# 
  3171  081D                     	;# 
  3172  081E                     	;# 
  3173  081F                     	;# 
  3174  088C                     	;# 
  3175  088D                     	;# 
  3176  088E                     	;# 
  3177  088F                     	;# 
  3178  0890                     	;# 
  3179  0891                     	;# 
  3180  0892                     	;# 
  3181  0893                     	;# 
  3182  0895                     	;# 
  3183  0896                     	;# 
  3184  0897                     	;# 
  3185  0898                     	;# 
  3186  0899                     	;# 
  3187  089A                     	;# 
  3188  089B                     	;# 
  3189  090C                     	;# 
  3190  090E                     	;# 
  3191  090F                     	;# 
  3192  091F                     	;# 
  3193  091F                     	;# 
  3194  098F                     	;# 
  3195  098F                     	;# 
  3196  0990                     	;# 
  3197  0991                     	;# 
  3198  0992                     	;# 
  3199  0993                     	;# 
  3200  0994                     	;# 
  3201  0995                     	;# 
  3202  0996                     	;# 
  3203  0997                     	;# 
  3204  0E0F                     	;# 
  3205  0E10                     	;# 
  3206  0E11                     	;# 
  3207  0E12                     	;# 
  3208  0E13                     	;# 
  3209  0E14                     	;# 
  3210  0E15                     	;# 
  3211  0E16                     	;# 
  3212  0E17                     	;# 
  3213  0E18                     	;# 
  3214  0E19                     	;# 
  3215  0E1A                     	;# 
  3216  0E1B                     	;# 
  3217  0E1C                     	;# 
  3218  0E1D                     	;# 
  3219  0E1E                     	;# 
  3220  0E1F                     	;# 
  3221  0E20                     	;# 
  3222  0E21                     	;# 
  3223  0E22                     	;# 
  3224  0E23                     	;# 
  3225  0E24                     	;# 
  3226  0E25                     	;# 
  3227  0E26                     	;# 
  3228  0E27                     	;# 
  3229  0E28                     	;# 
  3230  0E29                     	;# 
  3231  0E2A                     	;# 
  3232  0E2B                     	;# 
  3233  0E2C                     	;# 
  3234  0E2D                     	;# 
  3235  0E2E                     	;# 
  3236  0E2F                     	;# 
  3237  0E30                     	;# 
  3238  0E31                     	;# 
  3239  0E32                     	;# 
  3240  0E33                     	;# 
  3241  0E34                     	;# 
  3242  0E35                     	;# 
  3243  0E36                     	;# 
  3244  0E37                     	;# 
  3245  0E8F                     	;# 
  3246  0E90                     	;# 
  3247  0E91                     	;# 
  3248  0E92                     	;# 
  3249  0E93                     	;# 
  3250  0E94                     	;# 
  3251  0E95                     	;# 
  3252  0E96                     	;# 
  3253  0E97                     	;# 
  3254  0E9C                     	;# 
  3255  0E9D                     	;# 
  3256  0E9E                     	;# 
  3257  0EA1                     	;# 
  3258  0EA2                     	;# 
  3259  0EA3                     	;# 
  3260  0EA4                     	;# 
  3261  0EA5                     	;# 
  3262  0EA9                     	;# 
  3263  0EAA                     	;# 
  3264  0EAB                     	;# 
  3265  0EAC                     	;# 
  3266  0EB1                     	;# 
  3267  0EB2                     	;# 
  3268  0EB3                     	;# 
  3269  0EB8                     	;# 
  3270  0EB9                     	;# 
  3271  0EBA                     	;# 
  3272  0EBB                     	;# 
  3273  0EBC                     	;# 
  3274  0EBD                     	;# 
  3275  0EBE                     	;# 
  3276  0EC3                     	;# 
  3277  0EC5                     	;# 
  3278  0EC6                     	;# 
  3279  0EC7                     	;# 
  3280  0EC8                     	;# 
  3281  0EC9                     	;# 
  3282  0ECA                     	;# 
  3283  0ECB                     	;# 
  3284  0ECC                     	;# 
  3285  0F10                     	;# 
  3286  0F11                     	;# 
  3287  0F12                     	;# 
  3288  0F13                     	;# 
  3289  0F14                     	;# 
  3290  0F15                     	;# 
  3291  0F16                     	;# 
  3292  0F17                     	;# 
  3293  0F18                     	;# 
  3294  0F19                     	;# 
  3295  0F1A                     	;# 
  3296  0F1B                     	;# 
  3297  0F1C                     	;# 
  3298  0F1D                     	;# 
  3299  0F1E                     	;# 
  3300  0F1F                     	;# 
  3301  0F20                     	;# 
  3302  0F21                     	;# 
  3303  0F22                     	;# 
  3304  0F23                     	;# 
  3305  0F24                     	;# 
  3306  0F25                     	;# 
  3307  0F26                     	;# 
  3308  0F27                     	;# 
  3309  0F28                     	;# 
  3310  0F29                     	;# 
  3311  0F2A                     	;# 
  3312  0F2B                     	;# 
  3313  0F2C                     	;# 
  3314  0F2D                     	;# 
  3315  0F2E                     	;# 
  3316  0F2F                     	;# 
  3317  0F30                     	;# 
  3318  0F31                     	;# 
  3319  0F32                     	;# 
  3320  0F38                     	;# 
  3321  0F39                     	;# 
  3322  0F3A                     	;# 
  3323  0F3B                     	;# 
  3324  0F3C                     	;# 
  3325  0F3D                     	;# 
  3326  0F3E                     	;# 
  3327  0F3F                     	;# 
  3328  0F40                     	;# 
  3329  0F41                     	;# 
  3330  0F43                     	;# 
  3331  0F44                     	;# 
  3332  0F45                     	;# 
  3333  0F46                     	;# 
  3334  0F47                     	;# 
  3335  0F48                     	;# 
  3336  0F49                     	;# 
  3337  0F4A                     	;# 
  3338  0F4B                     	;# 
  3339  0F4C                     	;# 
  3340  0F4E                     	;# 
  3341  0F4F                     	;# 
  3342  0F50                     	;# 
  3343  0F51                     	;# 
  3344  0F52                     	;# 
  3345  0F53                     	;# 
  3346  0F54                     	;# 
  3347  0F55                     	;# 
  3348  0F56                     	;# 
  3349  0F57                     	;# 
  3350  0F59                     	;# 
  3351  0F5A                     	;# 
  3352  0F5B                     	;# 
  3353  0F5C                     	;# 
  3354  0F5D                     	;# 
  3355  0F61                     	;# 
  3356  0F62                     	;# 
  3357  0F64                     	;# 
  3358  0F65                     	;# 
  3359  0F66                     	;# 
  3360  0F67                     	;# 
  3361  0F68                     	;# 
  3362  0F69                     	;# 
  3363  0F6A                     	;# 
  3364  0F6B                     	;# 
  3365  0F6C                     	;# 
  3366  0F6D                     	;# 
  3367  0FE4                     	;# 
  3368  0FE5                     	;# 
  3369  0FE6                     	;# 
  3370  0FE7                     	;# 
  3371  0FE8                     	;# 
  3372  0FE9                     	;# 
  3373  0FEA                     	;# 
  3374  0FEB                     	;# 
  3375  0FED                     	;# 
  3376  0FEE                     	;# 
  3377  0FEF                     	;# 
  3378  0000                     	;# 
  3379  0001                     	;# 
  3380  0002                     	;# 
  3381  0003                     	;# 
  3382  0004                     	;# 
  3383  0005                     	;# 
  3384  0006                     	;# 
  3385  0007                     	;# 
  3386  0008                     	;# 
  3387  0009                     	;# 
  3388  000A                     	;# 
  3389  000B                     	;# 
  3390  000C                     	;# 
  3391  000D                     	;# 
  3392  000E                     	;# 
  3393  000F                     	;# 
  3394  0010                     	;# 
  3395  0011                     	;# 
  3396  0012                     	;# 
  3397  0013                     	;# 
  3398  0014                     	;# 
  3399  0015                     	;# 
  3400  0016                     	;# 
  3401  0017                     	;# 
  3402  0018                     	;# 
  3403  0019                     	;# 
  3404  001A                     	;# 
  3405  001C                     	;# 
  3406  001C                     	;# 
  3407  001D                     	;# 
  3408  001D                     	;# 
  3409  001E                     	;# 
  3410  001F                     	;# 
  3411  008C                     	;# 
  3412  008C                     	;# 
  3413  008D                     	;# 
  3414  008E                     	;# 
  3415  008E                     	;# 
  3416  008F                     	;# 
  3417  0090                     	;# 
  3418  0090                     	;# 
  3419  0091                     	;# 
  3420  0093                     	;# 
  3421  0094                     	;# 
  3422  0095                     	;# 
  3423  0096                     	;# 
  3424  0097                     	;# 
  3425  0098                     	;# 
  3426  0099                     	;# 
  3427  009A                     	;# 
  3428  009B                     	;# 
  3429  009C                     	;# 
  3430  009D                     	;# 
  3431  009E                     	;# 
  3432  010C                     	;# 
  3433  010D                     	;# 
  3434  010E                     	;# 
  3435  010E                     	;# 
  3436  010F                     	;# 
  3437  0110                     	;# 
  3438  0110                     	;# 
  3439  0111                     	;# 
  3440  0112                     	;# 
  3441  0112                     	;# 
  3442  0113                     	;# 
  3443  0114                     	;# 
  3444  0114                     	;# 
  3445  0115                     	;# 
  3446  0116                     	;# 
  3447  0116                     	;# 
  3448  0117                     	;# 
  3449  0119                     	;# 
  3450  0119                     	;# 
  3451  0119                     	;# 
  3452  011A                     	;# 
  3453  011A                     	;# 
  3454  011A                     	;# 
  3455  011B                     	;# 
  3456  011B                     	;# 
  3457  011B                     	;# 
  3458  011B                     	;# 
  3459  011B                     	;# 
  3460  011C                     	;# 
  3461  011C                     	;# 
  3462  011C                     	;# 
  3463  011D                     	;# 
  3464  011D                     	;# 
  3465  011D                     	;# 
  3466  011E                     	;# 
  3467  011E                     	;# 
  3468  011E                     	;# 
  3469  011F                     	;# 
  3470  011F                     	;# 
  3471  011F                     	;# 
  3472  011F                     	;# 
  3473  011F                     	;# 
  3474  018C                     	;# 
  3475  018D                     	;# 
  3476  018E                     	;# 
  3477  018F                     	;# 
  3478  0190                     	;# 
  3479  0191                     	;# 
  3480  0192                     	;# 
  3481  0196                     	;# 
  3482  0197                     	;# 
  3483  0198                     	;# 
  3484  0199                     	;# 
  3485  019A                     	;# 
  3486  019B                     	;# 
  3487  019C                     	;# 
  3488  020C                     	;# 
  3489  020C                     	;# 
  3490  020D                     	;# 
  3491  020E                     	;# 
  3492  020F                     	;# 
  3493  020F                     	;# 
  3494  0210                     	;# 
  3495  0210                     	;# 
  3496  0211                     	;# 
  3497  0211                     	;# 
  3498  0212                     	;# 
  3499  0212                     	;# 
  3500  0213                     	;# 
  3501  0214                     	;# 
  3502  0215                     	;# 
  3503  0215                     	;# 
  3504  0216                     	;# 
  3505  0216                     	;# 
  3506  0217                     	;# 
  3507  0217                     	;# 
  3508  0218                     	;# 
  3509  0218                     	;# 
  3510  0219                     	;# 
  3511  021A                     	;# 
  3512  021B                     	;# 
  3513  021B                     	;# 
  3514  021C                     	;# 
  3515  021C                     	;# 
  3516  021D                     	;# 
  3517  021D                     	;# 
  3518  021E                     	;# 
  3519  021F                     	;# 
  3520  028C                     	;# 
  3521  028C                     	;# 
  3522  028D                     	;# 
  3523  028D                     	;# 
  3524  028E                     	;# 
  3525  028F                     	;# 
  3526  0290                     	;# 
  3527  0290                     	;# 
  3528  0291                     	;# 
  3529  0292                     	;# 
  3530  0292                     	;# 
  3531  0293                     	;# 
  3532  0293                     	;# 
  3533  0294                     	;# 
  3534  0295                     	;# 
  3535  0296                     	;# 
  3536  0296                     	;# 
  3537  0297                     	;# 
  3538  0298                     	;# 
  3539  0298                     	;# 
  3540  0299                     	;# 
  3541  0299                     	;# 
  3542  029A                     	;# 
  3543  029B                     	;# 
  3544  029C                     	;# 
  3545  029C                     	;# 
  3546  029D                     	;# 
  3547  030C                     	;# 
  3548  030C                     	;# 
  3549  030D                     	;# 
  3550  030E                     	;# 
  3551  030F                     	;# 
  3552  0310                     	;# 
  3553  0310                     	;# 
  3554  0311                     	;# 
  3555  0312                     	;# 
  3556  0313                     	;# 
  3557  0314                     	;# 
  3558  0314                     	;# 
  3559  0315                     	;# 
  3560  0316                     	;# 
  3561  0317                     	;# 
  3562  0318                     	;# 
  3563  0318                     	;# 
  3564  0319                     	;# 
  3565  031A                     	;# 
  3566  031B                     	;# 
  3567  031C                     	;# 
  3568  031C                     	;# 
  3569  031D                     	;# 
  3570  031E                     	;# 
  3571  031F                     	;# 
  3572  038C                     	;# 
  3573  038C                     	;# 
  3574  038D                     	;# 
  3575  038E                     	;# 
  3576  0390                     	;# 
  3577  0390                     	;# 
  3578  0391                     	;# 
  3579  0392                     	;# 
  3580  040C                     	;# 
  3581  040D                     	;# 
  3582  040E                     	;# 
  3583  040F                     	;# 
  3584  0410                     	;# 
  3585  0411                     	;# 
  3586  0416                     	;# 
  3587  0416                     	;# 
  3588  0417                     	;# 
  3589  0418                     	;# 
  3590  0418                     	;# 
  3591  0419                     	;# 
  3592  041A                     	;# 
  3593  041A                     	;# 
  3594  041B                     	;# 
  3595  041C                     	;# 
  3596  041C                     	;# 
  3597  041D                     	;# 
  3598  041E                     	;# 
  3599  041F                     	;# 
  3600  048C                     	;# 
  3601  048C                     	;# 
  3602  048D                     	;# 
  3603  048E                     	;# 
  3604  048F                     	;# 
  3605  048F                     	;# 
  3606  0490                     	;# 
  3607  0491                     	;# 
  3608  0492                     	;# 
  3609  0492                     	;# 
  3610  0493                     	;# 
  3611  0494                     	;# 
  3612  0495                     	;# 
  3613  0495                     	;# 
  3614  0496                     	;# 
  3615  0497                     	;# 
  3616  0498                     	;# 
  3617  0499                     	;# 
  3618  049A                     	;# 
  3619  049B                     	;# 
  3620  049C                     	;# 
  3621  049D                     	;# 
  3622  050C                     	;# 
  3623  050C                     	;# 
  3624  050D                     	;# 
  3625  050E                     	;# 
  3626  050F                     	;# 
  3627  050F                     	;# 
  3628  0510                     	;# 
  3629  0511                     	;# 
  3630  0512                     	;# 
  3631  0512                     	;# 
  3632  0513                     	;# 
  3633  0514                     	;# 
  3634  0515                     	;# 
  3635  0515                     	;# 
  3636  0516                     	;# 
  3637  0517                     	;# 
  3638  0518                     	;# 
  3639  0519                     	;# 
  3640  051A                     	;# 
  3641  051B                     	;# 
  3642  051C                     	;# 
  3643  051D                     	;# 
  3644  058C                     	;# 
  3645  058C                     	;# 
  3646  058D                     	;# 
  3647  058E                     	;# 
  3648  058F                     	;# 
  3649  058F                     	;# 
  3650  0590                     	;# 
  3651  0591                     	;# 
  3652  0592                     	;# 
  3653  0593                     	;# 
  3654  060C                     	;# 
  3655  060D                     	;# 
  3656  060E                     	;# 
  3657  060F                     	;# 
  3658  0610                     	;# 
  3659  0611                     	;# 
  3660  0612                     	;# 
  3661  0613                     	;# 
  3662  0614                     	;# 
  3663  0616                     	;# 
  3664  0617                     	;# 
  3665  0618                     	;# 
  3666  0619                     	;# 
  3667  061A                     	;# 
  3668  061B                     	;# 
  3669  061C                     	;# 
  3670  061D                     	;# 
  3671  061E                     	;# 
  3672  068C                     	;# 
  3673  068D                     	;# 
  3674  068E                     	;# 
  3675  068F                     	;# 
  3676  0690                     	;# 
  3677  0691                     	;# 
  3678  0692                     	;# 
  3679  0693                     	;# 
  3680  0694                     	;# 
  3681  070C                     	;# 
  3682  070D                     	;# 
  3683  070E                     	;# 
  3684  070F                     	;# 
  3685  0710                     	;# 
  3686  0711                     	;# 
  3687  0712                     	;# 
  3688  0713                     	;# 
  3689  0714                     	;# 
  3690  0716                     	;# 
  3691  0717                     	;# 
  3692  0718                     	;# 
  3693  0719                     	;# 
  3694  071A                     	;# 
  3695  071B                     	;# 
  3696  071C                     	;# 
  3697  071D                     	;# 
  3698  071E                     	;# 
  3699  0796                     	;# 
  3700  0797                     	;# 
  3701  0798                     	;# 
  3702  0799                     	;# 
  3703  079A                     	;# 
  3704  079B                     	;# 
  3705  080C                     	;# 
  3706  080D                     	;# 
  3707  080E                     	;# 
  3708  080F                     	;# 
  3709  0810                     	;# 
  3710  0811                     	;# 
  3711  0812                     	;# 
  3712  0813                     	;# 
  3713  0814                     	;# 
  3714  081A                     	;# 
  3715  081B                     	;# 
  3716  081C                     	;# 
  3717  081D                     	;# 
  3718  081E                     	;# 
  3719  081F                     	;# 
  3720  088C                     	;# 
  3721  088D                     	;# 
  3722  088E                     	;# 
  3723  088F                     	;# 
  3724  0890                     	;# 
  3725  0891                     	;# 
  3726  0892                     	;# 
  3727  0893                     	;# 
  3728  0895                     	;# 
  3729  0896                     	;# 
  3730  0897                     	;# 
  3731  0898                     	;# 
  3732  0899                     	;# 
  3733  089A                     	;# 
  3734  089B                     	;# 
  3735  090C                     	;# 
  3736  090E                     	;# 
  3737  090F                     	;# 
  3738  091F                     	;# 
  3739  091F                     	;# 
  3740  098F                     	;# 
  3741  098F                     	;# 
  3742  0990                     	;# 
  3743  0991                     	;# 
  3744  0992                     	;# 
  3745  0993                     	;# 
  3746  0994                     	;# 
  3747  0995                     	;# 
  3748  0996                     	;# 
  3749  0997                     	;# 
  3750  0E0F                     	;# 
  3751  0E10                     	;# 
  3752  0E11                     	;# 
  3753  0E12                     	;# 
  3754  0E13                     	;# 
  3755  0E14                     	;# 
  3756  0E15                     	;# 
  3757  0E16                     	;# 
  3758  0E17                     	;# 
  3759  0E18                     	;# 
  3760  0E19                     	;# 
  3761  0E1A                     	;# 
  3762  0E1B                     	;# 
  3763  0E1C                     	;# 
  3764  0E1D                     	;# 
  3765  0E1E                     	;# 
  3766  0E1F                     	;# 
  3767  0E20                     	;# 
  3768  0E21                     	;# 
  3769  0E22                     	;# 
  3770  0E23                     	;# 
  3771  0E24                     	;# 
  3772  0E25                     	;# 
  3773  0E26                     	;# 
  3774  0E27                     	;# 
  3775  0E28                     	;# 
  3776  0E29                     	;# 
  3777  0E2A                     	;# 
  3778  0E2B                     	;# 
  3779  0E2C                     	;# 
  3780  0E2D                     	;# 
  3781  0E2E                     	;# 
  3782  0E2F                     	;# 
  3783  0E30                     	;# 
  3784  0E31                     	;# 
  3785  0E32                     	;# 
  3786  0E33                     	;# 
  3787  0E34                     	;# 
  3788  0E35                     	;# 
  3789  0E36                     	;# 
  3790  0E37                     	;# 
  3791  0E8F                     	;# 
  3792  0E90                     	;# 
  3793  0E91                     	;# 
  3794  0E92                     	;# 
  3795  0E93                     	;# 
  3796  0E94                     	;# 
  3797  0E95                     	;# 
  3798  0E96                     	;# 
  3799  0E97                     	;# 
  3800  0E9C                     	;# 
  3801  0E9D                     	;# 
  3802  0E9E                     	;# 
  3803  0EA1                     	;# 
  3804  0EA2                     	;# 
  3805  0EA3                     	;# 
  3806  0EA4                     	;# 
  3807  0EA5                     	;# 
  3808  0EA9                     	;# 
  3809  0EAA                     	;# 
  3810  0EAB                     	;# 
  3811  0EAC                     	;# 
  3812  0EB1                     	;# 
  3813  0EB2                     	;# 
  3814  0EB3                     	;# 
  3815  0EB8                     	;# 
  3816  0EB9                     	;# 
  3817  0EBA                     	;# 
  3818  0EBB                     	;# 
  3819  0EBC                     	;# 
  3820  0EBD                     	;# 
  3821  0EBE                     	;# 
  3822  0EC3                     	;# 
  3823  0EC5                     	;# 
  3824  0EC6                     	;# 
  3825  0EC7                     	;# 
  3826  0EC8                     	;# 
  3827  0EC9                     	;# 
  3828  0ECA                     	;# 
  3829  0ECB                     	;# 
  3830  0ECC                     	;# 
  3831  0F10                     	;# 
  3832  0F11                     	;# 
  3833  0F12                     	;# 
  3834  0F13                     	;# 
  3835  0F14                     	;# 
  3836  0F15                     	;# 
  3837  0F16                     	;# 
  3838  0F17                     	;# 
  3839  0F18                     	;# 
  3840  0F19                     	;# 
  3841  0F1A                     	;# 
  3842  0F1B                     	;# 
  3843  0F1C                     	;# 
  3844  0F1D                     	;# 
  3845  0F1E                     	;# 
  3846  0F1F                     	;# 
  3847  0F20                     	;# 
  3848  0F21                     	;# 
  3849  0F22                     	;# 
  3850  0F23                     	;# 
  3851  0F24                     	;# 
  3852  0F25                     	;# 
  3853  0F26                     	;# 
  3854  0F27                     	;# 
  3855  0F28                     	;# 
  3856  0F29                     	;# 
  3857  0F2A                     	;# 
  3858  0F2B                     	;# 
  3859  0F2C                     	;# 
  3860  0F2D                     	;# 
  3861  0F2E                     	;# 
  3862  0F2F                     	;# 
  3863  0F30                     	;# 
  3864  0F31                     	;# 
  3865  0F32                     	;# 
  3866  0F38                     	;# 
  3867  0F39                     	;# 
  3868  0F3A                     	;# 
  3869  0F3B                     	;# 
  3870  0F3C                     	;# 
  3871  0F3D                     	;# 
  3872  0F3E                     	;# 
  3873  0F3F                     	;# 
  3874  0F40                     	;# 
  3875  0F41                     	;# 
  3876  0F43                     	;# 
  3877  0F44                     	;# 
  3878  0F45                     	;# 
  3879  0F46                     	;# 
  3880  0F47                     	;# 
  3881  0F48                     	;# 
  3882  0F49                     	;# 
  3883  0F4A                     	;# 
  3884  0F4B                     	;# 
  3885  0F4C                     	;# 
  3886  0F4E                     	;# 
  3887  0F4F                     	;# 
  3888  0F50                     	;# 
  3889  0F51                     	;# 
  3890  0F52                     	;# 
  3891  0F53                     	;# 
  3892  0F54                     	;# 
  3893  0F55                     	;# 
  3894  0F56                     	;# 
  3895  0F57                     	;# 
  3896  0F59                     	;# 
  3897  0F5A                     	;# 
  3898  0F5B                     	;# 
  3899  0F5C                     	;# 
  3900  0F5D                     	;# 
  3901  0F61                     	;# 
  3902  0F62                     	;# 
  3903  0F64                     	;# 
  3904  0F65                     	;# 
  3905  0F66                     	;# 
  3906  0F67                     	;# 
  3907  0F68                     	;# 
  3908  0F69                     	;# 
  3909  0F6A                     	;# 
  3910  0F6B                     	;# 
  3911  0F6C                     	;# 
  3912  0F6D                     	;# 
  3913  0FE4                     	;# 
  3914  0FE5                     	;# 
  3915  0FE6                     	;# 
  3916  0FE7                     	;# 
  3917  0FE8                     	;# 
  3918  0FE9                     	;# 
  3919  0FEA                     	;# 
  3920  0FEB                     	;# 
  3921  0FED                     	;# 
  3922  0FEE                     	;# 
  3923  0FEF                     	;# 
  3924  0000                     	;# 
  3925  0001                     	;# 
  3926  0002                     	;# 
  3927  0003                     	;# 
  3928  0004                     	;# 
  3929  0005                     	;# 
  3930  0006                     	;# 
  3931  0007                     	;# 
  3932  0008                     	;# 
  3933  0009                     	;# 
  3934  000A                     	;# 
  3935  000B                     	;# 
  3936  000C                     	;# 
  3937  000D                     	;# 
  3938  000E                     	;# 
  3939  000F                     	;# 
  3940  0010                     	;# 
  3941  0011                     	;# 
  3942  0012                     	;# 
  3943  0013                     	;# 
  3944  0014                     	;# 
  3945  0015                     	;# 
  3946  0016                     	;# 
  3947  0017                     	;# 
  3948  0018                     	;# 
  3949  0019                     	;# 
  3950  001A                     	;# 
  3951  001C                     	;# 
  3952  001C                     	;# 
  3953  001D                     	;# 
  3954  001D                     	;# 
  3955  001E                     	;# 
  3956  001F                     	;# 
  3957  008C                     	;# 
  3958  008C                     	;# 
  3959  008D                     	;# 
  3960  008E                     	;# 
  3961  008E                     	;# 
  3962  008F                     	;# 
  3963  0090                     	;# 
  3964  0090                     	;# 
  3965  0091                     	;# 
  3966  0093                     	;# 
  3967  0094                     	;# 
  3968  0095                     	;# 
  3969  0096                     	;# 
  3970  0097                     	;# 
  3971  0098                     	;# 
  3972  0099                     	;# 
  3973  009A                     	;# 
  3974  009B                     	;# 
  3975  009C                     	;# 
  3976  009D                     	;# 
  3977  009E                     	;# 
  3978  010C                     	;# 
  3979  010D                     	;# 
  3980  010E                     	;# 
  3981  010E                     	;# 
  3982  010F                     	;# 
  3983  0110                     	;# 
  3984  0110                     	;# 
  3985  0111                     	;# 
  3986  0112                     	;# 
  3987  0112                     	;# 
  3988  0113                     	;# 
  3989  0114                     	;# 
  3990  0114                     	;# 
  3991  0115                     	;# 
  3992  0116                     	;# 
  3993  0116                     	;# 
  3994  0117                     	;# 
  3995  0119                     	;# 
  3996  0119                     	;# 
  3997  0119                     	;# 
  3998  011A                     	;# 
  3999  011A                     	;# 
  4000  011A                     	;# 
  4001  011B                     	;# 
  4002  011B                     	;# 
  4003  011B                     	;# 
  4004  011B                     	;# 
  4005  011B                     	;# 
  4006  011C                     	;# 
  4007  011C                     	;# 
  4008  011C                     	;# 
  4009  011D                     	;# 
  4010  011D                     	;# 
  4011  011D                     	;# 
  4012  011E                     	;# 
  4013  011E                     	;# 
  4014  011E                     	;# 
  4015  011F                     	;# 
  4016  011F                     	;# 
  4017  011F                     	;# 
  4018  011F                     	;# 
  4019  011F                     	;# 
  4020  018C                     	;# 
  4021  018D                     	;# 
  4022  018E                     	;# 
  4023  018F                     	;# 
  4024  0190                     	;# 
  4025  0191                     	;# 
  4026  0192                     	;# 
  4027  0196                     	;# 
  4028  0197                     	;# 
  4029  0198                     	;# 
  4030  0199                     	;# 
  4031  019A                     	;# 
  4032  019B                     	;# 
  4033  019C                     	;# 
  4034  020C                     	;# 
  4035  020C                     	;# 
  4036  020D                     	;# 
  4037  020E                     	;# 
  4038  020F                     	;# 
  4039  020F                     	;# 
  4040  0210                     	;# 
  4041  0210                     	;# 
  4042  0211                     	;# 
  4043  0211                     	;# 
  4044  0212                     	;# 
  4045  0212                     	;# 
  4046  0213                     	;# 
  4047  0214                     	;# 
  4048  0215                     	;# 
  4049  0215                     	;# 
  4050  0216                     	;# 
  4051  0216                     	;# 
  4052  0217                     	;# 
  4053  0217                     	;# 
  4054  0218                     	;# 
  4055  0218                     	;# 
  4056  0219                     	;# 
  4057  021A                     	;# 
  4058  021B                     	;# 
  4059  021B                     	;# 
  4060  021C                     	;# 
  4061  021C                     	;# 
  4062  021D                     	;# 
  4063  021D                     	;# 
  4064  021E                     	;# 
  4065  021F                     	;# 
  4066  028C                     	;# 
  4067  028C                     	;# 
  4068  028D                     	;# 
  4069  028D                     	;# 
  4070  028E                     	;# 
  4071  028F                     	;# 
  4072  0290                     	;# 
  4073  0290                     	;# 
  4074  0291                     	;# 
  4075  0292                     	;# 
  4076  0292                     	;# 
  4077  0293                     	;# 
  4078  0293                     	;# 
  4079  0294                     	;# 
  4080  0295                     	;# 
  4081  0296                     	;# 
  4082  0296                     	;# 
  4083  0297                     	;# 
  4084  0298                     	;# 
  4085  0298                     	;# 
  4086  0299                     	;# 
  4087  0299                     	;# 
  4088  029A                     	;# 
  4089  029B                     	;# 
  4090  029C                     	;# 
  4091  029C                     	;# 
  4092  029D                     	;# 
  4093  030C                     	;# 
  4094  030C                     	;# 
  4095  030D                     	;# 
  4096  030E                     	;# 
  4097  030F                     	;# 
  4098  0310                     	;# 
  4099  0310                     	;# 
  4100  0311                     	;# 
  4101  0312                     	;# 
  4102  0313                     	;# 
  4103  0314                     	;# 
  4104  0314                     	;# 
  4105  0315                     	;# 
  4106  0316                     	;# 
  4107  0317                     	;# 
  4108  0318                     	;# 
  4109  0318                     	;# 
  4110  0319                     	;# 
  4111  031A                     	;# 
  4112  031B                     	;# 
  4113  031C                     	;# 
  4114  031C                     	;# 
  4115  031D                     	;# 
  4116  031E                     	;# 
  4117  031F                     	;# 
  4118  038C                     	;# 
  4119  038C                     	;# 
  4120  038D                     	;# 
  4121  038E                     	;# 
  4122  0390                     	;# 
  4123  0390                     	;# 
  4124  0391                     	;# 
  4125  0392                     	;# 
  4126  040C                     	;# 
  4127  040D                     	;# 
  4128  040E                     	;# 
  4129  040F                     	;# 
  4130  0410                     	;# 
  4131  0411                     	;# 
  4132  0416                     	;# 
  4133  0416                     	;# 
  4134  0417                     	;# 
  4135  0418                     	;# 
  4136  0418                     	;# 
  4137  0419                     	;# 
  4138  041A                     	;# 
  4139  041A                     	;# 
  4140  041B                     	;# 
  4141  041C                     	;# 
  4142  041C                     	;# 
  4143  041D                     	;# 
  4144  041E                     	;# 
  4145  041F                     	;# 
  4146  048C                     	;# 
  4147  048C                     	;# 
  4148  048D                     	;# 
  4149  048E                     	;# 
  4150  048F                     	;# 
  4151  048F                     	;# 
  4152  0490                     	;# 
  4153  0491                     	;# 
  4154  0492                     	;# 
  4155  0492                     	;# 
  4156  0493                     	;# 
  4157  0494                     	;# 
  4158  0495                     	;# 
  4159  0495                     	;# 
  4160  0496                     	;# 
  4161  0497                     	;# 
  4162  0498                     	;# 
  4163  0499                     	;# 
  4164  049A                     	;# 
  4165  049B                     	;# 
  4166  049C                     	;# 
  4167  049D                     	;# 
  4168  050C                     	;# 
  4169  050C                     	;# 
  4170  050D                     	;# 
  4171  050E                     	;# 
  4172  050F                     	;# 
  4173  050F                     	;# 
  4174  0510                     	;# 
  4175  0511                     	;# 
  4176  0512                     	;# 
  4177  0512                     	;# 
  4178  0513                     	;# 
  4179  0514                     	;# 
  4180  0515                     	;# 
  4181  0515                     	;# 
  4182  0516                     	;# 
  4183  0517                     	;# 
  4184  0518                     	;# 
  4185  0519                     	;# 
  4186  051A                     	;# 
  4187  051B                     	;# 
  4188  051C                     	;# 
  4189  051D                     	;# 
  4190  058C                     	;# 
  4191  058C                     	;# 
  4192  058D                     	;# 
  4193  058E                     	;# 
  4194  058F                     	;# 
  4195  058F                     	;# 
  4196  0590                     	;# 
  4197  0591                     	;# 
  4198  0592                     	;# 
  4199  0593                     	;# 
  4200  060C                     	;# 
  4201  060D                     	;# 
  4202  060E                     	;# 
  4203  060F                     	;# 
  4204  0610                     	;# 
  4205  0611                     	;# 
  4206  0612                     	;# 
  4207  0613                     	;# 
  4208  0614                     	;# 
  4209  0616                     	;# 
  4210  0617                     	;# 
  4211  0618                     	;# 
  4212  0619                     	;# 
  4213  061A                     	;# 
  4214  061B                     	;# 
  4215  061C                     	;# 
  4216  061D                     	;# 
  4217  061E                     	;# 
  4218  068C                     	;# 
  4219  068D                     	;# 
  4220  068E                     	;# 
  4221  068F                     	;# 
  4222  0690                     	;# 
  4223  0691                     	;# 
  4224  0692                     	;# 
  4225  0693                     	;# 
  4226  0694                     	;# 
  4227  070C                     	;# 
  4228  070D                     	;# 
  4229  070E                     	;# 
  4230  070F                     	;# 
  4231  0710                     	;# 
  4232  0711                     	;# 
  4233  0712                     	;# 
  4234  0713                     	;# 
  4235  0714                     	;# 
  4236  0716                     	;# 
  4237  0717                     	;# 
  4238  0718                     	;# 
  4239  0719                     	;# 
  4240  071A                     	;# 
  4241  071B                     	;# 
  4242  071C                     	;# 
  4243  071D                     	;# 
  4244  071E                     	;# 
  4245  0796                     	;# 
  4246  0797                     	;# 
  4247  0798                     	;# 
  4248  0799                     	;# 
  4249  079A                     	;# 
  4250  079B                     	;# 
  4251  080C                     	;# 
  4252  080D                     	;# 
  4253  080E                     	;# 
  4254  080F                     	;# 
  4255  0810                     	;# 
  4256  0811                     	;# 
  4257  0812                     	;# 
  4258  0813                     	;# 
  4259  0814                     	;# 
  4260  081A                     	;# 
  4261  081B                     	;# 
  4262  081C                     	;# 
  4263  081D                     	;# 
  4264  081E                     	;# 
  4265  081F                     	;# 
  4266  088C                     	;# 
  4267  088D                     	;# 
  4268  088E                     	;# 
  4269  088F                     	;# 
  4270  0890                     	;# 
  4271  0891                     	;# 
  4272  0892                     	;# 
  4273  0893                     	;# 
  4274  0895                     	;# 
  4275  0896                     	;# 
  4276  0897                     	;# 
  4277  0898                     	;# 
  4278  0899                     	;# 
  4279  089A                     	;# 
  4280  089B                     	;# 
  4281  090C                     	;# 
  4282  090E                     	;# 
  4283  090F                     	;# 
  4284  091F                     	;# 
  4285  091F                     	;# 
  4286  098F                     	;# 
  4287  098F                     	;# 
  4288  0990                     	;# 
  4289  0991                     	;# 
  4290  0992                     	;# 
  4291  0993                     	;# 
  4292  0994                     	;# 
  4293  0995                     	;# 
  4294  0996                     	;# 
  4295  0997                     	;# 
  4296  0E0F                     	;# 
  4297  0E10                     	;# 
  4298  0E11                     	;# 
  4299  0E12                     	;# 
  4300  0E13                     	;# 
  4301  0E14                     	;# 
  4302  0E15                     	;# 
  4303  0E16                     	;# 
  4304  0E17                     	;# 
  4305  0E18                     	;# 
  4306  0E19                     	;# 
  4307  0E1A                     	;# 
  4308  0E1B                     	;# 
  4309  0E1C                     	;# 
  4310  0E1D                     	;# 
  4311  0E1E                     	;# 
  4312  0E1F                     	;# 
  4313  0E20                     	;# 
  4314  0E21                     	;# 
  4315  0E22                     	;# 
  4316  0E23                     	;# 
  4317  0E24                     	;# 
  4318  0E25                     	;# 
  4319  0E26                     	;# 
  4320  0E27                     	;# 
  4321  0E28                     	;# 
  4322  0E29                     	;# 
  4323  0E2A                     	;# 
  4324  0E2B                     	;# 
  4325  0E2C                     	;# 
  4326  0E2D                     	;# 
  4327  0E2E                     	;# 
  4328  0E2F                     	;# 
  4329  0E30                     	;# 
  4330  0E31                     	;# 
  4331  0E32                     	;# 
  4332  0E33                     	;# 
  4333  0E34                     	;# 
  4334  0E35                     	;# 
  4335  0E36                     	;# 
  4336  0E37                     	;# 
  4337  0E8F                     	;# 
  4338  0E90                     	;# 
  4339  0E91                     	;# 
  4340  0E92                     	;# 
  4341  0E93                     	;# 
  4342  0E94                     	;# 
  4343  0E95                     	;# 
  4344  0E96                     	;# 
  4345  0E97                     	;# 
  4346  0E9C                     	;# 
  4347  0E9D                     	;# 
  4348  0E9E                     	;# 
  4349  0EA1                     	;# 
  4350  0EA2                     	;# 
  4351  0EA3                     	;# 
  4352  0EA4                     	;# 
  4353  0EA5                     	;# 
  4354  0EA9                     	;# 
  4355  0EAA                     	;# 
  4356  0EAB                     	;# 
  4357  0EAC                     	;# 
  4358  0EB1                     	;# 
  4359  0EB2                     	;# 
  4360  0EB3                     	;# 
  4361  0EB8                     	;# 
  4362  0EB9                     	;# 
  4363  0EBA                     	;# 
  4364  0EBB                     	;# 
  4365  0EBC                     	;# 
  4366  0EBD                     	;# 
  4367  0EBE                     	;# 
  4368  0EC3                     	;# 
  4369  0EC5                     	;# 
  4370  0EC6                     	;# 
  4371  0EC7                     	;# 
  4372  0EC8                     	;# 
  4373  0EC9                     	;# 
  4374  0ECA                     	;# 
  4375  0ECB                     	;# 
  4376  0ECC                     	;# 
  4377  0F10                     	;# 
  4378  0F11                     	;# 
  4379  0F12                     	;# 
  4380  0F13                     	;# 
  4381  0F14                     	;# 
  4382  0F15                     	;# 
  4383  0F16                     	;# 
  4384  0F17                     	;# 
  4385  0F18                     	;# 
  4386  0F19                     	;# 
  4387  0F1A                     	;# 
  4388  0F1B                     	;# 
  4389  0F1C                     	;# 
  4390  0F1D                     	;# 
  4391  0F1E                     	;# 
  4392  0F1F                     	;# 
  4393  0F20                     	;# 
  4394  0F21                     	;# 
  4395  0F22                     	;# 
  4396  0F23                     	;# 
  4397  0F24                     	;# 
  4398  0F25                     	;# 
  4399  0F26                     	;# 
  4400  0F27                     	;# 
  4401  0F28                     	;# 
  4402  0F29                     	;# 
  4403  0F2A                     	;# 
  4404  0F2B                     	;# 
  4405  0F2C                     	;# 
  4406  0F2D                     	;# 
  4407  0F2E                     	;# 
  4408  0F2F                     	;# 
  4409  0F30                     	;# 
  4410  0F31                     	;# 
  4411  0F32                     	;# 
  4412  0F38                     	;# 
  4413  0F39                     	;# 
  4414  0F3A                     	;# 
  4415  0F3B                     	;# 
  4416  0F3C                     	;# 
  4417  0F3D                     	;# 
  4418  0F3E                     	;# 
  4419  0F3F                     	;# 
  4420  0F40                     	;# 
  4421  0F41                     	;# 
  4422  0F43                     	;# 
  4423  0F44                     	;# 
  4424  0F45                     	;# 
  4425  0F46                     	;# 
  4426  0F47                     	;# 
  4427  0F48                     	;# 
  4428  0F49                     	;# 
  4429  0F4A                     	;# 
  4430  0F4B                     	;# 
  4431  0F4C                     	;# 
  4432  0F4E                     	;# 
  4433  0F4F                     	;# 
  4434  0F50                     	;# 
  4435  0F51                     	;# 
  4436  0F52                     	;# 
  4437  0F53                     	;# 
  4438  0F54                     	;# 
  4439  0F55                     	;# 
  4440  0F56                     	;# 
  4441  0F57                     	;# 
  4442  0F59                     	;# 
  4443  0F5A                     	;# 
  4444  0F5B                     	;# 
  4445  0F5C                     	;# 
  4446  0F5D                     	;# 
  4447  0F61                     	;# 
  4448  0F62                     	;# 
  4449  0F64                     	;# 
  4450  0F65                     	;# 
  4451  0F66                     	;# 
  4452  0F67                     	;# 
  4453  0F68                     	;# 
  4454  0F69                     	;# 
  4455  0F6A                     	;# 
  4456  0F6B                     	;# 
  4457  0F6C                     	;# 
  4458  0F6D                     	;# 
  4459  0FE4                     	;# 
  4460  0FE5                     	;# 
  4461  0FE6                     	;# 
  4462  0FE7                     	;# 
  4463  0FE8                     	;# 
  4464  0FE9                     	;# 
  4465  0FEA                     	;# 
  4466  0FEB                     	;# 
  4467  0FED                     	;# 
  4468  0FEE                     	;# 
  4469  0FEF                     	;# 
  4470  0000                     	;# 
  4471  0001                     	;# 
  4472  0002                     	;# 
  4473  0003                     	;# 
  4474  0004                     	;# 
  4475  0005                     	;# 
  4476  0006                     	;# 
  4477  0007                     	;# 
  4478  0008                     	;# 
  4479  0009                     	;# 
  4480  000A                     	;# 
  4481  000B                     	;# 
  4482  000C                     	;# 
  4483  000D                     	;# 
  4484  000E                     	;# 
  4485  000F                     	;# 
  4486  0010                     	;# 
  4487  0011                     	;# 
  4488  0012                     	;# 
  4489  0013                     	;# 
  4490  0014                     	;# 
  4491  0015                     	;# 
  4492  0016                     	;# 
  4493  0017                     	;# 
  4494  0018                     	;# 
  4495  0019                     	;# 
  4496  001A                     	;# 
  4497  001C                     	;# 
  4498  001C                     	;# 
  4499  001D                     	;# 
  4500  001D                     	;# 
  4501  001E                     	;# 
  4502  001F                     	;# 
  4503  008C                     	;# 
  4504  008C                     	;# 
  4505  008D                     	;# 
  4506  008E                     	;# 
  4507  008E                     	;# 
  4508  008F                     	;# 
  4509  0090                     	;# 
  4510  0090                     	;# 
  4511  0091                     	;# 
  4512  0093                     	;# 
  4513  0094                     	;# 
  4514  0095                     	;# 
  4515  0096                     	;# 
  4516  0097                     	;# 
  4517  0098                     	;# 
  4518  0099                     	;# 
  4519  009A                     	;# 
  4520  009B                     	;# 
  4521  009C                     	;# 
  4522  009D                     	;# 
  4523  009E                     	;# 
  4524  010C                     	;# 
  4525  010D                     	;# 
  4526  010E                     	;# 
  4527  010E                     	;# 
  4528  010F                     	;# 
  4529  0110                     	;# 
  4530  0110                     	;# 
  4531  0111                     	;# 
  4532  0112                     	;# 
  4533  0112                     	;# 
  4534  0113                     	;# 
  4535  0114                     	;# 
  4536  0114                     	;# 
  4537  0115                     	;# 
  4538  0116                     	;# 
  4539  0116                     	;# 
  4540  0117                     	;# 
  4541  0119                     	;# 
  4542  0119                     	;# 
  4543  0119                     	;# 
  4544  011A                     	;# 
  4545  011A                     	;# 
  4546  011A                     	;# 
  4547  011B                     	;# 
  4548  011B                     	;# 
  4549  011B                     	;# 
  4550  011B                     	;# 
  4551  011B                     	;# 
  4552  011C                     	;# 
  4553  011C                     	;# 
  4554  011C                     	;# 
  4555  011D                     	;# 
  4556  011D                     	;# 
  4557  011D                     	;# 
  4558  011E                     	;# 
  4559  011E                     	;# 
  4560  011E                     	;# 
  4561  011F                     	;# 
  4562  011F                     	;# 
  4563  011F                     	;# 
  4564  011F                     	;# 
  4565  011F                     	;# 
  4566  018C                     	;# 
  4567  018D                     	;# 
  4568  018E                     	;# 
  4569  018F                     	;# 
  4570  0190                     	;# 
  4571  0191                     	;# 
  4572  0192                     	;# 
  4573  0196                     	;# 
  4574  0197                     	;# 
  4575  0198                     	;# 
  4576  0199                     	;# 
  4577  019A                     	;# 
  4578  019B                     	;# 
  4579  019C                     	;# 
  4580  020C                     	;# 
  4581  020C                     	;# 
  4582  020D                     	;# 
  4583  020E                     	;# 
  4584  020F                     	;# 
  4585  020F                     	;# 
  4586  0210                     	;# 
  4587  0210                     	;# 
  4588  0211                     	;# 
  4589  0211                     	;# 
  4590  0212                     	;# 
  4591  0212                     	;# 
  4592  0213                     	;# 
  4593  0214                     	;# 
  4594  0215                     	;# 
  4595  0215                     	;# 
  4596  0216                     	;# 
  4597  0216                     	;# 
  4598  0217                     	;# 
  4599  0217                     	;# 
  4600  0218                     	;# 
  4601  0218                     	;# 
  4602  0219                     	;# 
  4603  021A                     	;# 
  4604  021B                     	;# 
  4605  021B                     	;# 
  4606  021C                     	;# 
  4607  021C                     	;# 
  4608  021D                     	;# 
  4609  021D                     	;# 
  4610  021E                     	;# 
  4611  021F                     	;# 
  4612  028C                     	;# 
  4613  028C                     	;# 
  4614  028D                     	;# 
  4615  028D                     	;# 
  4616  028E                     	;# 
  4617  028F                     	;# 
  4618  0290                     	;# 
  4619  0290                     	;# 
  4620  0291                     	;# 
  4621  0292                     	;# 
  4622  0292                     	;# 
  4623  0293                     	;# 
  4624  0293                     	;# 
  4625  0294                     	;# 
  4626  0295                     	;# 
  4627  0296                     	;# 
  4628  0296                     	;# 
  4629  0297                     	;# 
  4630  0298                     	;# 
  4631  0298                     	;# 
  4632  0299                     	;# 
  4633  0299                     	;# 
  4634  029A                     	;# 
  4635  029B                     	;# 
  4636  029C                     	;# 
  4637  029C                     	;# 
  4638  029D                     	;# 
  4639  030C                     	;# 
  4640  030C                     	;# 
  4641  030D                     	;# 
  4642  030E                     	;# 
  4643  030F                     	;# 
  4644  0310                     	;# 
  4645  0310                     	;# 
  4646  0311                     	;# 
  4647  0312                     	;# 
  4648  0313                     	;# 
  4649  0314                     	;# 
  4650  0314                     	;# 
  4651  0315                     	;# 
  4652  0316                     	;# 
  4653  0317                     	;# 
  4654  0318                     	;# 
  4655  0318                     	;# 
  4656  0319                     	;# 
  4657  031A                     	;# 
  4658  031B                     	;# 
  4659  031C                     	;# 
  4660  031C                     	;# 
  4661  031D                     	;# 
  4662  031E                     	;# 
  4663  031F                     	;# 
  4664  038C                     	;# 
  4665  038C                     	;# 
  4666  038D                     	;# 
  4667  038E                     	;# 
  4668  0390                     	;# 
  4669  0390                     	;# 
  4670  0391                     	;# 
  4671  0392                     	;# 
  4672  040C                     	;# 
  4673  040D                     	;# 
  4674  040E                     	;# 
  4675  040F                     	;# 
  4676  0410                     	;# 
  4677  0411                     	;# 
  4678  0416                     	;# 
  4679  0416                     	;# 
  4680  0417                     	;# 
  4681  0418                     	;# 
  4682  0418                     	;# 
  4683  0419                     	;# 
  4684  041A                     	;# 
  4685  041A                     	;# 
  4686  041B                     	;# 
  4687  041C                     	;# 
  4688  041C                     	;# 
  4689  041D                     	;# 
  4690  041E                     	;# 
  4691  041F                     	;# 
  4692  048C                     	;# 
  4693  048C                     	;# 
  4694  048D                     	;# 
  4695  048E                     	;# 
  4696  048F                     	;# 
  4697  048F                     	;# 
  4698  0490                     	;# 
  4699  0491                     	;# 
  4700  0492                     	;# 
  4701  0492                     	;# 
  4702  0493                     	;# 
  4703  0494                     	;# 
  4704  0495                     	;# 
  4705  0495                     	;# 
  4706  0496                     	;# 
  4707  0497                     	;# 
  4708  0498                     	;# 
  4709  0499                     	;# 
  4710  049A                     	;# 
  4711  049B                     	;# 
  4712  049C                     	;# 
  4713  049D                     	;# 
  4714  050C                     	;# 
  4715  050C                     	;# 
  4716  050D                     	;# 
  4717  050E                     	;# 
  4718  050F                     	;# 
  4719  050F                     	;# 
  4720  0510                     	;# 
  4721  0511                     	;# 
  4722  0512                     	;# 
  4723  0512                     	;# 
  4724  0513                     	;# 
  4725  0514                     	;# 
  4726  0515                     	;# 
  4727  0515                     	;# 
  4728  0516                     	;# 
  4729  0517                     	;# 
  4730  0518                     	;# 
  4731  0519                     	;# 
  4732  051A                     	;# 
  4733  051B                     	;# 
  4734  051C                     	;# 
  4735  051D                     	;# 
  4736  058C                     	;# 
  4737  058C                     	;# 
  4738  058D                     	;# 
  4739  058E                     	;# 
  4740  058F                     	;# 
  4741  058F                     	;# 
  4742  0590                     	;# 
  4743  0591                     	;# 
  4744  0592                     	;# 
  4745  0593                     	;# 
  4746  060C                     	;# 
  4747  060D                     	;# 
  4748  060E                     	;# 
  4749  060F                     	;# 
  4750  0610                     	;# 
  4751  0611                     	;# 
  4752  0612                     	;# 
  4753  0613                     	;# 
  4754  0614                     	;# 
  4755  0616                     	;# 
  4756  0617                     	;# 
  4757  0618                     	;# 
  4758  0619                     	;# 
  4759  061A                     	;# 
  4760  061B                     	;# 
  4761  061C                     	;# 
  4762  061D                     	;# 
  4763  061E                     	;# 
  4764  068C                     	;# 
  4765  068D                     	;# 
  4766  068E                     	;# 
  4767  068F                     	;# 
  4768  0690                     	;# 
  4769  0691                     	;# 
  4770  0692                     	;# 
  4771  0693                     	;# 
  4772  0694                     	;# 
  4773  070C                     	;# 
  4774  070D                     	;# 
  4775  070E                     	;# 
  4776  070F                     	;# 
  4777  0710                     	;# 
  4778  0711                     	;# 
  4779  0712                     	;# 
  4780  0713                     	;# 
  4781  0714                     	;# 
  4782  0716                     	;# 
  4783  0717                     	;# 
  4784  0718                     	;# 
  4785  0719                     	;# 
  4786  071A                     	;# 
  4787  071B                     	;# 
  4788  071C                     	;# 
  4789  071D                     	;# 
  4790  071E                     	;# 
  4791  0796                     	;# 
  4792  0797                     	;# 
  4793  0798                     	;# 
  4794  0799                     	;# 
  4795  079A                     	;# 
  4796  079B                     	;# 
  4797  080C                     	;# 
  4798  080D                     	;# 
  4799  080E                     	;# 
  4800  080F                     	;# 
  4801  0810                     	;# 
  4802  0811                     	;# 
  4803  0812                     	;# 
  4804  0813                     	;# 
  4805  0814                     	;# 
  4806  081A                     	;# 
  4807  081B                     	;# 
  4808  081C                     	;# 
  4809  081D                     	;# 
  4810  081E                     	;# 
  4811  081F                     	;# 
  4812  088C                     	;# 
  4813  088D                     	;# 
  4814  088E                     	;# 
  4815  088F                     	;# 
  4816  0890                     	;# 
  4817  0891                     	;# 
  4818  0892                     	;# 
  4819  0893                     	;# 
  4820  0895                     	;# 
  4821  0896                     	;# 
  4822  0897                     	;# 
  4823  0898                     	;# 
  4824  0899                     	;# 
  4825  089A                     	;# 
  4826  089B                     	;# 
  4827  090C                     	;# 
  4828  090E                     	;# 
  4829  090F                     	;# 
  4830  091F                     	;# 
  4831  091F                     	;# 
  4832  098F                     	;# 
  4833  098F                     	;# 
  4834  0990                     	;# 
  4835  0991                     	;# 
  4836  0992                     	;# 
  4837  0993                     	;# 
  4838  0994                     	;# 
  4839  0995                     	;# 
  4840  0996                     	;# 
  4841  0997                     	;# 
  4842  0E0F                     	;# 
  4843  0E10                     	;# 
  4844  0E11                     	;# 
  4845  0E12                     	;# 
  4846  0E13                     	;# 
  4847  0E14                     	;# 
  4848  0E15                     	;# 
  4849  0E16                     	;# 
  4850  0E17                     	;# 
  4851  0E18                     	;# 
  4852  0E19                     	;# 
  4853  0E1A                     	;# 
  4854  0E1B                     	;# 
  4855  0E1C                     	;# 
  4856  0E1D                     	;# 
  4857  0E1E                     	;# 
  4858  0E1F                     	;# 
  4859  0E20                     	;# 
  4860  0E21                     	;# 
  4861  0E22                     	;# 
  4862  0E23                     	;# 
  4863  0E24                     	;# 
  4864  0E25                     	;# 
  4865  0E26                     	;# 
  4866  0E27                     	;# 
  4867  0E28                     	;# 
  4868  0E29                     	;# 
  4869  0E2A                     	;# 
  4870  0E2B                     	;# 
  4871  0E2C                     	;# 
  4872  0E2D                     	;# 
  4873  0E2E                     	;# 
  4874  0E2F                     	;# 
  4875  0E30                     	;# 
  4876  0E31                     	;# 
  4877  0E32                     	;# 
  4878  0E33                     	;# 
  4879  0E34                     	;# 
  4880  0E35                     	;# 
  4881  0E36                     	;# 
  4882  0E37                     	;# 
  4883  0E8F                     	;# 
  4884  0E90                     	;# 
  4885  0E91                     	;# 
  4886  0E92                     	;# 
  4887  0E93                     	;# 
  4888  0E94                     	;# 
  4889  0E95                     	;# 
  4890  0E96                     	;# 
  4891  0E97                     	;# 
  4892  0E9C                     	;# 
  4893  0E9D                     	;# 
  4894  0E9E                     	;# 
  4895  0EA1                     	;# 
  4896  0EA2                     	;# 
  4897  0EA3                     	;# 
  4898  0EA4                     	;# 
  4899  0EA5                     	;# 
  4900  0EA9                     	;# 
  4901  0EAA                     	;# 
  4902  0EAB                     	;# 
  4903  0EAC                     	;# 
  4904  0EB1                     	;# 
  4905  0EB2                     	;# 
  4906  0EB3                     	;# 
  4907  0EB8                     	;# 
  4908  0EB9                     	;# 
  4909  0EBA                     	;# 
  4910  0EBB                     	;# 
  4911  0EBC                     	;# 
  4912  0EBD                     	;# 
  4913  0EBE                     	;# 
  4914  0EC3                     	;# 
  4915  0EC5                     	;# 
  4916  0EC6                     	;# 
  4917  0EC7                     	;# 
  4918  0EC8                     	;# 
  4919  0EC9                     	;# 
  4920  0ECA                     	;# 
  4921  0ECB                     	;# 
  4922  0ECC                     	;# 
  4923  0F10                     	;# 
  4924  0F11                     	;# 
  4925  0F12                     	;# 
  4926  0F13                     	;# 
  4927  0F14                     	;# 
  4928  0F15                     	;# 
  4929  0F16                     	;# 
  4930  0F17                     	;# 
  4931  0F18                     	;# 
  4932  0F19                     	;# 
  4933  0F1A                     	;# 
  4934  0F1B                     	;# 
  4935  0F1C                     	;# 
  4936  0F1D                     	;# 
  4937  0F1E                     	;# 
  4938  0F1F                     	;# 
  4939  0F20                     	;# 
  4940  0F21                     	;# 
  4941  0F22                     	;# 
  4942  0F23                     	;# 
  4943  0F24                     	;# 
  4944  0F25                     	;# 
  4945  0F26                     	;# 
  4946  0F27                     	;# 
  4947  0F28                     	;# 
  4948  0F29                     	;# 
  4949  0F2A                     	;# 
  4950  0F2B                     	;# 
  4951  0F2C                     	;# 
  4952  0F2D                     	;# 
  4953  0F2E                     	;# 
  4954  0F2F                     	;# 
  4955  0F30                     	;# 
  4956  0F31                     	;# 
  4957  0F32                     	;# 
  4958  0F38                     	;# 
  4959  0F39                     	;# 
  4960  0F3A                     	;# 
  4961  0F3B                     	;# 
  4962  0F3C                     	;# 
  4963  0F3D                     	;# 
  4964  0F3E                     	;# 
  4965  0F3F                     	;# 
  4966  0F40                     	;# 
  4967  0F41                     	;# 
  4968  0F43                     	;# 
  4969  0F44                     	;# 
  4970  0F45                     	;# 
  4971  0F46                     	;# 
  4972  0F47                     	;# 
  4973  0F48                     	;# 
  4974  0F49                     	;# 
  4975  0F4A                     	;# 
  4976  0F4B                     	;# 
  4977  0F4C                     	;# 
  4978  0F4E                     	;# 
  4979  0F4F                     	;# 
  4980  0F50                     	;# 
  4981  0F51                     	;# 
  4982  0F52                     	;# 
  4983  0F53                     	;# 
  4984  0F54                     	;# 
  4985  0F55                     	;# 
  4986  0F56                     	;# 
  4987  0F57                     	;# 
  4988  0F59                     	;# 
  4989  0F5A                     	;# 
  4990  0F5B                     	;# 
  4991  0F5C                     	;# 
  4992  0F5D                     	;# 
  4993  0F61                     	;# 
  4994  0F62                     	;# 
  4995  0F64                     	;# 
  4996  0F65                     	;# 
  4997  0F66                     	;# 
  4998  0F67                     	;# 
  4999  0F68                     	;# 
  5000  0F69                     	;# 
  5001  0F6A                     	;# 
  5002  0F6B                     	;# 
  5003  0F6C                     	;# 
  5004  0F6D                     	;# 
  5005  0FE4                     	;# 
  5006  0FE5                     	;# 
  5007  0FE6                     	;# 
  5008  0FE7                     	;# 
  5009  0FE8                     	;# 
  5010  0FE9                     	;# 
  5011  0FEA                     	;# 
  5012  0FEB                     	;# 
  5013  0FED                     	;# 
  5014  0FEE                     	;# 
  5015  0FEF                     	;# 
  5016  0000                     	;# 
  5017  0001                     	;# 
  5018  0002                     	;# 
  5019  0003                     	;# 
  5020  0004                     	;# 
  5021  0005                     	;# 
  5022  0006                     	;# 
  5023  0007                     	;# 
  5024  0008                     	;# 
  5025  0009                     	;# 
  5026  000A                     	;# 
  5027  000B                     	;# 
  5028  000C                     	;# 
  5029  000D                     	;# 
  5030  000E                     	;# 
  5031  000F                     	;# 
  5032  0010                     	;# 
  5033  0011                     	;# 
  5034  0012                     	;# 
  5035  0013                     	;# 
  5036  0014                     	;# 
  5037  0015                     	;# 
  5038  0016                     	;# 
  5039  0017                     	;# 
  5040  0018                     	;# 
  5041  0019                     	;# 
  5042  001A                     	;# 
  5043  001C                     	;# 
  5044  001C                     	;# 
  5045  001D                     	;# 
  5046  001D                     	;# 
  5047  001E                     	;# 
  5048  001F                     	;# 
  5049  008C                     	;# 
  5050  008C                     	;# 
  5051  008D                     	;# 
  5052  008E                     	;# 
  5053  008E                     	;# 
  5054  008F                     	;# 
  5055  0090                     	;# 
  5056  0090                     	;# 
  5057  0091                     	;# 
  5058  0093                     	;# 
  5059  0094                     	;# 
  5060  0095                     	;# 
  5061  0096                     	;# 
  5062  0097                     	;# 
  5063  0098                     	;# 
  5064  0099                     	;# 
  5065  009A                     	;# 
  5066  009B                     	;# 
  5067  009C                     	;# 
  5068  009D                     	;# 
  5069  009E                     	;# 
  5070  010C                     	;# 
  5071  010D                     	;# 
  5072  010E                     	;# 
  5073  010E                     	;# 
  5074  010F                     	;# 
  5075  0110                     	;# 
  5076  0110                     	;# 
  5077  0111                     	;# 
  5078  0112                     	;# 
  5079  0112                     	;# 
  5080  0113                     	;# 
  5081  0114                     	;# 
  5082  0114                     	;# 
  5083  0115                     	;# 
  5084  0116                     	;# 
  5085  0116                     	;# 
  5086  0117                     	;# 
  5087  0119                     	;# 
  5088  0119                     	;# 
  5089  0119                     	;# 
  5090  011A                     	;# 
  5091  011A                     	;# 
  5092  011A                     	;# 
  5093  011B                     	;# 
  5094  011B                     	;# 
  5095  011B                     	;# 
  5096  011B                     	;# 
  5097  011B                     	;# 
  5098  011C                     	;# 
  5099  011C                     	;# 
  5100  011C                     	;# 
  5101  011D                     	;# 
  5102  011D                     	;# 
  5103  011D                     	;# 
  5104  011E                     	;# 
  5105  011E                     	;# 
  5106  011E                     	;# 
  5107  011F                     	;# 
  5108  011F                     	;# 
  5109  011F                     	;# 
  5110  011F                     	;# 
  5111  011F                     	;# 
  5112  018C                     	;# 
  5113  018D                     	;# 
  5114  018E                     	;# 
  5115  018F                     	;# 
  5116  0190                     	;# 
  5117  0191                     	;# 
  5118  0192                     	;# 
  5119  0196                     	;# 
  5120  0197                     	;# 
  5121  0198                     	;# 
  5122  0199                     	;# 
  5123  019A                     	;# 
  5124  019B                     	;# 
  5125  019C                     	;# 
  5126  020C                     	;# 
  5127  020C                     	;# 
  5128  020D                     	;# 
  5129  020E                     	;# 
  5130  020F                     	;# 
  5131  020F                     	;# 
  5132  0210                     	;# 
  5133  0210                     	;# 
  5134  0211                     	;# 
  5135  0211                     	;# 
  5136  0212                     	;# 
  5137  0212                     	;# 
  5138  0213                     	;# 
  5139  0214                     	;# 
  5140  0215                     	;# 
  5141  0215                     	;# 
  5142  0216                     	;# 
  5143  0216                     	;# 
  5144  0217                     	;# 
  5145  0217                     	;# 
  5146  0218                     	;# 
  5147  0218                     	;# 
  5148  0219                     	;# 
  5149  021A                     	;# 
  5150  021B                     	;# 
  5151  021B                     	;# 
  5152  021C                     	;# 
  5153  021C                     	;# 
  5154  021D                     	;# 
  5155  021D                     	;# 
  5156  021E                     	;# 
  5157  021F                     	;# 
  5158  028C                     	;# 
  5159  028C                     	;# 
  5160  028D                     	;# 
  5161  028D                     	;# 
  5162  028E                     	;# 
  5163  028F                     	;# 
  5164  0290                     	;# 
  5165  0290                     	;# 
  5166  0291                     	;# 
  5167  0292                     	;# 
  5168  0292                     	;# 
  5169  0293                     	;# 
  5170  0293                     	;# 
  5171  0294                     	;# 
  5172  0295                     	;# 
  5173  0296                     	;# 
  5174  0296                     	;# 
  5175  0297                     	;# 
  5176  0298                     	;# 
  5177  0298                     	;# 
  5178  0299                     	;# 
  5179  0299                     	;# 
  5180  029A                     	;# 
  5181  029B                     	;# 
  5182  029C                     	;# 
  5183  029C                     	;# 
  5184  029D                     	;# 
  5185  030C                     	;# 
  5186  030C                     	;# 
  5187  030D                     	;# 
  5188  030E                     	;# 
  5189  030F                     	;# 
  5190  0310                     	;# 
  5191  0310                     	;# 
  5192  0311                     	;# 
  5193  0312                     	;# 
  5194  0313                     	;# 
  5195  0314                     	;# 
  5196  0314                     	;# 
  5197  0315                     	;# 
  5198  0316                     	;# 
  5199  0317                     	;# 
  5200  0318                     	;# 
  5201  0318                     	;# 
  5202  0319                     	;# 
  5203  031A                     	;# 
  5204  031B                     	;# 
  5205  031C                     	;# 
  5206  031C                     	;# 
  5207  031D                     	;# 
  5208  031E                     	;# 
  5209  031F                     	;# 
  5210  038C                     	;# 
  5211  038C                     	;# 
  5212  038D                     	;# 
  5213  038E                     	;# 
  5214  0390                     	;# 
  5215  0390                     	;# 
  5216  0391                     	;# 
  5217  0392                     	;# 
  5218  040C                     	;# 
  5219  040D                     	;# 
  5220  040E                     	;# 
  5221  040F                     	;# 
  5222  0410                     	;# 
  5223  0411                     	;# 
  5224  0416                     	;# 
  5225  0416                     	;# 
  5226  0417                     	;# 
  5227  0418                     	;# 
  5228  0418                     	;# 
  5229  0419                     	;# 
  5230  041A                     	;# 
  5231  041A                     	;# 
  5232  041B                     	;# 
  5233  041C                     	;# 
  5234  041C                     	;# 
  5235  041D                     	;# 
  5236  041E                     	;# 
  5237  041F                     	;# 
  5238  048C                     	;# 
  5239  048C                     	;# 
  5240  048D                     	;# 
  5241  048E                     	;# 
  5242  048F                     	;# 
  5243  048F                     	;# 
  5244  0490                     	;# 
  5245  0491                     	;# 
  5246  0492                     	;# 
  5247  0492                     	;# 
  5248  0493                     	;# 
  5249  0494                     	;# 
  5250  0495                     	;# 
  5251  0495                     	;# 
  5252  0496                     	;# 
  5253  0497                     	;# 
  5254  0498                     	;# 
  5255  0499                     	;# 
  5256  049A                     	;# 
  5257  049B                     	;# 
  5258  049C                     	;# 
  5259  049D                     	;# 
  5260  050C                     	;# 
  5261  050C                     	;# 
  5262  050D                     	;# 
  5263  050E                     	;# 
  5264  050F                     	;# 
  5265  050F                     	;# 
  5266  0510                     	;# 
  5267  0511                     	;# 
  5268  0512                     	;# 
  5269  0512                     	;# 
  5270  0513                     	;# 
  5271  0514                     	;# 
  5272  0515                     	;# 
  5273  0515                     	;# 
  5274  0516                     	;# 
  5275  0517                     	;# 
  5276  0518                     	;# 
  5277  0519                     	;# 
  5278  051A                     	;# 
  5279  051B                     	;# 
  5280  051C                     	;# 
  5281  051D                     	;# 
  5282  058C                     	;# 
  5283  058C                     	;# 
  5284  058D                     	;# 
  5285  058E                     	;# 
  5286  058F                     	;# 
  5287  058F                     	;# 
  5288  0590                     	;# 
  5289  0591                     	;# 
  5290  0592                     	;# 
  5291  0593                     	;# 
  5292  060C                     	;# 
  5293  060D                     	;# 
  5294  060E                     	;# 
  5295  060F                     	;# 
  5296  0610                     	;# 
  5297  0611                     	;# 
  5298  0612                     	;# 
  5299  0613                     	;# 
  5300  0614                     	;# 
  5301  0616                     	;# 
  5302  0617                     	;# 
  5303  0618                     	;# 
  5304  0619                     	;# 
  5305  061A                     	;# 
  5306  061B                     	;# 
  5307  061C                     	;# 
  5308  061D                     	;# 
  5309  061E                     	;# 
  5310  068C                     	;# 
  5311  068D                     	;# 
  5312  068E                     	;# 
  5313  068F                     	;# 
  5314  0690                     	;# 
  5315  0691                     	;# 
  5316  0692                     	;# 
  5317  0693                     	;# 
  5318  0694                     	;# 
  5319  070C                     	;# 
  5320  070D                     	;# 
  5321  070E                     	;# 
  5322  070F                     	;# 
  5323  0710                     	;# 
  5324  0711                     	;# 
  5325  0712                     	;# 
  5326  0713                     	;# 
  5327  0714                     	;# 
  5328  0716                     	;# 
  5329  0717                     	;# 
  5330  0718                     	;# 
  5331  0719                     	;# 
  5332  071A                     	;# 
  5333  071B                     	;# 
  5334  071C                     	;# 
  5335  071D                     	;# 
  5336  071E                     	;# 
  5337  0796                     	;# 
  5338  0797                     	;# 
  5339  0798                     	;# 
  5340  0799                     	;# 
  5341  079A                     	;# 
  5342  079B                     	;# 
  5343  080C                     	;# 
  5344  080D                     	;# 
  5345  080E                     	;# 
  5346  080F                     	;# 
  5347  0810                     	;# 
  5348  0811                     	;# 
  5349  0812                     	;# 
  5350  0813                     	;# 
  5351  0814                     	;# 
  5352  081A                     	;# 
  5353  081B                     	;# 
  5354  081C                     	;# 
  5355  081D                     	;# 
  5356  081E                     	;# 
  5357  081F                     	;# 
  5358  088C                     	;# 
  5359  088D                     	;# 
  5360  088E                     	;# 
  5361  088F                     	;# 
  5362  0890                     	;# 
  5363  0891                     	;# 
  5364  0892                     	;# 
  5365  0893                     	;# 
  5366  0895                     	;# 
  5367  0896                     	;# 
  5368  0897                     	;# 
  5369  0898                     	;# 
  5370  0899                     	;# 
  5371  089A                     	;# 
  5372  089B                     	;# 
  5373  090C                     	;# 
  5374  090E                     	;# 
  5375  090F                     	;# 
  5376  091F                     	;# 
  5377  091F                     	;# 
  5378  098F                     	;# 
  5379  098F                     	;# 
  5380  0990                     	;# 
  5381  0991                     	;# 
  5382  0992                     	;# 
  5383  0993                     	;# 
  5384  0994                     	;# 
  5385  0995                     	;# 
  5386  0996                     	;# 
  5387  0997                     	;# 
  5388  0E0F                     	;# 
  5389  0E10                     	;# 
  5390  0E11                     	;# 
  5391  0E12                     	;# 
  5392  0E13                     	;# 
  5393  0E14                     	;# 
  5394  0E15                     	;# 
  5395  0E16                     	;# 
  5396  0E17                     	;# 
  5397  0E18                     	;# 
  5398  0E19                     	;# 
  5399  0E1A                     	;# 
  5400  0E1B                     	;# 
  5401  0E1C                     	;# 
  5402  0E1D                     	;# 
  5403  0E1E                     	;# 
  5404  0E1F                     	;# 
  5405  0E20                     	;# 
  5406  0E21                     	;# 
  5407  0E22                     	;# 
  5408  0E23                     	;# 
  5409  0E24                     	;# 
  5410  0E25                     	;# 
  5411  0E26                     	;# 
  5412  0E27                     	;# 
  5413  0E28                     	;# 
  5414  0E29                     	;# 
  5415  0E2A                     	;# 
  5416  0E2B                     	;# 
  5417  0E2C                     	;# 
  5418  0E2D                     	;# 
  5419  0E2E                     	;# 
  5420  0E2F                     	;# 
  5421  0E30                     	;# 
  5422  0E31                     	;# 
  5423  0E32                     	;# 
  5424  0E33                     	;# 
  5425  0E34                     	;# 
  5426  0E35                     	;# 
  5427  0E36                     	;# 
  5428  0E37                     	;# 
  5429  0E8F                     	;# 
  5430  0E90                     	;# 
  5431  0E91                     	;# 
  5432  0E92                     	;# 
  5433  0E93                     	;# 
  5434  0E94                     	;# 
  5435  0E95                     	;# 
  5436  0E96                     	;# 
  5437  0E97                     	;# 
  5438  0E9C                     	;# 
  5439  0E9D                     	;# 
  5440  0E9E                     	;# 
  5441  0EA1                     	;# 
  5442  0EA2                     	;# 
  5443  0EA3                     	;# 
  5444  0EA4                     	;# 
  5445  0EA5                     	;# 
  5446  0EA9                     	;# 
  5447  0EAA                     	;# 
  5448  0EAB                     	;# 
  5449  0EAC                     	;# 
  5450  0EB1                     	;# 
  5451  0EB2                     	;# 
  5452  0EB3                     	;# 
  5453  0EB8                     	;# 
  5454  0EB9                     	;# 
  5455  0EBA                     	;# 
  5456  0EBB                     	;# 
  5457  0EBC                     	;# 
  5458  0EBD                     	;# 
  5459  0EBE                     	;# 
  5460  0EC3                     	;# 
  5461  0EC5                     	;# 
  5462  0EC6                     	;# 
  5463  0EC7                     	;# 
  5464  0EC8                     	;# 
  5465  0EC9                     	;# 
  5466  0ECA                     	;# 
  5467  0ECB                     	;# 
  5468  0ECC                     	;# 
  5469  0F10                     	;# 
  5470  0F11                     	;# 
  5471  0F12                     	;# 
  5472  0F13                     	;# 
  5473  0F14                     	;# 
  5474  0F15                     	;# 
  5475  0F16                     	;# 
  5476  0F17                     	;# 
  5477  0F18                     	;# 
  5478  0F19                     	;# 
  5479  0F1A                     	;# 
  5480  0F1B                     	;# 
  5481  0F1C                     	;# 
  5482  0F1D                     	;# 
  5483  0F1E                     	;# 
  5484  0F1F                     	;# 
  5485  0F20                     	;# 
  5486  0F21                     	;# 
  5487  0F22                     	;# 
  5488  0F23                     	;# 
  5489  0F24                     	;# 
  5490  0F25                     	;# 
  5491  0F26                     	;# 
  5492  0F27                     	;# 
  5493  0F28                     	;# 
  5494  0F29                     	;# 
  5495  0F2A                     	;# 
  5496  0F2B                     	;# 
  5497  0F2C                     	;# 
  5498  0F2D                     	;# 
  5499  0F2E                     	;# 
  5500  0F2F                     	;# 
  5501  0F30                     	;# 
  5502  0F31                     	;# 
  5503  0F32                     	;# 
  5504  0F38                     	;# 
  5505  0F39                     	;# 
  5506  0F3A                     	;# 
  5507  0F3B                     	;# 
  5508  0F3C                     	;# 
  5509  0F3D                     	;# 
  5510  0F3E                     	;# 
  5511  0F3F                     	;# 
  5512  0F40                     	;# 
  5513  0F41                     	;# 
  5514  0F43                     	;# 
  5515  0F44                     	;# 
  5516  0F45                     	;# 
  5517  0F46                     	;# 
  5518  0F47                     	;# 
  5519  0F48                     	;# 
  5520  0F49                     	;# 
  5521  0F4A                     	;# 
  5522  0F4B                     	;# 
  5523  0F4C                     	;# 
  5524  0F4E                     	;# 
  5525  0F4F                     	;# 
  5526  0F50                     	;# 
  5527  0F51                     	;# 
  5528  0F52                     	;# 
  5529  0F53                     	;# 
  5530  0F54                     	;# 
  5531  0F55                     	;# 
  5532  0F56                     	;# 
  5533  0F57                     	;# 
  5534  0F59                     	;# 
  5535  0F5A                     	;# 
  5536  0F5B                     	;# 
  5537  0F5C                     	;# 
  5538  0F5D                     	;# 
  5539  0F61                     	;# 
  5540  0F62                     	;# 
  5541  0F64                     	;# 
  5542  0F65                     	;# 
  5543  0F66                     	;# 
  5544  0F67                     	;# 
  5545  0F68                     	;# 
  5546  0F69                     	;# 
  5547  0F6A                     	;# 
  5548  0F6B                     	;# 
  5549  0F6C                     	;# 
  5550  0F6D                     	;# 
  5551  0FE4                     	;# 
  5552  0FE5                     	;# 
  5553  0FE6                     	;# 
  5554  0FE7                     	;# 
  5555  0FE8                     	;# 
  5556  0FE9                     	;# 
  5557  0FEA                     	;# 
  5558  0FEB                     	;# 
  5559  0FED                     	;# 
  5560  0FEE                     	;# 
  5561  0FEF                     	;# 
  5562  0000                     	;# 
  5563  0001                     	;# 
  5564  0002                     	;# 
  5565  0003                     	;# 
  5566  0004                     	;# 
  5567  0005                     	;# 
  5568  0006                     	;# 
  5569  0007                     	;# 
  5570  0008                     	;# 
  5571  0009                     	;# 
  5572  000A                     	;# 
  5573  000B                     	;# 
  5574  000C                     	;# 
  5575  000D                     	;# 
  5576  000E                     	;# 
  5577  000F                     	;# 
  5578  0010                     	;# 
  5579  0011                     	;# 
  5580  0012                     	;# 
  5581  0013                     	;# 
  5582  0014                     	;# 
  5583  0015                     	;# 
  5584  0016                     	;# 
  5585  0017                     	;# 
  5586  0018                     	;# 
  5587  0019                     	;# 
  5588  001A                     	;# 
  5589  001C                     	;# 
  5590  001C                     	;# 
  5591  001D                     	;# 
  5592  001D                     	;# 
  5593  001E                     	;# 
  5594  001F                     	;# 
  5595  008C                     	;# 
  5596  008C                     	;# 
  5597  008D                     	;# 
  5598  008E                     	;# 
  5599  008E                     	;# 
  5600  008F                     	;# 
  5601  0090                     	;# 
  5602  0090                     	;# 
  5603  0091                     	;# 
  5604  0093                     	;# 
  5605  0094                     	;# 
  5606  0095                     	;# 
  5607  0096                     	;# 
  5608  0097                     	;# 
  5609  0098                     	;# 
  5610  0099                     	;# 
  5611  009A                     	;# 
  5612  009B                     	;# 
  5613  009C                     	;# 
  5614  009D                     	;# 
  5615  009E                     	;# 
  5616  010C                     	;# 
  5617  010D                     	;# 
  5618  010E                     	;# 
  5619  010E                     	;# 
  5620  010F                     	;# 
  5621  0110                     	;# 
  5622  0110                     	;# 
  5623  0111                     	;# 
  5624  0112                     	;# 
  5625  0112                     	;# 
  5626  0113                     	;# 
  5627  0114                     	;# 
  5628  0114                     	;# 
  5629  0115                     	;# 
  5630  0116                     	;# 
  5631  0116                     	;# 
  5632  0117                     	;# 
  5633  0119                     	;# 
  5634  0119                     	;# 
  5635  0119                     	;# 
  5636  011A                     	;# 
  5637  011A                     	;# 
  5638  011A                     	;# 
  5639  011B                     	;# 
  5640  011B                     	;# 
  5641  011B                     	;# 
  5642  011B                     	;# 
  5643  011B                     	;# 
  5644  011C                     	;# 
  5645  011C                     	;# 
  5646  011C                     	;# 
  5647  011D                     	;# 
  5648  011D                     	;# 
  5649  011D                     	;# 
  5650  011E                     	;# 
  5651  011E                     	;# 
  5652  011E                     	;# 
  5653  011F                     	;# 
  5654  011F                     	;# 
  5655  011F                     	;# 
  5656  011F                     	;# 
  5657  011F                     	;# 
  5658  018C                     	;# 
  5659  018D                     	;# 
  5660  018E                     	;# 
  5661  018F                     	;# 
  5662  0190                     	;# 
  5663  0191                     	;# 
  5664  0192                     	;# 
  5665  0196                     	;# 
  5666  0197                     	;# 
  5667  0198                     	;# 
  5668  0199                     	;# 
  5669  019A                     	;# 
  5670  019B                     	;# 
  5671  019C                     	;# 
  5672  020C                     	;# 
  5673  020C                     	;# 
  5674  020D                     	;# 
  5675  020E                     	;# 
  5676  020F                     	;# 
  5677  020F                     	;# 
  5678  0210                     	;# 
  5679  0210                     	;# 
  5680  0211                     	;# 
  5681  0211                     	;# 
  5682  0212                     	;# 
  5683  0212                     	;# 
  5684  0213                     	;# 
  5685  0214                     	;# 
  5686  0215                     	;# 
  5687  0215                     	;# 
  5688  0216                     	;# 
  5689  0216                     	;# 
  5690  0217                     	;# 
  5691  0217                     	;# 
  5692  0218                     	;# 
  5693  0218                     	;# 
  5694  0219                     	;# 
  5695  021A                     	;# 
  5696  021B                     	;# 
  5697  021B                     	;# 
  5698  021C                     	;# 
  5699  021C                     	;# 
  5700  021D                     	;# 
  5701  021D                     	;# 
  5702  021E                     	;# 
  5703  021F                     	;# 
  5704  028C                     	;# 
  5705  028C                     	;# 
  5706  028D                     	;# 
  5707  028D                     	;# 
  5708  028E                     	;# 
  5709  028F                     	;# 
  5710  0290                     	;# 
  5711  0290                     	;# 
  5712  0291                     	;# 
  5713  0292                     	;# 
  5714  0292                     	;# 
  5715  0293                     	;# 
  5716  0293                     	;# 
  5717  0294                     	;# 
  5718  0295                     	;# 
  5719  0296                     	;# 
  5720  0296                     	;# 
  5721  0297                     	;# 
  5722  0298                     	;# 
  5723  0298                     	;# 
  5724  0299                     	;# 
  5725  0299                     	;# 
  5726  029A                     	;# 
  5727  029B                     	;# 
  5728  029C                     	;# 
  5729  029C                     	;# 
  5730  029D                     	;# 
  5731  030C                     	;# 
  5732  030C                     	;# 
  5733  030D                     	;# 
  5734  030E                     	;# 
  5735  030F                     	;# 
  5736  0310                     	;# 
  5737  0310                     	;# 
  5738  0311                     	;# 
  5739  0312                     	;# 
  5740  0313                     	;# 
  5741  0314                     	;# 
  5742  0314                     	;# 
  5743  0315                     	;# 
  5744  0316                     	;# 
  5745  0317                     	;# 
  5746  0318                     	;# 
  5747  0318                     	;# 
  5748  0319                     	;# 
  5749  031A                     	;# 
  5750  031B                     	;# 
  5751  031C                     	;# 
  5752  031C                     	;# 
  5753  031D                     	;# 
  5754  031E                     	;# 
  5755  031F                     	;# 
  5756  038C                     	;# 
  5757  038C                     	;# 
  5758  038D                     	;# 
  5759  038E                     	;# 
  5760  0390                     	;# 
  5761  0390                     	;# 
  5762  0391                     	;# 
  5763  0392                     	;# 
  5764  040C                     	;# 
  5765  040D                     	;# 
  5766  040E                     	;# 
  5767  040F                     	;# 
  5768  0410                     	;# 
  5769  0411                     	;# 
  5770  0416                     	;# 
  5771  0416                     	;# 
  5772  0417                     	;# 
  5773  0418                     	;# 
  5774  0418                     	;# 
  5775  0419                     	;# 
  5776  041A                     	;# 
  5777  041A                     	;# 
  5778  041B                     	;# 
  5779  041C                     	;# 
  5780  041C                     	;# 
  5781  041D                     	;# 
  5782  041E                     	;# 
  5783  041F                     	;# 
  5784  048C                     	;# 
  5785  048C                     	;# 
  5786  048D                     	;# 
  5787  048E                     	;# 
  5788  048F                     	;# 
  5789  048F                     	;# 
  5790  0490                     	;# 
  5791  0491                     	;# 
  5792  0492                     	;# 
  5793  0492                     	;# 
  5794  0493                     	;# 
  5795  0494                     	;# 
  5796  0495                     	;# 
  5797  0495                     	;# 
  5798  0496                     	;# 
  5799  0497                     	;# 
  5800  0498                     	;# 
  5801  0499                     	;# 
  5802  049A                     	;# 
  5803  049B                     	;# 
  5804  049C                     	;# 
  5805  049D                     	;# 
  5806  050C                     	;# 
  5807  050C                     	;# 
  5808  050D                     	;# 
  5809  050E                     	;# 
  5810  050F                     	;# 
  5811  050F                     	;# 
  5812  0510                     	;# 
  5813  0511                     	;# 
  5814  0512                     	;# 
  5815  0512                     	;# 
  5816  0513                     	;# 
  5817  0514                     	;# 
  5818  0515                     	;# 
  5819  0515                     	;# 
  5820  0516                     	;# 
  5821  0517                     	;# 
  5822  0518                     	;# 
  5823  0519                     	;# 
  5824  051A                     	;# 
  5825  051B                     	;# 
  5826  051C                     	;# 
  5827  051D                     	;# 
  5828  058C                     	;# 
  5829  058C                     	;# 
  5830  058D                     	;# 
  5831  058E                     	;# 
  5832  058F                     	;# 
  5833  058F                     	;# 
  5834  0590                     	;# 
  5835  0591                     	;# 
  5836  0592                     	;# 
  5837  0593                     	;# 
  5838  060C                     	;# 
  5839  060D                     	;# 
  5840  060E                     	;# 
  5841  060F                     	;# 
  5842  0610                     	;# 
  5843  0611                     	;# 
  5844  0612                     	;# 
  5845  0613                     	;# 
  5846  0614                     	;# 
  5847  0616                     	;# 
  5848  0617                     	;# 
  5849  0618                     	;# 
  5850  0619                     	;# 
  5851  061A                     	;# 
  5852  061B                     	;# 
  5853  061C                     	;# 
  5854  061D                     	;# 
  5855  061E                     	;# 
  5856  068C                     	;# 
  5857  068D                     	;# 
  5858  068E                     	;# 
  5859  068F                     	;# 
  5860  0690                     	;# 
  5861  0691                     	;# 
  5862  0692                     	;# 
  5863  0693                     	;# 
  5864  0694                     	;# 
  5865  070C                     	;# 
  5866  070D                     	;# 
  5867  070E                     	;# 
  5868  070F                     	;# 
  5869  0710                     	;# 
  5870  0711                     	;# 
  5871  0712                     	;# 
  5872  0713                     	;# 
  5873  0714                     	;# 
  5874  0716                     	;# 
  5875  0717                     	;# 
  5876  0718                     	;# 
  5877  0719                     	;# 
  5878  071A                     	;# 
  5879  071B                     	;# 
  5880  071C                     	;# 
  5881  071D                     	;# 
  5882  071E                     	;# 
  5883  0796                     	;# 
  5884  0797                     	;# 
  5885  0798                     	;# 
  5886  0799                     	;# 
  5887  079A                     	;# 
  5888  079B                     	;# 
  5889  080C                     	;# 
  5890  080D                     	;# 
  5891  080E                     	;# 
  5892  080F                     	;# 
  5893  0810                     	;# 
  5894  0811                     	;# 
  5895  0812                     	;# 
  5896  0813                     	;# 
  5897  0814                     	;# 
  5898  081A                     	;# 
  5899  081B                     	;# 
  5900  081C                     	;# 
  5901  081D                     	;# 
  5902  081E                     	;# 
  5903  081F                     	;# 
  5904  088C                     	;# 
  5905  088D                     	;# 
  5906  088E                     	;# 
  5907  088F                     	;# 
  5908  0890                     	;# 
  5909  0891                     	;# 
  5910  0892                     	;# 
  5911  0893                     	;# 
  5912  0895                     	;# 
  5913  0896                     	;# 
  5914  0897                     	;# 
  5915  0898                     	;# 
  5916  0899                     	;# 
  5917  089A                     	;# 
  5918  089B                     	;# 
  5919  090C                     	;# 
  5920  090E                     	;# 
  5921  090F                     	;# 
  5922  091F                     	;# 
  5923  091F                     	;# 
  5924  098F                     	;# 
  5925  098F                     	;# 
  5926  0990                     	;# 
  5927  0991                     	;# 
  5928  0992                     	;# 
  5929  0993                     	;# 
  5930  0994                     	;# 
  5931  0995                     	;# 
  5932  0996                     	;# 
  5933  0997                     	;# 
  5934  0E0F                     	;# 
  5935  0E10                     	;# 
  5936  0E11                     	;# 
  5937  0E12                     	;# 
  5938  0E13                     	;# 
  5939  0E14                     	;# 
  5940  0E15                     	;# 
  5941  0E16                     	;# 
  5942  0E17                     	;# 
  5943  0E18                     	;# 
  5944  0E19                     	;# 
  5945  0E1A                     	;# 
  5946  0E1B                     	;# 
  5947  0E1C                     	;# 
  5948  0E1D                     	;# 
  5949  0E1E                     	;# 
  5950  0E1F                     	;# 
  5951  0E20                     	;# 
  5952  0E21                     	;# 
  5953  0E22                     	;# 
  5954  0E23                     	;# 
  5955  0E24                     	;# 
  5956  0E25                     	;# 
  5957  0E26                     	;# 
  5958  0E27                     	;# 
  5959  0E28                     	;# 
  5960  0E29                     	;# 
  5961  0E2A                     	;# 
  5962  0E2B                     	;# 
  5963  0E2C                     	;# 
  5964  0E2D                     	;# 
  5965  0E2E                     	;# 
  5966  0E2F                     	;# 
  5967  0E30                     	;# 
  5968  0E31                     	;# 
  5969  0E32                     	;# 
  5970  0E33                     	;# 
  5971  0E34                     	;# 
  5972  0E35                     	;# 
  5973  0E36                     	;# 
  5974  0E37                     	;# 
  5975  0E8F                     	;# 
  5976  0E90                     	;# 
  5977  0E91                     	;# 
  5978  0E92                     	;# 
  5979  0E93                     	;# 
  5980  0E94                     	;# 
  5981  0E95                     	;# 
  5982  0E96                     	;# 
  5983  0E97                     	;# 
  5984  0E9C                     	;# 
  5985  0E9D                     	;# 
  5986  0E9E                     	;# 
  5987  0EA1                     	;# 
  5988  0EA2                     	;# 
  5989  0EA3                     	;# 
  5990  0EA4                     	;# 
  5991  0EA5                     	;# 
  5992  0EA9                     	;# 
  5993  0EAA                     	;# 
  5994  0EAB                     	;# 
  5995  0EAC                     	;# 
  5996  0EB1                     	;# 
  5997  0EB2                     	;# 
  5998  0EB3                     	;# 
  5999  0EB8                     	;# 
  6000  0EB9                     	;# 
  6001  0EBA                     	;# 
  6002  0EBB                     	;# 
  6003  0EBC                     	;# 
  6004  0EBD                     	;# 
  6005  0EBE                     	;# 
  6006  0EC3                     	;# 
  6007  0EC5                     	;# 
  6008  0EC6                     	;# 
  6009  0EC7                     	;# 
  6010  0EC8                     	;# 
  6011  0EC9                     	;# 
  6012  0ECA                     	;# 
  6013  0ECB                     	;# 
  6014  0ECC                     	;# 
  6015  0F10                     	;# 
  6016  0F11                     	;# 
  6017  0F12                     	;# 
  6018  0F13                     	;# 
  6019  0F14                     	;# 
  6020  0F15                     	;# 
  6021  0F16                     	;# 
  6022  0F17                     	;# 
  6023  0F18                     	;# 
  6024  0F19                     	;# 
  6025  0F1A                     	;# 
  6026  0F1B                     	;# 
  6027  0F1C                     	;# 
  6028  0F1D                     	;# 
  6029  0F1E                     	;# 
  6030  0F1F                     	;# 
  6031  0F20                     	;# 
  6032  0F21                     	;# 
  6033  0F22                     	;# 
  6034  0F23                     	;# 
  6035  0F24                     	;# 
  6036  0F25                     	;# 
  6037  0F26                     	;# 
  6038  0F27                     	;# 
  6039  0F28                     	;# 
  6040  0F29                     	;# 
  6041  0F2A                     	;# 
  6042  0F2B                     	;# 
  6043  0F2C                     	;# 
  6044  0F2D                     	;# 
  6045  0F2E                     	;# 
  6046  0F2F                     	;# 
  6047  0F30                     	;# 
  6048  0F31                     	;# 
  6049  0F32                     	;# 
  6050  0F38                     	;# 
  6051  0F39                     	;# 
  6052  0F3A                     	;# 
  6053  0F3B                     	;# 
  6054  0F3C                     	;# 
  6055  0F3D                     	;# 
  6056  0F3E                     	;# 
  6057  0F3F                     	;# 
  6058  0F40                     	;# 
  6059  0F41                     	;# 
  6060  0F43                     	;# 
  6061  0F44                     	;# 
  6062  0F45                     	;# 
  6063  0F46                     	;# 
  6064  0F47                     	;# 
  6065  0F48                     	;# 
  6066  0F49                     	;# 
  6067  0F4A                     	;# 
  6068  0F4B                     	;# 
  6069  0F4C                     	;# 
  6070  0F4E                     	;# 
  6071  0F4F                     	;# 
  6072  0F50                     	;# 
  6073  0F51                     	;# 
  6074  0F52                     	;# 
  6075  0F53                     	;# 
  6076  0F54                     	;# 
  6077  0F55                     	;# 
  6078  0F56                     	;# 
  6079  0F57                     	;# 
  6080  0F59                     	;# 
  6081  0F5A                     	;# 
  6082  0F5B                     	;# 
  6083  0F5C                     	;# 
  6084  0F5D                     	;# 
  6085  0F61                     	;# 
  6086  0F62                     	;# 
  6087  0F64                     	;# 
  6088  0F65                     	;# 
  6089  0F66                     	;# 
  6090  0F67                     	;# 
  6091  0F68                     	;# 
  6092  0F69                     	;# 
  6093  0F6A                     	;# 
  6094  0F6B                     	;# 
  6095  0F6C                     	;# 
  6096  0F6D                     	;# 
  6097  0FE4                     	;# 
  6098  0FE5                     	;# 
  6099  0FE6                     	;# 
  6100  0FE7                     	;# 
  6101  0FE8                     	;# 
  6102  0FE9                     	;# 
  6103  0FEA                     	;# 
  6104  0FEB                     	;# 
  6105  0FED                     	;# 
  6106  0FEE                     	;# 
  6107  0FEF                     	;# 
  6108                           
  6109 ;; Function _rd1RegCompleteHandler is unused but had its address taken
  6110  0000                     
  6111 ;; Function _rd2RegCompleteHandler is unused but had its address taken
  6112  0000                     
  6113 ;; Function _wr1RegCompleteHandler is unused but had its address taken
  6114  0000                     
  6115 ;; Function _wr2RegCompleteHandler is unused but had its address taken
  6116  0000                     
  6117 ;; Function _rdBlkRegCompleteHandler is unused but had its address taken
  6118  0000                     
  6119 ;; Function _I2C1_DO_IDLE is unused but had its address taken
  6120  0000                     
  6121 ;; Function _I2C1_DO_SEND_ADR_READ is unused but had its address taken
  6122  0000                     
  6123 ;; Function _I2C1_DO_SEND_ADR_WRITE is unused but had its address taken
  6124  0000                     
  6125 ;; Function _I2C1_DO_TX is unused but had its address taken
  6126  0000                     
  6127 ;; Function _I2C1_DO_RX is unused but had its address taken
  6128  0000                     
  6129 ;; Function _I2C1_DO_RCEN is unused but had its address taken
  6130  0000                     
  6131 ;; Function _I2C1_DO_TX_EMPTY is unused but had its address taken
  6132  0000                     
  6133 ;; Function _I2C1_DO_SEND_RESTART_READ is unused but had its address taken
  6134  0000                     
  6135 ;; Function _I2C1_DO_SEND_RESTART_WRITE is unused but had its address taken
  6136  0000                     
  6137 ;; Function _I2C1_DO_SEND_RESTART is unused but had its address taken
  6138  0000                     
  6139 ;; Function _I2C1_DO_SEND_STOP is unused but had its address taken
  6140  0000                     
  6141 ;; Function _I2C1_DO_RX_ACK is unused but had its address taken
  6142  0000                     
  6143 ;; Function _I2C1_DO_RX_NACK_STOP is unused but had its address taken
  6144  0000                     
  6145 ;; Function _I2C1_DO_RX_NACK_RESTART is unused but had its address taken
  6146  0000                     
  6147 ;; Function _I2C1_DO_RESET is unused but had its address taken
  6148  0000                     
  6149 ;; Function _I2C1_DO_ADDRESS_NACK is unused but had its address taken
  6150  0000                     
  6151 ;; Function _I2C1_CallbackReturnStop is unused but had its address taken
  6152  0000                     
  6153 ;; Function _I2C1_CallbackReturnReset is unused but had its address taken
  6154  0000                     
  6155                           	psect	stringtext1
  6156  1000                     __pstringtext1:
  6157  1000                     _i2c1_fsmStateTable:
  6158  1000  3400               	retlw	0
  6159  1001  3400               	retlw	0
  6160  1002  3400               	retlw	0
  6161  1003  3400               	retlw	0
  6162  1004  3400               	retlw	0
  6163  1005  3400               	retlw	0
  6164  1006  3400               	retlw	0
  6165  1007  3400               	retlw	0
  6166  1008  3400               	retlw	0
  6167  1009  3400               	retlw	0
  6168  100A  3400               	retlw	0
  6169  100B  3400               	retlw	0
  6170  100C  3400               	retlw	0
  6171  100D  3400               	retlw	0
  6172  100E  3400               	retlw	0
  6173  100F  3400               	retlw	0
  6174  1010  3400               	retlw	0
  6175  1011  3400               	retlw	0
  6176  1012  3400               	retlw	0
  6177  1013  3400               	retlw	0
  6178  1014  3400               	retlw	0
  6179  1015  3400               	retlw	0
  6180  1016  3400               	retlw	0
  6181  1017  3400               	retlw	0
  6182  1018  3400               	retlw	0
  6183  1019  3400               	retlw	0
  6184  101A  3400               	retlw	0
  6185  101B  3400               	retlw	0
  6186  101C  3400               	retlw	0
  6187  101D  3400               	retlw	0
  6188  101E  3400               	retlw	0
  6189  101F  3400               	retlw	0
  6190  1020                     __end_of_i2c1_fsmStateTable:
  6191                           
  6192                           	psect	nvBANK1
  6193  00E7                     __pnvBANK1:
  6194  00E7                     _TMR1_InterruptHandler:
  6195  00E7                     	ds	2
  6196  00E9                     _timer1ReloadVal:
  6197  00E9                     	ds	2
  6198  0016                     _LATAbits	set	22
  6199  000C                     _PORTAbits	set	12
  6200  000D                     _PORTBbits	set	13
  6201  000B                     _INTCONbits	set	11
  6202  0014                     _TRISD	set	20
  6203  0013                     _TRISC	set	19
  6204  0012                     _TRISB	set	18
  6205  0011                     _TRISA	set	17
  6206  0015                     _TRISE	set	21
  6207  0018                     _LATC	set	24
  6208  0017                     _LATB	set	23
  6209  0016                     _LATA	set	22
  6210  0019                     _LATD	set	25
  6211  001A                     _LATE	set	26
  6212  0013                     _TRISCbits	set	19
  6213  0094                     _ADCON1bits	set	148
  6214  008E                     _ADPREVL	set	142
  6215  008F                     _ADPREVH	set	143
  6216  0097                     _ADSTATbits	set	151
  6217  0090                     _ADACCL	set	144
  6218  0091                     _ADACCH	set	145
  6219  0095                     _ADCON2bits	set	149
  6220  0096                     _ADCON3bits	set	150
  6221  008C                     _ADRESL	set	140
  6222  008D                     _ADRESH	set	141
  6223  0093                     _ADCON0bits	set	147
  6224  009D                     _ADACQ	set	157
  6225  0093                     _ADCON0	set	147
  6226  0098                     _ADCLK	set	152
  6227  0099                     _ADACT	set	153
  6228  009A                     _ADREF	set	154
  6229  0097                     _ADSTAT	set	151
  6230  0096                     _ADCON3	set	150
  6231  0095                     _ADCON2	set	149
  6232  0094                     _ADCON1	set	148
  6233  009C                     _ADPRE	set	156
  6234  009B                     _ADCAP	set	155
  6235  009E                     _ADPCH	set	158
  6236  0116                     _ADERRL	set	278
  6237  0117                     _ADERRH	set	279
  6238  0114                     _ADFLTRL	set	276
  6239  0115                     _ADFLTRH	set	277
  6240  010C                     _ADCNT	set	268
  6241  010D                     _ADRPT	set	269
  6242  0113                     _ADSTPTH	set	275
  6243  0112                     _ADSTPTL	set	274
  6244  0111                     _ADUTHH	set	273
  6245  0110                     _ADUTHL	set	272
  6246  010F                     _ADLTHH	set	271
  6247  010E                     _ADLTHL	set	270
  6248  018C                     _SSP1BUF	set	396
  6249  018F                     _SSP1STATbits	set	399
  6250  0191                     _SSP1CON2bits	set	401
  6251  0190                     _SSP1CON1bits	set	400
  6252  018D                     _SSP1ADD	set	397
  6253  0191                     _SSP1CON2	set	401
  6254  0190                     _SSP1CON1	set	400
  6255  018F                     _SSP1STAT	set	399
  6256  020F                     _T1GCONbits	set	527
  6257  020E                     _T1CONbits	set	526
  6258  020E                     _T1CON	set	526
  6259  020C                     _TMR1L	set	524
  6260  020D                     _TMR1H	set	525
  6261  0211                     _T1CLK	set	529
  6262  0210                     _T1GATE	set	528
  6263  020F                     _T1GCON	set	527
  6264  0719                     _PIE3bits	set	1817
  6265  0710                     _PIR4bits	set	1808
  6266  071A                     _PIE4bits	set	1818
  6267  070F                     _PIR3bits	set	1807
  6268  079B                     _PMD5	set	1947
  6269  079A                     _PMD4	set	1946
  6270  0799                     _PMD3	set	1945
  6271  0798                     _PMD2	set	1944
  6272  0797                     _PMD1	set	1943
  6273  0796                     _PMD0	set	1942
  6274  081F                     _NVMCON2	set	2079
  6275  081C                     _NVMDATL	set	2076
  6276  081D                     _NVMDATH	set	2077
  6277  081E                     _NVMCON1bits	set	2078
  6278  081B                     _NVMADRH	set	2075
  6279  081A                     _NVMADRL	set	2074
  6280  0892                     _OSCTUNE	set	2194
  6281  0893                     _OSCFRQ	set	2195
  6282  0891                     _OSCEN	set	2193
  6283  088F                     _OSCCON3	set	2191
  6284  088D                     _OSCCON1	set	2189
  6285  0EC6                     _SSP1DATPPS	set	3782
  6286  0EC5                     _SSP1CLKPPS	set	3781
  6287  0F24                     _RC4PPS	set	3876
  6288  0F23                     _RC3PPS	set	3875
  6289  0F68                     _INLVLE	set	3944
  6290  0F5D                     _INLVLD	set	3933
  6291  0F52                     _INLVLC	set	3922
  6292  0F47                     _INLVLB	set	3911
  6293  0F3C                     _INLVLA	set	3900
  6294  0F67                     _SLRCONE	set	3943
  6295  0F5C                     _SLRCOND	set	3932
  6296  0F51                     _SLRCONC	set	3921
  6297  0F46                     _SLRCONB	set	3910
  6298  0F3B                     _SLRCONA	set	3899
  6299  0F5B                     _ODCOND	set	3931
  6300  0F50                     _ODCONC	set	3920
  6301  0F45                     _ODCONB	set	3909
  6302  0F3A                     _ODCONA	set	3898
  6303  0F66                     _ODCONE	set	3942
  6304  0F4F                     _WPUC	set	3919
  6305  0F39                     _WPUA	set	3897
  6306  0F44                     _WPUB	set	3908
  6307  0F65                     _WPUE	set	3941
  6308  0F5A                     _WPUD	set	3930
  6309  0F38                     _ANSELA	set	3896
  6310  0F64                     _ANSELE	set	3940
  6311  0F43                     _ANSELB	set	3907
  6312  0F4E                     _ANSELC	set	3918
  6313  0F59                     _ANSELD	set	3929
  6314                           
  6315                           	psect	stringtext2
  6316  1020                     __pstringtext2:
  6317  1020                     STR_2:
  6318  1020  3453               	retlw	83	;'S'
  6319  1021  3454               	retlw	84	;'T'
  6320  1022  3452               	retlw	82	;'R'
  6321  1023  342D               	retlw	45	;'-'
  6322  1024  3452               	retlw	82	;'R'
  6323  1025  3454               	retlw	84	;'T'
  6324  1026  3453               	retlw	83	;'S'
  6325  1027  3400               	retlw	0
  6326                           
  6327                           	psect	stringtext3
  6328  1028                     __pstringtext3:
  6329  1028                     STR_3:
  6330  1028  3425               	retlw	37	;'%'
  6331  1029  3430               	retlw	48	;'0'
  6332  102A  3432               	retlw	50	;'2'
  6333  102B  3464               	retlw	100	;'d'
  6334  102C  3420               	retlw	32	;' '
  6335  102D  3443               	retlw	67	;'C'
  6336  102E  3400               	retlw	0
  6337                           
  6338                           	psect	stringtext4
  6339  102F                     __pstringtext4:
  6340  102F                     STR_1:
  6341  102F  3454               	retlw	84	;'T'
  6342  1030  3465               	retlw	101	;'e'
  6343  1031  346D               	retlw	109	;'m'
  6344  1032  3470               	retlw	112	;'p'
  6345  1033  3400               	retlw	0
  6346                           
  6347                           	psect	stringtext5
  6348  0000                     __pstringtext5:
  6349                           
  6350                           	psect	cinit
  6351  001A                     start_initialization:	
  6352                           ; #config settings
  6353                           
  6354  001A                     __initialization:
  6355                           
  6356                           ; Clear objects allocated to COMMON
  6357  001A  01F5               	clrf	__pbssCOMMON& (0+127)
  6358  001B  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
  6359  001C  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
  6360  001D  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
  6361                           
  6362                           ; Clear objects allocated to BANK1
  6363  001E  30C6               	movlw	low __pbssBANK1
  6364  001F  0084               	movwf	4
  6365  0020  3000               	movlw	high __pbssBANK1
  6366  0021  0085               	movwf	5
  6367  0022  3021               	movlw	33
  6368  0023  3189  215D  3180   	fcall	clear_ram0
  6369                           
  6370                           ; Clear objects allocated to BANK2
  6371  0026  3020               	movlw	low __pbssBANK2
  6372  0027  0084               	movwf	4
  6373  0028  3001               	movlw	high __pbssBANK2
  6374  0029  0085               	movwf	5
  6375  002A  3020               	movlw	32
  6376  002B  3189  215D  3180   	fcall	clear_ram0
  6377  002E                     end_of_initialization:	
  6378                           ;End of C runtime variable initialization code
  6379                           
  6380  002E                     __end_of__initialization:
  6381  002E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6382  002F  0020               	movlb	0
  6383  0030  318D  2DE0         	ljmp	_main	;jump to C main() function
  6384                           
  6385                           	psect	bssCOMMON
  6386  0075                     __pbssCOMMON:
  6387  0075                     _prec:
  6388  0075                     	ds	2
  6389  0077                     _flags:
  6390  0077                     	ds	2
  6391                           
  6392                           	psect	bssBANK1
  6393  00C6                     __pbssBANK1:
  6394  00C6                     _I2C1_Status:
  6395  00C6                     	ds	29
  6396  00E3                     _nout:
  6397  00E3                     	ds	2
  6398  00E5                     _width:
  6399  00E5                     	ds	2
  6400                           
  6401                           	psect	bssBANK2
  6402  0120                     __pbssBANK2:
  6403  0120                     _dbuf:
  6404  0120                     	ds	32
  6405                           
  6406                           	psect	clrtext
  6407  095D                     clear_ram0:	
  6408                           ;	Called with FSR0 containing the base address, and
  6409                           ;	WREG with the size to clear
  6410                           
  6411  095D  0064               	clrwdt	;clear the watchdog before getting into this loop
  6412  095E                     clrloop0:
  6413  095E  0180               	clrf	0	;clear RAM location pointed to by FSR
  6414  095F  3101               	addfsr 0,1
  6415  0960  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  6416  0961  295E               	goto	clrloop0	;have we reached the end yet?
  6417  0962  3400               	retlw	0	;all done for this memory range, return
  6418                           
  6419                           	psect	cstackBANK1
  6420  00A0                     __pcstackBANK1:
  6421  00A0                     ?_vfprintf:
  6422  00A0                     vfprintf@fmt:	
  6423                           ; 2 bytes @ 0x0
  6424                           
  6425                           
  6426                           ; 2 bytes @ 0x0
  6427  00A0                     	ds	2
  6428  00A2                     vfprintf@ap:
  6429                           
  6430                           ; 1 bytes @ 0x2
  6431  00A2                     	ds	1
  6432  00A3                     vfprintf@fp:
  6433                           
  6434                           ; 1 bytes @ 0x3
  6435  00A3                     	ds	1
  6436  00A4                     vfprintf@cfmt:
  6437                           
  6438                           ; 2 bytes @ 0x4
  6439  00A4                     	ds	2
  6440  00A6                     ?_sprintf:
  6441  00A6                     sprintf@fmt:	
  6442                           ; 2 bytes @ 0x6
  6443                           
  6444                           
  6445                           ; 2 bytes @ 0x6
  6446  00A6                     	ds	4
  6447  00AA                     ??_sprintf:
  6448                           
  6449                           ; 1 bytes @ 0xA
  6450  00AA                     	ds	1
  6451  00AB                     sprintf@s:
  6452                           
  6453                           ; 1 bytes @ 0xB
  6454  00AB                     	ds	1
  6455  00AC                     sprintf@ap:
  6456                           
  6457                           ; 1 bytes @ 0xC
  6458  00AC                     	ds	1
  6459  00AD                     sprintf@f:
  6460                           
  6461                           ; 5 bytes @ 0xD
  6462  00AD                     	ds	5
  6463  00B2                     ??_main:
  6464                           
  6465                           ; 1 bytes @ 0x12
  6466  00B2                     	ds	2
  6467  00B4                     main@buf:
  6468                           
  6469                           ; 17 bytes @ 0x14
  6470  00B4                     	ds	17
  6471  00C5                     main@c:
  6472                           
  6473                           ; 1 bytes @ 0x25
  6474  00C5                     	ds	1
  6475                           
  6476                           	psect	cstackCOMMON
  6477  0070                     __pcstackCOMMON:
  6478  0070                     ?_PMD_Initialize:
  6479  0070                     ?_I2C1_Initialize:	
  6480                           ; 1 bytes @ 0x0
  6481                           
  6482  0070                     ?_OSCILLATOR_Initialize:	
  6483                           ; 1 bytes @ 0x0
  6484                           
  6485  0070                     ?_ADCC_Initialize:	
  6486                           ; 1 bytes @ 0x0
  6487                           
  6488  0070                     ?_TMR1_Initialize:	
  6489                           ; 1 bytes @ 0x0
  6490                           
  6491  0070                     ?_TMR1_ISR:	
  6492                           ; 1 bytes @ 0x0
  6493                           
  6494  0070                     ?_TMR1_DefaultInterruptHandler:	
  6495                           ; 1 bytes @ 0x0
  6496                           
  6497  0070                     ??_TMR1_DefaultInterruptHandler:	
  6498                           ; 1 bytes @ 0x0
  6499                           
  6500  0070                     ?_TMR1_CallBack:	
  6501                           ; 1 bytes @ 0x0
  6502                           
  6503  0070                     ?_putch:	
  6504                           ; 1 bytes @ 0x0
  6505                           
  6506  0070                     ?_OpenI2C:	
  6507                           ; 1 bytes @ 0x0
  6508                           
  6509  0070                     ?_ReadI2C:	
  6510                           ; 1 bytes @ 0x0
  6511                           
  6512  0070                     ?_WriteI2C:	
  6513                           ; 1 bytes @ 0x0
  6514                           
  6515  0070                     ?_LCDsend:	
  6516                           ; 1 bytes @ 0x0
  6517                           
  6518  0070                     ?_LCDrecv:	
  6519                           ; 1 bytes @ 0x0
  6520                           
  6521  0070                     ?_LCDinit:	
  6522                           ; 1 bytes @ 0x0
  6523                           
  6524  0070                     ?_LCDcmd:	
  6525                           ; 1 bytes @ 0x0
  6526                           
  6527  0070                     ?_LCDchar:	
  6528                           ; 1 bytes @ 0x0
  6529                           
  6530  0070                     ?_PIN_MANAGER_Initialize:	
  6531                           ; 1 bytes @ 0x0
  6532                           
  6533  0070                     ?_SYSTEM_Initialize:	
  6534                           ; 1 bytes @ 0x0
  6535                           
  6536  0070                     ?_INTERRUPT_InterruptManager:	
  6537                           ; 1 bytes @ 0x0
  6538                           
  6539  0070                     ?_TMR1_WriteTimer:	
  6540                           ; 1 bytes @ 0x0
  6541                           
  6542  0070                     ?_S1:	
  6543                           ; 1 bytes @ 0x0
  6544                           
  6545  0070                     ?_timerInterrupt:	
  6546                           ; 1 bytes @ 0x0
  6547                           
  6548  0070                     ?_readTC74:	
  6549                           ; 1 bytes @ 0x0
  6550                           
  6551  0070                     ?_main:	
  6552                           ; 1 bytes @ 0x0
  6553                           
  6554  0070                     ?_ADCC_GetSingleConversion:	
  6555                           ; 1 bytes @ 0x0
  6556                           
  6557  0070                     putch@c:	
  6558                           ; 2 bytes @ 0x0
  6559                           
  6560  0070                     TMR1_WriteTimer@timerVal:	
  6561                           ; 1 bytes @ 0x0
  6562                           
  6563                           
  6564                           ; 2 bytes @ 0x0
  6565  0070                     	ds	2
  6566  0072                     ??_TMR1_WriteTimer:
  6567  0072                     ??_ADCC_GetSingleConversion:	
  6568                           ; 1 bytes @ 0x2
  6569                           
  6570  0072                     ADCC_GetSingleConversion@channel:	
  6571                           ; 1 bytes @ 0x2
  6572                           
  6573                           
  6574                           ; 1 bytes @ 0x2
  6575  0072                     	ds	1
  6576  0073                     ??_timerInterrupt:
  6577  0073                     timerInterrupt@value:	
  6578                           ; 1 bytes @ 0x3
  6579                           
  6580                           
  6581                           ; 2 bytes @ 0x3
  6582  0073                     	ds	2
  6583  0075                     ??_PMD_Initialize:
  6584  0075                     ??_I2C1_Initialize:	
  6585                           ; 1 bytes @ 0x5
  6586                           
  6587  0075                     ??_OSCILLATOR_Initialize:	
  6588                           ; 1 bytes @ 0x5
  6589                           
  6590  0075                     ??_ADCC_Initialize:	
  6591                           ; 1 bytes @ 0x5
  6592                           
  6593  0075                     ??_TMR1_Initialize:	
  6594                           ; 1 bytes @ 0x5
  6595                           
  6596  0075                     ??_TMR1_ISR:	
  6597                           ; 1 bytes @ 0x5
  6598                           
  6599  0075                     ??_TMR1_SetInterruptHandler:	
  6600                           ; 1 bytes @ 0x5
  6601                           
  6602  0075                     ??_TMR1_CallBack:	
  6603                           ; 1 bytes @ 0x5
  6604                           
  6605  0075                     ??_putch:	
  6606                           ; 1 bytes @ 0x5
  6607                           
  6608  0075                     ??_OpenI2C:	
  6609                           ; 1 bytes @ 0x5
  6610                           
  6611  0075                     ??_LCDcmd:	
  6612                           ; 1 bytes @ 0x5
  6613                           
  6614  0075                     ??_LCDchar:	
  6615                           ; 1 bytes @ 0x5
  6616                           
  6617  0075                     ??_LCDbusy:	
  6618                           ; 1 bytes @ 0x5
  6619                           
  6620  0075                     ??_PIN_MANAGER_Initialize:	
  6621                           ; 1 bytes @ 0x5
  6622                           
  6623  0075                     ??_SYSTEM_Initialize:	
  6624                           ; 1 bytes @ 0x5
  6625                           
  6626  0075                     ??_INTERRUPT_InterruptManager:	
  6627                           ; 1 bytes @ 0x5
  6628                           
  6629  0075                     ??_S1:	
  6630                           ; 1 bytes @ 0x5
  6631                           
  6632  0075                     ??___wmul:	
  6633                           ; 1 bytes @ 0x5
  6634                           
  6635                           
  6636                           	psect	cstackBANK0
  6637  0020                     __pcstackBANK0:	
  6638                           ; 1 bytes @ 0x5
  6639                           
  6640  0020                     ?_TMR1_SetInterruptHandler:
  6641  0020                     ??_ReadI2C:	
  6642                           ; 1 bytes @ 0x0
  6643                           
  6644  0020                     ??_WriteI2C:	
  6645                           ; 1 bytes @ 0x0
  6646                           
  6647  0020                     ?_fputc:	
  6648                           ; 1 bytes @ 0x0
  6649                           
  6650  0020                     ?_strlen:	
  6651                           ; 2 bytes @ 0x0
  6652                           
  6653  0020                     ?_isdigit:	
  6654                           ; 2 bytes @ 0x0
  6655                           
  6656  0020                     ?_isspace:	
  6657                           ; 2 bytes @ 0x0
  6658                           
  6659  0020                     ?___wmul:	
  6660                           ; 2 bytes @ 0x0
  6661                           
  6662  0020                     ?___aodiv:	
  6663                           ; 2 bytes @ 0x0
  6664                           
  6665  0020                     ?___aomod:	
  6666                           ; 8 bytes @ 0x0
  6667                           
  6668  0020                     TMR1_SetInterruptHandler@InterruptHandler:	
  6669                           ; 8 bytes @ 0x0
  6670                           
  6671  0020                     ___wmul@multiplier:	
  6672                           ; 2 bytes @ 0x0
  6673                           
  6674  0020                     isdigit@c:	
  6675                           ; 2 bytes @ 0x0
  6676                           
  6677  0020                     isspace@c:	
  6678                           ; 2 bytes @ 0x0
  6679                           
  6680  0020                     fputc@c:	
  6681                           ; 2 bytes @ 0x0
  6682                           
  6683  0020                     ___aodiv@divisor:	
  6684                           ; 2 bytes @ 0x0
  6685                           
  6686  0020                     ___aomod@divisor:	
  6687                           ; 8 bytes @ 0x0
  6688                           
  6689                           
  6690                           ; 8 bytes @ 0x0
  6691  0020                     	ds	1
  6692  0021                     WriteI2C@data_out:
  6693                           
  6694                           ; 1 bytes @ 0x1
  6695  0021                     	ds	1
  6696  0022                     ??_strlen:
  6697  0022                     ??_isdigit:	
  6698                           ; 1 bytes @ 0x2
  6699                           
  6700  0022                     ??_isspace:	
  6701                           ; 1 bytes @ 0x2
  6702                           
  6703  0022                     ??_LCDsend:	
  6704                           ; 1 bytes @ 0x2
  6705                           
  6706  0022                     ??_LCDrecv:	
  6707                           ; 1 bytes @ 0x2
  6708                           
  6709  0022                     ?_LCDsend2x4:	
  6710                           ; 1 bytes @ 0x2
  6711                           
  6712  0022                     ??_readTC74:	
  6713                           ; 1 bytes @ 0x2
  6714                           
  6715  0022                     LCDsend2x4@mode:	
  6716                           ; 1 bytes @ 0x2
  6717                           
  6718  0022                     fputc@fp:	
  6719                           ; 1 bytes @ 0x2
  6720                           
  6721  0022                     ___wmul@multiplicand:	
  6722                           ; 1 bytes @ 0x2
  6723                           
  6724                           
  6725                           ; 2 bytes @ 0x2
  6726  0022                     	ds	1
  6727  0023                     ??_fputc:
  6728  0023                     ??_LCDsend2x4:	
  6729                           ; 1 bytes @ 0x3
  6730                           
  6731  0023                     LCDsend@c:	
  6732                           ; 1 bytes @ 0x3
  6733                           
  6734  0023                     readTC74@value:	
  6735                           ; 1 bytes @ 0x3
  6736                           
  6737  0023                     strlen@a:	
  6738                           ; 1 bytes @ 0x3
  6739                           
  6740                           
  6741                           ; 1 bytes @ 0x3
  6742  0023                     	ds	1
  6743  0024                     LCDrecv@hc:
  6744  0024                     _isspace$2845:	
  6745                           ; 1 bytes @ 0x4
  6746                           
  6747  0024                     strlen@s:	
  6748                           ; 1 bytes @ 0x4
  6749                           
  6750  0024                     ___wmul@product:	
  6751                           ; 1 bytes @ 0x4
  6752                           
  6753                           
  6754                           ; 2 bytes @ 0x4
  6755  0024                     	ds	1
  6756  0025                     LCDrecv@lc:
  6757  0025                     LCDsend2x4@c:	
  6758                           ; 1 bytes @ 0x5
  6759                           
  6760                           
  6761                           ; 1 bytes @ 0x5
  6762  0025                     	ds	1
  6763  0026                     ?_atoi:
  6764  0026                     LCDrecv@mode:	
  6765                           ; 2 bytes @ 0x6
  6766                           
  6767  0026                     LCDsend2x4@hc:	
  6768                           ; 1 bytes @ 0x6
  6769                           
  6770  0026                     atoi@s:	
  6771                           ; 1 bytes @ 0x6
  6772                           
  6773                           
  6774                           ; 2 bytes @ 0x6
  6775  0026                     	ds	1
  6776  0027                     ?_LCDbusy:
  6777  0027                     LCDsend2x4@lc:	
  6778                           ; 2 bytes @ 0x7
  6779                           
  6780                           
  6781                           ; 1 bytes @ 0x7
  6782  0027                     	ds	1
  6783  0028                     ??_atoi:
  6784  0028                     ??_LCDinit:	
  6785                           ; 1 bytes @ 0x8
  6786                           
  6787  0028                     ?_fputs:	
  6788                           ; 1 bytes @ 0x8
  6789                           
  6790  0028                     LCDcmd@c:	
  6791                           ; 2 bytes @ 0x8
  6792                           
  6793  0028                     LCDchar@c:	
  6794                           ; 1 bytes @ 0x8
  6795                           
  6796  0028                     fputs@fp:	
  6797                           ; 1 bytes @ 0x8
  6798                           
  6799  0028                     ___aodiv@dividend:	
  6800                           ; 1 bytes @ 0x8
  6801                           
  6802  0028                     ___aomod@dividend:	
  6803                           ; 8 bytes @ 0x8
  6804                           
  6805                           
  6806                           ; 8 bytes @ 0x8
  6807  0028                     	ds	1
  6808  0029                     ??_fputs:
  6809  0029                     ?_LCDstr:	
  6810                           ; 1 bytes @ 0x9
  6811                           
  6812  0029                     ?_LCDpos:	
  6813                           ; 1 bytes @ 0x9
  6814                           
  6815  0029                     LCDpos@c:	
  6816                           ; 1 bytes @ 0x9
  6817                           
  6818  0029                     LCDstr@p:	
  6819                           ; 1 bytes @ 0x9
  6820                           
  6821                           
  6822                           ; 2 bytes @ 0x9
  6823  0029                     	ds	1
  6824  002A                     ??_LCDpos:
  6825                           
  6826                           ; 1 bytes @ 0xA
  6827  002A                     	ds	1
  6828  002B                     ??_LCDstr:
  6829  002B                     LCDpos@l:	
  6830                           ; 1 bytes @ 0xB
  6831                           
  6832                           
  6833                           ; 1 bytes @ 0xB
  6834  002B                     	ds	1
  6835  002C                     LCDpos@p:
  6836  002C                     fputs@c:	
  6837                           ; 1 bytes @ 0xC
  6838                           
  6839  002C                     atoi@neg:	
  6840                           ; 1 bytes @ 0xC
  6841                           
  6842                           
  6843                           ; 2 bytes @ 0xC
  6844  002C                     	ds	1
  6845  002D                     fputs@i:
  6846                           
  6847                           ; 2 bytes @ 0xD
  6848  002D                     	ds	1
  6849  002E                     LCDstr@c:
  6850  002E                     _atoi$2827:	
  6851                           ; 1 bytes @ 0xE
  6852                           
  6853                           
  6854                           ; 2 bytes @ 0xE
  6855  002E                     	ds	1
  6856  002F                     fputs@s:
  6857                           
  6858                           ; 1 bytes @ 0xF
  6859  002F                     	ds	1
  6860  0030                     ??___aodiv:
  6861  0030                     ??___aomod:	
  6862                           ; 1 bytes @ 0x10
  6863                           
  6864  0030                     ?_pad:	
  6865                           ; 1 bytes @ 0x10
  6866                           
  6867  0030                     pad@buf:	
  6868                           ; 2 bytes @ 0x10
  6869                           
  6870  0030                     _atoi$2829:	
  6871                           ; 1 bytes @ 0x10
  6872                           
  6873                           
  6874                           ; 2 bytes @ 0x10
  6875  0030                     	ds	1
  6876  0031                     ___aodiv@counter:
  6877  0031                     ___aomod@counter:	
  6878                           ; 1 bytes @ 0x11
  6879                           
  6880  0031                     pad@p:	
  6881                           ; 1 bytes @ 0x11
  6882                           
  6883                           
  6884                           ; 2 bytes @ 0x11
  6885  0031                     	ds	1
  6886  0032                     ___aodiv@sign:
  6887  0032                     ___aomod@sign:	
  6888                           ; 1 bytes @ 0x12
  6889                           
  6890  0032                     _atoi$2828:	
  6891                           ; 1 bytes @ 0x12
  6892                           
  6893                           
  6894                           ; 1 bytes @ 0x12
  6895  0032                     	ds	1
  6896  0033                     ??_pad:
  6897  0033                     ?_abs:	
  6898                           ; 1 bytes @ 0x13
  6899                           
  6900  0033                     abs@a:	
  6901                           ; 2 bytes @ 0x13
  6902                           
  6903  0033                     atoi@n:	
  6904                           ; 2 bytes @ 0x13
  6905                           
  6906  0033                     ___aodiv@quotient:	
  6907                           ; 2 bytes @ 0x13
  6908                           
  6909                           
  6910                           ; 8 bytes @ 0x13
  6911  0033                     	ds	1
  6912  0034                     pad@i:
  6913                           
  6914                           ; 2 bytes @ 0x14
  6915  0034                     	ds	1
  6916  0035                     ??_abs:
  6917                           
  6918                           ; 1 bytes @ 0x15
  6919  0035                     	ds	1
  6920  0036                     pad@w:
  6921                           
  6922                           ; 2 bytes @ 0x16
  6923  0036                     	ds	2
  6924  0038                     pad@fp:
  6925                           
  6926                           ; 1 bytes @ 0x18
  6927  0038                     	ds	3
  6928  003B                     ?_dtoa:
  6929  003B                     dtoa@d:	
  6930                           ; 2 bytes @ 0x1B
  6931                           
  6932                           
  6933                           ; 8 bytes @ 0x1B
  6934  003B                     	ds	8
  6935  0043                     ??_dtoa:
  6936                           
  6937                           ; 1 bytes @ 0x23
  6938  0043                     	ds	3
  6939  0046                     dtoa@fp:
  6940                           
  6941                           ; 1 bytes @ 0x26
  6942  0046                     	ds	1
  6943  0047                     _dtoa$2792:
  6944                           
  6945                           ; 2 bytes @ 0x27
  6946  0047                     	ds	2
  6947  0049                     dtoa@p:
  6948                           
  6949                           ; 2 bytes @ 0x29
  6950  0049                     	ds	2
  6951  004B                     dtoa@w:
  6952                           
  6953                           ; 2 bytes @ 0x2B
  6954  004B                     	ds	2
  6955  004D                     dtoa@s:
  6956                           
  6957                           ; 2 bytes @ 0x2D
  6958  004D                     	ds	2
  6959  004F                     dtoa@n:
  6960                           
  6961                           ; 8 bytes @ 0x2F
  6962  004F                     	ds	8
  6963  0057                     dtoa@i:
  6964                           
  6965                           ; 2 bytes @ 0x37
  6966  0057                     	ds	2
  6967  0059                     ?_vfpfcnvrt:
  6968  0059                     vfpfcnvrt@fmt:	
  6969                           ; 2 bytes @ 0x39
  6970                           
  6971                           
  6972                           ; 1 bytes @ 0x39
  6973  0059                     	ds	1
  6974  005A                     vfpfcnvrt@ap:
  6975                           
  6976                           ; 1 bytes @ 0x3A
  6977  005A                     	ds	1
  6978  005B                     ??_vfpfcnvrt:
  6979                           
  6980                           ; 1 bytes @ 0x3B
  6981  005B                     	ds	6
  6982  0061                     vfpfcnvrt@ll:
  6983                           
  6984                           ; 8 bytes @ 0x41
  6985  0061                     	ds	8
  6986  0069                     vfpfcnvrt@done:
  6987                           
  6988                           ; 2 bytes @ 0x49
  6989  0069                     	ds	2
  6990  006B                     _vfpfcnvrt$2807:
  6991                           
  6992                           ; 2 bytes @ 0x4B
  6993  006B                     	ds	2
  6994  006D                     vfpfcnvrt@fp:
  6995                           
  6996                           ; 1 bytes @ 0x4D
  6997  006D                     	ds	1
  6998  006E                     ??_vfprintf:
  6999                           
  7000                           ; 1 bytes @ 0x4E
  7001  006E                     	ds	2
  7002                           
  7003                           	psect	maintext
  7004  0DE0                     __pmaintext:	
  7005 ;;
  7006 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  7007 ;;
  7008 ;; *************** function _main *****************
  7009 ;; Defined at:
  7010 ;;		line 106 in file "main.c"
  7011 ;; Parameters:    Size  Location     Type
  7012 ;;		None
  7013 ;; Auto vars:     Size  Location     Type
  7014 ;;  buf            17   20[BANK1 ] unsigned char [17]
  7015 ;;  c               1   37[BANK1 ] unsigned char 
  7016 ;; Return value:  Size  Location     Type
  7017 ;;                  1    wreg      void 
  7018 ;; Registers used:
  7019 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7020 ;; Tracked objects:
  7021 ;;		On entry : B1F/0
  7022 ;;		On exit  : 0/0
  7023 ;;		Unchanged: 0/0
  7024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7026 ;;      Locals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  7027 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7028 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  7029 ;;Total ram usage:       20 bytes
  7030 ;; Hardware stack levels required when called: 13
  7031 ;; This function calls:
  7032 ;;		_LCDbusy
  7033 ;;		_LCDcmd
  7034 ;;		_LCDinit
  7035 ;;		_LCDpos
  7036 ;;		_LCDstr
  7037 ;;		_OpenI2C
  7038 ;;		_S1
  7039 ;;		_SYSTEM_Initialize
  7040 ;;		_TMR1_SetInterruptHandler
  7041 ;;		_readTC74
  7042 ;;		_sprintf
  7043 ;; This function is called by:
  7044 ;;		Startup code after reset
  7045 ;; This function uses a non-reentrant model
  7046 ;;
  7047                           
  7048                           
  7049                           ;psect for function _main
  7050  0DE0                     _main:
  7051  0DE0                     l5871:	
  7052                           ;incstack = 0
  7053                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7054                           
  7055                           
  7056                           ;main.c: 108:     unsigned char c;;main.c: 109:     char buf[17];;main.c: 111:     SYSTE
      +                          M_Initialize();
  7057  0DE0  3187  27EB  318D   	fcall	_SYSTEM_Initialize
  7058  0DE3                     l5873:
  7059                           
  7060                           ;main.c: 117:     (INTCONbits.GIE = 1);
  7061  0DE3  178B               	bsf	11,7	;volatile
  7062  0DE4                     l5875:
  7063                           
  7064                           ;main.c: 120:     (INTCONbits.PEIE = 1);
  7065  0DE4  170B               	bsf	11,6	;volatile
  7066                           
  7067                           ;main.c: 128:     TMR1_SetInterruptHandler(timerInterrupt);
  7068  0DE5  3044               	movlw	low _timerInterrupt
  7069  0DE6  0020               	movlb	0	; select bank0
  7070  0DE7  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  7071  0DE8  300B               	movlw	high _timerInterrupt
  7072  0DE9  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  7073  0DEA  3189  2185  318D   	fcall	_TMR1_SetInterruptHandler
  7074  0DED                     l5877:
  7075  0DED  0020               	movlb	0	; select bank0
  7076  0DEE  1716               	bsf	22,6	;volatile
  7077  0DEF                     l1268:
  7078                           
  7079                           ;main.c: 132:     OpenI2C();
  7080  0DEF  3189  21B0  318D   	fcall	_OpenI2C
  7081                           
  7082                           ;main.c: 137:     LCDinit();
  7083  0DF2  318D  255D  318D   	fcall	_LCDinit
  7084  0DF5                     l5879:
  7085                           
  7086                           ;main.c: 140:     {;main.c: 141:         S1();
  7087  0DF5  3189  2198  318D   	fcall	_S1
  7088  0DF8                     l5881:
  7089                           
  7090                           ;main.c: 143:         c = readTC74();
  7091  0DF8  3184  24BF  318D   	fcall	_readTC74
  7092  0DFB  0021               	movlb	1	; select bank1
  7093  0DFC  00B2               	movwf	??_main^(0+128)
  7094  0DFD  0832               	movf	??_main^(0+128),w
  7095  0DFE  00C5               	movwf	main@c^(0+128)
  7096  0DFF                     l5883:
  7097                           
  7098                           ;main.c: 144:         LCDcmd(0x80);
  7099  0DFF  3080               	movlw	128
  7100  0E00  3189  2163  318D   	fcall	_LCDcmd
  7101  0E03                     l5885:	
  7102                           ;main.c: 145:         while (LCDbusy());
  7103                           
  7104  0E03  3189  21EE  318D   	fcall	_LCDbusy
  7105  0E06  0020               	movlb	0	; select bank0
  7106  0E07  0827               	movf	?_LCDbusy,w
  7107  0E08  0428               	iorwf	?_LCDbusy+1,w
  7108  0E09  1D03               	btfss	3,2
  7109  0E0A  2E0C               	goto	u5711
  7110  0E0B  2E0D               	goto	u5710
  7111  0E0C                     u5711:
  7112  0E0C  2E03               	goto	l5885
  7113  0E0D                     u5710:
  7114  0E0D                     l5887:
  7115                           
  7116                           ;main.c: 146:         LCDstr("Temp");
  7117  0E0D  302F               	movlw	low (STR_1| (0+32768))
  7118  0E0E  00A9               	movwf	LCDstr@p
  7119  0E0F  3090               	movlw	high (STR_1| (0+32768))
  7120  0E10  00AA               	movwf	LCDstr@p+1
  7121  0E11  318A  2231  318D   	fcall	_LCDstr
  7122  0E14                     l5889:
  7123                           
  7124                           ;main.c: 147:         LCDpos(0,8);
  7125  0E14  3008               	movlw	8
  7126  0E15  0021               	movlb	1	; select bank1
  7127  0E16  00B2               	movwf	??_main^(0+128)
  7128  0E17  0832               	movf	??_main^(0+128),w
  7129  0E18  0020               	movlb	0	; select bank0
  7130  0E19  00A9               	movwf	LCDpos@c
  7131  0E1A  3000               	movlw	0
  7132  0E1B  318A  2267  318D   	fcall	_LCDpos
  7133  0E1E                     l5891:	
  7134                           ;main.c: 148:         while (LCDbusy());
  7135                           
  7136  0E1E  3189  21EE  318D   	fcall	_LCDbusy
  7137  0E21  0020               	movlb	0	; select bank0
  7138  0E22  0827               	movf	?_LCDbusy,w
  7139  0E23  0428               	iorwf	?_LCDbusy+1,w
  7140  0E24  1D03               	btfss	3,2
  7141  0E25  2E27               	goto	u5721
  7142  0E26  2E28               	goto	u5720
  7143  0E27                     u5721:
  7144  0E27  2E1E               	goto	l5891
  7145  0E28                     u5720:
  7146  0E28                     l5893:
  7147                           
  7148                           ;main.c: 149:         LCDstr("STR-RTS");
  7149  0E28  3020               	movlw	low (STR_2| (0+32768))
  7150  0E29  00A9               	movwf	LCDstr@p
  7151  0E2A  3090               	movlw	high (STR_2| (0+32768))
  7152  0E2B  00AA               	movwf	LCDstr@p+1
  7153  0E2C  318A  2231  318D   	fcall	_LCDstr
  7154  0E2F                     l5895:
  7155                           
  7156                           ;main.c: 150:         LCDcmd(0xc0);
  7157  0E2F  30C0               	movlw	192
  7158  0E30  3189  2163  318D   	fcall	_LCDcmd
  7159  0E33                     l5897:
  7160                           
  7161                           ;main.c: 151:         sprintf(buf, "%02d C", c);
  7162  0E33  3028               	movlw	low (STR_3| (0+32768))
  7163  0E34  0021               	movlb	1	; select bank1
  7164  0E35  00A6               	movwf	sprintf@fmt^(0+128)
  7165  0E36  3090               	movlw	high (STR_3| (0+32768))
  7166  0E37  00A7               	movwf	(sprintf@fmt^(0+128)+1)
  7167  0E38  0845               	movf	main@c^(0+128),w
  7168  0E39  00B2               	movwf	??_main^(0+128)
  7169  0E3A  01B3               	clrf	(??_main^(0+128)+1)
  7170  0E3B  0832               	movf	??_main^(0+128),w
  7171  0E3C  00A8               	movwf	(?_sprintf^(0+128)+2)
  7172  0E3D  0833               	movf	(??_main+1)^(0+128),w
  7173  0E3E  00A9               	movwf	((?_sprintf+1)^(0+128)+2)
  7174  0E3F  30B4               	movlw	(low (main@buf| 0))& (0+255)
  7175  0E40  318B  2321  318D   	fcall	_sprintf
  7176  0E43                     l5899:	
  7177                           ;main.c: 152:         while (LCDbusy());
  7178                           
  7179  0E43  3189  21EE  318D   	fcall	_LCDbusy
  7180  0E46  0020               	movlb	0	; select bank0
  7181  0E47  0827               	movf	?_LCDbusy,w
  7182  0E48  0428               	iorwf	?_LCDbusy+1,w
  7183  0E49  1D03               	btfss	3,2
  7184  0E4A  2E4C               	goto	u5731
  7185  0E4B  2E4D               	goto	u5730
  7186  0E4C                     u5731:
  7187  0E4C  2E43               	goto	l5899
  7188  0E4D                     u5730:
  7189  0E4D                     l5901:
  7190                           
  7191                           ;main.c: 153:         LCDstr(buf);
  7192  0E4D  30B4               	movlw	low main@buf
  7193  0E4E  00A9               	movwf	LCDstr@p
  7194  0E4F  3000               	movlw	high main@buf
  7195  0E50  00AA               	movwf	LCDstr@p+1
  7196  0E51  318A  2231  318D   	fcall	_LCDstr
  7197  0E54                     l5903:
  7198                           
  7199                           ;main.c: 154:         _delay((unsigned long)((2000)*(1000000/4000.0)));
  7200  0E54  3003               	movlw	3
  7201  0E55  0021               	movlb	1	; select bank1
  7202  0E56  00B3               	movwf	(??_main^(0+128)+1)
  7203  0E57  308A               	movlw	138
  7204  0E58  00B2               	movwf	??_main^(0+128)
  7205  0E59  3055               	movlw	85
  7206  0E5A                     u5747:
  7207  0E5A  0B89               	decfsz	9,f
  7208  0E5B  2E5A               	goto	u5747
  7209  0E5C  0BB2               	decfsz	??_main^(0+128),f
  7210  0E5D  2E5A               	goto	u5747
  7211  0E5E  0BB3               	decfsz	(??_main^(0+128)+1),f
  7212  0E5F  2E5A               	goto	u5747
  7213  0E60  3200               	nop2
  7214  0E61  2DF5               	goto	l5879
  7215  0E62  3180  2818         	ljmp	start
  7216  0E64                     __end_of_main:
  7217                           
  7218                           	psect	text1
  7219  0B21                     __ptext1:	
  7220 ;; *************** function _sprintf *****************
  7221 ;; Defined at:
  7222 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  7223 ;; Parameters:    Size  Location     Type
  7224 ;;  s               1    wreg     PTR unsigned char 
  7225 ;;		 -> main@buf(17), 
  7226 ;;  fmt             2    6[BANK1 ] PTR const unsigned char 
  7227 ;;		 -> STR_3(7), 
  7228 ;; Auto vars:     Size  Location     Type
  7229 ;;  s               1   11[BANK1 ] PTR unsigned char 
  7230 ;;		 -> main@buf(17), 
  7231 ;;  f               5   13[BANK1 ] struct _IO_FILE
  7232 ;;  ret             2    0        int 
  7233 ;;  ap              1   12[BANK1 ] PTR void [1]
  7234 ;;		 -> ?_sprintf(2), 
  7235 ;; Return value:  Size  Location     Type
  7236 ;;                  2    6[BANK1 ] int 
  7237 ;; Registers used:
  7238 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7239 ;; Tracked objects:
  7240 ;;		On entry : 0/0
  7241 ;;		On exit  : 0/0
  7242 ;;		Unchanged: 0/0
  7243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7244 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7245 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  7246 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7247 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  7248 ;;Total ram usage:       12 bytes
  7249 ;; Hardware stack levels used: 1
  7250 ;; Hardware stack levels required when called: 12
  7251 ;; This function calls:
  7252 ;;		_vfprintf
  7253 ;; This function is called by:
  7254 ;;		_main
  7255 ;; This function uses a non-reentrant model
  7256 ;;
  7257                           
  7258                           
  7259                           ;psect for function _sprintf
  7260  0B21                     _sprintf:
  7261                           
  7262                           ;incstack = 0
  7263                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7264                           ;sprintf@s stored from wreg
  7265  0B21  0021               	movlb	1	; select bank1
  7266  0B22  00AB               	movwf	sprintf@s^(0+128)
  7267  0B23                     l5859:
  7268  0B23  30A8               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  7269  0B24  00AA               	movwf	??_sprintf^(0+128)
  7270  0B25  082A               	movf	??_sprintf^(0+128),w
  7271  0B26  00AC               	movwf	sprintf@ap^(0+128)
  7272  0B27  082B               	movf	sprintf@s^(0+128),w
  7273  0B28  00AA               	movwf	??_sprintf^(0+128)
  7274  0B29  082A               	movf	??_sprintf^(0+128),w
  7275  0B2A  00AD               	movwf	sprintf@f^(0+128)
  7276  0B2B                     l5861:
  7277  0B2B  01AE               	clrf	(sprintf@f^(0+128)+1)
  7278  0B2C  01AF               	clrf	((sprintf@f+1)^(0+128)+1)
  7279  0B2D                     l5863:
  7280  0B2D  01B0               	clrf	(sprintf@f^(0+128)+3)
  7281  0B2E  01B1               	clrf	((sprintf@f+1)^(0+128)+3)
  7282  0B2F                     l5865:
  7283  0B2F  0827               	movf	(sprintf@fmt+1)^(0+128),w
  7284  0B30  00A1               	movwf	(vfprintf@fmt+1)^(0+128)
  7285  0B31  0826               	movf	sprintf@fmt^(0+128),w
  7286  0B32  00A0               	movwf	vfprintf@fmt^(0+128)
  7287  0B33  30AC               	movlw	(low (sprintf@ap| 0))& (0+255)
  7288  0B34  00AA               	movwf	??_sprintf^(0+128)
  7289  0B35  082A               	movf	??_sprintf^(0+128),w
  7290  0B36  00A2               	movwf	vfprintf@ap^(0+128)
  7291  0B37  30AD               	movlw	(low (sprintf@f| 0))& (0+255)
  7292  0B38  318B  2395  318B   	fcall	_vfprintf
  7293  0B3B                     l5867:
  7294  0B3B  0021               	movlb	1	; select bank1
  7295  0B3C  082E               	movf	(sprintf@f^(0+128)+1),w
  7296  0B3D  072B               	addwf	sprintf@s^(0+128),w
  7297  0B3E  00AA               	movwf	??_sprintf^(0+128)
  7298  0B3F  082A               	movf	??_sprintf^(0+128),w
  7299  0B40  0086               	movwf	6
  7300  0B41  0187               	clrf	7
  7301  0B42  0181               	clrf	1
  7302  0B43                     l1896:
  7303  0B43  0008               	return
  7304  0B44                     __end_of_sprintf:
  7305                           
  7306                           	psect	text2
  7307  0B95                     __ptext2:	
  7308 ;; *************** function _vfprintf *****************
  7309 ;; Defined at:
  7310 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7311 ;; Parameters:    Size  Location     Type
  7312 ;;  fp              1    wreg     PTR struct _IO_FILE
  7313 ;;		 -> sprintf@f(5), 
  7314 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
  7315 ;;		 -> STR_3(7), 
  7316 ;;  ap              1    2[BANK1 ] PTR PTR void 
  7317 ;;		 -> sprintf@ap(1), 
  7318 ;; Auto vars:     Size  Location     Type
  7319 ;;  fp              1    3[BANK1 ] PTR struct _IO_FILE
  7320 ;;		 -> sprintf@f(5), 
  7321 ;;  cfmt            2    4[BANK1 ] PTR unsigned char 
  7322 ;;		 -> STR_3(7), 
  7323 ;; Return value:  Size  Location     Type
  7324 ;;                  2    0[BANK1 ] int 
  7325 ;; Registers used:
  7326 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7327 ;; Tracked objects:
  7328 ;;		On entry : 0/0
  7329 ;;		On exit  : 0/0
  7330 ;;		Unchanged: 0/0
  7331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7332 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7333 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7334 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7335 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7336 ;;Total ram usage:        8 bytes
  7337 ;; Hardware stack levels used: 1
  7338 ;; Hardware stack levels required when called: 11
  7339 ;; This function calls:
  7340 ;;		_vfpfcnvrt
  7341 ;; This function is called by:
  7342 ;;		_sprintf
  7343 ;; This function uses a non-reentrant model
  7344 ;;
  7345                           
  7346                           
  7347                           ;psect for function _vfprintf
  7348  0B95                     _vfprintf:
  7349                           
  7350                           ;incstack = 0
  7351                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7352                           ;vfprintf@fp stored from wreg
  7353  0B95  0021               	movlb	1	; select bank1
  7354  0B96  00A3               	movwf	vfprintf@fp^(0+128)
  7355  0B97                     l5723:
  7356                           
  7357                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  7358  0B97  0821               	movf	(vfprintf@fmt+1)^(0+128),w
  7359  0B98  00A5               	movwf	(vfprintf@cfmt+1)^(0+128)
  7360  0B99  0820               	movf	vfprintf@fmt^(0+128),w
  7361  0B9A  00A4               	movwf	vfprintf@cfmt^(0+128)
  7362  0B9B                     l5725:
  7363                           
  7364                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  7365  0B9B  01E3               	clrf	_nout^(0+128)
  7366  0B9C  01E4               	clrf	(_nout+1)^(0+128)
  7367                           
  7368                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  7369  0B9D  2BB6               	goto	l5729
  7370  0B9E                     l5727:
  7371                           
  7372                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  7373  0B9E  30A4               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  7374  0B9F  0020               	movlb	0	; select bank0
  7375  0BA0  00EE               	movwf	??_vfprintf
  7376  0BA1  086E               	movf	??_vfprintf,w
  7377  0BA2  00D9               	movwf	vfpfcnvrt@fmt
  7378  0BA3  0021               	movlb	1	; select bank1
  7379  0BA4  0822               	movf	vfprintf@ap^(0+128),w
  7380  0BA5  0020               	movlb	0	; select bank0
  7381  0BA6  00EF               	movwf	??_vfprintf+1
  7382  0BA7  086F               	movf	??_vfprintf+1,w
  7383  0BA8  00DA               	movwf	vfpfcnvrt@ap
  7384  0BA9  0021               	movlb	1	; select bank1
  7385  0BAA  0823               	movf	vfprintf@fp^(0+128),w
  7386  0BAB  3180  2032  318B   	fcall	_vfpfcnvrt
  7387  0BAE  0020               	movlb	0	; select bank0
  7388  0BAF  0859               	movf	?_vfpfcnvrt,w
  7389  0BB0  0021               	movlb	1	; select bank1
  7390  0BB1  07E3               	addwf	_nout^(0+128),f
  7391  0BB2  0020               	movlb	0	; select bank0
  7392  0BB3  085A               	movf	?_vfpfcnvrt+1,w
  7393  0BB4  0021               	movlb	1	; select bank1
  7394  0BB5  3DE4               	addwfc	(_nout+1)^(0+128),f
  7395  0BB6                     l5729:
  7396                           
  7397                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  7398  0BB6  0824               	movf	vfprintf@cfmt^(0+128),w
  7399  0BB7  0084               	movwf	4
  7400  0BB8  0825               	movf	(vfprintf@cfmt+1)^(0+128),w
  7401  0BB9  0085               	movwf	5
  7402  0BBA  0012               	moviw fsr0++
  7403  0BBB  1D03               	btfss	3,2
  7404  0BBC  2BBE               	goto	u5421
  7405  0BBD  2BBF               	goto	u5420
  7406  0BBE                     u5421:
  7407  0BBE  2B9E               	goto	l5727
  7408  0BBF                     u5420:
  7409  0BBF                     l5731:
  7410                           
  7411                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  7412  0BBF  0864               	movf	(_nout+1)^(0+128),w
  7413  0BC0  00A1               	movwf	(?_vfprintf+1)^(0+128)
  7414  0BC1  0863               	movf	_nout^(0+128),w
  7415  0BC2  00A0               	movwf	?_vfprintf^(0+128)
  7416  0BC3                     l1994:
  7417  0BC3  0008               	return
  7418  0BC4                     __end_of_vfprintf:
  7419                           
  7420                           	psect	text3
  7421  0032                     __ptext3:	
  7422 ;; *************** function _vfpfcnvrt *****************
  7423 ;; Defined at:
  7424 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7425 ;; Parameters:    Size  Location     Type
  7426 ;;  fp              1    wreg     PTR struct _IO_FILE
  7427 ;;		 -> sprintf@f(5), 
  7428 ;;  fmt             1   57[BANK0 ] PTR PTR unsigned char 
  7429 ;;		 -> vfprintf@cfmt(2), 
  7430 ;;  ap              1   58[BANK0 ] PTR PTR void 
  7431 ;;		 -> sprintf@ap(1), 
  7432 ;; Auto vars:     Size  Location     Type
  7433 ;;  fp              1   77[BANK0 ] PTR struct _IO_FILE
  7434 ;;		 -> sprintf@f(5), 
  7435 ;;  ll              8   65[BANK0 ] long long 
  7436 ;;  llu             8    0        unsigned long long 
  7437 ;;  f               4    0        unsigned long long 
  7438 ;;  ct              3    0        unsigned char [3]
  7439 ;;  done            2   73[BANK0 ] int 
  7440 ;;  vp              2    0        PTR void 
  7441 ;;  i               2    0        int 
  7442 ;;  cp              2    0        PTR unsigned char 
  7443 ;;  c               1    0        unsigned char 
  7444 ;; Return value:  Size  Location     Type
  7445 ;;                  2   57[BANK0 ] int 
  7446 ;; Registers used:
  7447 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7448 ;; Tracked objects:
  7449 ;;		On entry : 0/0
  7450 ;;		On exit  : 0/0
  7451 ;;		Unchanged: 0/0
  7452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7453 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7454 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7455 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7456 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7457 ;;Total ram usage:       21 bytes
  7458 ;; Hardware stack levels used: 1
  7459 ;; Hardware stack levels required when called: 10
  7460 ;; This function calls:
  7461 ;;		_atoi
  7462 ;;		_dtoa
  7463 ;;		_fputc
  7464 ;;		_isdigit
  7465 ;; This function is called by:
  7466 ;;		_vfprintf
  7467 ;; This function uses a non-reentrant model
  7468 ;;
  7469                           
  7470                           
  7471                           ;psect for function _vfpfcnvrt
  7472  0032                     _vfpfcnvrt:
  7473                           
  7474                           ;incstack = 0
  7475                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7476                           ;vfpfcnvrt@fp stored from wreg
  7477  0032  0020               	movlb	0	; select bank0
  7478  0033  00ED               	movwf	vfpfcnvrt@fp
  7479  0034                     l5529:
  7480                           
  7481                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  7482  0034  0859               	movf	vfpfcnvrt@fmt,w
  7483  0035  0086               	movwf	6
  7484  0036  0187               	clrf	7
  7485  0037  3F40               	moviw [0]fsr1
  7486  0038  00DB               	movwf	??_vfpfcnvrt
  7487  0039  3F41               	moviw [1]fsr1
  7488  003A  00DC               	movwf	??_vfpfcnvrt+1
  7489  003B  085B               	movf	??_vfpfcnvrt,w
  7490  003C  0084               	movwf	4
  7491  003D  085C               	movf	??_vfpfcnvrt+1,w
  7492  003E  0085               	movwf	5
  7493  003F  0012               	moviw fsr0++
  7494  0040  3A25               	xorlw	37
  7495  0041  1D03               	btfss	3,2
  7496  0042  2844               	goto	u4981
  7497  0043  2845               	goto	u4980
  7498  0044                     u4981:
  7499  0044  29AC               	goto	l5609
  7500  0045                     u4980:
  7501  0045                     l5531:
  7502                           
  7503                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  7504  0045  0859               	movf	vfpfcnvrt@fmt,w
  7505  0046  0086               	movwf	6
  7506  0047  0187               	clrf	7
  7507  0048  3001               	movlw	1
  7508  0049  0781               	addwf	1,f
  7509  004A  3141               	addfsr 1,1
  7510  004B  1803               	skipnc
  7511  004C  0A81               	incf	1,f
  7512  004D                     l5533:
  7513                           
  7514                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  7515  004D  0021               	movlb	1	; select bank1
  7516  004E  01E5               	clrf	_width^(0+128)
  7517  004F  01E6               	clrf	(_width+1)^(0+128)
  7518  0050  01F7               	clrf	_flags
  7519  0051  01F8               	clrf	_flags+1
  7520  0052                     l5535:
  7521                           
  7522                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  7523  0052  30FF               	movlw	255
  7524  0053  00F5               	movwf	_prec
  7525  0054  30FF               	movlw	255
  7526  0055  00F6               	movwf	_prec+1
  7527  0056                     l5537:
  7528                           
  7529                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  7530  0056  0020               	movlb	0	; select bank0
  7531  0057  01E9               	clrf	vfpfcnvrt@done
  7532  0058  01EA               	clrf	vfpfcnvrt@done+1
  7533                           
  7534                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  7535  0059  2895               	goto	l5555
  7536  005A                     l1965:	
  7537                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 713:             
      +                              case '-' :
  7538                           
  7539                           
  7540                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  7541  005A  1477               	bsf	_flags,0
  7542  005B                     l5539:
  7543                           
  7544                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  7545  005B  0859               	movf	vfpfcnvrt@fmt,w
  7546  005C  0086               	movwf	6
  7547  005D  0187               	clrf	7
  7548  005E  3001               	movlw	1
  7549  005F  0781               	addwf	1,f
  7550  0060  3141               	addfsr 1,1
  7551  0061  1803               	skipnc
  7552  0062  0A81               	incf	1,f
  7553                           
  7554                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  7555  0063  2895               	goto	l5555
  7556  0064                     l1967:	
  7557                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 717:             
      +                              case '0' :
  7558                           
  7559                           
  7560                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  7561  0064  14F7               	bsf	_flags,1
  7562  0065  285B               	goto	l5539
  7563  0066                     l1968:	
  7564                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 721:             
      +                              case '+' :
  7565                           
  7566                           
  7567                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  7568  0066  1577               	bsf	_flags,2
  7569  0067  285B               	goto	l5539
  7570  0068                     l1969:	
  7571                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 725:             
      +                              case ' ' :
  7572                           
  7573                           
  7574                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  7575  0068  15F7               	bsf	_flags,3
  7576  0069  285B               	goto	l5539
  7577  006A                     l1970:	
  7578                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 729:             
      +                              case '#' :
  7579                           
  7580                           
  7581                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  7582  006A  1677               	bsf	_flags,4
  7583  006B  285B               	goto	l5539
  7584  006C                     l5549:
  7585                           
  7586                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  7587  006C  3001               	movlw	1
  7588  006D  00E9               	movwf	vfpfcnvrt@done
  7589  006E  3000               	movlw	0
  7590  006F  00EA               	movwf	vfpfcnvrt@done+1
  7591                           
  7592                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  7593  0070  2895               	goto	l5555
  7594  0071                     l5553:
  7595  0071  0859               	movf	vfpfcnvrt@fmt,w
  7596  0072  0086               	movwf	6
  7597  0073  0187               	clrf	7
  7598  0074  3F40               	moviw [0]fsr1
  7599  0075  00DB               	movwf	??_vfpfcnvrt
  7600  0076  3F41               	moviw [1]fsr1
  7601  0077  00DC               	movwf	??_vfpfcnvrt+1
  7602  0078  085B               	movf	??_vfpfcnvrt,w
  7603  0079  0084               	movwf	4
  7604  007A  085C               	movf	??_vfpfcnvrt+1,w
  7605  007B  0085               	movwf	5
  7606  007C  0800               	movf	0,w	;code access
  7607  007D  00DD               	movwf	??_vfpfcnvrt+2
  7608  007E  01DE               	clrf	??_vfpfcnvrt+3
  7609                           
  7610                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7611                           ; Switch size 1, requested type "simple"
  7612                           ; Number of cases is 1, Range of values is 0 to 0
  7613                           ; switch strategies available:
  7614                           ; Name         Instructions Cycles
  7615                           ; simple_byte            4     3 (average)
  7616                           ; direct_byte            8     6 (fixed)
  7617                           ; jumptable            260     6 (fixed)
  7618                           ;	Chosen strategy is simple_byte
  7619  007F  085E               	movf	??_vfpfcnvrt+3,w
  7620  0080  3A00               	xorlw	0	; case 0
  7621  0081  1903               	skipnz
  7622  0082  2884               	goto	l5945
  7623  0083  286C               	goto	l5549
  7624  0084                     l5945:
  7625                           
  7626                           ; Switch size 1, requested type "simple"
  7627                           ; Number of cases is 5, Range of values is 32 to 48
  7628                           ; switch strategies available:
  7629                           ; Name         Instructions Cycles
  7630                           ; simple_byte           16     9 (average)
  7631                           ; direct_byte           43     9 (fixed)
  7632                           ; jumptable            263     9 (fixed)
  7633                           ;	Chosen strategy is simple_byte
  7634  0084  085D               	movf	??_vfpfcnvrt+2,w
  7635  0085  3A20               	xorlw	32	; case 32
  7636  0086  1903               	skipnz
  7637  0087  2868               	goto	l1969
  7638  0088  3A03               	xorlw	3	; case 35
  7639  0089  1903               	skipnz
  7640  008A  286A               	goto	l1970
  7641  008B  3A08               	xorlw	8	; case 43
  7642  008C  1903               	skipnz
  7643  008D  2866               	goto	l1968
  7644  008E  3A06               	xorlw	6	; case 45
  7645  008F  1903               	skipnz
  7646  0090  285A               	goto	l1965
  7647  0091  3A1D               	xorlw	29	; case 48
  7648  0092  1903               	skipnz
  7649  0093  2864               	goto	l1967
  7650  0094  286C               	goto	l5549
  7651  0095                     l5555:
  7652                           
  7653                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  7654  0095  0869               	movf	vfpfcnvrt@done,w
  7655  0096  046A               	iorwf	vfpfcnvrt@done+1,w
  7656  0097  1903               	btfsc	3,2
  7657  0098  289A               	goto	u4991
  7658  0099  289B               	goto	u4990
  7659  009A                     u4991:
  7660  009A  2871               	goto	l5553
  7661  009B                     u4990:
  7662  009B                     l1972:
  7663                           
  7664                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  7665  009B  1C77               	btfss	_flags,0
  7666  009C  289E               	goto	u5001
  7667  009D  289F               	goto	u5000
  7668  009E                     u5001:
  7669  009E  28A3               	goto	l5559
  7670  009F                     u5000:
  7671  009F                     l5557:
  7672                           
  7673                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  7674  009F  30FD               	movlw	253
  7675  00A0  05F7               	andwf	_flags,f
  7676  00A1  30FF               	movlw	255
  7677  00A2  05F8               	andwf	_flags+1,f
  7678  00A3                     l5559:
  7679                           
  7680                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  7681  00A3  0859               	movf	vfpfcnvrt@fmt,w
  7682  00A4  0086               	movwf	6
  7683  00A5  0187               	clrf	7
  7684  00A6  3F40               	moviw [0]fsr1
  7685  00A7  00DB               	movwf	??_vfpfcnvrt
  7686  00A8  3F41               	moviw [1]fsr1
  7687  00A9  00DC               	movwf	??_vfpfcnvrt+1
  7688  00AA  085B               	movf	??_vfpfcnvrt,w
  7689  00AB  0084               	movwf	4
  7690  00AC  085C               	movf	??_vfpfcnvrt+1,w
  7691  00AD  0085               	movwf	5
  7692  00AE  0012               	moviw fsr0++
  7693  00AF  3A2A               	xorlw	42
  7694  00B0  1D03               	btfss	3,2
  7695  00B1  28B3               	goto	u5011
  7696  00B2  28B4               	goto	u5010
  7697  00B3                     u5011:
  7698  00B3  28D4               	goto	l5571
  7699  00B4                     u5010:
  7700  00B4                     l5561:
  7701                           
  7702                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  7703  00B4  0859               	movf	vfpfcnvrt@fmt,w
  7704  00B5  0086               	movwf	6
  7705  00B6  0187               	clrf	7
  7706  00B7  3001               	movlw	1
  7707  00B8  0781               	addwf	1,f
  7708  00B9  3141               	addfsr 1,1
  7709  00BA  1803               	skipnc
  7710  00BB  0A81               	incf	1,f
  7711  00BC                     l5563:
  7712                           
  7713                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  7714  00BC  085A               	movf	vfpfcnvrt@ap,w
  7715  00BD  0086               	movwf	6
  7716  00BE  0187               	clrf	7
  7717  00BF  0801               	movf	1,w
  7718  00C0  0084               	movwf	4
  7719  00C1  0185               	clrf	5
  7720  00C2  3002               	movlw	2
  7721  00C3  0781               	addwf	1,f
  7722  00C4  3F00               	moviw [0]fsr0
  7723  00C5  0021               	movlb	1	; select bank1
  7724  00C6  00E5               	movwf	_width^(0+128)
  7725  00C7  3F01               	moviw [1]fsr0
  7726  00C8  00E6               	movwf	(_width+1)^(0+128)
  7727  00C9                     l5565:
  7728                           
  7729                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  7730  00C9  1FE6               	btfss	(_width+1)^(0+128),7
  7731  00CA  28CC               	goto	u5021
  7732  00CB  28CD               	goto	u5020
  7733  00CC                     u5021:
  7734  00CC  2919               	goto	l5581
  7735  00CD                     u5020:
  7736  00CD                     l5567:
  7737                           
  7738                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  7739  00CD  1477               	bsf	_flags,0
  7740  00CE                     l5569:
  7741                           
  7742                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  7743  00CE  09E5               	comf	_width^(0+128),f
  7744  00CF  09E6               	comf	(_width+1)^(0+128),f
  7745  00D0  0AE5               	incf	_width^(0+128),f
  7746  00D1  1903               	skipnz
  7747  00D2  0AE6               	incf	(_width+1)^(0+128),f
  7748  00D3  2919               	goto	l5581
  7749  00D4                     l5571:
  7750                           
  7751                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  7752  00D4  0859               	movf	vfpfcnvrt@fmt,w
  7753  00D5  0086               	movwf	6
  7754  00D6  0187               	clrf	7
  7755  00D7  3F40               	moviw [0]fsr1
  7756  00D8  00A6               	movwf	atoi@s
  7757  00D9  3F41               	moviw [1]fsr1
  7758  00DA  00A7               	movwf	atoi@s+1
  7759  00DB  318E  2664  3180   	fcall	_atoi
  7760  00DE  0020               	movlb	0	; select bank0
  7761  00DF  0827               	movf	?_atoi+1,w
  7762  00E0  0021               	movlb	1	; select bank1
  7763  00E1  00E6               	movwf	(_width+1)^(0+128)
  7764  00E2  0020               	movlb	0	; select bank0
  7765  00E3  0826               	movf	?_atoi,w
  7766  00E4  0021               	movlb	1	; select bank1
  7767  00E5  00E5               	movwf	_width^(0+128)
  7768                           
  7769                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7770  00E6  28EF               	goto	l5575
  7771  00E7                     l5573:
  7772                           
  7773                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  7774  00E7  0859               	movf	vfpfcnvrt@fmt,w
  7775  00E8  0086               	movwf	6
  7776  00E9  0187               	clrf	7
  7777  00EA  3001               	movlw	1
  7778  00EB  0781               	addwf	1,f
  7779  00EC  3141               	addfsr 1,1
  7780  00ED  1803               	skipnc
  7781  00EE  0A81               	incf	1,f
  7782  00EF                     l5575:
  7783  00EF  0020               	movlb	0	; select bank0
  7784  00F0  0859               	movf	vfpfcnvrt@fmt,w
  7785  00F1  0086               	movwf	6
  7786  00F2  0187               	clrf	7
  7787  00F3  3F40               	moviw [0]fsr1
  7788  00F4  00DB               	movwf	??_vfpfcnvrt
  7789  00F5  3F41               	moviw [1]fsr1
  7790  00F6  00DC               	movwf	??_vfpfcnvrt+1
  7791  00F7  085B               	movf	??_vfpfcnvrt,w
  7792  00F8  0084               	movwf	4
  7793  00F9  085C               	movf	??_vfpfcnvrt+1,w
  7794  00FA  0085               	movwf	5
  7795  00FB  0800               	movf	0,w	;code access
  7796  00FC  3ED0               	addlw	208
  7797  00FD  00DD               	movwf	??_vfpfcnvrt+2
  7798  00FE  30FF               	movlw	255
  7799  00FF  1803               	skipnc
  7800  0100  3000               	movlw	0
  7801  0101  00DE               	movwf	??_vfpfcnvrt+3
  7802  0102  3000               	movlw	0
  7803  0103  025E               	subwf	??_vfpfcnvrt+3,w
  7804  0104  300A               	movlw	10
  7805  0105  1903               	skipnz
  7806  0106  025D               	subwf	??_vfpfcnvrt+2,w
  7807  0107  1C03               	skipc
  7808  0108  290A               	goto	u5031
  7809  0109  290C               	goto	u5030
  7810  010A                     u5031:
  7811  010A  3001               	movlw	1
  7812  010B  290D               	goto	u5040
  7813  010C                     u5030:
  7814  010C  3000               	movlw	0
  7815  010D                     u5040:
  7816  010D  00DF               	movwf	??_vfpfcnvrt+4
  7817  010E  01E0               	clrf	??_vfpfcnvrt+5
  7818  010F  085F               	movf	??_vfpfcnvrt+4,w
  7819  0110  00EB               	movwf	_vfpfcnvrt$2807
  7820  0111  0860               	movf	??_vfpfcnvrt+5,w
  7821  0112  00EC               	movwf	_vfpfcnvrt$2807+1
  7822  0113                     l5579:
  7823  0113  086B               	movf	_vfpfcnvrt$2807,w
  7824  0114  046C               	iorwf	_vfpfcnvrt$2807+1,w
  7825  0115  1D03               	btfss	3,2
  7826  0116  2918               	goto	u5051
  7827  0117  2919               	goto	u5050
  7828  0118                     u5051:
  7829  0118  28E7               	goto	l5573
  7830  0119                     u5050:
  7831  0119                     l5581:
  7832                           
  7833                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  7834  0119  0020               	movlb	0	; select bank0
  7835  011A  0859               	movf	vfpfcnvrt@fmt,w
  7836  011B  0086               	movwf	6
  7837  011C  0187               	clrf	7
  7838  011D  3F40               	moviw [0]fsr1
  7839  011E  00DB               	movwf	??_vfpfcnvrt
  7840  011F  3F41               	moviw [1]fsr1
  7841  0120  00DC               	movwf	??_vfpfcnvrt+1
  7842  0121  085B               	movf	??_vfpfcnvrt,w
  7843  0122  0084               	movwf	4
  7844  0123  085C               	movf	??_vfpfcnvrt+1,w
  7845  0124  0085               	movwf	5
  7846  0125  0012               	moviw fsr0++
  7847  0126  3A64               	xorlw	100
  7848  0127  1903               	btfsc	3,2
  7849  0128  292A               	goto	u5061
  7850  0129  292B               	goto	u5060
  7851  012A                     u5061:
  7852  012A  293C               	goto	l5585
  7853  012B                     u5060:
  7854  012B                     l5583:
  7855  012B  0859               	movf	vfpfcnvrt@fmt,w
  7856  012C  0086               	movwf	6
  7857  012D  0187               	clrf	7
  7858  012E  3F40               	moviw [0]fsr1
  7859  012F  00DB               	movwf	??_vfpfcnvrt
  7860  0130  3F41               	moviw [1]fsr1
  7861  0131  00DC               	movwf	??_vfpfcnvrt+1
  7862  0132  085B               	movf	??_vfpfcnvrt,w
  7863  0133  0084               	movwf	4
  7864  0134  085C               	movf	??_vfpfcnvrt+1,w
  7865  0135  0085               	movwf	5
  7866  0136  0012               	moviw fsr0++
  7867  0137  3A69               	xorlw	105
  7868  0138  1D03               	btfss	3,2
  7869  0139  293B               	goto	u5071
  7870  013A  293C               	goto	u5070
  7871  013B                     u5071:
  7872  013B  2977               	goto	l5593
  7873  013C                     u5070:
  7874  013C                     l5585:
  7875                           
  7876                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  7877  013C  0859               	movf	vfpfcnvrt@fmt,w
  7878  013D  0086               	movwf	6
  7879  013E  0187               	clrf	7
  7880  013F  3001               	movlw	1
  7881  0140  0781               	addwf	1,f
  7882  0141  3141               	addfsr 1,1
  7883  0142  1803               	skipnc
  7884  0143  0A81               	incf	1,f
  7885  0144                     l5587:
  7886                           
  7887                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  7888  0144  085A               	movf	vfpfcnvrt@ap,w
  7889  0145  0086               	movwf	6
  7890  0146  0187               	clrf	7
  7891  0147  0801               	movf	1,w
  7892  0148  0084               	movwf	4
  7893  0149  0185               	clrf	5
  7894  014A  3002               	movlw	2
  7895  014B  0781               	addwf	1,f
  7896  014C  3F00               	moviw [0]fsr0
  7897  014D  00DB               	movwf	??_vfpfcnvrt
  7898  014E  3F01               	moviw [1]fsr0
  7899  014F  00DC               	movwf	??_vfpfcnvrt+1
  7900  0150  085B               	movf	??_vfpfcnvrt,w
  7901  0151  00E1               	movwf	vfpfcnvrt@ll
  7902  0152  085C               	movf	??_vfpfcnvrt+1,w
  7903  0153  00E2               	movwf	vfpfcnvrt@ll+1
  7904  0154  0D89               	rlf	9,f
  7905  0155  3B89               	subwfb	9,f
  7906  0156  0989               	comf	9,f
  7907  0157  00E3               	movwf	vfpfcnvrt@ll+2
  7908  0158  00E4               	movwf	vfpfcnvrt@ll+3
  7909  0159  00E5               	movwf	vfpfcnvrt@ll+4
  7910  015A  00E6               	movwf	vfpfcnvrt@ll+5
  7911  015B  00E7               	movwf	vfpfcnvrt@ll+6
  7912  015C  00E8               	movwf	vfpfcnvrt@ll+7
  7913  015D                     l5589:
  7914                           
  7915                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  7916  015D  0861               	movf	vfpfcnvrt@ll,w
  7917  015E  00BB               	movwf	dtoa@d
  7918  015F  0862               	movf	vfpfcnvrt@ll+1,w
  7919  0160  00BC               	movwf	dtoa@d+1
  7920  0161  0863               	movf	vfpfcnvrt@ll+2,w
  7921  0162  00BD               	movwf	dtoa@d+2
  7922  0163  0864               	movf	vfpfcnvrt@ll+3,w
  7923  0164  00BE               	movwf	dtoa@d+3
  7924  0165  0865               	movf	vfpfcnvrt@ll+4,w
  7925  0166  00BF               	movwf	dtoa@d+4
  7926  0167  0866               	movf	vfpfcnvrt@ll+5,w
  7927  0168  00C0               	movwf	dtoa@d+5
  7928  0169  0867               	movf	vfpfcnvrt@ll+6,w
  7929  016A  00C1               	movwf	dtoa@d+6
  7930  016B  0868               	movf	vfpfcnvrt@ll+7,w
  7931  016C  00C2               	movwf	dtoa@d+7
  7932  016D  086D               	movf	vfpfcnvrt@fp,w
  7933  016E  3183  235B  3180   	fcall	_dtoa
  7934  0171  0020               	movlb	0	; select bank0
  7935  0172  083C               	movf	?_dtoa+1,w
  7936  0173  00DA               	movwf	?_vfpfcnvrt+1
  7937  0174  083B               	movf	?_dtoa,w
  7938  0175  00D9               	movwf	?_vfpfcnvrt
  7939  0176  29CF               	goto	l1987
  7940  0177                     l5593:
  7941                           
  7942                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  7943  0177  0859               	movf	vfpfcnvrt@fmt,w
  7944  0178  0086               	movwf	6
  7945  0179  0187               	clrf	7
  7946  017A  3F40               	moviw [0]fsr1
  7947  017B  00DB               	movwf	??_vfpfcnvrt
  7948  017C  3F41               	moviw [1]fsr1
  7949  017D  00DC               	movwf	??_vfpfcnvrt+1
  7950  017E  085B               	movf	??_vfpfcnvrt,w
  7951  017F  0084               	movwf	4
  7952  0180  085C               	movf	??_vfpfcnvrt+1,w
  7953  0181  0085               	movwf	5
  7954  0182  0012               	moviw fsr0++
  7955  0183  3A25               	xorlw	37
  7956  0184  1D03               	btfss	3,2
  7957  0185  2987               	goto	u5081
  7958  0186  2988               	goto	u5080
  7959  0187                     u5081:
  7960  0187  29A1               	goto	l5603
  7961  0188                     u5080:
  7962  0188                     l5595:
  7963                           
  7964                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  7965  0188  0859               	movf	vfpfcnvrt@fmt,w
  7966  0189  0086               	movwf	6
  7967  018A  0187               	clrf	7
  7968  018B  3001               	movlw	1
  7969  018C  0781               	addwf	1,f
  7970  018D  3141               	addfsr 1,1
  7971  018E  1803               	skipnc
  7972  018F  0A81               	incf	1,f
  7973  0190                     l5597:
  7974                           
  7975                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  7976  0190  3025               	movlw	37
  7977  0191  00A0               	movwf	fputc@c
  7978  0192  3000               	movlw	0
  7979  0193  00A1               	movwf	fputc@c+1
  7980  0194  086D               	movf	vfpfcnvrt@fp,w
  7981  0195  00DB               	movwf	??_vfpfcnvrt
  7982  0196  085B               	movf	??_vfpfcnvrt,w
  7983  0197  00A2               	movwf	fputc@fp
  7984  0198  318C  2409  3180   	fcall	_fputc
  7985  019B                     l5599:
  7986                           
  7987                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  7988  019B  3001               	movlw	1
  7989  019C  0020               	movlb	0	; select bank0
  7990  019D  00D9               	movwf	?_vfpfcnvrt
  7991  019E  3000               	movlw	0
  7992  019F  00DA               	movwf	?_vfpfcnvrt+1
  7993  01A0  29CF               	goto	l1987
  7994  01A1                     l5603:
  7995                           
  7996                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  7997  01A1  0859               	movf	vfpfcnvrt@fmt,w
  7998  01A2  0086               	movwf	6
  7999  01A3  0187               	clrf	7
  8000  01A4  3001               	movlw	1
  8001  01A5  0781               	addwf	1,f
  8002  01A6  3141               	addfsr 1,1
  8003  01A7  1803               	skipnc
  8004  01A8  0A81               	incf	1,f
  8005  01A9                     l5605:
  8006                           
  8007                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  8008  01A9  01D9               	clrf	?_vfpfcnvrt
  8009  01AA  01DA               	clrf	?_vfpfcnvrt+1
  8010  01AB  29CF               	goto	l1987
  8011  01AC                     l5609:
  8012                           
  8013                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  8014  01AC  0859               	movf	vfpfcnvrt@fmt,w
  8015  01AD  0086               	movwf	6
  8016  01AE  0187               	clrf	7
  8017  01AF  3F40               	moviw [0]fsr1
  8018  01B0  00DB               	movwf	??_vfpfcnvrt
  8019  01B1  3F41               	moviw [1]fsr1
  8020  01B2  00DC               	movwf	??_vfpfcnvrt+1
  8021  01B3  085B               	movf	??_vfpfcnvrt,w
  8022  01B4  0084               	movwf	4
  8023  01B5  085C               	movf	??_vfpfcnvrt+1,w
  8024  01B6  0085               	movwf	5
  8025  01B7  0800               	movf	0,w	;code access
  8026  01B8  00DD               	movwf	??_vfpfcnvrt+2
  8027  01B9  01DE               	clrf	??_vfpfcnvrt+3
  8028  01BA  085D               	movf	??_vfpfcnvrt+2,w
  8029  01BB  00A0               	movwf	fputc@c
  8030  01BC  085E               	movf	??_vfpfcnvrt+3,w
  8031  01BD  00A1               	movwf	fputc@c+1
  8032  01BE  086D               	movf	vfpfcnvrt@fp,w
  8033  01BF  00DF               	movwf	??_vfpfcnvrt+4
  8034  01C0  085F               	movf	??_vfpfcnvrt+4,w
  8035  01C1  00A2               	movwf	fputc@fp
  8036  01C2  318C  2409  3180   	fcall	_fputc
  8037  01C5                     l5611:
  8038                           
  8039                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  8040  01C5  0020               	movlb	0	; select bank0
  8041  01C6  0859               	movf	vfpfcnvrt@fmt,w
  8042  01C7  0086               	movwf	6
  8043  01C8  0187               	clrf	7
  8044  01C9  3001               	movlw	1
  8045  01CA  0781               	addwf	1,f
  8046  01CB  3141               	addfsr 1,1
  8047  01CC  1803               	skipnc
  8048  01CD  0A81               	incf	1,f
  8049  01CE  299B               	goto	l5599
  8050  01CF                     l1987:
  8051  01CF  0008               	return
  8052  01D0                     __end_of_vfpfcnvrt:
  8053                           
  8054                           	psect	text4
  8055  035B                     __ptext4:	
  8056 ;; *************** function _dtoa *****************
  8057 ;; Defined at:
  8058 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  8059 ;; Parameters:    Size  Location     Type
  8060 ;;  fp              1    wreg     PTR struct _IO_FILE
  8061 ;;		 -> sprintf@f(5), 
  8062 ;;  d               8   27[BANK0 ] long long 
  8063 ;; Auto vars:     Size  Location     Type
  8064 ;;  fp              1   38[BANK0 ] PTR struct _IO_FILE
  8065 ;;		 -> sprintf@f(5), 
  8066 ;;  n               8   47[BANK0 ] long long 
  8067 ;;  i               2   55[BANK0 ] int 
  8068 ;;  s               2   45[BANK0 ] int 
  8069 ;;  w               2   43[BANK0 ] int 
  8070 ;;  p               2   41[BANK0 ] int 
  8071 ;; Return value:  Size  Location     Type
  8072 ;;                  2   27[BANK0 ] int 
  8073 ;; Registers used:
  8074 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8075 ;; Tracked objects:
  8076 ;;		On entry : 0/0
  8077 ;;		On exit  : 0/0
  8078 ;;		Unchanged: 0/0
  8079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8080 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8081 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8082 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8083 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8084 ;;Total ram usage:       30 bytes
  8085 ;; Hardware stack levels used: 1
  8086 ;; Hardware stack levels required when called: 9
  8087 ;; This function calls:
  8088 ;;		___aodiv
  8089 ;;		___aomod
  8090 ;;		_abs
  8091 ;;		_pad
  8092 ;; This function is called by:
  8093 ;;		_vfpfcnvrt
  8094 ;; This function uses a non-reentrant model
  8095 ;;
  8096                           
  8097                           
  8098                           ;psect for function _dtoa
  8099  035B                     _dtoa:
  8100                           
  8101                           ;incstack = 0
  8102                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8103                           ;dtoa@fp stored from wreg
  8104  035B  0020               	movlb	0	; select bank0
  8105  035C  00C6               	movwf	dtoa@fp
  8106  035D                     l5379:
  8107                           
  8108                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  8109  035D  083B               	movf	dtoa@d,w
  8110  035E  00CF               	movwf	dtoa@n
  8111  035F  083C               	movf	dtoa@d+1,w
  8112  0360  00D0               	movwf	dtoa@n+1
  8113  0361  083D               	movf	dtoa@d+2,w
  8114  0362  00D1               	movwf	dtoa@n+2
  8115  0363  083E               	movf	dtoa@d+3,w
  8116  0364  00D2               	movwf	dtoa@n+3
  8117  0365  083F               	movf	dtoa@d+4,w
  8118  0366  00D3               	movwf	dtoa@n+4
  8119  0367  0840               	movf	dtoa@d+5,w
  8120  0368  00D4               	movwf	dtoa@n+5
  8121  0369  0841               	movf	dtoa@d+6,w
  8122  036A  00D5               	movwf	dtoa@n+6
  8123  036B  0842               	movf	dtoa@d+7,w
  8124  036C  00D6               	movwf	dtoa@n+7
  8125  036D                     l5381:
  8126                           
  8127                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  8128  036D  304F               	movlw	low dtoa@n
  8129  036E  0086               	movwf	6
  8130  036F  3000               	movlw	high dtoa@n
  8131  0370  0087               	movwf	7
  8132  0371  3F47               	moviw [7]fsr1
  8133  0372  00C3               	movwf	??_dtoa
  8134  0373  1BC3               	btfsc	??_dtoa,7
  8135  0374  2B76               	goto	u4601
  8136  0375  2B78               	goto	u4600
  8137  0376                     u4601:
  8138  0376  3001               	movlw	1
  8139  0377  2B79               	goto	u4610
  8140  0378                     u4600:
  8141  0378  3000               	movlw	0
  8142  0379                     u4610:
  8143  0379  0020               	movlb	0	; select bank0
  8144  037A  00C4               	movwf	??_dtoa+1
  8145  037B  01C5               	clrf	??_dtoa+2
  8146  037C  0844               	movf	??_dtoa+1,w
  8147  037D  00CD               	movwf	dtoa@s
  8148  037E  0845               	movf	??_dtoa+2,w
  8149  037F  00CE               	movwf	dtoa@s+1
  8150  0380                     l5383:
  8151                           
  8152                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  8153  0380  084D               	movf	dtoa@s,w
  8154  0381  044E               	iorwf	dtoa@s+1,w
  8155  0382  1903               	btfsc	3,2
  8156  0383  2B85               	goto	u4621
  8157  0384  2B86               	goto	u4620
  8158  0385                     u4621:
  8159  0385  2BA4               	goto	l1935
  8160  0386                     u4620:
  8161  0386                     l5385:
  8162                           
  8163                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  8164  0386  09CF               	comf	dtoa@n,f
  8165  0387  09D0               	comf	dtoa@n+1,f
  8166  0388  09D1               	comf	dtoa@n+2,f
  8167  0389  09D2               	comf	dtoa@n+3,f
  8168  038A  09D3               	comf	dtoa@n+4,f
  8169  038B  09D4               	comf	dtoa@n+5,f
  8170  038C  09D5               	comf	dtoa@n+6,f
  8171  038D  09D6               	comf	dtoa@n+7,f
  8172  038E  0ACF               	incf	dtoa@n,f
  8173  038F  1D03               	skipz
  8174  0390  2BA4               	goto	u463lld
  8175  0391  0AD0               	incf	dtoa@n+1,f
  8176  0392  1D03               	skipz
  8177  0393  2BA4               	goto	u463lld
  8178  0394  0AD1               	incf	dtoa@n+2,f
  8179  0395  1D03               	skipz
  8180  0396  2BA4               	goto	u463lld
  8181  0397  0AD2               	incf	dtoa@n+3,f
  8182  0398  1D03               	skipz
  8183  0399  2BA4               	goto	u463lld
  8184  039A  0AD3               	incf	dtoa@n+4,f
  8185  039B  1D03               	skipz
  8186  039C  2BA4               	goto	u463lld
  8187  039D  0AD4               	incf	dtoa@n+5,f
  8188  039E  1D03               	skipz
  8189  039F  2BA4               	goto	u463lld
  8190  03A0  0AD5               	incf	dtoa@n+6,f
  8191  03A1  1D03               	skipz
  8192  03A2  2BA4               	goto	u463lld
  8193  03A3  0AD6               	incf	dtoa@n+7,f
  8194  03A4                     u463lld:
  8195  03A4                     l1935:	
  8196                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 297:     }
  8197                           
  8198                           
  8199                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  8200  03A4  1BF6               	btfsc	_prec+1,7
  8201  03A5  2BA7               	goto	u4641
  8202  03A6  2BA8               	goto	u4640
  8203  03A7                     u4641:
  8204  03A7  2BAC               	goto	l1936
  8205  03A8                     u4640:
  8206  03A8                     l5387:
  8207                           
  8208                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  8209  03A8  30FD               	movlw	253
  8210  03A9  05F7               	andwf	_flags,f
  8211  03AA  30FF               	movlw	255
  8212  03AB  05F8               	andwf	_flags+1,f
  8213  03AC                     l1936:	
  8214                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 302:     }
  8215                           
  8216                           
  8217                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  8218  03AC  0876               	movf	_prec+1,w
  8219  03AD  3A80               	xorlw	128
  8220  03AE  0020               	movlb	0	; select bank0
  8221  03AF  00C3               	movwf	??_dtoa
  8222  03B0  3080               	movlw	128
  8223  03B1  0243               	subwf	??_dtoa,w
  8224  03B2  1D03               	skipz
  8225  03B3  2BB6               	goto	u4655
  8226  03B4  3001               	movlw	1
  8227  03B5  0275               	subwf	_prec,w
  8228  03B6                     u4655:
  8229  03B6  1803               	skipnc
  8230  03B7  2BB9               	goto	u4651
  8231  03B8  2BBA               	goto	u4650
  8232  03B9                     u4651:
  8233  03B9  2BC0               	goto	l5391
  8234  03BA                     u4650:
  8235  03BA                     l5389:
  8236  03BA  3001               	movlw	1
  8237  03BB  0020               	movlb	0	; select bank0
  8238  03BC  00C9               	movwf	dtoa@p
  8239  03BD  3000               	movlw	0
  8240  03BE  00CA               	movwf	dtoa@p+1
  8241  03BF  2BC5               	goto	l1940
  8242  03C0                     l5391:
  8243  03C0  0876               	movf	_prec+1,w
  8244  03C1  0020               	movlb	0	; select bank0
  8245  03C2  00CA               	movwf	dtoa@p+1
  8246  03C3  0875               	movf	_prec,w
  8247  03C4  00C9               	movwf	dtoa@p
  8248  03C5                     l1940:
  8249                           
  8250                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  8251  03C5  0021               	movlb	1	; select bank1
  8252  03C6  0866               	movf	(_width+1)^(0+128),w
  8253  03C7  0020               	movlb	0	; select bank0
  8254  03C8  00CC               	movwf	dtoa@w+1
  8255  03C9  0021               	movlb	1	; select bank1
  8256  03CA  0865               	movf	_width^(0+128),w
  8257  03CB  0020               	movlb	0	; select bank0
  8258  03CC  00CB               	movwf	dtoa@w
  8259  03CD                     l5393:
  8260                           
  8261                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  8262  03CD  084D               	movf	dtoa@s,w
  8263  03CE  044E               	iorwf	dtoa@s+1,w
  8264  03CF  1D03               	btfss	3,2
  8265  03D0  2BD2               	goto	u4661
  8266  03D1  2BD3               	goto	u4660
  8267  03D2                     u4661:
  8268  03D2  2BD7               	goto	l5397
  8269  03D3                     u4660:
  8270  03D3                     l5395:
  8271  03D3  1D77               	btfss	_flags,2
  8272  03D4  2BD6               	goto	u4671
  8273  03D5  2BD7               	goto	u4670
  8274  03D6                     u4671:
  8275  03D6  2BDB               	goto	l1941
  8276  03D7                     u4670:
  8277  03D7                     l5397:
  8278                           
  8279                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  8280  03D7  30FF               	movlw	255
  8281  03D8  07CB               	addwf	dtoa@w,f
  8282  03D9  30FF               	movlw	255
  8283  03DA  3DCC               	addwfc	dtoa@w+1,f
  8284  03DB                     l1941:	
  8285                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 307:     }
  8286                           
  8287                           
  8288                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  8289  03DB  301F               	movlw	31
  8290  03DC  00D7               	movwf	dtoa@i
  8291  03DD  3000               	movlw	0
  8292  03DE  00D8               	movwf	dtoa@i+1
  8293  03DF                     l5399:
  8294                           
  8295                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  8296  03DF  0022               	movlb	2	; select bank2
  8297  03E0  01BF               	clrf	(_dbuf^(0+256)+31)
  8298                           
  8299                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8300  03E1  2C4B               	goto	l1944
  8301  03E2                     l5401:
  8302                           
  8303                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  8304  03E2  30FF               	movlw	255
  8305  03E3  0020               	movlb	0	; select bank0
  8306  03E4  07D7               	addwf	dtoa@i,f
  8307  03E5  30FF               	movlw	255
  8308  03E6  3DD8               	addwfc	dtoa@i+1,f
  8309  03E7                     l5403:
  8310                           
  8311                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  8312  03E7  300A               	movlw	10
  8313  03E8  00A0               	movwf	___aomod@divisor
  8314  03E9  01A1               	clrf	___aomod@divisor+1
  8315  03EA  01A2               	clrf	___aomod@divisor+2
  8316  03EB  01A3               	clrf	___aomod@divisor+3
  8317  03EC  01A4               	clrf	___aomod@divisor+4
  8318  03ED  01A5               	clrf	___aomod@divisor+5
  8319  03EE  01A6               	clrf	___aomod@divisor+6
  8320  03EF  01A7               	clrf	___aomod@divisor+7
  8321  03F0  084F               	movf	dtoa@n,w
  8322  03F1  00A8               	movwf	___aomod@dividend
  8323  03F2  0850               	movf	dtoa@n+1,w
  8324  03F3  00A9               	movwf	___aomod@dividend+1
  8325  03F4  0851               	movf	dtoa@n+2,w
  8326  03F5  00AA               	movwf	___aomod@dividend+2
  8327  03F6  0852               	movf	dtoa@n+3,w
  8328  03F7  00AB               	movwf	___aomod@dividend+3
  8329  03F8  0853               	movf	dtoa@n+4,w
  8330  03F9  00AC               	movwf	___aomod@dividend+4
  8331  03FA  0854               	movf	dtoa@n+5,w
  8332  03FB  00AD               	movwf	___aomod@dividend+5
  8333  03FC  0855               	movf	dtoa@n+6,w
  8334  03FD  00AE               	movwf	___aomod@dividend+6
  8335  03FE  0856               	movf	dtoa@n+7,w
  8336  03FF  00AF               	movwf	___aomod@dividend+7
  8337  0400  318F  2713  3183   	fcall	___aomod
  8338  0403  0020               	movlb	0	; select bank0
  8339  0404  0821               	movf	?___aomod+1,w
  8340  0405  00B4               	movwf	abs@a+1
  8341  0406  0820               	movf	?___aomod,w
  8342  0407  00B3               	movwf	abs@a
  8343  0408  318A  2283  3183   	fcall	_abs
  8344  040B  0020               	movlb	0	; select bank0
  8345  040C  0833               	movf	?_abs,w
  8346  040D  3E30               	addlw	48
  8347  040E  00C3               	movwf	??_dtoa
  8348  040F  0857               	movf	dtoa@i,w
  8349  0410  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8350  0411  0086               	movwf	6
  8351  0412  3001               	movlw	1	; select bank2/3
  8352  0413  0087               	movwf	7
  8353  0414  0843               	movf	??_dtoa,w
  8354  0415  0081               	movwf	1
  8355  0416                     l5405:
  8356                           
  8357                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  8358  0416  30FF               	movlw	255
  8359  0417  07C9               	addwf	dtoa@p,f
  8360  0418  30FF               	movlw	255
  8361  0419  3DCA               	addwfc	dtoa@p+1,f
  8362  041A                     l5407:
  8363                           
  8364                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  8365  041A  30FF               	movlw	255
  8366  041B  07CB               	addwf	dtoa@w,f
  8367  041C  30FF               	movlw	255
  8368  041D  3DCC               	addwfc	dtoa@w+1,f
  8369  041E                     l5409:
  8370                           
  8371                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  8372  041E  300A               	movlw	10
  8373  041F  00A0               	movwf	___aodiv@divisor
  8374  0420  01A1               	clrf	___aodiv@divisor+1
  8375  0421  01A2               	clrf	___aodiv@divisor+2
  8376  0422  01A3               	clrf	___aodiv@divisor+3
  8377  0423  01A4               	clrf	___aodiv@divisor+4
  8378  0424  01A5               	clrf	___aodiv@divisor+5
  8379  0425  01A6               	clrf	___aodiv@divisor+6
  8380  0426  01A7               	clrf	___aodiv@divisor+7
  8381  0427  084F               	movf	dtoa@n,w
  8382  0428  00A8               	movwf	___aodiv@dividend
  8383  0429  0850               	movf	dtoa@n+1,w
  8384  042A  00A9               	movwf	___aodiv@dividend+1
  8385  042B  0851               	movf	dtoa@n+2,w
  8386  042C  00AA               	movwf	___aodiv@dividend+2
  8387  042D  0852               	movf	dtoa@n+3,w
  8388  042E  00AB               	movwf	___aodiv@dividend+3
  8389  042F  0853               	movf	dtoa@n+4,w
  8390  0430  00AC               	movwf	___aodiv@dividend+4
  8391  0431  0854               	movf	dtoa@n+5,w
  8392  0432  00AD               	movwf	___aodiv@dividend+5
  8393  0433  0855               	movf	dtoa@n+6,w
  8394  0434  00AE               	movwf	___aodiv@dividend+6
  8395  0435  0856               	movf	dtoa@n+7,w
  8396  0436  00AF               	movwf	___aodiv@dividend+7
  8397  0437  3186  260F  3183   	fcall	___aodiv
  8398  043A  0020               	movlb	0	; select bank0
  8399  043B  0820               	movf	?___aodiv,w
  8400  043C  00CF               	movwf	dtoa@n
  8401  043D  0821               	movf	?___aodiv+1,w
  8402  043E  00D0               	movwf	dtoa@n+1
  8403  043F  0822               	movf	?___aodiv+2,w
  8404  0440  00D1               	movwf	dtoa@n+2
  8405  0441  0823               	movf	?___aodiv+3,w
  8406  0442  00D2               	movwf	dtoa@n+3
  8407  0443  0824               	movf	?___aodiv+4,w
  8408  0444  00D3               	movwf	dtoa@n+4
  8409  0445  0825               	movf	?___aodiv+5,w
  8410  0446  00D4               	movwf	dtoa@n+5
  8411  0447  0826               	movf	?___aodiv+6,w
  8412  0448  00D5               	movwf	dtoa@n+6
  8413  0449  0827               	movf	?___aodiv+7,w
  8414  044A  00D6               	movwf	dtoa@n+7
  8415  044B                     l1944:	
  8416                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 318:     }
  8417                           
  8418                           
  8419                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8420  044B  0020               	movlb	0	; select bank0
  8421  044C  0858               	movf	dtoa@i+1,w
  8422  044D  3A80               	xorlw	128
  8423  044E  00C3               	movwf	??_dtoa
  8424  044F  3080               	movlw	128
  8425  0450  0243               	subwf	??_dtoa,w
  8426  0451  1D03               	skipz
  8427  0452  2C55               	goto	u4685
  8428  0453  3001               	movlw	1
  8429  0454  0257               	subwf	dtoa@i,w
  8430  0455                     u4685:
  8431  0455  1C03               	skipc
  8432  0456  2C58               	goto	u4681
  8433  0457  2C59               	goto	u4680
  8434  0458                     u4681:
  8435  0458  2C85               	goto	l5419
  8436  0459                     u4680:
  8437  0459                     l5411:
  8438  0459  0020               	movlb	0	; select bank0
  8439  045A  084F               	movf	dtoa@n,w
  8440  045B  0450               	iorwf	dtoa@n+1,w
  8441  045C  0451               	iorwf	dtoa@n+2,w
  8442  045D  0452               	iorwf	dtoa@n+3,w
  8443  045E  0453               	iorwf	dtoa@n+4,w
  8444  045F  0454               	iorwf	dtoa@n+5,w
  8445  0460  0455               	iorwf	dtoa@n+6,w
  8446  0461  0456               	iorwf	dtoa@n+7,w
  8447  0462  1D03               	skipz
  8448  0463  2C65               	goto	u4691
  8449  0464  2C66               	goto	u4690
  8450  0465                     u4691:
  8451  0465  2BE2               	goto	l5401
  8452  0466                     u4690:
  8453  0466                     l5413:
  8454  0466  084A               	movf	dtoa@p+1,w
  8455  0467  3A80               	xorlw	128
  8456  0468  00C3               	movwf	??_dtoa
  8457  0469  3080               	movlw	128
  8458  046A  0243               	subwf	??_dtoa,w
  8459  046B  1D03               	skipz
  8460  046C  2C6F               	goto	u4705
  8461  046D  3001               	movlw	1
  8462  046E  0249               	subwf	dtoa@p,w
  8463  046F                     u4705:
  8464  046F  1803               	skipnc
  8465  0470  2C72               	goto	u4701
  8466  0471  2C73               	goto	u4700
  8467  0472                     u4701:
  8468  0472  2BE2               	goto	l5401
  8469  0473                     u4700:
  8470  0473                     l5415:
  8471  0473  0020               	movlb	0	; select bank0
  8472  0474  084C               	movf	dtoa@w+1,w
  8473  0475  3A80               	xorlw	128
  8474  0476  00C3               	movwf	??_dtoa
  8475  0477  3080               	movlw	128
  8476  0478  0243               	subwf	??_dtoa,w
  8477  0479  1D03               	skipz
  8478  047A  2C7D               	goto	u4715
  8479  047B  3001               	movlw	1
  8480  047C  024B               	subwf	dtoa@w,w
  8481  047D                     u4715:
  8482  047D  1C03               	skipc
  8483  047E  2C80               	goto	u4711
  8484  047F  2C81               	goto	u4710
  8485  0480                     u4711:
  8486  0480  2C85               	goto	l5419
  8487  0481                     u4710:
  8488  0481                     l5417:
  8489  0481  18F7               	btfsc	_flags,1
  8490  0482  2C84               	goto	u4721
  8491  0483  2C85               	goto	u4720
  8492  0484                     u4721:
  8493  0484  2BE2               	goto	l5401
  8494  0485                     u4720:
  8495  0485                     l5419:
  8496                           
  8497                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  8498  0485  0020               	movlb	0	; select bank0
  8499  0486  084D               	movf	dtoa@s,w
  8500  0487  044E               	iorwf	dtoa@s+1,w
  8501  0488  1D03               	btfss	3,2
  8502  0489  2C8B               	goto	u4731
  8503  048A  2C8C               	goto	u4730
  8504  048B                     u4731:
  8505  048B  2C90               	goto	l5423
  8506  048C                     u4730:
  8507  048C                     l5421:
  8508  048C  1D77               	btfss	_flags,2
  8509  048D  2C8F               	goto	u4741
  8510  048E  2C90               	goto	u4740
  8511  048F                     u4741:
  8512  048F  2CAC               	goto	l5433
  8513  0490                     u4740:
  8514  0490                     l5423:
  8515                           
  8516                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  8517  0490  30FF               	movlw	255
  8518  0491  07D7               	addwf	dtoa@i,f
  8519  0492  30FF               	movlw	255
  8520  0493  3DD8               	addwfc	dtoa@i+1,f
  8521  0494                     l5425:
  8522                           
  8523                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  8524  0494  084D               	movf	dtoa@s,w
  8525  0495  044E               	iorwf	dtoa@s+1,w
  8526  0496  1D03               	btfss	3,2
  8527  0497  2C99               	goto	u4751
  8528  0498  2C9A               	goto	u4750
  8529  0499                     u4751:
  8530  0499  2C9F               	goto	l5429
  8531  049A                     u4750:
  8532  049A                     l5427:
  8533  049A  302B               	movlw	43
  8534  049B  00C7               	movwf	_dtoa$2792
  8535  049C  3000               	movlw	0
  8536  049D  00C8               	movwf	_dtoa$2792+1
  8537  049E  2CA3               	goto	l5431
  8538  049F                     l5429:
  8539  049F  302D               	movlw	45
  8540  04A0  00C7               	movwf	_dtoa$2792
  8541  04A1  3000               	movlw	0
  8542  04A2  00C8               	movwf	_dtoa$2792+1
  8543  04A3                     l5431:
  8544  04A3  0847               	movf	_dtoa$2792,w
  8545  04A4  00C3               	movwf	??_dtoa
  8546  04A5  0857               	movf	dtoa@i,w
  8547  04A6  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8548  04A7  0086               	movwf	6
  8549  04A8  3001               	movlw	1	; select bank2/3
  8550  04A9  0087               	movwf	7
  8551  04AA  0843               	movf	??_dtoa,w
  8552  04AB  0081               	movwf	1
  8553  04AC                     l5433:
  8554                           
  8555                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  8556  04AC  0857               	movf	dtoa@i,w
  8557  04AD  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8558  04AE  00C3               	movwf	??_dtoa
  8559  04AF  0843               	movf	??_dtoa,w
  8560  04B0  00B0               	movwf	pad@buf
  8561  04B1  084C               	movf	dtoa@w+1,w
  8562  04B2  00B2               	movwf	pad@p+1
  8563  04B3  084B               	movf	dtoa@w,w
  8564  04B4  00B1               	movwf	pad@p
  8565  04B5  0846               	movf	dtoa@fp,w
  8566  04B6  318C  24AD  3183   	fcall	_pad
  8567  04B9  0020               	movlb	0	; select bank0
  8568  04BA  0831               	movf	?_pad+1,w
  8569  04BB  00BC               	movwf	?_dtoa+1
  8570  04BC  0830               	movf	?_pad,w
  8571  04BD  00BB               	movwf	?_dtoa
  8572  04BE                     l1958:
  8573  04BE  0008               	return
  8574  04BF                     __end_of_dtoa:
  8575                           
  8576                           	psect	text5
  8577  0CAD                     __ptext5:	
  8578 ;; *************** function _pad *****************
  8579 ;; Defined at:
  8580 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  8581 ;; Parameters:    Size  Location     Type
  8582 ;;  fp              1    wreg     PTR struct _IO_FILE
  8583 ;;		 -> sprintf@f(5), 
  8584 ;;  buf             1   16[BANK0 ] PTR unsigned char 
  8585 ;;		 -> dbuf(32), 
  8586 ;;  p               2   17[BANK0 ] int 
  8587 ;; Auto vars:     Size  Location     Type
  8588 ;;  fp              1   24[BANK0 ] PTR struct _IO_FILE
  8589 ;;		 -> sprintf@f(5), 
  8590 ;;  w               2   22[BANK0 ] int 
  8591 ;;  i               2   20[BANK0 ] int 
  8592 ;; Return value:  Size  Location     Type
  8593 ;;                  2   16[BANK0 ] int 
  8594 ;; Registers used:
  8595 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8596 ;; Tracked objects:
  8597 ;;		On entry : 0/0
  8598 ;;		On exit  : 0/0
  8599 ;;		Unchanged: 0/0
  8600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8601 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8602 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8603 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8604 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8605 ;;Total ram usage:        9 bytes
  8606 ;; Hardware stack levels used: 1
  8607 ;; Hardware stack levels required when called: 8
  8608 ;; This function calls:
  8609 ;;		_fputc
  8610 ;;		_fputs
  8611 ;;		_strlen
  8612 ;; This function is called by:
  8613 ;;		_dtoa
  8614 ;; This function uses a non-reentrant model
  8615 ;;
  8616                           
  8617                           
  8618                           ;psect for function _pad
  8619  0CAD                     _pad:
  8620                           
  8621                           ;incstack = 0
  8622                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8623                           ;pad@fp stored from wreg
  8624  0CAD  0020               	movlb	0	; select bank0
  8625  0CAE  00B8               	movwf	pad@fp
  8626  0CAF                     l5311:
  8627                           
  8628                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  8629  0CAF  1C77               	btfss	_flags,0
  8630  0CB0  2CB2               	goto	u4431
  8631  0CB1  2CB3               	goto	u4430
  8632  0CB2                     u4431:
  8633  0CB2  2CBB               	goto	l5315
  8634  0CB3                     u4430:
  8635  0CB3                     l5313:
  8636                           
  8637                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  8638  0CB3  0838               	movf	pad@fp,w
  8639  0CB4  00B3               	movwf	??_pad
  8640  0CB5  0833               	movf	??_pad,w
  8641  0CB6  00A8               	movwf	fputs@fp
  8642  0CB7  0830               	movf	pad@buf,w
  8643  0CB8  318B  236C  318C   	fcall	_fputs
  8644  0CBB                     l5315:
  8645                           
  8646                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  8647  0CBB  0020               	movlb	0	; select bank0
  8648  0CBC  1BB2               	btfsc	pad@p+1,7
  8649  0CBD  2CBF               	goto	u4441
  8650  0CBE  2CC0               	goto	u4440
  8651  0CBF                     u4441:
  8652  0CBF  2CC5               	goto	l5319
  8653  0CC0                     u4440:
  8654  0CC0                     l5317:
  8655  0CC0  0832               	movf	pad@p+1,w
  8656  0CC1  00B7               	movwf	pad@w+1
  8657  0CC2  0831               	movf	pad@p,w
  8658  0CC3  00B6               	movwf	pad@w
  8659  0CC4  2CC7               	goto	l1927
  8660  0CC5                     l5319:
  8661  0CC5  01B6               	clrf	pad@w
  8662  0CC6  01B7               	clrf	pad@w+1
  8663  0CC7                     l1927:
  8664                           
  8665                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  8666  0CC7  01B4               	clrf	pad@i
  8667  0CC8  01B5               	clrf	pad@i+1
  8668                           
  8669                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8670  0CC9  2CDB               	goto	l5325
  8671  0CCA                     l5321:
  8672                           
  8673                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  8674  0CCA  3020               	movlw	32
  8675  0CCB  0020               	movlb	0	; select bank0
  8676  0CCC  00A0               	movwf	fputc@c
  8677  0CCD  3000               	movlw	0
  8678  0CCE  00A1               	movwf	fputc@c+1
  8679  0CCF  0838               	movf	pad@fp,w
  8680  0CD0  00B3               	movwf	??_pad
  8681  0CD1  0833               	movf	??_pad,w
  8682  0CD2  00A2               	movwf	fputc@fp
  8683  0CD3  318C  2409  318C   	fcall	_fputc
  8684  0CD6                     l5323:
  8685                           
  8686                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  8687  0CD6  3001               	movlw	1
  8688  0CD7  0020               	movlb	0	; select bank0
  8689  0CD8  07B4               	addwf	pad@i,f
  8690  0CD9  3000               	movlw	0
  8691  0CDA  3DB5               	addwfc	pad@i+1,f
  8692  0CDB                     l5325:
  8693                           
  8694                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8695  0CDB  0835               	movf	pad@i+1,w
  8696  0CDC  3A80               	xorlw	128
  8697  0CDD  00B3               	movwf	??_pad
  8698  0CDE  0837               	movf	pad@w+1,w
  8699  0CDF  3A80               	xorlw	128
  8700  0CE0  0233               	subwf	??_pad,w
  8701  0CE1  1D03               	skipz
  8702  0CE2  2CE5               	goto	u4455
  8703  0CE3  0836               	movf	pad@w,w
  8704  0CE4  0234               	subwf	pad@i,w
  8705  0CE5                     u4455:
  8706  0CE5  1C03               	skipc
  8707  0CE6  2CE8               	goto	u4451
  8708  0CE7  2CE9               	goto	u4450
  8709  0CE8                     u4451:
  8710  0CE8  2CCA               	goto	l5321
  8711  0CE9                     u4450:
  8712  0CE9                     l1930:
  8713                           
  8714                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  8715  0CE9  1877               	btfsc	_flags,0
  8716  0CEA  2CEC               	goto	u4461
  8717  0CEB  2CED               	goto	u4460
  8718  0CEC                     u4461:
  8719  0CEC  2CF6               	goto	l5329
  8720  0CED                     u4460:
  8721  0CED                     l5327:
  8722                           
  8723                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  8724  0CED  0020               	movlb	0	; select bank0
  8725  0CEE  0838               	movf	pad@fp,w
  8726  0CEF  00B3               	movwf	??_pad
  8727  0CF0  0833               	movf	??_pad,w
  8728  0CF1  00A8               	movwf	fputs@fp
  8729  0CF2  0830               	movf	pad@buf,w
  8730  0CF3  318B  236C  318C   	fcall	_fputs
  8731  0CF6                     l5329:
  8732                           
  8733                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  8734  0CF6  0020               	movlb	0	; select bank0
  8735  0CF7  0830               	movf	pad@buf,w
  8736  0CF8  318A  224C  318C   	fcall	_strlen
  8737  0CFB  0020               	movlb	0	; select bank0
  8738  0CFC  0836               	movf	pad@w,w
  8739  0CFD  0720               	addwf	?_strlen,w
  8740  0CFE  00B0               	movwf	?_pad
  8741  0CFF  0837               	movf	pad@w+1,w
  8742  0D00  3D21               	addwfc	?_strlen+1,w
  8743  0D01  00B1               	movwf	?_pad+1
  8744  0D02                     l1932:
  8745  0D02  0008               	return
  8746  0D03                     __end_of_pad:
  8747                           
  8748                           	psect	text6
  8749  0A4C                     __ptext6:	
  8750 ;; *************** function _strlen *****************
  8751 ;; Defined at:
  8752 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  8753 ;; Parameters:    Size  Location     Type
  8754 ;;  s               1    wreg     PTR const unsigned char 
  8755 ;;		 -> dbuf(32), 
  8756 ;; Auto vars:     Size  Location     Type
  8757 ;;  s               1    4[BANK0 ] PTR const unsigned char 
  8758 ;;		 -> dbuf(32), 
  8759 ;;  a               1    3[BANK0 ] PTR const unsigned char 
  8760 ;;		 -> dbuf(32), 
  8761 ;; Return value:  Size  Location     Type
  8762 ;;                  2    0[BANK0 ] unsigned int 
  8763 ;; Registers used:
  8764 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8765 ;; Tracked objects:
  8766 ;;		On entry : 0/0
  8767 ;;		On exit  : 0/0
  8768 ;;		Unchanged: 0/0
  8769 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8770 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8771 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8772 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8773 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8774 ;;Total ram usage:        5 bytes
  8775 ;; Hardware stack levels used: 1
  8776 ;; Hardware stack levels required when called: 5
  8777 ;; This function calls:
  8778 ;;		Nothing
  8779 ;; This function is called by:
  8780 ;;		_pad
  8781 ;; This function uses a non-reentrant model
  8782 ;;
  8783                           
  8784                           
  8785                           ;psect for function _strlen
  8786  0A4C                     _strlen:
  8787                           
  8788                           ;incstack = 0
  8789                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  8790                           ;strlen@s stored from wreg
  8791  0A4C  0020               	movlb	0	; select bank0
  8792  0A4D  00A4               	movwf	strlen@s
  8793  0A4E                     l5219:
  8794  0A4E  0824               	movf	strlen@s,w
  8795  0A4F  00A2               	movwf	??_strlen
  8796  0A50  0822               	movf	??_strlen,w
  8797  0A51  00A3               	movwf	strlen@a
  8798  0A52  2A57               	goto	l5223
  8799  0A53                     l5221:
  8800  0A53  3001               	movlw	1
  8801  0A54  00A2               	movwf	??_strlen
  8802  0A55  0822               	movf	??_strlen,w
  8803  0A56  07A4               	addwf	strlen@s,f
  8804  0A57                     l5223:
  8805  0A57  0824               	movf	strlen@s,w
  8806  0A58  0086               	movwf	6
  8807  0A59  3001               	movlw	1	; select bank2/3
  8808  0A5A  0087               	movwf	7
  8809  0A5B  0801               	movf	1,w
  8810  0A5C  1D03               	btfss	3,2
  8811  0A5D  2A5F               	goto	u4171
  8812  0A5E  2A60               	goto	u4170
  8813  0A5F                     u4171:
  8814  0A5F  2A53               	goto	l5221
  8815  0A60                     u4170:
  8816  0A60                     l5225:
  8817  0A60  0823               	movf	strlen@a,w
  8818  0A61  0224               	subwf	strlen@s,w
  8819  0A62  00A0               	movwf	?_strlen
  8820  0A63  01A1               	clrf	?_strlen+1
  8821  0A64  1BA0               	btfsc	?_strlen,7
  8822  0A65  03A1               	decf	?_strlen+1,f
  8823  0A66                     l2075:
  8824  0A66  0008               	return
  8825  0A67                     __end_of_strlen:
  8826                           
  8827                           	psect	text7
  8828  0B6C                     __ptext7:	
  8829 ;; *************** function _fputs *****************
  8830 ;; Defined at:
  8831 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  8832 ;; Parameters:    Size  Location     Type
  8833 ;;  s               1    wreg     PTR const unsigned char 
  8834 ;;		 -> dbuf(32), 
  8835 ;;  fp              1    8[BANK0 ] PTR struct _IO_FILE
  8836 ;;		 -> sprintf@f(5), 
  8837 ;; Auto vars:     Size  Location     Type
  8838 ;;  s               1   15[BANK0 ] PTR const unsigned char 
  8839 ;;		 -> dbuf(32), 
  8840 ;;  i               2   13[BANK0 ] int 
  8841 ;;  c               1   12[BANK0 ] unsigned char 
  8842 ;; Return value:  Size  Location     Type
  8843 ;;                  2    8[BANK0 ] int 
  8844 ;; Registers used:
  8845 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8846 ;; Tracked objects:
  8847 ;;		On entry : 0/0
  8848 ;;		On exit  : 0/0
  8849 ;;		Unchanged: 0/0
  8850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8851 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8852 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8853 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8854 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8855 ;;Total ram usage:        8 bytes
  8856 ;; Hardware stack levels used: 1
  8857 ;; Hardware stack levels required when called: 7
  8858 ;; This function calls:
  8859 ;;		_fputc
  8860 ;; This function is called by:
  8861 ;;		_pad
  8862 ;; This function uses a non-reentrant model
  8863 ;;
  8864                           
  8865                           
  8866                           ;psect for function _fputs
  8867  0B6C                     _fputs:
  8868                           
  8869                           ;incstack = 0
  8870                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8871                           ;fputs@s stored from wreg
  8872  0B6C  0020               	movlb	0	; select bank0
  8873  0B6D  00AF               	movwf	fputs@s
  8874  0B6E                     l5211:
  8875  0B6E  01AD               	clrf	fputs@i
  8876  0B6F  01AE               	clrf	fputs@i+1
  8877  0B70  2B84               	goto	l5217
  8878  0B71                     l5213:
  8879  0B71  082C               	movf	fputs@c,w
  8880  0B72  00A9               	movwf	??_fputs
  8881  0B73  01AA               	clrf	??_fputs+1
  8882  0B74  0829               	movf	??_fputs,w
  8883  0B75  00A0               	movwf	fputc@c
  8884  0B76  082A               	movf	??_fputs+1,w
  8885  0B77  00A1               	movwf	fputc@c+1
  8886  0B78  0828               	movf	fputs@fp,w
  8887  0B79  00AB               	movwf	??_fputs+2
  8888  0B7A  082B               	movf	??_fputs+2,w
  8889  0B7B  00A2               	movwf	fputc@fp
  8890  0B7C  318C  2409  318B   	fcall	_fputc
  8891  0B7F                     l5215:
  8892  0B7F  3001               	movlw	1
  8893  0B80  0020               	movlb	0	; select bank0
  8894  0B81  07AD               	addwf	fputs@i,f
  8895  0B82  3000               	movlw	0
  8896  0B83  3DAE               	addwfc	fputs@i+1,f
  8897  0B84                     l5217:
  8898  0B84  082D               	movf	fputs@i,w
  8899  0B85  072F               	addwf	fputs@s,w
  8900  0B86  00A9               	movwf	??_fputs
  8901  0B87  0829               	movf	??_fputs,w
  8902  0B88  0086               	movwf	6
  8903  0B89  3001               	movlw	1	; select bank2/3
  8904  0B8A  0087               	movwf	7
  8905  0B8B  0801               	movf	1,w
  8906  0B8C  00AA               	movwf	??_fputs+1
  8907  0B8D  082A               	movf	??_fputs+1,w
  8908  0B8E  00AC               	movwf	fputs@c
  8909  0B8F  082C               	movf	fputs@c,w
  8910  0B90  1D03               	btfss	3,2
  8911  0B91  2B93               	goto	u4161
  8912  0B92  2B94               	goto	u4160
  8913  0B93                     u4161:
  8914  0B93  2B71               	goto	l5213
  8915  0B94                     u4160:
  8916  0B94                     l2066:
  8917  0B94  0008               	return
  8918  0B95                     __end_of_fputs:
  8919                           
  8920                           	psect	text8
  8921  0C09                     __ptext8:	
  8922 ;; *************** function _fputc *****************
  8923 ;; Defined at:
  8924 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  8925 ;; Parameters:    Size  Location     Type
  8926 ;;  c               2    0[BANK0 ] int 
  8927 ;;  fp              1    2[BANK0 ] PTR struct _IO_FILE
  8928 ;;		 -> sprintf@f(5), 
  8929 ;; Auto vars:     Size  Location     Type
  8930 ;;		None
  8931 ;; Return value:  Size  Location     Type
  8932 ;;                  2    0[BANK0 ] int 
  8933 ;; Registers used:
  8934 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8935 ;; Tracked objects:
  8936 ;;		On entry : 0/0
  8937 ;;		On exit  : 0/0
  8938 ;;		Unchanged: 0/0
  8939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8940 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8942 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8943 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8944 ;;Total ram usage:        8 bytes
  8945 ;; Hardware stack levels used: 1
  8946 ;; Hardware stack levels required when called: 6
  8947 ;; This function calls:
  8948 ;;		_putch
  8949 ;; This function is called by:
  8950 ;;		_pad
  8951 ;;		_vfpfcnvrt
  8952 ;;		_fputs
  8953 ;; This function uses a non-reentrant model
  8954 ;;
  8955                           
  8956                           
  8957                           ;psect for function _fputc
  8958  0C09                     _fputc:
  8959  0C09                     l5195:	
  8960                           ;incstack = 0
  8961                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8962                           
  8963  0C09  0020               	movlb	0	; select bank0
  8964  0C0A  0822               	movf	fputc@fp,w
  8965  0C0B  1903               	btfsc	3,2
  8966  0C0C  2C0E               	goto	u4121
  8967  0C0D  2C0F               	goto	u4120
  8968  0C0E                     u4121:
  8969  0C0E  2C14               	goto	l5199
  8970  0C0F                     u4120:
  8971  0C0F                     l5197:
  8972  0C0F  0822               	movf	fputc@fp,w
  8973  0C10  1D03               	btfss	3,2
  8974  0C11  2C13               	goto	u4131
  8975  0C12  2C14               	goto	u4130
  8976  0C13                     u4131:
  8977  0C13  2C19               	goto	l5201
  8978  0C14                     u4130:
  8979  0C14                     l5199:
  8980  0C14  0820               	movf	fputc@c,w
  8981  0C15  3187  27FE  318C   	fcall	_putch
  8982  0C18  2C59               	goto	l2058
  8983  0C19                     l5201:
  8984  0C19  0822               	movf	fputc@fp,w
  8985  0C1A  3E03               	addlw	3
  8986  0C1B  0086               	movwf	6
  8987  0C1C  0187               	clrf	7
  8988  0C1D  0016               	moviw fsr1++
  8989  0C1E  0401               	iorwf	1,w
  8990  0C1F  1903               	btfsc	3,2
  8991  0C20  2C22               	goto	u4141
  8992  0C21  2C23               	goto	u4140
  8993  0C22                     u4141:
  8994  0C22  2C40               	goto	l5205
  8995  0C23                     u4140:
  8996  0C23                     l5203:
  8997  0C23  0822               	movf	fputc@fp,w
  8998  0C24  3E03               	addlw	3
  8999  0C25  0086               	movwf	6
  9000  0C26  0187               	clrf	7
  9001  0C27  3F40               	moviw [0]fsr1
  9002  0C28  00A3               	movwf	??_fputc
  9003  0C29  3F41               	moviw [1]fsr1
  9004  0C2A  00A4               	movwf	??_fputc+1
  9005  0C2B  0A22               	incf	fputc@fp,w
  9006  0C2C  0086               	movwf	6
  9007  0C2D  0187               	clrf	7
  9008  0C2E  3F40               	moviw [0]fsr1
  9009  0C2F  00A5               	movwf	??_fputc+2
  9010  0C30  3F41               	moviw [1]fsr1
  9011  0C31  00A6               	movwf	??_fputc+3
  9012  0C32  0826               	movf	??_fputc+3,w
  9013  0C33  3A80               	xorlw	128
  9014  0C34  00A7               	movwf	??_fputc+4
  9015  0C35  0824               	movf	??_fputc+1,w
  9016  0C36  3A80               	xorlw	128
  9017  0C37  0227               	subwf	??_fputc+4,w
  9018  0C38  1D03               	skipz
  9019  0C39  2C3C               	goto	u4155
  9020  0C3A  0823               	movf	??_fputc,w
  9021  0C3B  0225               	subwf	??_fputc+2,w
  9022  0C3C                     u4155:
  9023  0C3C  1803               	skipnc
  9024  0C3D  2C3F               	goto	u4151
  9025  0C3E  2C40               	goto	u4150
  9026  0C3F                     u4151:
  9027  0C3F  2C59               	goto	l2058
  9028  0C40                     u4150:
  9029  0C40                     l5205:
  9030  0C40  0020               	movlb	0	; select bank0
  9031  0C41  0820               	movf	fputc@c,w
  9032  0C42  00A3               	movwf	??_fputc
  9033  0C43  0822               	movf	fputc@fp,w
  9034  0C44  0086               	movwf	6
  9035  0C45  0187               	clrf	7
  9036  0C46  0A22               	incf	fputc@fp,w
  9037  0C47  0084               	movwf	4
  9038  0C48  0185               	clrf	5
  9039  0C49  0800               	movf	0,w
  9040  0C4A  0701               	addwf	1,w
  9041  0C4B  00A4               	movwf	??_fputc+1
  9042  0C4C  0824               	movf	??_fputc+1,w
  9043  0C4D  0086               	movwf	6
  9044  0C4E  0187               	clrf	7
  9045  0C4F  0823               	movf	??_fputc,w
  9046  0C50  0081               	movwf	1
  9047  0C51                     l5207:
  9048  0C51  0A22               	incf	fputc@fp,w
  9049  0C52  0086               	movwf	6
  9050  0C53  0187               	clrf	7
  9051  0C54  3001               	movlw	1
  9052  0C55  0781               	addwf	1,f
  9053  0C56  3141               	addfsr 1,1
  9054  0C57  1803               	skipnc
  9055  0C58  0A81               	incf	1,f
  9056  0C59                     l2058:
  9057  0C59  0008               	return
  9058  0C5A                     __end_of_fputc:
  9059                           
  9060                           	psect	text9
  9061  07FE                     __ptext9:	
  9062 ;; *************** function _putch *****************
  9063 ;; Defined at:
  9064 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  9065 ;; Parameters:    Size  Location     Type
  9066 ;;  c               1    wreg     unsigned char 
  9067 ;; Auto vars:     Size  Location     Type
  9068 ;;  c               1    0[COMMON] unsigned char 
  9069 ;; Return value:  Size  Location     Type
  9070 ;;                  1    wreg      void 
  9071 ;; Registers used:
  9072 ;;		wreg
  9073 ;; Tracked objects:
  9074 ;;		On entry : 0/0
  9075 ;;		On exit  : 0/0
  9076 ;;		Unchanged: 0/0
  9077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9082 ;;Total ram usage:        0 bytes
  9083 ;; Hardware stack levels used: 1
  9084 ;; Hardware stack levels required when called: 5
  9085 ;; This function calls:
  9086 ;;		Nothing
  9087 ;; This function is called by:
  9088 ;;		_fputc
  9089 ;; This function uses a non-reentrant model
  9090 ;;
  9091                           
  9092                           
  9093                           ;psect for function _putch
  9094  07FE                     _putch:
  9095  07FE                     l2069:	
  9096                           ;incstack = 0
  9097                           ; Regs used in _putch: [wreg]
  9098                           
  9099  07FE  0008               	return
  9100  07FF                     __end_of_putch:
  9101                           
  9102                           	psect	text10
  9103  0A83                     __ptext10:	
  9104 ;; *************** function _abs *****************
  9105 ;; Defined at:
  9106 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  9107 ;; Parameters:    Size  Location     Type
  9108 ;;  a               2   19[BANK0 ] int 
  9109 ;; Auto vars:     Size  Location     Type
  9110 ;;		None
  9111 ;; Return value:  Size  Location     Type
  9112 ;;                  2   19[BANK0 ] int 
  9113 ;; Registers used:
  9114 ;;		wreg, status,2, status,0
  9115 ;; Tracked objects:
  9116 ;;		On entry : 0/0
  9117 ;;		On exit  : 0/0
  9118 ;;		Unchanged: 0/0
  9119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9120 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9122 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9123 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9124 ;;Total ram usage:        4 bytes
  9125 ;; Hardware stack levels used: 1
  9126 ;; Hardware stack levels required when called: 5
  9127 ;; This function calls:
  9128 ;;		Nothing
  9129 ;; This function is called by:
  9130 ;;		_dtoa
  9131 ;; This function uses a non-reentrant model
  9132 ;;
  9133                           
  9134                           
  9135                           ;psect for function _abs
  9136  0A83                     _abs:
  9137  0A83                     l3897:	
  9138                           ;incstack = 0
  9139                           ; Regs used in _abs: [wreg+status,2+status,0]
  9140                           
  9141  0A83  0020               	movlb	0	; select bank0
  9142  0A84  0834               	movf	abs@a+1,w
  9143  0A85  3A80               	xorlw	128
  9144  0A86  00B5               	movwf	??_abs
  9145  0A87  3080               	movlw	128
  9146  0A88  0235               	subwf	??_abs,w
  9147  0A89  1D03               	skipz
  9148  0A8A  2A8D               	goto	u2445
  9149  0A8B  3001               	movlw	1
  9150  0A8C  0233               	subwf	abs@a,w
  9151  0A8D                     u2445:
  9152  0A8D  1803               	skipnc
  9153  0A8E  2A90               	goto	u2441
  9154  0A8F  2A91               	goto	u2440
  9155  0A90                     u2441:
  9156  0A90  2A9E               	goto	l1998
  9157  0A91                     u2440:
  9158  0A91                     l3899:
  9159  0A91  0020               	movlb	0	; select bank0
  9160  0A92  0933               	comf	abs@a,w
  9161  0A93  00B5               	movwf	??_abs
  9162  0A94  0934               	comf	abs@a+1,w
  9163  0A95  00B6               	movwf	??_abs+1
  9164  0A96  0AB5               	incf	??_abs,f
  9165  0A97  1903               	skipnz
  9166  0A98  0AB6               	incf	??_abs+1,f
  9167  0A99  0835               	movf	??_abs,w
  9168  0A9A  00B3               	movwf	?_abs
  9169  0A9B  0836               	movf	??_abs+1,w
  9170  0A9C  00B4               	movwf	?_abs+1
  9171  0A9D  2A9E               	goto	l2001
  9172  0A9E                     l1998:
  9173  0A9E                     l2001:
  9174  0A9E  0008               	return
  9175  0A9F                     __end_of_abs:
  9176                           
  9177                           	psect	text11
  9178  0F13                     __ptext11:	
  9179 ;; *************** function ___aomod *****************
  9180 ;; Defined at:
  9181 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  9182 ;; Parameters:    Size  Location     Type
  9183 ;;  divisor         8    0[BANK0 ] long long 
  9184 ;;  dividend        8    8[BANK0 ] long long 
  9185 ;; Auto vars:     Size  Location     Type
  9186 ;;  sign            1   18[BANK0 ] unsigned char 
  9187 ;;  counter         1   17[BANK0 ] unsigned char 
  9188 ;; Return value:  Size  Location     Type
  9189 ;;                  8    0[BANK0 ] long long 
  9190 ;; Registers used:
  9191 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9192 ;; Tracked objects:
  9193 ;;		On entry : 0/0
  9194 ;;		On exit  : 0/0
  9195 ;;		Unchanged: 0/0
  9196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9197 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9198 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9199 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9200 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9201 ;;Total ram usage:       19 bytes
  9202 ;; Hardware stack levels used: 1
  9203 ;; Hardware stack levels required when called: 5
  9204 ;; This function calls:
  9205 ;;		Nothing
  9206 ;; This function is called by:
  9207 ;;		_dtoa
  9208 ;; This function uses a non-reentrant model
  9209 ;;
  9210                           
  9211                           
  9212                           ;psect for function ___aomod
  9213  0F13                     ___aomod:
  9214  0F13                     l5281:	
  9215                           ;incstack = 0
  9216                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  9217                           
  9218  0F13  0020               	movlb	0	; select bank0
  9219  0F14  01B2               	clrf	___aomod@sign
  9220  0F15                     l5283:
  9221  0F15  3028               	movlw	low ___aomod@dividend
  9222  0F16  0086               	movwf	6
  9223  0F17  3000               	movlw	high ___aomod@dividend
  9224  0F18  0087               	movwf	7
  9225  0F19  3F47               	moviw [7]fsr1
  9226  0F1A  00B0               	movwf	??___aomod
  9227  0F1B  1FB0               	btfss	??___aomod,7
  9228  0F1C  2F1E               	goto	u4331
  9229  0F1D  2F1F               	goto	u4330
  9230  0F1E                     u4331:
  9231  0F1E  2F41               	goto	l5287
  9232  0F1F                     u4330:
  9233  0F1F                     l5285:
  9234  0F1F  0020               	movlb	0	; select bank0
  9235  0F20  09A8               	comf	___aomod@dividend,f
  9236  0F21  09A9               	comf	___aomod@dividend+1,f
  9237  0F22  09AA               	comf	___aomod@dividend+2,f
  9238  0F23  09AB               	comf	___aomod@dividend+3,f
  9239  0F24  09AC               	comf	___aomod@dividend+4,f
  9240  0F25  09AD               	comf	___aomod@dividend+5,f
  9241  0F26  09AE               	comf	___aomod@dividend+6,f
  9242  0F27  09AF               	comf	___aomod@dividend+7,f
  9243  0F28  0AA8               	incf	___aomod@dividend,f
  9244  0F29  1D03               	skipz
  9245  0F2A  2F3E               	goto	u434lld
  9246  0F2B  0AA9               	incf	___aomod@dividend+1,f
  9247  0F2C  1D03               	skipz
  9248  0F2D  2F3E               	goto	u434lld
  9249  0F2E  0AAA               	incf	___aomod@dividend+2,f
  9250  0F2F  1D03               	skipz
  9251  0F30  2F3E               	goto	u434lld
  9252  0F31  0AAB               	incf	___aomod@dividend+3,f
  9253  0F32  1D03               	skipz
  9254  0F33  2F3E               	goto	u434lld
  9255  0F34  0AAC               	incf	___aomod@dividend+4,f
  9256  0F35  1D03               	skipz
  9257  0F36  2F3E               	goto	u434lld
  9258  0F37  0AAD               	incf	___aomod@dividend+5,f
  9259  0F38  1D03               	skipz
  9260  0F39  2F3E               	goto	u434lld
  9261  0F3A  0AAE               	incf	___aomod@dividend+6,f
  9262  0F3B  1D03               	skipz
  9263  0F3C  2F3E               	goto	u434lld
  9264  0F3D  0AAF               	incf	___aomod@dividend+7,f
  9265  0F3E                     u434lld:
  9266  0F3E  0020               	movlb	0	; select bank0
  9267  0F3F  01B2               	clrf	___aomod@sign
  9268  0F40  0AB2               	incf	___aomod@sign,f
  9269  0F41                     l5287:
  9270  0F41  3020               	movlw	low ___aomod@divisor
  9271  0F42  0086               	movwf	6
  9272  0F43  3000               	movlw	high ___aomod@divisor
  9273  0F44  0087               	movwf	7
  9274  0F45  3F47               	moviw [7]fsr1
  9275  0F46  0020               	movlb	0	; select bank0
  9276  0F47  00B0               	movwf	??___aomod
  9277  0F48  1FB0               	btfss	??___aomod,7
  9278  0F49  2F4B               	goto	u4351
  9279  0F4A  2F4C               	goto	u4350
  9280  0F4B                     u4351:
  9281  0F4B  2F6B               	goto	l5291
  9282  0F4C                     u4350:
  9283  0F4C                     l5289:
  9284  0F4C  0020               	movlb	0	; select bank0
  9285  0F4D  09A0               	comf	___aomod@divisor,f
  9286  0F4E  09A1               	comf	___aomod@divisor+1,f
  9287  0F4F  09A2               	comf	___aomod@divisor+2,f
  9288  0F50  09A3               	comf	___aomod@divisor+3,f
  9289  0F51  09A4               	comf	___aomod@divisor+4,f
  9290  0F52  09A5               	comf	___aomod@divisor+5,f
  9291  0F53  09A6               	comf	___aomod@divisor+6,f
  9292  0F54  09A7               	comf	___aomod@divisor+7,f
  9293  0F55  0AA0               	incf	___aomod@divisor,f
  9294  0F56  1D03               	skipz
  9295  0F57  2F6B               	goto	u436lld
  9296  0F58  0AA1               	incf	___aomod@divisor+1,f
  9297  0F59  1D03               	skipz
  9298  0F5A  2F6B               	goto	u436lld
  9299  0F5B  0AA2               	incf	___aomod@divisor+2,f
  9300  0F5C  1D03               	skipz
  9301  0F5D  2F6B               	goto	u436lld
  9302  0F5E  0AA3               	incf	___aomod@divisor+3,f
  9303  0F5F  1D03               	skipz
  9304  0F60  2F6B               	goto	u436lld
  9305  0F61  0AA4               	incf	___aomod@divisor+4,f
  9306  0F62  1D03               	skipz
  9307  0F63  2F6B               	goto	u436lld
  9308  0F64  0AA5               	incf	___aomod@divisor+5,f
  9309  0F65  1D03               	skipz
  9310  0F66  2F6B               	goto	u436lld
  9311  0F67  0AA6               	incf	___aomod@divisor+6,f
  9312  0F68  1D03               	skipz
  9313  0F69  2F6B               	goto	u436lld
  9314  0F6A  0AA7               	incf	___aomod@divisor+7,f
  9315  0F6B                     u436lld:
  9316  0F6B                     l5291:
  9317  0F6B  0020               	movlb	0	; select bank0
  9318  0F6C  0820               	movf	___aomod@divisor,w
  9319  0F6D  0421               	iorwf	___aomod@divisor+1,w
  9320  0F6E  0422               	iorwf	___aomod@divisor+2,w
  9321  0F6F  0423               	iorwf	___aomod@divisor+3,w
  9322  0F70  0424               	iorwf	___aomod@divisor+4,w
  9323  0F71  0425               	iorwf	___aomod@divisor+5,w
  9324  0F72  0426               	iorwf	___aomod@divisor+6,w
  9325  0F73  0427               	iorwf	___aomod@divisor+7,w
  9326  0F74  1903               	skipnz
  9327  0F75  2F77               	goto	u4371
  9328  0F76  2F78               	goto	u4370
  9329  0F77                     u4371:
  9330  0F77  2FCB               	goto	l5307
  9331  0F78                     u4370:
  9332  0F78                     l5293:
  9333  0F78  01B1               	clrf	___aomod@counter
  9334  0F79  0AB1               	incf	___aomod@counter,f
  9335  0F7A  2F87               	goto	l5299
  9336  0F7B                     l5295:
  9337  0F7B  35A0               	lslf	___aomod@divisor,f
  9338  0F7C  0DA1               	rlf	___aomod@divisor+1,f
  9339  0F7D  0DA2               	rlf	___aomod@divisor+2,f
  9340  0F7E  0DA3               	rlf	___aomod@divisor+3,f
  9341  0F7F  0DA4               	rlf	___aomod@divisor+4,f
  9342  0F80  0DA5               	rlf	___aomod@divisor+5,f
  9343  0F81  0DA6               	rlf	___aomod@divisor+6,f
  9344  0F82  0DA7               	rlf	___aomod@divisor+7,f
  9345  0F83                     l5297:
  9346  0F83  3001               	movlw	1
  9347  0F84  00B0               	movwf	??___aomod
  9348  0F85  0830               	movf	??___aomod,w
  9349  0F86  07B1               	addwf	___aomod@counter,f
  9350  0F87                     l5299:
  9351  0F87  1FA7               	btfss	___aomod@divisor+7,7
  9352  0F88  2F8A               	goto	u4381
  9353  0F89  2F8B               	goto	u4380
  9354  0F8A                     u4381:
  9355  0F8A  2F7B               	goto	l5295
  9356  0F8B                     u4380:
  9357  0F8B                     l5301:
  9358  0F8B  0827               	movf	___aomod@divisor+7,w
  9359  0F8C  022F               	subwf	___aomod@dividend+7,w
  9360  0F8D  1D03               	skipz
  9361  0F8E  2FA9               	goto	u4395
  9362  0F8F  0826               	movf	___aomod@divisor+6,w
  9363  0F90  022E               	subwf	___aomod@dividend+6,w
  9364  0F91  1D03               	skipz
  9365  0F92  2FA9               	goto	u4395
  9366  0F93  0825               	movf	___aomod@divisor+5,w
  9367  0F94  022D               	subwf	___aomod@dividend+5,w
  9368  0F95  1D03               	skipz
  9369  0F96  2FA9               	goto	u4395
  9370  0F97  0824               	movf	___aomod@divisor+4,w
  9371  0F98  022C               	subwf	___aomod@dividend+4,w
  9372  0F99  1D03               	skipz
  9373  0F9A  2FA9               	goto	u4395
  9374  0F9B  0823               	movf	___aomod@divisor+3,w
  9375  0F9C  022B               	subwf	___aomod@dividend+3,w
  9376  0F9D  1D03               	skipz
  9377  0F9E  2FA9               	goto	u4395
  9378  0F9F  0822               	movf	___aomod@divisor+2,w
  9379  0FA0  022A               	subwf	___aomod@dividend+2,w
  9380  0FA1  1D03               	skipz
  9381  0FA2  2FA9               	goto	u4395
  9382  0FA3  0821               	movf	___aomod@divisor+1,w
  9383  0FA4  0229               	subwf	___aomod@dividend+1,w
  9384  0FA5  1D03               	skipz
  9385  0FA6  2FA9               	goto	u4395
  9386  0FA7  0820               	movf	___aomod@divisor,w
  9387  0FA8  0228               	subwf	___aomod@dividend,w
  9388  0FA9                     u4395:
  9389  0FA9  1C03               	skipc
  9390  0FAA  2FAC               	goto	u4391
  9391  0FAB  2FAD               	goto	u4390
  9392  0FAC                     u4391:
  9393  0FAC  2FBD               	goto	l5305
  9394  0FAD                     u4390:
  9395  0FAD                     l5303:
  9396  0FAD  0820               	movf	___aomod@divisor,w
  9397  0FAE  02A8               	subwf	___aomod@dividend,f
  9398  0FAF  0821               	movf	___aomod@divisor+1,w
  9399  0FB0  3BA9               	subwfb	___aomod@dividend+1,f
  9400  0FB1  0822               	movf	___aomod@divisor+2,w
  9401  0FB2  3BAA               	subwfb	___aomod@dividend+2,f
  9402  0FB3  0823               	movf	___aomod@divisor+3,w
  9403  0FB4  3BAB               	subwfb	___aomod@dividend+3,f
  9404  0FB5  0824               	movf	___aomod@divisor+4,w
  9405  0FB6  3BAC               	subwfb	___aomod@dividend+4,f
  9406  0FB7  0825               	movf	___aomod@divisor+5,w
  9407  0FB8  3BAD               	subwfb	___aomod@dividend+5,f
  9408  0FB9  0826               	movf	___aomod@divisor+6,w
  9409  0FBA  3BAE               	subwfb	___aomod@dividend+6,f
  9410  0FBB  0827               	movf	___aomod@divisor+7,w
  9411  0FBC  3BAF               	subwfb	___aomod@dividend+7,f
  9412  0FBD                     l5305:
  9413  0FBD  36A7               	lsrf	___aomod@divisor+7,f
  9414  0FBE  0CA6               	rrf	___aomod@divisor+6,f
  9415  0FBF  0CA5               	rrf	___aomod@divisor+5,f
  9416  0FC0  0CA4               	rrf	___aomod@divisor+4,f
  9417  0FC1  0CA3               	rrf	___aomod@divisor+3,f
  9418  0FC2  0CA2               	rrf	___aomod@divisor+2,f
  9419  0FC3  0CA1               	rrf	___aomod@divisor+1,f
  9420  0FC4  0CA0               	rrf	___aomod@divisor,f
  9421  0FC5  3001               	movlw	1
  9422  0FC6  02B1               	subwf	___aomod@counter,f
  9423  0FC7  1D03               	btfss	3,2
  9424  0FC8  2FCA               	goto	u4401
  9425  0FC9  2FCB               	goto	u4400
  9426  0FCA                     u4401:
  9427  0FCA  2F8B               	goto	l5301
  9428  0FCB                     u4400:
  9429  0FCB                     l5307:
  9430  0FCB  0832               	movf	___aomod@sign,w
  9431  0FCC  1903               	btfsc	3,2
  9432  0FCD  2FCF               	goto	u4411
  9433  0FCE  2FD0               	goto	u4410
  9434  0FCF                     u4411:
  9435  0FCF  2FEE               	goto	l1546
  9436  0FD0                     u4410:
  9437  0FD0                     l5309:
  9438  0FD0  09A8               	comf	___aomod@dividend,f
  9439  0FD1  09A9               	comf	___aomod@dividend+1,f
  9440  0FD2  09AA               	comf	___aomod@dividend+2,f
  9441  0FD3  09AB               	comf	___aomod@dividend+3,f
  9442  0FD4  09AC               	comf	___aomod@dividend+4,f
  9443  0FD5  09AD               	comf	___aomod@dividend+5,f
  9444  0FD6  09AE               	comf	___aomod@dividend+6,f
  9445  0FD7  09AF               	comf	___aomod@dividend+7,f
  9446  0FD8  0AA8               	incf	___aomod@dividend,f
  9447  0FD9  1D03               	skipz
  9448  0FDA  2FEE               	goto	u442lld
  9449  0FDB  0AA9               	incf	___aomod@dividend+1,f
  9450  0FDC  1D03               	skipz
  9451  0FDD  2FEE               	goto	u442lld
  9452  0FDE  0AAA               	incf	___aomod@dividend+2,f
  9453  0FDF  1D03               	skipz
  9454  0FE0  2FEE               	goto	u442lld
  9455  0FE1  0AAB               	incf	___aomod@dividend+3,f
  9456  0FE2  1D03               	skipz
  9457  0FE3  2FEE               	goto	u442lld
  9458  0FE4  0AAC               	incf	___aomod@dividend+4,f
  9459  0FE5  1D03               	skipz
  9460  0FE6  2FEE               	goto	u442lld
  9461  0FE7  0AAD               	incf	___aomod@dividend+5,f
  9462  0FE8  1D03               	skipz
  9463  0FE9  2FEE               	goto	u442lld
  9464  0FEA  0AAE               	incf	___aomod@dividend+6,f
  9465  0FEB  1D03               	skipz
  9466  0FEC  2FEE               	goto	u442lld
  9467  0FED  0AAF               	incf	___aomod@dividend+7,f
  9468  0FEE                     u442lld:
  9469  0FEE                     l1546:
  9470  0FEE  0020               	movlb	0	; select bank0
  9471  0FEF  0828               	movf	___aomod@dividend,w
  9472  0FF0  00A0               	movwf	?___aomod
  9473  0FF1  0829               	movf	___aomod@dividend+1,w
  9474  0FF2  00A1               	movwf	?___aomod+1
  9475  0FF3  082A               	movf	___aomod@dividend+2,w
  9476  0FF4  00A2               	movwf	?___aomod+2
  9477  0FF5  082B               	movf	___aomod@dividend+3,w
  9478  0FF6  00A3               	movwf	?___aomod+3
  9479  0FF7  082C               	movf	___aomod@dividend+4,w
  9480  0FF8  00A4               	movwf	?___aomod+4
  9481  0FF9  082D               	movf	___aomod@dividend+5,w
  9482  0FFA  00A5               	movwf	?___aomod+5
  9483  0FFB  082E               	movf	___aomod@dividend+6,w
  9484  0FFC  00A6               	movwf	?___aomod+6
  9485  0FFD  082F               	movf	___aomod@dividend+7,w
  9486  0FFE  00A7               	movwf	?___aomod+7
  9487  0FFF                     l1547:
  9488  0FFF  0008               	return
  9489  1000                     __end_of___aomod:
  9490                           
  9491                           	psect	text12
  9492  060F                     __ptext12:	
  9493 ;; *************** function ___aodiv *****************
  9494 ;; Defined at:
  9495 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  9496 ;; Parameters:    Size  Location     Type
  9497 ;;  divisor         8    0[BANK0 ] long long 
  9498 ;;  dividend        8    8[BANK0 ] long long 
  9499 ;; Auto vars:     Size  Location     Type
  9500 ;;  quotient        8   19[BANK0 ] long long 
  9501 ;;  sign            1   18[BANK0 ] unsigned char 
  9502 ;;  counter         1   17[BANK0 ] unsigned char 
  9503 ;; Return value:  Size  Location     Type
  9504 ;;                  8    0[BANK0 ] long long 
  9505 ;; Registers used:
  9506 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9507 ;; Tracked objects:
  9508 ;;		On entry : 0/0
  9509 ;;		On exit  : 0/0
  9510 ;;		Unchanged: 0/0
  9511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9512 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9513 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9514 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9515 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9516 ;;Total ram usage:       27 bytes
  9517 ;; Hardware stack levels used: 1
  9518 ;; Hardware stack levels required when called: 5
  9519 ;; This function calls:
  9520 ;;		Nothing
  9521 ;; This function is called by:
  9522 ;;		_dtoa
  9523 ;; This function uses a non-reentrant model
  9524 ;;
  9525                           
  9526                           
  9527                           ;psect for function ___aodiv
  9528  060F                     ___aodiv:
  9529  060F                     l5243:	
  9530                           ;incstack = 0
  9531                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  9532                           
  9533  060F  0020               	movlb	0	; select bank0
  9534  0610  01B2               	clrf	___aodiv@sign
  9535  0611                     l5245:
  9536  0611  3020               	movlw	low ___aodiv@divisor
  9537  0612  0086               	movwf	6
  9538  0613  3000               	movlw	high ___aodiv@divisor
  9539  0614  0087               	movwf	7
  9540  0615  3F47               	moviw [7]fsr1
  9541  0616  00B0               	movwf	??___aodiv
  9542  0617  1FB0               	btfss	??___aodiv,7
  9543  0618  2E1A               	goto	u4221
  9544  0619  2E1B               	goto	u4220
  9545  061A                     u4221:
  9546  061A  2E3D               	goto	l5249
  9547  061B                     u4220:
  9548  061B                     l5247:
  9549  061B  0020               	movlb	0	; select bank0
  9550  061C  09A0               	comf	___aodiv@divisor,f
  9551  061D  09A1               	comf	___aodiv@divisor+1,f
  9552  061E  09A2               	comf	___aodiv@divisor+2,f
  9553  061F  09A3               	comf	___aodiv@divisor+3,f
  9554  0620  09A4               	comf	___aodiv@divisor+4,f
  9555  0621  09A5               	comf	___aodiv@divisor+5,f
  9556  0622  09A6               	comf	___aodiv@divisor+6,f
  9557  0623  09A7               	comf	___aodiv@divisor+7,f
  9558  0624  0AA0               	incf	___aodiv@divisor,f
  9559  0625  1D03               	skipz
  9560  0626  2E3A               	goto	u423lld
  9561  0627  0AA1               	incf	___aodiv@divisor+1,f
  9562  0628  1D03               	skipz
  9563  0629  2E3A               	goto	u423lld
  9564  062A  0AA2               	incf	___aodiv@divisor+2,f
  9565  062B  1D03               	skipz
  9566  062C  2E3A               	goto	u423lld
  9567  062D  0AA3               	incf	___aodiv@divisor+3,f
  9568  062E  1D03               	skipz
  9569  062F  2E3A               	goto	u423lld
  9570  0630  0AA4               	incf	___aodiv@divisor+4,f
  9571  0631  1D03               	skipz
  9572  0632  2E3A               	goto	u423lld
  9573  0633  0AA5               	incf	___aodiv@divisor+5,f
  9574  0634  1D03               	skipz
  9575  0635  2E3A               	goto	u423lld
  9576  0636  0AA6               	incf	___aodiv@divisor+6,f
  9577  0637  1D03               	skipz
  9578  0638  2E3A               	goto	u423lld
  9579  0639  0AA7               	incf	___aodiv@divisor+7,f
  9580  063A                     u423lld:
  9581  063A  0020               	movlb	0	; select bank0
  9582  063B  01B2               	clrf	___aodiv@sign
  9583  063C  0AB2               	incf	___aodiv@sign,f
  9584  063D                     l5249:
  9585  063D  3028               	movlw	low ___aodiv@dividend
  9586  063E  0086               	movwf	6
  9587  063F  3000               	movlw	high ___aodiv@dividend
  9588  0640  0087               	movwf	7
  9589  0641  3F47               	moviw [7]fsr1
  9590  0642  0020               	movlb	0	; select bank0
  9591  0643  00B0               	movwf	??___aodiv
  9592  0644  1FB0               	btfss	??___aodiv,7
  9593  0645  2E47               	goto	u4241
  9594  0646  2E48               	goto	u4240
  9595  0647                     u4241:
  9596  0647  2E6C               	goto	l5255
  9597  0648                     u4240:
  9598  0648                     l5251:
  9599  0648  0020               	movlb	0	; select bank0
  9600  0649  09A8               	comf	___aodiv@dividend,f
  9601  064A  09A9               	comf	___aodiv@dividend+1,f
  9602  064B  09AA               	comf	___aodiv@dividend+2,f
  9603  064C  09AB               	comf	___aodiv@dividend+3,f
  9604  064D  09AC               	comf	___aodiv@dividend+4,f
  9605  064E  09AD               	comf	___aodiv@dividend+5,f
  9606  064F  09AE               	comf	___aodiv@dividend+6,f
  9607  0650  09AF               	comf	___aodiv@dividend+7,f
  9608  0651  0AA8               	incf	___aodiv@dividend,f
  9609  0652  1D03               	skipz
  9610  0653  2E67               	goto	u425lld
  9611  0654  0AA9               	incf	___aodiv@dividend+1,f
  9612  0655  1D03               	skipz
  9613  0656  2E67               	goto	u425lld
  9614  0657  0AAA               	incf	___aodiv@dividend+2,f
  9615  0658  1D03               	skipz
  9616  0659  2E67               	goto	u425lld
  9617  065A  0AAB               	incf	___aodiv@dividend+3,f
  9618  065B  1D03               	skipz
  9619  065C  2E67               	goto	u425lld
  9620  065D  0AAC               	incf	___aodiv@dividend+4,f
  9621  065E  1D03               	skipz
  9622  065F  2E67               	goto	u425lld
  9623  0660  0AAD               	incf	___aodiv@dividend+5,f
  9624  0661  1D03               	skipz
  9625  0662  2E67               	goto	u425lld
  9626  0663  0AAE               	incf	___aodiv@dividend+6,f
  9627  0664  1D03               	skipz
  9628  0665  2E67               	goto	u425lld
  9629  0666  0AAF               	incf	___aodiv@dividend+7,f
  9630  0667                     u425lld:
  9631  0667                     l5253:
  9632  0667  3001               	movlw	1
  9633  0668  0020               	movlb	0	; select bank0
  9634  0669  00B0               	movwf	??___aodiv
  9635  066A  0830               	movf	??___aodiv,w
  9636  066B  06B2               	xorwf	___aodiv@sign,f
  9637  066C                     l5255:
  9638  066C  3033               	movlw	low ___aodiv@quotient
  9639  066D  0086               	movwf	6
  9640  066E  3000               	movlw	high ___aodiv@quotient
  9641  066F  0087               	movwf	7
  9642  0670  3008               	movlw	8
  9643  0671  0020               	movlb	0	; select bank0
  9644  0672  00B0               	movwf	??___aodiv
  9645  0673  3000               	movlw	0
  9646  0674                     u4260:
  9647  0674  001E               	movwi fsr1++
  9648  0675  0BB0               	decfsz	??___aodiv,f
  9649  0676  2E74               	goto	u4260
  9650  0677                     l5257:
  9651  0677  0820               	movf	___aodiv@divisor,w
  9652  0678  0421               	iorwf	___aodiv@divisor+1,w
  9653  0679  0422               	iorwf	___aodiv@divisor+2,w
  9654  067A  0423               	iorwf	___aodiv@divisor+3,w
  9655  067B  0424               	iorwf	___aodiv@divisor+4,w
  9656  067C  0425               	iorwf	___aodiv@divisor+5,w
  9657  067D  0426               	iorwf	___aodiv@divisor+6,w
  9658  067E  0427               	iorwf	___aodiv@divisor+7,w
  9659  067F  1903               	skipnz
  9660  0680  2E82               	goto	u4271
  9661  0681  2E83               	goto	u4270
  9662  0682                     u4271:
  9663  0682  2EDF               	goto	l5277
  9664  0683                     u4270:
  9665  0683                     l5259:
  9666  0683  01B1               	clrf	___aodiv@counter
  9667  0684  0AB1               	incf	___aodiv@counter,f
  9668  0685  2E92               	goto	l5265
  9669  0686                     l5261:
  9670  0686  35A0               	lslf	___aodiv@divisor,f
  9671  0687  0DA1               	rlf	___aodiv@divisor+1,f
  9672  0688  0DA2               	rlf	___aodiv@divisor+2,f
  9673  0689  0DA3               	rlf	___aodiv@divisor+3,f
  9674  068A  0DA4               	rlf	___aodiv@divisor+4,f
  9675  068B  0DA5               	rlf	___aodiv@divisor+5,f
  9676  068C  0DA6               	rlf	___aodiv@divisor+6,f
  9677  068D  0DA7               	rlf	___aodiv@divisor+7,f
  9678  068E                     l5263:
  9679  068E  3001               	movlw	1
  9680  068F  00B0               	movwf	??___aodiv
  9681  0690  0830               	movf	??___aodiv,w
  9682  0691  07B1               	addwf	___aodiv@counter,f
  9683  0692                     l5265:
  9684  0692  1FA7               	btfss	___aodiv@divisor+7,7
  9685  0693  2E95               	goto	u4281
  9686  0694  2E96               	goto	u4280
  9687  0695                     u4281:
  9688  0695  2E86               	goto	l5261
  9689  0696                     u4280:
  9690  0696                     l5267:
  9691  0696  35B3               	lslf	___aodiv@quotient,f
  9692  0697  0DB4               	rlf	___aodiv@quotient+1,f
  9693  0698  0DB5               	rlf	___aodiv@quotient+2,f
  9694  0699  0DB6               	rlf	___aodiv@quotient+3,f
  9695  069A  0DB7               	rlf	___aodiv@quotient+4,f
  9696  069B  0DB8               	rlf	___aodiv@quotient+5,f
  9697  069C  0DB9               	rlf	___aodiv@quotient+6,f
  9698  069D  0DBA               	rlf	___aodiv@quotient+7,f
  9699  069E                     l5269:
  9700  069E  0827               	movf	___aodiv@divisor+7,w
  9701  069F  022F               	subwf	___aodiv@dividend+7,w
  9702  06A0  1D03               	skipz
  9703  06A1  2EBC               	goto	u4295
  9704  06A2  0826               	movf	___aodiv@divisor+6,w
  9705  06A3  022E               	subwf	___aodiv@dividend+6,w
  9706  06A4  1D03               	skipz
  9707  06A5  2EBC               	goto	u4295
  9708  06A6  0825               	movf	___aodiv@divisor+5,w
  9709  06A7  022D               	subwf	___aodiv@dividend+5,w
  9710  06A8  1D03               	skipz
  9711  06A9  2EBC               	goto	u4295
  9712  06AA  0824               	movf	___aodiv@divisor+4,w
  9713  06AB  022C               	subwf	___aodiv@dividend+4,w
  9714  06AC  1D03               	skipz
  9715  06AD  2EBC               	goto	u4295
  9716  06AE  0823               	movf	___aodiv@divisor+3,w
  9717  06AF  022B               	subwf	___aodiv@dividend+3,w
  9718  06B0  1D03               	skipz
  9719  06B1  2EBC               	goto	u4295
  9720  06B2  0822               	movf	___aodiv@divisor+2,w
  9721  06B3  022A               	subwf	___aodiv@dividend+2,w
  9722  06B4  1D03               	skipz
  9723  06B5  2EBC               	goto	u4295
  9724  06B6  0821               	movf	___aodiv@divisor+1,w
  9725  06B7  0229               	subwf	___aodiv@dividend+1,w
  9726  06B8  1D03               	skipz
  9727  06B9  2EBC               	goto	u4295
  9728  06BA  0820               	movf	___aodiv@divisor,w
  9729  06BB  0228               	subwf	___aodiv@dividend,w
  9730  06BC                     u4295:
  9731  06BC  1C03               	skipc
  9732  06BD  2EBF               	goto	u4291
  9733  06BE  2EC0               	goto	u4290
  9734  06BF                     u4291:
  9735  06BF  2ED1               	goto	l5275
  9736  06C0                     u4290:
  9737  06C0                     l5271:
  9738  06C0  0820               	movf	___aodiv@divisor,w
  9739  06C1  02A8               	subwf	___aodiv@dividend,f
  9740  06C2  0821               	movf	___aodiv@divisor+1,w
  9741  06C3  3BA9               	subwfb	___aodiv@dividend+1,f
  9742  06C4  0822               	movf	___aodiv@divisor+2,w
  9743  06C5  3BAA               	subwfb	___aodiv@dividend+2,f
  9744  06C6  0823               	movf	___aodiv@divisor+3,w
  9745  06C7  3BAB               	subwfb	___aodiv@dividend+3,f
  9746  06C8  0824               	movf	___aodiv@divisor+4,w
  9747  06C9  3BAC               	subwfb	___aodiv@dividend+4,f
  9748  06CA  0825               	movf	___aodiv@divisor+5,w
  9749  06CB  3BAD               	subwfb	___aodiv@dividend+5,f
  9750  06CC  0826               	movf	___aodiv@divisor+6,w
  9751  06CD  3BAE               	subwfb	___aodiv@dividend+6,f
  9752  06CE  0827               	movf	___aodiv@divisor+7,w
  9753  06CF  3BAF               	subwfb	___aodiv@dividend+7,f
  9754  06D0                     l5273:
  9755  06D0  1433               	bsf	___aodiv@quotient,0
  9756  06D1                     l5275:
  9757  06D1  36A7               	lsrf	___aodiv@divisor+7,f
  9758  06D2  0CA6               	rrf	___aodiv@divisor+6,f
  9759  06D3  0CA5               	rrf	___aodiv@divisor+5,f
  9760  06D4  0CA4               	rrf	___aodiv@divisor+4,f
  9761  06D5  0CA3               	rrf	___aodiv@divisor+3,f
  9762  06D6  0CA2               	rrf	___aodiv@divisor+2,f
  9763  06D7  0CA1               	rrf	___aodiv@divisor+1,f
  9764  06D8  0CA0               	rrf	___aodiv@divisor,f
  9765  06D9  3001               	movlw	1
  9766  06DA  02B1               	subwf	___aodiv@counter,f
  9767  06DB  1D03               	btfss	3,2
  9768  06DC  2EDE               	goto	u4301
  9769  06DD  2EDF               	goto	u4300
  9770  06DE                     u4301:
  9771  06DE  2E96               	goto	l5267
  9772  06DF                     u4300:
  9773  06DF                     l5277:
  9774  06DF  0832               	movf	___aodiv@sign,w
  9775  06E0  1903               	btfsc	3,2
  9776  06E1  2EE3               	goto	u4311
  9777  06E2  2EE4               	goto	u4310
  9778  06E3                     u4311:
  9779  06E3  2F02               	goto	l1533
  9780  06E4                     u4310:
  9781  06E4                     l5279:
  9782  06E4  09B3               	comf	___aodiv@quotient,f
  9783  06E5  09B4               	comf	___aodiv@quotient+1,f
  9784  06E6  09B5               	comf	___aodiv@quotient+2,f
  9785  06E7  09B6               	comf	___aodiv@quotient+3,f
  9786  06E8  09B7               	comf	___aodiv@quotient+4,f
  9787  06E9  09B8               	comf	___aodiv@quotient+5,f
  9788  06EA  09B9               	comf	___aodiv@quotient+6,f
  9789  06EB  09BA               	comf	___aodiv@quotient+7,f
  9790  06EC  0AB3               	incf	___aodiv@quotient,f
  9791  06ED  1D03               	skipz
  9792  06EE  2F02               	goto	u432lld
  9793  06EF  0AB4               	incf	___aodiv@quotient+1,f
  9794  06F0  1D03               	skipz
  9795  06F1  2F02               	goto	u432lld
  9796  06F2  0AB5               	incf	___aodiv@quotient+2,f
  9797  06F3  1D03               	skipz
  9798  06F4  2F02               	goto	u432lld
  9799  06F5  0AB6               	incf	___aodiv@quotient+3,f
  9800  06F6  1D03               	skipz
  9801  06F7  2F02               	goto	u432lld
  9802  06F8  0AB7               	incf	___aodiv@quotient+4,f
  9803  06F9  1D03               	skipz
  9804  06FA  2F02               	goto	u432lld
  9805  06FB  0AB8               	incf	___aodiv@quotient+5,f
  9806  06FC  1D03               	skipz
  9807  06FD  2F02               	goto	u432lld
  9808  06FE  0AB9               	incf	___aodiv@quotient+6,f
  9809  06FF  1D03               	skipz
  9810  0700  2F02               	goto	u432lld
  9811  0701  0ABA               	incf	___aodiv@quotient+7,f
  9812  0702                     u432lld:
  9813  0702                     l1533:
  9814  0702  0020               	movlb	0	; select bank0
  9815  0703  0833               	movf	___aodiv@quotient,w
  9816  0704  00A0               	movwf	?___aodiv
  9817  0705  0834               	movf	___aodiv@quotient+1,w
  9818  0706  00A1               	movwf	?___aodiv+1
  9819  0707  0835               	movf	___aodiv@quotient+2,w
  9820  0708  00A2               	movwf	?___aodiv+2
  9821  0709  0836               	movf	___aodiv@quotient+3,w
  9822  070A  00A3               	movwf	?___aodiv+3
  9823  070B  0837               	movf	___aodiv@quotient+4,w
  9824  070C  00A4               	movwf	?___aodiv+4
  9825  070D  0838               	movf	___aodiv@quotient+5,w
  9826  070E  00A5               	movwf	?___aodiv+5
  9827  070F  0839               	movf	___aodiv@quotient+6,w
  9828  0710  00A6               	movwf	?___aodiv+6
  9829  0711  083A               	movf	___aodiv@quotient+7,w
  9830  0712  00A7               	movwf	?___aodiv+7
  9831  0713                     l1534:
  9832  0713  0008               	return
  9833  0714                     __end_of___aodiv:
  9834                           
  9835                           	psect	text13
  9836  0E64                     __ptext13:	
  9837 ;; *************** function _atoi *****************
  9838 ;; Defined at:
  9839 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  9840 ;; Parameters:    Size  Location     Type
  9841 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  9842 ;;		 -> STR_3(7), 
  9843 ;; Auto vars:     Size  Location     Type
  9844 ;;  n               2   19[BANK0 ] int 
  9845 ;;  neg             2   12[BANK0 ] int 
  9846 ;; Return value:  Size  Location     Type
  9847 ;;                  2    6[BANK0 ] int 
  9848 ;; Registers used:
  9849 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9850 ;; Tracked objects:
  9851 ;;		On entry : 0/0
  9852 ;;		On exit  : 0/0
  9853 ;;		Unchanged: 0/0
  9854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9855 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9856 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9857 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9858 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9859 ;;Total ram usage:       15 bytes
  9860 ;; Hardware stack levels used: 1
  9861 ;; Hardware stack levels required when called: 6
  9862 ;; This function calls:
  9863 ;;		___wmul
  9864 ;;		_isdigit
  9865 ;;		_isspace
  9866 ;; This function is called by:
  9867 ;;		_vfpfcnvrt
  9868 ;; This function uses a non-reentrant model
  9869 ;;
  9870                           
  9871                           
  9872                           ;psect for function _atoi
  9873  0E64                     _atoi:
  9874  0E64                     l5437:	
  9875                           ;incstack = 0
  9876                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9877                           
  9878  0E64  0020               	movlb	0	; select bank0
  9879  0E65  01B3               	clrf	atoi@n
  9880  0E66  01B4               	clrf	atoi@n+1
  9881  0E67  01AC               	clrf	atoi@neg
  9882  0E68  01AD               	clrf	atoi@neg+1
  9883  0E69  2E6E               	goto	l5441
  9884  0E6A                     l5439:
  9885  0E6A  3001               	movlw	1
  9886  0E6B  07A6               	addwf	atoi@s,f
  9887  0E6C  3000               	movlw	0
  9888  0E6D  3DA7               	addwfc	atoi@s+1,f
  9889  0E6E                     l5441:
  9890  0E6E  01B2               	clrf	_atoi$2828
  9891  0E6F  0AB2               	incf	_atoi$2828,f
  9892  0E70                     l5443:
  9893  0E70  0826               	movf	atoi@s,w
  9894  0E71  0084               	movwf	4
  9895  0E72  0827               	movf	atoi@s+1,w
  9896  0E73  0085               	movwf	5
  9897  0E74  0012               	moviw fsr0++
  9898  0E75  3A20               	xorlw	32
  9899  0E76  1903               	btfsc	3,2
  9900  0E77  2E79               	goto	u4761
  9901  0E78  2E7A               	goto	u4760
  9902  0E79                     u4761:
  9903  0E79  2E8F               	goto	l5449
  9904  0E7A                     u4760:
  9905  0E7A                     l5445:
  9906  0E7A  0826               	movf	atoi@s,w
  9907  0E7B  0084               	movwf	4
  9908  0E7C  0827               	movf	atoi@s+1,w
  9909  0E7D  0085               	movwf	5
  9910  0E7E  0800               	movf	0,w	;code access
  9911  0E7F  3EF7               	addlw	247
  9912  0E80  00A8               	movwf	??_atoi
  9913  0E81  30FF               	movlw	255
  9914  0E82  1803               	skipnc
  9915  0E83  3000               	movlw	0
  9916  0E84  00A9               	movwf	??_atoi+1
  9917  0E85  3000               	movlw	0
  9918  0E86  0229               	subwf	??_atoi+1,w
  9919  0E87  3005               	movlw	5
  9920  0E88  1903               	skipnz
  9921  0E89  0228               	subwf	??_atoi,w
  9922  0E8A  1C03               	skipc
  9923  0E8B  2E8D               	goto	u4771
  9924  0E8C  2E8E               	goto	u4770
  9925  0E8D                     u4771:
  9926  0E8D  2E8F               	goto	l5449
  9927  0E8E                     u4770:
  9928  0E8E                     l5447:
  9929  0E8E  01B2               	clrf	_atoi$2828
  9930  0E8F                     l5449:
  9931  0E8F  0832               	movf	_atoi$2828,w
  9932  0E90  00A8               	movwf	??_atoi
  9933  0E91  01A9               	clrf	??_atoi+1
  9934  0E92  0828               	movf	??_atoi,w
  9935  0E93  00AE               	movwf	_atoi$2827
  9936  0E94  0829               	movf	??_atoi+1,w
  9937  0E95  00AF               	movwf	_atoi$2827+1
  9938  0E96                     l5453:
  9939  0E96  082E               	movf	_atoi$2827,w
  9940  0E97  042F               	iorwf	_atoi$2827+1,w
  9941  0E98  1D03               	btfss	3,2
  9942  0E99  2E9B               	goto	u4781
  9943  0E9A  2E9C               	goto	u4780
  9944  0E9B                     u4781:
  9945  0E9B  2E6A               	goto	l5439
  9946  0E9C                     u4780:
  9947  0E9C  2EA6               	goto	l5457
  9948  0E9D                     l5455:
  9949  0E9D  3001               	movlw	1
  9950  0E9E  00AC               	movwf	atoi@neg
  9951  0E9F  3000               	movlw	0
  9952  0EA0  00AD               	movwf	atoi@neg+1
  9953  0EA1                     l2019:
  9954  0EA1  3001               	movlw	1
  9955  0EA2  07A6               	addwf	atoi@s,f
  9956  0EA3  3000               	movlw	0
  9957  0EA4  3DA7               	addwfc	atoi@s+1,f
  9958  0EA5  2EDA               	goto	l5463
  9959  0EA6                     l5457:
  9960  0EA6  0826               	movf	atoi@s,w
  9961  0EA7  0084               	movwf	4
  9962  0EA8  0827               	movf	atoi@s+1,w
  9963  0EA9  0085               	movwf	5
  9964  0EAA  0800               	movf	0,w	;code access
  9965  0EAB  00A8               	movwf	??_atoi
  9966  0EAC  01A9               	clrf	??_atoi+1
  9967                           
  9968                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9969                           ; Switch size 1, requested type "simple"
  9970                           ; Number of cases is 1, Range of values is 0 to 0
  9971                           ; switch strategies available:
  9972                           ; Name         Instructions Cycles
  9973                           ; simple_byte            4     3 (average)
  9974                           ; direct_byte            8     6 (fixed)
  9975                           ; jumptable            260     6 (fixed)
  9976                           ;	Chosen strategy is simple_byte
  9977  0EAD  0829               	movf	??_atoi+1,w
  9978  0EAE  3A00               	xorlw	0	; case 0
  9979  0EAF  1903               	skipnz
  9980  0EB0  2EB2               	goto	l5947
  9981  0EB1  2EDA               	goto	l5463
  9982  0EB2                     l5947:
  9983                           
  9984                           ; Switch size 1, requested type "simple"
  9985                           ; Number of cases is 2, Range of values is 43 to 45
  9986                           ; switch strategies available:
  9987                           ; Name         Instructions Cycles
  9988                           ; simple_byte            7     4 (average)
  9989                           ; direct_byte           15     9 (fixed)
  9990                           ; jumptable            263     9 (fixed)
  9991                           ;	Chosen strategy is simple_byte
  9992  0EB2  0828               	movf	??_atoi,w
  9993  0EB3  3A2B               	xorlw	43	; case 43
  9994  0EB4  1903               	skipnz
  9995  0EB5  2EA1               	goto	l2019
  9996  0EB6  3A06               	xorlw	6	; case 45
  9997  0EB7  1903               	skipnz
  9998  0EB8  2E9D               	goto	l5455
  9999  0EB9  2EDA               	goto	l5463
 10000  0EBA                     l5459:
 10001  0EBA  0826               	movf	atoi@s,w
 10002  0EBB  0084               	movwf	4
 10003  0EBC  0827               	movf	atoi@s+1,w
 10004  0EBD  0085               	movwf	5
 10005  0EBE  0800               	movf	0,w	;code access
 10006  0EBF  00A8               	movwf	??_atoi
 10007  0EC0  0834               	movf	atoi@n+1,w
 10008  0EC1  00A1               	movwf	___wmul@multiplier+1
 10009  0EC2  0833               	movf	atoi@n,w
 10010  0EC3  00A0               	movwf	___wmul@multiplier
 10011  0EC4  300A               	movlw	10
 10012  0EC5  00A2               	movwf	___wmul@multiplicand
 10013  0EC6  3000               	movlw	0
 10014  0EC7  00A3               	movwf	___wmul@multiplicand+1
 10015  0EC8  318A  22BE  318E   	fcall	___wmul
 10016  0ECB  0020               	movlb	0	; select bank0
 10017  0ECC  0821               	movf	?___wmul+1,w
 10018  0ECD  00AA               	movwf	??_atoi+2
 10019  0ECE  0828               	movf	??_atoi,w
 10020  0ECF  0220               	subwf	?___wmul,w
 10021  0ED0  00A9               	movwf	??_atoi+1
 10022  0ED1  1C03               	skipc
 10023  0ED2  03AA               	decf	??_atoi+2,f
 10024  0ED3  0829               	movf	??_atoi+1,w
 10025  0ED4  3E30               	addlw	48
 10026  0ED5  00B3               	movwf	atoi@n
 10027  0ED6  3000               	movlw	0
 10028  0ED7  3D2A               	addwfc	??_atoi+2,w
 10029  0ED8  00B4               	movwf	atoi@n+1
 10030  0ED9  2EA1               	goto	l2019
 10031  0EDA                     l5463:
 10032  0EDA  0826               	movf	atoi@s,w
 10033  0EDB  0084               	movwf	4
 10034  0EDC  0827               	movf	atoi@s+1,w
 10035  0EDD  0085               	movwf	5
 10036  0EDE  0800               	movf	0,w	;code access
 10037  0EDF  3ED0               	addlw	208
 10038  0EE0  00A8               	movwf	??_atoi
 10039  0EE1  30FF               	movlw	255
 10040  0EE2  1803               	skipnc
 10041  0EE3  3000               	movlw	0
 10042  0EE4  00A9               	movwf	??_atoi+1
 10043  0EE5  3000               	movlw	0
 10044  0EE6  0229               	subwf	??_atoi+1,w
 10045  0EE7  300A               	movlw	10
 10046  0EE8  1903               	skipnz
 10047  0EE9  0228               	subwf	??_atoi,w
 10048  0EEA  1C03               	skipc
 10049  0EEB  2EED               	goto	u4791
 10050  0EEC  2EEF               	goto	u4790
 10051  0EED                     u4791:
 10052  0EED  3001               	movlw	1
 10053  0EEE  2EF0               	goto	u4800
 10054  0EEF                     u4790:
 10055  0EEF  3000               	movlw	0
 10056  0EF0                     u4800:
 10057  0EF0  00AA               	movwf	??_atoi+2
 10058  0EF1  01AB               	clrf	??_atoi+3
 10059  0EF2  082A               	movf	??_atoi+2,w
 10060  0EF3  00B0               	movwf	_atoi$2829
 10061  0EF4  082B               	movf	??_atoi+3,w
 10062  0EF5  00B1               	movwf	_atoi$2829+1
 10063  0EF6                     l5467:
 10064  0EF6  0830               	movf	_atoi$2829,w
 10065  0EF7  0431               	iorwf	_atoi$2829+1,w
 10066  0EF8  1D03               	btfss	3,2
 10067  0EF9  2EFB               	goto	u4811
 10068  0EFA  2EFC               	goto	u4810
 10069  0EFB                     u4811:
 10070  0EFB  2EBA               	goto	l5459
 10071  0EFC                     u4810:
 10072  0EFC                     l5469:
 10073  0EFC  082C               	movf	atoi@neg,w
 10074  0EFD  042D               	iorwf	atoi@neg+1,w
 10075  0EFE  1D03               	btfss	3,2
 10076  0EFF  2F01               	goto	u4821
 10077  0F00  2F02               	goto	u4820
 10078  0F01                     u4821:
 10079  0F01  2F0E               	goto	l5473
 10080  0F02                     u4820:
 10081  0F02                     l5471:
 10082  0F02  0933               	comf	atoi@n,w
 10083  0F03  00A8               	movwf	??_atoi
 10084  0F04  0934               	comf	atoi@n+1,w
 10085  0F05  00A9               	movwf	??_atoi+1
 10086  0F06  0AA8               	incf	??_atoi,f
 10087  0F07  1903               	skipnz
 10088  0F08  0AA9               	incf	??_atoi+1,f
 10089  0F09  0828               	movf	??_atoi,w
 10090  0F0A  00A6               	movwf	?_atoi
 10091  0F0B  0829               	movf	??_atoi+1,w
 10092  0F0C  00A7               	movwf	?_atoi+1
 10093  0F0D  2F12               	goto	l2032
 10094  0F0E                     l5473:
 10095  0F0E  0834               	movf	atoi@n+1,w
 10096  0F0F  00A7               	movwf	?_atoi+1
 10097  0F10  0833               	movf	atoi@n,w
 10098  0F11  00A6               	movwf	?_atoi
 10099  0F12                     l2032:
 10100  0F12  0008               	return
 10101  0F13                     __end_of_atoi:
 10102                           
 10103                           	psect	text14
 10104  0AFF                     __ptext14:	
 10105 ;; *************** function _isspace *****************
 10106 ;; Defined at:
 10107 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
 10108 ;; Parameters:    Size  Location     Type
 10109 ;;  c               2    0[BANK0 ] int 
 10110 ;; Auto vars:     Size  Location     Type
 10111 ;;		None
 10112 ;; Return value:  Size  Location     Type
 10113 ;;                  2    0[BANK0 ] int 
 10114 ;; Registers used:
 10115 ;;		wreg, status,2, status,0
 10116 ;; Tracked objects:
 10117 ;;		On entry : 0/0
 10118 ;;		On exit  : 0/0
 10119 ;;		Unchanged: 0/0
 10120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10121 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10122 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10123 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10124 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10125 ;;Total ram usage:        5 bytes
 10126 ;; Hardware stack levels used: 1
 10127 ;; Hardware stack levels required when called: 5
 10128 ;; This function calls:
 10129 ;;		Nothing
 10130 ;; This function is called by:
 10131 ;;		_atoi
 10132 ;; This function uses a non-reentrant model
 10133 ;;
 10134                           
 10135                           
 10136                           ;psect for function _isspace
 10137  0AFF                     _isspace:
 10138  0AFF                     l5337:	
 10139                           ;incstack = 0
 10140                           ; Regs used in _isspace: [wreg+status,2+status,0]
 10141                           
 10142  0AFF  0020               	movlb	0	; select bank0
 10143  0B00  01A4               	clrf	_isspace$2845
 10144  0B01  0AA4               	incf	_isspace$2845,f
 10145  0B02                     l5339:
 10146  0B02  3020               	movlw	32
 10147  0B03  0620               	xorwf	isspace@c,w
 10148  0B04  0421               	iorwf	isspace@c+1,w
 10149  0B05  1903               	btfsc	3,2
 10150  0B06  2B08               	goto	u4491
 10151  0B07  2B09               	goto	u4490
 10152  0B08                     u4491:
 10153  0B08  2B19               	goto	l5345
 10154  0B09                     u4490:
 10155  0B09                     l5341:
 10156  0B09  0820               	movf	isspace@c,w
 10157  0B0A  3EF7               	addlw	247
 10158  0B0B  00A2               	movwf	??_isspace
 10159  0B0C  30FF               	movlw	255
 10160  0B0D  3D21               	addwfc	isspace@c+1,w
 10161  0B0E  00A3               	movwf	??_isspace+1
 10162  0B0F  3000               	movlw	0
 10163  0B10  0223               	subwf	??_isspace+1,w
 10164  0B11  3005               	movlw	5
 10165  0B12  1903               	skipnz
 10166  0B13  0222               	subwf	??_isspace,w
 10167  0B14  1C03               	skipc
 10168  0B15  2B17               	goto	u4501
 10169  0B16  2B18               	goto	u4500
 10170  0B17                     u4501:
 10171  0B17  2B19               	goto	l5345
 10172  0B18                     u4500:
 10173  0B18                     l5343:
 10174  0B18  01A4               	clrf	_isspace$2845
 10175  0B19                     l5345:
 10176  0B19  0824               	movf	_isspace$2845,w
 10177  0B1A  00A2               	movwf	??_isspace
 10178  0B1B  01A3               	clrf	??_isspace+1
 10179  0B1C  0822               	movf	??_isspace,w
 10180  0B1D  00A0               	movwf	?_isspace
 10181  0B1E  0823               	movf	??_isspace+1,w
 10182  0B1F  00A1               	movwf	?_isspace+1
 10183  0B20                     l2043:
 10184  0B20  0008               	return
 10185  0B21                     __end_of_isspace:
 10186                           
 10187                           	psect	text15
 10188  0A18                     __ptext15:	
 10189 ;; *************** function _isdigit *****************
 10190 ;; Defined at:
 10191 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
 10192 ;; Parameters:    Size  Location     Type
 10193 ;;  c               2    0[BANK0 ] int 
 10194 ;; Auto vars:     Size  Location     Type
 10195 ;;		None
 10196 ;; Return value:  Size  Location     Type
 10197 ;;                  2    0[BANK0 ] int 
 10198 ;; Registers used:
 10199 ;;		wreg, status,2, status,0
 10200 ;; Tracked objects:
 10201 ;;		On entry : 0/0
 10202 ;;		On exit  : 0/0
 10203 ;;		Unchanged: 0/0
 10204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10205 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10207 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10208 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10209 ;;Total ram usage:        6 bytes
 10210 ;; Hardware stack levels used: 1
 10211 ;; Hardware stack levels required when called: 5
 10212 ;; This function calls:
 10213 ;;		Nothing
 10214 ;; This function is called by:
 10215 ;;		_vfpfcnvrt
 10216 ;;		_atoi
 10217 ;; This function uses a non-reentrant model
 10218 ;;
 10219                           
 10220                           
 10221                           ;psect for function _isdigit
 10222  0A18                     _isdigit:
 10223  0A18                     l5333:	
 10224                           ;incstack = 0
 10225                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 10226                           
 10227  0A18  0020               	movlb	0	; select bank0
 10228  0A19  0820               	movf	isdigit@c,w
 10229  0A1A  3ED0               	addlw	208
 10230  0A1B  00A2               	movwf	??_isdigit
 10231  0A1C  30FF               	movlw	255
 10232  0A1D  3D21               	addwfc	isdigit@c+1,w
 10233  0A1E  00A3               	movwf	??_isdigit+1
 10234  0A1F  3000               	movlw	0
 10235  0A20  0223               	subwf	??_isdigit+1,w
 10236  0A21  300A               	movlw	10
 10237  0A22  1903               	skipnz
 10238  0A23  0222               	subwf	??_isdigit,w
 10239  0A24  1C03               	skipc
 10240  0A25  2A27               	goto	u4471
 10241  0A26  2A29               	goto	u4470
 10242  0A27                     u4471:
 10243  0A27  3001               	movlw	1
 10244  0A28  2A2A               	goto	u4480
 10245  0A29                     u4470:
 10246  0A29  3000               	movlw	0
 10247  0A2A                     u4480:
 10248  0A2A  00A4               	movwf	??_isdigit+2
 10249  0A2B  01A5               	clrf	??_isdigit+3
 10250  0A2C  0824               	movf	??_isdigit+2,w
 10251  0A2D  00A0               	movwf	?_isdigit
 10252  0A2E  0825               	movf	??_isdigit+3,w
 10253  0A2F  00A1               	movwf	?_isdigit+1
 10254  0A30                     l2035:
 10255  0A30  0008               	return
 10256  0A31                     __end_of_isdigit:
 10257                           
 10258                           	psect	text16
 10259  0ABE                     __ptext16:	
 10260 ;; *************** function ___wmul *****************
 10261 ;; Defined at:
 10262 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 10263 ;; Parameters:    Size  Location     Type
 10264 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10265 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10266 ;; Auto vars:     Size  Location     Type
 10267 ;;  product         2    4[BANK0 ] unsigned int 
 10268 ;; Return value:  Size  Location     Type
 10269 ;;                  2    0[BANK0 ] unsigned int 
 10270 ;; Registers used:
 10271 ;;		wreg, status,2, status,0
 10272 ;; Tracked objects:
 10273 ;;		On entry : 0/0
 10274 ;;		On exit  : 0/0
 10275 ;;		Unchanged: 0/0
 10276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10277 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10278 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10280 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10281 ;;Total ram usage:        6 bytes
 10282 ;; Hardware stack levels used: 1
 10283 ;; Hardware stack levels required when called: 5
 10284 ;; This function calls:
 10285 ;;		Nothing
 10286 ;; This function is called by:
 10287 ;;		_atoi
 10288 ;; This function uses a non-reentrant model
 10289 ;;
 10290                           
 10291                           
 10292                           ;psect for function ___wmul
 10293  0ABE                     ___wmul:
 10294  0ABE                     l5229:	
 10295                           ;incstack = 0
 10296                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10297                           
 10298  0ABE  0020               	movlb	0	; select bank0
 10299  0ABF  01A4               	clrf	___wmul@product
 10300  0AC0  01A5               	clrf	___wmul@product+1
 10301  0AC1                     l5231:
 10302  0AC1  1C20               	btfss	___wmul@multiplier,0
 10303  0AC2  2AC4               	goto	u4181
 10304  0AC3  2AC5               	goto	u4180
 10305  0AC4                     u4181:
 10306  0AC4  2AC9               	goto	l1433
 10307  0AC5                     u4180:
 10308  0AC5                     l5233:
 10309  0AC5  0822               	movf	___wmul@multiplicand,w
 10310  0AC6  07A4               	addwf	___wmul@product,f
 10311  0AC7  0823               	movf	___wmul@multiplicand+1,w
 10312  0AC8  3DA5               	addwfc	___wmul@product+1,f
 10313  0AC9                     l1433:
 10314  0AC9  3001               	movlw	1
 10315  0ACA                     u4195:
 10316  0ACA  35A2               	lslf	___wmul@multiplicand,f
 10317  0ACB  0DA3               	rlf	___wmul@multiplicand+1,f
 10318  0ACC  0B89               	decfsz	9,f
 10319  0ACD  2ACA               	goto	u4195
 10320  0ACE                     l5235:
 10321  0ACE  3001               	movlw	1
 10322  0ACF                     u4205:
 10323  0ACF  36A1               	lsrf	___wmul@multiplier+1,f
 10324  0AD0  0CA0               	rrf	___wmul@multiplier,f
 10325  0AD1  0B89               	decfsz	9,f
 10326  0AD2  2ACF               	goto	u4205
 10327  0AD3                     l5237:
 10328  0AD3  0820               	movf	___wmul@multiplier,w
 10329  0AD4  0421               	iorwf	___wmul@multiplier+1,w
 10330  0AD5  1D03               	btfss	3,2
 10331  0AD6  2AD8               	goto	u4211
 10332  0AD7  2AD9               	goto	u4210
 10333  0AD8                     u4211:
 10334  0AD8  2AC1               	goto	l5231
 10335  0AD9                     u4210:
 10336  0AD9                     l5239:
 10337  0AD9  0825               	movf	___wmul@product+1,w
 10338  0ADA  00A1               	movwf	?___wmul+1
 10339  0ADB  0824               	movf	___wmul@product,w
 10340  0ADC  00A0               	movwf	?___wmul
 10341  0ADD                     l1435:
 10342  0ADD  0008               	return
 10343  0ADE                     __end_of___wmul:
 10344                           
 10345                           	psect	text17
 10346  04BF                     __ptext17:	
 10347 ;; *************** function _readTC74 *****************
 10348 ;; Defined at:
 10349 ;;		line 77 in file "main.c"
 10350 ;; Parameters:    Size  Location     Type
 10351 ;;		None
 10352 ;; Auto vars:     Size  Location     Type
 10353 ;;  value           1    3[BANK0 ] unsigned char 
 10354 ;; Return value:  Size  Location     Type
 10355 ;;                  1    wreg      unsigned char 
 10356 ;; Registers used:
 10357 ;;		wreg, status,2, status,0, pclath, cstack
 10358 ;; Tracked objects:
 10359 ;;		On entry : 0/0
 10360 ;;		On exit  : 0/0
 10361 ;;		Unchanged: 0/0
 10362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10363 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10364 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10365 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10366 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10367 ;;Total ram usage:        2 bytes
 10368 ;; Hardware stack levels used: 1
 10369 ;; Hardware stack levels required when called: 6
 10370 ;; This function calls:
 10371 ;;		_ReadI2C
 10372 ;;		_WriteI2C
 10373 ;; This function is called by:
 10374 ;;		_main
 10375 ;; This function uses a non-reentrant model
 10376 ;;
 10377                           
 10378                           
 10379                           ;psect for function _readTC74
 10380  04BF                     _readTC74:
 10381  04BF                     l1172:	
 10382                           ;incstack = 0
 10383                           ; Regs used in _readTC74: [wreg+status,2+status,0+pclath+cstack]
 10384                           ;main.c: 79:  unsigned char value;;main.c: 80: do{
 10385                           
 10386  04BF                     l5807:	
 10387                           ;main.c: 81:  while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10388                           
 10389  04BF  0023               	movlb	3	; select bank3
 10390  04C0  0C0F               	rrf	15,w	;volatile
 10391  04C1  0C89               	rrf	9,f
 10392  04C2  3901               	andlw	1
 10393  04C3  0020               	movlb	0	; select bank0
 10394  04C4  00A2               	movwf	??_readTC74
 10395  04C5  0023               	movlb	3	; select bank3
 10396  04C6  0811               	movf	17,w	;volatile
 10397  04C7  391F               	andlw	31
 10398  04C8  0020               	movlb	0	; select bank0
 10399  04C9  0422               	iorwf	??_readTC74,w
 10400  04CA  1D03               	btfss	3,2
 10401  04CB  2CCD               	goto	u5461
 10402  04CC  2CCE               	goto	u5460
 10403  04CD                     u5461:
 10404  04CD  2CBF               	goto	l5807
 10405  04CE                     u5460:
 10406  04CE                     l1176:	
 10407                           ;main.c: 82:  do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((SSP1
      +                          CON2 & 0x1F) | (SSP1STATbits.R_W));
 10408                           
 10409  04CE  0023               	movlb	3	; select bank3
 10410  04CF  1411               	bsf	17,0	;volatile
 10411  04D0                     l1177:
 10412  04D0  1811               	btfsc	17,0	;volatile
 10413  04D1  2CD3               	goto	u5471
 10414  04D2  2CD4               	goto	u5470
 10415  04D3                     u5471:
 10416  04D3  2CD0               	goto	l1177
 10417  04D4                     u5470:
 10418  04D4                     l5809:
 10419  04D4  0023               	movlb	3	; select bank3
 10420  04D5  0C0F               	rrf	15,w	;volatile
 10421  04D6  0C89               	rrf	9,f
 10422  04D7  3901               	andlw	1
 10423  04D8  0020               	movlb	0	; select bank0
 10424  04D9  00A2               	movwf	??_readTC74
 10425  04DA  0023               	movlb	3	; select bank3
 10426  04DB  0811               	movf	17,w	;volatile
 10427  04DC  391F               	andlw	31
 10428  04DD  0020               	movlb	0	; select bank0
 10429  04DE  0422               	iorwf	??_readTC74,w
 10430  04DF  1D03               	btfss	3,2
 10431  04E0  2CE2               	goto	u5481
 10432  04E1  2CE3               	goto	u5480
 10433  04E2                     u5481:
 10434  04E2  2CD4               	goto	l5809
 10435  04E3                     u5480:
 10436  04E3                     l5811:
 10437                           
 10438                           ;main.c: 84:  WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10439  04E3  309A               	movlw	154
 10440  04E4  318D  2503  3184   	fcall	_WriteI2C
 10441  04E7                     l5813:
 10442  04E7  0023               	movlb	3	; select bank3
 10443  04E8  0C0F               	rrf	15,w	;volatile
 10444  04E9  0C89               	rrf	9,f
 10445  04EA  3901               	andlw	1
 10446  04EB  0020               	movlb	0	; select bank0
 10447  04EC  00A2               	movwf	??_readTC74
 10448  04ED  0023               	movlb	3	; select bank3
 10449  04EE  0811               	movf	17,w	;volatile
 10450  04EF  391F               	andlw	31
 10451  04F0  0020               	movlb	0	; select bank0
 10452  04F1  0422               	iorwf	??_readTC74,w
 10453  04F2  1D03               	btfss	3,2
 10454  04F3  2CF5               	goto	u5491
 10455  04F4  2CF6               	goto	u5490
 10456  04F5                     u5491:
 10457  04F5  2CE7               	goto	l5813
 10458  04F6                     u5490:
 10459  04F6                     l5815:
 10460                           
 10461                           ;main.c: 85:  WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10462  04F6  3001               	movlw	1
 10463  04F7  318D  2503  3184   	fcall	_WriteI2C
 10464  04FA                     l5817:
 10465  04FA  0023               	movlb	3	; select bank3
 10466  04FB  0C0F               	rrf	15,w	;volatile
 10467  04FC  0C89               	rrf	9,f
 10468  04FD  3901               	andlw	1
 10469  04FE  0020               	movlb	0	; select bank0
 10470  04FF  00A2               	movwf	??_readTC74
 10471  0500  0023               	movlb	3	; select bank3
 10472  0501  0811               	movf	17,w	;volatile
 10473  0502  391F               	andlw	31
 10474  0503  0020               	movlb	0	; select bank0
 10475  0504  0422               	iorwf	??_readTC74,w
 10476  0505  1D03               	btfss	3,2
 10477  0506  2D08               	goto	u5501
 10478  0507  2D09               	goto	u5500
 10479  0508                     u5501:
 10480  0508  2CFA               	goto	l5817
 10481  0509                     u5500:
 10482  0509                     l1190:	
 10483                           ;main.c: 86:  do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while ((SS
      +                          P1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10484                           
 10485  0509  0023               	movlb	3	; select bank3
 10486  050A  1491               	bsf	17,1	;volatile
 10487  050B                     l1191:
 10488  050B  1891               	btfsc	17,1	;volatile
 10489  050C  2D0E               	goto	u5511
 10490  050D  2D0F               	goto	u5510
 10491  050E                     u5511:
 10492  050E  2D0B               	goto	l1191
 10493  050F                     u5510:
 10494  050F                     l5819:
 10495  050F  0023               	movlb	3	; select bank3
 10496  0510  0C0F               	rrf	15,w	;volatile
 10497  0511  0C89               	rrf	9,f
 10498  0512  3901               	andlw	1
 10499  0513  0020               	movlb	0	; select bank0
 10500  0514  00A2               	movwf	??_readTC74
 10501  0515  0023               	movlb	3	; select bank3
 10502  0516  0811               	movf	17,w	;volatile
 10503  0517  391F               	andlw	31
 10504  0518  0020               	movlb	0	; select bank0
 10505  0519  0422               	iorwf	??_readTC74,w
 10506  051A  1D03               	btfss	3,2
 10507  051B  2D1D               	goto	u5521
 10508  051C  2D1E               	goto	u5520
 10509  051D                     u5521:
 10510  051D  2D0F               	goto	l5819
 10511  051E                     u5520:
 10512  051E                     l5821:
 10513                           
 10514                           ;main.c: 87:  WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10515  051E  309B               	movlw	155
 10516  051F  318D  2503  3184   	fcall	_WriteI2C
 10517  0522                     l5823:
 10518  0522  0023               	movlb	3	; select bank3
 10519  0523  0C0F               	rrf	15,w	;volatile
 10520  0524  0C89               	rrf	9,f
 10521  0525  3901               	andlw	1
 10522  0526  0020               	movlb	0	; select bank0
 10523  0527  00A2               	movwf	??_readTC74
 10524  0528  0023               	movlb	3	; select bank3
 10525  0529  0811               	movf	17,w	;volatile
 10526  052A  391F               	andlw	31
 10527  052B  0020               	movlb	0	; select bank0
 10528  052C  0422               	iorwf	??_readTC74,w
 10529  052D  1D03               	btfss	3,2
 10530  052E  2D30               	goto	u5531
 10531  052F  2D31               	goto	u5530
 10532  0530                     u5531:
 10533  0530  2D22               	goto	l5823
 10534  0531                     u5530:
 10535  0531                     l5825:
 10536                           
 10537                           ;main.c: 88:  value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10538  0531  318A  229F  3184   	fcall	_ReadI2C
 10539  0534  0020               	movlb	0	; select bank0
 10540  0535  00A2               	movwf	??_readTC74
 10541  0536  0822               	movf	??_readTC74,w
 10542  0537  00A3               	movwf	readTC74@value
 10543  0538                     l5827:
 10544  0538  0023               	movlb	3	; select bank3
 10545  0539  0C0F               	rrf	15,w	;volatile
 10546  053A  0C89               	rrf	9,f
 10547  053B  3901               	andlw	1
 10548  053C  0020               	movlb	0	; select bank0
 10549  053D  00A2               	movwf	??_readTC74
 10550  053E  0023               	movlb	3	; select bank3
 10551  053F  0811               	movf	17,w	;volatile
 10552  0540  391F               	andlw	31
 10553  0541  0020               	movlb	0	; select bank0
 10554  0542  0422               	iorwf	??_readTC74,w
 10555  0543  1D03               	btfss	3,2
 10556  0544  2D46               	goto	u5541
 10557  0545  2D47               	goto	u5540
 10558  0546                     u5541:
 10559  0546  2D38               	goto	l5827
 10560  0547                     u5540:
 10561  0547                     l1204:	
 10562                           ;main.c: 89:  do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); 
      +                          } while (0); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10563                           
 10564  0547  0023               	movlb	3	; select bank3
 10565  0548  1691               	bsf	17,5	;volatile
 10566  0549  1611               	bsf	17,4	;volatile
 10567  054A                     l1205:
 10568  054A  1A11               	btfsc	17,4	;volatile
 10569  054B  2D4D               	goto	u5551
 10570  054C  2D4E               	goto	u5550
 10571  054D                     u5551:
 10572  054D  2D4A               	goto	l1205
 10573  054E                     u5550:
 10574  054E                     l5829:
 10575  054E  0023               	movlb	3	; select bank3
 10576  054F  0C0F               	rrf	15,w	;volatile
 10577  0550  0C89               	rrf	9,f
 10578  0551  3901               	andlw	1
 10579  0552  0020               	movlb	0	; select bank0
 10580  0553  00A2               	movwf	??_readTC74
 10581  0554  0023               	movlb	3	; select bank3
 10582  0555  0811               	movf	17,w	;volatile
 10583  0556  391F               	andlw	31
 10584  0557  0020               	movlb	0	; select bank0
 10585  0558  0422               	iorwf	??_readTC74,w
 10586  0559  1D03               	btfss	3,2
 10587  055A  2D5C               	goto	u5561
 10588  055B  2D5D               	goto	u5560
 10589  055C                     u5561:
 10590  055C  2D4E               	goto	l5829
 10591  055D                     u5560:
 10592  055D                     l1212:	
 10593                           ;main.c: 90:  do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 10594                           
 10595  055D  0023               	movlb	3	; select bank3
 10596  055E  1511               	bsf	17,2	;volatile
 10597  055F                     l1213:
 10598  055F  1911               	btfsc	17,2	;volatile
 10599  0560  2D62               	goto	u5571
 10600  0561  2D63               	goto	u5570
 10601  0562                     u5571:
 10602  0562  2D5F               	goto	l1213
 10603  0563                     u5570:
 10604  0563                     l1216:
 10605                           
 10606                           ;main.c: 91: } while (!(value & 0x40));
 10607  0563  0020               	movlb	0	; select bank0
 10608  0564  1F23               	btfss	readTC74@value,6
 10609  0565  2D67               	goto	u5581
 10610  0566  2D68               	goto	u5580
 10611  0567                     u5581:
 10612  0567  2CBF               	goto	l1172
 10613  0568                     u5580:
 10614  0568                     l5831:
 10615  0568  0023               	movlb	3	; select bank3
 10616  0569  0C0F               	rrf	15,w	;volatile
 10617  056A  0C89               	rrf	9,f
 10618  056B  3901               	andlw	1
 10619  056C  0020               	movlb	0	; select bank0
 10620  056D  00A2               	movwf	??_readTC74
 10621  056E  0023               	movlb	3	; select bank3
 10622  056F  0811               	movf	17,w	;volatile
 10623  0570  391F               	andlw	31
 10624  0571  0020               	movlb	0	; select bank0
 10625  0572  0422               	iorwf	??_readTC74,w
 10626  0573  1D03               	btfss	3,2
 10627  0574  2D76               	goto	u5591
 10628  0575  2D77               	goto	u5590
 10629  0576                     u5591:
 10630  0576  2D68               	goto	l5831
 10631  0577                     u5590:
 10632  0577                     l1221:	
 10633                           ;main.c: 94:  do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((SSP1
      +                          CON2 & 0x1F) | (SSP1STATbits.R_W));
 10634                           
 10635  0577  0023               	movlb	3	; select bank3
 10636  0578  1411               	bsf	17,0	;volatile
 10637  0579                     l1222:
 10638  0579  1811               	btfsc	17,0	;volatile
 10639  057A  2D7C               	goto	u5601
 10640  057B  2D7D               	goto	u5600
 10641  057C                     u5601:
 10642  057C  2D79               	goto	l1222
 10643  057D                     u5600:
 10644  057D                     l5833:
 10645  057D  0023               	movlb	3	; select bank3
 10646  057E  0C0F               	rrf	15,w	;volatile
 10647  057F  0C89               	rrf	9,f
 10648  0580  3901               	andlw	1
 10649  0581  0020               	movlb	0	; select bank0
 10650  0582  00A2               	movwf	??_readTC74
 10651  0583  0023               	movlb	3	; select bank3
 10652  0584  0811               	movf	17,w	;volatile
 10653  0585  391F               	andlw	31
 10654  0586  0020               	movlb	0	; select bank0
 10655  0587  0422               	iorwf	??_readTC74,w
 10656  0588  1D03               	btfss	3,2
 10657  0589  2D8B               	goto	u5611
 10658  058A  2D8C               	goto	u5610
 10659  058B                     u5611:
 10660  058B  2D7D               	goto	l5833
 10661  058C                     u5610:
 10662  058C                     l5835:
 10663                           
 10664                           ;main.c: 95:  WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10665  058C  309A               	movlw	154
 10666  058D  318D  2503  3184   	fcall	_WriteI2C
 10667  0590                     l5837:
 10668  0590  0023               	movlb	3	; select bank3
 10669  0591  0C0F               	rrf	15,w	;volatile
 10670  0592  0C89               	rrf	9,f
 10671  0593  3901               	andlw	1
 10672  0594  0020               	movlb	0	; select bank0
 10673  0595  00A2               	movwf	??_readTC74
 10674  0596  0023               	movlb	3	; select bank3
 10675  0597  0811               	movf	17,w	;volatile
 10676  0598  391F               	andlw	31
 10677  0599  0020               	movlb	0	; select bank0
 10678  059A  0422               	iorwf	??_readTC74,w
 10679  059B  1D03               	btfss	3,2
 10680  059C  2D9E               	goto	u5621
 10681  059D  2D9F               	goto	u5620
 10682  059E                     u5621:
 10683  059E  2D90               	goto	l5837
 10684  059F                     u5620:
 10685  059F                     l5839:
 10686                           
 10687                           ;main.c: 96:  WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10688  059F  3000               	movlw	0
 10689  05A0  318D  2503  3184   	fcall	_WriteI2C
 10690  05A3                     l5841:
 10691  05A3  0023               	movlb	3	; select bank3
 10692  05A4  0C0F               	rrf	15,w	;volatile
 10693  05A5  0C89               	rrf	9,f
 10694  05A6  3901               	andlw	1
 10695  05A7  0020               	movlb	0	; select bank0
 10696  05A8  00A2               	movwf	??_readTC74
 10697  05A9  0023               	movlb	3	; select bank3
 10698  05AA  0811               	movf	17,w	;volatile
 10699  05AB  391F               	andlw	31
 10700  05AC  0020               	movlb	0	; select bank0
 10701  05AD  0422               	iorwf	??_readTC74,w
 10702  05AE  1D03               	btfss	3,2
 10703  05AF  2DB1               	goto	u5631
 10704  05B0  2DB2               	goto	u5630
 10705  05B1                     u5631:
 10706  05B1  2DA3               	goto	l5841
 10707  05B2                     u5630:
 10708  05B2                     l1235:	
 10709                           ;main.c: 97:  do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while ((SS
      +                          P1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10710                           
 10711  05B2  0023               	movlb	3	; select bank3
 10712  05B3  1491               	bsf	17,1	;volatile
 10713  05B4                     l1236:
 10714  05B4  1891               	btfsc	17,1	;volatile
 10715  05B5  2DB7               	goto	u5641
 10716  05B6  2DB8               	goto	u5640
 10717  05B7                     u5641:
 10718  05B7  2DB4               	goto	l1236
 10719  05B8                     u5640:
 10720  05B8                     l5843:
 10721  05B8  0023               	movlb	3	; select bank3
 10722  05B9  0C0F               	rrf	15,w	;volatile
 10723  05BA  0C89               	rrf	9,f
 10724  05BB  3901               	andlw	1
 10725  05BC  0020               	movlb	0	; select bank0
 10726  05BD  00A2               	movwf	??_readTC74
 10727  05BE  0023               	movlb	3	; select bank3
 10728  05BF  0811               	movf	17,w	;volatile
 10729  05C0  391F               	andlw	31
 10730  05C1  0020               	movlb	0	; select bank0
 10731  05C2  0422               	iorwf	??_readTC74,w
 10732  05C3  1D03               	btfss	3,2
 10733  05C4  2DC6               	goto	u5651
 10734  05C5  2DC7               	goto	u5650
 10735  05C6                     u5651:
 10736  05C6  2DB8               	goto	l5843
 10737  05C7                     u5650:
 10738  05C7                     l5845:
 10739                           
 10740                           ;main.c: 98:  WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10741  05C7  309B               	movlw	155
 10742  05C8  318D  2503  3184   	fcall	_WriteI2C
 10743  05CB                     l5847:
 10744  05CB  0023               	movlb	3	; select bank3
 10745  05CC  0C0F               	rrf	15,w	;volatile
 10746  05CD  0C89               	rrf	9,f
 10747  05CE  3901               	andlw	1
 10748  05CF  0020               	movlb	0	; select bank0
 10749  05D0  00A2               	movwf	??_readTC74
 10750  05D1  0023               	movlb	3	; select bank3
 10751  05D2  0811               	movf	17,w	;volatile
 10752  05D3  391F               	andlw	31
 10753  05D4  0020               	movlb	0	; select bank0
 10754  05D5  0422               	iorwf	??_readTC74,w
 10755  05D6  1D03               	btfss	3,2
 10756  05D7  2DD9               	goto	u5661
 10757  05D8  2DDA               	goto	u5660
 10758  05D9                     u5661:
 10759  05D9  2DCB               	goto	l5847
 10760  05DA                     u5660:
 10761  05DA                     l5849:
 10762                           
 10763                           ;main.c: 99:  value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10764  05DA  318A  229F  3184   	fcall	_ReadI2C
 10765  05DD  0020               	movlb	0	; select bank0
 10766  05DE  00A2               	movwf	??_readTC74
 10767  05DF  0822               	movf	??_readTC74,w
 10768  05E0  00A3               	movwf	readTC74@value
 10769  05E1                     l5851:
 10770  05E1  0023               	movlb	3	; select bank3
 10771  05E2  0C0F               	rrf	15,w	;volatile
 10772  05E3  0C89               	rrf	9,f
 10773  05E4  3901               	andlw	1
 10774  05E5  0020               	movlb	0	; select bank0
 10775  05E6  00A2               	movwf	??_readTC74
 10776  05E7  0023               	movlb	3	; select bank3
 10777  05E8  0811               	movf	17,w	;volatile
 10778  05E9  391F               	andlw	31
 10779  05EA  0020               	movlb	0	; select bank0
 10780  05EB  0422               	iorwf	??_readTC74,w
 10781  05EC  1D03               	btfss	3,2
 10782  05ED  2DEF               	goto	u5671
 10783  05EE  2DF0               	goto	u5670
 10784  05EF                     u5671:
 10785  05EF  2DE1               	goto	l5851
 10786  05F0                     u5670:
 10787  05F0                     l1249:	
 10788                           ;main.c: 100:  do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN);
      +                           } while (0); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10789                           
 10790  05F0  0023               	movlb	3	; select bank3
 10791  05F1  1691               	bsf	17,5	;volatile
 10792  05F2  1611               	bsf	17,4	;volatile
 10793  05F3                     l1250:
 10794  05F3  1A11               	btfsc	17,4	;volatile
 10795  05F4  2DF6               	goto	u5681
 10796  05F5  2DF7               	goto	u5680
 10797  05F6                     u5681:
 10798  05F6  2DF3               	goto	l1250
 10799  05F7                     u5680:
 10800  05F7                     l5853:
 10801  05F7  0023               	movlb	3	; select bank3
 10802  05F8  0C0F               	rrf	15,w	;volatile
 10803  05F9  0C89               	rrf	9,f
 10804  05FA  3901               	andlw	1
 10805  05FB  0020               	movlb	0	; select bank0
 10806  05FC  00A2               	movwf	??_readTC74
 10807  05FD  0023               	movlb	3	; select bank3
 10808  05FE  0811               	movf	17,w	;volatile
 10809  05FF  391F               	andlw	31
 10810  0600  0020               	movlb	0	; select bank0
 10811  0601  0422               	iorwf	??_readTC74,w
 10812  0602  1D03               	btfss	3,2
 10813  0603  2E05               	goto	u5691
 10814  0604  2E06               	goto	u5690
 10815  0605                     u5691:
 10816  0605  2DF7               	goto	l5853
 10817  0606                     u5690:
 10818  0606                     l1257:	
 10819                           ;main.c: 101:  do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 10820                           
 10821  0606  0023               	movlb	3	; select bank3
 10822  0607  1511               	bsf	17,2	;volatile
 10823  0608                     l1258:
 10824  0608  1911               	btfsc	17,2	;volatile
 10825  0609  2E0B               	goto	u5701
 10826  060A  2E0C               	goto	u5700
 10827  060B                     u5701:
 10828  060B  2E08               	goto	l1258
 10829  060C                     u5700:
 10830  060C                     l5855:
 10831                           
 10832                           ;main.c: 103:  return value;
 10833  060C  0020               	movlb	0	; select bank0
 10834  060D  0823               	movf	readTC74@value,w
 10835  060E                     l1262:
 10836  060E  0008               	return
 10837  060F                     __end_of_readTC74:
 10838                           
 10839                           	psect	text18
 10840  07EB                     __ptext18:	
 10841 ;; *************** function _SYSTEM_Initialize *****************
 10842 ;; Defined at:
 10843 ;;		line 50 in file "mcc_generated_files/mcc.c"
 10844 ;; Parameters:    Size  Location     Type
 10845 ;;		None
 10846 ;; Auto vars:     Size  Location     Type
 10847 ;;		None
 10848 ;; Return value:  Size  Location     Type
 10849 ;;                  1    wreg      void 
 10850 ;; Registers used:
 10851 ;;		wreg, status,2, status,0, pclath, cstack
 10852 ;; Tracked objects:
 10853 ;;		On entry : 0/0
 10854 ;;		On exit  : 0/0
 10855 ;;		Unchanged: 0/0
 10856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10861 ;;Total ram usage:        0 bytes
 10862 ;; Hardware stack levels used: 1
 10863 ;; Hardware stack levels required when called: 7
 10864 ;; This function calls:
 10865 ;;		_ADCC_Initialize
 10866 ;;		_I2C1_Initialize
 10867 ;;		_OSCILLATOR_Initialize
 10868 ;;		_PIN_MANAGER_Initialize
 10869 ;;		_PMD_Initialize
 10870 ;;		_TMR1_Initialize
 10871 ;; This function is called by:
 10872 ;;		_main
 10873 ;; This function uses a non-reentrant model
 10874 ;;
 10875                           
 10876                           
 10877                           ;psect for function _SYSTEM_Initialize
 10878  07EB                     _SYSTEM_Initialize:
 10879  07EB                     l5795:	
 10880                           ;incstack = 0
 10881                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10882                           
 10883                           
 10884                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 10885  07EB  3189  216B  3187   	fcall	_PMD_Initialize
 10886  07EE                     l5797:
 10887                           
 10888                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
 10889  07EE  3189  218E  3187   	fcall	_I2C1_Initialize
 10890  07F1                     l5799:
 10891                           
 10892                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 10893  07F1  318B  23C4  3187   	fcall	_PIN_MANAGER_Initialize
 10894  07F4                     l5801:
 10895                           
 10896                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 10897  07F4  3189  217C  3187   	fcall	_OSCILLATOR_Initialize
 10898  07F7                     l5803:
 10899                           
 10900                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 10901  07F7  318A  2201  3187   	fcall	_ADCC_Initialize
 10902  07FA                     l5805:
 10903                           
 10904                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
 10905  07FA  318A  22DE  3187   	fcall	_TMR1_Initialize
 10906  07FD                     l476:
 10907  07FD  0008               	return
 10908  07FE                     __end_of_SYSTEM_Initialize:
 10909                           
 10910                           	psect	text19
 10911  0ADE                     __ptext19:	
 10912 ;; *************** function _TMR1_Initialize *****************
 10913 ;; Defined at:
 10914 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 10915 ;; Parameters:    Size  Location     Type
 10916 ;;		None
 10917 ;; Auto vars:     Size  Location     Type
 10918 ;;		None
 10919 ;; Return value:  Size  Location     Type
 10920 ;;                  1    wreg      void 
 10921 ;; Registers used:
 10922 ;;		wreg, status,2, status,0, pclath, cstack
 10923 ;; Tracked objects:
 10924 ;;		On entry : 0/0
 10925 ;;		On exit  : 0/0
 10926 ;;		Unchanged: 0/0
 10927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10932 ;;Total ram usage:        0 bytes
 10933 ;; Hardware stack levels used: 1
 10934 ;; Hardware stack levels required when called: 6
 10935 ;; This function calls:
 10936 ;;		_TMR1_SetInterruptHandler
 10937 ;; This function is called by:
 10938 ;;		_SYSTEM_Initialize
 10939 ;; This function uses a non-reentrant model
 10940 ;;
 10941                           
 10942                           
 10943                           ;psect for function _TMR1_Initialize
 10944  0ADE                     _TMR1_Initialize:
 10945  0ADE                     l5705:	
 10946                           ;incstack = 0
 10947                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10948                           
 10949                           
 10950                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
 10951  0ADE  0024               	movlb	4	; select bank4
 10952  0ADF  018F               	clrf	15	;volatile
 10953                           
 10954                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
 10955  0AE0  0190               	clrf	16	;volatile
 10956  0AE1                     l5707:
 10957                           
 10958                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
 10959  0AE1  3004               	movlw	4
 10960  0AE2  0091               	movwf	17	;volatile
 10961  0AE3                     l5709:
 10962                           
 10963                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0x86;
 10964  0AE3  3086               	movlw	134
 10965  0AE4  008D               	movwf	13	;volatile
 10966  0AE5                     l5711:
 10967                           
 10968                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xE8;
 10969  0AE5  30E8               	movlw	232
 10970  0AE6  008C               	movwf	12	;volatile
 10971  0AE7                     l5713:
 10972                           
 10973                           ;mcc_generated_files/tmr1.c: 84:     PIR4bits.TMR1IF = 0;
 10974  0AE7  002E               	movlb	14	; select bank14
 10975  0AE8  1010               	bcf	16,0	;volatile
 10976  0AE9                     l5715:
 10977                           
 10978                           ;mcc_generated_files/tmr1.c: 87:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 10979  0AE9  0024               	movlb	4	; select bank4
 10980  0AEA  080D               	movf	13,w	;volatile
 10981  0AEB  0021               	movlb	1	; select bank1
 10982  0AEC  00EA               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
 10983  0AED  0024               	movlb	4	; select bank4
 10984  0AEE  080C               	movf	12,w	;volatile
 10985  0AEF  0021               	movlb	1	; select bank1
 10986  0AF0  00E9               	movwf	_timer1ReloadVal^(0+128)	;volatile
 10987  0AF1                     l5717:
 10988                           
 10989                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
 10990  0AF1  002E               	movlb	14	; select bank14
 10991  0AF2  141A               	bsf	26,0	;volatile
 10992  0AF3                     l5719:
 10993                           
 10994                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 10995  0AF3  30FF               	movlw	low _TMR1_DefaultInterruptHandler
 10996  0AF4  0020               	movlb	0	; select bank0
 10997  0AF5  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 10998  0AF6  3007               	movlw	high _TMR1_DefaultInterruptHandler
 10999  0AF7  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 11000  0AF8  3189  2185  318A   	fcall	_TMR1_SetInterruptHandler
 11001  0AFB                     l5721:
 11002                           
 11003                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x01;
 11004  0AFB  3001               	movlw	1
 11005  0AFC  0024               	movlb	4	; select bank4
 11006  0AFD  008E               	movwf	14	;volatile
 11007  0AFE                     l532:
 11008  0AFE  0008               	return
 11009  0AFF                     __end_of_TMR1_Initialize:
 11010                           
 11011                           	psect	text20
 11012  0985                     __ptext20:	
 11013 ;; *************** function _TMR1_SetInterruptHandler *****************
 11014 ;; Defined at:
 11015 ;;		line 185 in file "mcc_generated_files/tmr1.c"
 11016 ;; Parameters:    Size  Location     Type
 11017 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 11018 ;;		 -> timerInterrupt(1), TMR1_DefaultInterruptHandler(1), 
 11019 ;; Auto vars:     Size  Location     Type
 11020 ;;		None
 11021 ;; Return value:  Size  Location     Type
 11022 ;;                  1    wreg      void 
 11023 ;; Registers used:
 11024 ;;		wreg
 11025 ;; Tracked objects:
 11026 ;;		On entry : 0/0
 11027 ;;		On exit  : 0/0
 11028 ;;		Unchanged: 0/0
 11029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11030 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11033 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11034 ;;Total ram usage:        2 bytes
 11035 ;; Hardware stack levels used: 1
 11036 ;; Hardware stack levels required when called: 5
 11037 ;; This function calls:
 11038 ;;		Nothing
 11039 ;; This function is called by:
 11040 ;;		_TMR1_Initialize
 11041 ;;		_main
 11042 ;; This function uses a non-reentrant model
 11043 ;;
 11044                           
 11045                           
 11046                           ;psect for function _TMR1_SetInterruptHandler
 11047  0985                     _TMR1_SetInterruptHandler:
 11048  0985                     l5527:	
 11049                           ;incstack = 0
 11050                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 11051                           
 11052                           
 11053                           ;mcc_generated_files/tmr1.c: 186:     TMR1_InterruptHandler = InterruptHandler;
 11054  0985  0020               	movlb	0	; select bank0
 11055  0986  0821               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 11056  0987  0021               	movlb	1	; select bank1
 11057  0988  00E8               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
 11058  0989  0020               	movlb	0	; select bank0
 11059  098A  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 11060  098B  0021               	movlb	1	; select bank1
 11061  098C  00E7               	movwf	_TMR1_InterruptHandler^(0+128)
 11062  098D                     l565:
 11063  098D  0008               	return
 11064  098E                     __end_of_TMR1_SetInterruptHandler:
 11065                           
 11066                           	psect	text21
 11067  096B                     __ptext21:	
 11068 ;; *************** function _PMD_Initialize *****************
 11069 ;; Defined at:
 11070 ;;		line 74 in file "mcc_generated_files/mcc.c"
 11071 ;; Parameters:    Size  Location     Type
 11072 ;;		None
 11073 ;; Auto vars:     Size  Location     Type
 11074 ;;		None
 11075 ;; Return value:  Size  Location     Type
 11076 ;;                  1    wreg      void 
 11077 ;; Registers used:
 11078 ;;		status,2
 11079 ;; Tracked objects:
 11080 ;;		On entry : 0/0
 11081 ;;		On exit  : 0/0
 11082 ;;		Unchanged: 0/0
 11083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11084 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11087 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11088 ;;Total ram usage:        0 bytes
 11089 ;; Hardware stack levels used: 1
 11090 ;; Hardware stack levels required when called: 5
 11091 ;; This function calls:
 11092 ;;		Nothing
 11093 ;; This function is called by:
 11094 ;;		_SYSTEM_Initialize
 11095 ;; This function uses a non-reentrant model
 11096 ;;
 11097                           
 11098                           
 11099                           ;psect for function _PMD_Initialize
 11100  096B                     _PMD_Initialize:
 11101  096B                     l4359:	
 11102                           ;incstack = 0
 11103                           ; Regs used in _PMD_Initialize: [status,2]
 11104                           
 11105                           
 11106                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
 11107  096B  002F               	movlb	15	; select bank15
 11108  096C  0196               	clrf	22	;volatile
 11109                           
 11110                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
 11111  096D  0197               	clrf	23	;volatile
 11112                           
 11113                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
 11114  096E  0198               	clrf	24	;volatile
 11115                           
 11116                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
 11117  096F  0199               	clrf	25	;volatile
 11118                           
 11119                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
 11120  0970  019A               	clrf	26	;volatile
 11121                           
 11122                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
 11123  0971  019B               	clrf	27	;volatile
 11124  0972                     l482:
 11125  0972  0008               	return
 11126  0973                     __end_of_PMD_Initialize:
 11127                           
 11128                           	psect	text22
 11129  0BC4                     __ptext22:	
 11130 ;; *************** function _PIN_MANAGER_Initialize *****************
 11131 ;; Defined at:
 11132 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 11133 ;; Parameters:    Size  Location     Type
 11134 ;;		None
 11135 ;; Auto vars:     Size  Location     Type
 11136 ;;		None
 11137 ;; Return value:  Size  Location     Type
 11138 ;;                  1    wreg      void 
 11139 ;; Registers used:
 11140 ;;		wreg, status,2
 11141 ;; Tracked objects:
 11142 ;;		On entry : 0/0
 11143 ;;		On exit  : 0/0
 11144 ;;		Unchanged: 0/0
 11145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11150 ;;Total ram usage:        0 bytes
 11151 ;; Hardware stack levels used: 1
 11152 ;; Hardware stack levels required when called: 5
 11153 ;; This function calls:
 11154 ;;		Nothing
 11155 ;; This function is called by:
 11156 ;;		_SYSTEM_Initialize
 11157 ;; This function uses a non-reentrant model
 11158 ;;
 11159                           
 11160                           
 11161                           ;psect for function _PIN_MANAGER_Initialize
 11162  0BC4                     _PIN_MANAGER_Initialize:
 11163  0BC4                     l4309:	
 11164                           ;incstack = 0
 11165                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 11166                           
 11167                           
 11168                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 11169  0BC4  0020               	movlb	0	; select bank0
 11170  0BC5  019A               	clrf	26	;volatile
 11171                           
 11172                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 11173  0BC6  0199               	clrf	25	;volatile
 11174                           
 11175                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 11176  0BC7  0196               	clrf	22	;volatile
 11177                           
 11178                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 11179  0BC8  0197               	clrf	23	;volatile
 11180                           
 11181                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 11182  0BC9  0198               	clrf	24	;volatile
 11183  0BCA                     l4311:
 11184                           
 11185                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 11186  0BCA  3007               	movlw	7
 11187  0BCB  0095               	movwf	21	;volatile
 11188  0BCC                     l4313:
 11189                           
 11190                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x0F;
 11191  0BCC  300F               	movlw	15
 11192  0BCD  0091               	movwf	17	;volatile
 11193  0BCE                     l4315:
 11194                           
 11195                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 11196  0BCE  30FF               	movlw	255
 11197  0BCF  0092               	movwf	18	;volatile
 11198  0BD0                     l4317:
 11199                           
 11200                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 11201  0BD0  30FF               	movlw	255
 11202  0BD1  0093               	movwf	19	;volatile
 11203  0BD2                     l4319:
 11204                           
 11205                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 11206  0BD2  30FF               	movlw	255
 11207  0BD3  0094               	movwf	20	;volatile
 11208  0BD4                     l4321:
 11209                           
 11210                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
 11211  0BD4  30FF               	movlw	255
 11212  0BD5  003E               	movlb	30	; select bank30
 11213  0BD6  00D9               	movwf	89	;volatile
 11214  0BD7                     l4323:
 11215                           
 11216                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xC7;
 11217  0BD7  30C7               	movlw	199
 11218  0BD8  00CE               	movwf	78	;volatile
 11219  0BD9                     l4325:
 11220                           
 11221                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xEF;
 11222  0BD9  30EF               	movlw	239
 11223  0BDA  00C3               	movwf	67	;volatile
 11224  0BDB                     l4327:
 11225                           
 11226                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 11227  0BDB  3007               	movlw	7
 11228  0BDC  00E4               	movwf	100	;volatile
 11229  0BDD                     l4329:
 11230                           
 11231                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x0F;
 11232  0BDD  300F               	movlw	15
 11233  0BDE  00B8               	movwf	56	;volatile
 11234                           
 11235                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 11236  0BDF  01DA               	clrf	90	;volatile
 11237                           
 11238                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 11239  0BE0  01E5               	clrf	101	;volatile
 11240                           
 11241                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 11242  0BE1  01C4               	clrf	68	;volatile
 11243                           
 11244                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 11245  0BE2  01B9               	clrf	57	;volatile
 11246                           
 11247                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 11248  0BE3  01CF               	clrf	79	;volatile
 11249                           
 11250                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 11251  0BE4  01E6               	clrf	102	;volatile
 11252                           
 11253                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 11254  0BE5  01BA               	clrf	58	;volatile
 11255                           
 11256                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 11257  0BE6  01C5               	clrf	69	;volatile
 11258                           
 11259                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 11260  0BE7  01D0               	clrf	80	;volatile
 11261                           
 11262                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 11263  0BE8  01DB               	clrf	91	;volatile
 11264  0BE9                     l4331:
 11265                           
 11266                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 11267  0BE9  30FF               	movlw	255
 11268  0BEA  00BB               	movwf	59	;volatile
 11269  0BEB                     l4333:
 11270                           
 11271                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 11272  0BEB  30FF               	movlw	255
 11273  0BEC  00C6               	movwf	70	;volatile
 11274  0BED                     l4335:
 11275                           
 11276                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 11277  0BED  30FF               	movlw	255
 11278  0BEE  00D1               	movwf	81	;volatile
 11279  0BEF                     l4337:
 11280                           
 11281                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 11282  0BEF  30FF               	movlw	255
 11283  0BF0  00DC               	movwf	92	;volatile
 11284  0BF1                     l4339:
 11285                           
 11286                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 11287  0BF1  3007               	movlw	7
 11288  0BF2  00E7               	movwf	103	;volatile
 11289  0BF3                     l4341:
 11290                           
 11291                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 11292  0BF3  30FF               	movlw	255
 11293  0BF4  00BC               	movwf	60	;volatile
 11294  0BF5                     l4343:
 11295                           
 11296                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 11297  0BF5  30FF               	movlw	255
 11298  0BF6  00C7               	movwf	71	;volatile
 11299  0BF7                     l4345:
 11300                           
 11301                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 11302  0BF7  30FF               	movlw	255
 11303  0BF8  00D2               	movwf	82	;volatile
 11304  0BF9                     l4347:
 11305                           
 11306                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 11307  0BF9  30FF               	movlw	255
 11308  0BFA  00DD               	movwf	93	;volatile
 11309  0BFB                     l4349:
 11310                           
 11311                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
 11312  0BFB  3007               	movlw	7
 11313  0BFC  00E8               	movwf	104	;volatile
 11314  0BFD                     l4351:
 11315                           
 11316                           ;mcc_generated_files/pin_manager.c: 127:     SSP1CLKPPS = 0x13;
 11317  0BFD  3013               	movlw	19
 11318  0BFE  003D               	movlb	29	; select bank29
 11319  0BFF  00C5               	movwf	69	;volatile
 11320  0C00                     l4353:
 11321                           
 11322                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x14;
 11323  0C00  3014               	movlw	20
 11324  0C01  003E               	movlb	30	; select bank30
 11325  0C02  00A3               	movwf	35	;volatile
 11326  0C03                     l4355:
 11327                           
 11328                           ;mcc_generated_files/pin_manager.c: 129:     RC4PPS = 0x15;
 11329  0C03  3015               	movlw	21
 11330  0C04  00A4               	movwf	36	;volatile
 11331  0C05                     l4357:
 11332                           
 11333                           ;mcc_generated_files/pin_manager.c: 130:     SSP1DATPPS = 0x14;
 11334  0C05  3014               	movlw	20
 11335  0C06  003D               	movlb	29	; select bank29
 11336  0C07  00C6               	movwf	70	;volatile
 11337  0C08                     l436:
 11338  0C08  0008               	return
 11339  0C09                     __end_of_PIN_MANAGER_Initialize:
 11340                           
 11341                           	psect	text23
 11342  097C                     __ptext23:	
 11343 ;; *************** function _OSCILLATOR_Initialize *****************
 11344 ;; Defined at:
 11345 ;;		line 60 in file "mcc_generated_files/mcc.c"
 11346 ;; Parameters:    Size  Location     Type
 11347 ;;		None
 11348 ;; Auto vars:     Size  Location     Type
 11349 ;;		None
 11350 ;; Return value:  Size  Location     Type
 11351 ;;                  1    wreg      void 
 11352 ;; Registers used:
 11353 ;;		wreg, status,2
 11354 ;; Tracked objects:
 11355 ;;		On entry : 0/0
 11356 ;;		On exit  : 0/0
 11357 ;;		Unchanged: 0/0
 11358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11363 ;;Total ram usage:        0 bytes
 11364 ;; Hardware stack levels used: 1
 11365 ;; Hardware stack levels required when called: 5
 11366 ;; This function calls:
 11367 ;;		Nothing
 11368 ;; This function is called by:
 11369 ;;		_SYSTEM_Initialize
 11370 ;; This function uses a non-reentrant model
 11371 ;;
 11372                           
 11373                           
 11374                           ;psect for function _OSCILLATOR_Initialize
 11375  097C                     _OSCILLATOR_Initialize:
 11376  097C                     l4369:	
 11377                           ;incstack = 0
 11378                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 11379                           
 11380                           
 11381                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x62;
 11382  097C  3062               	movlw	98
 11383  097D  0031               	movlb	17	; select bank17
 11384  097E  008D               	movwf	13	;volatile
 11385  097F                     l4371:
 11386                           
 11387                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
 11388  097F  018F               	clrf	15	;volatile
 11389  0980                     l4373:
 11390                           
 11391                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
 11392  0980  0191               	clrf	17	;volatile
 11393                           
 11394                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x02;
 11395  0981  3002               	movlw	2
 11396  0982  0093               	movwf	19	;volatile
 11397  0983                     l4375:
 11398                           
 11399                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
 11400  0983  0192               	clrf	18	;volatile
 11401  0984                     l479:
 11402  0984  0008               	return
 11403  0985                     __end_of_OSCILLATOR_Initialize:
 11404                           
 11405                           	psect	text24
 11406  098E                     __ptext24:	
 11407 ;; *************** function _I2C1_Initialize *****************
 11408 ;; Defined at:
 11409 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 11410 ;; Parameters:    Size  Location     Type
 11411 ;;		None
 11412 ;; Auto vars:     Size  Location     Type
 11413 ;;		None
 11414 ;; Return value:  Size  Location     Type
 11415 ;;                  1    wreg      void 
 11416 ;; Registers used:
 11417 ;;		wreg, status,2
 11418 ;; Tracked objects:
 11419 ;;		On entry : 0/0
 11420 ;;		On exit  : 0/0
 11421 ;;		Unchanged: 0/0
 11422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11427 ;;Total ram usage:        0 bytes
 11428 ;; Hardware stack levels used: 1
 11429 ;; Hardware stack levels required when called: 5
 11430 ;; This function calls:
 11431 ;;		Nothing
 11432 ;; This function is called by:
 11433 ;;		_SYSTEM_Initialize
 11434 ;; This function uses a non-reentrant model
 11435 ;;
 11436                           
 11437                           
 11438                           ;psect for function _I2C1_Initialize
 11439  098E                     _I2C1_Initialize:
 11440  098E                     l4361:	
 11441                           ;incstack = 0
 11442                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 11443                           
 11444                           
 11445                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x80;
 11446  098E  3080               	movlw	128
 11447  098F  0023               	movlb	3	; select bank3
 11448  0990  008F               	movwf	15	;volatile
 11449                           
 11450                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 11451  0991  3008               	movlw	8
 11452  0992  0090               	movwf	16	;volatile
 11453  0993                     l4363:
 11454                           
 11455                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 11456  0993  0191               	clrf	17	;volatile
 11457  0994                     l4365:
 11458                           
 11459                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x03;
 11460  0994  3003               	movlw	3
 11461  0995  008D               	movwf	13	;volatile
 11462  0996                     l4367:
 11463                           
 11464                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 11465  0996  1290               	bcf	16,5	;volatile
 11466  0997                     l876:
 11467  0997  0008               	return
 11468  0998                     __end_of_I2C1_Initialize:
 11469                           
 11470                           	psect	text25
 11471  0A01                     __ptext25:	
 11472 ;; *************** function _ADCC_Initialize *****************
 11473 ;; Defined at:
 11474 ;;		line 63 in file "mcc_generated_files/adcc.c"
 11475 ;; Parameters:    Size  Location     Type
 11476 ;;		None
 11477 ;; Auto vars:     Size  Location     Type
 11478 ;;		None
 11479 ;; Return value:  Size  Location     Type
 11480 ;;                  1    wreg      void 
 11481 ;; Registers used:
 11482 ;;		wreg, status,2
 11483 ;; Tracked objects:
 11484 ;;		On entry : 0/0
 11485 ;;		On exit  : 0/0
 11486 ;;		Unchanged: 0/0
 11487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11492 ;;Total ram usage:        0 bytes
 11493 ;; Hardware stack levels used: 1
 11494 ;; Hardware stack levels required when called: 5
 11495 ;; This function calls:
 11496 ;;		Nothing
 11497 ;; This function is called by:
 11498 ;;		_SYSTEM_Initialize
 11499 ;; This function uses a non-reentrant model
 11500 ;;
 11501                           
 11502                           
 11503                           ;psect for function _ADCC_Initialize
 11504  0A01                     _ADCC_Initialize:
 11505  0A01                     l4377:	
 11506                           ;incstack = 0
 11507                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 11508                           
 11509                           
 11510                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
 11511  0A01  0022               	movlb	2	; select bank2
 11512  0A02  018E               	clrf	14	;volatile
 11513                           
 11514                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
 11515  0A03  018F               	clrf	15	;volatile
 11516                           
 11517                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 11518  0A04  0190               	clrf	16	;volatile
 11519                           
 11520                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
 11521  0A05  0191               	clrf	17	;volatile
 11522                           
 11523                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 11524  0A06  0192               	clrf	18	;volatile
 11525                           
 11526                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 11527  0A07  0193               	clrf	19	;volatile
 11528                           
 11529                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
 11530  0A08  018D               	clrf	13	;volatile
 11531                           
 11532                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
 11533  0A09  0021               	movlb	1	; select bank1
 11534  0A0A  019E               	clrf	30	;volatile
 11535                           
 11536                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
 11537  0A0B  019B               	clrf	27	;volatile
 11538                           
 11539                           ;mcc_generated_files/adcc.c: 85:     ADPRE = 0x00;
 11540  0A0C  019C               	clrf	28	;volatile
 11541                           
 11542                           ;mcc_generated_files/adcc.c: 87:     ADCON1 = 0x00;
 11543  0A0D  0194               	clrf	20	;volatile
 11544                           
 11545                           ;mcc_generated_files/adcc.c: 89:     ADCON2 = 0x00;
 11546  0A0E  0195               	clrf	21	;volatile
 11547                           
 11548                           ;mcc_generated_files/adcc.c: 91:     ADCON3 = 0x00;
 11549  0A0F  0196               	clrf	22	;volatile
 11550                           
 11551                           ;mcc_generated_files/adcc.c: 93:     ADSTAT = 0x00;
 11552  0A10  0197               	clrf	23	;volatile
 11553                           
 11554                           ;mcc_generated_files/adcc.c: 95:     ADREF = 0x00;
 11555  0A11  019A               	clrf	26	;volatile
 11556                           
 11557                           ;mcc_generated_files/adcc.c: 97:     ADACT = 0x00;
 11558  0A12  0199               	clrf	25	;volatile
 11559                           
 11560                           ;mcc_generated_files/adcc.c: 99:     ADCLK = 0x00;
 11561  0A13  0198               	clrf	24	;volatile
 11562  0A14                     l4379:
 11563                           
 11564                           ;mcc_generated_files/adcc.c: 101:     ADCON0 = 0x84;
 11565  0A14  3084               	movlw	132
 11566  0A15  0093               	movwf	19	;volatile
 11567  0A16                     l4381:
 11568                           
 11569                           ;mcc_generated_files/adcc.c: 103:     ADACQ = 0x00;
 11570  0A16  019D               	clrf	29	;volatile
 11571  0A17                     l643:
 11572  0A17  0008               	return
 11573  0A18                     __end_of_ADCC_Initialize:
 11574                           
 11575                           	psect	text26
 11576  0998                     __ptext26:	
 11577 ;; *************** function _S1 *****************
 11578 ;; Defined at:
 11579 ;;		line 57 in file "main.c"
 11580 ;; Parameters:    Size  Location     Type
 11581 ;;		None
 11582 ;; Auto vars:     Size  Location     Type
 11583 ;;		None
 11584 ;; Return value:  Size  Location     Type
 11585 ;;                  1    wreg      void 
 11586 ;; Registers used:
 11587 ;;		None
 11588 ;; Tracked objects:
 11589 ;;		On entry : 0/0
 11590 ;;		On exit  : 0/0
 11591 ;;		Unchanged: 0/0
 11592 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11597 ;;Total ram usage:        0 bytes
 11598 ;; Hardware stack levels used: 1
 11599 ;; Hardware stack levels required when called: 5
 11600 ;; This function calls:
 11601 ;;		Nothing
 11602 ;; This function is called by:
 11603 ;;		_main
 11604 ;; This function uses a non-reentrant model
 11605 ;;
 11606                           
 11607                           
 11608                           ;psect for function _S1
 11609  0998                     _S1:
 11610  0998                     l4589:	
 11611                           ;incstack = 0
 11612                           ; Regs used in _S1: []
 11613                           
 11614                           
 11615                           ;main.c: 58:     if(PORTBbits.RB4==0 && PORTAbits.RA6==1){
 11616  0998  0020               	movlb	0	; select bank0
 11617  0999  1A0D               	btfsc	13,4	;volatile
 11618  099A  299C               	goto	u3541
 11619  099B  299D               	goto	u3540
 11620  099C                     u3541:
 11621  099C  29A2               	goto	l1152
 11622  099D                     u3540:
 11623  099D                     l4591:
 11624  099D  1F0C               	btfss	12,6	;volatile
 11625  099E  29A0               	goto	u3551
 11626  099F  29A1               	goto	u3550
 11627  09A0                     u3551:
 11628  09A0  29A2               	goto	l1152
 11629  09A1                     u3550:
 11630  09A1                     l1150:	
 11631                           ;main.c: 59:         do { LATAbits.LATA6 = 0; } while(0);
 11632                           
 11633  09A1  1316               	bcf	22,6	;volatile
 11634  09A2                     l1152:
 11635  09A2  0008               	return
 11636  09A3                     __end_of_S1:
 11637                           
 11638                           	psect	text27
 11639  09B0                     __ptext27:	
 11640 ;; *************** function _OpenI2C *****************
 11641 ;; Defined at:
 11642 ;;		line 26 in file "I2C/i2c.c"
 11643 ;; Parameters:    Size  Location     Type
 11644 ;;		None
 11645 ;; Auto vars:     Size  Location     Type
 11646 ;;		None
 11647 ;; Return value:  Size  Location     Type
 11648 ;;                  1    wreg      void 
 11649 ;; Registers used:
 11650 ;;		wreg, status,2
 11651 ;; Tracked objects:
 11652 ;;		On entry : 0/0
 11653 ;;		On exit  : 0/0
 11654 ;;		Unchanged: 0/0
 11655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11660 ;;Total ram usage:        0 bytes
 11661 ;; Hardware stack levels used: 1
 11662 ;; Hardware stack levels required when called: 5
 11663 ;; This function calls:
 11664 ;;		Nothing
 11665 ;; This function is called by:
 11666 ;;		_main
 11667 ;; This function uses a non-reentrant model
 11668 ;;
 11669                           
 11670                           
 11671                           ;psect for function _OpenI2C
 11672  09B0                     _OpenI2C:
 11673  09B0                     l4431:	
 11674                           ;incstack = 0
 11675                           ; Regs used in _OpenI2C: [wreg+status,2]
 11676                           
 11677                           
 11678                           ;I2C/i2c.c: 28:   SSP1STAT = 0x80;
 11679  09B0  3080               	movlw	128
 11680  09B1  0023               	movlb	3	; select bank3
 11681  09B2  008F               	movwf	15	;volatile
 11682                           
 11683                           ;I2C/i2c.c: 29:   SSP1CON1 = 0x08;
 11684  09B3  3008               	movlw	8
 11685  09B4  0090               	movwf	16	;volatile
 11686  09B5                     l4433:
 11687                           
 11688                           ;I2C/i2c.c: 30:   SSP1CON2 = 0x00;
 11689  09B5  0191               	clrf	17	;volatile
 11690  09B6                     l4435:
 11691                           
 11692                           ;I2C/i2c.c: 31:   SSP1ADD = 0x03;
 11693  09B6  3003               	movlw	3
 11694  09B7  008D               	movwf	13	;volatile
 11695  09B8                     l4437:
 11696                           
 11697                           ;I2C/i2c.c: 32:   SSP1CON1bits.SSPEN = 1;
 11698  09B8  1690               	bsf	16,5	;volatile
 11699  09B9                     l4439:
 11700                           
 11701                           ;I2C/i2c.c: 34:   TRISCbits.TRISC3 = 1;
 11702  09B9  0020               	movlb	0	; select bank0
 11703  09BA  1593               	bsf	19,3	;volatile
 11704  09BB                     l4441:
 11705                           
 11706                           ;I2C/i2c.c: 35:   TRISCbits.TRISC4 = 1;
 11707  09BB  1613               	bsf	19,4	;volatile
 11708  09BC                     l23:
 11709  09BC  0008               	return
 11710  09BD                     __end_of_OpenI2C:
 11711                           
 11712                           	psect	text28
 11713  0A31                     __ptext28:	
 11714 ;; *************** function _LCDstr *****************
 11715 ;; Defined at:
 11716 ;;		line 112 in file "LCD/lcd.c"
 11717 ;; Parameters:    Size  Location     Type
 11718 ;;  p               2    9[BANK0 ] PTR unsigned char 
 11719 ;;		 -> main@buf(17), STR_2(8), STR_1(5), 
 11720 ;; Auto vars:     Size  Location     Type
 11721 ;;  c               1   14[BANK0 ] unsigned char 
 11722 ;; Return value:  Size  Location     Type
 11723 ;;                  1    wreg      void 
 11724 ;; Registers used:
 11725 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11726 ;; Tracked objects:
 11727 ;;		On entry : 0/0
 11728 ;;		On exit  : 0/0
 11729 ;;		Unchanged: 0/0
 11730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11731 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11732 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11733 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11734 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11735 ;;Total ram usage:        6 bytes
 11736 ;; Hardware stack levels used: 1
 11737 ;; Hardware stack levels required when called: 8
 11738 ;; This function calls:
 11739 ;;		_LCDchar
 11740 ;; This function is called by:
 11741 ;;		_main
 11742 ;; This function uses a non-reentrant model
 11743 ;;
 11744                           
 11745                           
 11746                           ;psect for function _LCDstr
 11747  0A31                     _LCDstr:
 11748  0A31                     l5769:	
 11749                           ;incstack = 0
 11750                           ; Regs used in _LCDstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11751                           
 11752                           
 11753                           ;LCD/lcd.c: 112: void LCDstr(char *p);LCD/lcd.c: 113: {;LCD/lcd.c: 114:   unsigned char 
      +                          c;;LCD/lcd.c: 116:   while((c = *p++)) LCDchar(c);
 11754  0A31  2A36               	goto	l5773
 11755  0A32                     l5771:
 11756  0A32  082E               	movf	LCDstr@c,w
 11757  0A33  3189  2173  318A   	fcall	_LCDchar
 11758  0A36                     l5773:
 11759  0A36  0020               	movlb	0	; select bank0
 11760  0A37  082A               	movf	LCDstr@p+1,w
 11761  0A38  00AC               	movwf	??_LCDstr+1
 11762  0A39  0829               	movf	LCDstr@p,w
 11763  0A3A  00AB               	movwf	??_LCDstr
 11764  0A3B  0AA9               	incf	LCDstr@p,f
 11765  0A3C  1903               	skipnz
 11766  0A3D  0AAA               	incf	LCDstr@p+1,f
 11767  0A3E  082B               	movf	??_LCDstr,w
 11768  0A3F  0084               	movwf	4
 11769  0A40  082C               	movf	??_LCDstr+1,w
 11770  0A41  0085               	movwf	5
 11771  0A42  0800               	movf	0,w	;code access
 11772  0A43  00AD               	movwf	??_LCDstr+2
 11773  0A44  082D               	movf	??_LCDstr+2,w
 11774  0A45  00AE               	movwf	LCDstr@c
 11775  0A46  082E               	movf	LCDstr@c,w
 11776  0A47  1D03               	btfss	3,2
 11777  0A48  2A4A               	goto	u5431
 11778  0A49  2A4B               	goto	u5430
 11779  0A4A                     u5431:
 11780  0A4A  2A32               	goto	l5771
 11781  0A4B                     u5430:
 11782  0A4B                     l244:
 11783  0A4B  0008               	return
 11784  0A4C                     __end_of_LCDstr:
 11785                           
 11786                           	psect	text29
 11787  0973                     __ptext29:	
 11788 ;; *************** function _LCDchar *****************
 11789 ;; Defined at:
 11790 ;;		line 107 in file "LCD/lcd.c"
 11791 ;; Parameters:    Size  Location     Type
 11792 ;;  c               1    wreg     unsigned char 
 11793 ;; Auto vars:     Size  Location     Type
 11794 ;;  c               1    8[BANK0 ] unsigned char 
 11795 ;; Return value:  Size  Location     Type
 11796 ;;                  1    wreg      void 
 11797 ;; Registers used:
 11798 ;;		wreg, status,2, status,0, pclath, cstack
 11799 ;; Tracked objects:
 11800 ;;		On entry : 0/0
 11801 ;;		On exit  : 0/0
 11802 ;;		Unchanged: 0/0
 11803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11805 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11807 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11808 ;;Total ram usage:        1 bytes
 11809 ;; Hardware stack levels used: 1
 11810 ;; Hardware stack levels required when called: 7
 11811 ;; This function calls:
 11812 ;;		_LCDsend2x4
 11813 ;; This function is called by:
 11814 ;;		_LCDstr
 11815 ;; This function uses a non-reentrant model
 11816 ;;
 11817                           
 11818                           
 11819                           ;psect for function _LCDchar
 11820  0973                     _LCDchar:
 11821                           
 11822                           ;incstack = 0
 11823                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
 11824                           ;LCDchar@c stored from wreg
 11825  0973  0020               	movlb	0	; select bank0
 11826  0974  00A8               	movwf	LCDchar@c
 11827  0975                     l5703:
 11828                           
 11829                           ;LCD/lcd.c: 107: void LCDchar(unsigned char c);LCD/lcd.c: 108: {;LCD/lcd.c: 109:   LCDse
      +                          nd2x4(c, 0x01);
 11830  0975  01A2               	clrf	LCDsend2x4@mode
 11831  0976  0AA2               	incf	LCDsend2x4@mode,f
 11832  0977  0828               	movf	LCDchar@c,w
 11833  0978  3187  2714  3189   	fcall	_LCDsend2x4
 11834  097B                     l238:
 11835  097B  0008               	return
 11836  097C                     __end_of_LCDchar:
 11837                           
 11838                           	psect	text30
 11839  0A67                     __ptext30:	
 11840 ;; *************** function _LCDpos *****************
 11841 ;; Defined at:
 11842 ;;		line 125 in file "LCD/lcd.c"
 11843 ;; Parameters:    Size  Location     Type
 11844 ;;  l               1    wreg     unsigned char 
 11845 ;;  c               1    9[BANK0 ] unsigned char 
 11846 ;; Auto vars:     Size  Location     Type
 11847 ;;  l               1   11[BANK0 ] unsigned char 
 11848 ;;  p               1   12[BANK0 ] unsigned char 
 11849 ;; Return value:  Size  Location     Type
 11850 ;;                  1    wreg      void 
 11851 ;; Registers used:
 11852 ;;		wreg, status,2, status,0, pclath, cstack
 11853 ;; Tracked objects:
 11854 ;;		On entry : 0/0
 11855 ;;		On exit  : 0/0
 11856 ;;		Unchanged: 0/0
 11857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11858 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11859 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11860 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11861 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11862 ;;Total ram usage:        4 bytes
 11863 ;; Hardware stack levels used: 1
 11864 ;; Hardware stack levels required when called: 8
 11865 ;; This function calls:
 11866 ;;		_LCDcmd
 11867 ;; This function is called by:
 11868 ;;		_main
 11869 ;; This function uses a non-reentrant model
 11870 ;;
 11871                           
 11872                           
 11873                           ;psect for function _LCDpos
 11874  0A67                     _LCDpos:
 11875                           
 11876                           ;incstack = 0
 11877                           ; Regs used in _LCDpos: [wreg+status,2+status,0+pclath+cstack]
 11878                           ;LCDpos@l stored from wreg
 11879  0A67  0020               	movlb	0	; select bank0
 11880  0A68  00AB               	movwf	LCDpos@l
 11881  0A69                     l5785:
 11882                           
 11883                           ;LCD/lcd.c: 125: void LCDpos(unsigned char l, unsigned char c);LCD/lcd.c: 126: {;LCD/lcd
      +                          .c: 127:   unsigned char p;;LCD/lcd.c: 131:   if (l>1) p = 0xc0; else p=0x80;
 11884  0A69  3002               	movlw	2
 11885  0A6A  022B               	subwf	LCDpos@l,w
 11886  0A6B  1C03               	skipc
 11887  0A6C  2A6E               	goto	u5451
 11888  0A6D  2A6F               	goto	u5450
 11889  0A6E                     u5451:
 11890  0A6E  2A74               	goto	l5789
 11891  0A6F                     u5450:
 11892  0A6F                     l5787:
 11893  0A6F  30C0               	movlw	192
 11894  0A70  00AA               	movwf	??_LCDpos
 11895  0A71  082A               	movf	??_LCDpos,w
 11896  0A72  00AC               	movwf	LCDpos@p
 11897  0A73  2A78               	goto	l5791
 11898  0A74                     l5789:
 11899  0A74  3080               	movlw	128
 11900  0A75  00AA               	movwf	??_LCDpos
 11901  0A76  082A               	movf	??_LCDpos,w
 11902  0A77  00AC               	movwf	LCDpos@p
 11903  0A78                     l5791:
 11904                           
 11905                           ;LCD/lcd.c: 132:   p = p | (c&0x0f);
 11906  0A78  0829               	movf	LCDpos@c,w
 11907  0A79  390F               	andlw	15
 11908  0A7A  042C               	iorwf	LCDpos@p,w
 11909  0A7B  00AA               	movwf	??_LCDpos
 11910  0A7C  082A               	movf	??_LCDpos,w
 11911  0A7D  00AC               	movwf	LCDpos@p
 11912  0A7E                     l5793:
 11913                           
 11914                           ;LCD/lcd.c: 133:   LCDcmd(p);
 11915  0A7E  082C               	movf	LCDpos@p,w
 11916  0A7F  3189  2163  318A   	fcall	_LCDcmd
 11917  0A82                     l253:
 11918  0A82  0008               	return
 11919  0A83                     __end_of_LCDpos:
 11920                           
 11921                           	psect	text31
 11922  0963                     __ptext31:	
 11923 ;; *************** function _LCDcmd *****************
 11924 ;; Defined at:
 11925 ;;		line 102 in file "LCD/lcd.c"
 11926 ;; Parameters:    Size  Location     Type
 11927 ;;  c               1    wreg     unsigned char 
 11928 ;; Auto vars:     Size  Location     Type
 11929 ;;  c               1    8[BANK0 ] unsigned char 
 11930 ;; Return value:  Size  Location     Type
 11931 ;;                  1    wreg      void 
 11932 ;; Registers used:
 11933 ;;		wreg, status,2, status,0, pclath, cstack
 11934 ;; Tracked objects:
 11935 ;;		On entry : 0/0
 11936 ;;		On exit  : 0/0
 11937 ;;		Unchanged: 0/0
 11938 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11940 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11942 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11943 ;;Total ram usage:        1 bytes
 11944 ;; Hardware stack levels used: 1
 11945 ;; Hardware stack levels required when called: 7
 11946 ;; This function calls:
 11947 ;;		_LCDsend2x4
 11948 ;; This function is called by:
 11949 ;;		_LCDpos
 11950 ;;		_main
 11951 ;; This function uses a non-reentrant model
 11952 ;;
 11953                           
 11954                           
 11955                           ;psect for function _LCDcmd
 11956  0963                     _LCDcmd:
 11957                           
 11958                           ;incstack = 0
 11959                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
 11960                           ;LCDcmd@c stored from wreg
 11961  0963  0020               	movlb	0	; select bank0
 11962  0964  00A8               	movwf	LCDcmd@c
 11963  0965                     l5701:
 11964                           
 11965                           ;LCD/lcd.c: 102: void LCDcmd(unsigned char c);LCD/lcd.c: 103: {;LCD/lcd.c: 104:   LCDsen
      +                          d2x4(c, 0);
 11966  0965  01A2               	clrf	LCDsend2x4@mode
 11967  0966  0828               	movf	LCDcmd@c,w
 11968  0967  3187  2714  3189   	fcall	_LCDsend2x4
 11969  096A                     l235:
 11970  096A  0008               	return
 11971  096B                     __end_of_LCDcmd:
 11972                           
 11973                           	psect	text32
 11974  0D5D                     __ptext32:	
 11975 ;; *************** function _LCDinit *****************
 11976 ;; Defined at:
 11977 ;;		line 79 in file "LCD/lcd.c"
 11978 ;; Parameters:    Size  Location     Type
 11979 ;;		None
 11980 ;; Auto vars:     Size  Location     Type
 11981 ;;		None
 11982 ;; Return value:  Size  Location     Type
 11983 ;;                  1    wreg      void 
 11984 ;; Registers used:
 11985 ;;		wreg, status,2, status,0, pclath, cstack
 11986 ;; Tracked objects:
 11987 ;;		On entry : 0/0
 11988 ;;		On exit  : 0/0
 11989 ;;		Unchanged: 0/0
 11990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11993 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11994 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11995 ;;Total ram usage:        1 bytes
 11996 ;; Hardware stack levels used: 1
 11997 ;; Hardware stack levels required when called: 7
 11998 ;; This function calls:
 11999 ;;		_LCDsend
 12000 ;;		_LCDsend2x4
 12001 ;; This function is called by:
 12002 ;;		_main
 12003 ;; This function uses a non-reentrant model
 12004 ;;
 12005                           
 12006                           
 12007                           ;psect for function _LCDinit
 12008  0D5D                     _LCDinit:
 12009  0D5D                     l5735:	
 12010                           ;incstack = 0
 12011                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
 12012                           
 12013                           
 12014                           ;LCD/lcd.c: 81:   _delay((unsigned long)((50)*(4000000/4000.0)));
 12015  0D5D  3041               	movlw	65
 12016  0D5E  0020               	movlb	0	; select bank0
 12017  0D5F  00A8               	movwf	??_LCDinit
 12018  0D60  30EE               	movlw	238
 12019  0D61                     u5757:
 12020  0D61  0B89               	decfsz	9,f
 12021  0D62  2D61               	goto	u5757
 12022  0D63  0BA8               	decfsz	??_LCDinit,f
 12023  0D64  2D61               	goto	u5757
 12024  0D65  0000               	nop
 12025  0D66                     l5737:
 12026                           
 12027                           ;LCD/lcd.c: 82:   LCDsend(0x30);
 12028  0D66  3030               	movlw	48
 12029  0D67  318C  245A  318D   	fcall	_LCDsend
 12030  0D6A                     l5739:
 12031                           
 12032                           ;LCD/lcd.c: 83:   LCDsend(0x34); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x30);
 12033  0D6A  3034               	movlw	52
 12034  0D6B  318C  245A  318D   	fcall	_LCDsend
 12035  0D6E  30A6               	movlw	166
 12036  0D6F                     u5767:
 12037  0D6F  0B89               	decfsz	9,f
 12038  0D70  2D6F               	goto	u5767
 12039  0D71  3200               	nop2
 12040  0D72                     l5741:
 12041  0D72  3030               	movlw	48
 12042  0D73  318C  245A  318D   	fcall	_LCDsend
 12043  0D76                     l5743:
 12044                           
 12045                           ;LCD/lcd.c: 84:   _delay((unsigned long)((5)*(4000000/4000.0)));
 12046  0D76  3007               	movlw	7
 12047  0D77  0020               	movlb	0	; select bank0
 12048  0D78  00A8               	movwf	??_LCDinit
 12049  0D79  307D               	movlw	125
 12050  0D7A                     u5777:
 12051  0D7A  0B89               	decfsz	9,f
 12052  0D7B  2D7A               	goto	u5777
 12053  0D7C  0BA8               	decfsz	??_LCDinit,f
 12054  0D7D  2D7A               	goto	u5777
 12055                           
 12056                           ;LCD/lcd.c: 85:   LCDsend(0x30);
 12057  0D7E  3030               	movlw	48
 12058  0D7F  318C  245A  318D   	fcall	_LCDsend
 12059                           
 12060                           ;LCD/lcd.c: 86:   LCDsend(0x34); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x30);
 12061  0D82  3034               	movlw	52
 12062  0D83  318C  245A  318D   	fcall	_LCDsend
 12063  0D86                     l5745:
 12064  0D86  30A6               	movlw	166
 12065  0D87                     u5787:
 12066  0D87  0B89               	decfsz	9,f
 12067  0D88  2D87               	goto	u5787
 12068  0D89  3200               	nop2
 12069  0D8A                     l5747:
 12070  0D8A  3030               	movlw	48
 12071  0D8B  318C  245A  318D   	fcall	_LCDsend
 12072                           
 12073                           ;LCD/lcd.c: 87:   _delay((unsigned long)((100)*(4000000/4000000.0)));
 12074  0D8E  3021               	movlw	33
 12075  0D8F                     u5797:
 12076  0D8F  0B89               	decfsz	9,f
 12077  0D90  2D8F               	goto	u5797
 12078  0D91  0000               	nop
 12079  0D92                     l5749:
 12080                           
 12081                           ;LCD/lcd.c: 88:   LCDsend(0x30);
 12082  0D92  3030               	movlw	48
 12083  0D93  318C  245A  318D   	fcall	_LCDsend
 12084  0D96                     l5751:
 12085                           
 12086                           ;LCD/lcd.c: 89:   LCDsend(0x34); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x30);
 12087  0D96  3034               	movlw	52
 12088  0D97  318C  245A  318D   	fcall	_LCDsend
 12089  0D9A  30A6               	movlw	166
 12090  0D9B                     u5807:
 12091  0D9B  0B89               	decfsz	9,f
 12092  0D9C  2D9B               	goto	u5807
 12093  0D9D  3200               	nop2
 12094  0D9E                     l5753:
 12095  0D9E  3030               	movlw	48
 12096  0D9F  318C  245A  318D   	fcall	_LCDsend
 12097  0DA2                     l5755:
 12098                           
 12099                           ;LCD/lcd.c: 90:   _delay((unsigned long)((100)*(4000000/4000000.0)));
 12100  0DA2  3021               	movlw	33
 12101  0DA3                     u5817:
 12102  0DA3  0B89               	decfsz	9,f
 12103  0DA4  2DA3               	goto	u5817
 12104  0DA5  0000               	nop
 12105                           
 12106                           ;LCD/lcd.c: 91:   LCDsend(0x20);
 12107  0DA6  3020               	movlw	32
 12108  0DA7  318C  245A  318D   	fcall	_LCDsend
 12109                           
 12110                           ;LCD/lcd.c: 92:   LCDsend(0x24); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x20);
 12111  0DAA  3024               	movlw	36
 12112  0DAB  318C  245A  318D   	fcall	_LCDsend
 12113  0DAE                     l5757:
 12114  0DAE  30A6               	movlw	166
 12115  0DAF                     u5827:
 12116  0DAF  0B89               	decfsz	9,f
 12117  0DB0  2DAF               	goto	u5827
 12118  0DB1  3200               	nop2
 12119  0DB2                     l5759:
 12120  0DB2  3020               	movlw	32
 12121  0DB3  318C  245A  318D   	fcall	_LCDsend
 12122                           
 12123                           ;LCD/lcd.c: 93:   _delay((unsigned long)((5)*(4000000/4000.0)));
 12124  0DB6  3007               	movlw	7
 12125  0DB7  0020               	movlb	0	; select bank0
 12126  0DB8  00A8               	movwf	??_LCDinit
 12127  0DB9  307D               	movlw	125
 12128  0DBA                     u5837:
 12129  0DBA  0B89               	decfsz	9,f
 12130  0DBB  2DBA               	goto	u5837
 12131  0DBC  0BA8               	decfsz	??_LCDinit,f
 12132  0DBD  2DBA               	goto	u5837
 12133  0DBE                     l5761:
 12134                           
 12135                           ;LCD/lcd.c: 95:   LCDsend2x4(0x28, 0);
 12136  0DBE  0020               	movlb	0	; select bank0
 12137  0DBF  01A2               	clrf	LCDsend2x4@mode
 12138  0DC0  3028               	movlw	40
 12139  0DC1  3187  2714  318D   	fcall	_LCDsend2x4
 12140  0DC4                     l5763:
 12141                           
 12142                           ;LCD/lcd.c: 96:   LCDsend2x4(0x06, 0);
 12143  0DC4  0020               	movlb	0	; select bank0
 12144  0DC5  01A2               	clrf	LCDsend2x4@mode
 12145  0DC6  3006               	movlw	6
 12146  0DC7  3187  2714  318D   	fcall	_LCDsend2x4
 12147  0DCA                     l5765:
 12148                           
 12149                           ;LCD/lcd.c: 97:   LCDsend2x4(0x0f, 0);
 12150  0DCA  0020               	movlb	0	; select bank0
 12151  0DCB  01A2               	clrf	LCDsend2x4@mode
 12152  0DCC  300F               	movlw	15
 12153  0DCD  3187  2714  318D   	fcall	_LCDsend2x4
 12154  0DD0                     l5767:
 12155                           
 12156                           ;LCD/lcd.c: 98:   LCDsend2x4(0x01, 0);
 12157  0DD0  0020               	movlb	0	; select bank0
 12158  0DD1  01A2               	clrf	LCDsend2x4@mode
 12159  0DD2  3001               	movlw	1
 12160  0DD3  3187  2714  318D   	fcall	_LCDsend2x4
 12161                           
 12162                           ;LCD/lcd.c: 99:   _delay((unsigned long)((2)*(4000000/4000.0)));
 12163  0DD6  3003               	movlw	3
 12164  0DD7  0020               	movlb	0	; select bank0
 12165  0DD8  00A8               	movwf	??_LCDinit
 12166  0DD9  3097               	movlw	151
 12167  0DDA                     u5847:
 12168  0DDA  0B89               	decfsz	9,f
 12169  0DDB  2DDA               	goto	u5847
 12170  0DDC  0BA8               	decfsz	??_LCDinit,f
 12171  0DDD  2DDA               	goto	u5847
 12172  0DDE  3200               	nop2
 12173  0DDF                     l232:
 12174  0DDF  0008               	return
 12175  0DE0                     __end_of_LCDinit:
 12176                           
 12177                           	psect	text33
 12178  0714                     __ptext33:	
 12179 ;; *************** function _LCDsend2x4 *****************
 12180 ;; Defined at:
 12181 ;;		line 56 in file "LCD/lcd.c"
 12182 ;; Parameters:    Size  Location     Type
 12183 ;;  c               1    wreg     unsigned char 
 12184 ;;  mode            1    2[BANK0 ] unsigned char 
 12185 ;; Auto vars:     Size  Location     Type
 12186 ;;  c               1    5[BANK0 ] unsigned char 
 12187 ;;  lc              1    7[BANK0 ] unsigned char 
 12188 ;;  hc              1    6[BANK0 ] unsigned char 
 12189 ;; Return value:  Size  Location     Type
 12190 ;;                  1    wreg      void 
 12191 ;; Registers used:
 12192 ;;		wreg, status,2, status,0, pclath, cstack
 12193 ;; Tracked objects:
 12194 ;;		On entry : 0/0
 12195 ;;		On exit  : 0/0
 12196 ;;		Unchanged: 0/0
 12197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12198 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12199 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12200 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12201 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12202 ;;Total ram usage:        6 bytes
 12203 ;; Hardware stack levels used: 1
 12204 ;; Hardware stack levels required when called: 6
 12205 ;; This function calls:
 12206 ;;		_WriteI2C
 12207 ;; This function is called by:
 12208 ;;		_LCDinit
 12209 ;;		_LCDcmd
 12210 ;;		_LCDchar
 12211 ;; This function uses a non-reentrant model
 12212 ;;
 12213                           
 12214                           
 12215                           ;psect for function _LCDsend2x4
 12216  0714                     _LCDsend2x4:
 12217                           
 12218                           ;incstack = 0
 12219                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 12220                           ;LCDsend2x4@c stored from wreg
 12221  0714  0020               	movlb	0	; select bank0
 12222  0715  00A5               	movwf	LCDsend2x4@c
 12223  0716                     l5489:
 12224                           
 12225                           ;LCD/lcd.c: 56: void LCDsend2x4(unsigned char c, unsigned char mode);LCD/lcd.c: 57: {;LC
      +                          D/lcd.c: 58:   unsigned char hc;;LCD/lcd.c: 59:   unsigned char lc;;LCD/lcd.c: 61:   hc 
      +                          = c & 0xf0;
 12226  0716  0825               	movf	LCDsend2x4@c,w
 12227  0717  39F0               	andlw	240
 12228  0718  00A3               	movwf	??_LCDsend2x4
 12229  0719  0823               	movf	??_LCDsend2x4,w
 12230  071A  00A6               	movwf	LCDsend2x4@hc
 12231  071B                     l5491:
 12232                           
 12233                           ;LCD/lcd.c: 62:   lc = (c << 4) & 0xf0;
 12234  071B  0825               	movf	LCDsend2x4@c,w
 12235  071C  00A3               	movwf	??_LCDsend2x4
 12236  071D  3003               	movlw	3
 12237  071E                     u4865:
 12238  071E  35A3               	lslf	??_LCDsend2x4,f
 12239  071F  3EFF               	addlw	-1
 12240  0720  1D03               	skipz
 12241  0721  2F1E               	goto	u4865
 12242  0722  3523               	lslf	??_LCDsend2x4,w
 12243  0723  39F0               	andlw	240
 12244  0724  00A4               	movwf	??_LCDsend2x4+1
 12245  0725  0824               	movf	??_LCDsend2x4+1,w
 12246  0726  00A7               	movwf	LCDsend2x4@lc
 12247  0727                     l5493:	
 12248                           ;LCD/lcd.c: 64:   while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12249                           
 12250  0727  0023               	movlb	3	; select bank3
 12251  0728  0C0F               	rrf	15,w	;volatile
 12252  0729  0C89               	rrf	9,f
 12253  072A  3901               	andlw	1
 12254  072B  0020               	movlb	0	; select bank0
 12255  072C  00A3               	movwf	??_LCDsend2x4
 12256  072D  0023               	movlb	3	; select bank3
 12257  072E  0811               	movf	17,w	;volatile
 12258  072F  391F               	andlw	31
 12259  0730  0020               	movlb	0	; select bank0
 12260  0731  0423               	iorwf	??_LCDsend2x4,w
 12261  0732  1D03               	btfss	3,2
 12262  0733  2F35               	goto	u4871
 12263  0734  2F36               	goto	u4870
 12264  0735                     u4871:
 12265  0735  2F27               	goto	l5493
 12266  0736                     u4870:
 12267  0736                     l195:	
 12268                           ;LCD/lcd.c: 65:   do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12269                           
 12270  0736  0023               	movlb	3	; select bank3
 12271  0737  1411               	bsf	17,0	;volatile
 12272  0738                     l196:
 12273  0738  1811               	btfsc	17,0	;volatile
 12274  0739  2F3B               	goto	u4881
 12275  073A  2F3C               	goto	u4880
 12276  073B                     u4881:
 12277  073B  2F38               	goto	l196
 12278  073C                     u4880:
 12279  073C                     l5495:
 12280  073C  0023               	movlb	3	; select bank3
 12281  073D  0C0F               	rrf	15,w	;volatile
 12282  073E  0C89               	rrf	9,f
 12283  073F  3901               	andlw	1
 12284  0740  0020               	movlb	0	; select bank0
 12285  0741  00A3               	movwf	??_LCDsend2x4
 12286  0742  0023               	movlb	3	; select bank3
 12287  0743  0811               	movf	17,w	;volatile
 12288  0744  391F               	andlw	31
 12289  0745  0020               	movlb	0	; select bank0
 12290  0746  0423               	iorwf	??_LCDsend2x4,w
 12291  0747  1D03               	btfss	3,2
 12292  0748  2F4A               	goto	u4891
 12293  0749  2F4B               	goto	u4890
 12294  074A                     u4891:
 12295  074A  2F3C               	goto	l5495
 12296  074B                     u4890:
 12297  074B                     l5497:
 12298                           
 12299                           ;LCD/lcd.c: 66:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12300  074B  304E               	movlw	78
 12301  074C  318D  2503  3187   	fcall	_WriteI2C
 12302  074F                     l5499:
 12303  074F  0023               	movlb	3	; select bank3
 12304  0750  0C0F               	rrf	15,w	;volatile
 12305  0751  0C89               	rrf	9,f
 12306  0752  3901               	andlw	1
 12307  0753  0020               	movlb	0	; select bank0
 12308  0754  00A3               	movwf	??_LCDsend2x4
 12309  0755  0023               	movlb	3	; select bank3
 12310  0756  0811               	movf	17,w	;volatile
 12311  0757  391F               	andlw	31
 12312  0758  0020               	movlb	0	; select bank0
 12313  0759  0423               	iorwf	??_LCDsend2x4,w
 12314  075A  1D03               	btfss	3,2
 12315  075B  2F5D               	goto	u4901
 12316  075C  2F5E               	goto	u4900
 12317  075D                     u4901:
 12318  075D  2F4F               	goto	l5499
 12319  075E                     u4900:
 12320  075E                     l5501:
 12321                           
 12322                           ;LCD/lcd.c: 67:   WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 12323  075E  0826               	movf	LCDsend2x4@hc,w
 12324  075F  0422               	iorwf	LCDsend2x4@mode,w
 12325  0760  3808               	iorlw	8
 12326  0761  318D  2503  3187   	fcall	_WriteI2C
 12327  0764                     l5503:
 12328  0764  0023               	movlb	3	; select bank3
 12329  0765  0C0F               	rrf	15,w	;volatile
 12330  0766  0C89               	rrf	9,f
 12331  0767  3901               	andlw	1
 12332  0768  0020               	movlb	0	; select bank0
 12333  0769  00A3               	movwf	??_LCDsend2x4
 12334  076A  0023               	movlb	3	; select bank3
 12335  076B  0811               	movf	17,w	;volatile
 12336  076C  391F               	andlw	31
 12337  076D  0020               	movlb	0	; select bank0
 12338  076E  0423               	iorwf	??_LCDsend2x4,w
 12339  076F  1D03               	btfss	3,2
 12340  0770  2F72               	goto	u4911
 12341  0771  2F73               	goto	u4910
 12342  0772                     u4911:
 12343  0772  2F64               	goto	l5503
 12344  0773                     u4910:
 12345  0773                     l5505:
 12346                           
 12347                           ;LCD/lcd.c: 68:   WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STA
      +                          Tbits.R_W));
 12348  0773  0826               	movf	LCDsend2x4@hc,w
 12349  0774  0422               	iorwf	LCDsend2x4@mode,w
 12350  0775  380C               	iorlw	12
 12351  0776  318D  2503  3187   	fcall	_WriteI2C
 12352  0779                     l5507:
 12353  0779  0023               	movlb	3	; select bank3
 12354  077A  0C0F               	rrf	15,w	;volatile
 12355  077B  0C89               	rrf	9,f
 12356  077C  3901               	andlw	1
 12357  077D  0020               	movlb	0	; select bank0
 12358  077E  00A3               	movwf	??_LCDsend2x4
 12359  077F  0023               	movlb	3	; select bank3
 12360  0780  0811               	movf	17,w	;volatile
 12361  0781  391F               	andlw	31
 12362  0782  0020               	movlb	0	; select bank0
 12363  0783  0423               	iorwf	??_LCDsend2x4,w
 12364  0784  1D03               	btfss	3,2
 12365  0785  2F87               	goto	u4921
 12366  0786  2F88               	goto	u4920
 12367  0787                     u4921:
 12368  0787  2F79               	goto	l5507
 12369  0788                     u4920:
 12370  0788                     l211:
 12371                           
 12372                           ;LCD/lcd.c: 69:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 12373  0788  0000               	nop
 12374  0789                     l5509:
 12375                           
 12376                           ;LCD/lcd.c: 70:   WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 12377  0789  0020               	movlb	0	; select bank0
 12378  078A  0826               	movf	LCDsend2x4@hc,w
 12379  078B  0422               	iorwf	LCDsend2x4@mode,w
 12380  078C  3808               	iorlw	8
 12381  078D  318D  2503  3187   	fcall	_WriteI2C
 12382  0790                     l5511:
 12383  0790  0023               	movlb	3	; select bank3
 12384  0791  0C0F               	rrf	15,w	;volatile
 12385  0792  0C89               	rrf	9,f
 12386  0793  3901               	andlw	1
 12387  0794  0020               	movlb	0	; select bank0
 12388  0795  00A3               	movwf	??_LCDsend2x4
 12389  0796  0023               	movlb	3	; select bank3
 12390  0797  0811               	movf	17,w	;volatile
 12391  0798  391F               	andlw	31
 12392  0799  0020               	movlb	0	; select bank0
 12393  079A  0423               	iorwf	??_LCDsend2x4,w
 12394  079B  1D03               	btfss	3,2
 12395  079C  2F9E               	goto	u4931
 12396  079D  2F9F               	goto	u4930
 12397  079E                     u4931:
 12398  079E  2F90               	goto	l5511
 12399  079F                     u4930:
 12400  079F                     l5513:
 12401                           
 12402                           ;LCD/lcd.c: 71:   WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 12403  079F  0827               	movf	LCDsend2x4@lc,w
 12404  07A0  0422               	iorwf	LCDsend2x4@mode,w
 12405  07A1  3808               	iorlw	8
 12406  07A2  318D  2503  3187   	fcall	_WriteI2C
 12407  07A5                     l5515:
 12408  07A5  0023               	movlb	3	; select bank3
 12409  07A6  0C0F               	rrf	15,w	;volatile
 12410  07A7  0C89               	rrf	9,f
 12411  07A8  3901               	andlw	1
 12412  07A9  0020               	movlb	0	; select bank0
 12413  07AA  00A3               	movwf	??_LCDsend2x4
 12414  07AB  0023               	movlb	3	; select bank3
 12415  07AC  0811               	movf	17,w	;volatile
 12416  07AD  391F               	andlw	31
 12417  07AE  0020               	movlb	0	; select bank0
 12418  07AF  0423               	iorwf	??_LCDsend2x4,w
 12419  07B0  1D03               	btfss	3,2
 12420  07B1  2FB3               	goto	u4941
 12421  07B2  2FB4               	goto	u4940
 12422  07B3                     u4941:
 12423  07B3  2FA5               	goto	l5515
 12424  07B4                     u4940:
 12425  07B4                     l5517:
 12426                           
 12427                           ;LCD/lcd.c: 72:   WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STA
      +                          Tbits.R_W));
 12428  07B4  0827               	movf	LCDsend2x4@lc,w
 12429  07B5  0422               	iorwf	LCDsend2x4@mode,w
 12430  07B6  380C               	iorlw	12
 12431  07B7  318D  2503  3187   	fcall	_WriteI2C
 12432  07BA                     l5519:
 12433  07BA  0023               	movlb	3	; select bank3
 12434  07BB  0C0F               	rrf	15,w	;volatile
 12435  07BC  0C89               	rrf	9,f
 12436  07BD  3901               	andlw	1
 12437  07BE  0020               	movlb	0	; select bank0
 12438  07BF  00A3               	movwf	??_LCDsend2x4
 12439  07C0  0023               	movlb	3	; select bank3
 12440  07C1  0811               	movf	17,w	;volatile
 12441  07C2  391F               	andlw	31
 12442  07C3  0020               	movlb	0	; select bank0
 12443  07C4  0423               	iorwf	??_LCDsend2x4,w
 12444  07C5  1D03               	btfss	3,2
 12445  07C6  2FC8               	goto	u4951
 12446  07C7  2FC9               	goto	u4950
 12447  07C8                     u4951:
 12448  07C8  2FBA               	goto	l5519
 12449  07C9                     u4950:
 12450  07C9                     l220:
 12451                           
 12452                           ;LCD/lcd.c: 73:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 12453  07C9  0000               	nop
 12454  07CA                     l5521:
 12455                           
 12456                           ;LCD/lcd.c: 74:   WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 12457  07CA  0020               	movlb	0	; select bank0
 12458  07CB  0827               	movf	LCDsend2x4@lc,w
 12459  07CC  0422               	iorwf	LCDsend2x4@mode,w
 12460  07CD  3808               	iorlw	8
 12461  07CE  318D  2503  3187   	fcall	_WriteI2C
 12462  07D1                     l5523:
 12463  07D1  0023               	movlb	3	; select bank3
 12464  07D2  0C0F               	rrf	15,w	;volatile
 12465  07D3  0C89               	rrf	9,f
 12466  07D4  3901               	andlw	1
 12467  07D5  0020               	movlb	0	; select bank0
 12468  07D6  00A3               	movwf	??_LCDsend2x4
 12469  07D7  0023               	movlb	3	; select bank3
 12470  07D8  0811               	movf	17,w	;volatile
 12471  07D9  391F               	andlw	31
 12472  07DA  0020               	movlb	0	; select bank0
 12473  07DB  0423               	iorwf	??_LCDsend2x4,w
 12474  07DC  1D03               	btfss	3,2
 12475  07DD  2FDF               	goto	u4961
 12476  07DE  2FE0               	goto	u4960
 12477  07DF                     u4961:
 12478  07DF  2FD1               	goto	l5523
 12479  07E0                     u4960:
 12480  07E0                     l224:	
 12481                           ;LCD/lcd.c: 75:   do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 12482                           
 12483  07E0  0023               	movlb	3	; select bank3
 12484  07E1  1511               	bsf	17,2	;volatile
 12485  07E2                     l225:
 12486  07E2  1911               	btfsc	17,2	;volatile
 12487  07E3  2FE5               	goto	u4971
 12488  07E4  2FE6               	goto	u4970
 12489  07E5                     u4971:
 12490  07E5  2FE2               	goto	l225
 12491  07E6                     u4970:
 12492  07E6                     l5525:
 12493                           
 12494                           ;LCD/lcd.c: 76:   _delay((unsigned long)((50)*(4000000/4000000.0)));
 12495  07E6  3010               	movlw	16
 12496  07E7                     u5857:
 12497  07E7  0B89               	decfsz	9,f
 12498  07E8  2FE7               	goto	u5857
 12499  07E9  3200               	nop2
 12500  07EA                     l229:
 12501  07EA  0008               	return
 12502  07EB                     __end_of_LCDsend2x4:
 12503                           
 12504                           	psect	text34
 12505  0C5A                     __ptext34:	
 12506 ;; *************** function _LCDsend *****************
 12507 ;; Defined at:
 12508 ;;		line 17 in file "LCD/lcd.c"
 12509 ;; Parameters:    Size  Location     Type
 12510 ;;  c               1    wreg     unsigned char 
 12511 ;; Auto vars:     Size  Location     Type
 12512 ;;  c               1    3[BANK0 ] unsigned char 
 12513 ;; Return value:  Size  Location     Type
 12514 ;;                  1    wreg      void 
 12515 ;; Registers used:
 12516 ;;		wreg, status,2, status,0, pclath, cstack
 12517 ;; Tracked objects:
 12518 ;;		On entry : 0/0
 12519 ;;		On exit  : 0/0
 12520 ;;		Unchanged: 0/0
 12521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12523 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12524 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12525 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12526 ;;Total ram usage:        2 bytes
 12527 ;; Hardware stack levels used: 1
 12528 ;; Hardware stack levels required when called: 6
 12529 ;; This function calls:
 12530 ;;		_WriteI2C
 12531 ;; This function is called by:
 12532 ;;		_LCDinit
 12533 ;; This function uses a non-reentrant model
 12534 ;;
 12535                           
 12536                           
 12537                           ;psect for function _LCDsend
 12538  0C5A                     _LCDsend:
 12539                           
 12540                           ;incstack = 0
 12541                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
 12542                           ;LCDsend@c stored from wreg
 12543  0C5A  0020               	movlb	0	; select bank0
 12544  0C5B  00A3               	movwf	LCDsend@c
 12545  0C5C                     l5621:
 12546  0C5C                     l5623:	
 12547                           ;LCD/lcd.c: 17: void LCDsend(unsigned char c);LCD/lcd.c: 18: {;LCD/lcd.c: 19:   while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12548                           
 12549  0C5C  0023               	movlb	3	; select bank3
 12550  0C5D  0C0F               	rrf	15,w	;volatile
 12551  0C5E  0C89               	rrf	9,f
 12552  0C5F  3901               	andlw	1
 12553  0C60  0020               	movlb	0	; select bank0
 12554  0C61  00A2               	movwf	??_LCDsend
 12555  0C62  0023               	movlb	3	; select bank3
 12556  0C63  0811               	movf	17,w	;volatile
 12557  0C64  391F               	andlw	31
 12558  0C65  0020               	movlb	0	; select bank0
 12559  0C66  0422               	iorwf	??_LCDsend,w
 12560  0C67  1D03               	btfss	3,2
 12561  0C68  2C6A               	goto	u5091
 12562  0C69  2C6B               	goto	u5090
 12563  0C6A                     u5091:
 12564  0C6A  2C5C               	goto	l5623
 12565  0C6B                     u5090:
 12566  0C6B                     l73:	
 12567                           ;LCD/lcd.c: 20:   do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12568                           
 12569  0C6B  0023               	movlb	3	; select bank3
 12570  0C6C  1411               	bsf	17,0	;volatile
 12571  0C6D                     l74:
 12572  0C6D  1811               	btfsc	17,0	;volatile
 12573  0C6E  2C70               	goto	u5101
 12574  0C6F  2C71               	goto	u5100
 12575  0C70                     u5101:
 12576  0C70  2C6D               	goto	l74
 12577  0C71                     u5100:
 12578  0C71                     l5625:
 12579  0C71  0023               	movlb	3	; select bank3
 12580  0C72  0C0F               	rrf	15,w	;volatile
 12581  0C73  0C89               	rrf	9,f
 12582  0C74  3901               	andlw	1
 12583  0C75  0020               	movlb	0	; select bank0
 12584  0C76  00A2               	movwf	??_LCDsend
 12585  0C77  0023               	movlb	3	; select bank3
 12586  0C78  0811               	movf	17,w	;volatile
 12587  0C79  391F               	andlw	31
 12588  0C7A  0020               	movlb	0	; select bank0
 12589  0C7B  0422               	iorwf	??_LCDsend,w
 12590  0C7C  1D03               	btfss	3,2
 12591  0C7D  2C7F               	goto	u5111
 12592  0C7E  2C80               	goto	u5110
 12593  0C7F                     u5111:
 12594  0C7F  2C71               	goto	l5625
 12595  0C80                     u5110:
 12596  0C80                     l5627:
 12597                           
 12598                           ;LCD/lcd.c: 21:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12599  0C80  304E               	movlw	78
 12600  0C81  318D  2503  318C   	fcall	_WriteI2C
 12601  0C84                     l5629:
 12602  0C84  0023               	movlb	3	; select bank3
 12603  0C85  0C0F               	rrf	15,w	;volatile
 12604  0C86  0C89               	rrf	9,f
 12605  0C87  3901               	andlw	1
 12606  0C88  0020               	movlb	0	; select bank0
 12607  0C89  00A2               	movwf	??_LCDsend
 12608  0C8A  0023               	movlb	3	; select bank3
 12609  0C8B  0811               	movf	17,w	;volatile
 12610  0C8C  391F               	andlw	31
 12611  0C8D  0020               	movlb	0	; select bank0
 12612  0C8E  0422               	iorwf	??_LCDsend,w
 12613  0C8F  1D03               	btfss	3,2
 12614  0C90  2C92               	goto	u5121
 12615  0C91  2C93               	goto	u5120
 12616  0C92                     u5121:
 12617  0C92  2C84               	goto	l5629
 12618  0C93                     u5120:
 12619  0C93                     l5631:
 12620                           
 12621                           ;LCD/lcd.c: 22:   WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12622  0C93  0823               	movf	LCDsend@c,w
 12623  0C94  318D  2503  318C   	fcall	_WriteI2C
 12624  0C97                     l5633:
 12625  0C97  0023               	movlb	3	; select bank3
 12626  0C98  0C0F               	rrf	15,w	;volatile
 12627  0C99  0C89               	rrf	9,f
 12628  0C9A  3901               	andlw	1
 12629  0C9B  0020               	movlb	0	; select bank0
 12630  0C9C  00A2               	movwf	??_LCDsend
 12631  0C9D  0023               	movlb	3	; select bank3
 12632  0C9E  0811               	movf	17,w	;volatile
 12633  0C9F  391F               	andlw	31
 12634  0CA0  0020               	movlb	0	; select bank0
 12635  0CA1  0422               	iorwf	??_LCDsend,w
 12636  0CA2  1D03               	btfss	3,2
 12637  0CA3  2CA5               	goto	u5131
 12638  0CA4  2CA6               	goto	u5130
 12639  0CA5                     u5131:
 12640  0CA5  2C97               	goto	l5633
 12641  0CA6                     u5130:
 12642  0CA6                     l87:	
 12643                           ;LCD/lcd.c: 23:   do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 12644                           
 12645  0CA6  0023               	movlb	3	; select bank3
 12646  0CA7  1511               	bsf	17,2	;volatile
 12647  0CA8                     l88:
 12648  0CA8  1911               	btfsc	17,2	;volatile
 12649  0CA9  2CAB               	goto	u5141
 12650  0CAA  2CAC               	goto	u5140
 12651  0CAB                     u5141:
 12652  0CAB  2CA8               	goto	l88
 12653  0CAC                     u5140:
 12654  0CAC                     l92:
 12655  0CAC  0008               	return
 12656  0CAD                     __end_of_LCDsend:
 12657                           
 12658                           	psect	text35
 12659  09EE                     __ptext35:	
 12660 ;; *************** function _LCDbusy *****************
 12661 ;; Defined at:
 12662 ;;		line 119 in file "LCD/lcd.c"
 12663 ;; Parameters:    Size  Location     Type
 12664 ;;		None
 12665 ;; Auto vars:     Size  Location     Type
 12666 ;;		None
 12667 ;; Return value:  Size  Location     Type
 12668 ;;                  2    7[BANK0 ] int 
 12669 ;; Registers used:
 12670 ;;		wreg, status,2, status,0, pclath, cstack
 12671 ;; Tracked objects:
 12672 ;;		On entry : 0/0
 12673 ;;		On exit  : 0/0
 12674 ;;		Unchanged: 0/0
 12675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12676 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12679 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12680 ;;Total ram usage:        2 bytes
 12681 ;; Hardware stack levels used: 1
 12682 ;; Hardware stack levels required when called: 7
 12683 ;; This function calls:
 12684 ;;		_LCDrecv
 12685 ;; This function is called by:
 12686 ;;		_main
 12687 ;; This function uses a non-reentrant model
 12688 ;;
 12689                           
 12690                           
 12691                           ;psect for function _LCDbusy
 12692  09EE                     _LCDbusy:
 12693  09EE                     l5775:	
 12694                           ;incstack = 0
 12695                           ; Regs used in _LCDbusy: [wreg+status,2+status,0+pclath+cstack]
 12696                           
 12697                           
 12698                           ;LCD/lcd.c: 121:   if(LCDrecv(0) & 0x80) return 1;
 12699  09EE  3000               	movlw	0
 12700  09EF  3181  21D0  3189   	fcall	_LCDrecv
 12701  09F2  3980               	andlw	128
 12702  09F3  1903               	btfsc	3,2
 12703  09F4  29F6               	goto	u5441
 12704  09F5  29F7               	goto	u5440
 12705  09F6                     u5441:
 12706  09F6  29FD               	goto	l5781
 12707  09F7                     u5440:
 12708  09F7                     l5777:
 12709  09F7  3001               	movlw	1
 12710  09F8  0020               	movlb	0	; select bank0
 12711  09F9  00A7               	movwf	?_LCDbusy
 12712  09FA  3000               	movlw	0
 12713  09FB  00A8               	movwf	?_LCDbusy+1
 12714  09FC  2A00               	goto	l248
 12715  09FD                     l5781:
 12716                           
 12717                           ;LCD/lcd.c: 122:   return 0;
 12718  09FD  0020               	movlb	0	; select bank0
 12719  09FE  01A7               	clrf	?_LCDbusy
 12720  09FF  01A8               	clrf	?_LCDbusy+1
 12721  0A00                     l248:
 12722  0A00  0008               	return
 12723  0A01                     __end_of_LCDbusy:
 12724                           
 12725                           	psect	text36
 12726  01D0                     __ptext36:	
 12727 ;; *************** function _LCDrecv *****************
 12728 ;; Defined at:
 12729 ;;		line 25 in file "LCD/lcd.c"
 12730 ;; Parameters:    Size  Location     Type
 12731 ;;  mode            1    wreg     unsigned char 
 12732 ;; Auto vars:     Size  Location     Type
 12733 ;;  mode            1    6[BANK0 ] unsigned char 
 12734 ;;  lc              1    5[BANK0 ] unsigned char 
 12735 ;;  hc              1    4[BANK0 ] unsigned char 
 12736 ;; Return value:  Size  Location     Type
 12737 ;;                  1    wreg      unsigned char 
 12738 ;; Registers used:
 12739 ;;		wreg, status,2, status,0, pclath, cstack
 12740 ;; Tracked objects:
 12741 ;;		On entry : 0/0
 12742 ;;		On exit  : 0/0
 12743 ;;		Unchanged: 0/0
 12744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12746 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12747 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12748 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12749 ;;Total ram usage:        5 bytes
 12750 ;; Hardware stack levels used: 1
 12751 ;; Hardware stack levels required when called: 6
 12752 ;; This function calls:
 12753 ;;		_ReadI2C
 12754 ;;		_WriteI2C
 12755 ;; This function is called by:
 12756 ;;		_LCDbusy
 12757 ;; This function uses a non-reentrant model
 12758 ;;
 12759                           
 12760                           
 12761                           ;psect for function _LCDrecv
 12762  01D0                     _LCDrecv:
 12763                           
 12764                           ;incstack = 0
 12765                           ; Regs used in _LCDrecv: [wreg+status,2+status,0+pclath+cstack]
 12766                           ;LCDrecv@mode stored from wreg
 12767  01D0  0020               	movlb	0	; select bank0
 12768  01D1  00A6               	movwf	LCDrecv@mode
 12769  01D2                     l5635:
 12770  01D2                     l5637:	
 12771                           ;LCD/lcd.c: 25: unsigned char LCDrecv(unsigned char mode);LCD/lcd.c: 26: {;LCD/lcd.c: 27
      +                          :   unsigned char hc;;LCD/lcd.c: 28:   unsigned char lc;;LCD/lcd.c: 30:   while ((SSP1CO
      +                          N2 & 0x1F) | (SSP1STATbits.R_W));
 12772                           
 12773  01D2  0023               	movlb	3	; select bank3
 12774  01D3  0C0F               	rrf	15,w	;volatile
 12775  01D4  0C89               	rrf	9,f
 12776  01D5  3901               	andlw	1
 12777  01D6  0020               	movlb	0	; select bank0
 12778  01D7  00A2               	movwf	??_LCDrecv
 12779  01D8  0023               	movlb	3	; select bank3
 12780  01D9  0811               	movf	17,w	;volatile
 12781  01DA  391F               	andlw	31
 12782  01DB  0020               	movlb	0	; select bank0
 12783  01DC  0422               	iorwf	??_LCDrecv,w
 12784  01DD  1D03               	btfss	3,2
 12785  01DE  29E0               	goto	u5151
 12786  01DF  29E1               	goto	u5150
 12787  01E0                     u5151:
 12788  01E0  29D2               	goto	l5637
 12789  01E1                     u5150:
 12790  01E1                     l98:	
 12791                           ;LCD/lcd.c: 31:   do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12792                           
 12793  01E1  0023               	movlb	3	; select bank3
 12794  01E2  1411               	bsf	17,0	;volatile
 12795  01E3                     l99:
 12796  01E3  1811               	btfsc	17,0	;volatile
 12797  01E4  29E6               	goto	u5161
 12798  01E5  29E7               	goto	u5160
 12799  01E6                     u5161:
 12800  01E6  29E3               	goto	l99
 12801  01E7                     u5160:
 12802  01E7                     l5639:
 12803  01E7  0023               	movlb	3	; select bank3
 12804  01E8  0C0F               	rrf	15,w	;volatile
 12805  01E9  0C89               	rrf	9,f
 12806  01EA  3901               	andlw	1
 12807  01EB  0020               	movlb	0	; select bank0
 12808  01EC  00A2               	movwf	??_LCDrecv
 12809  01ED  0023               	movlb	3	; select bank3
 12810  01EE  0811               	movf	17,w	;volatile
 12811  01EF  391F               	andlw	31
 12812  01F0  0020               	movlb	0	; select bank0
 12813  01F1  0422               	iorwf	??_LCDrecv,w
 12814  01F2  1D03               	btfss	3,2
 12815  01F3  29F5               	goto	u5171
 12816  01F4  29F6               	goto	u5170
 12817  01F5                     u5171:
 12818  01F5  29E7               	goto	l5639
 12819  01F6                     u5170:
 12820  01F6                     l5641:
 12821                           
 12822                           ;LCD/lcd.c: 32:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12823  01F6  304E               	movlw	78
 12824  01F7  318D  2503  3181   	fcall	_WriteI2C
 12825  01FA                     l5643:
 12826  01FA  0023               	movlb	3	; select bank3
 12827  01FB  0C0F               	rrf	15,w	;volatile
 12828  01FC  0C89               	rrf	9,f
 12829  01FD  3901               	andlw	1
 12830  01FE  0020               	movlb	0	; select bank0
 12831  01FF  00A2               	movwf	??_LCDrecv
 12832  0200  0023               	movlb	3	; select bank3
 12833  0201  0811               	movf	17,w	;volatile
 12834  0202  391F               	andlw	31
 12835  0203  0020               	movlb	0	; select bank0
 12836  0204  0422               	iorwf	??_LCDrecv,w
 12837  0205  1D03               	btfss	3,2
 12838  0206  2A08               	goto	u5181
 12839  0207  2A09               	goto	u5180
 12840  0208                     u5181:
 12841  0208  29FA               	goto	l5643
 12842  0209                     u5180:
 12843  0209                     l5645:
 12844                           
 12845                           ;LCD/lcd.c: 33:   WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1S
      +                          TATbits.R_W));
 12846  0209  0826               	movf	LCDrecv@mode,w
 12847  020A  38FA               	iorlw	250
 12848  020B  318D  2503  3181   	fcall	_WriteI2C
 12849  020E                     l5647:
 12850  020E  0023               	movlb	3	; select bank3
 12851  020F  0C0F               	rrf	15,w	;volatile
 12852  0210  0C89               	rrf	9,f
 12853  0211  3901               	andlw	1
 12854  0212  0020               	movlb	0	; select bank0
 12855  0213  00A2               	movwf	??_LCDrecv
 12856  0214  0023               	movlb	3	; select bank3
 12857  0215  0811               	movf	17,w	;volatile
 12858  0216  391F               	andlw	31
 12859  0217  0020               	movlb	0	; select bank0
 12860  0218  0422               	iorwf	??_LCDrecv,w
 12861  0219  1D03               	btfss	3,2
 12862  021A  2A1C               	goto	u5191
 12863  021B  2A1D               	goto	u5190
 12864  021C                     u5191:
 12865  021C  2A0E               	goto	l5647
 12866  021D                     u5190:
 12867  021D                     l5649:
 12868                           
 12869                           ;LCD/lcd.c: 34:   WriteI2C(0xf0 | 0x08 | 0x04 | 0x02 | mode); while ((SSP1CON2 & 0x1F) |
      +                           (SSP1STATbits.R_W));
 12870  021D  0826               	movf	LCDrecv@mode,w
 12871  021E  38FE               	iorlw	254
 12872  021F  318D  2503  3181   	fcall	_WriteI2C
 12873  0222                     l5651:
 12874  0222  0023               	movlb	3	; select bank3
 12875  0223  0C0F               	rrf	15,w	;volatile
 12876  0224  0C89               	rrf	9,f
 12877  0225  3901               	andlw	1
 12878  0226  0020               	movlb	0	; select bank0
 12879  0227  00A2               	movwf	??_LCDrecv
 12880  0228  0023               	movlb	3	; select bank3
 12881  0229  0811               	movf	17,w	;volatile
 12882  022A  391F               	andlw	31
 12883  022B  0020               	movlb	0	; select bank0
 12884  022C  0422               	iorwf	??_LCDrecv,w
 12885  022D  1D03               	btfss	3,2
 12886  022E  2A30               	goto	u5201
 12887  022F  2A31               	goto	u5200
 12888  0230                     u5201:
 12889  0230  2A22               	goto	l5651
 12890  0231                     u5200:
 12891  0231                     l114:
 12892                           
 12893                           ;LCD/lcd.c: 35:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 12894  0231  0000               	nop
 12895  0232                     l115:	
 12896                           ;LCD/lcd.c: 36:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12897                           
 12898  0232  0023               	movlb	3	; select bank3
 12899  0233  1491               	bsf	17,1	;volatile
 12900  0234                     l116:
 12901  0234  1891               	btfsc	17,1	;volatile
 12902  0235  2A37               	goto	u5211
 12903  0236  2A38               	goto	u5210
 12904  0237                     u5211:
 12905  0237  2A34               	goto	l116
 12906  0238                     u5210:
 12907  0238                     l5653:
 12908  0238  0023               	movlb	3	; select bank3
 12909  0239  0C0F               	rrf	15,w	;volatile
 12910  023A  0C89               	rrf	9,f
 12911  023B  3901               	andlw	1
 12912  023C  0020               	movlb	0	; select bank0
 12913  023D  00A2               	movwf	??_LCDrecv
 12914  023E  0023               	movlb	3	; select bank3
 12915  023F  0811               	movf	17,w	;volatile
 12916  0240  391F               	andlw	31
 12917  0241  0020               	movlb	0	; select bank0
 12918  0242  0422               	iorwf	??_LCDrecv,w
 12919  0243  1D03               	btfss	3,2
 12920  0244  2A46               	goto	u5221
 12921  0245  2A47               	goto	u5220
 12922  0246                     u5221:
 12923  0246  2A38               	goto	l5653
 12924  0247                     u5220:
 12925  0247                     l5655:
 12926                           
 12927                           ;LCD/lcd.c: 37:   WriteI2C(0x4e | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12928  0247  304F               	movlw	79
 12929  0248  318D  2503  3181   	fcall	_WriteI2C
 12930  024B                     l5657:
 12931  024B  0023               	movlb	3	; select bank3
 12932  024C  0C0F               	rrf	15,w	;volatile
 12933  024D  0C89               	rrf	9,f
 12934  024E  3901               	andlw	1
 12935  024F  0020               	movlb	0	; select bank0
 12936  0250  00A2               	movwf	??_LCDrecv
 12937  0251  0023               	movlb	3	; select bank3
 12938  0252  0811               	movf	17,w	;volatile
 12939  0253  391F               	andlw	31
 12940  0254  0020               	movlb	0	; select bank0
 12941  0255  0422               	iorwf	??_LCDrecv,w
 12942  0256  1D03               	btfss	3,2
 12943  0257  2A59               	goto	u5231
 12944  0258  2A5A               	goto	u5230
 12945  0259                     u5231:
 12946  0259  2A4B               	goto	l5657
 12947  025A                     u5230:
 12948  025A                     l5659:
 12949                           
 12950                           ;LCD/lcd.c: 38:   hc = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12951  025A  318A  229F  3181   	fcall	_ReadI2C
 12952  025D  0020               	movlb	0	; select bank0
 12953  025E  00A2               	movwf	??_LCDrecv
 12954  025F  0822               	movf	??_LCDrecv,w
 12955  0260  00A4               	movwf	LCDrecv@hc
 12956  0261                     l5661:
 12957  0261  0023               	movlb	3	; select bank3
 12958  0262  0C0F               	rrf	15,w	;volatile
 12959  0263  0C89               	rrf	9,f
 12960  0264  3901               	andlw	1
 12961  0265  0020               	movlb	0	; select bank0
 12962  0266  00A2               	movwf	??_LCDrecv
 12963  0267  0023               	movlb	3	; select bank3
 12964  0268  0811               	movf	17,w	;volatile
 12965  0269  391F               	andlw	31
 12966  026A  0020               	movlb	0	; select bank0
 12967  026B  0422               	iorwf	??_LCDrecv,w
 12968  026C  1D03               	btfss	3,2
 12969  026D  2A6F               	goto	u5241
 12970  026E  2A70               	goto	u5240
 12971  026F                     u5241:
 12972  026F  2A61               	goto	l5661
 12973  0270                     u5240:
 12974  0270                     l129:	
 12975                           ;LCD/lcd.c: 39:   do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKE
      +                          N); } while (0);
 12976                           
 12977  0270  0023               	movlb	3	; select bank3
 12978  0271  1691               	bsf	17,5	;volatile
 12979  0272  1611               	bsf	17,4	;volatile
 12980  0273                     l130:
 12981  0273  1A11               	btfsc	17,4	;volatile
 12982  0274  2A76               	goto	u5251
 12983  0275  2A77               	goto	u5250
 12984  0276                     u5251:
 12985  0276  2A73               	goto	l130
 12986  0277                     u5250:
 12987  0277                     l134:	
 12988                           ;LCD/lcd.c: 40:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12989                           
 12990  0277  1491               	bsf	17,1	;volatile
 12991  0278                     l135:
 12992  0278  1891               	btfsc	17,1	;volatile
 12993  0279  2A7B               	goto	u5261
 12994  027A  2A7C               	goto	u5260
 12995  027B                     u5261:
 12996  027B  2A78               	goto	l135
 12997  027C                     u5260:
 12998  027C                     l5663:
 12999  027C  0023               	movlb	3	; select bank3
 13000  027D  0C0F               	rrf	15,w	;volatile
 13001  027E  0C89               	rrf	9,f
 13002  027F  3901               	andlw	1
 13003  0280  0020               	movlb	0	; select bank0
 13004  0281  00A2               	movwf	??_LCDrecv
 13005  0282  0023               	movlb	3	; select bank3
 13006  0283  0811               	movf	17,w	;volatile
 13007  0284  391F               	andlw	31
 13008  0285  0020               	movlb	0	; select bank0
 13009  0286  0422               	iorwf	??_LCDrecv,w
 13010  0287  1D03               	btfss	3,2
 13011  0288  2A8A               	goto	u5271
 13012  0289  2A8B               	goto	u5270
 13013  028A                     u5271:
 13014  028A  2A7C               	goto	l5663
 13015  028B                     u5270:
 13016  028B                     l5665:
 13017                           
 13018                           ;LCD/lcd.c: 41:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13019  028B  304E               	movlw	78
 13020  028C  318D  2503  3181   	fcall	_WriteI2C
 13021  028F                     l5667:
 13022  028F  0023               	movlb	3	; select bank3
 13023  0290  0C0F               	rrf	15,w	;volatile
 13024  0291  0C89               	rrf	9,f
 13025  0292  3901               	andlw	1
 13026  0293  0020               	movlb	0	; select bank0
 13027  0294  00A2               	movwf	??_LCDrecv
 13028  0295  0023               	movlb	3	; select bank3
 13029  0296  0811               	movf	17,w	;volatile
 13030  0297  391F               	andlw	31
 13031  0298  0020               	movlb	0	; select bank0
 13032  0299  0422               	iorwf	??_LCDrecv,w
 13033  029A  1D03               	btfss	3,2
 13034  029B  2A9D               	goto	u5281
 13035  029C  2A9E               	goto	u5280
 13036  029D                     u5281:
 13037  029D  2A8F               	goto	l5667
 13038  029E                     u5280:
 13039  029E                     l5669:
 13040                           
 13041                           ;LCD/lcd.c: 42:   WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1S
      +                          TATbits.R_W));
 13042  029E  0826               	movf	LCDrecv@mode,w
 13043  029F  38FA               	iorlw	250
 13044  02A0  318D  2503  3181   	fcall	_WriteI2C
 13045  02A3                     l5671:
 13046  02A3  0023               	movlb	3	; select bank3
 13047  02A4  0C0F               	rrf	15,w	;volatile
 13048  02A5  0C89               	rrf	9,f
 13049  02A6  3901               	andlw	1
 13050  02A7  0020               	movlb	0	; select bank0
 13051  02A8  00A2               	movwf	??_LCDrecv
 13052  02A9  0023               	movlb	3	; select bank3
 13053  02AA  0811               	movf	17,w	;volatile
 13054  02AB  391F               	andlw	31
 13055  02AC  0020               	movlb	0	; select bank0
 13056  02AD  0422               	iorwf	??_LCDrecv,w
 13057  02AE  1D03               	btfss	3,2
 13058  02AF  2AB1               	goto	u5291
 13059  02B0  2AB2               	goto	u5290
 13060  02B1                     u5291:
 13061  02B1  2AA3               	goto	l5671
 13062  02B2                     u5290:
 13063  02B2                     l5673:
 13064                           
 13065                           ;LCD/lcd.c: 43:   WriteI2C(0xf0 | 0x08 | 0x04 | 0x02 | mode); while ((SSP1CON2 & 0x1F) |
      +                           (SSP1STATbits.R_W));
 13066  02B2  0826               	movf	LCDrecv@mode,w
 13067  02B3  38FE               	iorlw	254
 13068  02B4  318D  2503  3181   	fcall	_WriteI2C
 13069  02B7                     l5675:
 13070  02B7  0023               	movlb	3	; select bank3
 13071  02B8  0C0F               	rrf	15,w	;volatile
 13072  02B9  0C89               	rrf	9,f
 13073  02BA  3901               	andlw	1
 13074  02BB  0020               	movlb	0	; select bank0
 13075  02BC  00A2               	movwf	??_LCDrecv
 13076  02BD  0023               	movlb	3	; select bank3
 13077  02BE  0811               	movf	17,w	;volatile
 13078  02BF  391F               	andlw	31
 13079  02C0  0020               	movlb	0	; select bank0
 13080  02C1  0422               	iorwf	??_LCDrecv,w
 13081  02C2  1D03               	btfss	3,2
 13082  02C3  2AC5               	goto	u5301
 13083  02C4  2AC6               	goto	u5300
 13084  02C5                     u5301:
 13085  02C5  2AB7               	goto	l5675
 13086  02C6                     u5300:
 13087  02C6                     l150:
 13088                           
 13089                           ;LCD/lcd.c: 44:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 13090  02C6  0000               	nop
 13091  02C7                     l151:	
 13092                           ;LCD/lcd.c: 45:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13093                           
 13094  02C7  0023               	movlb	3	; select bank3
 13095  02C8  1491               	bsf	17,1	;volatile
 13096  02C9                     l152:
 13097  02C9  1891               	btfsc	17,1	;volatile
 13098  02CA  2ACC               	goto	u5311
 13099  02CB  2ACD               	goto	u5310
 13100  02CC                     u5311:
 13101  02CC  2AC9               	goto	l152
 13102  02CD                     u5310:
 13103  02CD                     l5677:
 13104  02CD  0023               	movlb	3	; select bank3
 13105  02CE  0C0F               	rrf	15,w	;volatile
 13106  02CF  0C89               	rrf	9,f
 13107  02D0  3901               	andlw	1
 13108  02D1  0020               	movlb	0	; select bank0
 13109  02D2  00A2               	movwf	??_LCDrecv
 13110  02D3  0023               	movlb	3	; select bank3
 13111  02D4  0811               	movf	17,w	;volatile
 13112  02D5  391F               	andlw	31
 13113  02D6  0020               	movlb	0	; select bank0
 13114  02D7  0422               	iorwf	??_LCDrecv,w
 13115  02D8  1D03               	btfss	3,2
 13116  02D9  2ADB               	goto	u5321
 13117  02DA  2ADC               	goto	u5320
 13118  02DB                     u5321:
 13119  02DB  2ACD               	goto	l5677
 13120  02DC                     u5320:
 13121  02DC                     l5679:
 13122                           
 13123                           ;LCD/lcd.c: 46:   WriteI2C(0x4e | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13124  02DC  304F               	movlw	79
 13125  02DD  318D  2503  3181   	fcall	_WriteI2C
 13126  02E0                     l5681:
 13127  02E0  0023               	movlb	3	; select bank3
 13128  02E1  0C0F               	rrf	15,w	;volatile
 13129  02E2  0C89               	rrf	9,f
 13130  02E3  3901               	andlw	1
 13131  02E4  0020               	movlb	0	; select bank0
 13132  02E5  00A2               	movwf	??_LCDrecv
 13133  02E6  0023               	movlb	3	; select bank3
 13134  02E7  0811               	movf	17,w	;volatile
 13135  02E8  391F               	andlw	31
 13136  02E9  0020               	movlb	0	; select bank0
 13137  02EA  0422               	iorwf	??_LCDrecv,w
 13138  02EB  1D03               	btfss	3,2
 13139  02EC  2AEE               	goto	u5331
 13140  02ED  2AEF               	goto	u5330
 13141  02EE                     u5331:
 13142  02EE  2AE0               	goto	l5681
 13143  02EF                     u5330:
 13144  02EF                     l5683:
 13145                           
 13146                           ;LCD/lcd.c: 47:   lc = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13147  02EF  318A  229F  3181   	fcall	_ReadI2C
 13148  02F2  0020               	movlb	0	; select bank0
 13149  02F3  00A2               	movwf	??_LCDrecv
 13150  02F4  0822               	movf	??_LCDrecv,w
 13151  02F5  00A5               	movwf	LCDrecv@lc
 13152  02F6                     l5685:
 13153  02F6  0023               	movlb	3	; select bank3
 13154  02F7  0C0F               	rrf	15,w	;volatile
 13155  02F8  0C89               	rrf	9,f
 13156  02F9  3901               	andlw	1
 13157  02FA  0020               	movlb	0	; select bank0
 13158  02FB  00A2               	movwf	??_LCDrecv
 13159  02FC  0023               	movlb	3	; select bank3
 13160  02FD  0811               	movf	17,w	;volatile
 13161  02FE  391F               	andlw	31
 13162  02FF  0020               	movlb	0	; select bank0
 13163  0300  0422               	iorwf	??_LCDrecv,w
 13164  0301  1D03               	btfss	3,2
 13165  0302  2B04               	goto	u5341
 13166  0303  2B05               	goto	u5340
 13167  0304                     u5341:
 13168  0304  2AF6               	goto	l5685
 13169  0305                     u5340:
 13170  0305                     l165:	
 13171                           ;LCD/lcd.c: 48:   do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKE
      +                          N); } while (0);
 13172                           
 13173  0305  0023               	movlb	3	; select bank3
 13174  0306  1691               	bsf	17,5	;volatile
 13175  0307  1611               	bsf	17,4	;volatile
 13176  0308                     l166:
 13177  0308  1A11               	btfsc	17,4	;volatile
 13178  0309  2B0B               	goto	u5351
 13179  030A  2B0C               	goto	u5350
 13180  030B                     u5351:
 13181  030B  2B08               	goto	l166
 13182  030C                     u5350:
 13183  030C                     l170:	
 13184                           ;LCD/lcd.c: 49:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13185                           
 13186  030C  1491               	bsf	17,1	;volatile
 13187  030D                     l171:
 13188  030D  1891               	btfsc	17,1	;volatile
 13189  030E  2B10               	goto	u5361
 13190  030F  2B11               	goto	u5360
 13191  0310                     u5361:
 13192  0310  2B0D               	goto	l171
 13193  0311                     u5360:
 13194  0311                     l5687:
 13195  0311  0023               	movlb	3	; select bank3
 13196  0312  0C0F               	rrf	15,w	;volatile
 13197  0313  0C89               	rrf	9,f
 13198  0314  3901               	andlw	1
 13199  0315  0020               	movlb	0	; select bank0
 13200  0316  00A2               	movwf	??_LCDrecv
 13201  0317  0023               	movlb	3	; select bank3
 13202  0318  0811               	movf	17,w	;volatile
 13203  0319  391F               	andlw	31
 13204  031A  0020               	movlb	0	; select bank0
 13205  031B  0422               	iorwf	??_LCDrecv,w
 13206  031C  1D03               	btfss	3,2
 13207  031D  2B1F               	goto	u5371
 13208  031E  2B20               	goto	u5370
 13209  031F                     u5371:
 13210  031F  2B11               	goto	l5687
 13211  0320                     u5370:
 13212  0320                     l5689:
 13213                           
 13214                           ;LCD/lcd.c: 50:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13215  0320  304E               	movlw	78
 13216  0321  318D  2503  3181   	fcall	_WriteI2C
 13217  0324                     l5691:
 13218  0324  0023               	movlb	3	; select bank3
 13219  0325  0C0F               	rrf	15,w	;volatile
 13220  0326  0C89               	rrf	9,f
 13221  0327  3901               	andlw	1
 13222  0328  0020               	movlb	0	; select bank0
 13223  0329  00A2               	movwf	??_LCDrecv
 13224  032A  0023               	movlb	3	; select bank3
 13225  032B  0811               	movf	17,w	;volatile
 13226  032C  391F               	andlw	31
 13227  032D  0020               	movlb	0	; select bank0
 13228  032E  0422               	iorwf	??_LCDrecv,w
 13229  032F  1D03               	btfss	3,2
 13230  0330  2B32               	goto	u5381
 13231  0331  2B33               	goto	u5380
 13232  0332                     u5381:
 13233  0332  2B24               	goto	l5691
 13234  0333                     u5380:
 13235  0333                     l5693:
 13236                           
 13237                           ;LCD/lcd.c: 51:   WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1S
      +                          TATbits.R_W));
 13238  0333  0826               	movf	LCDrecv@mode,w
 13239  0334  38FA               	iorlw	250
 13240  0335  318D  2503  3181   	fcall	_WriteI2C
 13241  0338                     l5695:
 13242  0338  0023               	movlb	3	; select bank3
 13243  0339  0C0F               	rrf	15,w	;volatile
 13244  033A  0C89               	rrf	9,f
 13245  033B  3901               	andlw	1
 13246  033C  0020               	movlb	0	; select bank0
 13247  033D  00A2               	movwf	??_LCDrecv
 13248  033E  0023               	movlb	3	; select bank3
 13249  033F  0811               	movf	17,w	;volatile
 13250  0340  391F               	andlw	31
 13251  0341  0020               	movlb	0	; select bank0
 13252  0342  0422               	iorwf	??_LCDrecv,w
 13253  0343  1D03               	btfss	3,2
 13254  0344  2B46               	goto	u5391
 13255  0345  2B47               	goto	u5390
 13256  0346                     u5391:
 13257  0346  2B38               	goto	l5695
 13258  0347                     u5390:
 13259  0347                     l184:	
 13260                           ;LCD/lcd.c: 52:   do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 13261                           
 13262  0347  0023               	movlb	3	; select bank3
 13263  0348  1511               	bsf	17,2	;volatile
 13264  0349                     l185:
 13265  0349  1911               	btfsc	17,2	;volatile
 13266  034A  2B4C               	goto	u5401
 13267  034B  2B4D               	goto	u5400
 13268  034C                     u5401:
 13269  034C  2B49               	goto	l185
 13270  034D                     u5400:
 13271  034D                     l5697:
 13272                           
 13273                           ;LCD/lcd.c: 53:   return ((hc&0xf0) | ((lc>>4)&0x0f));
 13274  034D  0020               	movlb	0	; select bank0
 13275  034E  0825               	movf	LCDrecv@lc,w
 13276  034F  00A2               	movwf	??_LCDrecv
 13277  0350  3004               	movlw	4
 13278  0351                     u5415:
 13279  0351  36A2               	lsrf	??_LCDrecv,f
 13280  0352  0B89               	decfsz	9,f
 13281  0353  2B51               	goto	u5415
 13282  0354  300F               	movlw	15
 13283  0355  0522               	andwf	??_LCDrecv,w
 13284  0356  00A3               	movwf	??_LCDrecv+1
 13285  0357  0824               	movf	LCDrecv@hc,w
 13286  0358  39F0               	andlw	240
 13287  0359  0423               	iorwf	??_LCDrecv+1,w
 13288  035A                     l189:
 13289  035A  0008               	return
 13290  035B                     __end_of_LCDrecv:
 13291                           
 13292                           	psect	text37
 13293  0D03                     __ptext37:	
 13294 ;; *************** function _WriteI2C *****************
 13295 ;; Defined at:
 13296 ;;		line 59 in file "I2C/i2c.c"
 13297 ;; Parameters:    Size  Location     Type
 13298 ;;  data_out        1    wreg     unsigned char 
 13299 ;; Auto vars:     Size  Location     Type
 13300 ;;  data_out        1    1[BANK0 ] unsigned char 
 13301 ;; Return value:  Size  Location     Type
 13302 ;;                  1    wreg      char 
 13303 ;; Registers used:
 13304 ;;		wreg, status,2, status,0
 13305 ;; Tracked objects:
 13306 ;;		On entry : 0/0
 13307 ;;		On exit  : 0/0
 13308 ;;		Unchanged: 0/0
 13309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13311 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13312 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13313 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13314 ;;Total ram usage:        2 bytes
 13315 ;; Hardware stack levels used: 1
 13316 ;; Hardware stack levels required when called: 5
 13317 ;; This function calls:
 13318 ;;		Nothing
 13319 ;; This function is called by:
 13320 ;;		_LCDsend
 13321 ;;		_LCDrecv
 13322 ;;		_LCDsend2x4
 13323 ;;		_readTC74
 13324 ;; This function uses a non-reentrant model
 13325 ;;
 13326                           
 13327                           
 13328                           ;psect for function _WriteI2C
 13329  0D03                     _WriteI2C:
 13330                           
 13331                           ;incstack = 0
 13332                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 13333                           ;WriteI2C@data_out stored from wreg
 13334  0D03  0020               	movlb	0	; select bank0
 13335  0D04  00A1               	movwf	WriteI2C@data_out
 13336  0D05                     l5349:
 13337                           
 13338                           ;I2C/i2c.c: 59: signed char WriteI2C( unsigned char data_out );I2C/i2c.c: 60: {;I2C/i2c.
      +                          c: 61:   SSP1BUF = data_out;
 13339  0D05  0821               	movf	WriteI2C@data_out,w
 13340  0D06  0023               	movlb	3	; select bank3
 13341  0D07  008C               	movwf	12	;volatile
 13342  0D08                     l5351:
 13343                           
 13344                           ;I2C/i2c.c: 62:   if ( SSP1CON1bits.WCOL )
 13345  0D08  1F90               	btfss	16,7	;volatile
 13346  0D09  2D0B               	goto	u4511
 13347  0D0A  2D0C               	goto	u4510
 13348  0D0B                     u4511:
 13349  0D0B  2D0D               	goto	l5357
 13350  0D0C                     u4510:
 13351  0D0C  2D5C               	goto	l36
 13352  0D0D                     l5357:
 13353                           
 13354                           ;I2C/i2c.c: 65:   {;I2C/i2c.c: 66:  if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)!=0x0
      +                          B) )
 13355  0D0D  300F               	movlw	15
 13356  0D0E  0510               	andwf	16,w	;volatile
 13357  0D0F  0020               	movlb	0	; select bank0
 13358  0D10  00A0               	movwf	??_WriteI2C
 13359  0D11  3008               	movlw	8
 13360  0D12  0620               	xorwf	??_WriteI2C,w
 13361  0D13  1903               	btfsc	3,2
 13362  0D14  2D16               	goto	u4521
 13363  0D15  2D17               	goto	u4520
 13364  0D16                     u4521:
 13365  0D16  2D30               	goto	l5369
 13366  0D17                     u4520:
 13367  0D17                     l5359:
 13368  0D17  300F               	movlw	15
 13369  0D18  0023               	movlb	3	; select bank3
 13370  0D19  0510               	andwf	16,w	;volatile
 13371  0D1A  0020               	movlb	0	; select bank0
 13372  0D1B  00A0               	movwf	??_WriteI2C
 13373  0D1C  300B               	movlw	11
 13374  0D1D  0620               	xorwf	??_WriteI2C,w
 13375  0D1E  1903               	btfsc	3,2
 13376  0D1F  2D21               	goto	u4531
 13377  0D20  2D22               	goto	u4530
 13378  0D21                     u4531:
 13379  0D21  2D30               	goto	l5369
 13380  0D22                     u4530:
 13381  0D22                     l5361:
 13382                           
 13383                           ;I2C/i2c.c: 67:  {;I2C/i2c.c: 68:        SSP1CON1bits.CKP = 1;
 13384  0D22  0023               	movlb	3	; select bank3
 13385  0D23  1610               	bsf	16,4	;volatile
 13386  0D24                     l39:	
 13387                           ;I2C/i2c.c: 69:        while ( !PIR3bits.SSP1IF );
 13388                           
 13389  0D24  002E               	movlb	14	; select bank14
 13390  0D25  1C0F               	btfss	15,0	;volatile
 13391  0D26  2D28               	goto	u4541
 13392  0D27  2D29               	goto	u4540
 13393  0D28                     u4541:
 13394  0D28  2D24               	goto	l39
 13395  0D29                     u4540:
 13396  0D29                     l41:
 13397                           
 13398                           ;I2C/i2c.c: 71:        if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 13399  0D29  0023               	movlb	3	; select bank3
 13400  0D2A  190F               	btfsc	15,2	;volatile
 13401  0D2B  2D2D               	goto	u4551
 13402  0D2C  2D2E               	goto	u4550
 13403  0D2D                     u4551:
 13404  0D2D  2D5C               	goto	l36
 13405  0D2E                     u4550:
 13406  0D2E                     l5363:
 13407  0D2E  080F               	movf	15,w	;volatile
 13408  0D2F  2D5C               	goto	l36
 13409  0D30                     l5369:
 13410  0D30  300F               	movlw	15
 13411  0D31  0023               	movlb	3	; select bank3
 13412  0D32  0510               	andwf	16,w	;volatile
 13413  0D33  0020               	movlb	0	; select bank0
 13414  0D34  00A0               	movwf	??_WriteI2C
 13415  0D35  3008               	movlw	8
 13416  0D36  0620               	xorwf	??_WriteI2C,w
 13417  0D37  1903               	btfsc	3,2
 13418  0D38  2D3A               	goto	u4561
 13419  0D39  2D3B               	goto	u4560
 13420  0D3A                     u4561:
 13421  0D3A  2D46               	goto	l48
 13422  0D3B                     u4560:
 13423  0D3B                     l5371:
 13424  0D3B  300F               	movlw	15
 13425  0D3C  0023               	movlb	3	; select bank3
 13426  0D3D  0510               	andwf	16,w	;volatile
 13427  0D3E  0020               	movlb	0	; select bank0
 13428  0D3F  00A0               	movwf	??_WriteI2C
 13429  0D40  300B               	movlw	11
 13430  0D41  0620               	xorwf	??_WriteI2C,w
 13431  0D42  1D03               	btfss	3,2
 13432  0D43  2D45               	goto	u4571
 13433  0D44  2D46               	goto	u4570
 13434  0D45                     u4571:
 13435  0D45  2D5C               	goto	l36
 13436  0D46                     u4570:
 13437  0D46                     l48:
 13438  0D46  0023               	movlb	3	; select bank3
 13439  0D47  180F               	btfsc	15,0	;volatile
 13440  0D48  2D4A               	goto	u4581
 13441  0D49  2D4B               	goto	u4580
 13442  0D4A                     u4581:
 13443  0D4A  2D46               	goto	l48
 13444  0D4B                     u4580:
 13445  0D4B                     l5373:
 13446  0D4B  0023               	movlb	3	; select bank3
 13447  0D4C  0C0F               	rrf	15,w	;volatile
 13448  0D4D  0C89               	rrf	9,f
 13449  0D4E  3901               	andlw	1
 13450  0D4F  0020               	movlb	0	; select bank0
 13451  0D50  00A0               	movwf	??_WriteI2C
 13452  0D51  0023               	movlb	3	; select bank3
 13453  0D52  0811               	movf	17,w	;volatile
 13454  0D53  391F               	andlw	31
 13455  0D54  0020               	movlb	0	; select bank0
 13456  0D55  0420               	iorwf	??_WriteI2C,w
 13457  0D56  1D03               	btfss	3,2
 13458  0D57  2D59               	goto	u4591
 13459  0D58  2D5A               	goto	u4590
 13460  0D59                     u4591:
 13461  0D59  2D4B               	goto	l5373
 13462  0D5A                     u4590:
 13463  0D5A                     l53:
 13464                           
 13465                           ;I2C/i2c.c: 84:      if ( SSP1CON2bits.ACKSTAT )
 13466  0D5A  0023               	movlb	3	; select bank3
 13467  0D5B  0811               	movf	17,w	;volatile
 13468  0D5C                     l36:
 13469  0D5C  0008               	return
 13470  0D5D                     __end_of_WriteI2C:
 13471                           
 13472                           	psect	text38
 13473  0A9F                     __ptext38:	
 13474 ;; *************** function _ReadI2C *****************
 13475 ;; Defined at:
 13476 ;;		line 44 in file "I2C/i2c.c"
 13477 ;; Parameters:    Size  Location     Type
 13478 ;;		None
 13479 ;; Auto vars:     Size  Location     Type
 13480 ;;		None
 13481 ;; Return value:  Size  Location     Type
 13482 ;;                  1    wreg      unsigned char 
 13483 ;; Registers used:
 13484 ;;		wreg, status,2, status,0
 13485 ;; Tracked objects:
 13486 ;;		On entry : 0/0
 13487 ;;		On exit  : 0/0
 13488 ;;		Unchanged: 0/0
 13489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13492 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13493 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13494 ;;Total ram usage:        1 bytes
 13495 ;; Hardware stack levels used: 1
 13496 ;; Hardware stack levels required when called: 5
 13497 ;; This function calls:
 13498 ;;		Nothing
 13499 ;; This function is called by:
 13500 ;;		_LCDrecv
 13501 ;;		_readTC74
 13502 ;; This function uses a non-reentrant model
 13503 ;;
 13504                           
 13505                           
 13506                           ;psect for function _ReadI2C
 13507  0A9F                     _ReadI2C:
 13508  0A9F                     l5481:	
 13509                           ;incstack = 0
 13510                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 13511                           
 13512                           
 13513                           ;I2C/i2c.c: 46: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 13514  0A9F  300F               	movlw	15
 13515  0AA0  0023               	movlb	3	; select bank3
 13516  0AA1  0510               	andwf	16,w	;volatile
 13517  0AA2  0020               	movlb	0	; select bank0
 13518  0AA3  00A0               	movwf	??_ReadI2C
 13519  0AA4  3008               	movlw	8
 13520  0AA5  0620               	xorwf	??_ReadI2C,w
 13521  0AA6  1903               	btfsc	3,2
 13522  0AA7  2AA9               	goto	u4831
 13523  0AA8  2AAA               	goto	u4830
 13524  0AA9                     u4831:
 13525  0AA9  2AB5               	goto	l28
 13526  0AAA                     u4830:
 13527  0AAA                     l5483:
 13528  0AAA  300F               	movlw	15
 13529  0AAB  0023               	movlb	3	; select bank3
 13530  0AAC  0510               	andwf	16,w	;volatile
 13531  0AAD  0020               	movlb	0	; select bank0
 13532  0AAE  00A0               	movwf	??_ReadI2C
 13533  0AAF  300B               	movlw	11
 13534  0AB0  0620               	xorwf	??_ReadI2C,w
 13535  0AB1  1D03               	btfss	3,2
 13536  0AB2  2AB4               	goto	u4841
 13537  0AB3  2AB5               	goto	u4840
 13538  0AB4                     u4841:
 13539  0AB4  2AB7               	goto	l29
 13540  0AB5                     u4840:
 13541  0AB5                     l28:
 13542                           
 13543                           ;I2C/i2c.c: 47:   SSP1CON2bits.RCEN = 1;
 13544  0AB5  0023               	movlb	3	; select bank3
 13545  0AB6  1591               	bsf	17,3	;volatile
 13546  0AB7                     l29:
 13547  0AB7  0023               	movlb	3	; select bank3
 13548  0AB8  1C0F               	btfss	15,0	;volatile
 13549  0AB9  2ABB               	goto	u4851
 13550  0ABA  2ABC               	goto	u4850
 13551  0ABB                     u4851:
 13552  0ABB  2AB7               	goto	l29
 13553  0ABC                     u4850:
 13554  0ABC                     l5485:
 13555                           
 13556                           ;I2C/i2c.c: 49:   return ( SSP1BUF );
 13557  0ABC  080C               	movf	12,w	;volatile
 13558  0ABD                     l32:
 13559  0ABD  0008               	return
 13560  0ABE                     __end_of_ReadI2C:
 13561                           
 13562                           	psect	intentry
 13563  0004                     __pintentry:	
 13564 ;; *************** function _INTERRUPT_InterruptManager *****************
 13565 ;; Defined at:
 13566 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13567 ;; Parameters:    Size  Location     Type
 13568 ;;		None
 13569 ;; Auto vars:     Size  Location     Type
 13570 ;;		None
 13571 ;; Return value:  Size  Location     Type
 13572 ;;                  1    wreg      void 
 13573 ;; Registers used:
 13574 ;;		wreg, status,2, status,0, pclath, cstack
 13575 ;; Tracked objects:
 13576 ;;		On entry : 0/0
 13577 ;;		On exit  : 0/0
 13578 ;;		Unchanged: 0/0
 13579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13584 ;;Total ram usage:        0 bytes
 13585 ;; Hardware stack levels used: 1
 13586 ;; Hardware stack levels required when called: 4
 13587 ;; This function calls:
 13588 ;;		_TMR1_ISR
 13589 ;; This function is called by:
 13590 ;;		Interrupt level 1
 13591 ;; This function uses a non-reentrant model
 13592 ;;
 13593                           
 13594  0004                     _INTERRUPT_InterruptManager:
 13595                           
 13596                           ;incstack = 0
 13597  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 13598                           
 13599                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 13600  0005  3180               	pagesel	$
 13601  0006                     i1l4809:
 13602                           
 13603                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
 13604  0006  1F0B               	btfss	11,6	;volatile
 13605  0007  2809               	goto	u397_21
 13606  0008  280A               	goto	u397_20
 13607  0009                     u397_21:
 13608  0009  2816               	goto	i1l499
 13609  000A                     u397_20:
 13610  000A                     i1l4811:
 13611                           
 13612                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
 13613  000A  002E               	movlb	14	; select bank14
 13614  000B  1C1A               	btfss	26,0	;volatile
 13615  000C  280E               	goto	u398_21
 13616  000D  280F               	goto	u398_20
 13617  000E                     u398_21:
 13618  000E  2816               	goto	i1l499
 13619  000F                     u398_20:
 13620  000F                     i1l4813:
 13621  000F  1C10               	btfss	16,0	;volatile
 13622  0010  2812               	goto	u399_21
 13623  0011  2813               	goto	u399_20
 13624  0012                     u399_21:
 13625  0012  2816               	goto	i1l499
 13626  0013                     u399_20:
 13627  0013                     i1l4815:
 13628                           
 13629                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
 13630  0013  3189  21BD  3180   	fcall	_TMR1_ISR
 13631  0016                     i1l499:	
 13632                           ;mcc_generated_files/interrupt_manager.c: 60:         }
 13633                           
 13634  0016  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 13635  0017  0009               	retfie
 13636  0018                     __end_of_INTERRUPT_InterruptManager:
 13637                           
 13638                           	psect	text40
 13639  09BD                     __ptext40:	
 13640 ;; *************** function _TMR1_ISR *****************
 13641 ;; Defined at:
 13642 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 13643 ;; Parameters:    Size  Location     Type
 13644 ;;		None
 13645 ;; Auto vars:     Size  Location     Type
 13646 ;;		None
 13647 ;; Return value:  Size  Location     Type
 13648 ;;                  1    wreg      void 
 13649 ;; Registers used:
 13650 ;;		wreg, status,2, status,0, pclath, cstack
 13651 ;; Tracked objects:
 13652 ;;		On entry : 0/0
 13653 ;;		On exit  : 0/0
 13654 ;;		Unchanged: 0/0
 13655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13660 ;;Total ram usage:        0 bytes
 13661 ;; Hardware stack levels used: 1
 13662 ;; Hardware stack levels required when called: 3
 13663 ;; This function calls:
 13664 ;;		_TMR1_CallBack
 13665 ;;		_TMR1_WriteTimer
 13666 ;; This function is called by:
 13667 ;;		_INTERRUPT_InterruptManager
 13668 ;; This function uses a non-reentrant model
 13669 ;;
 13670                           
 13671                           
 13672                           ;psect for function _TMR1_ISR
 13673  09BD                     _TMR1_ISR:
 13674  09BD                     i1l4553:	
 13675                           ;incstack = 0
 13676                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 13677                           
 13678                           
 13679                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 13680  09BD  002E               	movlb	14	; select bank14
 13681  09BE  1010               	bcf	16,0	;volatile
 13682  09BF                     i1l4555:
 13683                           
 13684                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 13685  09BF  0021               	movlb	1	; select bank1
 13686  09C0  086A               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 13687  09C1  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 13688  09C2  0869               	movf	_timer1ReloadVal^(0+128),w	;volatile
 13689  09C3  00F0               	movwf	TMR1_WriteTimer@timerVal
 13690  09C4  3189  21CB  3189   	fcall	_TMR1_WriteTimer
 13691                           
 13692                           ;mcc_generated_files/tmr1.c: 173:     TMR1_CallBack();
 13693  09C7  3189  21A3  3189   	fcall	_TMR1_CallBack
 13694  09CA                     i1l558:
 13695  09CA  0008               	return
 13696  09CB                     __end_of_TMR1_ISR:
 13697                           
 13698                           	psect	text41
 13699  09CB                     __ptext41:	
 13700 ;; *************** function _TMR1_WriteTimer *****************
 13701 ;; Defined at:
 13702 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 13703 ;; Parameters:    Size  Location     Type
 13704 ;;  timerVal        2    0[COMMON] unsigned short 
 13705 ;; Auto vars:     Size  Location     Type
 13706 ;;		None
 13707 ;; Return value:  Size  Location     Type
 13708 ;;                  1    wreg      void 
 13709 ;; Registers used:
 13710 ;;		wreg, status,2
 13711 ;; Tracked objects:
 13712 ;;		On entry : 0/0
 13713 ;;		On exit  : 0/0
 13714 ;;		Unchanged: 0/0
 13715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13716 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13719 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13720 ;;Total ram usage:        2 bytes
 13721 ;; Hardware stack levels used: 1
 13722 ;; This function calls:
 13723 ;;		Nothing
 13724 ;; This function is called by:
 13725 ;;		_TMR1_ISR
 13726 ;;		_TMR1_Reload
 13727 ;; This function uses a non-reentrant model
 13728 ;;
 13729                           
 13730                           
 13731                           ;psect for function _TMR1_WriteTimer
 13732  09CB                     _TMR1_WriteTimer:
 13733  09CB                     i1l4401:	
 13734                           ;incstack = 0
 13735                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 13736                           
 13737                           
 13738                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 13739  09CB  0024               	movlb	4	; select bank4
 13740  09CC  1D0E               	btfss	14,2	;volatile
 13741  09CD  29CF               	goto	u346_21
 13742  09CE  29D0               	goto	u346_20
 13743  09CF                     u346_21:
 13744  09CF  29D7               	goto	i1l4411
 13745  09D0                     u346_20:
 13746  09D0                     i1l4403:
 13747                           
 13748                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 13749  09D0  100E               	bcf	14,0	;volatile
 13750  09D1                     i1l4405:
 13751                           
 13752                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (uint8_t)(timerVal >> 8);
 13753  09D1  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 13754  09D2  008D               	movwf	13	;volatile
 13755  09D3                     i1l4407:
 13756                           
 13757                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = (uint8_t)timerVal;
 13758  09D3  0870               	movf	TMR1_WriteTimer@timerVal,w
 13759  09D4  008C               	movwf	12	;volatile
 13760  09D5                     i1l4409:
 13761                           
 13762                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 13763  09D5  140E               	bsf	14,0	;volatile
 13764                           
 13765                           ;mcc_generated_files/tmr1.c: 140:     }
 13766  09D6  29DB               	goto	i1l546
 13767  09D7                     i1l4411:
 13768                           
 13769                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 13770  09D7  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 13771  09D8  008D               	movwf	13	;volatile
 13772  09D9                     i1l4413:
 13773                           
 13774                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = (uint8_t)timerVal;
 13775  09D9  0870               	movf	TMR1_WriteTimer@timerVal,w
 13776  09DA  008C               	movwf	12	;volatile
 13777  09DB                     i1l546:
 13778  09DB  0008               	return
 13779  09DC                     __end_of_TMR1_WriteTimer:
 13780                           
 13781                           	psect	text42
 13782  09A3                     __ptext42:	
 13783 ;; *************** function _TMR1_CallBack *****************
 13784 ;; Defined at:
 13785 ;;		line 176 in file "mcc_generated_files/tmr1.c"
 13786 ;; Parameters:    Size  Location     Type
 13787 ;;		None
 13788 ;; Auto vars:     Size  Location     Type
 13789 ;;		None
 13790 ;; Return value:  Size  Location     Type
 13791 ;;                  1    wreg      void 
 13792 ;; Registers used:
 13793 ;;		wreg, status,2, status,0, pclath, cstack
 13794 ;; Tracked objects:
 13795 ;;		On entry : 0/0
 13796 ;;		On exit  : 0/0
 13797 ;;		Unchanged: 0/0
 13798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13803 ;;Total ram usage:        0 bytes
 13804 ;; Hardware stack levels used: 1
 13805 ;; Hardware stack levels required when called: 2
 13806 ;; This function calls:
 13807 ;;		Absolute function
 13808 ;;		_TMR1_DefaultInterruptHandler
 13809 ;;		_timerInterrupt
 13810 ;; This function is called by:
 13811 ;;		_TMR1_ISR
 13812 ;; This function uses a non-reentrant model
 13813 ;;
 13814                           
 13815                           
 13816                           ;psect for function _TMR1_CallBack
 13817  09A3                     _TMR1_CallBack:
 13818  09A3                     i1l4415:	
 13819                           ;incstack = 0
 13820                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
 13821                           
 13822                           
 13823                           ;mcc_generated_files/tmr1.c: 179:     if(TMR1_InterruptHandler)
 13824  09A3  0021               	movlb	1	; select bank1
 13825  09A4  0867               	movf	_TMR1_InterruptHandler^(0+128),w
 13826  09A5  0468               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 13827  09A6  1903               	btfsc	3,2
 13828  09A7  29A9               	goto	u347_21
 13829  09A8  29AA               	goto	u347_20
 13830  09A9                     u347_21:
 13831  09A9  29AF               	goto	i1l562
 13832  09AA                     u347_20:
 13833  09AA                     i1l4417:
 13834                           
 13835                           ;mcc_generated_files/tmr1.c: 180:     {;mcc_generated_files/tmr1.c: 181:         TMR1_In
      +                          terruptHandler();
 13836  09AA  0868               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 13837  09AB  008A               	movwf	10
 13838  09AC  0867               	movf	_TMR1_InterruptHandler^(0+128),w
 13839  09AD  000A               	callw
 13840  09AE  3189               	pagesel	$
 13841  09AF                     i1l562:
 13842  09AF  0008               	return
 13843  09B0                     __end_of_TMR1_CallBack:
 13844                           
 13845                           	psect	text43
 13846  07FF                     __ptext43:	
 13847 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 13848 ;; Defined at:
 13849 ;;		line 189 in file "mcc_generated_files/tmr1.c"
 13850 ;; Parameters:    Size  Location     Type
 13851 ;;		None
 13852 ;; Auto vars:     Size  Location     Type
 13853 ;;		None
 13854 ;; Return value:  Size  Location     Type
 13855 ;;                  1    wreg      void 
 13856 ;; Registers used:
 13857 ;;		None
 13858 ;; Tracked objects:
 13859 ;;		On entry : 0/0
 13860 ;;		On exit  : 0/0
 13861 ;;		Unchanged: 0/0
 13862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13867 ;;Total ram usage:        0 bytes
 13868 ;; Hardware stack levels used: 1
 13869 ;; This function calls:
 13870 ;;		Nothing
 13871 ;; This function is called by:
 13872 ;;		_TMR1_Initialize
 13873 ;;		_TMR1_CallBack
 13874 ;; This function uses a non-reentrant model
 13875 ;;
 13876                           
 13877                           
 13878                           ;psect for function _TMR1_DefaultInterruptHandler
 13879  07FF                     _TMR1_DefaultInterruptHandler:
 13880  07FF                     i1l568:	
 13881                           ;incstack = 0
 13882                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 13883                           
 13884  07FF  0008               	return
 13885  0800                     __end_of_TMR1_DefaultInterruptHandler:
 13886                           
 13887                           	psect	text44
 13888  0B44                     __ptext44:	
 13889 ;; *************** function _timerInterrupt *****************
 13890 ;; Defined at:
 13891 ;;		line 63 in file "main.c"
 13892 ;; Parameters:    Size  Location     Type
 13893 ;;		None
 13894 ;; Auto vars:     Size  Location     Type
 13895 ;;  value           2    3[COMMON] unsigned short 
 13896 ;; Return value:  Size  Location     Type
 13897 ;;                  1    wreg      void 
 13898 ;; Registers used:
 13899 ;;		wreg, pclath, cstack
 13900 ;; Tracked objects:
 13901 ;;		On entry : 0/0
 13902 ;;		On exit  : 0/0
 13903 ;;		Unchanged: 0/0
 13904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13906 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13908 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13909 ;;Total ram usage:        2 bytes
 13910 ;; Hardware stack levels used: 1
 13911 ;; Hardware stack levels required when called: 1
 13912 ;; This function calls:
 13913 ;;		_ADCC_GetSingleConversion
 13914 ;; This function is called by:
 13915 ;;		_main
 13916 ;;		_TMR1_CallBack
 13917 ;; This function uses a non-reentrant model
 13918 ;;
 13919                           
 13920                           
 13921                           ;psect for function _timerInterrupt
 13922  0B44                     _timerInterrupt:
 13923  0B44                     i1l4117:	
 13924                           ;incstack = 0
 13925                           ; Regs used in _timerInterrupt: [wreg+pclath+cstack]
 13926                           
 13927                           
 13928                           ;main.c: 64:     if(PORTAbits.RA7==0){
 13929  0B44  0020               	movlb	0	; select bank0
 13930  0B45  1B8C               	btfsc	12,7	;volatile
 13931  0B46  2B48               	goto	u298_21
 13932  0B47  2B49               	goto	u298_20
 13933  0B48                     u298_21:
 13934  0B48  2B4B               	goto	i1l1159
 13935  0B49                     u298_20:
 13936  0B49                     i1l1156:	
 13937                           ;main.c: 65:         do { LATAbits.LATA7 = 1; } while(0);
 13938                           
 13939  0B49  1796               	bsf	22,7	;volatile
 13940  0B4A  2B4C               	goto	i1l4119
 13941  0B4B                     i1l1159:	
 13942                           ;main.c: 67:         do { LATAbits.LATA7 = 0; } while(0);
 13943                           
 13944  0B4B  1396               	bcf	22,7	;volatile
 13945  0B4C                     i1l4119:
 13946                           
 13947                           ;main.c: 69:     adc_result_t value = ADCC_GetSingleConversion(channel_ANA0);
 13948  0B4C  3000               	movlw	0
 13949  0B4D  3189  21DC  318B   	fcall	_ADCC_GetSingleConversion
 13950  0B50  0871               	movf	?_ADCC_GetSingleConversion+1,w
 13951  0B51  00F4               	movwf	timerInterrupt@value+1
 13952  0B52  0870               	movf	?_ADCC_GetSingleConversion,w
 13953  0B53  00F3               	movwf	timerInterrupt@value
 13954  0B54                     i1l4121:
 13955                           
 13956                           ;main.c: 70:     if(value > 0x2FD || value < 0xFF){
 13957  0B54  3002               	movlw	2
 13958  0B55  0274               	subwf	timerInterrupt@value+1,w
 13959  0B56  30FE               	movlw	254
 13960  0B57  1903               	skipnz
 13961  0B58  0273               	subwf	timerInterrupt@value,w
 13962  0B59  1803               	skipnc
 13963  0B5A  2B5C               	goto	u299_21
 13964  0B5B  2B5D               	goto	u299_20
 13965  0B5C                     u299_21:
 13966  0B5C  2B66               	goto	i1l1164
 13967  0B5D                     u299_20:
 13968  0B5D                     i1l4123:
 13969  0B5D  3000               	movlw	0
 13970  0B5E  0274               	subwf	timerInterrupt@value+1,w
 13971  0B5F  30FF               	movlw	255
 13972  0B60  1903               	skipnz
 13973  0B61  0273               	subwf	timerInterrupt@value,w
 13974  0B62  1803               	skipnc
 13975  0B63  2B65               	goto	u300_21
 13976  0B64  2B66               	goto	u300_20
 13977  0B65                     u300_21:
 13978  0B65  2B69               	goto	i1l1167
 13979  0B66                     u300_20:
 13980  0B66                     i1l1164:	
 13981                           ;main.c: 71:         do { LATAbits.LATA4 = 1; } while(0);
 13982                           
 13983  0B66  0020               	movlb	0	; select bank0
 13984  0B67  1616               	bsf	22,4	;volatile
 13985  0B68  2B6B               	goto	i1l1169
 13986  0B69                     i1l1167:	
 13987                           ;main.c: 73:         do { LATAbits.LATA4 = 0; } while(0);
 13988                           
 13989  0B69  0020               	movlb	0	; select bank0
 13990  0B6A  1216               	bcf	22,4	;volatile
 13991  0B6B                     i1l1169:
 13992  0B6B  0008               	return
 13993  0B6C                     __end_of_timerInterrupt:
 13994                           
 13995                           	psect	text45
 13996  09DC                     __ptext45:	
 13997 ;; *************** function _ADCC_GetSingleConversion *****************
 13998 ;; Defined at:
 13999 ;;		line 132 in file "mcc_generated_files/adcc.c"
 14000 ;; Parameters:    Size  Location     Type
 14001 ;;  channel         1    wreg     enum E12206
 14002 ;; Auto vars:     Size  Location     Type
 14003 ;;  channel         1    2[COMMON] enum E12206
 14004 ;; Return value:  Size  Location     Type
 14005 ;;                  2    0[COMMON] unsigned short 
 14006 ;; Registers used:
 14007 ;;		wreg
 14008 ;; Tracked objects:
 14009 ;;		On entry : 0/0
 14010 ;;		On exit  : 0/0
 14011 ;;		Unchanged: 0/0
 14012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14013 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14014 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14016 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14017 ;;Total ram usage:        3 bytes
 14018 ;; Hardware stack levels used: 1
 14019 ;; This function calls:
 14020 ;;		Nothing
 14021 ;; This function is called by:
 14022 ;;		_timerInterrupt
 14023 ;; This function uses a non-reentrant model
 14024 ;;
 14025                           
 14026                           
 14027                           ;psect for function _ADCC_GetSingleConversion
 14028  09DC                     _ADCC_GetSingleConversion:
 14029                           
 14030                           ;incstack = 0
 14031                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 14032                           ;ADCC_GetSingleConversion@channel stored from wreg
 14033  09DC  00F2               	movwf	ADCC_GetSingleConversion@channel
 14034  09DD                     i1l3947:
 14035                           
 14036                           ;mcc_generated_files/adcc.c: 132: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 133: {;mcc_generated_files/adcc.c: 135:     ADPCH = 
      +                          channel;
 14037  09DD  0872               	movf	ADCC_GetSingleConversion@channel,w
 14038  09DE  0021               	movlb	1	; select bank1
 14039  09DF  009E               	movwf	30	;volatile
 14040  09E0                     i1l3949:
 14041                           
 14042                           ;mcc_generated_files/adcc.c: 138:     ADCON0bits.ADON = 1;
 14043  09E0  1793               	bsf	19,7	;volatile
 14044  09E1                     i1l3951:
 14045                           
 14046                           ;mcc_generated_files/adcc.c: 141:     ADCON0bits.ADCONT = 0;
 14047  09E1  1313               	bcf	19,6	;volatile
 14048  09E2                     i1l3953:
 14049                           
 14050                           ;mcc_generated_files/adcc.c: 144:     ADCON0bits.ADGO = 1;
 14051  09E2  1413               	bsf	19,0	;volatile
 14052  09E3                     i1l3955:
 14053                           
 14054                           ;mcc_generated_files/adcc.c: 147:     __nop();
 14055  09E3  0000               	nop
 14056  09E4                     i1l655:	
 14057                           ;mcc_generated_files/adcc.c: 151:     {;mcc_generated_files/adcc.c: 152:     }
 14058                           
 14059                           
 14060                           ;mcc_generated_files/adcc.c: 150:     while (ADCON0bits.ADGO)
 14061  09E4  0021               	movlb	1	; select bank1
 14062  09E5  1813               	btfsc	19,0	;volatile
 14063  09E6  29E8               	goto	u258_21
 14064  09E7  29E9               	goto	u258_20
 14065  09E8                     u258_21:
 14066  09E8  29E4               	goto	i1l655
 14067  09E9                     u258_20:
 14068  09E9                     i1l3957:
 14069                           
 14070                           ;mcc_generated_files/adcc.c: 156:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 14071  09E9  080D               	movf	13,w	;volatile
 14072  09EA  00F1               	movwf	?_ADCC_GetSingleConversion+1
 14073  09EB  080C               	movf	12,w	;volatile
 14074  09EC  00F0               	movwf	?_ADCC_GetSingleConversion
 14075  09ED                     i1l658:
 14076  09ED  0008               	return
 14077  09EE                     __end_of_ADCC_GetSingleConversion:
 14078  007E                     btemp	set	126	;btemp
 14079  007E                     int$flags	set	126
 14080  007E                     wtemp0	set	126
 14081                           
 14082                           	psect	config
 14083                           
 14084                           ;Config register CONFIG1 @ 0x8007
 14085                           ;	External Oscillator mode selection bits
 14086                           ;	FEXTOSC = OFF, Oscillator not enabled
 14087                           ;	Power-up default value for COSC bits
 14088                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 14089                           ;	Clock Out Enable bit
 14090                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 14091                           ;	Clock Switch Enable bit
 14092                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 14093                           ;	Fail-Safe Clock Monitor Enable bit
 14094                           ;	FCMEN = ON, FSCM timer enabled
 14095  8007                     	org	32775
 14096  8007  3FEC               	dw	16364
 14097                           
 14098                           ;Config register CONFIG2 @ 0x8008
 14099                           ;	Master Clear Enable bit
 14100                           ;	MCLRE = ON, MCLR pin is Master Clear function
 14101                           ;	Power-up Timer Enable bit
 14102                           ;	PWRTE = OFF, PWRT disabled
 14103                           ;	Low-Power BOR enable bit
 14104                           ;	LPBOREN = OFF, ULPBOR disabled
 14105                           ;	Brown-out reset enable bits
 14106                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 14107                           ;	Brown-out Reset Voltage Selection
 14108                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 14109                           ;	Zero-cross detect disable
 14110                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 14111                           ;	Peripheral Pin Select one-way control
 14112                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 14113                           ;	Stack Overflow/Underflow Reset Enable bit
 14114                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 14115                           ;	Background Debugger
 14116                           ;	DEBUG = OFF, Background Debugger disabled
 14117  8008                     	org	32776
 14118  8008  3FFF               	dw	16383
 14119                           
 14120                           ;Config register CONFIG3 @ 0x8009
 14121                           ;	WDT Period Select bits
 14122                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 14123                           ;	WDT operating mode
 14124                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 14125                           ;	WDT Window Select bits
 14126                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 14127                           ;	WDT input clock selector
 14128                           ;	WDTCCS = SC, Software Control
 14129  8009                     	org	32777
 14130  8009  3F9F               	dw	16287
 14131                           
 14132                           ;Config register CONFIG4 @ 0x800A
 14133                           ;	UserNVM self-write protection bits
 14134                           ;	WRT = OFF, Write protection off
 14135                           ;	Scanner Enable bit
 14136                           ;	SCANE = available, Scanner module is available for use
 14137                           ;	Low Voltage Programming Enable bit
 14138                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 14139  800A                     	org	32778
 14140  800A  3FFF               	dw	16383
 14141                           
 14142                           ;Config register CONFIG5 @ 0x800B
 14143                           ;	UserNVM Program memory code protection bit
 14144                           ;	CP = OFF, Program Memory code protection disabled
 14145                           ;	DataNVM code protection bit
 14146                           ;	CPD = OFF, Data EEPROM code protection disabled
 14147  800B                     	org	32779
 14148  800B  3FFF               	dw	16383

Data Sizes:
    Strings     20
    Constant    32
    Data        0
    BSS         69
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80     80      80
    BANK1            80     38      75
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_DO_TX$3253$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S1484$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 17
		 -> main@buf(BANK1[17]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 17
		 -> main@buf(BANK1[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S2709_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 17
		 -> main@buf(BANK1[17]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 17
		 -> main@buf(BANK1[17]), 

    S1484$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S1484$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S1484$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    i2c1_fsmStateTable	const PTR FTN()enum E12595[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerInterrupt(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerInterrupt(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(1) Largest target is 0

    S679$data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0

    LCDstr@p	PTR unsigned char  size(2) Largest target is 17
		 -> main@buf(BANK1[17]), STR_2(CODE[8]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_CallBack->_timerInterrupt
    _timerInterrupt->_ADCC_GetSingleConversion

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    _atoi->_isdigit
    _readTC74->_WriteI2C
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _LCDstr->_LCDchar
    _LCDchar->_LCDsend2x4
    _LCDpos->_LCDcmd
    _LCDcmd->_LCDsend2x4
    _LCDinit->_LCDsend2x4
    _LCDsend2x4->_WriteI2C
    _LCDsend->_WriteI2C
    _LCDbusy->_LCDrecv
    _LCDrecv->_WriteI2C

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->_vfprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0   16817
                                             18 BANK1     20    20      0
                            _LCDbusy
                             _LCDcmd
                            _LCDinit
                             _LCDpos
                             _LCDstr
                            _OpenI2C
                                 _S1
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                           _readTC74
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             14    10      4   11174
                                              6 BANK1     12     8      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3   10736
                                             78 BANK0      2     2      0
                                              0 BANK1      6     3      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           43    41      2   10260
                                             57 BANK0     21    19      2
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    5372
                                             27 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3201
                                             16 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     166
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1429
                                              8 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3    1037
                                              0 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             19 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     613
                                              0 BANK0     19     3     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     625
                                              0 BANK0     27    11     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    2409
                                              6 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     259
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1306
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _readTC74                                             2     2      0      99
                                              2 BANK0      2     2      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     211
                    _ADCC_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _S1                                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OpenI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDstr                                               6     4      2    1377
                                              9 BANK0      6     4      2
                            _LCDchar
 ---------------------------------------------------------------------------------
 (2) _LCDchar                                              1     1      0    1042
                                              8 BANK0      1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (1) _LCDpos                                               4     3      1    1265
                                              9 BANK0      4     3      1
                             _LCDcmd
 ---------------------------------------------------------------------------------
 (2) _LCDcmd                                               1     1      0    1042
                                              8 BANK0      1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0    1073
                                              8 BANK0      1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (3) _LCDsend2x4                                           6     5      1    1011
                                              2 BANK0      6     5      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      62
                                              2 BANK0      2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _LCDbusy                                              2     0      2     254
                                              7 BANK0      2     0      2
                            _LCDrecv
 ---------------------------------------------------------------------------------
 (2) _LCDrecv                                              5     5      0     254
                                              2 BANK0      5     5      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _WriteI2C                                             2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadI2C                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           0     0      0     307
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR1_ISR                                            0     0      0     307
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (11) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (11) _TMR1_CallBack                                       0     0      0      67
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                     _timerInterrupt *
 ---------------------------------------------------------------------------------
 (12) _timerInterrupt                                      2     2      0      67
                                              3 COMMON     2     2      0
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (13) _ADCC_GetSingleConversion                            3     1      2      22
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (12) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDbusy
     _LCDrecv
       _ReadI2C
       _WriteI2C
   _LCDcmd
     _LCDsend2x4
       _WriteI2C
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
   _LCDpos
     _LCDcmd
   _LCDstr
     _LCDchar
       _LCDsend2x4
   _OpenI2C
   _S1
   _SYSTEM_Initialize
     _ADCC_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _readTC74
     _ReadI2C
     _WriteI2C
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc
         _isdigit

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _timerInterrupt *
         _ADCC_GetSingleConversion
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       9       2       64.3%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     26      4B       7       93.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      20       9       40.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      C4      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      C4      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Dec 14 11:22:23 2021

                                      l23 09BC                                        l32 0ABD  
                                      l41 0D29                                        l28 0AB5  
                                      l36 0D5C                                        l29 0AB7  
                                      l53 0D5A                                        l39 0D24  
                                      l48 0D46                                        l73 0C6B  
                                      l74 0C6D                                        _S1 0998  
                                      l92 0CAC                                        l87 0CA6  
                                      l88 0CA8                                        l98 01E1  
                                      l99 01E3                       ___wmul@multiplicand 0022  
                                     ?_S1 0070                                       l130 0273  
                                     l114 0231                                       l115 0232  
                                     l211 0788                                       l116 0234  
                                     l220 07C9                                       l150 02C6  
                                     l134 0277                                       l151 02C7  
                                     l135 0278                                       l152 02C9  
                                     l224 07E0                                       l232 0DDF  
                                     l129 0270                                       l225 07E2  
                                     l170 030C                                       l171 030D  
                                     l235 096A                                       l244 0A4B  
                                     l165 0305                                       l229 07EA  
                                     l253 0A82                                       l166 0308  
                                     l238 097B                                       l184 0347  
                                     l248 0A00                                       l185 0349  
                                     l195 0736                                       l196 0738  
                                     l436 0C08                                       l532 0AFE  
                                     l189 035A                                       l482 0972  
                                     l643 0A17                                       l476 07FD  
                                     l565 098D                                       l479 0984  
                                     l876 0997                           _timer1ReloadVal 00E9  
                                     _abs 0A83                                       _pad 0CAD  
                 __size_of_PMD_Initialize 0008                                       wreg 0009  
                    _I2C1_DO_RX_NACK_STOP 0000                                      ??_S1 0075  
                             ?_LCDsend2x4 0022                           __end_of_LCDchar 097C  
                                    l2001 0A9E                                      ?_abs 0033  
                                    l1212 055D                                      l1204 0547  
                                    l1221 0577                                      l1213 055F  
                                    l1205 054A                                      l1150 09A1  
                                    l1222 0579                                      l1152 09A2  
                                    l1216 0563                                      l2032 0F12  
                                    l1250 05F3                                      l1235 05B2  
                                    l2035 0A30                                      l2043 0B20  
                                    l2019 0EA1                                      l1236 05B4  
                                    l1172 04BF                                      l1262 060E  
                                    l1190 0509                                      l1191 050B  
                                    l1176 04CE                                      l1257 0606  
                                    l1249 05F0                                      l1177 04D0  
                                    l1433 0AC9                                      l1258 0608  
                                    l2058 0C59                                      l2066 0B94  
                                    l1435 0ADD                                      l2075 0A66  
                                    l1268 0DEF                                      l1533 0702  
                                    l2069 07FE                                      l1534 0713  
                                    l1546 0FEE                                      l1547 0FFF  
                                    l4311 0BCA                                      l4321 0BD4  
                                    l4313 0BCC                                      l5201 0C19  
                                    l1930 0CE9                                      l4331 0BE9  
                                    l4323 0BD7                                      l4315 0BCE  
                                    l5203 0C23                                      l5211 0B6E  
                                    l1932 0D02                                      l1940 03C5  
                                    l4341 0BF3                                      l4333 0BEB  
                                    l4325 0BD9                                      l4317 0BD0  
                                    l4309 0BC4                                      l5301 0F8B  
                                    l5205 0C40                                      l5213 0B71  
                                    l5221 0A53                                      l1941 03DB  
                                    l4431 09B0                                      l4351 0BFD  
                                    l4343 0BF5                                      l4335 0BED  
                                    l4327 0BDB                                      l4319 0BD2  
                                    l5231 0AC1                                      l5303 0FAD  
                                    l5207 0C51                                      l5215 0B7F  
                                    l5223 0A57                                      l1927 0CC7  
                                    l5311 0CAF                                      l1935 03A4  
                                    l1944 044B                                      l1936 03AC  
                                    l4441 09BB                                      l4433 09B5  
                                    l4361 098E                                      l4353 0C00  
                                    l4345 0BF7                                      l4337 0BEF  
                                    l4329 0BDD                                      l5233 0AC5  
                                    l5305 0FBD                                      l5217 0B84  
                                    l5225 0A60                                      l5321 0CCA  
                                    l5313 0CB3                                      l5401 03E2  
                                    l1970 006A                                      l4435 09B6  
                                    l4363 0993                                      l4371 097F  
                                    l4355 0C03                                      l4347 0BF9  
                                    l4339 0BF1                                      l5235 0ACE  
                                    l5251 0648                                      l5243 060F  
                                    l5307 0FCB                                      l5219 0A4E  
                                    l5323 0CD6                                      l5315 0CBB  
                                    l5411 0459                                      l5403 03E7  
                                    l1972 009B                                      l5501 075E  
                                    l4437 09B8                                      l4381 0A16  
                                    l4365 0994                                      l4373 0980  
                                    l4357 0C05                                      l4349 0BFB  
                                    l5237 0AD3                                      l5229 0ABE  
                                    l5333 0A18                                      l5341 0B09  
                                    l5261 0686                                      l5253 0667  
                                    l5245 0611                                      l5309 0FD0  
                                    l5325 0CDB                                      l5317 0CC0  
                                    l5421 048C                                      l5413 0466  
                                    l5405 0416                                      l1965 005A  
                         __end_of_LCDbusy 0A01                                      l1958 04BE  
                                    ?_pad 0030                                      l5351 0D08  
                                    l5511 0790                                      l5503 0764  
                                    l4439 09B9                                      l4367 0996  
                                    l4375 0983                                      l4359 096B  
                                    l5239 0AD9                                      l5343 0B18  
                                    l5271 06C0                                      l5263 068E  
                                    l5255 066C                                      l5247 061B  
                                    l5327 0CED                                      l5319 0CC5  
                                    l5431 04A3                                      l5423 0490  
                                    l5415 0473                                      l5407 041A  
                                    l1967 0064                                      l1968 0066  
                                    l1896 0B43                                      l5361 0D22  
                                    l5521 07CA                                      l5513 079F  
                                    l5505 0773                           __end_of_LCDinit 0DE0  
                                    l4377 0A01                                      l4369 097C  
                                    l5345 0B19                                      l5337 0AFF  
                                    l5441 0E6E                                      l5273 06D0  
                                    l5265 0692                                      l5257 0677  
                                    l5249 063D                                      l5281 0F13  
                                    l5329 0CF6                                      l5425 0494  
                                    l5433 04AC                                      l5417 0481  
                                    l5409 041E                                      l1969 0068  
                                    l1994 0BC3                                      l5371 0D3B  
                                    l5363 0D2E                                      l5523 07D1  
                                    l5515 07A5                                      l5507 0779  
                                    l4379 0A14                                      l5339 0B02  
                                    l5443 0E70                                      l5275 06D1  
                                    l5267 0696                                      l5259 0683  
                                    l5291 0F6B                                      l5283 0F15  
                                    l5195 0C09                                      l5427 049A  
                                    l5419 0485                                      l5611 01C5  
                                    l5603 01A1                                      l1987 01CF  
                                    l5531 0045                                      l5373 0D4B  
                                    l5357 0D0D                                      l5349 0D05  
                                    l5621 0C5C                                      l5525 07E6  
                                    l5517 07B4                                      l5509 0789  
                                    l5701 0965                                      l5453 0E96  
                                    l5445 0E7A                                      l5437 0E64  
                                    l5269 069E                                      l5277 06DF  
                                    l5293 0F78                                      l5285 0F1F  
                                    l5197 0C0F                                      l5429 049F  
                                    l5381 036D                                      l5605 01A9  
                                    l5533 004D                                      l1998 0A9E  
                                    l5359 0D17                                      l5631 0C93  
                                    l5623 0C5C                                      l5519 07BA  
                                    l5703 0975                                      l4591 099D  
                                    l5527 0985                                      l5711 0AE5  
                                    l5471 0F02                                      l5463 0EDA  
                                    l5455 0E9D                                      l5447 0E8E  
                                    l5439 0E6A                                      l5279 06E4  
                                    l5295 0F7B                                      l5287 0F41  
                                    l5199 0C14                                      l5391 03C0  
                                    l5383 0380                                      l5535 0052  
                                    l5481 0A9F                                      l5369 0D30  
                                    l5641 01F6                                      l5633 0C97  
                                    l5625 0C71                                      l5721 0AFB  
                                    l5713 0AE7                                      l5705 0ADE  
                                    l5801 07F4                                      l5473 0F0E  
                                    l5457 0EA6                                      l5449 0E8F  
                                    l5297 0F83                                      l5289 0F4C  
                                    l5393 03CD                                      l5385 0386  
                                    l5561 00B4                                      l5553 0071  
                                    l5537 0056                                      l5609 01AC  
                                    l5529 0034                                      l5483 0AAA  
                                    l5651 0222                                      l5643 01FA  
                                    l5635 01D2                                      l5627 0C80  
                                    l5491 071B                                      l5715 0AE9  
                                    l5707 0AE1                                      l5803 07F7  
                                    l5811 04E3                                      l5467 0EF6  
                                    l5459 0EBA                                      l5299 0F87  
                                    l5395 03D3                                      l5387 03A8  
                                    l5379 035D                                      l5563 00BC  
                                    l5571 00D4                                      l5539 005B  
                                    l5555 0095                                      l5731 0BBF  
                                    l5723 0B97                                      l5485 0ABC  
                                    l5661 0261                                      l5653 0238  
                                    l5645 0209                                      l5637 01D2  
                                    l5629 0C84                                      l5493 0727  
                                    l5741 0D72                                      l4589 0998  
                                    l5717 0AF1                                      l5709 0AE3  
                                    l5805 07FA                                      l5821 051E  
                                    l5813 04E7                                      l5469 0EFC  
                                    l5397 03D7                                      l5389 03BA  
                                    l5573 00E7                                      l5581 0119  
                                    l5565 00C9                                      l5557 009F  
                                    l5549 006C                                      l5725 0B9B  
                                    l5901 0E4D                                      l5671 02A3  
                                    l5663 027C                                      l5655 0247  
                                    l5647 020E                                      l5639 01E7  
                                    l5495 073C                                      l5751 0D96  
                                    l5743 0D76                                      l5735 0D5D  
                                    l5719 0AF3                                      l5831 0568  
                                    l5823 0522                                      l5815 04F6  
                                    l5807 04BF                                      l5399 03DF  
                                    l5583 012B                                      l5575 00EF  
                                    l5567 00CD                                      l5559 00A3  
                                    l5727 0B9E                                      l5903 0E54  
                                    l5681 02E0                                      l5673 02B2  
                                    l5665 028B                                      l5657 024B  
                                    l5649 021D                                      l5497 074B  
                                    l5489 0716                                      l5761 0DBE  
                                    l5753 0D9E                                      l5745 0D86  
                                    l5737 0D66                                      l5841 05A3  
                                    l5833 057D                                      l5825 0531  
                                    l5817 04FA                                      l5809 04D4  
                                    l3897 0A83                                      l5593 0177  
                                    l5585 013C                                      l5569 00CE  
                                    l5729 0BB6                                      l5691 0324  
                                    l5683 02EF                                      l5675 02B7  
                                    l5667 028F                                      l5659 025A  
                                    l5499 074F                                      l5763 0DC4  
                                    l5755 0DA2                                      l5747 0D8A  
                                    l5739 0D6A                                      l5771 0A32  
                                    l5851 05E1                                      l5843 05B8  
                                    l5835 058C                                      l5827 0538  
                                    l5819 050F                                      l3899 0A91  
                                    l5595 0188                                      l5587 0144  
                                    l5579 0113                                      l5693 0333  
                                    l5685 02F6                                      l5677 02CD  
                                    l5669 029E                                      l5781 09FD  
                                    l5765 0DCA                                      l5757 0DAE  
                                    l5749 0D92                                      l5773 0A36  
                                    l5853 05F7                                      l5845 05C7  
                                    l5837 0590                                      l5829 054E  
                                    l5597 0190                                      l5589 015D  
                                    l5861 0B2B                                      l5695 0338  
                                    l5687 0311                                      l5679 02DC  
                                    l5775 09EE                                      l5767 0DD0  
                                    l5759 0DB2                                      l5791 0A78  
                                    l5855 060C                                      l5847 05CB  
                                    l5839 059F                                      l5599 019B  
                                    l5863 0B2D                                      l5871 0DE0  
                                    l5697 034D                                      l5689 0320  
                                    l5777 09F7                                      l5793 0A7E  
                                    l5785 0A69                                      l5769 0A31  
                                    l5849 05DA                                      l5945 0084  
                                    l5865 0B2F                                      l5881 0DF8  
                                    l5873 0DE3                           __end_of_LCDrecv 035B  
                                    l5787 0A6F                                      l5795 07EB  
                                    l5947 0EB2                                      l5867 0B3B  
                                    l5859 0B23                                      l5891 0E1E  
                                    l5883 0DFF                                      l5875 0DE4  
                                    l5789 0A74                                      l5797 07EE  
                                    l5893 0E28                                      l5885 0E03  
                                    l5877 0DED                                      l5799 07F1  
                                    l5895 0E2F                                      l5887 0E0D  
                                    l5879 0DF5                                      l5897 0E33  
                                    l5889 0E14                                      l5899 0E43  
                         __end_of_LCDsend 0CAD                                      STR_1 102F  
                                    STR_2 1020                                      STR_3 1028  
                                    _LATA 0016                                      _LATB 0017  
                                    _LATC 0018                                      _LATD 0019  
                                    _LATE 001A                                      u2440 0A91  
                                    u4120 0C0F                                      u5000 009F  
                                    u2441 0A90                                      u4121 0C0E  
                                    u5001 009E                                      u4210 0AD9  
                                    u4130 0C14                                      u5010 00B4  
                                    u4211 0AD8                                      u4131 0C13  
                                    u5011 00B3                                      u5100 0C71  
                                    u4300 06DF                                      u4220 061B  
                                    u4140 0C23                                      u5020 00CD  
                                    u5101 0C70                                      u4205 0ACF  
                                    u4301 06DE                                      u4221 061A  
                                    u2445 0A8D                                      u4141 0C22  
                                    u5021 00CC                                      u5110 0C80  
                                    u4310 06E4                                      u4150 0C40  
                                    u5030 010C                                      u5111 0C7F  
                                    u4311 06E3                                      u4151 0C3F  
                                    u5031 010A                                      u5200 0231  
                                    u5120 0C93                                      u4240 0648  
                                    u4400 0FCB                                      u4160 0B94  
                                    u5040 010D                                      u5201 0230  
                                    u5121 0C92                                      u4241 0647  
                                    u4401 0FCA                                      u4161 0B93  
                                    u5210 0238                                      u5130 0CA6  
                                    u4410 0FD0                                      u4330 0F1F  
                                    u4170 0A60                                      u5050 0119  
                                    u5211 0237                                      u5131 0CA5  
                                    u4411 0FCF                                      u4331 0F1E  
                                    u4155 0C3C                                      u4171 0A5F  
                                    u5051 0118                                      u5300 02C6  
                                    u5220 0247                                      u5140 0CAC  
                                    u3540 099D                                      u4180 0AC5  
                                    u4500 0B18                                      u4260 0674  
                                    u5060 012B                                      u5301 02C5  
                                    u5221 0246                                      u5141 0CAB  
                                    u3541 099C                                      u4181 0AC4  
                                    u4501 0B17                                      u5061 012A  
                                    u4510 0D0C                                      u5310 02CD  
                                    u5230 025A                                      u5150 01E1  
                                    u3550 09A1                                      u4270 0683  
                                    u4350 0F4C                                      u4430 0CB3  
                                    u5070 013C                                      u4511 0D0B  
                                    u5311 02CC                                      u5231 0259  
                                    u5151 01E0                                      u3551 09A0  
                                    u4271 0682                                      u4351 0F4B  
                                    u4431 0CB2                                      u5071 013B  
                                    u4520 0D17                                      u5400 034D  
                                    u5320 02DC                                      u5240 0270  
                                    u5160 01E7                                      u4280 0696  
                                    u4440 0CC0                                      u4600 0378  
                                    u5080 0188                                      u4521 0D16  
                                    u5401 034C                                      u5321 02DB  
                                    u5241 026F                                      u5161 01E6  
                                    u4281 0695                                      u4441 0CBF  
                                    u4601 0376                                      u5081 0187  
                                    u4530 0D22                                      u5330 02EF  
                                    u5250 0277                                      u5170 01F6  
                                    u5090 0C6B                                      u4290 06C0  
                                    u4370 0F78                                      u4450 0CE9  
                                    u4610 0379                                      u4531 0D21  
                                    u5331 02EE                                      u5251 0276  
                                    u5171 01F5                                      u5091 0C6A  
                                    u4195 0ACA                                      u4291 06BF  
                                    u4371 0F77                                      u4451 0CE8  
                                    u4540 0D29                                      u5340 0305  
                                    u5260 027C                                      u5180 0209  
                                    u5500 0509                                      u4380 0F8B  
                                    u4460 0CED                                      u4700 0473  
                                    u4620 0386                                      u5420 0BBF  
                                    _PMD0 0796                                      u4541 0D28  
                                    u5341 0304                                      u5261 027B  
                                    u5181 0208                                      u5501 0508  
                                    u4381 0F8A                                      u4461 0CEC  
                                    u4701 0472                                      u4621 0385  
                                    u5421 0BBE                                      _PMD1 0797  
                                    u4550 0D2E                                      u5350 030C  
                                    u5270 028B                                      u5190 021D  
                                    u5430 0A4B                                      u5510 050F  
                                    u4470 0A29                                      u4390 0FAD  
                                    u4710 0481                                      _PMD2 0798  
                                    u4551 0D2D                                      u5415 0351  
                                    u5351 030B                                      u5271 028A  
                                    u5191 021C                                      u5431 0A4A  
                                    u5511 050E                                      u4471 0A27  
                                    u4295 06BC                                      u4391 0FAC  
                                    u4455 0CE5                                      u4711 0480  
                                    _PMD3 0799                                      u4560 0D3B  
                                    u5360 0311                                      u5280 029E  
                                    u5440 09F7                                      u5600 057D  
                                    u5520 051E                                      u4480 0A2A  
                                    u4800 0EF0                                      u4720 0485  
                                    u4640 03A8                                      _PMD4 079A  
                                    u4561 0D3A                                      u5361 0310  
                                    u5281 029D                                      u5441 09F6  
                                    u5601 057C                                      u5521 051D  
                                    u4721 0484                                      u4705 046F  
                                    u4641 03A7                                      _PMD5 079B  
                                    u4570 0D46                                      u5370 0320  
                                    u5290 02B2                                      u5450 0A6F  
                                    u5610 058C                                      u5530 0531  
                                    u4490 0B09                                      u4810 0EFC  
                                    u4730 048C                                      u4650 03BA  
                                    u4571 0D45                                      u5371 031F  
                                    u5291 02B1                                      u5451 0A6E  
                                    u5611 058B                                      u5531 0530  
                                    u4491 0B08                                      u4811 0EFB  
                                    u4395 0FA9                                      u4731 048B  
                                    u4715 047D                                      u4651 03B9  
                                    u4580 0D4B                                      u5380 0333  
                                    u4900 075E                                      u5700 060C  
                                    u5620 059F                                      u5540 0547  
                                    u5460 04CE                                      u4820 0F02  
                                    u4740 0490                                      u4660 03D3  
                                    u4581 0D4A                                      u5381 0332  
                                    u4901 075D                                      u5701 060B  
                                    u5621 059E                                      u5541 0546  
                                    u5461 04CD                                      u4821 0F01  
                                    u4741 048F                                      u4661 03D2  
                                    u4830 0AAA                                      u4590 0D5A  
                                    u5390 0347                                      u4910 0773  
                                    u5630 05B2                                      u5550 054E  
                                    u5470 04D4                                      u4750 049A  
                                    u4670 03D7                                      u5710 0E0D  
                                    u4831 0AA9                                      u4591 0D59  
                                    u5391 0346                                      u4911 0772  
                                    u5631 05B1                                      u5551 054D  
                                    u5471 04D3                                      u4751 0499  
                                    u4671 03D6                                      u4655 03B6  
                                    u5711 0E0C                                      u4840 0AB5  
                                    u4920 0788                                      u5640 05B8  
                                    u5560 055D                                      u5480 04E3  
                                    u4760 0E7A                                      u4680 0459  
                                    u5720 0E28                                      u4841 0AB4  
                                    u4921 0787                                      u5641 05B7  
                                    u5561 055C                                      u5481 04E2  
                                    u4761 0E79                                      u4681 0458  
                                    u5721 0E27                                      u4850 0ABC  
                                    u4930 079F                                      u5650 05C7  
                                    u5570 0563                                      u5490 04F6  
                                    u4770 0E8E                                      u4690 0466  
                                    u5730 0E4D                                      u4851 0ABB  
                                    u4931 079E                                      u5651 05C6  
                                    u5571 0562                                      u5491 04F5  
                                    u4771 0E8D                                      u4691 0465  
                                    u5731 0E4C                                      u4940 07B4  
                                    u5660 05DA                                      u5580 0568  
                                    u4780 0E9C                                      u4941 07B3  
                                    u5661 05D9                                      u5581 0567  
                                    u4781 0E9B                                      u4685 0455  
                                    u4950 07C9                                      u4870 0736  
                                    u5670 05F0                                      u5590 0577  
                                    u4790 0EEF                                      u4951 07C8  
                                    u4871 0735                                      u5807 0D9B  
                                    u5671 05EF                                      u5591 0576  
                                    u4791 0EED                                      u4960 07E0  
                                    u4880 073C                                      u5680 05F7  
                                    u4961 07DF                                      u4881 073B  
                                    u4865 071E                                      u5817 0DA3  
                                    u5681 05F6                                      u4970 07E6  
                                    u4890 074B                                      u5690 0606  
                                    u4971 07E5                                      u4891 074A  
                                    u5827 0DAF                                      u5691 0605  
                                    u5747 0E5A                                      u4980 0045  
                                    u5837 0DBA                                      u5757 0D61  
                                    u4981 0044                                      u4990 009B  
                                    u5847 0DDA                                      u5767 0D6F  
                                    u4991 009A                                      u5857 07E7  
                                    u5777 0D7A                                      u5787 0D87  
                                    u5797 0D8F                                      _WPUA 0F39  
                                    _WPUB 0F44                                      _WPUC 0F4F  
                                    _WPUD 0F5A                                      _WPUE 0F65  
                                    abs@a 0033                                      _dbuf 0120  
                                    _atoi 0E64                                      _main 0DE0  
                                    _dtoa 035B                                      _prec 0075  
                                    _nout 00E3                                      pad@i 0034  
                                    pad@p 0031                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      pad@w 0036  
                                    btemp 007E                                      start 0018  
              ??_TMR1_SetInterruptHandler 0075                          ??_timerInterrupt 0073  
                         __end_of_ReadI2C 0ABE                           __end_of_OpenI2C 09BD  
                                   ??_abs 0035                                     ??_pad 0033  
          __size_of_OSCILLATOR_Initialize 0009             __end_of_OSCILLATOR_Initialize 0985  
                         __end_of___aodiv 0714                                     _ADACQ 009D  
                                   _ADCAP 009B                                     _ADACT 0099  
                                   ?_atoi 0026                                     ?_main 0070  
                                   ?_dtoa 003B                                     _ADCLK 0098  
                         __end_of___aomod 1000                                     _ADCNT 010C  
                                   _ADPCH 009E                                     _ADREF 009A  
                                   _ADPRE 009C                                     _ADRPT 010D  
                                   _T1CLK 0211                                     _T1CON 020E  
                                   i1l562 09AF                                     i1l546 09DB  
                                   i1l558 09CA                                     i1l655 09E4  
                                   i1l568 07FF                                     i1l658 09ED  
                                   i1l499 0016                __end_of_i2c1_fsmStateTable 1020  
                                   _OSCEN 0891                              vfpfcnvrt@fmt 0059  
                                   _TMR1H 020D                                     _TMR1L 020C  
                                   _TRISA 0011                                     _TRISB 0012  
                                   _TRISC 0013                                     _TRISD 0014  
                                   _TRISE 0015                         ??_I2C1_Initialize 0075  
                        __end_of_TMR1_ISR 09CB                                     _flags 0077  
                                   _fputc 0C09                                     _fputs 0B6C  
                         __end_of_isdigit 0A31                                     atoi@n 0033  
                                   pad@fp 0038                                     atoi@s 0026  
                                   _width 00E5                                     _putch 07FE  
                                   main@c 00C5                                     dtoa@d 003B  
                                   dtoa@i 0057                                     dtoa@n 004F  
                                   dtoa@p 0049                                     dtoa@s 004D  
                                   dtoa@w 004B                           __end_of_isspace 0B21  
                 __end_of_TMR1_Initialize 0AFF                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
                         __end_of_sprintf 0B44                           _TMR1_WriteTimer 09CB  
                         __initialization 001A                              __end_of_atoi 0F13  
                            __end_of_main 0E64                              __end_of_dtoa 04BF  
                     __size_of_LCDsend2x4 00D7               ?_INTERRUPT_InterruptManager 0070  
                                  ??_atoi 0028                                    ??_main 00B2  
                                  ??_dtoa 0043                                 ??_LCDchar 0075  
                               ??_LCDbusy 0075                                 ??_LCDinit 0028  
                               ??_LCDrecv 0022                                 ??_LCDsend 0022  
                                  _ADACCH 0091                                    _ADACCL 0090  
                                  _ADCON0 0093                                    _ADCON1 0094  
                                  _ADCON2 0095                                    _ADCON3 0096  
                                  _ADERRH 0117                                    _ADERRL 0116  
                                  ?_fputc 0020                                    _ADLTHH 010F  
                                  _ADLTHL 010E                                    ?_fputs 0028  
                                  _ADRESH 008D                                    _ADRESL 008C  
                                  _ADSTAT 0097                                    _ADUTHH 0111  
                                  _ADUTHL 0110                          __end_of_WriteI2C 0D5D  
                                  _ANSELA 0F38                                    ?_putch 0070  
                                  _ANSELB 0F43                                    _ANSELC 0F4E  
                                  _ANSELD 0F59                                    _ANSELE 0F64  
                                  _T1GATE 0210                                    _T1GCON 020F  
                                  _RC3PPS 0F23                   TMR1_WriteTimer@timerVal 0070  
                                  _RC4PPS 0F24                                    i1l1164 0B66  
                                  i1l1156 0B49                                    i1l1167 0B69  
                                  i1l1159 0B4B                                    i1l1169 0B6B  
                                  _ODCONA 0F3A                                    _ODCONB 0F45  
                                  _ODCONC 0F50                                    _ODCOND 0F5B  
                                  _ODCONE 0F66                                    i1l4121 0B54  
                                  i1l4123 0B5D                                    i1l4117 0B44  
                                  i1l4119 0B4C                                    i1l4401 09CB  
                                  i1l4403 09D0                                    i1l4411 09D7  
                                  i1l4413 09D9                                    i1l4405 09D1  
                                  i1l4415 09A3                                    i1l4407 09D3  
                                  i1l4417 09AA                                    i1l4409 09D5  
                                  u300_20 0B66                                    u300_21 0B65  
                                  i1l4553 09BD                                    i1l4555 09BF  
                                  i1l4811 000A                                    i1l4813 000F  
                                  i1l3951 09E1                                    i1l4815 0013  
                                  i1l3953 09E2                                    i1l4809 0006  
                                  i1l3955 09E3                                    i1l3947 09DD  
                                  i1l3957 09E9                                    i1l3949 09E0  
                                  _INLVLA 0F3C                                    _INLVLB 0F47  
                                  _INLVLC 0F52                                    _INLVLD 0F5D  
                                  _INLVLE 0F68                                    _LCDcmd 0963  
                                  u258_20 09E9                                    u346_20 09D0  
                                  u258_21 09E8                                    u346_21 09CF  
                                  _LCDpos 0A67                                    u347_20 09AA  
                                  u347_21 09A9                                    _LCDstr 0A31  
                                  u298_20 0B49                                    u298_21 0B48  
                                  u299_20 0B5D                                    u299_21 0B5C  
                                  _OSCFRQ 0893                                    u397_20 000A  
                                  u397_21 0009                                    u398_20 000F  
                                  u398_21 000E                                    u399_20 0013  
                                  u399_21 0012                             vfpfcnvrt@done 0069  
                                  u423lld 063A                                    u432lld 0702  
                                  u425lld 0667                                    u442lld 0FEE  
                                  u434lld 0F3E                                    u436lld 0F6B  
                                  u463lld 03A4                                 ??_ReadI2C 0020  
                             LCDsend2x4@c 0025                               LCDrecv@mode 0026  
                               ??_OpenI2C 0075                          _I2C1_DO_TX_EMPTY 0000  
    __end_of_TMR1_DefaultInterruptHandler 0800     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 07FF                              vfprintf@cfmt 00A4  
                               ??___aodiv 0030                                 ??___aomod 0030  
                                  ___wmul 0ABE                          __end_of_readTC74 060F  
                                  pad@buf 0030                                    dtoa@fp 0046  
                                  _strlen 0A4C                           _ADCC_Initialize 0A01  
                   _I2C1_DO_SEND_ADR_READ 0000                                    fputc@c 0020  
                          _PMD_Initialize 096B                                    fputs@c 002C  
                                  fputs@i 002D                                    fputs@s 002F  
                               ??_isdigit 0022                                 ??_isspace 0022  
       __size_of_ADCC_GetSingleConversion 0012                                    putch@c 0070  
                        __end_of_vfprintf 0BC4                 ?_ADCC_GetSingleConversion 0070  
TMR1_SetInterruptHandler@InterruptHandler 0020                                 ??_sprintf 00AA  
                 __end_of_TMR1_WriteTimer 09DC                   _I2C1_DO_RX_NACK_RESTART 0000  
                   __end_of_TMR1_CallBack 09B0                          ?_TMR1_Initialize 0070  
                       _SYSTEM_Initialize 07EB                   __end_of__initialization 002E  
                      ?_SYSTEM_Initialize 0070                   _rdBlkRegCompleteHandler 0000  
                          __pcstackCOMMON 0070                       ??_SYSTEM_Initialize 0075  
                               ?_TMR1_ISR 0070             ?_TMR1_DefaultInterruptHandler 0070  
                           __end_of_fputc 0C5A                             __end_of_fputs 0B95  
                           __end_of_putch 07FF                                __end_of_S1 09A3  
                  __end_of_PMD_Initialize 0973                                 LCDrecv@hc 0024  
                               LCDrecv@lc 0025                              ??_LCDsend2x4 0023  
                                 ??_fputc 0023                 __end_of_SYSTEM_Initialize 07FE  
                                 ??_fputs 0029                                   ??_putch 0075  
                              __pbssBANK1 00C6                                __pbssBANK2 0120  
                                 ?_LCDcmd 0070                                   ?_LCDpos 0029  
                                 ?_LCDstr 0029                                   LCDcmd@c 0028  
                                 LCDpos@c 0029                                   LCDpos@l 002B  
                                 LCDpos@p 002C                     _rd1RegCompleteHandler 0000  
                                 LCDstr@c 002E                                   LCDstr@p 0029  
                       _I2C1_DO_SEND_STOP 0000                     _wr1RegCompleteHandler 0000  
                              __pmaintext 0DE0                                   ?___wmul 0020  
                              ??_TMR1_ISR 0075                   __end_of_ADCC_Initialize 0A18  
                              __pintentry 0004                           _I2C1_Initialize 098E  
                                 _ADFLTRH 0115                                   _ADFLTRL 0114  
                      __end_of_LCDsend2x4 07EB                                   _ADPREVH 008F  
                                 _ADPREVL 008E                                 ?_WriteI2C 0070  
                                 _ADSTPTH 0113                                   _ADSTPTL 0112  
                         ?_PMD_Initialize 0070                                   ?_strlen 0020  
                                 _LCDchar 0973                                   _LCDbusy 09EE  
                                 _LCDinit 0D5D                                   _LCDrecv 01D0  
                                 _LCDsend 0C5A                                   _OSCCON1 088D  
                                 _OSCCON3 088F                        __size_of_vfpfcnvrt 019E  
                                 _NVMADRH 081B                                   _NVMADRL 081A  
                                 _NVMDATH 081D                                   _OSCTUNE 0892  
                                 _NVMDATL 081C                                   _NVMCON2 081F  
                                 _SSP1ADD 018D                                   _SLRCONA 0F3B  
                                 _SLRCONB 0F46                                   _SLRCONC 0F51  
                                 _SLRCOND 0F5C                                   _SLRCONE 0F67  
                                 _SSP1BUF 018C                          ?_TMR1_WriteTimer 0070  
                            LCDsend2x4@hc 0026                              LCDsend2x4@lc 0027  
                               ?_readTC74 0070                           __size_of_LCDcmd 0008  
                         __size_of_LCDpos 001C                        _i2c1_fsmStateTable 1000  
                         __size_of_LCDstr 001B                                   _ReadI2C 0A9F  
                                 _OpenI2C 09B0                                   ___aodiv 060F  
                                 ___aomod 0F13                           __size_of___wmul 0020  
                               ?_vfprintf 00A0                                ??_WriteI2C 0020  
                                 __ptext1 0B21                                   __ptext2 0B95  
                                 __ptext3 0032                                   __ptext4 035B  
                                 __ptext5 0CAD                                   __ptext6 0A4C  
                                 __ptext7 0B6C                                   __ptext8 0C09  
                                 __ptext9 07FE            ??_TMR1_DefaultInterruptHandler 0070  
                         __size_of_strlen 001B                                 _T1CONbits 020E  
                   _OSCILLATOR_Initialize 097C                              __size_of_abs 001C  
                            __size_of_pad 0056                                   _isdigit 0A18  
       __size_of_TMR1_SetInterruptHandler 0009                  ??_PIN_MANAGER_Initialize 0075  
                                 _isspace 0AFF                 ?_TMR1_SetInterruptHandler 0020  
                                 atoi@neg 002C                                   main@buf 00B4  
              __size_of_SYSTEM_Initialize 0013                                   _sprintf 0B21  
                                 clrloop0 095E                      end_of_initialization 002E  
                              ??_readTC74 0022                                   fputc@fp 0022  
                                 fputs@fp 0028                    _I2C1_DO_SEND_ADR_WRITE 0000  
                 __end_of_I2C1_Initialize 0998                               _I2C1_Status 00C6  
                       __end_of_vfpfcnvrt 01D0                          ?_ADCC_Initialize 0070  
                              ??_vfprintf 006E          __end_of_ADCC_GetSingleConversion 09EE  
              _I2C1_DO_SEND_RESTART_WRITE 0000                                   strlen@a 0023  
                                 strlen@s 0024                                 _PORTAbits 000C  
                               _PORTBbits 000D                   __size_of_timerInterrupt 0028  
                               _TRISCbits 0013                       timerInterrupt@value 0073  
                           readTC74@value 0023                            __end_of_LCDcmd 096B  
                          __end_of_LCDpos 0A83                            __end_of_LCDstr 0A4C  
                          LCDsend2x4@mode 0022                               vfpfcnvrt@ap 005A  
                             vfpfcnvrt@fp 006D                               vfpfcnvrt@ll 0061  
                          __end_of___wmul 0ADE                            _I2C1_DO_RX_ACK 0000  
                       __size_of_TMR1_ISR 000E                    ?_OSCILLATOR_Initialize 0070  
                          __end_of_strlen 0A67                       start_initialization 001A  
         __size_of_PIN_MANAGER_Initialize 0045                               __end_of_abs 0A9F  
                             __end_of_pad 0D03                          WriteI2C@data_out 0021  
                                ??_LCDcmd 0075                                  ??_LCDpos 002A  
                                ??_LCDstr 002B                          ?_I2C1_Initialize 0070  
                __size_of_TMR1_Initialize 0021                               vfprintf@fmt 00A0  
                        ??_PMD_Initialize 0075                                  ??___wmul 0075  
                  __size_of_TMR1_CallBack 000D                                  ??_strlen 0022  
                       __size_of_WriteI2C 005A                  _ADCC_GetSingleConversion 09DC  
                                ?_LCDchar 0070                               __pbssCOMMON 0075  
                                ?_LCDbusy 0027                                  ?_LCDinit 0070  
                    _I2C1_DO_SEND_RESTART 0000                                  ?_LCDrecv 0070  
                                ?_LCDsend 0070                                 ___latbits 0002  
                           __pcstackBANK0 0020                             __pcstackBANK1 00A0  
                        ___aodiv@dividend 0028                                  LCDchar@c 0028  
                                LCDsend@c 0023                                  ?_ReadI2C 0070  
                               _atoi$2827 002E                                 _atoi$2828 0032  
                               _atoi$2829 0030                         __size_of_readTC74 0150  
                               __pnvBANK1 00E7                     _rd2RegCompleteHandler 0000  
                                ?_OpenI2C 0070                    _PIN_MANAGER_Initialize 0BC4  
                   _wr2RegCompleteHandler 0000                                 _dtoa$2792 0047  
        __end_of_TMR1_SetInterruptHandler 098E           ADCC_GetSingleConversion@channel 0072  
                                ?___aodiv 0020                                  ?___aomod 0020  
                        ___aodiv@quotient 0033              ??_INTERRUPT_InterruptManager 0075  
                       __size_of_vfprintf 002F                            _timerInterrupt 0B44  
                                ?_isdigit 0020                                  ?_isspace 0020  
                                ?_sprintf 00A6                            __size_of_fputc 0051  
                          __size_of_fputs 0029                            __size_of_putch 0001  
                             __size_of_S1 000B                             _TMR1_CallBack 09A3  
                          ___wmul@product 0024                                  _LATAbits 0016  
                              _I2C1_DO_RX 0000                                _I2C1_DO_TX 0000  
                               clear_ram0 095D                                  _PIE3bits 0719  
                                _PIE4bits 071A                  __size_of_TMR1_WriteTimer 0011  
     __size_of_INTERRUPT_InterruptManager 0014                                  _PIR3bits 070F  
                                _PIR4bits 0710                 _I2C1_DO_SEND_RESTART_READ 0000  
                                _SSP1CON1 0190                                  _SSP1CON2 0191  
                                _TMR1_ISR 09BD                                  _SSP1STAT 018F  
                               _vfpfcnvrt 0032                    __end_of_timerInterrupt 0B6C  
                       ??_TMR1_Initialize 0075                                _ADCON0bits 0093  
                              _ADCON1bits 0094                                _ADCON2bits 0095  
                              _ADCON3bits 0096                         ___wmul@multiplier 0020  
                        __size_of_LCDchar 0009                          __size_of_LCDbusy 0013  
                        __size_of_LCDinit 0083                          __size_of_LCDrecv 018B  
                        __size_of_LCDsend 0053                              _isspace$2845 0024  
                           _I2C1_DO_RESET 0000                            ?_TMR1_CallBack 0070  
                        __size_of_ReadI2C 001F                                _ADSTATbits 0097  
                        __size_of_OpenI2C 000D                                vfprintf@ap 00A2  
                              vfprintf@fp 00A3                   ??_OSCILLATOR_Initialize 0075  
                        __size_of___aodiv 0105                          __size_of___aomod 00ED  
                              ?_vfpfcnvrt 0059                                  _WriteI2C 0D03  
                         ?_timerInterrupt 0070                           ___aodiv@divisor 0020  
                _TMR1_SetInterruptHandler 0985                           ___aodiv@counter 0031  
                   _TMR1_InterruptHandler 00E7                                sprintf@fmt 00A6  
                __size_of_ADCC_Initialize 0017                          __size_of_isdigit 0019  
                        __size_of_isspace 0022                                  __ptext10 0A83  
                                __ptext11 0F13                                  __ptext20 0985  
                                __ptext12 060F                                  __ptext21 096B  
                                __ptext13 0E64                                _T1GCONbits 020F  
                                __ptext30 0A67                                  __ptext22 0BC4  
                                __ptext14 0AFF                                  __ptext31 0963  
                                __ptext23 097C                                  __ptext15 0A18  
                                __ptext40 09BD                                  __ptext32 0D5D  
                                __ptext24 098E                                  __ptext16 0ABE  
                                __ptext41 09CB                                  __ptext33 0714  
                                __ptext25 0A01                                  __ptext17 04BF  
                                __ptext42 09A3                                  __ptext34 0C5A  
                                __ptext26 0998                                  __ptext18 07EB  
                                __ptext43 07FF                                  __ptext35 09EE  
                                __ptext27 09B0                                  __ptext19 0ADE  
                                __ptext44 0B44                                  __ptext36 01D0  
                                __ptext28 0A31                                  __ptext45 09DC  
                                __ptext37 0D03                                  __ptext29 0973  
                                __ptext38 0A9F                              _SSP1CON1bits 0190  
                            _SSP1CON2bits 0191                          __size_of_sprintf 0023  
                                _readTC74 04BF                  _I2C1_CallbackReturnReset 0000  
                           __size_of_atoi 00AF                             __size_of_main 0084  
                           __size_of_dtoa 0164                ??_ADCC_GetSingleConversion 0072  
                                int$flags 007E                                  _vfprintf 0B95  
      __end_of_INTERRUPT_InterruptManager 0018                _INTERRUPT_InterruptManager 0004  
                            _SSP1STATbits 018F                         ??_TMR1_WriteTimer 0072  
                            _I2C1_DO_IDLE 0000                              _I2C1_DO_RCEN 0000  
                        ___aomod@dividend 0028                            _vfpfcnvrt$2807 006B  
                              _INTCONbits 000B                               _NVMCON1bits 081E  
                                isdigit@c 0020                           ??_TMR1_CallBack 0075  
                              _LCDsend2x4 0714                                  intlevel1 0000  
                               sprintf@ap 00AC                                  isspace@c 0020  
                 ?_PIN_MANAGER_Initialize 0070                   _I2C1_CallbackReturnStop 0000  
                    _I2C1_DO_ADDRESS_NACK 0000                           ___aomod@divisor 0020  
                             ??_vfpfcnvrt 005B                           ___aomod@counter 0031  
                __size_of_I2C1_Initialize 000A                             __pstringtext1 1000  
                           __pstringtext2 1020                             __pstringtext3 1028  
                           __pstringtext4 102F                             __pstringtext5 0000  
                                sprintf@f 00AD                                  sprintf@s 00AB  
                              _SSP1DATPPS 0EC6                                _SSP1CLKPPS 0EC5  
                            ___aodiv@sign 0032            __end_of_PIN_MANAGER_Initialize 0C09  
                       ??_ADCC_Initialize 0075                              ___aomod@sign 0032  
                         _TMR1_Initialize 0ADE  
