

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Jan 13 16:26:02 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     6                           	psect	nvBANK2,global,class=BANK2,space=1,delta=1,noexec
     7                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    16                           	psect	cinit,global,class=CODE,merge=1,delta=2
    17                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    20                           	psect	clrtext,global,class=CODE,delta=2
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    24                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    25                           	psect	text1,local,class=CODE,merge=1,delta=2
    26                           	psect	text2,local,class=CODE,merge=1,delta=2
    27                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    33                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    36                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    37                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    40                           	psect	text16,local,class=CODE,merge=1,delta=2,group=3
    41                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    42                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    43                           	psect	text19,local,class=CODE,merge=1,delta=2
    44                           	psect	text20,local,class=CODE,merge=1,delta=2
    45                           	psect	text21,local,class=CODE,merge=1,delta=2
    46                           	psect	text22,local,class=CODE,merge=1,delta=2
    47                           	psect	text23,local,class=CODE,merge=1,delta=2
    48                           	psect	text24,local,class=CODE,merge=1,delta=2
    49                           	psect	text25,local,class=CODE,merge=1,delta=2
    50                           	psect	text26,local,class=CODE,merge=1,delta=2
    51                           	psect	text27,local,class=CODE,merge=1,delta=2
    52                           	psect	text28,local,class=CODE,merge=1,delta=2
    53                           	psect	text29,local,class=CODE,merge=1,delta=2
    54                           	psect	text30,local,class=CODE,merge=1,delta=2
    55                           	psect	text31,local,class=CODE,merge=1,delta=2
    56                           	psect	text32,local,class=CODE,merge=1,delta=2
    57                           	psect	text33,local,class=CODE,merge=1,delta=2
    58                           	psect	text34,local,class=CODE,merge=1,delta=2
    59                           	psect	text35,local,class=CODE,merge=1,delta=2
    60                           	psect	text36,local,class=CODE,merge=1,delta=2
    61                           	psect	text37,local,class=CODE,merge=1,delta=2
    62                           	psect	text38,local,class=CODE,merge=1,delta=2
    63                           	psect	text39,local,class=CODE,merge=1,delta=2
    64                           	psect	text40,local,class=CODE,merge=1,delta=2
    65                           	psect	text41,local,class=CODE,merge=1,delta=2
    66                           	psect	text42,local,class=CODE,merge=1,delta=2
    67                           	psect	text43,local,class=CODE,merge=1,delta=2
    68                           	psect	text44,local,class=CODE,merge=1,delta=2
    69                           	psect	text45,local,class=CODE,merge=1,delta=2
    70                           	psect	text46,local,class=CODE,merge=1,delta=2
    71                           	psect	text47,local,class=CODE,merge=1,delta=2
    72                           	psect	intentry,global,class=CODE,delta=2
    73                           	psect	text49,local,class=CODE,merge=1,delta=2
    74                           	psect	text50,local,class=CODE,merge=1,delta=2
    75                           	psect	text51,local,class=CODE,merge=1,delta=2
    76                           	psect	text52,local,class=CODE,merge=1,delta=2
    77                           	psect	text53,local,class=CODE,merge=1,delta=2
    78                           	psect	text54,local,class=CODE,merge=1,delta=2
    79                           	psect	text55,local,class=CODE,merge=1,delta=2
    80                           	psect	text56,local,class=CODE,merge=1,delta=2
    81                           	psect	text57,local,class=CODE,merge=1,delta=2
    82                           	psect	text58,local,class=CODE,merge=1,delta=2
    83                           	psect	text59,local,class=CODE,merge=1,delta=2
    84                           	psect	text60,local,class=CODE,merge=1,delta=2
    85                           	psect	text61,local,class=CODE,merge=1,delta=2
    86                           	psect	text62,local,class=CODE,merge=1,delta=2
    87                           	psect	text63,local,class=CODE,merge=1,delta=2
    88                           	psect	text64,local,class=CODE,merge=1,delta=2
    89                           	psect	text65,local,class=CODE,merge=1,delta=2
    90                           	psect	text66,local,class=CODE,merge=1,delta=2
    91                           	psect	text67,local,class=CODE,merge=1,delta=2
    92                           	psect	text68,local,class=CODE,merge=1,delta=2
    93                           	psect	text69,local,class=CODE,merge=1,delta=2
    94                           	psect	text70,local,class=CODE,merge=1,delta=2
    95                           	psect	text71,local,class=CODE,merge=1,delta=2
    96                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    97                           	dabs	1,0x7E,2
    98  0000                     
    99                           ; Version 2.35
   100                           ; Generated 13/04/2021 GMT
   101                           ; 
   102                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
   103                           ; All rights reserved.
   104                           ; 
   105                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   106                           ; 
   107                           ; Redistribution and use in source and binary forms, with or without modification, are
   108                           ; permitted provided that the following conditions are met:
   109                           ; 
   110                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   111                           ;        conditions and the following disclaimer.
   112                           ; 
   113                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   114                           ;        of conditions and the following disclaimer in the documentation and/or other
   115                           ;        materials provided with the distribution. Publication is not required when
   116                           ;        this file is used in an embedded application.
   117                           ; 
   118                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   119                           ;        software without specific prior written permission.
   120                           ; 
   121                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   122                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   123                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   124                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   125                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   126                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   127                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   128                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   129                           ; 
   130                           ; 
   131                           ; Code-generator required, PIC16F18875 Definitions
   132                           ; 
   133                           ; SFR Addresses
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001C                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  008C                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0090                     	;# 
   175  0091                     	;# 
   176  0093                     	;# 
   177  0094                     	;# 
   178  0095                     	;# 
   179  0096                     	;# 
   180  0097                     	;# 
   181  0098                     	;# 
   182  0099                     	;# 
   183  009A                     	;# 
   184  009B                     	;# 
   185  009C                     	;# 
   186  009D                     	;# 
   187  009E                     	;# 
   188  010C                     	;# 
   189  010D                     	;# 
   190  010E                     	;# 
   191  010E                     	;# 
   192  010F                     	;# 
   193  0110                     	;# 
   194  0110                     	;# 
   195  0111                     	;# 
   196  0112                     	;# 
   197  0112                     	;# 
   198  0113                     	;# 
   199  0114                     	;# 
   200  0114                     	;# 
   201  0115                     	;# 
   202  0116                     	;# 
   203  0116                     	;# 
   204  0117                     	;# 
   205  0119                     	;# 
   206  0119                     	;# 
   207  0119                     	;# 
   208  011A                     	;# 
   209  011A                     	;# 
   210  011A                     	;# 
   211  011B                     	;# 
   212  011B                     	;# 
   213  011B                     	;# 
   214  011B                     	;# 
   215  011B                     	;# 
   216  011C                     	;# 
   217  011C                     	;# 
   218  011C                     	;# 
   219  011D                     	;# 
   220  011D                     	;# 
   221  011D                     	;# 
   222  011E                     	;# 
   223  011E                     	;# 
   224  011E                     	;# 
   225  011F                     	;# 
   226  011F                     	;# 
   227  011F                     	;# 
   228  011F                     	;# 
   229  011F                     	;# 
   230  018C                     	;# 
   231  018D                     	;# 
   232  018E                     	;# 
   233  018F                     	;# 
   234  0190                     	;# 
   235  0191                     	;# 
   236  0192                     	;# 
   237  0196                     	;# 
   238  0197                     	;# 
   239  0198                     	;# 
   240  0199                     	;# 
   241  019A                     	;# 
   242  019B                     	;# 
   243  019C                     	;# 
   244  020C                     	;# 
   245  020C                     	;# 
   246  020D                     	;# 
   247  020E                     	;# 
   248  020F                     	;# 
   249  020F                     	;# 
   250  0210                     	;# 
   251  0210                     	;# 
   252  0211                     	;# 
   253  0211                     	;# 
   254  0212                     	;# 
   255  0212                     	;# 
   256  0213                     	;# 
   257  0214                     	;# 
   258  0215                     	;# 
   259  0215                     	;# 
   260  0216                     	;# 
   261  0216                     	;# 
   262  0217                     	;# 
   263  0217                     	;# 
   264  0218                     	;# 
   265  0218                     	;# 
   266  0219                     	;# 
   267  021A                     	;# 
   268  021B                     	;# 
   269  021B                     	;# 
   270  021C                     	;# 
   271  021C                     	;# 
   272  021D                     	;# 
   273  021D                     	;# 
   274  021E                     	;# 
   275  021F                     	;# 
   276  028C                     	;# 
   277  028C                     	;# 
   278  028D                     	;# 
   279  028D                     	;# 
   280  028E                     	;# 
   281  028F                     	;# 
   282  0290                     	;# 
   283  0290                     	;# 
   284  0291                     	;# 
   285  0292                     	;# 
   286  0292                     	;# 
   287  0293                     	;# 
   288  0293                     	;# 
   289  0294                     	;# 
   290  0295                     	;# 
   291  0296                     	;# 
   292  0296                     	;# 
   293  0297                     	;# 
   294  0298                     	;# 
   295  0298                     	;# 
   296  0299                     	;# 
   297  0299                     	;# 
   298  029A                     	;# 
   299  029B                     	;# 
   300  029C                     	;# 
   301  029C                     	;# 
   302  029D                     	;# 
   303  030C                     	;# 
   304  030C                     	;# 
   305  030D                     	;# 
   306  030E                     	;# 
   307  030F                     	;# 
   308  0310                     	;# 
   309  0310                     	;# 
   310  0311                     	;# 
   311  0312                     	;# 
   312  0313                     	;# 
   313  0314                     	;# 
   314  0314                     	;# 
   315  0315                     	;# 
   316  0316                     	;# 
   317  0317                     	;# 
   318  0318                     	;# 
   319  0318                     	;# 
   320  0319                     	;# 
   321  031A                     	;# 
   322  031B                     	;# 
   323  031C                     	;# 
   324  031C                     	;# 
   325  031D                     	;# 
   326  031E                     	;# 
   327  031F                     	;# 
   328  038C                     	;# 
   329  038C                     	;# 
   330  038D                     	;# 
   331  038E                     	;# 
   332  0390                     	;# 
   333  0390                     	;# 
   334  0391                     	;# 
   335  0392                     	;# 
   336  040C                     	;# 
   337  040D                     	;# 
   338  040E                     	;# 
   339  040F                     	;# 
   340  0410                     	;# 
   341  0411                     	;# 
   342  0416                     	;# 
   343  0416                     	;# 
   344  0417                     	;# 
   345  0418                     	;# 
   346  0418                     	;# 
   347  0419                     	;# 
   348  041A                     	;# 
   349  041A                     	;# 
   350  041B                     	;# 
   351  041C                     	;# 
   352  041C                     	;# 
   353  041D                     	;# 
   354  041E                     	;# 
   355  041F                     	;# 
   356  048C                     	;# 
   357  048C                     	;# 
   358  048D                     	;# 
   359  048E                     	;# 
   360  048F                     	;# 
   361  048F                     	;# 
   362  0490                     	;# 
   363  0491                     	;# 
   364  0492                     	;# 
   365  0492                     	;# 
   366  0493                     	;# 
   367  0494                     	;# 
   368  0495                     	;# 
   369  0495                     	;# 
   370  0496                     	;# 
   371  0497                     	;# 
   372  0498                     	;# 
   373  0499                     	;# 
   374  049A                     	;# 
   375  049B                     	;# 
   376  049C                     	;# 
   377  049D                     	;# 
   378  050C                     	;# 
   379  050C                     	;# 
   380  050D                     	;# 
   381  050E                     	;# 
   382  050F                     	;# 
   383  050F                     	;# 
   384  0510                     	;# 
   385  0511                     	;# 
   386  0512                     	;# 
   387  0512                     	;# 
   388  0513                     	;# 
   389  0514                     	;# 
   390  0515                     	;# 
   391  0515                     	;# 
   392  0516                     	;# 
   393  0517                     	;# 
   394  0518                     	;# 
   395  0519                     	;# 
   396  051A                     	;# 
   397  051B                     	;# 
   398  051C                     	;# 
   399  051D                     	;# 
   400  058C                     	;# 
   401  058C                     	;# 
   402  058D                     	;# 
   403  058E                     	;# 
   404  058F                     	;# 
   405  058F                     	;# 
   406  0590                     	;# 
   407  0591                     	;# 
   408  0592                     	;# 
   409  0593                     	;# 
   410  060C                     	;# 
   411  060D                     	;# 
   412  060E                     	;# 
   413  060F                     	;# 
   414  0610                     	;# 
   415  0611                     	;# 
   416  0612                     	;# 
   417  0613                     	;# 
   418  0614                     	;# 
   419  0616                     	;# 
   420  0617                     	;# 
   421  0618                     	;# 
   422  0619                     	;# 
   423  061A                     	;# 
   424  061B                     	;# 
   425  061C                     	;# 
   426  061D                     	;# 
   427  061E                     	;# 
   428  068C                     	;# 
   429  068D                     	;# 
   430  068E                     	;# 
   431  068F                     	;# 
   432  0690                     	;# 
   433  0691                     	;# 
   434  0692                     	;# 
   435  0693                     	;# 
   436  0694                     	;# 
   437  070C                     	;# 
   438  070D                     	;# 
   439  070E                     	;# 
   440  070F                     	;# 
   441  0710                     	;# 
   442  0711                     	;# 
   443  0712                     	;# 
   444  0713                     	;# 
   445  0714                     	;# 
   446  0716                     	;# 
   447  0717                     	;# 
   448  0718                     	;# 
   449  0719                     	;# 
   450  071A                     	;# 
   451  071B                     	;# 
   452  071C                     	;# 
   453  071D                     	;# 
   454  071E                     	;# 
   455  0796                     	;# 
   456  0797                     	;# 
   457  0798                     	;# 
   458  0799                     	;# 
   459  079A                     	;# 
   460  079B                     	;# 
   461  080C                     	;# 
   462  080D                     	;# 
   463  080E                     	;# 
   464  080F                     	;# 
   465  0810                     	;# 
   466  0811                     	;# 
   467  0812                     	;# 
   468  0813                     	;# 
   469  0814                     	;# 
   470  081A                     	;# 
   471  081B                     	;# 
   472  081C                     	;# 
   473  081D                     	;# 
   474  081E                     	;# 
   475  081F                     	;# 
   476  088C                     	;# 
   477  088D                     	;# 
   478  088E                     	;# 
   479  088F                     	;# 
   480  0890                     	;# 
   481  0891                     	;# 
   482  0892                     	;# 
   483  0893                     	;# 
   484  0895                     	;# 
   485  0896                     	;# 
   486  0897                     	;# 
   487  0898                     	;# 
   488  0899                     	;# 
   489  089A                     	;# 
   490  089B                     	;# 
   491  090C                     	;# 
   492  090E                     	;# 
   493  090F                     	;# 
   494  091F                     	;# 
   495  091F                     	;# 
   496  098F                     	;# 
   497  098F                     	;# 
   498  0990                     	;# 
   499  0991                     	;# 
   500  0992                     	;# 
   501  0993                     	;# 
   502  0994                     	;# 
   503  0995                     	;# 
   504  0996                     	;# 
   505  0997                     	;# 
   506  0E0F                     	;# 
   507  0E10                     	;# 
   508  0E11                     	;# 
   509  0E12                     	;# 
   510  0E13                     	;# 
   511  0E14                     	;# 
   512  0E15                     	;# 
   513  0E16                     	;# 
   514  0E17                     	;# 
   515  0E18                     	;# 
   516  0E19                     	;# 
   517  0E1A                     	;# 
   518  0E1B                     	;# 
   519  0E1C                     	;# 
   520  0E1D                     	;# 
   521  0E1E                     	;# 
   522  0E1F                     	;# 
   523  0E20                     	;# 
   524  0E21                     	;# 
   525  0E22                     	;# 
   526  0E23                     	;# 
   527  0E24                     	;# 
   528  0E25                     	;# 
   529  0E26                     	;# 
   530  0E27                     	;# 
   531  0E28                     	;# 
   532  0E29                     	;# 
   533  0E2A                     	;# 
   534  0E2B                     	;# 
   535  0E2C                     	;# 
   536  0E2D                     	;# 
   537  0E2E                     	;# 
   538  0E2F                     	;# 
   539  0E30                     	;# 
   540  0E31                     	;# 
   541  0E32                     	;# 
   542  0E33                     	;# 
   543  0E34                     	;# 
   544  0E35                     	;# 
   545  0E36                     	;# 
   546  0E37                     	;# 
   547  0E8F                     	;# 
   548  0E90                     	;# 
   549  0E91                     	;# 
   550  0E92                     	;# 
   551  0E93                     	;# 
   552  0E94                     	;# 
   553  0E95                     	;# 
   554  0E96                     	;# 
   555  0E97                     	;# 
   556  0E9C                     	;# 
   557  0E9D                     	;# 
   558  0E9E                     	;# 
   559  0EA1                     	;# 
   560  0EA2                     	;# 
   561  0EA3                     	;# 
   562  0EA4                     	;# 
   563  0EA5                     	;# 
   564  0EA9                     	;# 
   565  0EAA                     	;# 
   566  0EAB                     	;# 
   567  0EAC                     	;# 
   568  0EB1                     	;# 
   569  0EB2                     	;# 
   570  0EB3                     	;# 
   571  0EB8                     	;# 
   572  0EB9                     	;# 
   573  0EBA                     	;# 
   574  0EBB                     	;# 
   575  0EBC                     	;# 
   576  0EBD                     	;# 
   577  0EBE                     	;# 
   578  0EC3                     	;# 
   579  0EC5                     	;# 
   580  0EC6                     	;# 
   581  0EC7                     	;# 
   582  0EC8                     	;# 
   583  0EC9                     	;# 
   584  0ECA                     	;# 
   585  0ECB                     	;# 
   586  0ECC                     	;# 
   587  0F10                     	;# 
   588  0F11                     	;# 
   589  0F12                     	;# 
   590  0F13                     	;# 
   591  0F14                     	;# 
   592  0F15                     	;# 
   593  0F16                     	;# 
   594  0F17                     	;# 
   595  0F18                     	;# 
   596  0F19                     	;# 
   597  0F1A                     	;# 
   598  0F1B                     	;# 
   599  0F1C                     	;# 
   600  0F1D                     	;# 
   601  0F1E                     	;# 
   602  0F1F                     	;# 
   603  0F20                     	;# 
   604  0F21                     	;# 
   605  0F22                     	;# 
   606  0F23                     	;# 
   607  0F24                     	;# 
   608  0F25                     	;# 
   609  0F26                     	;# 
   610  0F27                     	;# 
   611  0F28                     	;# 
   612  0F29                     	;# 
   613  0F2A                     	;# 
   614  0F2B                     	;# 
   615  0F2C                     	;# 
   616  0F2D                     	;# 
   617  0F2E                     	;# 
   618  0F2F                     	;# 
   619  0F30                     	;# 
   620  0F31                     	;# 
   621  0F32                     	;# 
   622  0F38                     	;# 
   623  0F39                     	;# 
   624  0F3A                     	;# 
   625  0F3B                     	;# 
   626  0F3C                     	;# 
   627  0F3D                     	;# 
   628  0F3E                     	;# 
   629  0F3F                     	;# 
   630  0F40                     	;# 
   631  0F41                     	;# 
   632  0F43                     	;# 
   633  0F44                     	;# 
   634  0F45                     	;# 
   635  0F46                     	;# 
   636  0F47                     	;# 
   637  0F48                     	;# 
   638  0F49                     	;# 
   639  0F4A                     	;# 
   640  0F4B                     	;# 
   641  0F4C                     	;# 
   642  0F4E                     	;# 
   643  0F4F                     	;# 
   644  0F50                     	;# 
   645  0F51                     	;# 
   646  0F52                     	;# 
   647  0F53                     	;# 
   648  0F54                     	;# 
   649  0F55                     	;# 
   650  0F56                     	;# 
   651  0F57                     	;# 
   652  0F59                     	;# 
   653  0F5A                     	;# 
   654  0F5B                     	;# 
   655  0F5C                     	;# 
   656  0F5D                     	;# 
   657  0F61                     	;# 
   658  0F62                     	;# 
   659  0F64                     	;# 
   660  0F65                     	;# 
   661  0F66                     	;# 
   662  0F67                     	;# 
   663  0F68                     	;# 
   664  0F69                     	;# 
   665  0F6A                     	;# 
   666  0F6B                     	;# 
   667  0F6C                     	;# 
   668  0F6D                     	;# 
   669  0FE4                     	;# 
   670  0FE5                     	;# 
   671  0FE6                     	;# 
   672  0FE7                     	;# 
   673  0FE8                     	;# 
   674  0FE9                     	;# 
   675  0FEA                     	;# 
   676  0FEB                     	;# 
   677  0FED                     	;# 
   678  0FEE                     	;# 
   679  0FEF                     	;# 
   680  0000                     	;# 
   681  0001                     	;# 
   682  0002                     	;# 
   683  0003                     	;# 
   684  0004                     	;# 
   685  0005                     	;# 
   686  0006                     	;# 
   687  0007                     	;# 
   688  0008                     	;# 
   689  0009                     	;# 
   690  000A                     	;# 
   691  000B                     	;# 
   692  000C                     	;# 
   693  000D                     	;# 
   694  000E                     	;# 
   695  000F                     	;# 
   696  0010                     	;# 
   697  0011                     	;# 
   698  0012                     	;# 
   699  0013                     	;# 
   700  0014                     	;# 
   701  0015                     	;# 
   702  0016                     	;# 
   703  0017                     	;# 
   704  0018                     	;# 
   705  0019                     	;# 
   706  001A                     	;# 
   707  001C                     	;# 
   708  001C                     	;# 
   709  001D                     	;# 
   710  001D                     	;# 
   711  001E                     	;# 
   712  001F                     	;# 
   713  008C                     	;# 
   714  008C                     	;# 
   715  008D                     	;# 
   716  008E                     	;# 
   717  008E                     	;# 
   718  008F                     	;# 
   719  0090                     	;# 
   720  0090                     	;# 
   721  0091                     	;# 
   722  0093                     	;# 
   723  0094                     	;# 
   724  0095                     	;# 
   725  0096                     	;# 
   726  0097                     	;# 
   727  0098                     	;# 
   728  0099                     	;# 
   729  009A                     	;# 
   730  009B                     	;# 
   731  009C                     	;# 
   732  009D                     	;# 
   733  009E                     	;# 
   734  010C                     	;# 
   735  010D                     	;# 
   736  010E                     	;# 
   737  010E                     	;# 
   738  010F                     	;# 
   739  0110                     	;# 
   740  0110                     	;# 
   741  0111                     	;# 
   742  0112                     	;# 
   743  0112                     	;# 
   744  0113                     	;# 
   745  0114                     	;# 
   746  0114                     	;# 
   747  0115                     	;# 
   748  0116                     	;# 
   749  0116                     	;# 
   750  0117                     	;# 
   751  0119                     	;# 
   752  0119                     	;# 
   753  0119                     	;# 
   754  011A                     	;# 
   755  011A                     	;# 
   756  011A                     	;# 
   757  011B                     	;# 
   758  011B                     	;# 
   759  011B                     	;# 
   760  011B                     	;# 
   761  011B                     	;# 
   762  011C                     	;# 
   763  011C                     	;# 
   764  011C                     	;# 
   765  011D                     	;# 
   766  011D                     	;# 
   767  011D                     	;# 
   768  011E                     	;# 
   769  011E                     	;# 
   770  011E                     	;# 
   771  011F                     	;# 
   772  011F                     	;# 
   773  011F                     	;# 
   774  011F                     	;# 
   775  011F                     	;# 
   776  018C                     	;# 
   777  018D                     	;# 
   778  018E                     	;# 
   779  018F                     	;# 
   780  0190                     	;# 
   781  0191                     	;# 
   782  0192                     	;# 
   783  0196                     	;# 
   784  0197                     	;# 
   785  0198                     	;# 
   786  0199                     	;# 
   787  019A                     	;# 
   788  019B                     	;# 
   789  019C                     	;# 
   790  020C                     	;# 
   791  020C                     	;# 
   792  020D                     	;# 
   793  020E                     	;# 
   794  020F                     	;# 
   795  020F                     	;# 
   796  0210                     	;# 
   797  0210                     	;# 
   798  0211                     	;# 
   799  0211                     	;# 
   800  0212                     	;# 
   801  0212                     	;# 
   802  0213                     	;# 
   803  0214                     	;# 
   804  0215                     	;# 
   805  0215                     	;# 
   806  0216                     	;# 
   807  0216                     	;# 
   808  0217                     	;# 
   809  0217                     	;# 
   810  0218                     	;# 
   811  0218                     	;# 
   812  0219                     	;# 
   813  021A                     	;# 
   814  021B                     	;# 
   815  021B                     	;# 
   816  021C                     	;# 
   817  021C                     	;# 
   818  021D                     	;# 
   819  021D                     	;# 
   820  021E                     	;# 
   821  021F                     	;# 
   822  028C                     	;# 
   823  028C                     	;# 
   824  028D                     	;# 
   825  028D                     	;# 
   826  028E                     	;# 
   827  028F                     	;# 
   828  0290                     	;# 
   829  0290                     	;# 
   830  0291                     	;# 
   831  0292                     	;# 
   832  0292                     	;# 
   833  0293                     	;# 
   834  0293                     	;# 
   835  0294                     	;# 
   836  0295                     	;# 
   837  0296                     	;# 
   838  0296                     	;# 
   839  0297                     	;# 
   840  0298                     	;# 
   841  0298                     	;# 
   842  0299                     	;# 
   843  0299                     	;# 
   844  029A                     	;# 
   845  029B                     	;# 
   846  029C                     	;# 
   847  029C                     	;# 
   848  029D                     	;# 
   849  030C                     	;# 
   850  030C                     	;# 
   851  030D                     	;# 
   852  030E                     	;# 
   853  030F                     	;# 
   854  0310                     	;# 
   855  0310                     	;# 
   856  0311                     	;# 
   857  0312                     	;# 
   858  0313                     	;# 
   859  0314                     	;# 
   860  0314                     	;# 
   861  0315                     	;# 
   862  0316                     	;# 
   863  0317                     	;# 
   864  0318                     	;# 
   865  0318                     	;# 
   866  0319                     	;# 
   867  031A                     	;# 
   868  031B                     	;# 
   869  031C                     	;# 
   870  031C                     	;# 
   871  031D                     	;# 
   872  031E                     	;# 
   873  031F                     	;# 
   874  038C                     	;# 
   875  038C                     	;# 
   876  038D                     	;# 
   877  038E                     	;# 
   878  0390                     	;# 
   879  0390                     	;# 
   880  0391                     	;# 
   881  0392                     	;# 
   882  040C                     	;# 
   883  040D                     	;# 
   884  040E                     	;# 
   885  040F                     	;# 
   886  0410                     	;# 
   887  0411                     	;# 
   888  0416                     	;# 
   889  0416                     	;# 
   890  0417                     	;# 
   891  0418                     	;# 
   892  0418                     	;# 
   893  0419                     	;# 
   894  041A                     	;# 
   895  041A                     	;# 
   896  041B                     	;# 
   897  041C                     	;# 
   898  041C                     	;# 
   899  041D                     	;# 
   900  041E                     	;# 
   901  041F                     	;# 
   902  048C                     	;# 
   903  048C                     	;# 
   904  048D                     	;# 
   905  048E                     	;# 
   906  048F                     	;# 
   907  048F                     	;# 
   908  0490                     	;# 
   909  0491                     	;# 
   910  0492                     	;# 
   911  0492                     	;# 
   912  0493                     	;# 
   913  0494                     	;# 
   914  0495                     	;# 
   915  0495                     	;# 
   916  0496                     	;# 
   917  0497                     	;# 
   918  0498                     	;# 
   919  0499                     	;# 
   920  049A                     	;# 
   921  049B                     	;# 
   922  049C                     	;# 
   923  049D                     	;# 
   924  050C                     	;# 
   925  050C                     	;# 
   926  050D                     	;# 
   927  050E                     	;# 
   928  050F                     	;# 
   929  050F                     	;# 
   930  0510                     	;# 
   931  0511                     	;# 
   932  0512                     	;# 
   933  0512                     	;# 
   934  0513                     	;# 
   935  0514                     	;# 
   936  0515                     	;# 
   937  0515                     	;# 
   938  0516                     	;# 
   939  0517                     	;# 
   940  0518                     	;# 
   941  0519                     	;# 
   942  051A                     	;# 
   943  051B                     	;# 
   944  051C                     	;# 
   945  051D                     	;# 
   946  058C                     	;# 
   947  058C                     	;# 
   948  058D                     	;# 
   949  058E                     	;# 
   950  058F                     	;# 
   951  058F                     	;# 
   952  0590                     	;# 
   953  0591                     	;# 
   954  0592                     	;# 
   955  0593                     	;# 
   956  060C                     	;# 
   957  060D                     	;# 
   958  060E                     	;# 
   959  060F                     	;# 
   960  0610                     	;# 
   961  0611                     	;# 
   962  0612                     	;# 
   963  0613                     	;# 
   964  0614                     	;# 
   965  0616                     	;# 
   966  0617                     	;# 
   967  0618                     	;# 
   968  0619                     	;# 
   969  061A                     	;# 
   970  061B                     	;# 
   971  061C                     	;# 
   972  061D                     	;# 
   973  061E                     	;# 
   974  068C                     	;# 
   975  068D                     	;# 
   976  068E                     	;# 
   977  068F                     	;# 
   978  0690                     	;# 
   979  0691                     	;# 
   980  0692                     	;# 
   981  0693                     	;# 
   982  0694                     	;# 
   983  070C                     	;# 
   984  070D                     	;# 
   985  070E                     	;# 
   986  070F                     	;# 
   987  0710                     	;# 
   988  0711                     	;# 
   989  0712                     	;# 
   990  0713                     	;# 
   991  0714                     	;# 
   992  0716                     	;# 
   993  0717                     	;# 
   994  0718                     	;# 
   995  0719                     	;# 
   996  071A                     	;# 
   997  071B                     	;# 
   998  071C                     	;# 
   999  071D                     	;# 
  1000  071E                     	;# 
  1001  0796                     	;# 
  1002  0797                     	;# 
  1003  0798                     	;# 
  1004  0799                     	;# 
  1005  079A                     	;# 
  1006  079B                     	;# 
  1007  080C                     	;# 
  1008  080D                     	;# 
  1009  080E                     	;# 
  1010  080F                     	;# 
  1011  0810                     	;# 
  1012  0811                     	;# 
  1013  0812                     	;# 
  1014  0813                     	;# 
  1015  0814                     	;# 
  1016  081A                     	;# 
  1017  081B                     	;# 
  1018  081C                     	;# 
  1019  081D                     	;# 
  1020  081E                     	;# 
  1021  081F                     	;# 
  1022  088C                     	;# 
  1023  088D                     	;# 
  1024  088E                     	;# 
  1025  088F                     	;# 
  1026  0890                     	;# 
  1027  0891                     	;# 
  1028  0892                     	;# 
  1029  0893                     	;# 
  1030  0895                     	;# 
  1031  0896                     	;# 
  1032  0897                     	;# 
  1033  0898                     	;# 
  1034  0899                     	;# 
  1035  089A                     	;# 
  1036  089B                     	;# 
  1037  090C                     	;# 
  1038  090E                     	;# 
  1039  090F                     	;# 
  1040  091F                     	;# 
  1041  091F                     	;# 
  1042  098F                     	;# 
  1043  098F                     	;# 
  1044  0990                     	;# 
  1045  0991                     	;# 
  1046  0992                     	;# 
  1047  0993                     	;# 
  1048  0994                     	;# 
  1049  0995                     	;# 
  1050  0996                     	;# 
  1051  0997                     	;# 
  1052  0E0F                     	;# 
  1053  0E10                     	;# 
  1054  0E11                     	;# 
  1055  0E12                     	;# 
  1056  0E13                     	;# 
  1057  0E14                     	;# 
  1058  0E15                     	;# 
  1059  0E16                     	;# 
  1060  0E17                     	;# 
  1061  0E18                     	;# 
  1062  0E19                     	;# 
  1063  0E1A                     	;# 
  1064  0E1B                     	;# 
  1065  0E1C                     	;# 
  1066  0E1D                     	;# 
  1067  0E1E                     	;# 
  1068  0E1F                     	;# 
  1069  0E20                     	;# 
  1070  0E21                     	;# 
  1071  0E22                     	;# 
  1072  0E23                     	;# 
  1073  0E24                     	;# 
  1074  0E25                     	;# 
  1075  0E26                     	;# 
  1076  0E27                     	;# 
  1077  0E28                     	;# 
  1078  0E29                     	;# 
  1079  0E2A                     	;# 
  1080  0E2B                     	;# 
  1081  0E2C                     	;# 
  1082  0E2D                     	;# 
  1083  0E2E                     	;# 
  1084  0E2F                     	;# 
  1085  0E30                     	;# 
  1086  0E31                     	;# 
  1087  0E32                     	;# 
  1088  0E33                     	;# 
  1089  0E34                     	;# 
  1090  0E35                     	;# 
  1091  0E36                     	;# 
  1092  0E37                     	;# 
  1093  0E8F                     	;# 
  1094  0E90                     	;# 
  1095  0E91                     	;# 
  1096  0E92                     	;# 
  1097  0E93                     	;# 
  1098  0E94                     	;# 
  1099  0E95                     	;# 
  1100  0E96                     	;# 
  1101  0E97                     	;# 
  1102  0E9C                     	;# 
  1103  0E9D                     	;# 
  1104  0E9E                     	;# 
  1105  0EA1                     	;# 
  1106  0EA2                     	;# 
  1107  0EA3                     	;# 
  1108  0EA4                     	;# 
  1109  0EA5                     	;# 
  1110  0EA9                     	;# 
  1111  0EAA                     	;# 
  1112  0EAB                     	;# 
  1113  0EAC                     	;# 
  1114  0EB1                     	;# 
  1115  0EB2                     	;# 
  1116  0EB3                     	;# 
  1117  0EB8                     	;# 
  1118  0EB9                     	;# 
  1119  0EBA                     	;# 
  1120  0EBB                     	;# 
  1121  0EBC                     	;# 
  1122  0EBD                     	;# 
  1123  0EBE                     	;# 
  1124  0EC3                     	;# 
  1125  0EC5                     	;# 
  1126  0EC6                     	;# 
  1127  0EC7                     	;# 
  1128  0EC8                     	;# 
  1129  0EC9                     	;# 
  1130  0ECA                     	;# 
  1131  0ECB                     	;# 
  1132  0ECC                     	;# 
  1133  0F10                     	;# 
  1134  0F11                     	;# 
  1135  0F12                     	;# 
  1136  0F13                     	;# 
  1137  0F14                     	;# 
  1138  0F15                     	;# 
  1139  0F16                     	;# 
  1140  0F17                     	;# 
  1141  0F18                     	;# 
  1142  0F19                     	;# 
  1143  0F1A                     	;# 
  1144  0F1B                     	;# 
  1145  0F1C                     	;# 
  1146  0F1D                     	;# 
  1147  0F1E                     	;# 
  1148  0F1F                     	;# 
  1149  0F20                     	;# 
  1150  0F21                     	;# 
  1151  0F22                     	;# 
  1152  0F23                     	;# 
  1153  0F24                     	;# 
  1154  0F25                     	;# 
  1155  0F26                     	;# 
  1156  0F27                     	;# 
  1157  0F28                     	;# 
  1158  0F29                     	;# 
  1159  0F2A                     	;# 
  1160  0F2B                     	;# 
  1161  0F2C                     	;# 
  1162  0F2D                     	;# 
  1163  0F2E                     	;# 
  1164  0F2F                     	;# 
  1165  0F30                     	;# 
  1166  0F31                     	;# 
  1167  0F32                     	;# 
  1168  0F38                     	;# 
  1169  0F39                     	;# 
  1170  0F3A                     	;# 
  1171  0F3B                     	;# 
  1172  0F3C                     	;# 
  1173  0F3D                     	;# 
  1174  0F3E                     	;# 
  1175  0F3F                     	;# 
  1176  0F40                     	;# 
  1177  0F41                     	;# 
  1178  0F43                     	;# 
  1179  0F44                     	;# 
  1180  0F45                     	;# 
  1181  0F46                     	;# 
  1182  0F47                     	;# 
  1183  0F48                     	;# 
  1184  0F49                     	;# 
  1185  0F4A                     	;# 
  1186  0F4B                     	;# 
  1187  0F4C                     	;# 
  1188  0F4E                     	;# 
  1189  0F4F                     	;# 
  1190  0F50                     	;# 
  1191  0F51                     	;# 
  1192  0F52                     	;# 
  1193  0F53                     	;# 
  1194  0F54                     	;# 
  1195  0F55                     	;# 
  1196  0F56                     	;# 
  1197  0F57                     	;# 
  1198  0F59                     	;# 
  1199  0F5A                     	;# 
  1200  0F5B                     	;# 
  1201  0F5C                     	;# 
  1202  0F5D                     	;# 
  1203  0F61                     	;# 
  1204  0F62                     	;# 
  1205  0F64                     	;# 
  1206  0F65                     	;# 
  1207  0F66                     	;# 
  1208  0F67                     	;# 
  1209  0F68                     	;# 
  1210  0F69                     	;# 
  1211  0F6A                     	;# 
  1212  0F6B                     	;# 
  1213  0F6C                     	;# 
  1214  0F6D                     	;# 
  1215  0FE4                     	;# 
  1216  0FE5                     	;# 
  1217  0FE6                     	;# 
  1218  0FE7                     	;# 
  1219  0FE8                     	;# 
  1220  0FE9                     	;# 
  1221  0FEA                     	;# 
  1222  0FEB                     	;# 
  1223  0FED                     	;# 
  1224  0FEE                     	;# 
  1225  0FEF                     	;# 
  1226  0000                     	;# 
  1227  0001                     	;# 
  1228  0002                     	;# 
  1229  0003                     	;# 
  1230  0004                     	;# 
  1231  0005                     	;# 
  1232  0006                     	;# 
  1233  0007                     	;# 
  1234  0008                     	;# 
  1235  0009                     	;# 
  1236  000A                     	;# 
  1237  000B                     	;# 
  1238  000C                     	;# 
  1239  000D                     	;# 
  1240  000E                     	;# 
  1241  000F                     	;# 
  1242  0010                     	;# 
  1243  0011                     	;# 
  1244  0012                     	;# 
  1245  0013                     	;# 
  1246  0014                     	;# 
  1247  0015                     	;# 
  1248  0016                     	;# 
  1249  0017                     	;# 
  1250  0018                     	;# 
  1251  0019                     	;# 
  1252  001A                     	;# 
  1253  001C                     	;# 
  1254  001C                     	;# 
  1255  001D                     	;# 
  1256  001D                     	;# 
  1257  001E                     	;# 
  1258  001F                     	;# 
  1259  008C                     	;# 
  1260  008C                     	;# 
  1261  008D                     	;# 
  1262  008E                     	;# 
  1263  008E                     	;# 
  1264  008F                     	;# 
  1265  0090                     	;# 
  1266  0090                     	;# 
  1267  0091                     	;# 
  1268  0093                     	;# 
  1269  0094                     	;# 
  1270  0095                     	;# 
  1271  0096                     	;# 
  1272  0097                     	;# 
  1273  0098                     	;# 
  1274  0099                     	;# 
  1275  009A                     	;# 
  1276  009B                     	;# 
  1277  009C                     	;# 
  1278  009D                     	;# 
  1279  009E                     	;# 
  1280  010C                     	;# 
  1281  010D                     	;# 
  1282  010E                     	;# 
  1283  010E                     	;# 
  1284  010F                     	;# 
  1285  0110                     	;# 
  1286  0110                     	;# 
  1287  0111                     	;# 
  1288  0112                     	;# 
  1289  0112                     	;# 
  1290  0113                     	;# 
  1291  0114                     	;# 
  1292  0114                     	;# 
  1293  0115                     	;# 
  1294  0116                     	;# 
  1295  0116                     	;# 
  1296  0117                     	;# 
  1297  0119                     	;# 
  1298  0119                     	;# 
  1299  0119                     	;# 
  1300  011A                     	;# 
  1301  011A                     	;# 
  1302  011A                     	;# 
  1303  011B                     	;# 
  1304  011B                     	;# 
  1305  011B                     	;# 
  1306  011B                     	;# 
  1307  011B                     	;# 
  1308  011C                     	;# 
  1309  011C                     	;# 
  1310  011C                     	;# 
  1311  011D                     	;# 
  1312  011D                     	;# 
  1313  011D                     	;# 
  1314  011E                     	;# 
  1315  011E                     	;# 
  1316  011E                     	;# 
  1317  011F                     	;# 
  1318  011F                     	;# 
  1319  011F                     	;# 
  1320  011F                     	;# 
  1321  011F                     	;# 
  1322  018C                     	;# 
  1323  018D                     	;# 
  1324  018E                     	;# 
  1325  018F                     	;# 
  1326  0190                     	;# 
  1327  0191                     	;# 
  1328  0192                     	;# 
  1329  0196                     	;# 
  1330  0197                     	;# 
  1331  0198                     	;# 
  1332  0199                     	;# 
  1333  019A                     	;# 
  1334  019B                     	;# 
  1335  019C                     	;# 
  1336  020C                     	;# 
  1337  020C                     	;# 
  1338  020D                     	;# 
  1339  020E                     	;# 
  1340  020F                     	;# 
  1341  020F                     	;# 
  1342  0210                     	;# 
  1343  0210                     	;# 
  1344  0211                     	;# 
  1345  0211                     	;# 
  1346  0212                     	;# 
  1347  0212                     	;# 
  1348  0213                     	;# 
  1349  0214                     	;# 
  1350  0215                     	;# 
  1351  0215                     	;# 
  1352  0216                     	;# 
  1353  0216                     	;# 
  1354  0217                     	;# 
  1355  0217                     	;# 
  1356  0218                     	;# 
  1357  0218                     	;# 
  1358  0219                     	;# 
  1359  021A                     	;# 
  1360  021B                     	;# 
  1361  021B                     	;# 
  1362  021C                     	;# 
  1363  021C                     	;# 
  1364  021D                     	;# 
  1365  021D                     	;# 
  1366  021E                     	;# 
  1367  021F                     	;# 
  1368  028C                     	;# 
  1369  028C                     	;# 
  1370  028D                     	;# 
  1371  028D                     	;# 
  1372  028E                     	;# 
  1373  028F                     	;# 
  1374  0290                     	;# 
  1375  0290                     	;# 
  1376  0291                     	;# 
  1377  0292                     	;# 
  1378  0292                     	;# 
  1379  0293                     	;# 
  1380  0293                     	;# 
  1381  0294                     	;# 
  1382  0295                     	;# 
  1383  0296                     	;# 
  1384  0296                     	;# 
  1385  0297                     	;# 
  1386  0298                     	;# 
  1387  0298                     	;# 
  1388  0299                     	;# 
  1389  0299                     	;# 
  1390  029A                     	;# 
  1391  029B                     	;# 
  1392  029C                     	;# 
  1393  029C                     	;# 
  1394  029D                     	;# 
  1395  030C                     	;# 
  1396  030C                     	;# 
  1397  030D                     	;# 
  1398  030E                     	;# 
  1399  030F                     	;# 
  1400  0310                     	;# 
  1401  0310                     	;# 
  1402  0311                     	;# 
  1403  0312                     	;# 
  1404  0313                     	;# 
  1405  0314                     	;# 
  1406  0314                     	;# 
  1407  0315                     	;# 
  1408  0316                     	;# 
  1409  0317                     	;# 
  1410  0318                     	;# 
  1411  0318                     	;# 
  1412  0319                     	;# 
  1413  031A                     	;# 
  1414  031B                     	;# 
  1415  031C                     	;# 
  1416  031C                     	;# 
  1417  031D                     	;# 
  1418  031E                     	;# 
  1419  031F                     	;# 
  1420  038C                     	;# 
  1421  038C                     	;# 
  1422  038D                     	;# 
  1423  038E                     	;# 
  1424  0390                     	;# 
  1425  0390                     	;# 
  1426  0391                     	;# 
  1427  0392                     	;# 
  1428  040C                     	;# 
  1429  040D                     	;# 
  1430  040E                     	;# 
  1431  040F                     	;# 
  1432  0410                     	;# 
  1433  0411                     	;# 
  1434  0416                     	;# 
  1435  0416                     	;# 
  1436  0417                     	;# 
  1437  0418                     	;# 
  1438  0418                     	;# 
  1439  0419                     	;# 
  1440  041A                     	;# 
  1441  041A                     	;# 
  1442  041B                     	;# 
  1443  041C                     	;# 
  1444  041C                     	;# 
  1445  041D                     	;# 
  1446  041E                     	;# 
  1447  041F                     	;# 
  1448  048C                     	;# 
  1449  048C                     	;# 
  1450  048D                     	;# 
  1451  048E                     	;# 
  1452  048F                     	;# 
  1453  048F                     	;# 
  1454  0490                     	;# 
  1455  0491                     	;# 
  1456  0492                     	;# 
  1457  0492                     	;# 
  1458  0493                     	;# 
  1459  0494                     	;# 
  1460  0495                     	;# 
  1461  0495                     	;# 
  1462  0496                     	;# 
  1463  0497                     	;# 
  1464  0498                     	;# 
  1465  0499                     	;# 
  1466  049A                     	;# 
  1467  049B                     	;# 
  1468  049C                     	;# 
  1469  049D                     	;# 
  1470  050C                     	;# 
  1471  050C                     	;# 
  1472  050D                     	;# 
  1473  050E                     	;# 
  1474  050F                     	;# 
  1475  050F                     	;# 
  1476  0510                     	;# 
  1477  0511                     	;# 
  1478  0512                     	;# 
  1479  0512                     	;# 
  1480  0513                     	;# 
  1481  0514                     	;# 
  1482  0515                     	;# 
  1483  0515                     	;# 
  1484  0516                     	;# 
  1485  0517                     	;# 
  1486  0518                     	;# 
  1487  0519                     	;# 
  1488  051A                     	;# 
  1489  051B                     	;# 
  1490  051C                     	;# 
  1491  051D                     	;# 
  1492  058C                     	;# 
  1493  058C                     	;# 
  1494  058D                     	;# 
  1495  058E                     	;# 
  1496  058F                     	;# 
  1497  058F                     	;# 
  1498  0590                     	;# 
  1499  0591                     	;# 
  1500  0592                     	;# 
  1501  0593                     	;# 
  1502  060C                     	;# 
  1503  060D                     	;# 
  1504  060E                     	;# 
  1505  060F                     	;# 
  1506  0610                     	;# 
  1507  0611                     	;# 
  1508  0612                     	;# 
  1509  0613                     	;# 
  1510  0614                     	;# 
  1511  0616                     	;# 
  1512  0617                     	;# 
  1513  0618                     	;# 
  1514  0619                     	;# 
  1515  061A                     	;# 
  1516  061B                     	;# 
  1517  061C                     	;# 
  1518  061D                     	;# 
  1519  061E                     	;# 
  1520  068C                     	;# 
  1521  068D                     	;# 
  1522  068E                     	;# 
  1523  068F                     	;# 
  1524  0690                     	;# 
  1525  0691                     	;# 
  1526  0692                     	;# 
  1527  0693                     	;# 
  1528  0694                     	;# 
  1529  070C                     	;# 
  1530  070D                     	;# 
  1531  070E                     	;# 
  1532  070F                     	;# 
  1533  0710                     	;# 
  1534  0711                     	;# 
  1535  0712                     	;# 
  1536  0713                     	;# 
  1537  0714                     	;# 
  1538  0716                     	;# 
  1539  0717                     	;# 
  1540  0718                     	;# 
  1541  0719                     	;# 
  1542  071A                     	;# 
  1543  071B                     	;# 
  1544  071C                     	;# 
  1545  071D                     	;# 
  1546  071E                     	;# 
  1547  0796                     	;# 
  1548  0797                     	;# 
  1549  0798                     	;# 
  1550  0799                     	;# 
  1551  079A                     	;# 
  1552  079B                     	;# 
  1553  080C                     	;# 
  1554  080D                     	;# 
  1555  080E                     	;# 
  1556  080F                     	;# 
  1557  0810                     	;# 
  1558  0811                     	;# 
  1559  0812                     	;# 
  1560  0813                     	;# 
  1561  0814                     	;# 
  1562  081A                     	;# 
  1563  081B                     	;# 
  1564  081C                     	;# 
  1565  081D                     	;# 
  1566  081E                     	;# 
  1567  081F                     	;# 
  1568  088C                     	;# 
  1569  088D                     	;# 
  1570  088E                     	;# 
  1571  088F                     	;# 
  1572  0890                     	;# 
  1573  0891                     	;# 
  1574  0892                     	;# 
  1575  0893                     	;# 
  1576  0895                     	;# 
  1577  0896                     	;# 
  1578  0897                     	;# 
  1579  0898                     	;# 
  1580  0899                     	;# 
  1581  089A                     	;# 
  1582  089B                     	;# 
  1583  090C                     	;# 
  1584  090E                     	;# 
  1585  090F                     	;# 
  1586  091F                     	;# 
  1587  091F                     	;# 
  1588  098F                     	;# 
  1589  098F                     	;# 
  1590  0990                     	;# 
  1591  0991                     	;# 
  1592  0992                     	;# 
  1593  0993                     	;# 
  1594  0994                     	;# 
  1595  0995                     	;# 
  1596  0996                     	;# 
  1597  0997                     	;# 
  1598  0E0F                     	;# 
  1599  0E10                     	;# 
  1600  0E11                     	;# 
  1601  0E12                     	;# 
  1602  0E13                     	;# 
  1603  0E14                     	;# 
  1604  0E15                     	;# 
  1605  0E16                     	;# 
  1606  0E17                     	;# 
  1607  0E18                     	;# 
  1608  0E19                     	;# 
  1609  0E1A                     	;# 
  1610  0E1B                     	;# 
  1611  0E1C                     	;# 
  1612  0E1D                     	;# 
  1613  0E1E                     	;# 
  1614  0E1F                     	;# 
  1615  0E20                     	;# 
  1616  0E21                     	;# 
  1617  0E22                     	;# 
  1618  0E23                     	;# 
  1619  0E24                     	;# 
  1620  0E25                     	;# 
  1621  0E26                     	;# 
  1622  0E27                     	;# 
  1623  0E28                     	;# 
  1624  0E29                     	;# 
  1625  0E2A                     	;# 
  1626  0E2B                     	;# 
  1627  0E2C                     	;# 
  1628  0E2D                     	;# 
  1629  0E2E                     	;# 
  1630  0E2F                     	;# 
  1631  0E30                     	;# 
  1632  0E31                     	;# 
  1633  0E32                     	;# 
  1634  0E33                     	;# 
  1635  0E34                     	;# 
  1636  0E35                     	;# 
  1637  0E36                     	;# 
  1638  0E37                     	;# 
  1639  0E8F                     	;# 
  1640  0E90                     	;# 
  1641  0E91                     	;# 
  1642  0E92                     	;# 
  1643  0E93                     	;# 
  1644  0E94                     	;# 
  1645  0E95                     	;# 
  1646  0E96                     	;# 
  1647  0E97                     	;# 
  1648  0E9C                     	;# 
  1649  0E9D                     	;# 
  1650  0E9E                     	;# 
  1651  0EA1                     	;# 
  1652  0EA2                     	;# 
  1653  0EA3                     	;# 
  1654  0EA4                     	;# 
  1655  0EA5                     	;# 
  1656  0EA9                     	;# 
  1657  0EAA                     	;# 
  1658  0EAB                     	;# 
  1659  0EAC                     	;# 
  1660  0EB1                     	;# 
  1661  0EB2                     	;# 
  1662  0EB3                     	;# 
  1663  0EB8                     	;# 
  1664  0EB9                     	;# 
  1665  0EBA                     	;# 
  1666  0EBB                     	;# 
  1667  0EBC                     	;# 
  1668  0EBD                     	;# 
  1669  0EBE                     	;# 
  1670  0EC3                     	;# 
  1671  0EC5                     	;# 
  1672  0EC6                     	;# 
  1673  0EC7                     	;# 
  1674  0EC8                     	;# 
  1675  0EC9                     	;# 
  1676  0ECA                     	;# 
  1677  0ECB                     	;# 
  1678  0ECC                     	;# 
  1679  0F10                     	;# 
  1680  0F11                     	;# 
  1681  0F12                     	;# 
  1682  0F13                     	;# 
  1683  0F14                     	;# 
  1684  0F15                     	;# 
  1685  0F16                     	;# 
  1686  0F17                     	;# 
  1687  0F18                     	;# 
  1688  0F19                     	;# 
  1689  0F1A                     	;# 
  1690  0F1B                     	;# 
  1691  0F1C                     	;# 
  1692  0F1D                     	;# 
  1693  0F1E                     	;# 
  1694  0F1F                     	;# 
  1695  0F20                     	;# 
  1696  0F21                     	;# 
  1697  0F22                     	;# 
  1698  0F23                     	;# 
  1699  0F24                     	;# 
  1700  0F25                     	;# 
  1701  0F26                     	;# 
  1702  0F27                     	;# 
  1703  0F28                     	;# 
  1704  0F29                     	;# 
  1705  0F2A                     	;# 
  1706  0F2B                     	;# 
  1707  0F2C                     	;# 
  1708  0F2D                     	;# 
  1709  0F2E                     	;# 
  1710  0F2F                     	;# 
  1711  0F30                     	;# 
  1712  0F31                     	;# 
  1713  0F32                     	;# 
  1714  0F38                     	;# 
  1715  0F39                     	;# 
  1716  0F3A                     	;# 
  1717  0F3B                     	;# 
  1718  0F3C                     	;# 
  1719  0F3D                     	;# 
  1720  0F3E                     	;# 
  1721  0F3F                     	;# 
  1722  0F40                     	;# 
  1723  0F41                     	;# 
  1724  0F43                     	;# 
  1725  0F44                     	;# 
  1726  0F45                     	;# 
  1727  0F46                     	;# 
  1728  0F47                     	;# 
  1729  0F48                     	;# 
  1730  0F49                     	;# 
  1731  0F4A                     	;# 
  1732  0F4B                     	;# 
  1733  0F4C                     	;# 
  1734  0F4E                     	;# 
  1735  0F4F                     	;# 
  1736  0F50                     	;# 
  1737  0F51                     	;# 
  1738  0F52                     	;# 
  1739  0F53                     	;# 
  1740  0F54                     	;# 
  1741  0F55                     	;# 
  1742  0F56                     	;# 
  1743  0F57                     	;# 
  1744  0F59                     	;# 
  1745  0F5A                     	;# 
  1746  0F5B                     	;# 
  1747  0F5C                     	;# 
  1748  0F5D                     	;# 
  1749  0F61                     	;# 
  1750  0F62                     	;# 
  1751  0F64                     	;# 
  1752  0F65                     	;# 
  1753  0F66                     	;# 
  1754  0F67                     	;# 
  1755  0F68                     	;# 
  1756  0F69                     	;# 
  1757  0F6A                     	;# 
  1758  0F6B                     	;# 
  1759  0F6C                     	;# 
  1760  0F6D                     	;# 
  1761  0FE4                     	;# 
  1762  0FE5                     	;# 
  1763  0FE6                     	;# 
  1764  0FE7                     	;# 
  1765  0FE8                     	;# 
  1766  0FE9                     	;# 
  1767  0FEA                     	;# 
  1768  0FEB                     	;# 
  1769  0FED                     	;# 
  1770  0FEE                     	;# 
  1771  0FEF                     	;# 
  1772  0000                     	;# 
  1773  0001                     	;# 
  1774  0002                     	;# 
  1775  0003                     	;# 
  1776  0004                     	;# 
  1777  0005                     	;# 
  1778  0006                     	;# 
  1779  0007                     	;# 
  1780  0008                     	;# 
  1781  0009                     	;# 
  1782  000A                     	;# 
  1783  000B                     	;# 
  1784  000C                     	;# 
  1785  000D                     	;# 
  1786  000E                     	;# 
  1787  000F                     	;# 
  1788  0010                     	;# 
  1789  0011                     	;# 
  1790  0012                     	;# 
  1791  0013                     	;# 
  1792  0014                     	;# 
  1793  0015                     	;# 
  1794  0016                     	;# 
  1795  0017                     	;# 
  1796  0018                     	;# 
  1797  0019                     	;# 
  1798  001A                     	;# 
  1799  001C                     	;# 
  1800  001C                     	;# 
  1801  001D                     	;# 
  1802  001D                     	;# 
  1803  001E                     	;# 
  1804  001F                     	;# 
  1805  008C                     	;# 
  1806  008C                     	;# 
  1807  008D                     	;# 
  1808  008E                     	;# 
  1809  008E                     	;# 
  1810  008F                     	;# 
  1811  0090                     	;# 
  1812  0090                     	;# 
  1813  0091                     	;# 
  1814  0093                     	;# 
  1815  0094                     	;# 
  1816  0095                     	;# 
  1817  0096                     	;# 
  1818  0097                     	;# 
  1819  0098                     	;# 
  1820  0099                     	;# 
  1821  009A                     	;# 
  1822  009B                     	;# 
  1823  009C                     	;# 
  1824  009D                     	;# 
  1825  009E                     	;# 
  1826  010C                     	;# 
  1827  010D                     	;# 
  1828  010E                     	;# 
  1829  010E                     	;# 
  1830  010F                     	;# 
  1831  0110                     	;# 
  1832  0110                     	;# 
  1833  0111                     	;# 
  1834  0112                     	;# 
  1835  0112                     	;# 
  1836  0113                     	;# 
  1837  0114                     	;# 
  1838  0114                     	;# 
  1839  0115                     	;# 
  1840  0116                     	;# 
  1841  0116                     	;# 
  1842  0117                     	;# 
  1843  0119                     	;# 
  1844  0119                     	;# 
  1845  0119                     	;# 
  1846  011A                     	;# 
  1847  011A                     	;# 
  1848  011A                     	;# 
  1849  011B                     	;# 
  1850  011B                     	;# 
  1851  011B                     	;# 
  1852  011B                     	;# 
  1853  011B                     	;# 
  1854  011C                     	;# 
  1855  011C                     	;# 
  1856  011C                     	;# 
  1857  011D                     	;# 
  1858  011D                     	;# 
  1859  011D                     	;# 
  1860  011E                     	;# 
  1861  011E                     	;# 
  1862  011E                     	;# 
  1863  011F                     	;# 
  1864  011F                     	;# 
  1865  011F                     	;# 
  1866  011F                     	;# 
  1867  011F                     	;# 
  1868  018C                     	;# 
  1869  018D                     	;# 
  1870  018E                     	;# 
  1871  018F                     	;# 
  1872  0190                     	;# 
  1873  0191                     	;# 
  1874  0192                     	;# 
  1875  0196                     	;# 
  1876  0197                     	;# 
  1877  0198                     	;# 
  1878  0199                     	;# 
  1879  019A                     	;# 
  1880  019B                     	;# 
  1881  019C                     	;# 
  1882  020C                     	;# 
  1883  020C                     	;# 
  1884  020D                     	;# 
  1885  020E                     	;# 
  1886  020F                     	;# 
  1887  020F                     	;# 
  1888  0210                     	;# 
  1889  0210                     	;# 
  1890  0211                     	;# 
  1891  0211                     	;# 
  1892  0212                     	;# 
  1893  0212                     	;# 
  1894  0213                     	;# 
  1895  0214                     	;# 
  1896  0215                     	;# 
  1897  0215                     	;# 
  1898  0216                     	;# 
  1899  0216                     	;# 
  1900  0217                     	;# 
  1901  0217                     	;# 
  1902  0218                     	;# 
  1903  0218                     	;# 
  1904  0219                     	;# 
  1905  021A                     	;# 
  1906  021B                     	;# 
  1907  021B                     	;# 
  1908  021C                     	;# 
  1909  021C                     	;# 
  1910  021D                     	;# 
  1911  021D                     	;# 
  1912  021E                     	;# 
  1913  021F                     	;# 
  1914  028C                     	;# 
  1915  028C                     	;# 
  1916  028D                     	;# 
  1917  028D                     	;# 
  1918  028E                     	;# 
  1919  028F                     	;# 
  1920  0290                     	;# 
  1921  0290                     	;# 
  1922  0291                     	;# 
  1923  0292                     	;# 
  1924  0292                     	;# 
  1925  0293                     	;# 
  1926  0293                     	;# 
  1927  0294                     	;# 
  1928  0295                     	;# 
  1929  0296                     	;# 
  1930  0296                     	;# 
  1931  0297                     	;# 
  1932  0298                     	;# 
  1933  0298                     	;# 
  1934  0299                     	;# 
  1935  0299                     	;# 
  1936  029A                     	;# 
  1937  029B                     	;# 
  1938  029C                     	;# 
  1939  029C                     	;# 
  1940  029D                     	;# 
  1941  030C                     	;# 
  1942  030C                     	;# 
  1943  030D                     	;# 
  1944  030E                     	;# 
  1945  030F                     	;# 
  1946  0310                     	;# 
  1947  0310                     	;# 
  1948  0311                     	;# 
  1949  0312                     	;# 
  1950  0313                     	;# 
  1951  0314                     	;# 
  1952  0314                     	;# 
  1953  0315                     	;# 
  1954  0316                     	;# 
  1955  0317                     	;# 
  1956  0318                     	;# 
  1957  0318                     	;# 
  1958  0319                     	;# 
  1959  031A                     	;# 
  1960  031B                     	;# 
  1961  031C                     	;# 
  1962  031C                     	;# 
  1963  031D                     	;# 
  1964  031E                     	;# 
  1965  031F                     	;# 
  1966  038C                     	;# 
  1967  038C                     	;# 
  1968  038D                     	;# 
  1969  038E                     	;# 
  1970  0390                     	;# 
  1971  0390                     	;# 
  1972  0391                     	;# 
  1973  0392                     	;# 
  1974  040C                     	;# 
  1975  040D                     	;# 
  1976  040E                     	;# 
  1977  040F                     	;# 
  1978  0410                     	;# 
  1979  0411                     	;# 
  1980  0416                     	;# 
  1981  0416                     	;# 
  1982  0417                     	;# 
  1983  0418                     	;# 
  1984  0418                     	;# 
  1985  0419                     	;# 
  1986  041A                     	;# 
  1987  041A                     	;# 
  1988  041B                     	;# 
  1989  041C                     	;# 
  1990  041C                     	;# 
  1991  041D                     	;# 
  1992  041E                     	;# 
  1993  041F                     	;# 
  1994  048C                     	;# 
  1995  048C                     	;# 
  1996  048D                     	;# 
  1997  048E                     	;# 
  1998  048F                     	;# 
  1999  048F                     	;# 
  2000  0490                     	;# 
  2001  0491                     	;# 
  2002  0492                     	;# 
  2003  0492                     	;# 
  2004  0493                     	;# 
  2005  0494                     	;# 
  2006  0495                     	;# 
  2007  0495                     	;# 
  2008  0496                     	;# 
  2009  0497                     	;# 
  2010  0498                     	;# 
  2011  0499                     	;# 
  2012  049A                     	;# 
  2013  049B                     	;# 
  2014  049C                     	;# 
  2015  049D                     	;# 
  2016  050C                     	;# 
  2017  050C                     	;# 
  2018  050D                     	;# 
  2019  050E                     	;# 
  2020  050F                     	;# 
  2021  050F                     	;# 
  2022  0510                     	;# 
  2023  0511                     	;# 
  2024  0512                     	;# 
  2025  0512                     	;# 
  2026  0513                     	;# 
  2027  0514                     	;# 
  2028  0515                     	;# 
  2029  0515                     	;# 
  2030  0516                     	;# 
  2031  0517                     	;# 
  2032  0518                     	;# 
  2033  0519                     	;# 
  2034  051A                     	;# 
  2035  051B                     	;# 
  2036  051C                     	;# 
  2037  051D                     	;# 
  2038  058C                     	;# 
  2039  058C                     	;# 
  2040  058D                     	;# 
  2041  058E                     	;# 
  2042  058F                     	;# 
  2043  058F                     	;# 
  2044  0590                     	;# 
  2045  0591                     	;# 
  2046  0592                     	;# 
  2047  0593                     	;# 
  2048  060C                     	;# 
  2049  060D                     	;# 
  2050  060E                     	;# 
  2051  060F                     	;# 
  2052  0610                     	;# 
  2053  0611                     	;# 
  2054  0612                     	;# 
  2055  0613                     	;# 
  2056  0614                     	;# 
  2057  0616                     	;# 
  2058  0617                     	;# 
  2059  0618                     	;# 
  2060  0619                     	;# 
  2061  061A                     	;# 
  2062  061B                     	;# 
  2063  061C                     	;# 
  2064  061D                     	;# 
  2065  061E                     	;# 
  2066  068C                     	;# 
  2067  068D                     	;# 
  2068  068E                     	;# 
  2069  068F                     	;# 
  2070  0690                     	;# 
  2071  0691                     	;# 
  2072  0692                     	;# 
  2073  0693                     	;# 
  2074  0694                     	;# 
  2075  070C                     	;# 
  2076  070D                     	;# 
  2077  070E                     	;# 
  2078  070F                     	;# 
  2079  0710                     	;# 
  2080  0711                     	;# 
  2081  0712                     	;# 
  2082  0713                     	;# 
  2083  0714                     	;# 
  2084  0716                     	;# 
  2085  0717                     	;# 
  2086  0718                     	;# 
  2087  0719                     	;# 
  2088  071A                     	;# 
  2089  071B                     	;# 
  2090  071C                     	;# 
  2091  071D                     	;# 
  2092  071E                     	;# 
  2093  0796                     	;# 
  2094  0797                     	;# 
  2095  0798                     	;# 
  2096  0799                     	;# 
  2097  079A                     	;# 
  2098  079B                     	;# 
  2099  080C                     	;# 
  2100  080D                     	;# 
  2101  080E                     	;# 
  2102  080F                     	;# 
  2103  0810                     	;# 
  2104  0811                     	;# 
  2105  0812                     	;# 
  2106  0813                     	;# 
  2107  0814                     	;# 
  2108  081A                     	;# 
  2109  081B                     	;# 
  2110  081C                     	;# 
  2111  081D                     	;# 
  2112  081E                     	;# 
  2113  081F                     	;# 
  2114  088C                     	;# 
  2115  088D                     	;# 
  2116  088E                     	;# 
  2117  088F                     	;# 
  2118  0890                     	;# 
  2119  0891                     	;# 
  2120  0892                     	;# 
  2121  0893                     	;# 
  2122  0895                     	;# 
  2123  0896                     	;# 
  2124  0897                     	;# 
  2125  0898                     	;# 
  2126  0899                     	;# 
  2127  089A                     	;# 
  2128  089B                     	;# 
  2129  090C                     	;# 
  2130  090E                     	;# 
  2131  090F                     	;# 
  2132  091F                     	;# 
  2133  091F                     	;# 
  2134  098F                     	;# 
  2135  098F                     	;# 
  2136  0990                     	;# 
  2137  0991                     	;# 
  2138  0992                     	;# 
  2139  0993                     	;# 
  2140  0994                     	;# 
  2141  0995                     	;# 
  2142  0996                     	;# 
  2143  0997                     	;# 
  2144  0E0F                     	;# 
  2145  0E10                     	;# 
  2146  0E11                     	;# 
  2147  0E12                     	;# 
  2148  0E13                     	;# 
  2149  0E14                     	;# 
  2150  0E15                     	;# 
  2151  0E16                     	;# 
  2152  0E17                     	;# 
  2153  0E18                     	;# 
  2154  0E19                     	;# 
  2155  0E1A                     	;# 
  2156  0E1B                     	;# 
  2157  0E1C                     	;# 
  2158  0E1D                     	;# 
  2159  0E1E                     	;# 
  2160  0E1F                     	;# 
  2161  0E20                     	;# 
  2162  0E21                     	;# 
  2163  0E22                     	;# 
  2164  0E23                     	;# 
  2165  0E24                     	;# 
  2166  0E25                     	;# 
  2167  0E26                     	;# 
  2168  0E27                     	;# 
  2169  0E28                     	;# 
  2170  0E29                     	;# 
  2171  0E2A                     	;# 
  2172  0E2B                     	;# 
  2173  0E2C                     	;# 
  2174  0E2D                     	;# 
  2175  0E2E                     	;# 
  2176  0E2F                     	;# 
  2177  0E30                     	;# 
  2178  0E31                     	;# 
  2179  0E32                     	;# 
  2180  0E33                     	;# 
  2181  0E34                     	;# 
  2182  0E35                     	;# 
  2183  0E36                     	;# 
  2184  0E37                     	;# 
  2185  0E8F                     	;# 
  2186  0E90                     	;# 
  2187  0E91                     	;# 
  2188  0E92                     	;# 
  2189  0E93                     	;# 
  2190  0E94                     	;# 
  2191  0E95                     	;# 
  2192  0E96                     	;# 
  2193  0E97                     	;# 
  2194  0E9C                     	;# 
  2195  0E9D                     	;# 
  2196  0E9E                     	;# 
  2197  0EA1                     	;# 
  2198  0EA2                     	;# 
  2199  0EA3                     	;# 
  2200  0EA4                     	;# 
  2201  0EA5                     	;# 
  2202  0EA9                     	;# 
  2203  0EAA                     	;# 
  2204  0EAB                     	;# 
  2205  0EAC                     	;# 
  2206  0EB1                     	;# 
  2207  0EB2                     	;# 
  2208  0EB3                     	;# 
  2209  0EB8                     	;# 
  2210  0EB9                     	;# 
  2211  0EBA                     	;# 
  2212  0EBB                     	;# 
  2213  0EBC                     	;# 
  2214  0EBD                     	;# 
  2215  0EBE                     	;# 
  2216  0EC3                     	;# 
  2217  0EC5                     	;# 
  2218  0EC6                     	;# 
  2219  0EC7                     	;# 
  2220  0EC8                     	;# 
  2221  0EC9                     	;# 
  2222  0ECA                     	;# 
  2223  0ECB                     	;# 
  2224  0ECC                     	;# 
  2225  0F10                     	;# 
  2226  0F11                     	;# 
  2227  0F12                     	;# 
  2228  0F13                     	;# 
  2229  0F14                     	;# 
  2230  0F15                     	;# 
  2231  0F16                     	;# 
  2232  0F17                     	;# 
  2233  0F18                     	;# 
  2234  0F19                     	;# 
  2235  0F1A                     	;# 
  2236  0F1B                     	;# 
  2237  0F1C                     	;# 
  2238  0F1D                     	;# 
  2239  0F1E                     	;# 
  2240  0F1F                     	;# 
  2241  0F20                     	;# 
  2242  0F21                     	;# 
  2243  0F22                     	;# 
  2244  0F23                     	;# 
  2245  0F24                     	;# 
  2246  0F25                     	;# 
  2247  0F26                     	;# 
  2248  0F27                     	;# 
  2249  0F28                     	;# 
  2250  0F29                     	;# 
  2251  0F2A                     	;# 
  2252  0F2B                     	;# 
  2253  0F2C                     	;# 
  2254  0F2D                     	;# 
  2255  0F2E                     	;# 
  2256  0F2F                     	;# 
  2257  0F30                     	;# 
  2258  0F31                     	;# 
  2259  0F32                     	;# 
  2260  0F38                     	;# 
  2261  0F39                     	;# 
  2262  0F3A                     	;# 
  2263  0F3B                     	;# 
  2264  0F3C                     	;# 
  2265  0F3D                     	;# 
  2266  0F3E                     	;# 
  2267  0F3F                     	;# 
  2268  0F40                     	;# 
  2269  0F41                     	;# 
  2270  0F43                     	;# 
  2271  0F44                     	;# 
  2272  0F45                     	;# 
  2273  0F46                     	;# 
  2274  0F47                     	;# 
  2275  0F48                     	;# 
  2276  0F49                     	;# 
  2277  0F4A                     	;# 
  2278  0F4B                     	;# 
  2279  0F4C                     	;# 
  2280  0F4E                     	;# 
  2281  0F4F                     	;# 
  2282  0F50                     	;# 
  2283  0F51                     	;# 
  2284  0F52                     	;# 
  2285  0F53                     	;# 
  2286  0F54                     	;# 
  2287  0F55                     	;# 
  2288  0F56                     	;# 
  2289  0F57                     	;# 
  2290  0F59                     	;# 
  2291  0F5A                     	;# 
  2292  0F5B                     	;# 
  2293  0F5C                     	;# 
  2294  0F5D                     	;# 
  2295  0F61                     	;# 
  2296  0F62                     	;# 
  2297  0F64                     	;# 
  2298  0F65                     	;# 
  2299  0F66                     	;# 
  2300  0F67                     	;# 
  2301  0F68                     	;# 
  2302  0F69                     	;# 
  2303  0F6A                     	;# 
  2304  0F6B                     	;# 
  2305  0F6C                     	;# 
  2306  0F6D                     	;# 
  2307  0FE4                     	;# 
  2308  0FE5                     	;# 
  2309  0FE6                     	;# 
  2310  0FE7                     	;# 
  2311  0FE8                     	;# 
  2312  0FE9                     	;# 
  2313  0FEA                     	;# 
  2314  0FEB                     	;# 
  2315  0FED                     	;# 
  2316  0FEE                     	;# 
  2317  0FEF                     	;# 
  2318  0000                     	;# 
  2319  0001                     	;# 
  2320  0002                     	;# 
  2321  0003                     	;# 
  2322  0004                     	;# 
  2323  0005                     	;# 
  2324  0006                     	;# 
  2325  0007                     	;# 
  2326  0008                     	;# 
  2327  0009                     	;# 
  2328  000A                     	;# 
  2329  000B                     	;# 
  2330  000C                     	;# 
  2331  000D                     	;# 
  2332  000E                     	;# 
  2333  000F                     	;# 
  2334  0010                     	;# 
  2335  0011                     	;# 
  2336  0012                     	;# 
  2337  0013                     	;# 
  2338  0014                     	;# 
  2339  0015                     	;# 
  2340  0016                     	;# 
  2341  0017                     	;# 
  2342  0018                     	;# 
  2343  0019                     	;# 
  2344  001A                     	;# 
  2345  001C                     	;# 
  2346  001C                     	;# 
  2347  001D                     	;# 
  2348  001D                     	;# 
  2349  001E                     	;# 
  2350  001F                     	;# 
  2351  008C                     	;# 
  2352  008C                     	;# 
  2353  008D                     	;# 
  2354  008E                     	;# 
  2355  008E                     	;# 
  2356  008F                     	;# 
  2357  0090                     	;# 
  2358  0090                     	;# 
  2359  0091                     	;# 
  2360  0093                     	;# 
  2361  0094                     	;# 
  2362  0095                     	;# 
  2363  0096                     	;# 
  2364  0097                     	;# 
  2365  0098                     	;# 
  2366  0099                     	;# 
  2367  009A                     	;# 
  2368  009B                     	;# 
  2369  009C                     	;# 
  2370  009D                     	;# 
  2371  009E                     	;# 
  2372  010C                     	;# 
  2373  010D                     	;# 
  2374  010E                     	;# 
  2375  010E                     	;# 
  2376  010F                     	;# 
  2377  0110                     	;# 
  2378  0110                     	;# 
  2379  0111                     	;# 
  2380  0112                     	;# 
  2381  0112                     	;# 
  2382  0113                     	;# 
  2383  0114                     	;# 
  2384  0114                     	;# 
  2385  0115                     	;# 
  2386  0116                     	;# 
  2387  0116                     	;# 
  2388  0117                     	;# 
  2389  0119                     	;# 
  2390  0119                     	;# 
  2391  0119                     	;# 
  2392  011A                     	;# 
  2393  011A                     	;# 
  2394  011A                     	;# 
  2395  011B                     	;# 
  2396  011B                     	;# 
  2397  011B                     	;# 
  2398  011B                     	;# 
  2399  011B                     	;# 
  2400  011C                     	;# 
  2401  011C                     	;# 
  2402  011C                     	;# 
  2403  011D                     	;# 
  2404  011D                     	;# 
  2405  011D                     	;# 
  2406  011E                     	;# 
  2407  011E                     	;# 
  2408  011E                     	;# 
  2409  011F                     	;# 
  2410  011F                     	;# 
  2411  011F                     	;# 
  2412  011F                     	;# 
  2413  011F                     	;# 
  2414  018C                     	;# 
  2415  018D                     	;# 
  2416  018E                     	;# 
  2417  018F                     	;# 
  2418  0190                     	;# 
  2419  0191                     	;# 
  2420  0192                     	;# 
  2421  0196                     	;# 
  2422  0197                     	;# 
  2423  0198                     	;# 
  2424  0199                     	;# 
  2425  019A                     	;# 
  2426  019B                     	;# 
  2427  019C                     	;# 
  2428  020C                     	;# 
  2429  020C                     	;# 
  2430  020D                     	;# 
  2431  020E                     	;# 
  2432  020F                     	;# 
  2433  020F                     	;# 
  2434  0210                     	;# 
  2435  0210                     	;# 
  2436  0211                     	;# 
  2437  0211                     	;# 
  2438  0212                     	;# 
  2439  0212                     	;# 
  2440  0213                     	;# 
  2441  0214                     	;# 
  2442  0215                     	;# 
  2443  0215                     	;# 
  2444  0216                     	;# 
  2445  0216                     	;# 
  2446  0217                     	;# 
  2447  0217                     	;# 
  2448  0218                     	;# 
  2449  0218                     	;# 
  2450  0219                     	;# 
  2451  021A                     	;# 
  2452  021B                     	;# 
  2453  021B                     	;# 
  2454  021C                     	;# 
  2455  021C                     	;# 
  2456  021D                     	;# 
  2457  021D                     	;# 
  2458  021E                     	;# 
  2459  021F                     	;# 
  2460  028C                     	;# 
  2461  028C                     	;# 
  2462  028D                     	;# 
  2463  028D                     	;# 
  2464  028E                     	;# 
  2465  028F                     	;# 
  2466  0290                     	;# 
  2467  0290                     	;# 
  2468  0291                     	;# 
  2469  0292                     	;# 
  2470  0292                     	;# 
  2471  0293                     	;# 
  2472  0293                     	;# 
  2473  0294                     	;# 
  2474  0295                     	;# 
  2475  0296                     	;# 
  2476  0296                     	;# 
  2477  0297                     	;# 
  2478  0298                     	;# 
  2479  0298                     	;# 
  2480  0299                     	;# 
  2481  0299                     	;# 
  2482  029A                     	;# 
  2483  029B                     	;# 
  2484  029C                     	;# 
  2485  029C                     	;# 
  2486  029D                     	;# 
  2487  030C                     	;# 
  2488  030C                     	;# 
  2489  030D                     	;# 
  2490  030E                     	;# 
  2491  030F                     	;# 
  2492  0310                     	;# 
  2493  0310                     	;# 
  2494  0311                     	;# 
  2495  0312                     	;# 
  2496  0313                     	;# 
  2497  0314                     	;# 
  2498  0314                     	;# 
  2499  0315                     	;# 
  2500  0316                     	;# 
  2501  0317                     	;# 
  2502  0318                     	;# 
  2503  0318                     	;# 
  2504  0319                     	;# 
  2505  031A                     	;# 
  2506  031B                     	;# 
  2507  031C                     	;# 
  2508  031C                     	;# 
  2509  031D                     	;# 
  2510  031E                     	;# 
  2511  031F                     	;# 
  2512  038C                     	;# 
  2513  038C                     	;# 
  2514  038D                     	;# 
  2515  038E                     	;# 
  2516  0390                     	;# 
  2517  0390                     	;# 
  2518  0391                     	;# 
  2519  0392                     	;# 
  2520  040C                     	;# 
  2521  040D                     	;# 
  2522  040E                     	;# 
  2523  040F                     	;# 
  2524  0410                     	;# 
  2525  0411                     	;# 
  2526  0416                     	;# 
  2527  0416                     	;# 
  2528  0417                     	;# 
  2529  0418                     	;# 
  2530  0418                     	;# 
  2531  0419                     	;# 
  2532  041A                     	;# 
  2533  041A                     	;# 
  2534  041B                     	;# 
  2535  041C                     	;# 
  2536  041C                     	;# 
  2537  041D                     	;# 
  2538  041E                     	;# 
  2539  041F                     	;# 
  2540  048C                     	;# 
  2541  048C                     	;# 
  2542  048D                     	;# 
  2543  048E                     	;# 
  2544  048F                     	;# 
  2545  048F                     	;# 
  2546  0490                     	;# 
  2547  0491                     	;# 
  2548  0492                     	;# 
  2549  0492                     	;# 
  2550  0493                     	;# 
  2551  0494                     	;# 
  2552  0495                     	;# 
  2553  0495                     	;# 
  2554  0496                     	;# 
  2555  0497                     	;# 
  2556  0498                     	;# 
  2557  0499                     	;# 
  2558  049A                     	;# 
  2559  049B                     	;# 
  2560  049C                     	;# 
  2561  049D                     	;# 
  2562  050C                     	;# 
  2563  050C                     	;# 
  2564  050D                     	;# 
  2565  050E                     	;# 
  2566  050F                     	;# 
  2567  050F                     	;# 
  2568  0510                     	;# 
  2569  0511                     	;# 
  2570  0512                     	;# 
  2571  0512                     	;# 
  2572  0513                     	;# 
  2573  0514                     	;# 
  2574  0515                     	;# 
  2575  0515                     	;# 
  2576  0516                     	;# 
  2577  0517                     	;# 
  2578  0518                     	;# 
  2579  0519                     	;# 
  2580  051A                     	;# 
  2581  051B                     	;# 
  2582  051C                     	;# 
  2583  051D                     	;# 
  2584  058C                     	;# 
  2585  058C                     	;# 
  2586  058D                     	;# 
  2587  058E                     	;# 
  2588  058F                     	;# 
  2589  058F                     	;# 
  2590  0590                     	;# 
  2591  0591                     	;# 
  2592  0592                     	;# 
  2593  0593                     	;# 
  2594  060C                     	;# 
  2595  060D                     	;# 
  2596  060E                     	;# 
  2597  060F                     	;# 
  2598  0610                     	;# 
  2599  0611                     	;# 
  2600  0612                     	;# 
  2601  0613                     	;# 
  2602  0614                     	;# 
  2603  0616                     	;# 
  2604  0617                     	;# 
  2605  0618                     	;# 
  2606  0619                     	;# 
  2607  061A                     	;# 
  2608  061B                     	;# 
  2609  061C                     	;# 
  2610  061D                     	;# 
  2611  061E                     	;# 
  2612  068C                     	;# 
  2613  068D                     	;# 
  2614  068E                     	;# 
  2615  068F                     	;# 
  2616  0690                     	;# 
  2617  0691                     	;# 
  2618  0692                     	;# 
  2619  0693                     	;# 
  2620  0694                     	;# 
  2621  070C                     	;# 
  2622  070D                     	;# 
  2623  070E                     	;# 
  2624  070F                     	;# 
  2625  0710                     	;# 
  2626  0711                     	;# 
  2627  0712                     	;# 
  2628  0713                     	;# 
  2629  0714                     	;# 
  2630  0716                     	;# 
  2631  0717                     	;# 
  2632  0718                     	;# 
  2633  0719                     	;# 
  2634  071A                     	;# 
  2635  071B                     	;# 
  2636  071C                     	;# 
  2637  071D                     	;# 
  2638  071E                     	;# 
  2639  0796                     	;# 
  2640  0797                     	;# 
  2641  0798                     	;# 
  2642  0799                     	;# 
  2643  079A                     	;# 
  2644  079B                     	;# 
  2645  080C                     	;# 
  2646  080D                     	;# 
  2647  080E                     	;# 
  2648  080F                     	;# 
  2649  0810                     	;# 
  2650  0811                     	;# 
  2651  0812                     	;# 
  2652  0813                     	;# 
  2653  0814                     	;# 
  2654  081A                     	;# 
  2655  081B                     	;# 
  2656  081C                     	;# 
  2657  081D                     	;# 
  2658  081E                     	;# 
  2659  081F                     	;# 
  2660  088C                     	;# 
  2661  088D                     	;# 
  2662  088E                     	;# 
  2663  088F                     	;# 
  2664  0890                     	;# 
  2665  0891                     	;# 
  2666  0892                     	;# 
  2667  0893                     	;# 
  2668  0895                     	;# 
  2669  0896                     	;# 
  2670  0897                     	;# 
  2671  0898                     	;# 
  2672  0899                     	;# 
  2673  089A                     	;# 
  2674  089B                     	;# 
  2675  090C                     	;# 
  2676  090E                     	;# 
  2677  090F                     	;# 
  2678  091F                     	;# 
  2679  091F                     	;# 
  2680  098F                     	;# 
  2681  098F                     	;# 
  2682  0990                     	;# 
  2683  0991                     	;# 
  2684  0992                     	;# 
  2685  0993                     	;# 
  2686  0994                     	;# 
  2687  0995                     	;# 
  2688  0996                     	;# 
  2689  0997                     	;# 
  2690  0E0F                     	;# 
  2691  0E10                     	;# 
  2692  0E11                     	;# 
  2693  0E12                     	;# 
  2694  0E13                     	;# 
  2695  0E14                     	;# 
  2696  0E15                     	;# 
  2697  0E16                     	;# 
  2698  0E17                     	;# 
  2699  0E18                     	;# 
  2700  0E19                     	;# 
  2701  0E1A                     	;# 
  2702  0E1B                     	;# 
  2703  0E1C                     	;# 
  2704  0E1D                     	;# 
  2705  0E1E                     	;# 
  2706  0E1F                     	;# 
  2707  0E20                     	;# 
  2708  0E21                     	;# 
  2709  0E22                     	;# 
  2710  0E23                     	;# 
  2711  0E24                     	;# 
  2712  0E25                     	;# 
  2713  0E26                     	;# 
  2714  0E27                     	;# 
  2715  0E28                     	;# 
  2716  0E29                     	;# 
  2717  0E2A                     	;# 
  2718  0E2B                     	;# 
  2719  0E2C                     	;# 
  2720  0E2D                     	;# 
  2721  0E2E                     	;# 
  2722  0E2F                     	;# 
  2723  0E30                     	;# 
  2724  0E31                     	;# 
  2725  0E32                     	;# 
  2726  0E33                     	;# 
  2727  0E34                     	;# 
  2728  0E35                     	;# 
  2729  0E36                     	;# 
  2730  0E37                     	;# 
  2731  0E8F                     	;# 
  2732  0E90                     	;# 
  2733  0E91                     	;# 
  2734  0E92                     	;# 
  2735  0E93                     	;# 
  2736  0E94                     	;# 
  2737  0E95                     	;# 
  2738  0E96                     	;# 
  2739  0E97                     	;# 
  2740  0E9C                     	;# 
  2741  0E9D                     	;# 
  2742  0E9E                     	;# 
  2743  0EA1                     	;# 
  2744  0EA2                     	;# 
  2745  0EA3                     	;# 
  2746  0EA4                     	;# 
  2747  0EA5                     	;# 
  2748  0EA9                     	;# 
  2749  0EAA                     	;# 
  2750  0EAB                     	;# 
  2751  0EAC                     	;# 
  2752  0EB1                     	;# 
  2753  0EB2                     	;# 
  2754  0EB3                     	;# 
  2755  0EB8                     	;# 
  2756  0EB9                     	;# 
  2757  0EBA                     	;# 
  2758  0EBB                     	;# 
  2759  0EBC                     	;# 
  2760  0EBD                     	;# 
  2761  0EBE                     	;# 
  2762  0EC3                     	;# 
  2763  0EC5                     	;# 
  2764  0EC6                     	;# 
  2765  0EC7                     	;# 
  2766  0EC8                     	;# 
  2767  0EC9                     	;# 
  2768  0ECA                     	;# 
  2769  0ECB                     	;# 
  2770  0ECC                     	;# 
  2771  0F10                     	;# 
  2772  0F11                     	;# 
  2773  0F12                     	;# 
  2774  0F13                     	;# 
  2775  0F14                     	;# 
  2776  0F15                     	;# 
  2777  0F16                     	;# 
  2778  0F17                     	;# 
  2779  0F18                     	;# 
  2780  0F19                     	;# 
  2781  0F1A                     	;# 
  2782  0F1B                     	;# 
  2783  0F1C                     	;# 
  2784  0F1D                     	;# 
  2785  0F1E                     	;# 
  2786  0F1F                     	;# 
  2787  0F20                     	;# 
  2788  0F21                     	;# 
  2789  0F22                     	;# 
  2790  0F23                     	;# 
  2791  0F24                     	;# 
  2792  0F25                     	;# 
  2793  0F26                     	;# 
  2794  0F27                     	;# 
  2795  0F28                     	;# 
  2796  0F29                     	;# 
  2797  0F2A                     	;# 
  2798  0F2B                     	;# 
  2799  0F2C                     	;# 
  2800  0F2D                     	;# 
  2801  0F2E                     	;# 
  2802  0F2F                     	;# 
  2803  0F30                     	;# 
  2804  0F31                     	;# 
  2805  0F32                     	;# 
  2806  0F38                     	;# 
  2807  0F39                     	;# 
  2808  0F3A                     	;# 
  2809  0F3B                     	;# 
  2810  0F3C                     	;# 
  2811  0F3D                     	;# 
  2812  0F3E                     	;# 
  2813  0F3F                     	;# 
  2814  0F40                     	;# 
  2815  0F41                     	;# 
  2816  0F43                     	;# 
  2817  0F44                     	;# 
  2818  0F45                     	;# 
  2819  0F46                     	;# 
  2820  0F47                     	;# 
  2821  0F48                     	;# 
  2822  0F49                     	;# 
  2823  0F4A                     	;# 
  2824  0F4B                     	;# 
  2825  0F4C                     	;# 
  2826  0F4E                     	;# 
  2827  0F4F                     	;# 
  2828  0F50                     	;# 
  2829  0F51                     	;# 
  2830  0F52                     	;# 
  2831  0F53                     	;# 
  2832  0F54                     	;# 
  2833  0F55                     	;# 
  2834  0F56                     	;# 
  2835  0F57                     	;# 
  2836  0F59                     	;# 
  2837  0F5A                     	;# 
  2838  0F5B                     	;# 
  2839  0F5C                     	;# 
  2840  0F5D                     	;# 
  2841  0F61                     	;# 
  2842  0F62                     	;# 
  2843  0F64                     	;# 
  2844  0F65                     	;# 
  2845  0F66                     	;# 
  2846  0F67                     	;# 
  2847  0F68                     	;# 
  2848  0F69                     	;# 
  2849  0F6A                     	;# 
  2850  0F6B                     	;# 
  2851  0F6C                     	;# 
  2852  0F6D                     	;# 
  2853  0FE4                     	;# 
  2854  0FE5                     	;# 
  2855  0FE6                     	;# 
  2856  0FE7                     	;# 
  2857  0FE8                     	;# 
  2858  0FE9                     	;# 
  2859  0FEA                     	;# 
  2860  0FEB                     	;# 
  2861  0FED                     	;# 
  2862  0FEE                     	;# 
  2863  0FEF                     	;# 
  2864  0000                     	;# 
  2865  0001                     	;# 
  2866  0002                     	;# 
  2867  0003                     	;# 
  2868  0004                     	;# 
  2869  0005                     	;# 
  2870  0006                     	;# 
  2871  0007                     	;# 
  2872  0008                     	;# 
  2873  0009                     	;# 
  2874  000A                     	;# 
  2875  000B                     	;# 
  2876  000C                     	;# 
  2877  000D                     	;# 
  2878  000E                     	;# 
  2879  000F                     	;# 
  2880  0010                     	;# 
  2881  0011                     	;# 
  2882  0012                     	;# 
  2883  0013                     	;# 
  2884  0014                     	;# 
  2885  0015                     	;# 
  2886  0016                     	;# 
  2887  0017                     	;# 
  2888  0018                     	;# 
  2889  0019                     	;# 
  2890  001A                     	;# 
  2891  001C                     	;# 
  2892  001C                     	;# 
  2893  001D                     	;# 
  2894  001D                     	;# 
  2895  001E                     	;# 
  2896  001F                     	;# 
  2897  008C                     	;# 
  2898  008C                     	;# 
  2899  008D                     	;# 
  2900  008E                     	;# 
  2901  008E                     	;# 
  2902  008F                     	;# 
  2903  0090                     	;# 
  2904  0090                     	;# 
  2905  0091                     	;# 
  2906  0093                     	;# 
  2907  0094                     	;# 
  2908  0095                     	;# 
  2909  0096                     	;# 
  2910  0097                     	;# 
  2911  0098                     	;# 
  2912  0099                     	;# 
  2913  009A                     	;# 
  2914  009B                     	;# 
  2915  009C                     	;# 
  2916  009D                     	;# 
  2917  009E                     	;# 
  2918  010C                     	;# 
  2919  010D                     	;# 
  2920  010E                     	;# 
  2921  010E                     	;# 
  2922  010F                     	;# 
  2923  0110                     	;# 
  2924  0110                     	;# 
  2925  0111                     	;# 
  2926  0112                     	;# 
  2927  0112                     	;# 
  2928  0113                     	;# 
  2929  0114                     	;# 
  2930  0114                     	;# 
  2931  0115                     	;# 
  2932  0116                     	;# 
  2933  0116                     	;# 
  2934  0117                     	;# 
  2935  0119                     	;# 
  2936  0119                     	;# 
  2937  0119                     	;# 
  2938  011A                     	;# 
  2939  011A                     	;# 
  2940  011A                     	;# 
  2941  011B                     	;# 
  2942  011B                     	;# 
  2943  011B                     	;# 
  2944  011B                     	;# 
  2945  011B                     	;# 
  2946  011C                     	;# 
  2947  011C                     	;# 
  2948  011C                     	;# 
  2949  011D                     	;# 
  2950  011D                     	;# 
  2951  011D                     	;# 
  2952  011E                     	;# 
  2953  011E                     	;# 
  2954  011E                     	;# 
  2955  011F                     	;# 
  2956  011F                     	;# 
  2957  011F                     	;# 
  2958  011F                     	;# 
  2959  011F                     	;# 
  2960  018C                     	;# 
  2961  018D                     	;# 
  2962  018E                     	;# 
  2963  018F                     	;# 
  2964  0190                     	;# 
  2965  0191                     	;# 
  2966  0192                     	;# 
  2967  0196                     	;# 
  2968  0197                     	;# 
  2969  0198                     	;# 
  2970  0199                     	;# 
  2971  019A                     	;# 
  2972  019B                     	;# 
  2973  019C                     	;# 
  2974  020C                     	;# 
  2975  020C                     	;# 
  2976  020D                     	;# 
  2977  020E                     	;# 
  2978  020F                     	;# 
  2979  020F                     	;# 
  2980  0210                     	;# 
  2981  0210                     	;# 
  2982  0211                     	;# 
  2983  0211                     	;# 
  2984  0212                     	;# 
  2985  0212                     	;# 
  2986  0213                     	;# 
  2987  0214                     	;# 
  2988  0215                     	;# 
  2989  0215                     	;# 
  2990  0216                     	;# 
  2991  0216                     	;# 
  2992  0217                     	;# 
  2993  0217                     	;# 
  2994  0218                     	;# 
  2995  0218                     	;# 
  2996  0219                     	;# 
  2997  021A                     	;# 
  2998  021B                     	;# 
  2999  021B                     	;# 
  3000  021C                     	;# 
  3001  021C                     	;# 
  3002  021D                     	;# 
  3003  021D                     	;# 
  3004  021E                     	;# 
  3005  021F                     	;# 
  3006  028C                     	;# 
  3007  028C                     	;# 
  3008  028D                     	;# 
  3009  028D                     	;# 
  3010  028E                     	;# 
  3011  028F                     	;# 
  3012  0290                     	;# 
  3013  0290                     	;# 
  3014  0291                     	;# 
  3015  0292                     	;# 
  3016  0292                     	;# 
  3017  0293                     	;# 
  3018  0293                     	;# 
  3019  0294                     	;# 
  3020  0295                     	;# 
  3021  0296                     	;# 
  3022  0296                     	;# 
  3023  0297                     	;# 
  3024  0298                     	;# 
  3025  0298                     	;# 
  3026  0299                     	;# 
  3027  0299                     	;# 
  3028  029A                     	;# 
  3029  029B                     	;# 
  3030  029C                     	;# 
  3031  029C                     	;# 
  3032  029D                     	;# 
  3033  030C                     	;# 
  3034  030C                     	;# 
  3035  030D                     	;# 
  3036  030E                     	;# 
  3037  030F                     	;# 
  3038  0310                     	;# 
  3039  0310                     	;# 
  3040  0311                     	;# 
  3041  0312                     	;# 
  3042  0313                     	;# 
  3043  0314                     	;# 
  3044  0314                     	;# 
  3045  0315                     	;# 
  3046  0316                     	;# 
  3047  0317                     	;# 
  3048  0318                     	;# 
  3049  0318                     	;# 
  3050  0319                     	;# 
  3051  031A                     	;# 
  3052  031B                     	;# 
  3053  031C                     	;# 
  3054  031C                     	;# 
  3055  031D                     	;# 
  3056  031E                     	;# 
  3057  031F                     	;# 
  3058  038C                     	;# 
  3059  038C                     	;# 
  3060  038D                     	;# 
  3061  038E                     	;# 
  3062  0390                     	;# 
  3063  0390                     	;# 
  3064  0391                     	;# 
  3065  0392                     	;# 
  3066  040C                     	;# 
  3067  040D                     	;# 
  3068  040E                     	;# 
  3069  040F                     	;# 
  3070  0410                     	;# 
  3071  0411                     	;# 
  3072  0416                     	;# 
  3073  0416                     	;# 
  3074  0417                     	;# 
  3075  0418                     	;# 
  3076  0418                     	;# 
  3077  0419                     	;# 
  3078  041A                     	;# 
  3079  041A                     	;# 
  3080  041B                     	;# 
  3081  041C                     	;# 
  3082  041C                     	;# 
  3083  041D                     	;# 
  3084  041E                     	;# 
  3085  041F                     	;# 
  3086  048C                     	;# 
  3087  048C                     	;# 
  3088  048D                     	;# 
  3089  048E                     	;# 
  3090  048F                     	;# 
  3091  048F                     	;# 
  3092  0490                     	;# 
  3093  0491                     	;# 
  3094  0492                     	;# 
  3095  0492                     	;# 
  3096  0493                     	;# 
  3097  0494                     	;# 
  3098  0495                     	;# 
  3099  0495                     	;# 
  3100  0496                     	;# 
  3101  0497                     	;# 
  3102  0498                     	;# 
  3103  0499                     	;# 
  3104  049A                     	;# 
  3105  049B                     	;# 
  3106  049C                     	;# 
  3107  049D                     	;# 
  3108  050C                     	;# 
  3109  050C                     	;# 
  3110  050D                     	;# 
  3111  050E                     	;# 
  3112  050F                     	;# 
  3113  050F                     	;# 
  3114  0510                     	;# 
  3115  0511                     	;# 
  3116  0512                     	;# 
  3117  0512                     	;# 
  3118  0513                     	;# 
  3119  0514                     	;# 
  3120  0515                     	;# 
  3121  0515                     	;# 
  3122  0516                     	;# 
  3123  0517                     	;# 
  3124  0518                     	;# 
  3125  0519                     	;# 
  3126  051A                     	;# 
  3127  051B                     	;# 
  3128  051C                     	;# 
  3129  051D                     	;# 
  3130  058C                     	;# 
  3131  058C                     	;# 
  3132  058D                     	;# 
  3133  058E                     	;# 
  3134  058F                     	;# 
  3135  058F                     	;# 
  3136  0590                     	;# 
  3137  0591                     	;# 
  3138  0592                     	;# 
  3139  0593                     	;# 
  3140  060C                     	;# 
  3141  060D                     	;# 
  3142  060E                     	;# 
  3143  060F                     	;# 
  3144  0610                     	;# 
  3145  0611                     	;# 
  3146  0612                     	;# 
  3147  0613                     	;# 
  3148  0614                     	;# 
  3149  0616                     	;# 
  3150  0617                     	;# 
  3151  0618                     	;# 
  3152  0619                     	;# 
  3153  061A                     	;# 
  3154  061B                     	;# 
  3155  061C                     	;# 
  3156  061D                     	;# 
  3157  061E                     	;# 
  3158  068C                     	;# 
  3159  068D                     	;# 
  3160  068E                     	;# 
  3161  068F                     	;# 
  3162  0690                     	;# 
  3163  0691                     	;# 
  3164  0692                     	;# 
  3165  0693                     	;# 
  3166  0694                     	;# 
  3167  070C                     	;# 
  3168  070D                     	;# 
  3169  070E                     	;# 
  3170  070F                     	;# 
  3171  0710                     	;# 
  3172  0711                     	;# 
  3173  0712                     	;# 
  3174  0713                     	;# 
  3175  0714                     	;# 
  3176  0716                     	;# 
  3177  0717                     	;# 
  3178  0718                     	;# 
  3179  0719                     	;# 
  3180  071A                     	;# 
  3181  071B                     	;# 
  3182  071C                     	;# 
  3183  071D                     	;# 
  3184  071E                     	;# 
  3185  0796                     	;# 
  3186  0797                     	;# 
  3187  0798                     	;# 
  3188  0799                     	;# 
  3189  079A                     	;# 
  3190  079B                     	;# 
  3191  080C                     	;# 
  3192  080D                     	;# 
  3193  080E                     	;# 
  3194  080F                     	;# 
  3195  0810                     	;# 
  3196  0811                     	;# 
  3197  0812                     	;# 
  3198  0813                     	;# 
  3199  0814                     	;# 
  3200  081A                     	;# 
  3201  081B                     	;# 
  3202  081C                     	;# 
  3203  081D                     	;# 
  3204  081E                     	;# 
  3205  081F                     	;# 
  3206  088C                     	;# 
  3207  088D                     	;# 
  3208  088E                     	;# 
  3209  088F                     	;# 
  3210  0890                     	;# 
  3211  0891                     	;# 
  3212  0892                     	;# 
  3213  0893                     	;# 
  3214  0895                     	;# 
  3215  0896                     	;# 
  3216  0897                     	;# 
  3217  0898                     	;# 
  3218  0899                     	;# 
  3219  089A                     	;# 
  3220  089B                     	;# 
  3221  090C                     	;# 
  3222  090E                     	;# 
  3223  090F                     	;# 
  3224  091F                     	;# 
  3225  091F                     	;# 
  3226  098F                     	;# 
  3227  098F                     	;# 
  3228  0990                     	;# 
  3229  0991                     	;# 
  3230  0992                     	;# 
  3231  0993                     	;# 
  3232  0994                     	;# 
  3233  0995                     	;# 
  3234  0996                     	;# 
  3235  0997                     	;# 
  3236  0E0F                     	;# 
  3237  0E10                     	;# 
  3238  0E11                     	;# 
  3239  0E12                     	;# 
  3240  0E13                     	;# 
  3241  0E14                     	;# 
  3242  0E15                     	;# 
  3243  0E16                     	;# 
  3244  0E17                     	;# 
  3245  0E18                     	;# 
  3246  0E19                     	;# 
  3247  0E1A                     	;# 
  3248  0E1B                     	;# 
  3249  0E1C                     	;# 
  3250  0E1D                     	;# 
  3251  0E1E                     	;# 
  3252  0E1F                     	;# 
  3253  0E20                     	;# 
  3254  0E21                     	;# 
  3255  0E22                     	;# 
  3256  0E23                     	;# 
  3257  0E24                     	;# 
  3258  0E25                     	;# 
  3259  0E26                     	;# 
  3260  0E27                     	;# 
  3261  0E28                     	;# 
  3262  0E29                     	;# 
  3263  0E2A                     	;# 
  3264  0E2B                     	;# 
  3265  0E2C                     	;# 
  3266  0E2D                     	;# 
  3267  0E2E                     	;# 
  3268  0E2F                     	;# 
  3269  0E30                     	;# 
  3270  0E31                     	;# 
  3271  0E32                     	;# 
  3272  0E33                     	;# 
  3273  0E34                     	;# 
  3274  0E35                     	;# 
  3275  0E36                     	;# 
  3276  0E37                     	;# 
  3277  0E8F                     	;# 
  3278  0E90                     	;# 
  3279  0E91                     	;# 
  3280  0E92                     	;# 
  3281  0E93                     	;# 
  3282  0E94                     	;# 
  3283  0E95                     	;# 
  3284  0E96                     	;# 
  3285  0E97                     	;# 
  3286  0E9C                     	;# 
  3287  0E9D                     	;# 
  3288  0E9E                     	;# 
  3289  0EA1                     	;# 
  3290  0EA2                     	;# 
  3291  0EA3                     	;# 
  3292  0EA4                     	;# 
  3293  0EA5                     	;# 
  3294  0EA9                     	;# 
  3295  0EAA                     	;# 
  3296  0EAB                     	;# 
  3297  0EAC                     	;# 
  3298  0EB1                     	;# 
  3299  0EB2                     	;# 
  3300  0EB3                     	;# 
  3301  0EB8                     	;# 
  3302  0EB9                     	;# 
  3303  0EBA                     	;# 
  3304  0EBB                     	;# 
  3305  0EBC                     	;# 
  3306  0EBD                     	;# 
  3307  0EBE                     	;# 
  3308  0EC3                     	;# 
  3309  0EC5                     	;# 
  3310  0EC6                     	;# 
  3311  0EC7                     	;# 
  3312  0EC8                     	;# 
  3313  0EC9                     	;# 
  3314  0ECA                     	;# 
  3315  0ECB                     	;# 
  3316  0ECC                     	;# 
  3317  0F10                     	;# 
  3318  0F11                     	;# 
  3319  0F12                     	;# 
  3320  0F13                     	;# 
  3321  0F14                     	;# 
  3322  0F15                     	;# 
  3323  0F16                     	;# 
  3324  0F17                     	;# 
  3325  0F18                     	;# 
  3326  0F19                     	;# 
  3327  0F1A                     	;# 
  3328  0F1B                     	;# 
  3329  0F1C                     	;# 
  3330  0F1D                     	;# 
  3331  0F1E                     	;# 
  3332  0F1F                     	;# 
  3333  0F20                     	;# 
  3334  0F21                     	;# 
  3335  0F22                     	;# 
  3336  0F23                     	;# 
  3337  0F24                     	;# 
  3338  0F25                     	;# 
  3339  0F26                     	;# 
  3340  0F27                     	;# 
  3341  0F28                     	;# 
  3342  0F29                     	;# 
  3343  0F2A                     	;# 
  3344  0F2B                     	;# 
  3345  0F2C                     	;# 
  3346  0F2D                     	;# 
  3347  0F2E                     	;# 
  3348  0F2F                     	;# 
  3349  0F30                     	;# 
  3350  0F31                     	;# 
  3351  0F32                     	;# 
  3352  0F38                     	;# 
  3353  0F39                     	;# 
  3354  0F3A                     	;# 
  3355  0F3B                     	;# 
  3356  0F3C                     	;# 
  3357  0F3D                     	;# 
  3358  0F3E                     	;# 
  3359  0F3F                     	;# 
  3360  0F40                     	;# 
  3361  0F41                     	;# 
  3362  0F43                     	;# 
  3363  0F44                     	;# 
  3364  0F45                     	;# 
  3365  0F46                     	;# 
  3366  0F47                     	;# 
  3367  0F48                     	;# 
  3368  0F49                     	;# 
  3369  0F4A                     	;# 
  3370  0F4B                     	;# 
  3371  0F4C                     	;# 
  3372  0F4E                     	;# 
  3373  0F4F                     	;# 
  3374  0F50                     	;# 
  3375  0F51                     	;# 
  3376  0F52                     	;# 
  3377  0F53                     	;# 
  3378  0F54                     	;# 
  3379  0F55                     	;# 
  3380  0F56                     	;# 
  3381  0F57                     	;# 
  3382  0F59                     	;# 
  3383  0F5A                     	;# 
  3384  0F5B                     	;# 
  3385  0F5C                     	;# 
  3386  0F5D                     	;# 
  3387  0F61                     	;# 
  3388  0F62                     	;# 
  3389  0F64                     	;# 
  3390  0F65                     	;# 
  3391  0F66                     	;# 
  3392  0F67                     	;# 
  3393  0F68                     	;# 
  3394  0F69                     	;# 
  3395  0F6A                     	;# 
  3396  0F6B                     	;# 
  3397  0F6C                     	;# 
  3398  0F6D                     	;# 
  3399  0FE4                     	;# 
  3400  0FE5                     	;# 
  3401  0FE6                     	;# 
  3402  0FE7                     	;# 
  3403  0FE8                     	;# 
  3404  0FE9                     	;# 
  3405  0FEA                     	;# 
  3406  0FEB                     	;# 
  3407  0FED                     	;# 
  3408  0FEE                     	;# 
  3409  0FEF                     	;# 
  3410  0000                     	;# 
  3411  0001                     	;# 
  3412  0002                     	;# 
  3413  0003                     	;# 
  3414  0004                     	;# 
  3415  0005                     	;# 
  3416  0006                     	;# 
  3417  0007                     	;# 
  3418  0008                     	;# 
  3419  0009                     	;# 
  3420  000A                     	;# 
  3421  000B                     	;# 
  3422  000C                     	;# 
  3423  000D                     	;# 
  3424  000E                     	;# 
  3425  000F                     	;# 
  3426  0010                     	;# 
  3427  0011                     	;# 
  3428  0012                     	;# 
  3429  0013                     	;# 
  3430  0014                     	;# 
  3431  0015                     	;# 
  3432  0016                     	;# 
  3433  0017                     	;# 
  3434  0018                     	;# 
  3435  0019                     	;# 
  3436  001A                     	;# 
  3437  001C                     	;# 
  3438  001C                     	;# 
  3439  001D                     	;# 
  3440  001D                     	;# 
  3441  001E                     	;# 
  3442  001F                     	;# 
  3443  008C                     	;# 
  3444  008C                     	;# 
  3445  008D                     	;# 
  3446  008E                     	;# 
  3447  008E                     	;# 
  3448  008F                     	;# 
  3449  0090                     	;# 
  3450  0090                     	;# 
  3451  0091                     	;# 
  3452  0093                     	;# 
  3453  0094                     	;# 
  3454  0095                     	;# 
  3455  0096                     	;# 
  3456  0097                     	;# 
  3457  0098                     	;# 
  3458  0099                     	;# 
  3459  009A                     	;# 
  3460  009B                     	;# 
  3461  009C                     	;# 
  3462  009D                     	;# 
  3463  009E                     	;# 
  3464  010C                     	;# 
  3465  010D                     	;# 
  3466  010E                     	;# 
  3467  010E                     	;# 
  3468  010F                     	;# 
  3469  0110                     	;# 
  3470  0110                     	;# 
  3471  0111                     	;# 
  3472  0112                     	;# 
  3473  0112                     	;# 
  3474  0113                     	;# 
  3475  0114                     	;# 
  3476  0114                     	;# 
  3477  0115                     	;# 
  3478  0116                     	;# 
  3479  0116                     	;# 
  3480  0117                     	;# 
  3481  0119                     	;# 
  3482  0119                     	;# 
  3483  0119                     	;# 
  3484  011A                     	;# 
  3485  011A                     	;# 
  3486  011A                     	;# 
  3487  011B                     	;# 
  3488  011B                     	;# 
  3489  011B                     	;# 
  3490  011B                     	;# 
  3491  011B                     	;# 
  3492  011C                     	;# 
  3493  011C                     	;# 
  3494  011C                     	;# 
  3495  011D                     	;# 
  3496  011D                     	;# 
  3497  011D                     	;# 
  3498  011E                     	;# 
  3499  011E                     	;# 
  3500  011E                     	;# 
  3501  011F                     	;# 
  3502  011F                     	;# 
  3503  011F                     	;# 
  3504  011F                     	;# 
  3505  011F                     	;# 
  3506  018C                     	;# 
  3507  018D                     	;# 
  3508  018E                     	;# 
  3509  018F                     	;# 
  3510  0190                     	;# 
  3511  0191                     	;# 
  3512  0192                     	;# 
  3513  0196                     	;# 
  3514  0197                     	;# 
  3515  0198                     	;# 
  3516  0199                     	;# 
  3517  019A                     	;# 
  3518  019B                     	;# 
  3519  019C                     	;# 
  3520  020C                     	;# 
  3521  020C                     	;# 
  3522  020D                     	;# 
  3523  020E                     	;# 
  3524  020F                     	;# 
  3525  020F                     	;# 
  3526  0210                     	;# 
  3527  0210                     	;# 
  3528  0211                     	;# 
  3529  0211                     	;# 
  3530  0212                     	;# 
  3531  0212                     	;# 
  3532  0213                     	;# 
  3533  0214                     	;# 
  3534  0215                     	;# 
  3535  0215                     	;# 
  3536  0216                     	;# 
  3537  0216                     	;# 
  3538  0217                     	;# 
  3539  0217                     	;# 
  3540  0218                     	;# 
  3541  0218                     	;# 
  3542  0219                     	;# 
  3543  021A                     	;# 
  3544  021B                     	;# 
  3545  021B                     	;# 
  3546  021C                     	;# 
  3547  021C                     	;# 
  3548  021D                     	;# 
  3549  021D                     	;# 
  3550  021E                     	;# 
  3551  021F                     	;# 
  3552  028C                     	;# 
  3553  028C                     	;# 
  3554  028D                     	;# 
  3555  028D                     	;# 
  3556  028E                     	;# 
  3557  028F                     	;# 
  3558  0290                     	;# 
  3559  0290                     	;# 
  3560  0291                     	;# 
  3561  0292                     	;# 
  3562  0292                     	;# 
  3563  0293                     	;# 
  3564  0293                     	;# 
  3565  0294                     	;# 
  3566  0295                     	;# 
  3567  0296                     	;# 
  3568  0296                     	;# 
  3569  0297                     	;# 
  3570  0298                     	;# 
  3571  0298                     	;# 
  3572  0299                     	;# 
  3573  0299                     	;# 
  3574  029A                     	;# 
  3575  029B                     	;# 
  3576  029C                     	;# 
  3577  029C                     	;# 
  3578  029D                     	;# 
  3579  030C                     	;# 
  3580  030C                     	;# 
  3581  030D                     	;# 
  3582  030E                     	;# 
  3583  030F                     	;# 
  3584  0310                     	;# 
  3585  0310                     	;# 
  3586  0311                     	;# 
  3587  0312                     	;# 
  3588  0313                     	;# 
  3589  0314                     	;# 
  3590  0314                     	;# 
  3591  0315                     	;# 
  3592  0316                     	;# 
  3593  0317                     	;# 
  3594  0318                     	;# 
  3595  0318                     	;# 
  3596  0319                     	;# 
  3597  031A                     	;# 
  3598  031B                     	;# 
  3599  031C                     	;# 
  3600  031C                     	;# 
  3601  031D                     	;# 
  3602  031E                     	;# 
  3603  031F                     	;# 
  3604  038C                     	;# 
  3605  038C                     	;# 
  3606  038D                     	;# 
  3607  038E                     	;# 
  3608  0390                     	;# 
  3609  0390                     	;# 
  3610  0391                     	;# 
  3611  0392                     	;# 
  3612  040C                     	;# 
  3613  040D                     	;# 
  3614  040E                     	;# 
  3615  040F                     	;# 
  3616  0410                     	;# 
  3617  0411                     	;# 
  3618  0416                     	;# 
  3619  0416                     	;# 
  3620  0417                     	;# 
  3621  0418                     	;# 
  3622  0418                     	;# 
  3623  0419                     	;# 
  3624  041A                     	;# 
  3625  041A                     	;# 
  3626  041B                     	;# 
  3627  041C                     	;# 
  3628  041C                     	;# 
  3629  041D                     	;# 
  3630  041E                     	;# 
  3631  041F                     	;# 
  3632  048C                     	;# 
  3633  048C                     	;# 
  3634  048D                     	;# 
  3635  048E                     	;# 
  3636  048F                     	;# 
  3637  048F                     	;# 
  3638  0490                     	;# 
  3639  0491                     	;# 
  3640  0492                     	;# 
  3641  0492                     	;# 
  3642  0493                     	;# 
  3643  0494                     	;# 
  3644  0495                     	;# 
  3645  0495                     	;# 
  3646  0496                     	;# 
  3647  0497                     	;# 
  3648  0498                     	;# 
  3649  0499                     	;# 
  3650  049A                     	;# 
  3651  049B                     	;# 
  3652  049C                     	;# 
  3653  049D                     	;# 
  3654  050C                     	;# 
  3655  050C                     	;# 
  3656  050D                     	;# 
  3657  050E                     	;# 
  3658  050F                     	;# 
  3659  050F                     	;# 
  3660  0510                     	;# 
  3661  0511                     	;# 
  3662  0512                     	;# 
  3663  0512                     	;# 
  3664  0513                     	;# 
  3665  0514                     	;# 
  3666  0515                     	;# 
  3667  0515                     	;# 
  3668  0516                     	;# 
  3669  0517                     	;# 
  3670  0518                     	;# 
  3671  0519                     	;# 
  3672  051A                     	;# 
  3673  051B                     	;# 
  3674  051C                     	;# 
  3675  051D                     	;# 
  3676  058C                     	;# 
  3677  058C                     	;# 
  3678  058D                     	;# 
  3679  058E                     	;# 
  3680  058F                     	;# 
  3681  058F                     	;# 
  3682  0590                     	;# 
  3683  0591                     	;# 
  3684  0592                     	;# 
  3685  0593                     	;# 
  3686  060C                     	;# 
  3687  060D                     	;# 
  3688  060E                     	;# 
  3689  060F                     	;# 
  3690  0610                     	;# 
  3691  0611                     	;# 
  3692  0612                     	;# 
  3693  0613                     	;# 
  3694  0614                     	;# 
  3695  0616                     	;# 
  3696  0617                     	;# 
  3697  0618                     	;# 
  3698  0619                     	;# 
  3699  061A                     	;# 
  3700  061B                     	;# 
  3701  061C                     	;# 
  3702  061D                     	;# 
  3703  061E                     	;# 
  3704  068C                     	;# 
  3705  068D                     	;# 
  3706  068E                     	;# 
  3707  068F                     	;# 
  3708  0690                     	;# 
  3709  0691                     	;# 
  3710  0692                     	;# 
  3711  0693                     	;# 
  3712  0694                     	;# 
  3713  070C                     	;# 
  3714  070D                     	;# 
  3715  070E                     	;# 
  3716  070F                     	;# 
  3717  0710                     	;# 
  3718  0711                     	;# 
  3719  0712                     	;# 
  3720  0713                     	;# 
  3721  0714                     	;# 
  3722  0716                     	;# 
  3723  0717                     	;# 
  3724  0718                     	;# 
  3725  0719                     	;# 
  3726  071A                     	;# 
  3727  071B                     	;# 
  3728  071C                     	;# 
  3729  071D                     	;# 
  3730  071E                     	;# 
  3731  0796                     	;# 
  3732  0797                     	;# 
  3733  0798                     	;# 
  3734  0799                     	;# 
  3735  079A                     	;# 
  3736  079B                     	;# 
  3737  080C                     	;# 
  3738  080D                     	;# 
  3739  080E                     	;# 
  3740  080F                     	;# 
  3741  0810                     	;# 
  3742  0811                     	;# 
  3743  0812                     	;# 
  3744  0813                     	;# 
  3745  0814                     	;# 
  3746  081A                     	;# 
  3747  081B                     	;# 
  3748  081C                     	;# 
  3749  081D                     	;# 
  3750  081E                     	;# 
  3751  081F                     	;# 
  3752  088C                     	;# 
  3753  088D                     	;# 
  3754  088E                     	;# 
  3755  088F                     	;# 
  3756  0890                     	;# 
  3757  0891                     	;# 
  3758  0892                     	;# 
  3759  0893                     	;# 
  3760  0895                     	;# 
  3761  0896                     	;# 
  3762  0897                     	;# 
  3763  0898                     	;# 
  3764  0899                     	;# 
  3765  089A                     	;# 
  3766  089B                     	;# 
  3767  090C                     	;# 
  3768  090E                     	;# 
  3769  090F                     	;# 
  3770  091F                     	;# 
  3771  091F                     	;# 
  3772  098F                     	;# 
  3773  098F                     	;# 
  3774  0990                     	;# 
  3775  0991                     	;# 
  3776  0992                     	;# 
  3777  0993                     	;# 
  3778  0994                     	;# 
  3779  0995                     	;# 
  3780  0996                     	;# 
  3781  0997                     	;# 
  3782  0E0F                     	;# 
  3783  0E10                     	;# 
  3784  0E11                     	;# 
  3785  0E12                     	;# 
  3786  0E13                     	;# 
  3787  0E14                     	;# 
  3788  0E15                     	;# 
  3789  0E16                     	;# 
  3790  0E17                     	;# 
  3791  0E18                     	;# 
  3792  0E19                     	;# 
  3793  0E1A                     	;# 
  3794  0E1B                     	;# 
  3795  0E1C                     	;# 
  3796  0E1D                     	;# 
  3797  0E1E                     	;# 
  3798  0E1F                     	;# 
  3799  0E20                     	;# 
  3800  0E21                     	;# 
  3801  0E22                     	;# 
  3802  0E23                     	;# 
  3803  0E24                     	;# 
  3804  0E25                     	;# 
  3805  0E26                     	;# 
  3806  0E27                     	;# 
  3807  0E28                     	;# 
  3808  0E29                     	;# 
  3809  0E2A                     	;# 
  3810  0E2B                     	;# 
  3811  0E2C                     	;# 
  3812  0E2D                     	;# 
  3813  0E2E                     	;# 
  3814  0E2F                     	;# 
  3815  0E30                     	;# 
  3816  0E31                     	;# 
  3817  0E32                     	;# 
  3818  0E33                     	;# 
  3819  0E34                     	;# 
  3820  0E35                     	;# 
  3821  0E36                     	;# 
  3822  0E37                     	;# 
  3823  0E8F                     	;# 
  3824  0E90                     	;# 
  3825  0E91                     	;# 
  3826  0E92                     	;# 
  3827  0E93                     	;# 
  3828  0E94                     	;# 
  3829  0E95                     	;# 
  3830  0E96                     	;# 
  3831  0E97                     	;# 
  3832  0E9C                     	;# 
  3833  0E9D                     	;# 
  3834  0E9E                     	;# 
  3835  0EA1                     	;# 
  3836  0EA2                     	;# 
  3837  0EA3                     	;# 
  3838  0EA4                     	;# 
  3839  0EA5                     	;# 
  3840  0EA9                     	;# 
  3841  0EAA                     	;# 
  3842  0EAB                     	;# 
  3843  0EAC                     	;# 
  3844  0EB1                     	;# 
  3845  0EB2                     	;# 
  3846  0EB3                     	;# 
  3847  0EB8                     	;# 
  3848  0EB9                     	;# 
  3849  0EBA                     	;# 
  3850  0EBB                     	;# 
  3851  0EBC                     	;# 
  3852  0EBD                     	;# 
  3853  0EBE                     	;# 
  3854  0EC3                     	;# 
  3855  0EC5                     	;# 
  3856  0EC6                     	;# 
  3857  0EC7                     	;# 
  3858  0EC8                     	;# 
  3859  0EC9                     	;# 
  3860  0ECA                     	;# 
  3861  0ECB                     	;# 
  3862  0ECC                     	;# 
  3863  0F10                     	;# 
  3864  0F11                     	;# 
  3865  0F12                     	;# 
  3866  0F13                     	;# 
  3867  0F14                     	;# 
  3868  0F15                     	;# 
  3869  0F16                     	;# 
  3870  0F17                     	;# 
  3871  0F18                     	;# 
  3872  0F19                     	;# 
  3873  0F1A                     	;# 
  3874  0F1B                     	;# 
  3875  0F1C                     	;# 
  3876  0F1D                     	;# 
  3877  0F1E                     	;# 
  3878  0F1F                     	;# 
  3879  0F20                     	;# 
  3880  0F21                     	;# 
  3881  0F22                     	;# 
  3882  0F23                     	;# 
  3883  0F24                     	;# 
  3884  0F25                     	;# 
  3885  0F26                     	;# 
  3886  0F27                     	;# 
  3887  0F28                     	;# 
  3888  0F29                     	;# 
  3889  0F2A                     	;# 
  3890  0F2B                     	;# 
  3891  0F2C                     	;# 
  3892  0F2D                     	;# 
  3893  0F2E                     	;# 
  3894  0F2F                     	;# 
  3895  0F30                     	;# 
  3896  0F31                     	;# 
  3897  0F32                     	;# 
  3898  0F38                     	;# 
  3899  0F39                     	;# 
  3900  0F3A                     	;# 
  3901  0F3B                     	;# 
  3902  0F3C                     	;# 
  3903  0F3D                     	;# 
  3904  0F3E                     	;# 
  3905  0F3F                     	;# 
  3906  0F40                     	;# 
  3907  0F41                     	;# 
  3908  0F43                     	;# 
  3909  0F44                     	;# 
  3910  0F45                     	;# 
  3911  0F46                     	;# 
  3912  0F47                     	;# 
  3913  0F48                     	;# 
  3914  0F49                     	;# 
  3915  0F4A                     	;# 
  3916  0F4B                     	;# 
  3917  0F4C                     	;# 
  3918  0F4E                     	;# 
  3919  0F4F                     	;# 
  3920  0F50                     	;# 
  3921  0F51                     	;# 
  3922  0F52                     	;# 
  3923  0F53                     	;# 
  3924  0F54                     	;# 
  3925  0F55                     	;# 
  3926  0F56                     	;# 
  3927  0F57                     	;# 
  3928  0F59                     	;# 
  3929  0F5A                     	;# 
  3930  0F5B                     	;# 
  3931  0F5C                     	;# 
  3932  0F5D                     	;# 
  3933  0F61                     	;# 
  3934  0F62                     	;# 
  3935  0F64                     	;# 
  3936  0F65                     	;# 
  3937  0F66                     	;# 
  3938  0F67                     	;# 
  3939  0F68                     	;# 
  3940  0F69                     	;# 
  3941  0F6A                     	;# 
  3942  0F6B                     	;# 
  3943  0F6C                     	;# 
  3944  0F6D                     	;# 
  3945  0FE4                     	;# 
  3946  0FE5                     	;# 
  3947  0FE6                     	;# 
  3948  0FE7                     	;# 
  3949  0FE8                     	;# 
  3950  0FE9                     	;# 
  3951  0FEA                     	;# 
  3952  0FEB                     	;# 
  3953  0FED                     	;# 
  3954  0FEE                     	;# 
  3955  0FEF                     	;# 
  3956  0000                     	;# 
  3957  0001                     	;# 
  3958  0002                     	;# 
  3959  0003                     	;# 
  3960  0004                     	;# 
  3961  0005                     	;# 
  3962  0006                     	;# 
  3963  0007                     	;# 
  3964  0008                     	;# 
  3965  0009                     	;# 
  3966  000A                     	;# 
  3967  000B                     	;# 
  3968  000C                     	;# 
  3969  000D                     	;# 
  3970  000E                     	;# 
  3971  000F                     	;# 
  3972  0010                     	;# 
  3973  0011                     	;# 
  3974  0012                     	;# 
  3975  0013                     	;# 
  3976  0014                     	;# 
  3977  0015                     	;# 
  3978  0016                     	;# 
  3979  0017                     	;# 
  3980  0018                     	;# 
  3981  0019                     	;# 
  3982  001A                     	;# 
  3983  001C                     	;# 
  3984  001C                     	;# 
  3985  001D                     	;# 
  3986  001D                     	;# 
  3987  001E                     	;# 
  3988  001F                     	;# 
  3989  008C                     	;# 
  3990  008C                     	;# 
  3991  008D                     	;# 
  3992  008E                     	;# 
  3993  008E                     	;# 
  3994  008F                     	;# 
  3995  0090                     	;# 
  3996  0090                     	;# 
  3997  0091                     	;# 
  3998  0093                     	;# 
  3999  0094                     	;# 
  4000  0095                     	;# 
  4001  0096                     	;# 
  4002  0097                     	;# 
  4003  0098                     	;# 
  4004  0099                     	;# 
  4005  009A                     	;# 
  4006  009B                     	;# 
  4007  009C                     	;# 
  4008  009D                     	;# 
  4009  009E                     	;# 
  4010  010C                     	;# 
  4011  010D                     	;# 
  4012  010E                     	;# 
  4013  010E                     	;# 
  4014  010F                     	;# 
  4015  0110                     	;# 
  4016  0110                     	;# 
  4017  0111                     	;# 
  4018  0112                     	;# 
  4019  0112                     	;# 
  4020  0113                     	;# 
  4021  0114                     	;# 
  4022  0114                     	;# 
  4023  0115                     	;# 
  4024  0116                     	;# 
  4025  0116                     	;# 
  4026  0117                     	;# 
  4027  0119                     	;# 
  4028  0119                     	;# 
  4029  0119                     	;# 
  4030  011A                     	;# 
  4031  011A                     	;# 
  4032  011A                     	;# 
  4033  011B                     	;# 
  4034  011B                     	;# 
  4035  011B                     	;# 
  4036  011B                     	;# 
  4037  011B                     	;# 
  4038  011C                     	;# 
  4039  011C                     	;# 
  4040  011C                     	;# 
  4041  011D                     	;# 
  4042  011D                     	;# 
  4043  011D                     	;# 
  4044  011E                     	;# 
  4045  011E                     	;# 
  4046  011E                     	;# 
  4047  011F                     	;# 
  4048  011F                     	;# 
  4049  011F                     	;# 
  4050  011F                     	;# 
  4051  011F                     	;# 
  4052  018C                     	;# 
  4053  018D                     	;# 
  4054  018E                     	;# 
  4055  018F                     	;# 
  4056  0190                     	;# 
  4057  0191                     	;# 
  4058  0192                     	;# 
  4059  0196                     	;# 
  4060  0197                     	;# 
  4061  0198                     	;# 
  4062  0199                     	;# 
  4063  019A                     	;# 
  4064  019B                     	;# 
  4065  019C                     	;# 
  4066  020C                     	;# 
  4067  020C                     	;# 
  4068  020D                     	;# 
  4069  020E                     	;# 
  4070  020F                     	;# 
  4071  020F                     	;# 
  4072  0210                     	;# 
  4073  0210                     	;# 
  4074  0211                     	;# 
  4075  0211                     	;# 
  4076  0212                     	;# 
  4077  0212                     	;# 
  4078  0213                     	;# 
  4079  0214                     	;# 
  4080  0215                     	;# 
  4081  0215                     	;# 
  4082  0216                     	;# 
  4083  0216                     	;# 
  4084  0217                     	;# 
  4085  0217                     	;# 
  4086  0218                     	;# 
  4087  0218                     	;# 
  4088  0219                     	;# 
  4089  021A                     	;# 
  4090  021B                     	;# 
  4091  021B                     	;# 
  4092  021C                     	;# 
  4093  021C                     	;# 
  4094  021D                     	;# 
  4095  021D                     	;# 
  4096  021E                     	;# 
  4097  021F                     	;# 
  4098  028C                     	;# 
  4099  028C                     	;# 
  4100  028D                     	;# 
  4101  028D                     	;# 
  4102  028E                     	;# 
  4103  028F                     	;# 
  4104  0290                     	;# 
  4105  0290                     	;# 
  4106  0291                     	;# 
  4107  0292                     	;# 
  4108  0292                     	;# 
  4109  0293                     	;# 
  4110  0293                     	;# 
  4111  0294                     	;# 
  4112  0295                     	;# 
  4113  0296                     	;# 
  4114  0296                     	;# 
  4115  0297                     	;# 
  4116  0298                     	;# 
  4117  0298                     	;# 
  4118  0299                     	;# 
  4119  0299                     	;# 
  4120  029A                     	;# 
  4121  029B                     	;# 
  4122  029C                     	;# 
  4123  029C                     	;# 
  4124  029D                     	;# 
  4125  030C                     	;# 
  4126  030C                     	;# 
  4127  030D                     	;# 
  4128  030E                     	;# 
  4129  030F                     	;# 
  4130  0310                     	;# 
  4131  0310                     	;# 
  4132  0311                     	;# 
  4133  0312                     	;# 
  4134  0313                     	;# 
  4135  0314                     	;# 
  4136  0314                     	;# 
  4137  0315                     	;# 
  4138  0316                     	;# 
  4139  0317                     	;# 
  4140  0318                     	;# 
  4141  0318                     	;# 
  4142  0319                     	;# 
  4143  031A                     	;# 
  4144  031B                     	;# 
  4145  031C                     	;# 
  4146  031C                     	;# 
  4147  031D                     	;# 
  4148  031E                     	;# 
  4149  031F                     	;# 
  4150  038C                     	;# 
  4151  038C                     	;# 
  4152  038D                     	;# 
  4153  038E                     	;# 
  4154  0390                     	;# 
  4155  0390                     	;# 
  4156  0391                     	;# 
  4157  0392                     	;# 
  4158  040C                     	;# 
  4159  040D                     	;# 
  4160  040E                     	;# 
  4161  040F                     	;# 
  4162  0410                     	;# 
  4163  0411                     	;# 
  4164  0416                     	;# 
  4165  0416                     	;# 
  4166  0417                     	;# 
  4167  0418                     	;# 
  4168  0418                     	;# 
  4169  0419                     	;# 
  4170  041A                     	;# 
  4171  041A                     	;# 
  4172  041B                     	;# 
  4173  041C                     	;# 
  4174  041C                     	;# 
  4175  041D                     	;# 
  4176  041E                     	;# 
  4177  041F                     	;# 
  4178  048C                     	;# 
  4179  048C                     	;# 
  4180  048D                     	;# 
  4181  048E                     	;# 
  4182  048F                     	;# 
  4183  048F                     	;# 
  4184  0490                     	;# 
  4185  0491                     	;# 
  4186  0492                     	;# 
  4187  0492                     	;# 
  4188  0493                     	;# 
  4189  0494                     	;# 
  4190  0495                     	;# 
  4191  0495                     	;# 
  4192  0496                     	;# 
  4193  0497                     	;# 
  4194  0498                     	;# 
  4195  0499                     	;# 
  4196  049A                     	;# 
  4197  049B                     	;# 
  4198  049C                     	;# 
  4199  049D                     	;# 
  4200  050C                     	;# 
  4201  050C                     	;# 
  4202  050D                     	;# 
  4203  050E                     	;# 
  4204  050F                     	;# 
  4205  050F                     	;# 
  4206  0510                     	;# 
  4207  0511                     	;# 
  4208  0512                     	;# 
  4209  0512                     	;# 
  4210  0513                     	;# 
  4211  0514                     	;# 
  4212  0515                     	;# 
  4213  0515                     	;# 
  4214  0516                     	;# 
  4215  0517                     	;# 
  4216  0518                     	;# 
  4217  0519                     	;# 
  4218  051A                     	;# 
  4219  051B                     	;# 
  4220  051C                     	;# 
  4221  051D                     	;# 
  4222  058C                     	;# 
  4223  058C                     	;# 
  4224  058D                     	;# 
  4225  058E                     	;# 
  4226  058F                     	;# 
  4227  058F                     	;# 
  4228  0590                     	;# 
  4229  0591                     	;# 
  4230  0592                     	;# 
  4231  0593                     	;# 
  4232  060C                     	;# 
  4233  060D                     	;# 
  4234  060E                     	;# 
  4235  060F                     	;# 
  4236  0610                     	;# 
  4237  0611                     	;# 
  4238  0612                     	;# 
  4239  0613                     	;# 
  4240  0614                     	;# 
  4241  0616                     	;# 
  4242  0617                     	;# 
  4243  0618                     	;# 
  4244  0619                     	;# 
  4245  061A                     	;# 
  4246  061B                     	;# 
  4247  061C                     	;# 
  4248  061D                     	;# 
  4249  061E                     	;# 
  4250  068C                     	;# 
  4251  068D                     	;# 
  4252  068E                     	;# 
  4253  068F                     	;# 
  4254  0690                     	;# 
  4255  0691                     	;# 
  4256  0692                     	;# 
  4257  0693                     	;# 
  4258  0694                     	;# 
  4259  070C                     	;# 
  4260  070D                     	;# 
  4261  070E                     	;# 
  4262  070F                     	;# 
  4263  0710                     	;# 
  4264  0711                     	;# 
  4265  0712                     	;# 
  4266  0713                     	;# 
  4267  0714                     	;# 
  4268  0716                     	;# 
  4269  0717                     	;# 
  4270  0718                     	;# 
  4271  0719                     	;# 
  4272  071A                     	;# 
  4273  071B                     	;# 
  4274  071C                     	;# 
  4275  071D                     	;# 
  4276  071E                     	;# 
  4277  0796                     	;# 
  4278  0797                     	;# 
  4279  0798                     	;# 
  4280  0799                     	;# 
  4281  079A                     	;# 
  4282  079B                     	;# 
  4283  080C                     	;# 
  4284  080D                     	;# 
  4285  080E                     	;# 
  4286  080F                     	;# 
  4287  0810                     	;# 
  4288  0811                     	;# 
  4289  0812                     	;# 
  4290  0813                     	;# 
  4291  0814                     	;# 
  4292  081A                     	;# 
  4293  081B                     	;# 
  4294  081C                     	;# 
  4295  081D                     	;# 
  4296  081E                     	;# 
  4297  081F                     	;# 
  4298  088C                     	;# 
  4299  088D                     	;# 
  4300  088E                     	;# 
  4301  088F                     	;# 
  4302  0890                     	;# 
  4303  0891                     	;# 
  4304  0892                     	;# 
  4305  0893                     	;# 
  4306  0895                     	;# 
  4307  0896                     	;# 
  4308  0897                     	;# 
  4309  0898                     	;# 
  4310  0899                     	;# 
  4311  089A                     	;# 
  4312  089B                     	;# 
  4313  090C                     	;# 
  4314  090E                     	;# 
  4315  090F                     	;# 
  4316  091F                     	;# 
  4317  091F                     	;# 
  4318  098F                     	;# 
  4319  098F                     	;# 
  4320  0990                     	;# 
  4321  0991                     	;# 
  4322  0992                     	;# 
  4323  0993                     	;# 
  4324  0994                     	;# 
  4325  0995                     	;# 
  4326  0996                     	;# 
  4327  0997                     	;# 
  4328  0E0F                     	;# 
  4329  0E10                     	;# 
  4330  0E11                     	;# 
  4331  0E12                     	;# 
  4332  0E13                     	;# 
  4333  0E14                     	;# 
  4334  0E15                     	;# 
  4335  0E16                     	;# 
  4336  0E17                     	;# 
  4337  0E18                     	;# 
  4338  0E19                     	;# 
  4339  0E1A                     	;# 
  4340  0E1B                     	;# 
  4341  0E1C                     	;# 
  4342  0E1D                     	;# 
  4343  0E1E                     	;# 
  4344  0E1F                     	;# 
  4345  0E20                     	;# 
  4346  0E21                     	;# 
  4347  0E22                     	;# 
  4348  0E23                     	;# 
  4349  0E24                     	;# 
  4350  0E25                     	;# 
  4351  0E26                     	;# 
  4352  0E27                     	;# 
  4353  0E28                     	;# 
  4354  0E29                     	;# 
  4355  0E2A                     	;# 
  4356  0E2B                     	;# 
  4357  0E2C                     	;# 
  4358  0E2D                     	;# 
  4359  0E2E                     	;# 
  4360  0E2F                     	;# 
  4361  0E30                     	;# 
  4362  0E31                     	;# 
  4363  0E32                     	;# 
  4364  0E33                     	;# 
  4365  0E34                     	;# 
  4366  0E35                     	;# 
  4367  0E36                     	;# 
  4368  0E37                     	;# 
  4369  0E8F                     	;# 
  4370  0E90                     	;# 
  4371  0E91                     	;# 
  4372  0E92                     	;# 
  4373  0E93                     	;# 
  4374  0E94                     	;# 
  4375  0E95                     	;# 
  4376  0E96                     	;# 
  4377  0E97                     	;# 
  4378  0E9C                     	;# 
  4379  0E9D                     	;# 
  4380  0E9E                     	;# 
  4381  0EA1                     	;# 
  4382  0EA2                     	;# 
  4383  0EA3                     	;# 
  4384  0EA4                     	;# 
  4385  0EA5                     	;# 
  4386  0EA9                     	;# 
  4387  0EAA                     	;# 
  4388  0EAB                     	;# 
  4389  0EAC                     	;# 
  4390  0EB1                     	;# 
  4391  0EB2                     	;# 
  4392  0EB3                     	;# 
  4393  0EB8                     	;# 
  4394  0EB9                     	;# 
  4395  0EBA                     	;# 
  4396  0EBB                     	;# 
  4397  0EBC                     	;# 
  4398  0EBD                     	;# 
  4399  0EBE                     	;# 
  4400  0EC3                     	;# 
  4401  0EC5                     	;# 
  4402  0EC6                     	;# 
  4403  0EC7                     	;# 
  4404  0EC8                     	;# 
  4405  0EC9                     	;# 
  4406  0ECA                     	;# 
  4407  0ECB                     	;# 
  4408  0ECC                     	;# 
  4409  0F10                     	;# 
  4410  0F11                     	;# 
  4411  0F12                     	;# 
  4412  0F13                     	;# 
  4413  0F14                     	;# 
  4414  0F15                     	;# 
  4415  0F16                     	;# 
  4416  0F17                     	;# 
  4417  0F18                     	;# 
  4418  0F19                     	;# 
  4419  0F1A                     	;# 
  4420  0F1B                     	;# 
  4421  0F1C                     	;# 
  4422  0F1D                     	;# 
  4423  0F1E                     	;# 
  4424  0F1F                     	;# 
  4425  0F20                     	;# 
  4426  0F21                     	;# 
  4427  0F22                     	;# 
  4428  0F23                     	;# 
  4429  0F24                     	;# 
  4430  0F25                     	;# 
  4431  0F26                     	;# 
  4432  0F27                     	;# 
  4433  0F28                     	;# 
  4434  0F29                     	;# 
  4435  0F2A                     	;# 
  4436  0F2B                     	;# 
  4437  0F2C                     	;# 
  4438  0F2D                     	;# 
  4439  0F2E                     	;# 
  4440  0F2F                     	;# 
  4441  0F30                     	;# 
  4442  0F31                     	;# 
  4443  0F32                     	;# 
  4444  0F38                     	;# 
  4445  0F39                     	;# 
  4446  0F3A                     	;# 
  4447  0F3B                     	;# 
  4448  0F3C                     	;# 
  4449  0F3D                     	;# 
  4450  0F3E                     	;# 
  4451  0F3F                     	;# 
  4452  0F40                     	;# 
  4453  0F41                     	;# 
  4454  0F43                     	;# 
  4455  0F44                     	;# 
  4456  0F45                     	;# 
  4457  0F46                     	;# 
  4458  0F47                     	;# 
  4459  0F48                     	;# 
  4460  0F49                     	;# 
  4461  0F4A                     	;# 
  4462  0F4B                     	;# 
  4463  0F4C                     	;# 
  4464  0F4E                     	;# 
  4465  0F4F                     	;# 
  4466  0F50                     	;# 
  4467  0F51                     	;# 
  4468  0F52                     	;# 
  4469  0F53                     	;# 
  4470  0F54                     	;# 
  4471  0F55                     	;# 
  4472  0F56                     	;# 
  4473  0F57                     	;# 
  4474  0F59                     	;# 
  4475  0F5A                     	;# 
  4476  0F5B                     	;# 
  4477  0F5C                     	;# 
  4478  0F5D                     	;# 
  4479  0F61                     	;# 
  4480  0F62                     	;# 
  4481  0F64                     	;# 
  4482  0F65                     	;# 
  4483  0F66                     	;# 
  4484  0F67                     	;# 
  4485  0F68                     	;# 
  4486  0F69                     	;# 
  4487  0F6A                     	;# 
  4488  0F6B                     	;# 
  4489  0F6C                     	;# 
  4490  0F6D                     	;# 
  4491  0FE4                     	;# 
  4492  0FE5                     	;# 
  4493  0FE6                     	;# 
  4494  0FE7                     	;# 
  4495  0FE8                     	;# 
  4496  0FE9                     	;# 
  4497  0FEA                     	;# 
  4498  0FEB                     	;# 
  4499  0FED                     	;# 
  4500  0FEE                     	;# 
  4501  0FEF                     	;# 
  4502  0000                     	;# 
  4503  0001                     	;# 
  4504  0002                     	;# 
  4505  0003                     	;# 
  4506  0004                     	;# 
  4507  0005                     	;# 
  4508  0006                     	;# 
  4509  0007                     	;# 
  4510  0008                     	;# 
  4511  0009                     	;# 
  4512  000A                     	;# 
  4513  000B                     	;# 
  4514  000C                     	;# 
  4515  000D                     	;# 
  4516  000E                     	;# 
  4517  000F                     	;# 
  4518  0010                     	;# 
  4519  0011                     	;# 
  4520  0012                     	;# 
  4521  0013                     	;# 
  4522  0014                     	;# 
  4523  0015                     	;# 
  4524  0016                     	;# 
  4525  0017                     	;# 
  4526  0018                     	;# 
  4527  0019                     	;# 
  4528  001A                     	;# 
  4529  001C                     	;# 
  4530  001C                     	;# 
  4531  001D                     	;# 
  4532  001D                     	;# 
  4533  001E                     	;# 
  4534  001F                     	;# 
  4535  008C                     	;# 
  4536  008C                     	;# 
  4537  008D                     	;# 
  4538  008E                     	;# 
  4539  008E                     	;# 
  4540  008F                     	;# 
  4541  0090                     	;# 
  4542  0090                     	;# 
  4543  0091                     	;# 
  4544  0093                     	;# 
  4545  0094                     	;# 
  4546  0095                     	;# 
  4547  0096                     	;# 
  4548  0097                     	;# 
  4549  0098                     	;# 
  4550  0099                     	;# 
  4551  009A                     	;# 
  4552  009B                     	;# 
  4553  009C                     	;# 
  4554  009D                     	;# 
  4555  009E                     	;# 
  4556  010C                     	;# 
  4557  010D                     	;# 
  4558  010E                     	;# 
  4559  010E                     	;# 
  4560  010F                     	;# 
  4561  0110                     	;# 
  4562  0110                     	;# 
  4563  0111                     	;# 
  4564  0112                     	;# 
  4565  0112                     	;# 
  4566  0113                     	;# 
  4567  0114                     	;# 
  4568  0114                     	;# 
  4569  0115                     	;# 
  4570  0116                     	;# 
  4571  0116                     	;# 
  4572  0117                     	;# 
  4573  0119                     	;# 
  4574  0119                     	;# 
  4575  0119                     	;# 
  4576  011A                     	;# 
  4577  011A                     	;# 
  4578  011A                     	;# 
  4579  011B                     	;# 
  4580  011B                     	;# 
  4581  011B                     	;# 
  4582  011B                     	;# 
  4583  011B                     	;# 
  4584  011C                     	;# 
  4585  011C                     	;# 
  4586  011C                     	;# 
  4587  011D                     	;# 
  4588  011D                     	;# 
  4589  011D                     	;# 
  4590  011E                     	;# 
  4591  011E                     	;# 
  4592  011E                     	;# 
  4593  011F                     	;# 
  4594  011F                     	;# 
  4595  011F                     	;# 
  4596  011F                     	;# 
  4597  011F                     	;# 
  4598  018C                     	;# 
  4599  018D                     	;# 
  4600  018E                     	;# 
  4601  018F                     	;# 
  4602  0190                     	;# 
  4603  0191                     	;# 
  4604  0192                     	;# 
  4605  0196                     	;# 
  4606  0197                     	;# 
  4607  0198                     	;# 
  4608  0199                     	;# 
  4609  019A                     	;# 
  4610  019B                     	;# 
  4611  019C                     	;# 
  4612  020C                     	;# 
  4613  020C                     	;# 
  4614  020D                     	;# 
  4615  020E                     	;# 
  4616  020F                     	;# 
  4617  020F                     	;# 
  4618  0210                     	;# 
  4619  0210                     	;# 
  4620  0211                     	;# 
  4621  0211                     	;# 
  4622  0212                     	;# 
  4623  0212                     	;# 
  4624  0213                     	;# 
  4625  0214                     	;# 
  4626  0215                     	;# 
  4627  0215                     	;# 
  4628  0216                     	;# 
  4629  0216                     	;# 
  4630  0217                     	;# 
  4631  0217                     	;# 
  4632  0218                     	;# 
  4633  0218                     	;# 
  4634  0219                     	;# 
  4635  021A                     	;# 
  4636  021B                     	;# 
  4637  021B                     	;# 
  4638  021C                     	;# 
  4639  021C                     	;# 
  4640  021D                     	;# 
  4641  021D                     	;# 
  4642  021E                     	;# 
  4643  021F                     	;# 
  4644  028C                     	;# 
  4645  028C                     	;# 
  4646  028D                     	;# 
  4647  028D                     	;# 
  4648  028E                     	;# 
  4649  028F                     	;# 
  4650  0290                     	;# 
  4651  0290                     	;# 
  4652  0291                     	;# 
  4653  0292                     	;# 
  4654  0292                     	;# 
  4655  0293                     	;# 
  4656  0293                     	;# 
  4657  0294                     	;# 
  4658  0295                     	;# 
  4659  0296                     	;# 
  4660  0296                     	;# 
  4661  0297                     	;# 
  4662  0298                     	;# 
  4663  0298                     	;# 
  4664  0299                     	;# 
  4665  0299                     	;# 
  4666  029A                     	;# 
  4667  029B                     	;# 
  4668  029C                     	;# 
  4669  029C                     	;# 
  4670  029D                     	;# 
  4671  030C                     	;# 
  4672  030C                     	;# 
  4673  030D                     	;# 
  4674  030E                     	;# 
  4675  030F                     	;# 
  4676  0310                     	;# 
  4677  0310                     	;# 
  4678  0311                     	;# 
  4679  0312                     	;# 
  4680  0313                     	;# 
  4681  0314                     	;# 
  4682  0314                     	;# 
  4683  0315                     	;# 
  4684  0316                     	;# 
  4685  0317                     	;# 
  4686  0318                     	;# 
  4687  0318                     	;# 
  4688  0319                     	;# 
  4689  031A                     	;# 
  4690  031B                     	;# 
  4691  031C                     	;# 
  4692  031C                     	;# 
  4693  031D                     	;# 
  4694  031E                     	;# 
  4695  031F                     	;# 
  4696  038C                     	;# 
  4697  038C                     	;# 
  4698  038D                     	;# 
  4699  038E                     	;# 
  4700  0390                     	;# 
  4701  0390                     	;# 
  4702  0391                     	;# 
  4703  0392                     	;# 
  4704  040C                     	;# 
  4705  040D                     	;# 
  4706  040E                     	;# 
  4707  040F                     	;# 
  4708  0410                     	;# 
  4709  0411                     	;# 
  4710  0416                     	;# 
  4711  0416                     	;# 
  4712  0417                     	;# 
  4713  0418                     	;# 
  4714  0418                     	;# 
  4715  0419                     	;# 
  4716  041A                     	;# 
  4717  041A                     	;# 
  4718  041B                     	;# 
  4719  041C                     	;# 
  4720  041C                     	;# 
  4721  041D                     	;# 
  4722  041E                     	;# 
  4723  041F                     	;# 
  4724  048C                     	;# 
  4725  048C                     	;# 
  4726  048D                     	;# 
  4727  048E                     	;# 
  4728  048F                     	;# 
  4729  048F                     	;# 
  4730  0490                     	;# 
  4731  0491                     	;# 
  4732  0492                     	;# 
  4733  0492                     	;# 
  4734  0493                     	;# 
  4735  0494                     	;# 
  4736  0495                     	;# 
  4737  0495                     	;# 
  4738  0496                     	;# 
  4739  0497                     	;# 
  4740  0498                     	;# 
  4741  0499                     	;# 
  4742  049A                     	;# 
  4743  049B                     	;# 
  4744  049C                     	;# 
  4745  049D                     	;# 
  4746  050C                     	;# 
  4747  050C                     	;# 
  4748  050D                     	;# 
  4749  050E                     	;# 
  4750  050F                     	;# 
  4751  050F                     	;# 
  4752  0510                     	;# 
  4753  0511                     	;# 
  4754  0512                     	;# 
  4755  0512                     	;# 
  4756  0513                     	;# 
  4757  0514                     	;# 
  4758  0515                     	;# 
  4759  0515                     	;# 
  4760  0516                     	;# 
  4761  0517                     	;# 
  4762  0518                     	;# 
  4763  0519                     	;# 
  4764  051A                     	;# 
  4765  051B                     	;# 
  4766  051C                     	;# 
  4767  051D                     	;# 
  4768  058C                     	;# 
  4769  058C                     	;# 
  4770  058D                     	;# 
  4771  058E                     	;# 
  4772  058F                     	;# 
  4773  058F                     	;# 
  4774  0590                     	;# 
  4775  0591                     	;# 
  4776  0592                     	;# 
  4777  0593                     	;# 
  4778  060C                     	;# 
  4779  060D                     	;# 
  4780  060E                     	;# 
  4781  060F                     	;# 
  4782  0610                     	;# 
  4783  0611                     	;# 
  4784  0612                     	;# 
  4785  0613                     	;# 
  4786  0614                     	;# 
  4787  0616                     	;# 
  4788  0617                     	;# 
  4789  0618                     	;# 
  4790  0619                     	;# 
  4791  061A                     	;# 
  4792  061B                     	;# 
  4793  061C                     	;# 
  4794  061D                     	;# 
  4795  061E                     	;# 
  4796  068C                     	;# 
  4797  068D                     	;# 
  4798  068E                     	;# 
  4799  068F                     	;# 
  4800  0690                     	;# 
  4801  0691                     	;# 
  4802  0692                     	;# 
  4803  0693                     	;# 
  4804  0694                     	;# 
  4805  070C                     	;# 
  4806  070D                     	;# 
  4807  070E                     	;# 
  4808  070F                     	;# 
  4809  0710                     	;# 
  4810  0711                     	;# 
  4811  0712                     	;# 
  4812  0713                     	;# 
  4813  0714                     	;# 
  4814  0716                     	;# 
  4815  0717                     	;# 
  4816  0718                     	;# 
  4817  0719                     	;# 
  4818  071A                     	;# 
  4819  071B                     	;# 
  4820  071C                     	;# 
  4821  071D                     	;# 
  4822  071E                     	;# 
  4823  0796                     	;# 
  4824  0797                     	;# 
  4825  0798                     	;# 
  4826  0799                     	;# 
  4827  079A                     	;# 
  4828  079B                     	;# 
  4829  080C                     	;# 
  4830  080D                     	;# 
  4831  080E                     	;# 
  4832  080F                     	;# 
  4833  0810                     	;# 
  4834  0811                     	;# 
  4835  0812                     	;# 
  4836  0813                     	;# 
  4837  0814                     	;# 
  4838  081A                     	;# 
  4839  081B                     	;# 
  4840  081C                     	;# 
  4841  081D                     	;# 
  4842  081E                     	;# 
  4843  081F                     	;# 
  4844  088C                     	;# 
  4845  088D                     	;# 
  4846  088E                     	;# 
  4847  088F                     	;# 
  4848  0890                     	;# 
  4849  0891                     	;# 
  4850  0892                     	;# 
  4851  0893                     	;# 
  4852  0895                     	;# 
  4853  0896                     	;# 
  4854  0897                     	;# 
  4855  0898                     	;# 
  4856  0899                     	;# 
  4857  089A                     	;# 
  4858  089B                     	;# 
  4859  090C                     	;# 
  4860  090E                     	;# 
  4861  090F                     	;# 
  4862  091F                     	;# 
  4863  091F                     	;# 
  4864  098F                     	;# 
  4865  098F                     	;# 
  4866  0990                     	;# 
  4867  0991                     	;# 
  4868  0992                     	;# 
  4869  0993                     	;# 
  4870  0994                     	;# 
  4871  0995                     	;# 
  4872  0996                     	;# 
  4873  0997                     	;# 
  4874  0E0F                     	;# 
  4875  0E10                     	;# 
  4876  0E11                     	;# 
  4877  0E12                     	;# 
  4878  0E13                     	;# 
  4879  0E14                     	;# 
  4880  0E15                     	;# 
  4881  0E16                     	;# 
  4882  0E17                     	;# 
  4883  0E18                     	;# 
  4884  0E19                     	;# 
  4885  0E1A                     	;# 
  4886  0E1B                     	;# 
  4887  0E1C                     	;# 
  4888  0E1D                     	;# 
  4889  0E1E                     	;# 
  4890  0E1F                     	;# 
  4891  0E20                     	;# 
  4892  0E21                     	;# 
  4893  0E22                     	;# 
  4894  0E23                     	;# 
  4895  0E24                     	;# 
  4896  0E25                     	;# 
  4897  0E26                     	;# 
  4898  0E27                     	;# 
  4899  0E28                     	;# 
  4900  0E29                     	;# 
  4901  0E2A                     	;# 
  4902  0E2B                     	;# 
  4903  0E2C                     	;# 
  4904  0E2D                     	;# 
  4905  0E2E                     	;# 
  4906  0E2F                     	;# 
  4907  0E30                     	;# 
  4908  0E31                     	;# 
  4909  0E32                     	;# 
  4910  0E33                     	;# 
  4911  0E34                     	;# 
  4912  0E35                     	;# 
  4913  0E36                     	;# 
  4914  0E37                     	;# 
  4915  0E8F                     	;# 
  4916  0E90                     	;# 
  4917  0E91                     	;# 
  4918  0E92                     	;# 
  4919  0E93                     	;# 
  4920  0E94                     	;# 
  4921  0E95                     	;# 
  4922  0E96                     	;# 
  4923  0E97                     	;# 
  4924  0E9C                     	;# 
  4925  0E9D                     	;# 
  4926  0E9E                     	;# 
  4927  0EA1                     	;# 
  4928  0EA2                     	;# 
  4929  0EA3                     	;# 
  4930  0EA4                     	;# 
  4931  0EA5                     	;# 
  4932  0EA9                     	;# 
  4933  0EAA                     	;# 
  4934  0EAB                     	;# 
  4935  0EAC                     	;# 
  4936  0EB1                     	;# 
  4937  0EB2                     	;# 
  4938  0EB3                     	;# 
  4939  0EB8                     	;# 
  4940  0EB9                     	;# 
  4941  0EBA                     	;# 
  4942  0EBB                     	;# 
  4943  0EBC                     	;# 
  4944  0EBD                     	;# 
  4945  0EBE                     	;# 
  4946  0EC3                     	;# 
  4947  0EC5                     	;# 
  4948  0EC6                     	;# 
  4949  0EC7                     	;# 
  4950  0EC8                     	;# 
  4951  0EC9                     	;# 
  4952  0ECA                     	;# 
  4953  0ECB                     	;# 
  4954  0ECC                     	;# 
  4955  0F10                     	;# 
  4956  0F11                     	;# 
  4957  0F12                     	;# 
  4958  0F13                     	;# 
  4959  0F14                     	;# 
  4960  0F15                     	;# 
  4961  0F16                     	;# 
  4962  0F17                     	;# 
  4963  0F18                     	;# 
  4964  0F19                     	;# 
  4965  0F1A                     	;# 
  4966  0F1B                     	;# 
  4967  0F1C                     	;# 
  4968  0F1D                     	;# 
  4969  0F1E                     	;# 
  4970  0F1F                     	;# 
  4971  0F20                     	;# 
  4972  0F21                     	;# 
  4973  0F22                     	;# 
  4974  0F23                     	;# 
  4975  0F24                     	;# 
  4976  0F25                     	;# 
  4977  0F26                     	;# 
  4978  0F27                     	;# 
  4979  0F28                     	;# 
  4980  0F29                     	;# 
  4981  0F2A                     	;# 
  4982  0F2B                     	;# 
  4983  0F2C                     	;# 
  4984  0F2D                     	;# 
  4985  0F2E                     	;# 
  4986  0F2F                     	;# 
  4987  0F30                     	;# 
  4988  0F31                     	;# 
  4989  0F32                     	;# 
  4990  0F38                     	;# 
  4991  0F39                     	;# 
  4992  0F3A                     	;# 
  4993  0F3B                     	;# 
  4994  0F3C                     	;# 
  4995  0F3D                     	;# 
  4996  0F3E                     	;# 
  4997  0F3F                     	;# 
  4998  0F40                     	;# 
  4999  0F41                     	;# 
  5000  0F43                     	;# 
  5001  0F44                     	;# 
  5002  0F45                     	;# 
  5003  0F46                     	;# 
  5004  0F47                     	;# 
  5005  0F48                     	;# 
  5006  0F49                     	;# 
  5007  0F4A                     	;# 
  5008  0F4B                     	;# 
  5009  0F4C                     	;# 
  5010  0F4E                     	;# 
  5011  0F4F                     	;# 
  5012  0F50                     	;# 
  5013  0F51                     	;# 
  5014  0F52                     	;# 
  5015  0F53                     	;# 
  5016  0F54                     	;# 
  5017  0F55                     	;# 
  5018  0F56                     	;# 
  5019  0F57                     	;# 
  5020  0F59                     	;# 
  5021  0F5A                     	;# 
  5022  0F5B                     	;# 
  5023  0F5C                     	;# 
  5024  0F5D                     	;# 
  5025  0F61                     	;# 
  5026  0F62                     	;# 
  5027  0F64                     	;# 
  5028  0F65                     	;# 
  5029  0F66                     	;# 
  5030  0F67                     	;# 
  5031  0F68                     	;# 
  5032  0F69                     	;# 
  5033  0F6A                     	;# 
  5034  0F6B                     	;# 
  5035  0F6C                     	;# 
  5036  0F6D                     	;# 
  5037  0FE4                     	;# 
  5038  0FE5                     	;# 
  5039  0FE6                     	;# 
  5040  0FE7                     	;# 
  5041  0FE8                     	;# 
  5042  0FE9                     	;# 
  5043  0FEA                     	;# 
  5044  0FEB                     	;# 
  5045  0FED                     	;# 
  5046  0FEE                     	;# 
  5047  0FEF                     	;# 
  5048  0000                     	;# 
  5049  0001                     	;# 
  5050  0002                     	;# 
  5051  0003                     	;# 
  5052  0004                     	;# 
  5053  0005                     	;# 
  5054  0006                     	;# 
  5055  0007                     	;# 
  5056  0008                     	;# 
  5057  0009                     	;# 
  5058  000A                     	;# 
  5059  000B                     	;# 
  5060  000C                     	;# 
  5061  000D                     	;# 
  5062  000E                     	;# 
  5063  000F                     	;# 
  5064  0010                     	;# 
  5065  0011                     	;# 
  5066  0012                     	;# 
  5067  0013                     	;# 
  5068  0014                     	;# 
  5069  0015                     	;# 
  5070  0016                     	;# 
  5071  0017                     	;# 
  5072  0018                     	;# 
  5073  0019                     	;# 
  5074  001A                     	;# 
  5075  001C                     	;# 
  5076  001C                     	;# 
  5077  001D                     	;# 
  5078  001D                     	;# 
  5079  001E                     	;# 
  5080  001F                     	;# 
  5081  008C                     	;# 
  5082  008C                     	;# 
  5083  008D                     	;# 
  5084  008E                     	;# 
  5085  008E                     	;# 
  5086  008F                     	;# 
  5087  0090                     	;# 
  5088  0090                     	;# 
  5089  0091                     	;# 
  5090  0093                     	;# 
  5091  0094                     	;# 
  5092  0095                     	;# 
  5093  0096                     	;# 
  5094  0097                     	;# 
  5095  0098                     	;# 
  5096  0099                     	;# 
  5097  009A                     	;# 
  5098  009B                     	;# 
  5099  009C                     	;# 
  5100  009D                     	;# 
  5101  009E                     	;# 
  5102  010C                     	;# 
  5103  010D                     	;# 
  5104  010E                     	;# 
  5105  010E                     	;# 
  5106  010F                     	;# 
  5107  0110                     	;# 
  5108  0110                     	;# 
  5109  0111                     	;# 
  5110  0112                     	;# 
  5111  0112                     	;# 
  5112  0113                     	;# 
  5113  0114                     	;# 
  5114  0114                     	;# 
  5115  0115                     	;# 
  5116  0116                     	;# 
  5117  0116                     	;# 
  5118  0117                     	;# 
  5119  0119                     	;# 
  5120  0119                     	;# 
  5121  0119                     	;# 
  5122  011A                     	;# 
  5123  011A                     	;# 
  5124  011A                     	;# 
  5125  011B                     	;# 
  5126  011B                     	;# 
  5127  011B                     	;# 
  5128  011B                     	;# 
  5129  011B                     	;# 
  5130  011C                     	;# 
  5131  011C                     	;# 
  5132  011C                     	;# 
  5133  011D                     	;# 
  5134  011D                     	;# 
  5135  011D                     	;# 
  5136  011E                     	;# 
  5137  011E                     	;# 
  5138  011E                     	;# 
  5139  011F                     	;# 
  5140  011F                     	;# 
  5141  011F                     	;# 
  5142  011F                     	;# 
  5143  011F                     	;# 
  5144  018C                     	;# 
  5145  018D                     	;# 
  5146  018E                     	;# 
  5147  018F                     	;# 
  5148  0190                     	;# 
  5149  0191                     	;# 
  5150  0192                     	;# 
  5151  0196                     	;# 
  5152  0197                     	;# 
  5153  0198                     	;# 
  5154  0199                     	;# 
  5155  019A                     	;# 
  5156  019B                     	;# 
  5157  019C                     	;# 
  5158  020C                     	;# 
  5159  020C                     	;# 
  5160  020D                     	;# 
  5161  020E                     	;# 
  5162  020F                     	;# 
  5163  020F                     	;# 
  5164  0210                     	;# 
  5165  0210                     	;# 
  5166  0211                     	;# 
  5167  0211                     	;# 
  5168  0212                     	;# 
  5169  0212                     	;# 
  5170  0213                     	;# 
  5171  0214                     	;# 
  5172  0215                     	;# 
  5173  0215                     	;# 
  5174  0216                     	;# 
  5175  0216                     	;# 
  5176  0217                     	;# 
  5177  0217                     	;# 
  5178  0218                     	;# 
  5179  0218                     	;# 
  5180  0219                     	;# 
  5181  021A                     	;# 
  5182  021B                     	;# 
  5183  021B                     	;# 
  5184  021C                     	;# 
  5185  021C                     	;# 
  5186  021D                     	;# 
  5187  021D                     	;# 
  5188  021E                     	;# 
  5189  021F                     	;# 
  5190  028C                     	;# 
  5191  028C                     	;# 
  5192  028D                     	;# 
  5193  028D                     	;# 
  5194  028E                     	;# 
  5195  028F                     	;# 
  5196  0290                     	;# 
  5197  0290                     	;# 
  5198  0291                     	;# 
  5199  0292                     	;# 
  5200  0292                     	;# 
  5201  0293                     	;# 
  5202  0293                     	;# 
  5203  0294                     	;# 
  5204  0295                     	;# 
  5205  0296                     	;# 
  5206  0296                     	;# 
  5207  0297                     	;# 
  5208  0298                     	;# 
  5209  0298                     	;# 
  5210  0299                     	;# 
  5211  0299                     	;# 
  5212  029A                     	;# 
  5213  029B                     	;# 
  5214  029C                     	;# 
  5215  029C                     	;# 
  5216  029D                     	;# 
  5217  030C                     	;# 
  5218  030C                     	;# 
  5219  030D                     	;# 
  5220  030E                     	;# 
  5221  030F                     	;# 
  5222  0310                     	;# 
  5223  0310                     	;# 
  5224  0311                     	;# 
  5225  0312                     	;# 
  5226  0313                     	;# 
  5227  0314                     	;# 
  5228  0314                     	;# 
  5229  0315                     	;# 
  5230  0316                     	;# 
  5231  0317                     	;# 
  5232  0318                     	;# 
  5233  0318                     	;# 
  5234  0319                     	;# 
  5235  031A                     	;# 
  5236  031B                     	;# 
  5237  031C                     	;# 
  5238  031C                     	;# 
  5239  031D                     	;# 
  5240  031E                     	;# 
  5241  031F                     	;# 
  5242  038C                     	;# 
  5243  038C                     	;# 
  5244  038D                     	;# 
  5245  038E                     	;# 
  5246  0390                     	;# 
  5247  0390                     	;# 
  5248  0391                     	;# 
  5249  0392                     	;# 
  5250  040C                     	;# 
  5251  040D                     	;# 
  5252  040E                     	;# 
  5253  040F                     	;# 
  5254  0410                     	;# 
  5255  0411                     	;# 
  5256  0416                     	;# 
  5257  0416                     	;# 
  5258  0417                     	;# 
  5259  0418                     	;# 
  5260  0418                     	;# 
  5261  0419                     	;# 
  5262  041A                     	;# 
  5263  041A                     	;# 
  5264  041B                     	;# 
  5265  041C                     	;# 
  5266  041C                     	;# 
  5267  041D                     	;# 
  5268  041E                     	;# 
  5269  041F                     	;# 
  5270  048C                     	;# 
  5271  048C                     	;# 
  5272  048D                     	;# 
  5273  048E                     	;# 
  5274  048F                     	;# 
  5275  048F                     	;# 
  5276  0490                     	;# 
  5277  0491                     	;# 
  5278  0492                     	;# 
  5279  0492                     	;# 
  5280  0493                     	;# 
  5281  0494                     	;# 
  5282  0495                     	;# 
  5283  0495                     	;# 
  5284  0496                     	;# 
  5285  0497                     	;# 
  5286  0498                     	;# 
  5287  0499                     	;# 
  5288  049A                     	;# 
  5289  049B                     	;# 
  5290  049C                     	;# 
  5291  049D                     	;# 
  5292  050C                     	;# 
  5293  050C                     	;# 
  5294  050D                     	;# 
  5295  050E                     	;# 
  5296  050F                     	;# 
  5297  050F                     	;# 
  5298  0510                     	;# 
  5299  0511                     	;# 
  5300  0512                     	;# 
  5301  0512                     	;# 
  5302  0513                     	;# 
  5303  0514                     	;# 
  5304  0515                     	;# 
  5305  0515                     	;# 
  5306  0516                     	;# 
  5307  0517                     	;# 
  5308  0518                     	;# 
  5309  0519                     	;# 
  5310  051A                     	;# 
  5311  051B                     	;# 
  5312  051C                     	;# 
  5313  051D                     	;# 
  5314  058C                     	;# 
  5315  058C                     	;# 
  5316  058D                     	;# 
  5317  058E                     	;# 
  5318  058F                     	;# 
  5319  058F                     	;# 
  5320  0590                     	;# 
  5321  0591                     	;# 
  5322  0592                     	;# 
  5323  0593                     	;# 
  5324  060C                     	;# 
  5325  060D                     	;# 
  5326  060E                     	;# 
  5327  060F                     	;# 
  5328  0610                     	;# 
  5329  0611                     	;# 
  5330  0612                     	;# 
  5331  0613                     	;# 
  5332  0614                     	;# 
  5333  0616                     	;# 
  5334  0617                     	;# 
  5335  0618                     	;# 
  5336  0619                     	;# 
  5337  061A                     	;# 
  5338  061B                     	;# 
  5339  061C                     	;# 
  5340  061D                     	;# 
  5341  061E                     	;# 
  5342  068C                     	;# 
  5343  068D                     	;# 
  5344  068E                     	;# 
  5345  068F                     	;# 
  5346  0690                     	;# 
  5347  0691                     	;# 
  5348  0692                     	;# 
  5349  0693                     	;# 
  5350  0694                     	;# 
  5351  070C                     	;# 
  5352  070D                     	;# 
  5353  070E                     	;# 
  5354  070F                     	;# 
  5355  0710                     	;# 
  5356  0711                     	;# 
  5357  0712                     	;# 
  5358  0713                     	;# 
  5359  0714                     	;# 
  5360  0716                     	;# 
  5361  0717                     	;# 
  5362  0718                     	;# 
  5363  0719                     	;# 
  5364  071A                     	;# 
  5365  071B                     	;# 
  5366  071C                     	;# 
  5367  071D                     	;# 
  5368  071E                     	;# 
  5369  0796                     	;# 
  5370  0797                     	;# 
  5371  0798                     	;# 
  5372  0799                     	;# 
  5373  079A                     	;# 
  5374  079B                     	;# 
  5375  080C                     	;# 
  5376  080D                     	;# 
  5377  080E                     	;# 
  5378  080F                     	;# 
  5379  0810                     	;# 
  5380  0811                     	;# 
  5381  0812                     	;# 
  5382  0813                     	;# 
  5383  0814                     	;# 
  5384  081A                     	;# 
  5385  081B                     	;# 
  5386  081C                     	;# 
  5387  081D                     	;# 
  5388  081E                     	;# 
  5389  081F                     	;# 
  5390  088C                     	;# 
  5391  088D                     	;# 
  5392  088E                     	;# 
  5393  088F                     	;# 
  5394  0890                     	;# 
  5395  0891                     	;# 
  5396  0892                     	;# 
  5397  0893                     	;# 
  5398  0895                     	;# 
  5399  0896                     	;# 
  5400  0897                     	;# 
  5401  0898                     	;# 
  5402  0899                     	;# 
  5403  089A                     	;# 
  5404  089B                     	;# 
  5405  090C                     	;# 
  5406  090E                     	;# 
  5407  090F                     	;# 
  5408  091F                     	;# 
  5409  091F                     	;# 
  5410  098F                     	;# 
  5411  098F                     	;# 
  5412  0990                     	;# 
  5413  0991                     	;# 
  5414  0992                     	;# 
  5415  0993                     	;# 
  5416  0994                     	;# 
  5417  0995                     	;# 
  5418  0996                     	;# 
  5419  0997                     	;# 
  5420  0E0F                     	;# 
  5421  0E10                     	;# 
  5422  0E11                     	;# 
  5423  0E12                     	;# 
  5424  0E13                     	;# 
  5425  0E14                     	;# 
  5426  0E15                     	;# 
  5427  0E16                     	;# 
  5428  0E17                     	;# 
  5429  0E18                     	;# 
  5430  0E19                     	;# 
  5431  0E1A                     	;# 
  5432  0E1B                     	;# 
  5433  0E1C                     	;# 
  5434  0E1D                     	;# 
  5435  0E1E                     	;# 
  5436  0E1F                     	;# 
  5437  0E20                     	;# 
  5438  0E21                     	;# 
  5439  0E22                     	;# 
  5440  0E23                     	;# 
  5441  0E24                     	;# 
  5442  0E25                     	;# 
  5443  0E26                     	;# 
  5444  0E27                     	;# 
  5445  0E28                     	;# 
  5446  0E29                     	;# 
  5447  0E2A                     	;# 
  5448  0E2B                     	;# 
  5449  0E2C                     	;# 
  5450  0E2D                     	;# 
  5451  0E2E                     	;# 
  5452  0E2F                     	;# 
  5453  0E30                     	;# 
  5454  0E31                     	;# 
  5455  0E32                     	;# 
  5456  0E33                     	;# 
  5457  0E34                     	;# 
  5458  0E35                     	;# 
  5459  0E36                     	;# 
  5460  0E37                     	;# 
  5461  0E8F                     	;# 
  5462  0E90                     	;# 
  5463  0E91                     	;# 
  5464  0E92                     	;# 
  5465  0E93                     	;# 
  5466  0E94                     	;# 
  5467  0E95                     	;# 
  5468  0E96                     	;# 
  5469  0E97                     	;# 
  5470  0E9C                     	;# 
  5471  0E9D                     	;# 
  5472  0E9E                     	;# 
  5473  0EA1                     	;# 
  5474  0EA2                     	;# 
  5475  0EA3                     	;# 
  5476  0EA4                     	;# 
  5477  0EA5                     	;# 
  5478  0EA9                     	;# 
  5479  0EAA                     	;# 
  5480  0EAB                     	;# 
  5481  0EAC                     	;# 
  5482  0EB1                     	;# 
  5483  0EB2                     	;# 
  5484  0EB3                     	;# 
  5485  0EB8                     	;# 
  5486  0EB9                     	;# 
  5487  0EBA                     	;# 
  5488  0EBB                     	;# 
  5489  0EBC                     	;# 
  5490  0EBD                     	;# 
  5491  0EBE                     	;# 
  5492  0EC3                     	;# 
  5493  0EC5                     	;# 
  5494  0EC6                     	;# 
  5495  0EC7                     	;# 
  5496  0EC8                     	;# 
  5497  0EC9                     	;# 
  5498  0ECA                     	;# 
  5499  0ECB                     	;# 
  5500  0ECC                     	;# 
  5501  0F10                     	;# 
  5502  0F11                     	;# 
  5503  0F12                     	;# 
  5504  0F13                     	;# 
  5505  0F14                     	;# 
  5506  0F15                     	;# 
  5507  0F16                     	;# 
  5508  0F17                     	;# 
  5509  0F18                     	;# 
  5510  0F19                     	;# 
  5511  0F1A                     	;# 
  5512  0F1B                     	;# 
  5513  0F1C                     	;# 
  5514  0F1D                     	;# 
  5515  0F1E                     	;# 
  5516  0F1F                     	;# 
  5517  0F20                     	;# 
  5518  0F21                     	;# 
  5519  0F22                     	;# 
  5520  0F23                     	;# 
  5521  0F24                     	;# 
  5522  0F25                     	;# 
  5523  0F26                     	;# 
  5524  0F27                     	;# 
  5525  0F28                     	;# 
  5526  0F29                     	;# 
  5527  0F2A                     	;# 
  5528  0F2B                     	;# 
  5529  0F2C                     	;# 
  5530  0F2D                     	;# 
  5531  0F2E                     	;# 
  5532  0F2F                     	;# 
  5533  0F30                     	;# 
  5534  0F31                     	;# 
  5535  0F32                     	;# 
  5536  0F38                     	;# 
  5537  0F39                     	;# 
  5538  0F3A                     	;# 
  5539  0F3B                     	;# 
  5540  0F3C                     	;# 
  5541  0F3D                     	;# 
  5542  0F3E                     	;# 
  5543  0F3F                     	;# 
  5544  0F40                     	;# 
  5545  0F41                     	;# 
  5546  0F43                     	;# 
  5547  0F44                     	;# 
  5548  0F45                     	;# 
  5549  0F46                     	;# 
  5550  0F47                     	;# 
  5551  0F48                     	;# 
  5552  0F49                     	;# 
  5553  0F4A                     	;# 
  5554  0F4B                     	;# 
  5555  0F4C                     	;# 
  5556  0F4E                     	;# 
  5557  0F4F                     	;# 
  5558  0F50                     	;# 
  5559  0F51                     	;# 
  5560  0F52                     	;# 
  5561  0F53                     	;# 
  5562  0F54                     	;# 
  5563  0F55                     	;# 
  5564  0F56                     	;# 
  5565  0F57                     	;# 
  5566  0F59                     	;# 
  5567  0F5A                     	;# 
  5568  0F5B                     	;# 
  5569  0F5C                     	;# 
  5570  0F5D                     	;# 
  5571  0F61                     	;# 
  5572  0F62                     	;# 
  5573  0F64                     	;# 
  5574  0F65                     	;# 
  5575  0F66                     	;# 
  5576  0F67                     	;# 
  5577  0F68                     	;# 
  5578  0F69                     	;# 
  5579  0F6A                     	;# 
  5580  0F6B                     	;# 
  5581  0F6C                     	;# 
  5582  0F6D                     	;# 
  5583  0FE4                     	;# 
  5584  0FE5                     	;# 
  5585  0FE6                     	;# 
  5586  0FE7                     	;# 
  5587  0FE8                     	;# 
  5588  0FE9                     	;# 
  5589  0FEA                     	;# 
  5590  0FEB                     	;# 
  5591  0FED                     	;# 
  5592  0FEE                     	;# 
  5593  0FEF                     	;# 
  5594  0000                     	;# 
  5595  0001                     	;# 
  5596  0002                     	;# 
  5597  0003                     	;# 
  5598  0004                     	;# 
  5599  0005                     	;# 
  5600  0006                     	;# 
  5601  0007                     	;# 
  5602  0008                     	;# 
  5603  0009                     	;# 
  5604  000A                     	;# 
  5605  000B                     	;# 
  5606  000C                     	;# 
  5607  000D                     	;# 
  5608  000E                     	;# 
  5609  000F                     	;# 
  5610  0010                     	;# 
  5611  0011                     	;# 
  5612  0012                     	;# 
  5613  0013                     	;# 
  5614  0014                     	;# 
  5615  0015                     	;# 
  5616  0016                     	;# 
  5617  0017                     	;# 
  5618  0018                     	;# 
  5619  0019                     	;# 
  5620  001A                     	;# 
  5621  001C                     	;# 
  5622  001C                     	;# 
  5623  001D                     	;# 
  5624  001D                     	;# 
  5625  001E                     	;# 
  5626  001F                     	;# 
  5627  008C                     	;# 
  5628  008C                     	;# 
  5629  008D                     	;# 
  5630  008E                     	;# 
  5631  008E                     	;# 
  5632  008F                     	;# 
  5633  0090                     	;# 
  5634  0090                     	;# 
  5635  0091                     	;# 
  5636  0093                     	;# 
  5637  0094                     	;# 
  5638  0095                     	;# 
  5639  0096                     	;# 
  5640  0097                     	;# 
  5641  0098                     	;# 
  5642  0099                     	;# 
  5643  009A                     	;# 
  5644  009B                     	;# 
  5645  009C                     	;# 
  5646  009D                     	;# 
  5647  009E                     	;# 
  5648  010C                     	;# 
  5649  010D                     	;# 
  5650  010E                     	;# 
  5651  010E                     	;# 
  5652  010F                     	;# 
  5653  0110                     	;# 
  5654  0110                     	;# 
  5655  0111                     	;# 
  5656  0112                     	;# 
  5657  0112                     	;# 
  5658  0113                     	;# 
  5659  0114                     	;# 
  5660  0114                     	;# 
  5661  0115                     	;# 
  5662  0116                     	;# 
  5663  0116                     	;# 
  5664  0117                     	;# 
  5665  0119                     	;# 
  5666  0119                     	;# 
  5667  0119                     	;# 
  5668  011A                     	;# 
  5669  011A                     	;# 
  5670  011A                     	;# 
  5671  011B                     	;# 
  5672  011B                     	;# 
  5673  011B                     	;# 
  5674  011B                     	;# 
  5675  011B                     	;# 
  5676  011C                     	;# 
  5677  011C                     	;# 
  5678  011C                     	;# 
  5679  011D                     	;# 
  5680  011D                     	;# 
  5681  011D                     	;# 
  5682  011E                     	;# 
  5683  011E                     	;# 
  5684  011E                     	;# 
  5685  011F                     	;# 
  5686  011F                     	;# 
  5687  011F                     	;# 
  5688  011F                     	;# 
  5689  011F                     	;# 
  5690  018C                     	;# 
  5691  018D                     	;# 
  5692  018E                     	;# 
  5693  018F                     	;# 
  5694  0190                     	;# 
  5695  0191                     	;# 
  5696  0192                     	;# 
  5697  0196                     	;# 
  5698  0197                     	;# 
  5699  0198                     	;# 
  5700  0199                     	;# 
  5701  019A                     	;# 
  5702  019B                     	;# 
  5703  019C                     	;# 
  5704  020C                     	;# 
  5705  020C                     	;# 
  5706  020D                     	;# 
  5707  020E                     	;# 
  5708  020F                     	;# 
  5709  020F                     	;# 
  5710  0210                     	;# 
  5711  0210                     	;# 
  5712  0211                     	;# 
  5713  0211                     	;# 
  5714  0212                     	;# 
  5715  0212                     	;# 
  5716  0213                     	;# 
  5717  0214                     	;# 
  5718  0215                     	;# 
  5719  0215                     	;# 
  5720  0216                     	;# 
  5721  0216                     	;# 
  5722  0217                     	;# 
  5723  0217                     	;# 
  5724  0218                     	;# 
  5725  0218                     	;# 
  5726  0219                     	;# 
  5727  021A                     	;# 
  5728  021B                     	;# 
  5729  021B                     	;# 
  5730  021C                     	;# 
  5731  021C                     	;# 
  5732  021D                     	;# 
  5733  021D                     	;# 
  5734  021E                     	;# 
  5735  021F                     	;# 
  5736  028C                     	;# 
  5737  028C                     	;# 
  5738  028D                     	;# 
  5739  028D                     	;# 
  5740  028E                     	;# 
  5741  028F                     	;# 
  5742  0290                     	;# 
  5743  0290                     	;# 
  5744  0291                     	;# 
  5745  0292                     	;# 
  5746  0292                     	;# 
  5747  0293                     	;# 
  5748  0293                     	;# 
  5749  0294                     	;# 
  5750  0295                     	;# 
  5751  0296                     	;# 
  5752  0296                     	;# 
  5753  0297                     	;# 
  5754  0298                     	;# 
  5755  0298                     	;# 
  5756  0299                     	;# 
  5757  0299                     	;# 
  5758  029A                     	;# 
  5759  029B                     	;# 
  5760  029C                     	;# 
  5761  029C                     	;# 
  5762  029D                     	;# 
  5763  030C                     	;# 
  5764  030C                     	;# 
  5765  030D                     	;# 
  5766  030E                     	;# 
  5767  030F                     	;# 
  5768  0310                     	;# 
  5769  0310                     	;# 
  5770  0311                     	;# 
  5771  0312                     	;# 
  5772  0313                     	;# 
  5773  0314                     	;# 
  5774  0314                     	;# 
  5775  0315                     	;# 
  5776  0316                     	;# 
  5777  0317                     	;# 
  5778  0318                     	;# 
  5779  0318                     	;# 
  5780  0319                     	;# 
  5781  031A                     	;# 
  5782  031B                     	;# 
  5783  031C                     	;# 
  5784  031C                     	;# 
  5785  031D                     	;# 
  5786  031E                     	;# 
  5787  031F                     	;# 
  5788  038C                     	;# 
  5789  038C                     	;# 
  5790  038D                     	;# 
  5791  038E                     	;# 
  5792  0390                     	;# 
  5793  0390                     	;# 
  5794  0391                     	;# 
  5795  0392                     	;# 
  5796  040C                     	;# 
  5797  040D                     	;# 
  5798  040E                     	;# 
  5799  040F                     	;# 
  5800  0410                     	;# 
  5801  0411                     	;# 
  5802  0416                     	;# 
  5803  0416                     	;# 
  5804  0417                     	;# 
  5805  0418                     	;# 
  5806  0418                     	;# 
  5807  0419                     	;# 
  5808  041A                     	;# 
  5809  041A                     	;# 
  5810  041B                     	;# 
  5811  041C                     	;# 
  5812  041C                     	;# 
  5813  041D                     	;# 
  5814  041E                     	;# 
  5815  041F                     	;# 
  5816  048C                     	;# 
  5817  048C                     	;# 
  5818  048D                     	;# 
  5819  048E                     	;# 
  5820  048F                     	;# 
  5821  048F                     	;# 
  5822  0490                     	;# 
  5823  0491                     	;# 
  5824  0492                     	;# 
  5825  0492                     	;# 
  5826  0493                     	;# 
  5827  0494                     	;# 
  5828  0495                     	;# 
  5829  0495                     	;# 
  5830  0496                     	;# 
  5831  0497                     	;# 
  5832  0498                     	;# 
  5833  0499                     	;# 
  5834  049A                     	;# 
  5835  049B                     	;# 
  5836  049C                     	;# 
  5837  049D                     	;# 
  5838  050C                     	;# 
  5839  050C                     	;# 
  5840  050D                     	;# 
  5841  050E                     	;# 
  5842  050F                     	;# 
  5843  050F                     	;# 
  5844  0510                     	;# 
  5845  0511                     	;# 
  5846  0512                     	;# 
  5847  0512                     	;# 
  5848  0513                     	;# 
  5849  0514                     	;# 
  5850  0515                     	;# 
  5851  0515                     	;# 
  5852  0516                     	;# 
  5853  0517                     	;# 
  5854  0518                     	;# 
  5855  0519                     	;# 
  5856  051A                     	;# 
  5857  051B                     	;# 
  5858  051C                     	;# 
  5859  051D                     	;# 
  5860  058C                     	;# 
  5861  058C                     	;# 
  5862  058D                     	;# 
  5863  058E                     	;# 
  5864  058F                     	;# 
  5865  058F                     	;# 
  5866  0590                     	;# 
  5867  0591                     	;# 
  5868  0592                     	;# 
  5869  0593                     	;# 
  5870  060C                     	;# 
  5871  060D                     	;# 
  5872  060E                     	;# 
  5873  060F                     	;# 
  5874  0610                     	;# 
  5875  0611                     	;# 
  5876  0612                     	;# 
  5877  0613                     	;# 
  5878  0614                     	;# 
  5879  0616                     	;# 
  5880  0617                     	;# 
  5881  0618                     	;# 
  5882  0619                     	;# 
  5883  061A                     	;# 
  5884  061B                     	;# 
  5885  061C                     	;# 
  5886  061D                     	;# 
  5887  061E                     	;# 
  5888  068C                     	;# 
  5889  068D                     	;# 
  5890  068E                     	;# 
  5891  068F                     	;# 
  5892  0690                     	;# 
  5893  0691                     	;# 
  5894  0692                     	;# 
  5895  0693                     	;# 
  5896  0694                     	;# 
  5897  070C                     	;# 
  5898  070D                     	;# 
  5899  070E                     	;# 
  5900  070F                     	;# 
  5901  0710                     	;# 
  5902  0711                     	;# 
  5903  0712                     	;# 
  5904  0713                     	;# 
  5905  0714                     	;# 
  5906  0716                     	;# 
  5907  0717                     	;# 
  5908  0718                     	;# 
  5909  0719                     	;# 
  5910  071A                     	;# 
  5911  071B                     	;# 
  5912  071C                     	;# 
  5913  071D                     	;# 
  5914  071E                     	;# 
  5915  0796                     	;# 
  5916  0797                     	;# 
  5917  0798                     	;# 
  5918  0799                     	;# 
  5919  079A                     	;# 
  5920  079B                     	;# 
  5921  080C                     	;# 
  5922  080D                     	;# 
  5923  080E                     	;# 
  5924  080F                     	;# 
  5925  0810                     	;# 
  5926  0811                     	;# 
  5927  0812                     	;# 
  5928  0813                     	;# 
  5929  0814                     	;# 
  5930  081A                     	;# 
  5931  081B                     	;# 
  5932  081C                     	;# 
  5933  081D                     	;# 
  5934  081E                     	;# 
  5935  081F                     	;# 
  5936  088C                     	;# 
  5937  088D                     	;# 
  5938  088E                     	;# 
  5939  088F                     	;# 
  5940  0890                     	;# 
  5941  0891                     	;# 
  5942  0892                     	;# 
  5943  0893                     	;# 
  5944  0895                     	;# 
  5945  0896                     	;# 
  5946  0897                     	;# 
  5947  0898                     	;# 
  5948  0899                     	;# 
  5949  089A                     	;# 
  5950  089B                     	;# 
  5951  090C                     	;# 
  5952  090E                     	;# 
  5953  090F                     	;# 
  5954  091F                     	;# 
  5955  091F                     	;# 
  5956  098F                     	;# 
  5957  098F                     	;# 
  5958  0990                     	;# 
  5959  0991                     	;# 
  5960  0992                     	;# 
  5961  0993                     	;# 
  5962  0994                     	;# 
  5963  0995                     	;# 
  5964  0996                     	;# 
  5965  0997                     	;# 
  5966  0E0F                     	;# 
  5967  0E10                     	;# 
  5968  0E11                     	;# 
  5969  0E12                     	;# 
  5970  0E13                     	;# 
  5971  0E14                     	;# 
  5972  0E15                     	;# 
  5973  0E16                     	;# 
  5974  0E17                     	;# 
  5975  0E18                     	;# 
  5976  0E19                     	;# 
  5977  0E1A                     	;# 
  5978  0E1B                     	;# 
  5979  0E1C                     	;# 
  5980  0E1D                     	;# 
  5981  0E1E                     	;# 
  5982  0E1F                     	;# 
  5983  0E20                     	;# 
  5984  0E21                     	;# 
  5985  0E22                     	;# 
  5986  0E23                     	;# 
  5987  0E24                     	;# 
  5988  0E25                     	;# 
  5989  0E26                     	;# 
  5990  0E27                     	;# 
  5991  0E28                     	;# 
  5992  0E29                     	;# 
  5993  0E2A                     	;# 
  5994  0E2B                     	;# 
  5995  0E2C                     	;# 
  5996  0E2D                     	;# 
  5997  0E2E                     	;# 
  5998  0E2F                     	;# 
  5999  0E30                     	;# 
  6000  0E31                     	;# 
  6001  0E32                     	;# 
  6002  0E33                     	;# 
  6003  0E34                     	;# 
  6004  0E35                     	;# 
  6005  0E36                     	;# 
  6006  0E37                     	;# 
  6007  0E8F                     	;# 
  6008  0E90                     	;# 
  6009  0E91                     	;# 
  6010  0E92                     	;# 
  6011  0E93                     	;# 
  6012  0E94                     	;# 
  6013  0E95                     	;# 
  6014  0E96                     	;# 
  6015  0E97                     	;# 
  6016  0E9C                     	;# 
  6017  0E9D                     	;# 
  6018  0E9E                     	;# 
  6019  0EA1                     	;# 
  6020  0EA2                     	;# 
  6021  0EA3                     	;# 
  6022  0EA4                     	;# 
  6023  0EA5                     	;# 
  6024  0EA9                     	;# 
  6025  0EAA                     	;# 
  6026  0EAB                     	;# 
  6027  0EAC                     	;# 
  6028  0EB1                     	;# 
  6029  0EB2                     	;# 
  6030  0EB3                     	;# 
  6031  0EB8                     	;# 
  6032  0EB9                     	;# 
  6033  0EBA                     	;# 
  6034  0EBB                     	;# 
  6035  0EBC                     	;# 
  6036  0EBD                     	;# 
  6037  0EBE                     	;# 
  6038  0EC3                     	;# 
  6039  0EC5                     	;# 
  6040  0EC6                     	;# 
  6041  0EC7                     	;# 
  6042  0EC8                     	;# 
  6043  0EC9                     	;# 
  6044  0ECA                     	;# 
  6045  0ECB                     	;# 
  6046  0ECC                     	;# 
  6047  0F10                     	;# 
  6048  0F11                     	;# 
  6049  0F12                     	;# 
  6050  0F13                     	;# 
  6051  0F14                     	;# 
  6052  0F15                     	;# 
  6053  0F16                     	;# 
  6054  0F17                     	;# 
  6055  0F18                     	;# 
  6056  0F19                     	;# 
  6057  0F1A                     	;# 
  6058  0F1B                     	;# 
  6059  0F1C                     	;# 
  6060  0F1D                     	;# 
  6061  0F1E                     	;# 
  6062  0F1F                     	;# 
  6063  0F20                     	;# 
  6064  0F21                     	;# 
  6065  0F22                     	;# 
  6066  0F23                     	;# 
  6067  0F24                     	;# 
  6068  0F25                     	;# 
  6069  0F26                     	;# 
  6070  0F27                     	;# 
  6071  0F28                     	;# 
  6072  0F29                     	;# 
  6073  0F2A                     	;# 
  6074  0F2B                     	;# 
  6075  0F2C                     	;# 
  6076  0F2D                     	;# 
  6077  0F2E                     	;# 
  6078  0F2F                     	;# 
  6079  0F30                     	;# 
  6080  0F31                     	;# 
  6081  0F32                     	;# 
  6082  0F38                     	;# 
  6083  0F39                     	;# 
  6084  0F3A                     	;# 
  6085  0F3B                     	;# 
  6086  0F3C                     	;# 
  6087  0F3D                     	;# 
  6088  0F3E                     	;# 
  6089  0F3F                     	;# 
  6090  0F40                     	;# 
  6091  0F41                     	;# 
  6092  0F43                     	;# 
  6093  0F44                     	;# 
  6094  0F45                     	;# 
  6095  0F46                     	;# 
  6096  0F47                     	;# 
  6097  0F48                     	;# 
  6098  0F49                     	;# 
  6099  0F4A                     	;# 
  6100  0F4B                     	;# 
  6101  0F4C                     	;# 
  6102  0F4E                     	;# 
  6103  0F4F                     	;# 
  6104  0F50                     	;# 
  6105  0F51                     	;# 
  6106  0F52                     	;# 
  6107  0F53                     	;# 
  6108  0F54                     	;# 
  6109  0F55                     	;# 
  6110  0F56                     	;# 
  6111  0F57                     	;# 
  6112  0F59                     	;# 
  6113  0F5A                     	;# 
  6114  0F5B                     	;# 
  6115  0F5C                     	;# 
  6116  0F5D                     	;# 
  6117  0F61                     	;# 
  6118  0F62                     	;# 
  6119  0F64                     	;# 
  6120  0F65                     	;# 
  6121  0F66                     	;# 
  6122  0F67                     	;# 
  6123  0F68                     	;# 
  6124  0F69                     	;# 
  6125  0F6A                     	;# 
  6126  0F6B                     	;# 
  6127  0F6C                     	;# 
  6128  0F6D                     	;# 
  6129  0FE4                     	;# 
  6130  0FE5                     	;# 
  6131  0FE6                     	;# 
  6132  0FE7                     	;# 
  6133  0FE8                     	;# 
  6134  0FE9                     	;# 
  6135  0FEA                     	;# 
  6136  0FEB                     	;# 
  6137  0FED                     	;# 
  6138  0FEE                     	;# 
  6139  0FEF                     	;# 
  6140  0000                     	;# 
  6141  0001                     	;# 
  6142  0002                     	;# 
  6143  0003                     	;# 
  6144  0004                     	;# 
  6145  0005                     	;# 
  6146  0006                     	;# 
  6147  0007                     	;# 
  6148  0008                     	;# 
  6149  0009                     	;# 
  6150  000A                     	;# 
  6151  000B                     	;# 
  6152  000C                     	;# 
  6153  000D                     	;# 
  6154  000E                     	;# 
  6155  000F                     	;# 
  6156  0010                     	;# 
  6157  0011                     	;# 
  6158  0012                     	;# 
  6159  0013                     	;# 
  6160  0014                     	;# 
  6161  0015                     	;# 
  6162  0016                     	;# 
  6163  0017                     	;# 
  6164  0018                     	;# 
  6165  0019                     	;# 
  6166  001A                     	;# 
  6167  001C                     	;# 
  6168  001C                     	;# 
  6169  001D                     	;# 
  6170  001D                     	;# 
  6171  001E                     	;# 
  6172  001F                     	;# 
  6173  008C                     	;# 
  6174  008C                     	;# 
  6175  008D                     	;# 
  6176  008E                     	;# 
  6177  008E                     	;# 
  6178  008F                     	;# 
  6179  0090                     	;# 
  6180  0090                     	;# 
  6181  0091                     	;# 
  6182  0093                     	;# 
  6183  0094                     	;# 
  6184  0095                     	;# 
  6185  0096                     	;# 
  6186  0097                     	;# 
  6187  0098                     	;# 
  6188  0099                     	;# 
  6189  009A                     	;# 
  6190  009B                     	;# 
  6191  009C                     	;# 
  6192  009D                     	;# 
  6193  009E                     	;# 
  6194  010C                     	;# 
  6195  010D                     	;# 
  6196  010E                     	;# 
  6197  010E                     	;# 
  6198  010F                     	;# 
  6199  0110                     	;# 
  6200  0110                     	;# 
  6201  0111                     	;# 
  6202  0112                     	;# 
  6203  0112                     	;# 
  6204  0113                     	;# 
  6205  0114                     	;# 
  6206  0114                     	;# 
  6207  0115                     	;# 
  6208  0116                     	;# 
  6209  0116                     	;# 
  6210  0117                     	;# 
  6211  0119                     	;# 
  6212  0119                     	;# 
  6213  0119                     	;# 
  6214  011A                     	;# 
  6215  011A                     	;# 
  6216  011A                     	;# 
  6217  011B                     	;# 
  6218  011B                     	;# 
  6219  011B                     	;# 
  6220  011B                     	;# 
  6221  011B                     	;# 
  6222  011C                     	;# 
  6223  011C                     	;# 
  6224  011C                     	;# 
  6225  011D                     	;# 
  6226  011D                     	;# 
  6227  011D                     	;# 
  6228  011E                     	;# 
  6229  011E                     	;# 
  6230  011E                     	;# 
  6231  011F                     	;# 
  6232  011F                     	;# 
  6233  011F                     	;# 
  6234  011F                     	;# 
  6235  011F                     	;# 
  6236  018C                     	;# 
  6237  018D                     	;# 
  6238  018E                     	;# 
  6239  018F                     	;# 
  6240  0190                     	;# 
  6241  0191                     	;# 
  6242  0192                     	;# 
  6243  0196                     	;# 
  6244  0197                     	;# 
  6245  0198                     	;# 
  6246  0199                     	;# 
  6247  019A                     	;# 
  6248  019B                     	;# 
  6249  019C                     	;# 
  6250  020C                     	;# 
  6251  020C                     	;# 
  6252  020D                     	;# 
  6253  020E                     	;# 
  6254  020F                     	;# 
  6255  020F                     	;# 
  6256  0210                     	;# 
  6257  0210                     	;# 
  6258  0211                     	;# 
  6259  0211                     	;# 
  6260  0212                     	;# 
  6261  0212                     	;# 
  6262  0213                     	;# 
  6263  0214                     	;# 
  6264  0215                     	;# 
  6265  0215                     	;# 
  6266  0216                     	;# 
  6267  0216                     	;# 
  6268  0217                     	;# 
  6269  0217                     	;# 
  6270  0218                     	;# 
  6271  0218                     	;# 
  6272  0219                     	;# 
  6273  021A                     	;# 
  6274  021B                     	;# 
  6275  021B                     	;# 
  6276  021C                     	;# 
  6277  021C                     	;# 
  6278  021D                     	;# 
  6279  021D                     	;# 
  6280  021E                     	;# 
  6281  021F                     	;# 
  6282  028C                     	;# 
  6283  028C                     	;# 
  6284  028D                     	;# 
  6285  028D                     	;# 
  6286  028E                     	;# 
  6287  028F                     	;# 
  6288  0290                     	;# 
  6289  0290                     	;# 
  6290  0291                     	;# 
  6291  0292                     	;# 
  6292  0292                     	;# 
  6293  0293                     	;# 
  6294  0293                     	;# 
  6295  0294                     	;# 
  6296  0295                     	;# 
  6297  0296                     	;# 
  6298  0296                     	;# 
  6299  0297                     	;# 
  6300  0298                     	;# 
  6301  0298                     	;# 
  6302  0299                     	;# 
  6303  0299                     	;# 
  6304  029A                     	;# 
  6305  029B                     	;# 
  6306  029C                     	;# 
  6307  029C                     	;# 
  6308  029D                     	;# 
  6309  030C                     	;# 
  6310  030C                     	;# 
  6311  030D                     	;# 
  6312  030E                     	;# 
  6313  030F                     	;# 
  6314  0310                     	;# 
  6315  0310                     	;# 
  6316  0311                     	;# 
  6317  0312                     	;# 
  6318  0313                     	;# 
  6319  0314                     	;# 
  6320  0314                     	;# 
  6321  0315                     	;# 
  6322  0316                     	;# 
  6323  0317                     	;# 
  6324  0318                     	;# 
  6325  0318                     	;# 
  6326  0319                     	;# 
  6327  031A                     	;# 
  6328  031B                     	;# 
  6329  031C                     	;# 
  6330  031C                     	;# 
  6331  031D                     	;# 
  6332  031E                     	;# 
  6333  031F                     	;# 
  6334  038C                     	;# 
  6335  038C                     	;# 
  6336  038D                     	;# 
  6337  038E                     	;# 
  6338  0390                     	;# 
  6339  0390                     	;# 
  6340  0391                     	;# 
  6341  0392                     	;# 
  6342  040C                     	;# 
  6343  040D                     	;# 
  6344  040E                     	;# 
  6345  040F                     	;# 
  6346  0410                     	;# 
  6347  0411                     	;# 
  6348  0416                     	;# 
  6349  0416                     	;# 
  6350  0417                     	;# 
  6351  0418                     	;# 
  6352  0418                     	;# 
  6353  0419                     	;# 
  6354  041A                     	;# 
  6355  041A                     	;# 
  6356  041B                     	;# 
  6357  041C                     	;# 
  6358  041C                     	;# 
  6359  041D                     	;# 
  6360  041E                     	;# 
  6361  041F                     	;# 
  6362  048C                     	;# 
  6363  048C                     	;# 
  6364  048D                     	;# 
  6365  048E                     	;# 
  6366  048F                     	;# 
  6367  048F                     	;# 
  6368  0490                     	;# 
  6369  0491                     	;# 
  6370  0492                     	;# 
  6371  0492                     	;# 
  6372  0493                     	;# 
  6373  0494                     	;# 
  6374  0495                     	;# 
  6375  0495                     	;# 
  6376  0496                     	;# 
  6377  0497                     	;# 
  6378  0498                     	;# 
  6379  0499                     	;# 
  6380  049A                     	;# 
  6381  049B                     	;# 
  6382  049C                     	;# 
  6383  049D                     	;# 
  6384  050C                     	;# 
  6385  050C                     	;# 
  6386  050D                     	;# 
  6387  050E                     	;# 
  6388  050F                     	;# 
  6389  050F                     	;# 
  6390  0510                     	;# 
  6391  0511                     	;# 
  6392  0512                     	;# 
  6393  0512                     	;# 
  6394  0513                     	;# 
  6395  0514                     	;# 
  6396  0515                     	;# 
  6397  0515                     	;# 
  6398  0516                     	;# 
  6399  0517                     	;# 
  6400  0518                     	;# 
  6401  0519                     	;# 
  6402  051A                     	;# 
  6403  051B                     	;# 
  6404  051C                     	;# 
  6405  051D                     	;# 
  6406  058C                     	;# 
  6407  058C                     	;# 
  6408  058D                     	;# 
  6409  058E                     	;# 
  6410  058F                     	;# 
  6411  058F                     	;# 
  6412  0590                     	;# 
  6413  0591                     	;# 
  6414  0592                     	;# 
  6415  0593                     	;# 
  6416  060C                     	;# 
  6417  060D                     	;# 
  6418  060E                     	;# 
  6419  060F                     	;# 
  6420  0610                     	;# 
  6421  0611                     	;# 
  6422  0612                     	;# 
  6423  0613                     	;# 
  6424  0614                     	;# 
  6425  0616                     	;# 
  6426  0617                     	;# 
  6427  0618                     	;# 
  6428  0619                     	;# 
  6429  061A                     	;# 
  6430  061B                     	;# 
  6431  061C                     	;# 
  6432  061D                     	;# 
  6433  061E                     	;# 
  6434  068C                     	;# 
  6435  068D                     	;# 
  6436  068E                     	;# 
  6437  068F                     	;# 
  6438  0690                     	;# 
  6439  0691                     	;# 
  6440  0692                     	;# 
  6441  0693                     	;# 
  6442  0694                     	;# 
  6443  070C                     	;# 
  6444  070D                     	;# 
  6445  070E                     	;# 
  6446  070F                     	;# 
  6447  0710                     	;# 
  6448  0711                     	;# 
  6449  0712                     	;# 
  6450  0713                     	;# 
  6451  0714                     	;# 
  6452  0716                     	;# 
  6453  0717                     	;# 
  6454  0718                     	;# 
  6455  0719                     	;# 
  6456  071A                     	;# 
  6457  071B                     	;# 
  6458  071C                     	;# 
  6459  071D                     	;# 
  6460  071E                     	;# 
  6461  0796                     	;# 
  6462  0797                     	;# 
  6463  0798                     	;# 
  6464  0799                     	;# 
  6465  079A                     	;# 
  6466  079B                     	;# 
  6467  080C                     	;# 
  6468  080D                     	;# 
  6469  080E                     	;# 
  6470  080F                     	;# 
  6471  0810                     	;# 
  6472  0811                     	;# 
  6473  0812                     	;# 
  6474  0813                     	;# 
  6475  0814                     	;# 
  6476  081A                     	;# 
  6477  081B                     	;# 
  6478  081C                     	;# 
  6479  081D                     	;# 
  6480  081E                     	;# 
  6481  081F                     	;# 
  6482  088C                     	;# 
  6483  088D                     	;# 
  6484  088E                     	;# 
  6485  088F                     	;# 
  6486  0890                     	;# 
  6487  0891                     	;# 
  6488  0892                     	;# 
  6489  0893                     	;# 
  6490  0895                     	;# 
  6491  0896                     	;# 
  6492  0897                     	;# 
  6493  0898                     	;# 
  6494  0899                     	;# 
  6495  089A                     	;# 
  6496  089B                     	;# 
  6497  090C                     	;# 
  6498  090E                     	;# 
  6499  090F                     	;# 
  6500  091F                     	;# 
  6501  091F                     	;# 
  6502  098F                     	;# 
  6503  098F                     	;# 
  6504  0990                     	;# 
  6505  0991                     	;# 
  6506  0992                     	;# 
  6507  0993                     	;# 
  6508  0994                     	;# 
  6509  0995                     	;# 
  6510  0996                     	;# 
  6511  0997                     	;# 
  6512  0E0F                     	;# 
  6513  0E10                     	;# 
  6514  0E11                     	;# 
  6515  0E12                     	;# 
  6516  0E13                     	;# 
  6517  0E14                     	;# 
  6518  0E15                     	;# 
  6519  0E16                     	;# 
  6520  0E17                     	;# 
  6521  0E18                     	;# 
  6522  0E19                     	;# 
  6523  0E1A                     	;# 
  6524  0E1B                     	;# 
  6525  0E1C                     	;# 
  6526  0E1D                     	;# 
  6527  0E1E                     	;# 
  6528  0E1F                     	;# 
  6529  0E20                     	;# 
  6530  0E21                     	;# 
  6531  0E22                     	;# 
  6532  0E23                     	;# 
  6533  0E24                     	;# 
  6534  0E25                     	;# 
  6535  0E26                     	;# 
  6536  0E27                     	;# 
  6537  0E28                     	;# 
  6538  0E29                     	;# 
  6539  0E2A                     	;# 
  6540  0E2B                     	;# 
  6541  0E2C                     	;# 
  6542  0E2D                     	;# 
  6543  0E2E                     	;# 
  6544  0E2F                     	;# 
  6545  0E30                     	;# 
  6546  0E31                     	;# 
  6547  0E32                     	;# 
  6548  0E33                     	;# 
  6549  0E34                     	;# 
  6550  0E35                     	;# 
  6551  0E36                     	;# 
  6552  0E37                     	;# 
  6553  0E8F                     	;# 
  6554  0E90                     	;# 
  6555  0E91                     	;# 
  6556  0E92                     	;# 
  6557  0E93                     	;# 
  6558  0E94                     	;# 
  6559  0E95                     	;# 
  6560  0E96                     	;# 
  6561  0E97                     	;# 
  6562  0E9C                     	;# 
  6563  0E9D                     	;# 
  6564  0E9E                     	;# 
  6565  0EA1                     	;# 
  6566  0EA2                     	;# 
  6567  0EA3                     	;# 
  6568  0EA4                     	;# 
  6569  0EA5                     	;# 
  6570  0EA9                     	;# 
  6571  0EAA                     	;# 
  6572  0EAB                     	;# 
  6573  0EAC                     	;# 
  6574  0EB1                     	;# 
  6575  0EB2                     	;# 
  6576  0EB3                     	;# 
  6577  0EB8                     	;# 
  6578  0EB9                     	;# 
  6579  0EBA                     	;# 
  6580  0EBB                     	;# 
  6581  0EBC                     	;# 
  6582  0EBD                     	;# 
  6583  0EBE                     	;# 
  6584  0EC3                     	;# 
  6585  0EC5                     	;# 
  6586  0EC6                     	;# 
  6587  0EC7                     	;# 
  6588  0EC8                     	;# 
  6589  0EC9                     	;# 
  6590  0ECA                     	;# 
  6591  0ECB                     	;# 
  6592  0ECC                     	;# 
  6593  0F10                     	;# 
  6594  0F11                     	;# 
  6595  0F12                     	;# 
  6596  0F13                     	;# 
  6597  0F14                     	;# 
  6598  0F15                     	;# 
  6599  0F16                     	;# 
  6600  0F17                     	;# 
  6601  0F18                     	;# 
  6602  0F19                     	;# 
  6603  0F1A                     	;# 
  6604  0F1B                     	;# 
  6605  0F1C                     	;# 
  6606  0F1D                     	;# 
  6607  0F1E                     	;# 
  6608  0F1F                     	;# 
  6609  0F20                     	;# 
  6610  0F21                     	;# 
  6611  0F22                     	;# 
  6612  0F23                     	;# 
  6613  0F24                     	;# 
  6614  0F25                     	;# 
  6615  0F26                     	;# 
  6616  0F27                     	;# 
  6617  0F28                     	;# 
  6618  0F29                     	;# 
  6619  0F2A                     	;# 
  6620  0F2B                     	;# 
  6621  0F2C                     	;# 
  6622  0F2D                     	;# 
  6623  0F2E                     	;# 
  6624  0F2F                     	;# 
  6625  0F30                     	;# 
  6626  0F31                     	;# 
  6627  0F32                     	;# 
  6628  0F38                     	;# 
  6629  0F39                     	;# 
  6630  0F3A                     	;# 
  6631  0F3B                     	;# 
  6632  0F3C                     	;# 
  6633  0F3D                     	;# 
  6634  0F3E                     	;# 
  6635  0F3F                     	;# 
  6636  0F40                     	;# 
  6637  0F41                     	;# 
  6638  0F43                     	;# 
  6639  0F44                     	;# 
  6640  0F45                     	;# 
  6641  0F46                     	;# 
  6642  0F47                     	;# 
  6643  0F48                     	;# 
  6644  0F49                     	;# 
  6645  0F4A                     	;# 
  6646  0F4B                     	;# 
  6647  0F4C                     	;# 
  6648  0F4E                     	;# 
  6649  0F4F                     	;# 
  6650  0F50                     	;# 
  6651  0F51                     	;# 
  6652  0F52                     	;# 
  6653  0F53                     	;# 
  6654  0F54                     	;# 
  6655  0F55                     	;# 
  6656  0F56                     	;# 
  6657  0F57                     	;# 
  6658  0F59                     	;# 
  6659  0F5A                     	;# 
  6660  0F5B                     	;# 
  6661  0F5C                     	;# 
  6662  0F5D                     	;# 
  6663  0F61                     	;# 
  6664  0F62                     	;# 
  6665  0F64                     	;# 
  6666  0F65                     	;# 
  6667  0F66                     	;# 
  6668  0F67                     	;# 
  6669  0F68                     	;# 
  6670  0F69                     	;# 
  6671  0F6A                     	;# 
  6672  0F6B                     	;# 
  6673  0F6C                     	;# 
  6674  0F6D                     	;# 
  6675  0FE4                     	;# 
  6676  0FE5                     	;# 
  6677  0FE6                     	;# 
  6678  0FE7                     	;# 
  6679  0FE8                     	;# 
  6680  0FE9                     	;# 
  6681  0FEA                     	;# 
  6682  0FEB                     	;# 
  6683  0FED                     	;# 
  6684  0FEE                     	;# 
  6685  0FEF                     	;# 
  6686  0000                     	;# 
  6687  0001                     	;# 
  6688  0002                     	;# 
  6689  0003                     	;# 
  6690  0004                     	;# 
  6691  0005                     	;# 
  6692  0006                     	;# 
  6693  0007                     	;# 
  6694  0008                     	;# 
  6695  0009                     	;# 
  6696  000A                     	;# 
  6697  000B                     	;# 
  6698  000C                     	;# 
  6699  000D                     	;# 
  6700  000E                     	;# 
  6701  000F                     	;# 
  6702  0010                     	;# 
  6703  0011                     	;# 
  6704  0012                     	;# 
  6705  0013                     	;# 
  6706  0014                     	;# 
  6707  0015                     	;# 
  6708  0016                     	;# 
  6709  0017                     	;# 
  6710  0018                     	;# 
  6711  0019                     	;# 
  6712  001A                     	;# 
  6713  001C                     	;# 
  6714  001C                     	;# 
  6715  001D                     	;# 
  6716  001D                     	;# 
  6717  001E                     	;# 
  6718  001F                     	;# 
  6719  008C                     	;# 
  6720  008C                     	;# 
  6721  008D                     	;# 
  6722  008E                     	;# 
  6723  008E                     	;# 
  6724  008F                     	;# 
  6725  0090                     	;# 
  6726  0090                     	;# 
  6727  0091                     	;# 
  6728  0093                     	;# 
  6729  0094                     	;# 
  6730  0095                     	;# 
  6731  0096                     	;# 
  6732  0097                     	;# 
  6733  0098                     	;# 
  6734  0099                     	;# 
  6735  009A                     	;# 
  6736  009B                     	;# 
  6737  009C                     	;# 
  6738  009D                     	;# 
  6739  009E                     	;# 
  6740  010C                     	;# 
  6741  010D                     	;# 
  6742  010E                     	;# 
  6743  010E                     	;# 
  6744  010F                     	;# 
  6745  0110                     	;# 
  6746  0110                     	;# 
  6747  0111                     	;# 
  6748  0112                     	;# 
  6749  0112                     	;# 
  6750  0113                     	;# 
  6751  0114                     	;# 
  6752  0114                     	;# 
  6753  0115                     	;# 
  6754  0116                     	;# 
  6755  0116                     	;# 
  6756  0117                     	;# 
  6757  0119                     	;# 
  6758  0119                     	;# 
  6759  0119                     	;# 
  6760  011A                     	;# 
  6761  011A                     	;# 
  6762  011A                     	;# 
  6763  011B                     	;# 
  6764  011B                     	;# 
  6765  011B                     	;# 
  6766  011B                     	;# 
  6767  011B                     	;# 
  6768  011C                     	;# 
  6769  011C                     	;# 
  6770  011C                     	;# 
  6771  011D                     	;# 
  6772  011D                     	;# 
  6773  011D                     	;# 
  6774  011E                     	;# 
  6775  011E                     	;# 
  6776  011E                     	;# 
  6777  011F                     	;# 
  6778  011F                     	;# 
  6779  011F                     	;# 
  6780  011F                     	;# 
  6781  011F                     	;# 
  6782  018C                     	;# 
  6783  018D                     	;# 
  6784  018E                     	;# 
  6785  018F                     	;# 
  6786  0190                     	;# 
  6787  0191                     	;# 
  6788  0192                     	;# 
  6789  0196                     	;# 
  6790  0197                     	;# 
  6791  0198                     	;# 
  6792  0199                     	;# 
  6793  019A                     	;# 
  6794  019B                     	;# 
  6795  019C                     	;# 
  6796  020C                     	;# 
  6797  020C                     	;# 
  6798  020D                     	;# 
  6799  020E                     	;# 
  6800  020F                     	;# 
  6801  020F                     	;# 
  6802  0210                     	;# 
  6803  0210                     	;# 
  6804  0211                     	;# 
  6805  0211                     	;# 
  6806  0212                     	;# 
  6807  0212                     	;# 
  6808  0213                     	;# 
  6809  0214                     	;# 
  6810  0215                     	;# 
  6811  0215                     	;# 
  6812  0216                     	;# 
  6813  0216                     	;# 
  6814  0217                     	;# 
  6815  0217                     	;# 
  6816  0218                     	;# 
  6817  0218                     	;# 
  6818  0219                     	;# 
  6819  021A                     	;# 
  6820  021B                     	;# 
  6821  021B                     	;# 
  6822  021C                     	;# 
  6823  021C                     	;# 
  6824  021D                     	;# 
  6825  021D                     	;# 
  6826  021E                     	;# 
  6827  021F                     	;# 
  6828  028C                     	;# 
  6829  028C                     	;# 
  6830  028D                     	;# 
  6831  028D                     	;# 
  6832  028E                     	;# 
  6833  028F                     	;# 
  6834  0290                     	;# 
  6835  0290                     	;# 
  6836  0291                     	;# 
  6837  0292                     	;# 
  6838  0292                     	;# 
  6839  0293                     	;# 
  6840  0293                     	;# 
  6841  0294                     	;# 
  6842  0295                     	;# 
  6843  0296                     	;# 
  6844  0296                     	;# 
  6845  0297                     	;# 
  6846  0298                     	;# 
  6847  0298                     	;# 
  6848  0299                     	;# 
  6849  0299                     	;# 
  6850  029A                     	;# 
  6851  029B                     	;# 
  6852  029C                     	;# 
  6853  029C                     	;# 
  6854  029D                     	;# 
  6855  030C                     	;# 
  6856  030C                     	;# 
  6857  030D                     	;# 
  6858  030E                     	;# 
  6859  030F                     	;# 
  6860  0310                     	;# 
  6861  0310                     	;# 
  6862  0311                     	;# 
  6863  0312                     	;# 
  6864  0313                     	;# 
  6865  0314                     	;# 
  6866  0314                     	;# 
  6867  0315                     	;# 
  6868  0316                     	;# 
  6869  0317                     	;# 
  6870  0318                     	;# 
  6871  0318                     	;# 
  6872  0319                     	;# 
  6873  031A                     	;# 
  6874  031B                     	;# 
  6875  031C                     	;# 
  6876  031C                     	;# 
  6877  031D                     	;# 
  6878  031E                     	;# 
  6879  031F                     	;# 
  6880  038C                     	;# 
  6881  038C                     	;# 
  6882  038D                     	;# 
  6883  038E                     	;# 
  6884  0390                     	;# 
  6885  0390                     	;# 
  6886  0391                     	;# 
  6887  0392                     	;# 
  6888  040C                     	;# 
  6889  040D                     	;# 
  6890  040E                     	;# 
  6891  040F                     	;# 
  6892  0410                     	;# 
  6893  0411                     	;# 
  6894  0416                     	;# 
  6895  0416                     	;# 
  6896  0417                     	;# 
  6897  0418                     	;# 
  6898  0418                     	;# 
  6899  0419                     	;# 
  6900  041A                     	;# 
  6901  041A                     	;# 
  6902  041B                     	;# 
  6903  041C                     	;# 
  6904  041C                     	;# 
  6905  041D                     	;# 
  6906  041E                     	;# 
  6907  041F                     	;# 
  6908  048C                     	;# 
  6909  048C                     	;# 
  6910  048D                     	;# 
  6911  048E                     	;# 
  6912  048F                     	;# 
  6913  048F                     	;# 
  6914  0490                     	;# 
  6915  0491                     	;# 
  6916  0492                     	;# 
  6917  0492                     	;# 
  6918  0493                     	;# 
  6919  0494                     	;# 
  6920  0495                     	;# 
  6921  0495                     	;# 
  6922  0496                     	;# 
  6923  0497                     	;# 
  6924  0498                     	;# 
  6925  0499                     	;# 
  6926  049A                     	;# 
  6927  049B                     	;# 
  6928  049C                     	;# 
  6929  049D                     	;# 
  6930  050C                     	;# 
  6931  050C                     	;# 
  6932  050D                     	;# 
  6933  050E                     	;# 
  6934  050F                     	;# 
  6935  050F                     	;# 
  6936  0510                     	;# 
  6937  0511                     	;# 
  6938  0512                     	;# 
  6939  0512                     	;# 
  6940  0513                     	;# 
  6941  0514                     	;# 
  6942  0515                     	;# 
  6943  0515                     	;# 
  6944  0516                     	;# 
  6945  0517                     	;# 
  6946  0518                     	;# 
  6947  0519                     	;# 
  6948  051A                     	;# 
  6949  051B                     	;# 
  6950  051C                     	;# 
  6951  051D                     	;# 
  6952  058C                     	;# 
  6953  058C                     	;# 
  6954  058D                     	;# 
  6955  058E                     	;# 
  6956  058F                     	;# 
  6957  058F                     	;# 
  6958  0590                     	;# 
  6959  0591                     	;# 
  6960  0592                     	;# 
  6961  0593                     	;# 
  6962  060C                     	;# 
  6963  060D                     	;# 
  6964  060E                     	;# 
  6965  060F                     	;# 
  6966  0610                     	;# 
  6967  0611                     	;# 
  6968  0612                     	;# 
  6969  0613                     	;# 
  6970  0614                     	;# 
  6971  0616                     	;# 
  6972  0617                     	;# 
  6973  0618                     	;# 
  6974  0619                     	;# 
  6975  061A                     	;# 
  6976  061B                     	;# 
  6977  061C                     	;# 
  6978  061D                     	;# 
  6979  061E                     	;# 
  6980  068C                     	;# 
  6981  068D                     	;# 
  6982  068E                     	;# 
  6983  068F                     	;# 
  6984  0690                     	;# 
  6985  0691                     	;# 
  6986  0692                     	;# 
  6987  0693                     	;# 
  6988  0694                     	;# 
  6989  070C                     	;# 
  6990  070D                     	;# 
  6991  070E                     	;# 
  6992  070F                     	;# 
  6993  0710                     	;# 
  6994  0711                     	;# 
  6995  0712                     	;# 
  6996  0713                     	;# 
  6997  0714                     	;# 
  6998  0716                     	;# 
  6999  0717                     	;# 
  7000  0718                     	;# 
  7001  0719                     	;# 
  7002  071A                     	;# 
  7003  071B                     	;# 
  7004  071C                     	;# 
  7005  071D                     	;# 
  7006  071E                     	;# 
  7007  0796                     	;# 
  7008  0797                     	;# 
  7009  0798                     	;# 
  7010  0799                     	;# 
  7011  079A                     	;# 
  7012  079B                     	;# 
  7013  080C                     	;# 
  7014  080D                     	;# 
  7015  080E                     	;# 
  7016  080F                     	;# 
  7017  0810                     	;# 
  7018  0811                     	;# 
  7019  0812                     	;# 
  7020  0813                     	;# 
  7021  0814                     	;# 
  7022  081A                     	;# 
  7023  081B                     	;# 
  7024  081C                     	;# 
  7025  081D                     	;# 
  7026  081E                     	;# 
  7027  081F                     	;# 
  7028  088C                     	;# 
  7029  088D                     	;# 
  7030  088E                     	;# 
  7031  088F                     	;# 
  7032  0890                     	;# 
  7033  0891                     	;# 
  7034  0892                     	;# 
  7035  0893                     	;# 
  7036  0895                     	;# 
  7037  0896                     	;# 
  7038  0897                     	;# 
  7039  0898                     	;# 
  7040  0899                     	;# 
  7041  089A                     	;# 
  7042  089B                     	;# 
  7043  090C                     	;# 
  7044  090E                     	;# 
  7045  090F                     	;# 
  7046  091F                     	;# 
  7047  091F                     	;# 
  7048  098F                     	;# 
  7049  098F                     	;# 
  7050  0990                     	;# 
  7051  0991                     	;# 
  7052  0992                     	;# 
  7053  0993                     	;# 
  7054  0994                     	;# 
  7055  0995                     	;# 
  7056  0996                     	;# 
  7057  0997                     	;# 
  7058  0E0F                     	;# 
  7059  0E10                     	;# 
  7060  0E11                     	;# 
  7061  0E12                     	;# 
  7062  0E13                     	;# 
  7063  0E14                     	;# 
  7064  0E15                     	;# 
  7065  0E16                     	;# 
  7066  0E17                     	;# 
  7067  0E18                     	;# 
  7068  0E19                     	;# 
  7069  0E1A                     	;# 
  7070  0E1B                     	;# 
  7071  0E1C                     	;# 
  7072  0E1D                     	;# 
  7073  0E1E                     	;# 
  7074  0E1F                     	;# 
  7075  0E20                     	;# 
  7076  0E21                     	;# 
  7077  0E22                     	;# 
  7078  0E23                     	;# 
  7079  0E24                     	;# 
  7080  0E25                     	;# 
  7081  0E26                     	;# 
  7082  0E27                     	;# 
  7083  0E28                     	;# 
  7084  0E29                     	;# 
  7085  0E2A                     	;# 
  7086  0E2B                     	;# 
  7087  0E2C                     	;# 
  7088  0E2D                     	;# 
  7089  0E2E                     	;# 
  7090  0E2F                     	;# 
  7091  0E30                     	;# 
  7092  0E31                     	;# 
  7093  0E32                     	;# 
  7094  0E33                     	;# 
  7095  0E34                     	;# 
  7096  0E35                     	;# 
  7097  0E36                     	;# 
  7098  0E37                     	;# 
  7099  0E8F                     	;# 
  7100  0E90                     	;# 
  7101  0E91                     	;# 
  7102  0E92                     	;# 
  7103  0E93                     	;# 
  7104  0E94                     	;# 
  7105  0E95                     	;# 
  7106  0E96                     	;# 
  7107  0E97                     	;# 
  7108  0E9C                     	;# 
  7109  0E9D                     	;# 
  7110  0E9E                     	;# 
  7111  0EA1                     	;# 
  7112  0EA2                     	;# 
  7113  0EA3                     	;# 
  7114  0EA4                     	;# 
  7115  0EA5                     	;# 
  7116  0EA9                     	;# 
  7117  0EAA                     	;# 
  7118  0EAB                     	;# 
  7119  0EAC                     	;# 
  7120  0EB1                     	;# 
  7121  0EB2                     	;# 
  7122  0EB3                     	;# 
  7123  0EB8                     	;# 
  7124  0EB9                     	;# 
  7125  0EBA                     	;# 
  7126  0EBB                     	;# 
  7127  0EBC                     	;# 
  7128  0EBD                     	;# 
  7129  0EBE                     	;# 
  7130  0EC3                     	;# 
  7131  0EC5                     	;# 
  7132  0EC6                     	;# 
  7133  0EC7                     	;# 
  7134  0EC8                     	;# 
  7135  0EC9                     	;# 
  7136  0ECA                     	;# 
  7137  0ECB                     	;# 
  7138  0ECC                     	;# 
  7139  0F10                     	;# 
  7140  0F11                     	;# 
  7141  0F12                     	;# 
  7142  0F13                     	;# 
  7143  0F14                     	;# 
  7144  0F15                     	;# 
  7145  0F16                     	;# 
  7146  0F17                     	;# 
  7147  0F18                     	;# 
  7148  0F19                     	;# 
  7149  0F1A                     	;# 
  7150  0F1B                     	;# 
  7151  0F1C                     	;# 
  7152  0F1D                     	;# 
  7153  0F1E                     	;# 
  7154  0F1F                     	;# 
  7155  0F20                     	;# 
  7156  0F21                     	;# 
  7157  0F22                     	;# 
  7158  0F23                     	;# 
  7159  0F24                     	;# 
  7160  0F25                     	;# 
  7161  0F26                     	;# 
  7162  0F27                     	;# 
  7163  0F28                     	;# 
  7164  0F29                     	;# 
  7165  0F2A                     	;# 
  7166  0F2B                     	;# 
  7167  0F2C                     	;# 
  7168  0F2D                     	;# 
  7169  0F2E                     	;# 
  7170  0F2F                     	;# 
  7171  0F30                     	;# 
  7172  0F31                     	;# 
  7173  0F32                     	;# 
  7174  0F38                     	;# 
  7175  0F39                     	;# 
  7176  0F3A                     	;# 
  7177  0F3B                     	;# 
  7178  0F3C                     	;# 
  7179  0F3D                     	;# 
  7180  0F3E                     	;# 
  7181  0F3F                     	;# 
  7182  0F40                     	;# 
  7183  0F41                     	;# 
  7184  0F43                     	;# 
  7185  0F44                     	;# 
  7186  0F45                     	;# 
  7187  0F46                     	;# 
  7188  0F47                     	;# 
  7189  0F48                     	;# 
  7190  0F49                     	;# 
  7191  0F4A                     	;# 
  7192  0F4B                     	;# 
  7193  0F4C                     	;# 
  7194  0F4E                     	;# 
  7195  0F4F                     	;# 
  7196  0F50                     	;# 
  7197  0F51                     	;# 
  7198  0F52                     	;# 
  7199  0F53                     	;# 
  7200  0F54                     	;# 
  7201  0F55                     	;# 
  7202  0F56                     	;# 
  7203  0F57                     	;# 
  7204  0F59                     	;# 
  7205  0F5A                     	;# 
  7206  0F5B                     	;# 
  7207  0F5C                     	;# 
  7208  0F5D                     	;# 
  7209  0F61                     	;# 
  7210  0F62                     	;# 
  7211  0F64                     	;# 
  7212  0F65                     	;# 
  7213  0F66                     	;# 
  7214  0F67                     	;# 
  7215  0F68                     	;# 
  7216  0F69                     	;# 
  7217  0F6A                     	;# 
  7218  0F6B                     	;# 
  7219  0F6C                     	;# 
  7220  0F6D                     	;# 
  7221  0FE4                     	;# 
  7222  0FE5                     	;# 
  7223  0FE6                     	;# 
  7224  0FE7                     	;# 
  7225  0FE8                     	;# 
  7226  0FE9                     	;# 
  7227  0FEA                     	;# 
  7228  0FEB                     	;# 
  7229  0FED                     	;# 
  7230  0FEE                     	;# 
  7231  0FEF                     	;# 
  7232  0000                     	;# 
  7233  0001                     	;# 
  7234  0002                     	;# 
  7235  0003                     	;# 
  7236  0004                     	;# 
  7237  0005                     	;# 
  7238  0006                     	;# 
  7239  0007                     	;# 
  7240  0008                     	;# 
  7241  0009                     	;# 
  7242  000A                     	;# 
  7243  000B                     	;# 
  7244  000C                     	;# 
  7245  000D                     	;# 
  7246  000E                     	;# 
  7247  000F                     	;# 
  7248  0010                     	;# 
  7249  0011                     	;# 
  7250  0012                     	;# 
  7251  0013                     	;# 
  7252  0014                     	;# 
  7253  0015                     	;# 
  7254  0016                     	;# 
  7255  0017                     	;# 
  7256  0018                     	;# 
  7257  0019                     	;# 
  7258  001A                     	;# 
  7259  001C                     	;# 
  7260  001C                     	;# 
  7261  001D                     	;# 
  7262  001D                     	;# 
  7263  001E                     	;# 
  7264  001F                     	;# 
  7265  008C                     	;# 
  7266  008C                     	;# 
  7267  008D                     	;# 
  7268  008E                     	;# 
  7269  008E                     	;# 
  7270  008F                     	;# 
  7271  0090                     	;# 
  7272  0090                     	;# 
  7273  0091                     	;# 
  7274  0093                     	;# 
  7275  0094                     	;# 
  7276  0095                     	;# 
  7277  0096                     	;# 
  7278  0097                     	;# 
  7279  0098                     	;# 
  7280  0099                     	;# 
  7281  009A                     	;# 
  7282  009B                     	;# 
  7283  009C                     	;# 
  7284  009D                     	;# 
  7285  009E                     	;# 
  7286  010C                     	;# 
  7287  010D                     	;# 
  7288  010E                     	;# 
  7289  010E                     	;# 
  7290  010F                     	;# 
  7291  0110                     	;# 
  7292  0110                     	;# 
  7293  0111                     	;# 
  7294  0112                     	;# 
  7295  0112                     	;# 
  7296  0113                     	;# 
  7297  0114                     	;# 
  7298  0114                     	;# 
  7299  0115                     	;# 
  7300  0116                     	;# 
  7301  0116                     	;# 
  7302  0117                     	;# 
  7303  0119                     	;# 
  7304  0119                     	;# 
  7305  0119                     	;# 
  7306  011A                     	;# 
  7307  011A                     	;# 
  7308  011A                     	;# 
  7309  011B                     	;# 
  7310  011B                     	;# 
  7311  011B                     	;# 
  7312  011B                     	;# 
  7313  011B                     	;# 
  7314  011C                     	;# 
  7315  011C                     	;# 
  7316  011C                     	;# 
  7317  011D                     	;# 
  7318  011D                     	;# 
  7319  011D                     	;# 
  7320  011E                     	;# 
  7321  011E                     	;# 
  7322  011E                     	;# 
  7323  011F                     	;# 
  7324  011F                     	;# 
  7325  011F                     	;# 
  7326  011F                     	;# 
  7327  011F                     	;# 
  7328  018C                     	;# 
  7329  018D                     	;# 
  7330  018E                     	;# 
  7331  018F                     	;# 
  7332  0190                     	;# 
  7333  0191                     	;# 
  7334  0192                     	;# 
  7335  0196                     	;# 
  7336  0197                     	;# 
  7337  0198                     	;# 
  7338  0199                     	;# 
  7339  019A                     	;# 
  7340  019B                     	;# 
  7341  019C                     	;# 
  7342  020C                     	;# 
  7343  020C                     	;# 
  7344  020D                     	;# 
  7345  020E                     	;# 
  7346  020F                     	;# 
  7347  020F                     	;# 
  7348  0210                     	;# 
  7349  0210                     	;# 
  7350  0211                     	;# 
  7351  0211                     	;# 
  7352  0212                     	;# 
  7353  0212                     	;# 
  7354  0213                     	;# 
  7355  0214                     	;# 
  7356  0215                     	;# 
  7357  0215                     	;# 
  7358  0216                     	;# 
  7359  0216                     	;# 
  7360  0217                     	;# 
  7361  0217                     	;# 
  7362  0218                     	;# 
  7363  0218                     	;# 
  7364  0219                     	;# 
  7365  021A                     	;# 
  7366  021B                     	;# 
  7367  021B                     	;# 
  7368  021C                     	;# 
  7369  021C                     	;# 
  7370  021D                     	;# 
  7371  021D                     	;# 
  7372  021E                     	;# 
  7373  021F                     	;# 
  7374  028C                     	;# 
  7375  028C                     	;# 
  7376  028D                     	;# 
  7377  028D                     	;# 
  7378  028E                     	;# 
  7379  028F                     	;# 
  7380  0290                     	;# 
  7381  0290                     	;# 
  7382  0291                     	;# 
  7383  0292                     	;# 
  7384  0292                     	;# 
  7385  0293                     	;# 
  7386  0293                     	;# 
  7387  0294                     	;# 
  7388  0295                     	;# 
  7389  0296                     	;# 
  7390  0296                     	;# 
  7391  0297                     	;# 
  7392  0298                     	;# 
  7393  0298                     	;# 
  7394  0299                     	;# 
  7395  0299                     	;# 
  7396  029A                     	;# 
  7397  029B                     	;# 
  7398  029C                     	;# 
  7399  029C                     	;# 
  7400  029D                     	;# 
  7401  030C                     	;# 
  7402  030C                     	;# 
  7403  030D                     	;# 
  7404  030E                     	;# 
  7405  030F                     	;# 
  7406  0310                     	;# 
  7407  0310                     	;# 
  7408  0311                     	;# 
  7409  0312                     	;# 
  7410  0313                     	;# 
  7411  0314                     	;# 
  7412  0314                     	;# 
  7413  0315                     	;# 
  7414  0316                     	;# 
  7415  0317                     	;# 
  7416  0318                     	;# 
  7417  0318                     	;# 
  7418  0319                     	;# 
  7419  031A                     	;# 
  7420  031B                     	;# 
  7421  031C                     	;# 
  7422  031C                     	;# 
  7423  031D                     	;# 
  7424  031E                     	;# 
  7425  031F                     	;# 
  7426  038C                     	;# 
  7427  038C                     	;# 
  7428  038D                     	;# 
  7429  038E                     	;# 
  7430  0390                     	;# 
  7431  0390                     	;# 
  7432  0391                     	;# 
  7433  0392                     	;# 
  7434  040C                     	;# 
  7435  040D                     	;# 
  7436  040E                     	;# 
  7437  040F                     	;# 
  7438  0410                     	;# 
  7439  0411                     	;# 
  7440  0416                     	;# 
  7441  0416                     	;# 
  7442  0417                     	;# 
  7443  0418                     	;# 
  7444  0418                     	;# 
  7445  0419                     	;# 
  7446  041A                     	;# 
  7447  041A                     	;# 
  7448  041B                     	;# 
  7449  041C                     	;# 
  7450  041C                     	;# 
  7451  041D                     	;# 
  7452  041E                     	;# 
  7453  041F                     	;# 
  7454  048C                     	;# 
  7455  048C                     	;# 
  7456  048D                     	;# 
  7457  048E                     	;# 
  7458  048F                     	;# 
  7459  048F                     	;# 
  7460  0490                     	;# 
  7461  0491                     	;# 
  7462  0492                     	;# 
  7463  0492                     	;# 
  7464  0493                     	;# 
  7465  0494                     	;# 
  7466  0495                     	;# 
  7467  0495                     	;# 
  7468  0496                     	;# 
  7469  0497                     	;# 
  7470  0498                     	;# 
  7471  0499                     	;# 
  7472  049A                     	;# 
  7473  049B                     	;# 
  7474  049C                     	;# 
  7475  049D                     	;# 
  7476  050C                     	;# 
  7477  050C                     	;# 
  7478  050D                     	;# 
  7479  050E                     	;# 
  7480  050F                     	;# 
  7481  050F                     	;# 
  7482  0510                     	;# 
  7483  0511                     	;# 
  7484  0512                     	;# 
  7485  0512                     	;# 
  7486  0513                     	;# 
  7487  0514                     	;# 
  7488  0515                     	;# 
  7489  0515                     	;# 
  7490  0516                     	;# 
  7491  0517                     	;# 
  7492  0518                     	;# 
  7493  0519                     	;# 
  7494  051A                     	;# 
  7495  051B                     	;# 
  7496  051C                     	;# 
  7497  051D                     	;# 
  7498  058C                     	;# 
  7499  058C                     	;# 
  7500  058D                     	;# 
  7501  058E                     	;# 
  7502  058F                     	;# 
  7503  058F                     	;# 
  7504  0590                     	;# 
  7505  0591                     	;# 
  7506  0592                     	;# 
  7507  0593                     	;# 
  7508  060C                     	;# 
  7509  060D                     	;# 
  7510  060E                     	;# 
  7511  060F                     	;# 
  7512  0610                     	;# 
  7513  0611                     	;# 
  7514  0612                     	;# 
  7515  0613                     	;# 
  7516  0614                     	;# 
  7517  0616                     	;# 
  7518  0617                     	;# 
  7519  0618                     	;# 
  7520  0619                     	;# 
  7521  061A                     	;# 
  7522  061B                     	;# 
  7523  061C                     	;# 
  7524  061D                     	;# 
  7525  061E                     	;# 
  7526  068C                     	;# 
  7527  068D                     	;# 
  7528  068E                     	;# 
  7529  068F                     	;# 
  7530  0690                     	;# 
  7531  0691                     	;# 
  7532  0692                     	;# 
  7533  0693                     	;# 
  7534  0694                     	;# 
  7535  070C                     	;# 
  7536  070D                     	;# 
  7537  070E                     	;# 
  7538  070F                     	;# 
  7539  0710                     	;# 
  7540  0711                     	;# 
  7541  0712                     	;# 
  7542  0713                     	;# 
  7543  0714                     	;# 
  7544  0716                     	;# 
  7545  0717                     	;# 
  7546  0718                     	;# 
  7547  0719                     	;# 
  7548  071A                     	;# 
  7549  071B                     	;# 
  7550  071C                     	;# 
  7551  071D                     	;# 
  7552  071E                     	;# 
  7553  0796                     	;# 
  7554  0797                     	;# 
  7555  0798                     	;# 
  7556  0799                     	;# 
  7557  079A                     	;# 
  7558  079B                     	;# 
  7559  080C                     	;# 
  7560  080D                     	;# 
  7561  080E                     	;# 
  7562  080F                     	;# 
  7563  0810                     	;# 
  7564  0811                     	;# 
  7565  0812                     	;# 
  7566  0813                     	;# 
  7567  0814                     	;# 
  7568  081A                     	;# 
  7569  081B                     	;# 
  7570  081C                     	;# 
  7571  081D                     	;# 
  7572  081E                     	;# 
  7573  081F                     	;# 
  7574  088C                     	;# 
  7575  088D                     	;# 
  7576  088E                     	;# 
  7577  088F                     	;# 
  7578  0890                     	;# 
  7579  0891                     	;# 
  7580  0892                     	;# 
  7581  0893                     	;# 
  7582  0895                     	;# 
  7583  0896                     	;# 
  7584  0897                     	;# 
  7585  0898                     	;# 
  7586  0899                     	;# 
  7587  089A                     	;# 
  7588  089B                     	;# 
  7589  090C                     	;# 
  7590  090E                     	;# 
  7591  090F                     	;# 
  7592  091F                     	;# 
  7593  091F                     	;# 
  7594  098F                     	;# 
  7595  098F                     	;# 
  7596  0990                     	;# 
  7597  0991                     	;# 
  7598  0992                     	;# 
  7599  0993                     	;# 
  7600  0994                     	;# 
  7601  0995                     	;# 
  7602  0996                     	;# 
  7603  0997                     	;# 
  7604  0E0F                     	;# 
  7605  0E10                     	;# 
  7606  0E11                     	;# 
  7607  0E12                     	;# 
  7608  0E13                     	;# 
  7609  0E14                     	;# 
  7610  0E15                     	;# 
  7611  0E16                     	;# 
  7612  0E17                     	;# 
  7613  0E18                     	;# 
  7614  0E19                     	;# 
  7615  0E1A                     	;# 
  7616  0E1B                     	;# 
  7617  0E1C                     	;# 
  7618  0E1D                     	;# 
  7619  0E1E                     	;# 
  7620  0E1F                     	;# 
  7621  0E20                     	;# 
  7622  0E21                     	;# 
  7623  0E22                     	;# 
  7624  0E23                     	;# 
  7625  0E24                     	;# 
  7626  0E25                     	;# 
  7627  0E26                     	;# 
  7628  0E27                     	;# 
  7629  0E28                     	;# 
  7630  0E29                     	;# 
  7631  0E2A                     	;# 
  7632  0E2B                     	;# 
  7633  0E2C                     	;# 
  7634  0E2D                     	;# 
  7635  0E2E                     	;# 
  7636  0E2F                     	;# 
  7637  0E30                     	;# 
  7638  0E31                     	;# 
  7639  0E32                     	;# 
  7640  0E33                     	;# 
  7641  0E34                     	;# 
  7642  0E35                     	;# 
  7643  0E36                     	;# 
  7644  0E37                     	;# 
  7645  0E8F                     	;# 
  7646  0E90                     	;# 
  7647  0E91                     	;# 
  7648  0E92                     	;# 
  7649  0E93                     	;# 
  7650  0E94                     	;# 
  7651  0E95                     	;# 
  7652  0E96                     	;# 
  7653  0E97                     	;# 
  7654  0E9C                     	;# 
  7655  0E9D                     	;# 
  7656  0E9E                     	;# 
  7657  0EA1                     	;# 
  7658  0EA2                     	;# 
  7659  0EA3                     	;# 
  7660  0EA4                     	;# 
  7661  0EA5                     	;# 
  7662  0EA9                     	;# 
  7663  0EAA                     	;# 
  7664  0EAB                     	;# 
  7665  0EAC                     	;# 
  7666  0EB1                     	;# 
  7667  0EB2                     	;# 
  7668  0EB3                     	;# 
  7669  0EB8                     	;# 
  7670  0EB9                     	;# 
  7671  0EBA                     	;# 
  7672  0EBB                     	;# 
  7673  0EBC                     	;# 
  7674  0EBD                     	;# 
  7675  0EBE                     	;# 
  7676  0EC3                     	;# 
  7677  0EC5                     	;# 
  7678  0EC6                     	;# 
  7679  0EC7                     	;# 
  7680  0EC8                     	;# 
  7681  0EC9                     	;# 
  7682  0ECA                     	;# 
  7683  0ECB                     	;# 
  7684  0ECC                     	;# 
  7685  0F10                     	;# 
  7686  0F11                     	;# 
  7687  0F12                     	;# 
  7688  0F13                     	;# 
  7689  0F14                     	;# 
  7690  0F15                     	;# 
  7691  0F16                     	;# 
  7692  0F17                     	;# 
  7693  0F18                     	;# 
  7694  0F19                     	;# 
  7695  0F1A                     	;# 
  7696  0F1B                     	;# 
  7697  0F1C                     	;# 
  7698  0F1D                     	;# 
  7699  0F1E                     	;# 
  7700  0F1F                     	;# 
  7701  0F20                     	;# 
  7702  0F21                     	;# 
  7703  0F22                     	;# 
  7704  0F23                     	;# 
  7705  0F24                     	;# 
  7706  0F25                     	;# 
  7707  0F26                     	;# 
  7708  0F27                     	;# 
  7709  0F28                     	;# 
  7710  0F29                     	;# 
  7711  0F2A                     	;# 
  7712  0F2B                     	;# 
  7713  0F2C                     	;# 
  7714  0F2D                     	;# 
  7715  0F2E                     	;# 
  7716  0F2F                     	;# 
  7717  0F30                     	;# 
  7718  0F31                     	;# 
  7719  0F32                     	;# 
  7720  0F38                     	;# 
  7721  0F39                     	;# 
  7722  0F3A                     	;# 
  7723  0F3B                     	;# 
  7724  0F3C                     	;# 
  7725  0F3D                     	;# 
  7726  0F3E                     	;# 
  7727  0F3F                     	;# 
  7728  0F40                     	;# 
  7729  0F41                     	;# 
  7730  0F43                     	;# 
  7731  0F44                     	;# 
  7732  0F45                     	;# 
  7733  0F46                     	;# 
  7734  0F47                     	;# 
  7735  0F48                     	;# 
  7736  0F49                     	;# 
  7737  0F4A                     	;# 
  7738  0F4B                     	;# 
  7739  0F4C                     	;# 
  7740  0F4E                     	;# 
  7741  0F4F                     	;# 
  7742  0F50                     	;# 
  7743  0F51                     	;# 
  7744  0F52                     	;# 
  7745  0F53                     	;# 
  7746  0F54                     	;# 
  7747  0F55                     	;# 
  7748  0F56                     	;# 
  7749  0F57                     	;# 
  7750  0F59                     	;# 
  7751  0F5A                     	;# 
  7752  0F5B                     	;# 
  7753  0F5C                     	;# 
  7754  0F5D                     	;# 
  7755  0F61                     	;# 
  7756  0F62                     	;# 
  7757  0F64                     	;# 
  7758  0F65                     	;# 
  7759  0F66                     	;# 
  7760  0F67                     	;# 
  7761  0F68                     	;# 
  7762  0F69                     	;# 
  7763  0F6A                     	;# 
  7764  0F6B                     	;# 
  7765  0F6C                     	;# 
  7766  0F6D                     	;# 
  7767  0FE4                     	;# 
  7768  0FE5                     	;# 
  7769  0FE6                     	;# 
  7770  0FE7                     	;# 
  7771  0FE8                     	;# 
  7772  0FE9                     	;# 
  7773  0FEA                     	;# 
  7774  0FEB                     	;# 
  7775  0FED                     	;# 
  7776  0FEE                     	;# 
  7777  0FEF                     	;# 
  7778  0000                     	;# 
  7779  0001                     	;# 
  7780  0002                     	;# 
  7781  0003                     	;# 
  7782  0004                     	;# 
  7783  0005                     	;# 
  7784  0006                     	;# 
  7785  0007                     	;# 
  7786  0008                     	;# 
  7787  0009                     	;# 
  7788  000A                     	;# 
  7789  000B                     	;# 
  7790  000C                     	;# 
  7791  000D                     	;# 
  7792  000E                     	;# 
  7793  000F                     	;# 
  7794  0010                     	;# 
  7795  0011                     	;# 
  7796  0012                     	;# 
  7797  0013                     	;# 
  7798  0014                     	;# 
  7799  0015                     	;# 
  7800  0016                     	;# 
  7801  0017                     	;# 
  7802  0018                     	;# 
  7803  0019                     	;# 
  7804  001A                     	;# 
  7805  001C                     	;# 
  7806  001C                     	;# 
  7807  001D                     	;# 
  7808  001D                     	;# 
  7809  001E                     	;# 
  7810  001F                     	;# 
  7811  008C                     	;# 
  7812  008C                     	;# 
  7813  008D                     	;# 
  7814  008E                     	;# 
  7815  008E                     	;# 
  7816  008F                     	;# 
  7817  0090                     	;# 
  7818  0090                     	;# 
  7819  0091                     	;# 
  7820  0093                     	;# 
  7821  0094                     	;# 
  7822  0095                     	;# 
  7823  0096                     	;# 
  7824  0097                     	;# 
  7825  0098                     	;# 
  7826  0099                     	;# 
  7827  009A                     	;# 
  7828  009B                     	;# 
  7829  009C                     	;# 
  7830  009D                     	;# 
  7831  009E                     	;# 
  7832  010C                     	;# 
  7833  010D                     	;# 
  7834  010E                     	;# 
  7835  010E                     	;# 
  7836  010F                     	;# 
  7837  0110                     	;# 
  7838  0110                     	;# 
  7839  0111                     	;# 
  7840  0112                     	;# 
  7841  0112                     	;# 
  7842  0113                     	;# 
  7843  0114                     	;# 
  7844  0114                     	;# 
  7845  0115                     	;# 
  7846  0116                     	;# 
  7847  0116                     	;# 
  7848  0117                     	;# 
  7849  0119                     	;# 
  7850  0119                     	;# 
  7851  0119                     	;# 
  7852  011A                     	;# 
  7853  011A                     	;# 
  7854  011A                     	;# 
  7855  011B                     	;# 
  7856  011B                     	;# 
  7857  011B                     	;# 
  7858  011B                     	;# 
  7859  011B                     	;# 
  7860  011C                     	;# 
  7861  011C                     	;# 
  7862  011C                     	;# 
  7863  011D                     	;# 
  7864  011D                     	;# 
  7865  011D                     	;# 
  7866  011E                     	;# 
  7867  011E                     	;# 
  7868  011E                     	;# 
  7869  011F                     	;# 
  7870  011F                     	;# 
  7871  011F                     	;# 
  7872  011F                     	;# 
  7873  011F                     	;# 
  7874  018C                     	;# 
  7875  018D                     	;# 
  7876  018E                     	;# 
  7877  018F                     	;# 
  7878  0190                     	;# 
  7879  0191                     	;# 
  7880  0192                     	;# 
  7881  0196                     	;# 
  7882  0197                     	;# 
  7883  0198                     	;# 
  7884  0199                     	;# 
  7885  019A                     	;# 
  7886  019B                     	;# 
  7887  019C                     	;# 
  7888  020C                     	;# 
  7889  020C                     	;# 
  7890  020D                     	;# 
  7891  020E                     	;# 
  7892  020F                     	;# 
  7893  020F                     	;# 
  7894  0210                     	;# 
  7895  0210                     	;# 
  7896  0211                     	;# 
  7897  0211                     	;# 
  7898  0212                     	;# 
  7899  0212                     	;# 
  7900  0213                     	;# 
  7901  0214                     	;# 
  7902  0215                     	;# 
  7903  0215                     	;# 
  7904  0216                     	;# 
  7905  0216                     	;# 
  7906  0217                     	;# 
  7907  0217                     	;# 
  7908  0218                     	;# 
  7909  0218                     	;# 
  7910  0219                     	;# 
  7911  021A                     	;# 
  7912  021B                     	;# 
  7913  021B                     	;# 
  7914  021C                     	;# 
  7915  021C                     	;# 
  7916  021D                     	;# 
  7917  021D                     	;# 
  7918  021E                     	;# 
  7919  021F                     	;# 
  7920  028C                     	;# 
  7921  028C                     	;# 
  7922  028D                     	;# 
  7923  028D                     	;# 
  7924  028E                     	;# 
  7925  028F                     	;# 
  7926  0290                     	;# 
  7927  0290                     	;# 
  7928  0291                     	;# 
  7929  0292                     	;# 
  7930  0292                     	;# 
  7931  0293                     	;# 
  7932  0293                     	;# 
  7933  0294                     	;# 
  7934  0295                     	;# 
  7935  0296                     	;# 
  7936  0296                     	;# 
  7937  0297                     	;# 
  7938  0298                     	;# 
  7939  0298                     	;# 
  7940  0299                     	;# 
  7941  0299                     	;# 
  7942  029A                     	;# 
  7943  029B                     	;# 
  7944  029C                     	;# 
  7945  029C                     	;# 
  7946  029D                     	;# 
  7947  030C                     	;# 
  7948  030C                     	;# 
  7949  030D                     	;# 
  7950  030E                     	;# 
  7951  030F                     	;# 
  7952  0310                     	;# 
  7953  0310                     	;# 
  7954  0311                     	;# 
  7955  0312                     	;# 
  7956  0313                     	;# 
  7957  0314                     	;# 
  7958  0314                     	;# 
  7959  0315                     	;# 
  7960  0316                     	;# 
  7961  0317                     	;# 
  7962  0318                     	;# 
  7963  0318                     	;# 
  7964  0319                     	;# 
  7965  031A                     	;# 
  7966  031B                     	;# 
  7967  031C                     	;# 
  7968  031C                     	;# 
  7969  031D                     	;# 
  7970  031E                     	;# 
  7971  031F                     	;# 
  7972  038C                     	;# 
  7973  038C                     	;# 
  7974  038D                     	;# 
  7975  038E                     	;# 
  7976  0390                     	;# 
  7977  0390                     	;# 
  7978  0391                     	;# 
  7979  0392                     	;# 
  7980  040C                     	;# 
  7981  040D                     	;# 
  7982  040E                     	;# 
  7983  040F                     	;# 
  7984  0410                     	;# 
  7985  0411                     	;# 
  7986  0416                     	;# 
  7987  0416                     	;# 
  7988  0417                     	;# 
  7989  0418                     	;# 
  7990  0418                     	;# 
  7991  0419                     	;# 
  7992  041A                     	;# 
  7993  041A                     	;# 
  7994  041B                     	;# 
  7995  041C                     	;# 
  7996  041C                     	;# 
  7997  041D                     	;# 
  7998  041E                     	;# 
  7999  041F                     	;# 
  8000  048C                     	;# 
  8001  048C                     	;# 
  8002  048D                     	;# 
  8003  048E                     	;# 
  8004  048F                     	;# 
  8005  048F                     	;# 
  8006  0490                     	;# 
  8007  0491                     	;# 
  8008  0492                     	;# 
  8009  0492                     	;# 
  8010  0493                     	;# 
  8011  0494                     	;# 
  8012  0495                     	;# 
  8013  0495                     	;# 
  8014  0496                     	;# 
  8015  0497                     	;# 
  8016  0498                     	;# 
  8017  0499                     	;# 
  8018  049A                     	;# 
  8019  049B                     	;# 
  8020  049C                     	;# 
  8021  049D                     	;# 
  8022  050C                     	;# 
  8023  050C                     	;# 
  8024  050D                     	;# 
  8025  050E                     	;# 
  8026  050F                     	;# 
  8027  050F                     	;# 
  8028  0510                     	;# 
  8029  0511                     	;# 
  8030  0512                     	;# 
  8031  0512                     	;# 
  8032  0513                     	;# 
  8033  0514                     	;# 
  8034  0515                     	;# 
  8035  0515                     	;# 
  8036  0516                     	;# 
  8037  0517                     	;# 
  8038  0518                     	;# 
  8039  0519                     	;# 
  8040  051A                     	;# 
  8041  051B                     	;# 
  8042  051C                     	;# 
  8043  051D                     	;# 
  8044  058C                     	;# 
  8045  058C                     	;# 
  8046  058D                     	;# 
  8047  058E                     	;# 
  8048  058F                     	;# 
  8049  058F                     	;# 
  8050  0590                     	;# 
  8051  0591                     	;# 
  8052  0592                     	;# 
  8053  0593                     	;# 
  8054  060C                     	;# 
  8055  060D                     	;# 
  8056  060E                     	;# 
  8057  060F                     	;# 
  8058  0610                     	;# 
  8059  0611                     	;# 
  8060  0612                     	;# 
  8061  0613                     	;# 
  8062  0614                     	;# 
  8063  0616                     	;# 
  8064  0617                     	;# 
  8065  0618                     	;# 
  8066  0619                     	;# 
  8067  061A                     	;# 
  8068  061B                     	;# 
  8069  061C                     	;# 
  8070  061D                     	;# 
  8071  061E                     	;# 
  8072  068C                     	;# 
  8073  068D                     	;# 
  8074  068E                     	;# 
  8075  068F                     	;# 
  8076  0690                     	;# 
  8077  0691                     	;# 
  8078  0692                     	;# 
  8079  0693                     	;# 
  8080  0694                     	;# 
  8081  070C                     	;# 
  8082  070D                     	;# 
  8083  070E                     	;# 
  8084  070F                     	;# 
  8085  0710                     	;# 
  8086  0711                     	;# 
  8087  0712                     	;# 
  8088  0713                     	;# 
  8089  0714                     	;# 
  8090  0716                     	;# 
  8091  0717                     	;# 
  8092  0718                     	;# 
  8093  0719                     	;# 
  8094  071A                     	;# 
  8095  071B                     	;# 
  8096  071C                     	;# 
  8097  071D                     	;# 
  8098  071E                     	;# 
  8099  0796                     	;# 
  8100  0797                     	;# 
  8101  0798                     	;# 
  8102  0799                     	;# 
  8103  079A                     	;# 
  8104  079B                     	;# 
  8105  080C                     	;# 
  8106  080D                     	;# 
  8107  080E                     	;# 
  8108  080F                     	;# 
  8109  0810                     	;# 
  8110  0811                     	;# 
  8111  0812                     	;# 
  8112  0813                     	;# 
  8113  0814                     	;# 
  8114  081A                     	;# 
  8115  081B                     	;# 
  8116  081C                     	;# 
  8117  081D                     	;# 
  8118  081E                     	;# 
  8119  081F                     	;# 
  8120  088C                     	;# 
  8121  088D                     	;# 
  8122  088E                     	;# 
  8123  088F                     	;# 
  8124  0890                     	;# 
  8125  0891                     	;# 
  8126  0892                     	;# 
  8127  0893                     	;# 
  8128  0895                     	;# 
  8129  0896                     	;# 
  8130  0897                     	;# 
  8131  0898                     	;# 
  8132  0899                     	;# 
  8133  089A                     	;# 
  8134  089B                     	;# 
  8135  090C                     	;# 
  8136  090E                     	;# 
  8137  090F                     	;# 
  8138  091F                     	;# 
  8139  091F                     	;# 
  8140  098F                     	;# 
  8141  098F                     	;# 
  8142  0990                     	;# 
  8143  0991                     	;# 
  8144  0992                     	;# 
  8145  0993                     	;# 
  8146  0994                     	;# 
  8147  0995                     	;# 
  8148  0996                     	;# 
  8149  0997                     	;# 
  8150  0E0F                     	;# 
  8151  0E10                     	;# 
  8152  0E11                     	;# 
  8153  0E12                     	;# 
  8154  0E13                     	;# 
  8155  0E14                     	;# 
  8156  0E15                     	;# 
  8157  0E16                     	;# 
  8158  0E17                     	;# 
  8159  0E18                     	;# 
  8160  0E19                     	;# 
  8161  0E1A                     	;# 
  8162  0E1B                     	;# 
  8163  0E1C                     	;# 
  8164  0E1D                     	;# 
  8165  0E1E                     	;# 
  8166  0E1F                     	;# 
  8167  0E20                     	;# 
  8168  0E21                     	;# 
  8169  0E22                     	;# 
  8170  0E23                     	;# 
  8171  0E24                     	;# 
  8172  0E25                     	;# 
  8173  0E26                     	;# 
  8174  0E27                     	;# 
  8175  0E28                     	;# 
  8176  0E29                     	;# 
  8177  0E2A                     	;# 
  8178  0E2B                     	;# 
  8179  0E2C                     	;# 
  8180  0E2D                     	;# 
  8181  0E2E                     	;# 
  8182  0E2F                     	;# 
  8183  0E30                     	;# 
  8184  0E31                     	;# 
  8185  0E32                     	;# 
  8186  0E33                     	;# 
  8187  0E34                     	;# 
  8188  0E35                     	;# 
  8189  0E36                     	;# 
  8190  0E37                     	;# 
  8191  0E8F                     	;# 
  8192  0E90                     	;# 
  8193  0E91                     	;# 
  8194  0E92                     	;# 
  8195  0E93                     	;# 
  8196  0E94                     	;# 
  8197  0E95                     	;# 
  8198  0E96                     	;# 
  8199  0E97                     	;# 
  8200  0E9C                     	;# 
  8201  0E9D                     	;# 
  8202  0E9E                     	;# 
  8203  0EA1                     	;# 
  8204  0EA2                     	;# 
  8205  0EA3                     	;# 
  8206  0EA4                     	;# 
  8207  0EA5                     	;# 
  8208  0EA9                     	;# 
  8209  0EAA                     	;# 
  8210  0EAB                     	;# 
  8211  0EAC                     	;# 
  8212  0EB1                     	;# 
  8213  0EB2                     	;# 
  8214  0EB3                     	;# 
  8215  0EB8                     	;# 
  8216  0EB9                     	;# 
  8217  0EBA                     	;# 
  8218  0EBB                     	;# 
  8219  0EBC                     	;# 
  8220  0EBD                     	;# 
  8221  0EBE                     	;# 
  8222  0EC3                     	;# 
  8223  0EC5                     	;# 
  8224  0EC6                     	;# 
  8225  0EC7                     	;# 
  8226  0EC8                     	;# 
  8227  0EC9                     	;# 
  8228  0ECA                     	;# 
  8229  0ECB                     	;# 
  8230  0ECC                     	;# 
  8231  0F10                     	;# 
  8232  0F11                     	;# 
  8233  0F12                     	;# 
  8234  0F13                     	;# 
  8235  0F14                     	;# 
  8236  0F15                     	;# 
  8237  0F16                     	;# 
  8238  0F17                     	;# 
  8239  0F18                     	;# 
  8240  0F19                     	;# 
  8241  0F1A                     	;# 
  8242  0F1B                     	;# 
  8243  0F1C                     	;# 
  8244  0F1D                     	;# 
  8245  0F1E                     	;# 
  8246  0F1F                     	;# 
  8247  0F20                     	;# 
  8248  0F21                     	;# 
  8249  0F22                     	;# 
  8250  0F23                     	;# 
  8251  0F24                     	;# 
  8252  0F25                     	;# 
  8253  0F26                     	;# 
  8254  0F27                     	;# 
  8255  0F28                     	;# 
  8256  0F29                     	;# 
  8257  0F2A                     	;# 
  8258  0F2B                     	;# 
  8259  0F2C                     	;# 
  8260  0F2D                     	;# 
  8261  0F2E                     	;# 
  8262  0F2F                     	;# 
  8263  0F30                     	;# 
  8264  0F31                     	;# 
  8265  0F32                     	;# 
  8266  0F38                     	;# 
  8267  0F39                     	;# 
  8268  0F3A                     	;# 
  8269  0F3B                     	;# 
  8270  0F3C                     	;# 
  8271  0F3D                     	;# 
  8272  0F3E                     	;# 
  8273  0F3F                     	;# 
  8274  0F40                     	;# 
  8275  0F41                     	;# 
  8276  0F43                     	;# 
  8277  0F44                     	;# 
  8278  0F45                     	;# 
  8279  0F46                     	;# 
  8280  0F47                     	;# 
  8281  0F48                     	;# 
  8282  0F49                     	;# 
  8283  0F4A                     	;# 
  8284  0F4B                     	;# 
  8285  0F4C                     	;# 
  8286  0F4E                     	;# 
  8287  0F4F                     	;# 
  8288  0F50                     	;# 
  8289  0F51                     	;# 
  8290  0F52                     	;# 
  8291  0F53                     	;# 
  8292  0F54                     	;# 
  8293  0F55                     	;# 
  8294  0F56                     	;# 
  8295  0F57                     	;# 
  8296  0F59                     	;# 
  8297  0F5A                     	;# 
  8298  0F5B                     	;# 
  8299  0F5C                     	;# 
  8300  0F5D                     	;# 
  8301  0F61                     	;# 
  8302  0F62                     	;# 
  8303  0F64                     	;# 
  8304  0F65                     	;# 
  8305  0F66                     	;# 
  8306  0F67                     	;# 
  8307  0F68                     	;# 
  8308  0F69                     	;# 
  8309  0F6A                     	;# 
  8310  0F6B                     	;# 
  8311  0F6C                     	;# 
  8312  0F6D                     	;# 
  8313  0FE4                     	;# 
  8314  0FE5                     	;# 
  8315  0FE6                     	;# 
  8316  0FE7                     	;# 
  8317  0FE8                     	;# 
  8318  0FE9                     	;# 
  8319  0FEA                     	;# 
  8320  0FEB                     	;# 
  8321  0FED                     	;# 
  8322  0FEE                     	;# 
  8323  0FEF                     	;# 
  8324                           
  8325 ;; Function _rd1RegCompleteHandler is unused but had its address taken
  8326  0000                     
  8327 ;; Function _rd2RegCompleteHandler is unused but had its address taken
  8328  0000                     
  8329 ;; Function _wr1RegCompleteHandler is unused but had its address taken
  8330  0000                     
  8331 ;; Function _wr2RegCompleteHandler is unused but had its address taken
  8332  0000                     
  8333 ;; Function _rdBlkRegCompleteHandler is unused but had its address taken
  8334  0000                     
  8335 ;; Function _I2C1_DO_IDLE is unused but had its address taken
  8336  0000                     
  8337 ;; Function _I2C1_DO_SEND_ADR_READ is unused but had its address taken
  8338  0000                     
  8339 ;; Function _I2C1_DO_SEND_ADR_WRITE is unused but had its address taken
  8340  0000                     
  8341 ;; Function _I2C1_DO_TX is unused but had its address taken
  8342  0000                     
  8343 ;; Function _I2C1_DO_RX is unused but had its address taken
  8344  0000                     
  8345 ;; Function _I2C1_DO_RCEN is unused but had its address taken
  8346  0000                     
  8347 ;; Function _I2C1_DO_TX_EMPTY is unused but had its address taken
  8348  0000                     
  8349 ;; Function _I2C1_DO_SEND_RESTART_READ is unused but had its address taken
  8350  0000                     
  8351 ;; Function _I2C1_DO_SEND_RESTART_WRITE is unused but had its address taken
  8352  0000                     
  8353 ;; Function _I2C1_DO_SEND_RESTART is unused but had its address taken
  8354  0000                     
  8355 ;; Function _I2C1_DO_SEND_STOP is unused but had its address taken
  8356  0000                     
  8357 ;; Function _I2C1_DO_RX_ACK is unused but had its address taken
  8358  0000                     
  8359 ;; Function _I2C1_DO_RX_NACK_STOP is unused but had its address taken
  8360  0000                     
  8361 ;; Function _I2C1_DO_RX_NACK_RESTART is unused but had its address taken
  8362  0000                     
  8363 ;; Function _I2C1_DO_RESET is unused but had its address taken
  8364  0000                     
  8365 ;; Function _I2C1_DO_ADDRESS_NACK is unused but had its address taken
  8366  0000                     
  8367 ;; Function _I2C1_CallbackReturnStop is unused but had its address taken
  8368  0000                     
  8369 ;; Function _I2C1_CallbackReturnReset is unused but had its address taken
  8370  0000                     
  8371                           	psect	stringtext1
  8372  1800                     __pstringtext1:
  8373  1800                     _i2c1_fsmStateTable:
  8374  1800  3400               	retlw	0
  8375  1801  3400               	retlw	0
  8376  1802  3400               	retlw	0
  8377  1803  3400               	retlw	0
  8378  1804  3400               	retlw	0
  8379  1805  3400               	retlw	0
  8380  1806  3400               	retlw	0
  8381  1807  3400               	retlw	0
  8382  1808  3400               	retlw	0
  8383  1809  3400               	retlw	0
  8384  180A  3400               	retlw	0
  8385  180B  3400               	retlw	0
  8386  180C  3400               	retlw	0
  8387  180D  3400               	retlw	0
  8388  180E  3400               	retlw	0
  8389  180F  3400               	retlw	0
  8390  1810  3400               	retlw	0
  8391  1811  3400               	retlw	0
  8392  1812  3400               	retlw	0
  8393  1813  3400               	retlw	0
  8394  1814  3400               	retlw	0
  8395  1815  3400               	retlw	0
  8396  1816  3400               	retlw	0
  8397  1817  3400               	retlw	0
  8398  1818  3400               	retlw	0
  8399  1819  3400               	retlw	0
  8400  181A  3400               	retlw	0
  8401  181B  3400               	retlw	0
  8402  181C  3400               	retlw	0
  8403  181D  3400               	retlw	0
  8404  181E  3400               	retlw	0
  8405  181F  3400               	retlw	0
  8406  1820                     __end_of_i2c1_fsmStateTable:
  8407                           
  8408                           	psect	nvBANK1
  8409  00EC                     __pnvBANK1:
  8410  00EC                     _data_address:
  8411  00EC                     	ds	2
  8412  00EE                     _last_temperature:
  8413  00EE                     	ds	1
  8414  00EF                     _last_luminosity:
  8415  00EF                     	ds	1
  8416                           
  8417                           	psect	nvBANK2
  8418  015F                     __pnvBANK2:
  8419  015F                     _TMR2_InterruptHandler:
  8420  015F                     	ds	2
  8421  0161                     _TMR1_InterruptHandler:
  8422  0161                     	ds	2
  8423  0163                     _timer1ReloadVal:
  8424  0163                     	ds	2
  8425  0165                     _max_temperature:
  8426  0165                     	ds	1
  8427  0166                     _counter:
  8428  0166                     	ds	1
  8429  0167                     _max_luminosity:
  8430  0167                     	ds	1
  8431  000E                     _PORTCbits	set	14
  8432  000D                     _PORTBbits	set	13
  8433  0016                     _LATAbits	set	22
  8434  000C                     _PORTAbits	set	12
  8435  000B                     _INTCONbits	set	11
  8436  0014                     _TRISD	set	20
  8437  0013                     _TRISC	set	19
  8438  0012                     _TRISB	set	18
  8439  0011                     _TRISA	set	17
  8440  0015                     _TRISE	set	21
  8441  0018                     _LATC	set	24
  8442  0017                     _LATB	set	23
  8443  0016                     _LATA	set	22
  8444  0019                     _LATD	set	25
  8445  001A                     _LATE	set	26
  8446  0013                     _TRISCbits	set	19
  8447  0094                     _ADCON1bits	set	148
  8448  008E                     _ADPREVL	set	142
  8449  008F                     _ADPREVH	set	143
  8450  0097                     _ADSTATbits	set	151
  8451  0090                     _ADACCL	set	144
  8452  0091                     _ADACCH	set	145
  8453  0095                     _ADCON2bits	set	149
  8454  0096                     _ADCON3bits	set	150
  8455  008C                     _ADRESL	set	140
  8456  008D                     _ADRESH	set	141
  8457  0093                     _ADCON0bits	set	147
  8458  009D                     _ADACQ	set	157
  8459  0093                     _ADCON0	set	147
  8460  0098                     _ADCLK	set	152
  8461  0099                     _ADACT	set	153
  8462  009A                     _ADREF	set	154
  8463  0097                     _ADSTAT	set	151
  8464  0096                     _ADCON3	set	150
  8465  0095                     _ADCON2	set	149
  8466  0094                     _ADCON1	set	148
  8467  009C                     _ADPRE	set	156
  8468  009B                     _ADCAP	set	155
  8469  009E                     _ADPCH	set	158
  8470  0116                     _ADERRL	set	278
  8471  0117                     _ADERRH	set	279
  8472  0114                     _ADFLTRL	set	276
  8473  0115                     _ADFLTRH	set	277
  8474  010C                     _ADCNT	set	268
  8475  010D                     _ADRPT	set	269
  8476  0113                     _ADSTPTH	set	275
  8477  0112                     _ADSTPTL	set	274
  8478  0111                     _ADUTHH	set	273
  8479  0110                     _ADUTHL	set	272
  8480  010F                     _ADLTHH	set	271
  8481  010E                     _ADLTHL	set	270
  8482  018C                     _SSP1BUF	set	396
  8483  018F                     _SSP1STATbits	set	399
  8484  0191                     _SSP1CON2bits	set	401
  8485  0190                     _SSP1CON1bits	set	400
  8486  018D                     _SSP1ADD	set	397
  8487  0191                     _SSP1CON2	set	401
  8488  0190                     _SSP1CON1	set	400
  8489  018F                     _SSP1STAT	set	399
  8490  021F                     _CCPTMRS1bits	set	543
  8491  020F                     _T1GCONbits	set	527
  8492  020E                     _T1CONbits	set	526
  8493  020E                     _T1CON	set	526
  8494  020C                     _TMR1L	set	524
  8495  020D                     _TMR1H	set	525
  8496  0211                     _T1CLK	set	529
  8497  0210                     _T1GATE	set	528
  8498  020F                     _T1GCON	set	527
  8499  028D                     _PR2	set	653
  8500  028C                     _TMR2	set	652
  8501  028E                     _T2CONbits	set	654
  8502  0291                     _T2RSTbits	set	657
  8503  028F                     _T2HLTbits	set	655
  8504  028E                     _T2CON	set	654
  8505  028C                     _T2TMR	set	652
  8506  028D                     _T2PR	set	653
  8507  0291                     _T2RST	set	657
  8508  028F                     _T2HLT	set	655
  8509  0290                     _T2CLKCON	set	656
  8510  038C                     _PWM6DCL	set	908
  8511  038D                     _PWM6DCH	set	909
  8512  038E                     _PWM6CON	set	910
  8513  0719                     _PIE3bits	set	1817
  8514  0710                     _PIR4bits	set	1808
  8515  071A                     _PIE4bits	set	1818
  8516  070F                     _PIR3bits	set	1807
  8517  079B                     _PMD5	set	1947
  8518  079A                     _PMD4	set	1946
  8519  0799                     _PMD3	set	1945
  8520  0798                     _PMD2	set	1944
  8521  0797                     _PMD1	set	1943
  8522  0796                     _PMD0	set	1942
  8523  081E                     _NVMCON1	set	2078
  8524  081F                     _NVMCON2	set	2079
  8525  081C                     _NVMDATL	set	2076
  8526  081D                     _NVMDATH	set	2077
  8527  081E                     _NVMCON1bits	set	2078
  8528  081B                     _NVMADRH	set	2075
  8529  081A                     _NVMADRL	set	2074
  8530  0892                     _OSCTUNE	set	2194
  8531  0893                     _OSCFRQ	set	2195
  8532  0891                     _OSCEN	set	2193
  8533  088F                     _OSCCON3	set	2191
  8534  088D                     _OSCCON1	set	2189
  8535  0E8F                     _PPSLOCKbits	set	3727
  8536  0E8F                     _PPSLOCK	set	3727
  8537  0EC6                     _SSP1DATPPS	set	3782
  8538  0EC5                     _SSP1CLKPPS	set	3781
  8539  0F16                     _RA6PPS	set	3862
  8540  0F24                     _RC4PPS	set	3876
  8541  0F23                     _RC3PPS	set	3875
  8542  0F68                     _INLVLE	set	3944
  8543  0F5D                     _INLVLD	set	3933
  8544  0F52                     _INLVLC	set	3922
  8545  0F47                     _INLVLB	set	3911
  8546  0F3C                     _INLVLA	set	3900
  8547  0F67                     _SLRCONE	set	3943
  8548  0F5C                     _SLRCOND	set	3932
  8549  0F51                     _SLRCONC	set	3921
  8550  0F46                     _SLRCONB	set	3910
  8551  0F3B                     _SLRCONA	set	3899
  8552  0F5B                     _ODCOND	set	3931
  8553  0F50                     _ODCONC	set	3920
  8554  0F45                     _ODCONB	set	3909
  8555  0F3A                     _ODCONA	set	3898
  8556  0F66                     _ODCONE	set	3942
  8557  0F4F                     _WPUC	set	3919
  8558  0F39                     _WPUA	set	3897
  8559  0F44                     _WPUB	set	3908
  8560  0F65                     _WPUE	set	3941
  8561  0F5A                     _WPUD	set	3930
  8562  0F38                     _ANSELA	set	3896
  8563  0F64                     _ANSELE	set	3940
  8564  0F43                     _ANSELB	set	3907
  8565  0F4E                     _ANSELC	set	3918
  8566  0F59                     _ANSELD	set	3929
  8567                           
  8568                           	psect	stringtext2
  8569  1820                     __pstringtext2:
  8570  1820                     STR_4:
  8571  1820  3425               	retlw	37	;'%'
  8572  1821  3430               	retlw	48	;'0'
  8573  1822  3432               	retlw	50	;'2'
  8574  1823  3464               	retlw	100	;'d'
  8575  1824  343A               	retlw	58	;':'
  8576  1825  3425               	retlw	37	;'%'
  8577  1826  3430               	retlw	48	;'0'
  8578  1827  3432               	retlw	50	;'2'
  8579  1828  3464               	retlw	100	;'d'
  8580  1829  343A               	retlw	58	;':'
  8581  182A  3425               	retlw	37	;'%'
  8582  182B  3430               	retlw	48	;'0'
  8583  182C  3432               	retlw	50	;'2'
  8584  182D  3464               	retlw	100	;'d'
  8585  182E  3420               	retlw	32	;' '
  8586  182F  3420               	retlw	32	;' '
  8587  1830  3420               	retlw	32	;' '
  8588  1831  3420               	retlw	32	;' '
  8589  1832  3420               	retlw	32	;' '
  8590  1833  3420               	retlw	32	;' '
  8591  1834  3400               	retlw	0
  8592                           
  8593                           	psect	stringtext3
  8594  1835                     __pstringtext3:
  8595  1835                     STR_2:
  8596  1835  3425               	retlw	37	;'%'
  8597  1836  3430               	retlw	48	;'0'
  8598  1837  3432               	retlw	50	;'2'
  8599  1838  3464               	retlw	100	;'d'
  8600  1839  343A               	retlw	58	;':'
  8601  183A  3425               	retlw	37	;'%'
  8602  183B  3430               	retlw	48	;'0'
  8603  183C  3432               	retlw	50	;'2'
  8604  183D  3464               	retlw	100	;'d'
  8605  183E  343A               	retlw	58	;':'
  8606  183F  3425               	retlw	37	;'%'
  8607  1840  3430               	retlw	48	;'0'
  8608  1841  3432               	retlw	50	;'2'
  8609  1842  3464               	retlw	100	;'d'
  8610  1843  3420               	retlw	32	;' '
  8611  1844  3420               	retlw	32	;' '
  8612  1845  3420               	retlw	32	;' '
  8613  1846  3420               	retlw	32	;' '
  8614  1847  3420               	retlw	32	;' '
  8615  1848  3400               	retlw	0
  8616                           
  8617                           	psect	stringtext4
  8618  1849                     __pstringtext4:
  8619  1849                     STR_7:
  8620  1849  3425               	retlw	37	;'%'
  8621  184A  3430               	retlw	48	;'0'
  8622  184B  3432               	retlw	50	;'2'
  8623  184C  3464               	retlw	100	;'d'
  8624  184D  343A               	retlw	58	;':'
  8625  184E  3425               	retlw	37	;'%'
  8626  184F  3430               	retlw	48	;'0'
  8627  1850  3432               	retlw	50	;'2'
  8628  1851  3464               	retlw	100	;'d'
  8629  1852  343A               	retlw	58	;':'
  8630  1853  3425               	retlw	37	;'%'
  8631  1854  3430               	retlw	48	;'0'
  8632  1855  3432               	retlw	50	;'2'
  8633  1856  3464               	retlw	100	;'d'
  8634  1857  3400               	retlw	0
  8635                           
  8636                           	psect	stringtext5
  8637  1858                     __pstringtext5:
  8638  1858                     STR_5:
  8639  1858  3469               	retlw	105	;'i'
  8640  1859  346E               	retlw	110	;'n'
  8641  185A  3473               	retlw	115	;'s'
  8642  185B  3465               	retlw	101	;'e'
  8643  185C  3472               	retlw	114	;'r'
  8644  185D  3474               	retlw	116	;'t'
  8645  185E  3420               	retlw	32	;' '
  8646  185F  3473               	retlw	115	;'s'
  8647  1860  3465               	retlw	101	;'e'
  8648  1861  3463               	retlw	99	;'c'
  8649  1862  346F               	retlw	111	;'o'
  8650  1863  346E               	retlw	110	;'n'
  8651  1864  3464               	retlw	100	;'d'
  8652  1865  3473               	retlw	115	;'s'
  8653  1866  3400               	retlw	0
  8654                           
  8655                           	psect	stringtext6
  8656  1867                     __pstringtext6:
  8657  1867                     STR_3:
  8658  1867  3469               	retlw	105	;'i'
  8659  1868  346E               	retlw	110	;'n'
  8660  1869  3473               	retlw	115	;'s'
  8661  186A  3465               	retlw	101	;'e'
  8662  186B  3472               	retlw	114	;'r'
  8663  186C  3474               	retlw	116	;'t'
  8664  186D  3420               	retlw	32	;' '
  8665  186E  346D               	retlw	109	;'m'
  8666  186F  3469               	retlw	105	;'i'
  8667  1870  346E               	retlw	110	;'n'
  8668  1871  3475               	retlw	117	;'u'
  8669  1872  3474               	retlw	116	;'t'
  8670  1873  3465               	retlw	101	;'e'
  8671  1874  3473               	retlw	115	;'s'
  8672  1875  3400               	retlw	0
  8673                           
  8674                           	psect	stringtext7
  8675  1876                     __pstringtext7:
  8676  1876                     STR_1:
  8677  1876  3469               	retlw	105	;'i'
  8678  1877  346E               	retlw	110	;'n'
  8679  1878  3473               	retlw	115	;'s'
  8680  1879  3465               	retlw	101	;'e'
  8681  187A  3472               	retlw	114	;'r'
  8682  187B  3474               	retlw	116	;'t'
  8683  187C  3420               	retlw	32	;' '
  8684  187D  3468               	retlw	104	;'h'
  8685  187E  346F               	retlw	111	;'o'
  8686  187F  3475               	retlw	117	;'u'
  8687  1880  3472               	retlw	114	;'r'
  8688  1881  3473               	retlw	115	;'s'
  8689  1882  3400               	retlw	0
  8690                           
  8691                           	psect	stringtext8
  8692  1883                     __pstringtext8:
  8693  1883                     STR_9:
  8694  1883  3425               	retlw	37	;'%'
  8695  1884  3430               	retlw	48	;'0'
  8696  1885  3432               	retlw	50	;'2'
  8697  1886  3464               	retlw	100	;'d'
  8698  1887  3420               	retlw	32	;' '
  8699  1888  3443               	retlw	67	;'C'
  8700  1889  3400               	retlw	0
  8701                           
  8702                           	psect	stringtext9
  8703  188A                     __pstringtext9:
  8704  188A                     STR_8:
  8705  188A  3453               	retlw	83	;'S'
  8706  188B  3454               	retlw	84	;'T'
  8707  188C  3452               	retlw	82	;'R'
  8708  188D  3400               	retlw	0
  8709                           
  8710                           	psect	stringtext10
  8711  0000                     __pstringtext10:
  8712  1820                     
  8713                           	psect	cinit
  8714  0027                     start_initialization:	
  8715                           ; #config settings
  8716                           
  8717  0027                     __initialization:
  8718                           
  8719                           ; Clear objects allocated to COMMON
  8720  0027  01FC               	clrf	__pbssCOMMON& (0+127)
  8721  0028  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
  8722                           
  8723                           ; Clear objects allocated to BANK1
  8724  0029  30D4               	movlw	low __pbssBANK1
  8725  002A  0084               	movwf	4
  8726  002B  3000               	movlw	high __pbssBANK1
  8727  002C  0085               	movwf	5
  8728  002D  3018               	movlw	24
  8729  002E  3191  21DA  3180   	fcall	clear_ram0
  8730                           
  8731                           ; Clear objects allocated to BANK2
  8732  0031  3020               	movlw	low __pbssBANK2
  8733  0032  0084               	movwf	4
  8734  0033  3001               	movlw	high __pbssBANK2
  8735  0034  0085               	movwf	5
  8736  0035  303F               	movlw	63
  8737  0036  3191  21DA  3180   	fcall	clear_ram0
  8738  0039                     end_of_initialization:	
  8739                           ;End of C runtime variable initialization code
  8740                           
  8741  0039                     __end_of__initialization:
  8742  0039  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  8743  003A  0020               	movlb	0
  8744  003B  3180  283D         	ljmp	_main	;jump to C main() function
  8745                           
  8746                           	psect	bssCOMMON
  8747  007C                     __pbssCOMMON:
  8748  007C                     _minutes:
  8749  007C                     	ds	1
  8750  007D                     _hours:
  8751  007D                     	ds	1
  8752                           
  8753                           	psect	bssBANK1
  8754  00D4                     __pbssBANK1:
  8755  00D4                     _width:
  8756  00D4                     	ds	2
  8757  00D6                     _prec:
  8758  00D6                     	ds	2
  8759  00D8                     _flags:
  8760  00D8                     	ds	2
  8761  00DA                     _pwm_control:
  8762  00DA                     	ds	1
  8763  00DB                     _min_temperature:
  8764  00DB                     	ds	1
  8765  00DC                     _tala_counter:
  8766  00DC                     	ds	1
  8767  00DD                     _min_luminosity:
  8768  00DD                     	ds	1
  8769  00DE                     _seconds:
  8770  00DE                     	ds	1
  8771  00DF                     _checksum:
  8772  00DF                     	ds	1
  8773  00E0                     _CLKM:
  8774  00E0                     	ds	1
  8775  00E1                     _CLKH:
  8776  00E1                     	ds	1
  8777  00E2                     _ALAF:
  8778  00E2                     	ds	1
  8779  00E3                     _ALAL:
  8780  00E3                     	ds	1
  8781  00E4                     _ALAT:
  8782  00E4                     	ds	1
  8783  00E5                     _TALA:
  8784  00E5                     	ds	1
  8785  00E6                     _PMON:
  8786  00E6                     	ds	1
  8787  00E7                     _RI:
  8788  00E7                     	ds	1
  8789  00E8                     _WI:
  8790  00E8                     	ds	1
  8791  00E9                     _NR:
  8792  00E9                     	ds	1
  8793  00EA                     _NREG:
  8794  00EA                     	ds	1
  8795  00EB                     _magic_word:
  8796  00EB                     	ds	1
  8797                           
  8798                           	psect	bssBANK2
  8799  0120                     __pbssBANK2:
  8800  0120                     _I2C1_Status:
  8801  0120                     	ds	29
  8802  013D                     _nout:
  8803  013D                     	ds	2
  8804  013F                     _dbuf:
  8805  013F                     	ds	32
  8806                           
  8807                           	psect	clrtext
  8808  11DA                     clear_ram0:	
  8809                           ;	Called with FSR0 containing the base address, and
  8810                           ;	WREG with the size to clear
  8811                           
  8812  11DA  0064               	clrwdt	;clear the watchdog before getting into this loop
  8813  11DB                     clrloop0:
  8814  11DB  0180               	clrf	0	;clear RAM location pointed to by FSR
  8815  11DC  3101               	addfsr 0,1
  8816  11DD  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  8817  11DE  29DB               	goto	clrloop0	;have we reached the end yet?
  8818  11DF  3400               	retlw	0	;all done for this memory range, return
  8819                           
  8820                           	psect	cstackBANK1
  8821  00A0                     __pcstackBANK1:
  8822  00A0                     ?_vfprintf:
  8823  00A0                     vfprintf@fmt:	
  8824                           ; 2 bytes @ 0x0
  8825                           
  8826                           
  8827                           ; 2 bytes @ 0x0
  8828  00A0                     	ds	2
  8829  00A2                     vfprintf@ap:
  8830                           
  8831                           ; 1 bytes @ 0x2
  8832  00A2                     	ds	1
  8833  00A3                     vfprintf@fp:
  8834                           
  8835                           ; 1 bytes @ 0x3
  8836  00A3                     	ds	1
  8837  00A4                     vfprintf@cfmt:
  8838                           
  8839                           ; 2 bytes @ 0x4
  8840  00A4                     	ds	2
  8841  00A6                     ?_sprintf:
  8842  00A6                     sprintf@fmt:	
  8843                           ; 2 bytes @ 0x6
  8844                           
  8845                           
  8846                           ; 2 bytes @ 0x6
  8847  00A6                     	ds	8
  8848  00AE                     ??_sprintf:
  8849                           
  8850                           ; 1 bytes @ 0xE
  8851  00AE                     	ds	1
  8852  00AF                     sprintf@ap:
  8853                           
  8854                           ; 1 bytes @ 0xF
  8855  00AF                     	ds	1
  8856  00B0                     sprintf@s:
  8857                           
  8858                           ; 1 bytes @ 0x10
  8859  00B0                     	ds	1
  8860  00B1                     sprintf@f:
  8861                           
  8862                           ; 5 bytes @ 0x11
  8863  00B1                     	ds	5
  8864  00B6                     ??_main:
  8865                           
  8866                           ; 1 bytes @ 0x16
  8867  00B6                     	ds	12
  8868  00C2                     main@buf:
  8869                           
  8870                           ; 17 bytes @ 0x22
  8871  00C2                     	ds	17
  8872  00D3                     main@c:
  8873                           
  8874                           ; 1 bytes @ 0x33
  8875  00D3                     	ds	1
  8876                           
  8877                           	psect	cstackCOMMON
  8878  0070                     __pcstackCOMMON:
  8879  0070                     ?_PMD_Initialize:
  8880  0070                     ?_I2C1_Initialize:	
  8881                           ; 1 bytes @ 0x0
  8882                           
  8883  0070                     ?_OSCILLATOR_Initialize:	
  8884                           ; 1 bytes @ 0x0
  8885                           
  8886  0070                     ?_PWM6_Initialize:	
  8887                           ; 1 bytes @ 0x0
  8888                           
  8889  0070                     ?_ADCC_Initialize:	
  8890                           ; 1 bytes @ 0x0
  8891                           
  8892  0070                     ?_TMR2_Initialize:	
  8893                           ; 1 bytes @ 0x0
  8894                           
  8895  0070                     ?_TMR1_Initialize:	
  8896                           ; 1 bytes @ 0x0
  8897                           
  8898  0070                     ?_TMR2_ISR:	
  8899                           ; 1 bytes @ 0x0
  8900                           
  8901  0070                     ??_TMR2_ISR:	
  8902                           ; 1 bytes @ 0x0
  8903                           
  8904  0070                     ?_TMR1_ISR:	
  8905                           ; 1 bytes @ 0x0
  8906                           
  8907  0070                     ?_TMR1_DefaultInterruptHandler:	
  8908                           ; 1 bytes @ 0x0
  8909                           
  8910  0070                     ??_TMR1_DefaultInterruptHandler:	
  8911                           ; 1 bytes @ 0x0
  8912                           
  8913  0070                     ?_TMR1_CallBack:	
  8914                           ; 1 bytes @ 0x0
  8915                           
  8916  0070                     ?_TMR2_DefaultInterruptHandler:	
  8917                           ; 1 bytes @ 0x0
  8918                           
  8919  0070                     ??_TMR2_DefaultInterruptHandler:	
  8920                           ; 1 bytes @ 0x0
  8921                           
  8922  0070                     ?_TMR2_CallBack:	
  8923                           ; 1 bytes @ 0x0
  8924                           
  8925  0070                     ??_TMR2_CallBack:	
  8926                           ; 1 bytes @ 0x0
  8927                           
  8928  0070                     ?_activateAlarm:	
  8929                           ; 1 bytes @ 0x0
  8930                           
  8931  0070                     ?_deactivatePWM:	
  8932                           ; 1 bytes @ 0x0
  8933                           
  8934  0070                     ??_deactivatePWM:	
  8935                           ; 1 bytes @ 0x0
  8936                           
  8937  0070                     ?_initializeEPROM:	
  8938                           ; 1 bytes @ 0x0
  8939                           
  8940  0070                     ?_putch:	
  8941                           ; 1 bytes @ 0x0
  8942                           
  8943  0070                     ?_OpenI2C:	
  8944                           ; 1 bytes @ 0x0
  8945                           
  8946  0070                     ?_ReadI2C:	
  8947                           ; 1 bytes @ 0x0
  8948                           
  8949  0070                     ?_WriteI2C:	
  8950                           ; 1 bytes @ 0x0
  8951                           
  8952  0070                     ?_LCDsend:	
  8953                           ; 1 bytes @ 0x0
  8954                           
  8955  0070                     ?_LCDrecv:	
  8956                           ; 1 bytes @ 0x0
  8957                           
  8958  0070                     ?_LCDinit:	
  8959                           ; 1 bytes @ 0x0
  8960                           
  8961  0070                     ?_LCDcmd:	
  8962                           ; 1 bytes @ 0x0
  8963                           
  8964  0070                     ?_LCDchar:	
  8965                           ; 1 bytes @ 0x0
  8966                           
  8967  0070                     ?_PIN_MANAGER_Initialize:	
  8968                           ; 1 bytes @ 0x0
  8969                           
  8970  0070                     ?_SYSTEM_Initialize:	
  8971                           ; 1 bytes @ 0x0
  8972                           
  8973  0070                     ?_INTERRUPT_InterruptManager:	
  8974                           ; 1 bytes @ 0x0
  8975                           
  8976  0070                     ?_TMR1_WriteTimer:	
  8977                           ; 1 bytes @ 0x0
  8978                           
  8979  0070                     ?_PWM6_LoadDutyValue:	
  8980                           ; 1 bytes @ 0x0
  8981                           
  8982  0070                     ?_TMR2_Start:	
  8983                           ; 1 bytes @ 0x0
  8984                           
  8985  0070                     ??_TMR2_Start:	
  8986                           ; 1 bytes @ 0x0
  8987                           
  8988  0070                     ?_TMR2_StartTimer:	
  8989                           ; 1 bytes @ 0x0
  8990                           
  8991  0070                     ??_TMR2_StartTimer:	
  8992                           ; 1 bytes @ 0x0
  8993                           
  8994  0070                     ?_TMR2_Stop:	
  8995                           ; 1 bytes @ 0x0
  8996                           
  8997  0070                     ??_TMR2_Stop:	
  8998                           ; 1 bytes @ 0x0
  8999                           
  9000  0070                     ?_TMR2_StopTimer:	
  9001                           ; 1 bytes @ 0x0
  9002                           
  9003  0070                     ??_TMR2_StopTimer:	
  9004                           ; 1 bytes @ 0x0
  9005                           
  9006  0070                     ?_readTC74:	
  9007                           ; 1 bytes @ 0x0
  9008                           
  9009  0070                     ?_initializeREG:	
  9010                           ; 1 bytes @ 0x0
  9011                           
  9012  0070                     ?_timerInterrupt:	
  9013                           ; 1 bytes @ 0x0
  9014                           
  9015  0070                     ?_main:	
  9016                           ; 1 bytes @ 0x0
  9017                           
  9018  0070                     ?_PWMOutputEnable:	
  9019                           ; 1 bytes @ 0x0
  9020                           
  9021  0070                     ??_PWMOutputEnable:	
  9022                           ; 1 bytes @ 0x0
  9023                           
  9024  0070                     ?_PWMOutputDisable:	
  9025                           ; 1 bytes @ 0x0
  9026                           
  9027  0070                     ??_PWMOutputDisable:	
  9028                           ; 1 bytes @ 0x0
  9029                           
  9030  0070                     ?i1_ReadI2C:	
  9031                           ; 1 bytes @ 0x0
  9032                           
  9033  0070                     ??i1_ReadI2C:	
  9034                           ; 1 bytes @ 0x0
  9035                           
  9036  0070                     ?i1_WriteI2C:	
  9037                           ; 1 bytes @ 0x0
  9038                           
  9039  0070                     ??i1_WriteI2C:	
  9040                           ; 1 bytes @ 0x0
  9041                           
  9042  0070                     ?i1_DATAEE_WriteByte:	
  9043                           ; 1 bytes @ 0x0
  9044                           
  9045  0070                     ?i1_readTC74:	
  9046                           ; 1 bytes @ 0x0
  9047                           
  9048  0070                     ?_ADCC_GetSingleConversion:	
  9049                           ; 1 bytes @ 0x0
  9050                           
  9051  0070                     putch@c:	
  9052                           ; 2 bytes @ 0x0
  9053                           
  9054  0070                     TMR1_WriteTimer@timerVal:	
  9055                           ; 1 bytes @ 0x0
  9056                           
  9057  0070                     PWM6_LoadDutyValue@dutyValue:	
  9058                           ; 2 bytes @ 0x0
  9059                           
  9060  0070                     i1DATAEE_WriteByte@bAdd:	
  9061                           ; 2 bytes @ 0x0
  9062                           
  9063                           
  9064                           ; 2 bytes @ 0x0
  9065  0070                     	ds	1
  9066  0071                     i1WriteI2C@data_out:
  9067                           
  9068                           ; 1 bytes @ 0x1
  9069  0071                     	ds	1
  9070  0072                     ??_TMR1_WriteTimer:
  9071  0072                     ??_ADCC_GetSingleConversion:	
  9072                           ; 1 bytes @ 0x2
  9073                           
  9074  0072                     ??_PWM6_LoadDutyValue:	
  9075                           ; 1 bytes @ 0x2
  9076                           
  9077  0072                     ??i1_readTC74:	
  9078                           ; 1 bytes @ 0x2
  9079                           
  9080  0072                     ADCC_GetSingleConversion@channel:	
  9081                           ; 1 bytes @ 0x2
  9082                           
  9083  0072                     i1DATAEE_WriteByte@bData:	
  9084                           ; 1 bytes @ 0x2
  9085                           
  9086                           
  9087                           ; 1 bytes @ 0x2
  9088  0072                     	ds	1
  9089  0073                     ??i1_DATAEE_WriteByte:
  9090  0073                     i1DATAEE_WriteByte@GIEBitValue:	
  9091                           ; 1 bytes @ 0x3
  9092                           
  9093  0073                     i1readTC74@value:	
  9094                           ; 1 bytes @ 0x3
  9095                           
  9096                           
  9097                           ; 1 bytes @ 0x3
  9098  0073                     	ds	1
  9099  0074                     ??_activateAlarm:
  9100  0074                     ?_writeRingBuffer:	
  9101                           ; 1 bytes @ 0x4
  9102                           
  9103  0074                     writeRingBuffer@luminosity:	
  9104                           ; 1 bytes @ 0x4
  9105                           
  9106  0074                     activateAlarm@alarm:	
  9107                           ; 1 bytes @ 0x4
  9108                           
  9109                           
  9110                           ; 1 bytes @ 0x4
  9111  0074                     	ds	1
  9112  0075                     ??_writeRingBuffer:
  9113                           
  9114                           ; 1 bytes @ 0x5
  9115  0075                     	ds	1
  9116  0076                     writeRingBuffer@temperature:
  9117                           
  9118                           ; 1 bytes @ 0x6
  9119  0076                     	ds	1
  9120  0077                     ??_timerInterrupt:
  9121                           
  9122                           ; 1 bytes @ 0x7
  9123  0077                     	ds	2
  9124  0079                     timerInterrupt@temperature:
  9125                           
  9126                           ; 1 bytes @ 0x9
  9127  0079                     	ds	1
  9128  007A                     timerInterrupt@value:
  9129                           
  9130                           ; 2 bytes @ 0xA
  9131  007A                     	ds	2
  9132  007C                     ??_TMR1_ISR:
  9133  007C                     ??_TMR1_CallBack:	
  9134                           ; 1 bytes @ 0xC
  9135                           
  9136  007C                     ??_INTERRUPT_InterruptManager:	
  9137                           ; 1 bytes @ 0xC
  9138                           
  9139                           
  9140                           	psect	cstackBANK0
  9141  0020                     __pcstackBANK0:	
  9142                           ; 1 bytes @ 0xC
  9143                           
  9144  0020                     ??_PMD_Initialize:
  9145  0020                     ??_I2C1_Initialize:	
  9146                           ; 1 bytes @ 0x0
  9147                           
  9148  0020                     ??_OSCILLATOR_Initialize:	
  9149                           ; 1 bytes @ 0x0
  9150                           
  9151  0020                     ??_PWM6_Initialize:	
  9152                           ; 1 bytes @ 0x0
  9153                           
  9154  0020                     ??_ADCC_Initialize:	
  9155                           ; 1 bytes @ 0x0
  9156                           
  9157  0020                     ?_TMR1_SetInterruptHandler:	
  9158                           ; 1 bytes @ 0x0
  9159                           
  9160  0020                     ?_TMR2_SetInterruptHandler:	
  9161                           ; 1 bytes @ 0x0
  9162                           
  9163  0020                     ??_putch:	
  9164                           ; 1 bytes @ 0x0
  9165                           
  9166  0020                     ??_OpenI2C:	
  9167                           ; 1 bytes @ 0x0
  9168                           
  9169  0020                     ??_ReadI2C:	
  9170                           ; 1 bytes @ 0x0
  9171                           
  9172  0020                     ??_WriteI2C:	
  9173                           ; 1 bytes @ 0x0
  9174                           
  9175  0020                     ??_PIN_MANAGER_Initialize:	
  9176                           ; 1 bytes @ 0x0
  9177                           
  9178  0020                     ?_DATAEE_WriteByte:	
  9179                           ; 1 bytes @ 0x0
  9180                           
  9181  0020                     ?_DATAEE_ReadByte:	
  9182                           ; 1 bytes @ 0x0
  9183                           
  9184  0020                     ?_fputc:	
  9185                           ; 1 bytes @ 0x0
  9186                           
  9187  0020                     ?_strlen:	
  9188                           ; 2 bytes @ 0x0
  9189                           
  9190  0020                     ?_isdigit:	
  9191                           ; 2 bytes @ 0x0
  9192                           
  9193  0020                     ?_isspace:	
  9194                           ; 2 bytes @ 0x0
  9195                           
  9196  0020                     ?_operADDR:	
  9197                           ; 2 bytes @ 0x0
  9198                           
  9199  0020                     ?___wmul:	
  9200                           ; 2 bytes @ 0x0
  9201                           
  9202  0020                     ?___aodiv:	
  9203                           ; 2 bytes @ 0x0
  9204                           
  9205  0020                     ?___aomod:	
  9206                           ; 8 bytes @ 0x0
  9207                           
  9208  0020                     TMR1_SetInterruptHandler@InterruptHandler:	
  9209                           ; 8 bytes @ 0x0
  9210                           
  9211  0020                     DATAEE_WriteByte@bAdd:	
  9212                           ; 2 bytes @ 0x0
  9213                           
  9214  0020                     DATAEE_ReadByte@bAdd:	
  9215                           ; 2 bytes @ 0x0
  9216                           
  9217  0020                     TMR2_SetInterruptHandler@InterruptHandler:	
  9218                           ; 2 bytes @ 0x0
  9219                           
  9220  0020                     ___wmul@multiplier:	
  9221                           ; 2 bytes @ 0x0
  9222                           
  9223  0020                     isdigit@c:	
  9224                           ; 2 bytes @ 0x0
  9225                           
  9226  0020                     isspace@c:	
  9227                           ; 2 bytes @ 0x0
  9228                           
  9229  0020                     fputc@c:	
  9230                           ; 2 bytes @ 0x0
  9231                           
  9232  0020                     ___aodiv@divisor:	
  9233                           ; 2 bytes @ 0x0
  9234                           
  9235  0020                     ___aomod@divisor:	
  9236                           ; 8 bytes @ 0x0
  9237                           
  9238                           
  9239                           ; 8 bytes @ 0x0
  9240  0020                     	ds	1
  9241  0021                     WriteI2C@data_out:
  9242                           
  9243                           ; 1 bytes @ 0x1
  9244  0021                     	ds	1
  9245  0022                     ??_TMR2_Initialize:
  9246  0022                     ??_TMR1_Initialize:	
  9247                           ; 1 bytes @ 0x2
  9248                           
  9249  0022                     ??_TMR1_SetInterruptHandler:	
  9250                           ; 1 bytes @ 0x2
  9251                           
  9252  0022                     ??_TMR2_SetInterruptHandler:	
  9253                           ; 1 bytes @ 0x2
  9254                           
  9255  0022                     ?_parseEPROMInitialization:	
  9256                           ; 1 bytes @ 0x2
  9257                           
  9258  0022                     ??_strlen:	
  9259                           ; 1 bytes @ 0x2
  9260                           
  9261  0022                     ??_isdigit:	
  9262                           ; 1 bytes @ 0x2
  9263                           
  9264  0022                     ??_isspace:	
  9265                           ; 1 bytes @ 0x2
  9266                           
  9267  0022                     ??_LCDsend:	
  9268                           ; 1 bytes @ 0x2
  9269                           
  9270  0022                     ??_LCDrecv:	
  9271                           ; 1 bytes @ 0x2
  9272                           
  9273  0022                     ?_LCDsend2x4:	
  9274                           ; 1 bytes @ 0x2
  9275                           
  9276  0022                     ??_SYSTEM_Initialize:	
  9277                           ; 1 bytes @ 0x2
  9278                           
  9279  0022                     ??_DATAEE_ReadByte:	
  9280                           ; 1 bytes @ 0x2
  9281                           
  9282  0022                     ??_readTC74:	
  9283                           ; 1 bytes @ 0x2
  9284                           
  9285  0022                     ??_operADDR:	
  9286                           ; 1 bytes @ 0x2
  9287                           
  9288  0022                     LCDsend2x4@mode:	
  9289                           ; 1 bytes @ 0x2
  9290                           
  9291  0022                     DATAEE_WriteByte@bData:	
  9292                           ; 1 bytes @ 0x2
  9293                           
  9294  0022                     parseEPROMInitialization@NREG:	
  9295                           ; 1 bytes @ 0x2
  9296                           
  9297  0022                     fputc@fp:	
  9298                           ; 1 bytes @ 0x2
  9299                           
  9300  0022                     ___wmul@multiplicand:	
  9301                           ; 1 bytes @ 0x2
  9302                           
  9303                           
  9304                           ; 2 bytes @ 0x2
  9305  0022                     	ds	1
  9306  0023                     ??_fputc:
  9307  0023                     ??_LCDsend2x4:	
  9308                           ; 1 bytes @ 0x3
  9309                           
  9310  0023                     ??_DATAEE_WriteByte:	
  9311                           ; 1 bytes @ 0x3
  9312                           
  9313  0023                     LCDsend@c:	
  9314                           ; 1 bytes @ 0x3
  9315                           
  9316  0023                     DATAEE_WriteByte@GIEBitValue:	
  9317                           ; 1 bytes @ 0x3
  9318                           
  9319  0023                     readTC74@value:	
  9320                           ; 1 bytes @ 0x3
  9321                           
  9322  0023                     parseEPROMInitialization@NR:	
  9323                           ; 1 bytes @ 0x3
  9324                           
  9325  0023                     strlen@a:	
  9326                           ; 1 bytes @ 0x3
  9327                           
  9328                           
  9329                           ; 1 bytes @ 0x3
  9330  0023                     	ds	1
  9331  0024                     ??_initializeEPROM:
  9332  0024                     ??_initializeREG:	
  9333                           ; 1 bytes @ 0x4
  9334                           
  9335  0024                     ??___wmul:	
  9336                           ; 1 bytes @ 0x4
  9337                           
  9338  0024                     LCDrecv@hc:	
  9339                           ; 1 bytes @ 0x4
  9340                           
  9341  0024                     operADDR@operation:	
  9342                           ; 1 bytes @ 0x4
  9343                           
  9344  0024                     parseEPROMInitialization@WI:	
  9345                           ; 1 bytes @ 0x4
  9346                           
  9347  0024                     _isspace$3355:	
  9348                           ; 1 bytes @ 0x4
  9349                           
  9350  0024                     strlen@s:	
  9351                           ; 1 bytes @ 0x4
  9352                           
  9353  0024                     ___wmul@product:	
  9354                           ; 1 bytes @ 0x4
  9355                           
  9356                           
  9357                           ; 2 bytes @ 0x4
  9358  0024                     	ds	1
  9359  0025                     LCDrecv@lc:
  9360  0025                     LCDsend2x4@c:	
  9361                           ; 1 bytes @ 0x5
  9362                           
  9363  0025                     parseEPROMInitialization@RI:	
  9364                           ; 1 bytes @ 0x5
  9365                           
  9366  0025                     operADDR@dataAddr:	
  9367                           ; 1 bytes @ 0x5
  9368                           
  9369                           
  9370                           ; 2 bytes @ 0x5
  9371  0025                     	ds	1
  9372  0026                     ?_atoi:
  9373  0026                     LCDrecv@mode:	
  9374                           ; 2 bytes @ 0x6
  9375                           
  9376  0026                     LCDsend2x4@hc:	
  9377                           ; 1 bytes @ 0x6
  9378                           
  9379  0026                     parseEPROMInitialization@PMON:	
  9380                           ; 1 bytes @ 0x6
  9381                           
  9382  0026                     atoi@s:	
  9383                           ; 1 bytes @ 0x6
  9384                           
  9385                           
  9386                           ; 2 bytes @ 0x6
  9387  0026                     	ds	1
  9388  0027                     ?_storeEPROMBuild:
  9389  0027                     ?_LCDbusy:	
  9390                           ; 1 bytes @ 0x7
  9391                           
  9392  0027                     LCDsend2x4@lc:	
  9393                           ; 2 bytes @ 0x7
  9394                           
  9395  0027                     storeEPROMBuild@minutes:	
  9396                           ; 1 bytes @ 0x7
  9397                           
  9398  0027                     parseEPROMInitialization@TALA:	
  9399                           ; 1 bytes @ 0x7
  9400                           
  9401                           
  9402                           ; 1 bytes @ 0x7
  9403  0027                     	ds	1
  9404  0028                     ??_atoi:
  9405  0028                     ??_LCDinit:	
  9406                           ; 1 bytes @ 0x8
  9407                           
  9408  0028                     ??_LCDcmd:	
  9409                           ; 1 bytes @ 0x8
  9410                           
  9411  0028                     ??_LCDchar:	
  9412                           ; 1 bytes @ 0x8
  9413                           
  9414  0028                     ?_fputs:	
  9415                           ; 1 bytes @ 0x8
  9416                           
  9417  0028                     LCDcmd@c:	
  9418                           ; 2 bytes @ 0x8
  9419                           
  9420  0028                     LCDchar@c:	
  9421                           ; 1 bytes @ 0x8
  9422                           
  9423  0028                     storeEPROMBuild@seconds:	
  9424                           ; 1 bytes @ 0x8
  9425                           
  9426  0028                     parseEPROMInitialization@ALAT:	
  9427                           ; 1 bytes @ 0x8
  9428                           
  9429  0028                     fputs@fp:	
  9430                           ; 1 bytes @ 0x8
  9431                           
  9432  0028                     ___aodiv@dividend:	
  9433                           ; 1 bytes @ 0x8
  9434                           
  9435  0028                     ___aomod@dividend:	
  9436                           ; 8 bytes @ 0x8
  9437                           
  9438                           
  9439                           ; 8 bytes @ 0x8
  9440  0028                     	ds	1
  9441  0029                     ??_fputs:
  9442  0029                     ?_LCDstr:	
  9443                           ; 1 bytes @ 0x9
  9444                           
  9445  0029                     ??_LCDbusy:	
  9446                           ; 1 bytes @ 0x9
  9447                           
  9448  0029                     ?_LCDpos:	
  9449                           ; 1 bytes @ 0x9
  9450                           
  9451  0029                     LCDpos@c:	
  9452                           ; 1 bytes @ 0x9
  9453                           
  9454  0029                     storeEPROMBuild@temperature:	
  9455                           ; 1 bytes @ 0x9
  9456                           
  9457  0029                     parseEPROMInitialization@ALAL:	
  9458                           ; 1 bytes @ 0x9
  9459                           
  9460  0029                     LCDstr@p:	
  9461                           ; 1 bytes @ 0x9
  9462                           
  9463                           
  9464                           ; 2 bytes @ 0x9
  9465  0029                     	ds	1
  9466  002A                     ??_LCDpos:
  9467  002A                     storeEPROMBuild@luminosity:	
  9468                           ; 1 bytes @ 0xA
  9469                           
  9470  002A                     parseEPROMInitialization@ALAF:	
  9471                           ; 1 bytes @ 0xA
  9472                           
  9473                           
  9474                           ; 1 bytes @ 0xA
  9475  002A                     	ds	1
  9476  002B                     ??_LCDstr:
  9477  002B                     LCDpos@l:	
  9478                           ; 1 bytes @ 0xB
  9479                           
  9480  002B                     storeEPROMBuild@operation:	
  9481                           ; 1 bytes @ 0xB
  9482                           
  9483  002B                     parseEPROMInitialization@CLKH:	
  9484                           ; 1 bytes @ 0xB
  9485                           
  9486                           
  9487                           ; 1 bytes @ 0xB
  9488  002B                     	ds	1
  9489  002C                     ??_storeEPROMBuild:
  9490  002C                     LCDpos@p:	
  9491                           ; 1 bytes @ 0xC
  9492                           
  9493  002C                     parseEPROMInitialization@CLKM:	
  9494                           ; 1 bytes @ 0xC
  9495                           
  9496  002C                     fputs@c:	
  9497                           ; 1 bytes @ 0xC
  9498                           
  9499  002C                     atoi@neg:	
  9500                           ; 1 bytes @ 0xC
  9501                           
  9502                           
  9503                           ; 2 bytes @ 0xC
  9504  002C                     	ds	1
  9505  002D                     storeEPROMBuild@hours:
  9506  002D                     parseEPROMInitialization@checksum:	
  9507                           ; 1 bytes @ 0xD
  9508                           
  9509  002D                     fputs@i:	
  9510                           ; 1 bytes @ 0xD
  9511                           
  9512                           
  9513                           ; 2 bytes @ 0xD
  9514  002D                     	ds	1
  9515  002E                     ??_parseEPROMInitialization:
  9516  002E                     LCDstr@c:	
  9517                           ; 1 bytes @ 0xE
  9518                           
  9519  002E                     storeEPROMBuild@dataAddr:	
  9520                           ; 1 bytes @ 0xE
  9521                           
  9522  002E                     _atoi$3337:	
  9523                           ; 2 bytes @ 0xE
  9524                           
  9525                           
  9526                           ; 2 bytes @ 0xE
  9527  002E                     	ds	1
  9528  002F                     parseEPROMInitialization@magic_word:
  9529  002F                     fputs@s:	
  9530                           ; 1 bytes @ 0xF
  9531                           
  9532                           
  9533                           ; 1 bytes @ 0xF
  9534  002F                     	ds	1
  9535  0030                     ??___aodiv:
  9536  0030                     ??___aomod:	
  9537                           ; 1 bytes @ 0x10
  9538                           
  9539  0030                     ?_pad:	
  9540                           ; 1 bytes @ 0x10
  9541                           
  9542  0030                     pad@buf:	
  9543                           ; 2 bytes @ 0x10
  9544                           
  9545  0030                     _atoi$3339:	
  9546                           ; 1 bytes @ 0x10
  9547                           
  9548                           
  9549                           ; 2 bytes @ 0x10
  9550  0030                     	ds	1
  9551  0031                     ___aodiv@counter:
  9552  0031                     ___aomod@counter:	
  9553                           ; 1 bytes @ 0x11
  9554                           
  9555  0031                     pad@p:	
  9556                           ; 1 bytes @ 0x11
  9557                           
  9558                           
  9559                           ; 2 bytes @ 0x11
  9560  0031                     	ds	1
  9561  0032                     ___aodiv@sign:
  9562  0032                     ___aomod@sign:	
  9563                           ; 1 bytes @ 0x12
  9564                           
  9565  0032                     _atoi$3338:	
  9566                           ; 1 bytes @ 0x12
  9567                           
  9568                           
  9569                           ; 1 bytes @ 0x12
  9570  0032                     	ds	1
  9571  0033                     ??_pad:
  9572  0033                     ?_abs:	
  9573                           ; 1 bytes @ 0x13
  9574                           
  9575  0033                     abs@a:	
  9576                           ; 2 bytes @ 0x13
  9577                           
  9578  0033                     atoi@n:	
  9579                           ; 2 bytes @ 0x13
  9580                           
  9581  0033                     ___aodiv@quotient:	
  9582                           ; 2 bytes @ 0x13
  9583                           
  9584                           
  9585                           ; 8 bytes @ 0x13
  9586  0033                     	ds	1
  9587  0034                     pad@i:
  9588                           
  9589                           ; 2 bytes @ 0x14
  9590  0034                     	ds	1
  9591  0035                     ??_abs:
  9592                           
  9593                           ; 1 bytes @ 0x15
  9594  0035                     	ds	1
  9595  0036                     pad@w:
  9596                           
  9597                           ; 2 bytes @ 0x16
  9598  0036                     	ds	2
  9599  0038                     pad@fp:
  9600                           
  9601                           ; 1 bytes @ 0x18
  9602  0038                     	ds	3
  9603  003B                     ?_dtoa:
  9604  003B                     dtoa@d:	
  9605                           ; 2 bytes @ 0x1B
  9606                           
  9607                           
  9608                           ; 8 bytes @ 0x1B
  9609  003B                     	ds	8
  9610  0043                     ??_dtoa:
  9611                           
  9612                           ; 1 bytes @ 0x23
  9613  0043                     	ds	3
  9614  0046                     _dtoa$3302:
  9615                           
  9616                           ; 2 bytes @ 0x26
  9617  0046                     	ds	2
  9618  0048                     dtoa@fp:
  9619                           
  9620                           ; 1 bytes @ 0x28
  9621  0048                     	ds	1
  9622  0049                     dtoa@p:
  9623                           
  9624                           ; 2 bytes @ 0x29
  9625  0049                     	ds	2
  9626  004B                     dtoa@w:
  9627                           
  9628                           ; 2 bytes @ 0x2B
  9629  004B                     	ds	2
  9630  004D                     dtoa@s:
  9631                           
  9632                           ; 2 bytes @ 0x2D
  9633  004D                     	ds	2
  9634  004F                     dtoa@n:
  9635                           
  9636                           ; 8 bytes @ 0x2F
  9637  004F                     	ds	8
  9638  0057                     dtoa@i:
  9639                           
  9640                           ; 2 bytes @ 0x37
  9641  0057                     	ds	2
  9642  0059                     ?_vfpfcnvrt:
  9643  0059                     vfpfcnvrt@fmt:	
  9644                           ; 2 bytes @ 0x39
  9645                           
  9646                           
  9647                           ; 1 bytes @ 0x39
  9648  0059                     	ds	1
  9649  005A                     vfpfcnvrt@ap:
  9650                           
  9651                           ; 1 bytes @ 0x3A
  9652  005A                     	ds	1
  9653  005B                     ??_vfpfcnvrt:
  9654                           
  9655                           ; 1 bytes @ 0x3B
  9656  005B                     	ds	6
  9657  0061                     vfpfcnvrt@ll:
  9658                           
  9659                           ; 8 bytes @ 0x41
  9660  0061                     	ds	8
  9661  0069                     vfpfcnvrt@done:
  9662                           
  9663                           ; 2 bytes @ 0x49
  9664  0069                     	ds	2
  9665  006B                     _vfpfcnvrt$3317:
  9666                           
  9667                           ; 2 bytes @ 0x4B
  9668  006B                     	ds	2
  9669  006D                     vfpfcnvrt@fp:
  9670                           
  9671                           ; 1 bytes @ 0x4D
  9672  006D                     	ds	1
  9673  006E                     ??_vfprintf:
  9674                           
  9675                           ; 1 bytes @ 0x4E
  9676  006E                     	ds	2
  9677                           
  9678                           	psect	maintext
  9679  003D                     __pmaintext:	
  9680 ;;
  9681 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
  9682 ;;
  9683 ;; *************** function _main *****************
  9684 ;; Defined at:
  9685 ;;		line 211 in file "main.c"
  9686 ;; Parameters:    Size  Location     Type
  9687 ;;		None
  9688 ;; Auto vars:     Size  Location     Type
  9689 ;;  buf            17   34[BANK1 ] unsigned char [17]
  9690 ;;  c               1   51[BANK1 ] unsigned char 
  9691 ;; Return value:  Size  Location     Type
  9692 ;;                  1    wreg      void 
  9693 ;; Registers used:
  9694 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9695 ;; Tracked objects:
  9696 ;;		On entry : B1F/0
  9697 ;;		On exit  : 0/0
  9698 ;;		Unchanged: 0/0
  9699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9701 ;;      Locals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  9702 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  9703 ;;      Totals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0
  9704 ;;Total ram usage:       30 bytes
  9705 ;; Hardware stack levels required when called: 15
  9706 ;; This function calls:
  9707 ;;		_LCDbusy
  9708 ;;		_LCDcmd
  9709 ;;		_LCDinit
  9710 ;;		_LCDpos
  9711 ;;		_LCDstr
  9712 ;;		_OpenI2C
  9713 ;;		_PWM6_Initialize
  9714 ;;		_SYSTEM_Initialize
  9715 ;;		_TMR1_SetInterruptHandler
  9716 ;;		_initializeEPROM
  9717 ;;		_initializeREG
  9718 ;;		_parseEPROMInitialization
  9719 ;;		_readTC74
  9720 ;;		_sprintf
  9721 ;;		_storeEPROMBuild
  9722 ;; This function is called by:
  9723 ;;		Startup code after reset
  9724 ;; This function uses a non-reentrant model
  9725 ;;
  9726                           
  9727                           
  9728                           ;psect for function _main
  9729  003D                     _main:
  9730  003D                     l6206:	
  9731                           ;incstack = 0
  9732                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9733                           
  9734                           
  9735                           ;main.c: 213:     unsigned char c;;main.c: 214:     char buf[17];;main.c: 216:     SYSTE
      +                          M_Initialize();
  9736  003D  3193  2310  3180   	fcall	_SYSTEM_Initialize
  9737  0040                     l6208:
  9738                           
  9739                           ;main.c: 222:     (INTCONbits.GIE = 1);
  9740  0040  178B               	bsf	11,7	;volatile
  9741  0041                     l6210:
  9742                           
  9743                           ;main.c: 225:     (INTCONbits.PEIE = 1);
  9744  0041  170B               	bsf	11,6	;volatile
  9745  0042                     l6212:
  9746                           
  9747                           ;main.c: 232:     hours=0;
  9748  0042  01FD               	clrf	_hours
  9749  0043                     l6214:
  9750                           
  9751                           ;main.c: 233:     minutes=0;
  9752  0043  01FC               	clrf	_minutes
  9753  0044                     l6216:
  9754                           
  9755                           ;main.c: 234:     seconds=0;
  9756  0044  0021               	movlb	1	; select bank1
  9757  0045  01DE               	clrf	_seconds^(0+128)
  9758  0046                     l6218:
  9759                           
  9760                           ;main.c: 235:     max_luminosity=255;
  9761  0046  30FF               	movlw	255
  9762  0047  00B6               	movwf	??_main^(0+128)
  9763  0048  0836               	movf	??_main^(0+128),w
  9764  0049  0022               	movlb	2	; select bank2
  9765  004A  00E7               	movwf	_max_luminosity^(0+256)
  9766  004B                     l6220:
  9767                           
  9768                           ;main.c: 236:     min_luminosity=0;
  9769  004B  0021               	movlb	1	; select bank1
  9770  004C  01DD               	clrf	_min_luminosity^(0+128)
  9771  004D                     l6222:
  9772                           
  9773                           ;main.c: 237:     last_luminosity=255;
  9774  004D  30FF               	movlw	255
  9775  004E  00B6               	movwf	??_main^(0+128)
  9776  004F  0836               	movf	??_main^(0+128),w
  9777  0050  00EF               	movwf	_last_luminosity^(0+128)
  9778  0051                     l6224:
  9779                           
  9780                           ;main.c: 238:     counter=1;
  9781  0051  0022               	movlb	2	; select bank2
  9782  0052  01E6               	clrf	_counter^(0+256)
  9783  0053  0AE6               	incf	_counter^(0+256),f
  9784  0054                     l6226:
  9785                           
  9786                           ;main.c: 240:     last_temperature=255;
  9787  0054  30FF               	movlw	255
  9788  0055  0021               	movlb	1	; select bank1
  9789  0056  00B6               	movwf	??_main^(0+128)
  9790  0057  0836               	movf	??_main^(0+128),w
  9791  0058  00EE               	movwf	_last_temperature^(0+128)
  9792  0059                     l6228:
  9793                           
  9794                           ;main.c: 241:     max_temperature=255;
  9795  0059  30FF               	movlw	255
  9796  005A  00B6               	movwf	??_main^(0+128)
  9797  005B  0836               	movf	??_main^(0+128),w
  9798  005C  0022               	movlb	2	; select bank2
  9799  005D  00E5               	movwf	_max_temperature^(0+256)
  9800  005E                     l6230:
  9801                           
  9802                           ;main.c: 242:     min_temperature=0;
  9803  005E  0021               	movlb	1	; select bank1
  9804  005F  01DB               	clrf	_min_temperature^(0+128)
  9805  0060                     l6232:
  9806                           
  9807                           ;main.c: 243:     data_address=0x7000;
  9808  0060  3000               	movlw	0
  9809  0061  00EC               	movwf	_data_address^(0+128)
  9810  0062  3070               	movlw	112
  9811  0063  00ED               	movwf	(_data_address^(0+128)+1)
  9812  0064                     l6234:
  9813                           
  9814                           ;main.c: 245:     OpenI2C();
  9815  0064  3192  223F  3180   	fcall	_OpenI2C
  9816  0067                     l6236:
  9817                           
  9818                           ;main.c: 250:     LCDinit();
  9819  0067  3188  2028  3180   	fcall	_LCDinit
  9820  006A                     l6238:
  9821                           
  9822                           ;main.c: 253:     PWM6_Initialize();
  9823  006A  3192  224C  3180   	fcall	_PWM6_Initialize
  9824  006D                     l6240:
  9825                           
  9826                           ;main.c: 254:     initializeEPROM();
  9827  006D  3188  20AB  3180   	fcall	_initializeEPROM
  9828  0070                     l6242:
  9829                           
  9830                           ;main.c: 255:     initializeREG();
  9831  0070  3194  24D0  3180   	fcall	_initializeREG
  9832  0073                     l6244:
  9833                           
  9834                           ;main.c: 257:     storeEPROMBuild(0x55,0x50,0x45,0x40,0x35,101);
  9835  0073  3050               	movlw	80
  9836  0074  0021               	movlb	1	; select bank1
  9837  0075  00B6               	movwf	??_main^(0+128)
  9838  0076  0836               	movf	??_main^(0+128),w
  9839  0077  0020               	movlb	0	; select bank0
  9840  0078  00A7               	movwf	storeEPROMBuild@minutes
  9841  0079  3045               	movlw	69
  9842  007A  0021               	movlb	1	; select bank1
  9843  007B  00B7               	movwf	(??_main+1)^(0+128)
  9844  007C  0837               	movf	(??_main+1)^(0+128),w
  9845  007D  0020               	movlb	0	; select bank0
  9846  007E  00A8               	movwf	storeEPROMBuild@seconds
  9847  007F  3040               	movlw	64
  9848  0080  0021               	movlb	1	; select bank1
  9849  0081  00B8               	movwf	(??_main+2)^(0+128)
  9850  0082  0838               	movf	(??_main+2)^(0+128),w
  9851  0083  0020               	movlb	0	; select bank0
  9852  0084  00A9               	movwf	storeEPROMBuild@temperature
  9853  0085  3035               	movlw	53
  9854  0086  0021               	movlb	1	; select bank1
  9855  0087  00B9               	movwf	(??_main+3)^(0+128)
  9856  0088  0839               	movf	(??_main+3)^(0+128),w
  9857  0089  0020               	movlb	0	; select bank0
  9858  008A  00AA               	movwf	storeEPROMBuild@luminosity
  9859  008B  3065               	movlw	101
  9860  008C  0021               	movlb	1	; select bank1
  9861  008D  00BA               	movwf	(??_main+4)^(0+128)
  9862  008E  083A               	movf	(??_main+4)^(0+128),w
  9863  008F  0020               	movlb	0	; select bank0
  9864  0090  00AB               	movwf	storeEPROMBuild@operation
  9865  0091  3055               	movlw	85
  9866  0092  3195  25F7  3180   	fcall	_storeEPROMBuild
  9867  0095                     l6246:
  9868                           
  9869                           ;main.c: 259:     LCDcmd(0x80);
  9870  0095  3080               	movlw	128
  9871  0096  3191  21E7  3180   	fcall	_LCDcmd
  9872  0099                     l6248:
  9873                           
  9874                           ;main.c: 260:     LCDstr("insert hours");
  9875  0099  3076               	movlw	low (STR_1| (0+32768))
  9876  009A  0020               	movlb	0	; select bank0
  9877  009B  00A9               	movwf	LCDstr@p
  9878  009C  3098               	movlw	high (STR_1| (0+32768))
  9879  009D  00AA               	movwf	LCDstr@p+1
  9880  009E  3193  2376  3180   	fcall	_LCDstr
  9881  00A1                     l6250:
  9882                           
  9883                           ;main.c: 261:     _delay((unsigned long)((1000)*(1000000/4000.0)));
  9884  00A1  3002               	movlw	2
  9885  00A2  0021               	movlb	1	; select bank1
  9886  00A3  00B7               	movwf	(??_main^(0+128)+1)
  9887  00A4  3045               	movlw	69
  9888  00A5  00B6               	movwf	??_main^(0+128)
  9889  00A6  30A9               	movlw	169
  9890  00A7                     u5357:
  9891  00A7  0B89               	decfsz	9,f
  9892  00A8  28A7               	goto	u5357
  9893  00A9  0BB6               	decfsz	??_main^(0+128),f
  9894  00AA  28A7               	goto	u5357
  9895  00AB  0BB7               	decfsz	(??_main^(0+128)+1),f
  9896  00AC  28A7               	goto	u5357
  9897  00AD  3200               	nop2
  9898                           
  9899                           ;main.c: 262:     while(PORTCbits.RC5==1){
  9900  00AE  28F5               	goto	l6264
  9901  00AF                     l1466:
  9902                           
  9903                           ;main.c: 263:         if(PORTBbits.RB4==0){
  9904  00AF  1A0D               	btfsc	13,4	;volatile
  9905  00B0  28B2               	goto	u5231
  9906  00B1  28B3               	goto	u5230
  9907  00B2                     u5231:
  9908  00B2  28C1               	goto	l6256
  9909  00B3                     u5230:
  9910  00B3                     l6252:
  9911                           
  9912                           ;main.c: 264:             hours++;
  9913  00B3  3001               	movlw	1
  9914  00B4  0021               	movlb	1	; select bank1
  9915  00B5  00B6               	movwf	??_main^(0+128)
  9916  00B6  0836               	movf	??_main^(0+128),w
  9917  00B7  07FD               	addwf	_hours,f
  9918  00B8                     l6254:
  9919                           
  9920                           ;main.c: 265:             _delay((unsigned long)((250)*(1000000/4000.0)));
  9921  00B8  3052               	movlw	82
  9922  00B9  0021               	movlb	1	; select bank1
  9923  00BA  00B6               	movwf	??_main^(0+128)
  9924  00BB  3029               	movlw	41
  9925  00BC                     u5367:
  9926  00BC  0B89               	decfsz	9,f
  9927  00BD  28BC               	goto	u5367
  9928  00BE  0BB6               	decfsz	??_main^(0+128),f
  9929  00BF  28BC               	goto	u5367
  9930  00C0  3200               	nop2
  9931  00C1                     l6256:
  9932  00C1  3192  22B9  3180   	fcall	_LCDbusy
  9933  00C4  0020               	movlb	0	; select bank0
  9934  00C5  0827               	movf	?_LCDbusy,w
  9935  00C6  0428               	iorwf	?_LCDbusy+1,w
  9936  00C7  1D03               	btfss	3,2
  9937  00C8  28CA               	goto	u5241
  9938  00C9  28CB               	goto	u5240
  9939  00CA                     u5241:
  9940  00CA  28C1               	goto	l6256
  9941  00CB                     u5240:
  9942  00CB                     l6258:
  9943                           
  9944                           ;main.c: 268:         LCDcmd(0x80);
  9945  00CB  3080               	movlw	128
  9946  00CC  3191  21E7  3180   	fcall	_LCDcmd
  9947  00CF                     l6260:
  9948                           
  9949                           ;main.c: 269:         sprintf(buf, "%02d:%02d:%02d     ", hours, minutes, seconds);
  9950  00CF  3035               	movlw	low (STR_2| (0+32768))
  9951  00D0  0021               	movlb	1	; select bank1
  9952  00D1  00A6               	movwf	sprintf@fmt^(0+128)
  9953  00D2  3098               	movlw	high (STR_2| (0+32768))
  9954  00D3  00A7               	movwf	(sprintf@fmt^(0+128)+1)
  9955  00D4  087D               	movf	_hours,w
  9956  00D5  00B6               	movwf	??_main^(0+128)
  9957  00D6  01B7               	clrf	(??_main^(0+128)+1)
  9958  00D7  0836               	movf	??_main^(0+128),w
  9959  00D8  00A8               	movwf	(?_sprintf^(0+128)+2)
  9960  00D9  0837               	movf	(??_main+1)^(0+128),w
  9961  00DA  00A9               	movwf	((?_sprintf+1)^(0+128)+2)
  9962  00DB  087C               	movf	_minutes,w
  9963  00DC  00B8               	movwf	(??_main+2)^(0+128)
  9964  00DD  01B9               	clrf	((??_main+2)^(0+128)+1)
  9965  00DE  0838               	movf	(??_main+2)^(0+128),w
  9966  00DF  00AA               	movwf	(?_sprintf^(0+128)+4)
  9967  00E0  0839               	movf	(??_main+3)^(0+128),w
  9968  00E1  00AB               	movwf	((?_sprintf+1)^(0+128)+4)
  9969  00E2  085E               	movf	_seconds^(0+128),w
  9970  00E3  00BA               	movwf	(??_main+4)^(0+128)
  9971  00E4  01BB               	clrf	((??_main+4)^(0+128)+1)
  9972  00E5  083A               	movf	(??_main+4)^(0+128),w
  9973  00E6  00AC               	movwf	(?_sprintf^(0+128)+6)
  9974  00E7  083B               	movf	(??_main+5)^(0+128),w
  9975  00E8  00AD               	movwf	((?_sprintf+1)^(0+128)+6)
  9976  00E9  30C2               	movlw	(low (main@buf| 0))& (0+255)
  9977  00EA  3194  2484  3180   	fcall	_sprintf
  9978  00ED                     l6262:
  9979                           
  9980                           ;main.c: 270:         LCDstr(buf);
  9981  00ED  30C2               	movlw	low main@buf
  9982  00EE  0020               	movlb	0	; select bank0
  9983  00EF  00A9               	movwf	LCDstr@p
  9984  00F0  3000               	movlw	high main@buf
  9985  00F1  00AA               	movwf	LCDstr@p+1
  9986  00F2  3193  2376  3180   	fcall	_LCDstr
  9987  00F5                     l6264:
  9988                           
  9989                           ;main.c: 262:     while(PORTCbits.RC5==1){
  9990  00F5  0020               	movlb	0	; select bank0
  9991  00F6  1A8E               	btfsc	14,5	;volatile
  9992  00F7  28F9               	goto	u5251
  9993  00F8  28FA               	goto	u5250
  9994  00F9                     u5251:
  9995  00F9  28AF               	goto	l1466
  9996  00FA                     u5250:
  9997  00FA                     l6266:
  9998                           
  9999                           ;main.c: 272:     LCDcmd(0x80);
 10000  00FA  3080               	movlw	128
 10001  00FB  3191  21E7  3180   	fcall	_LCDcmd
 10002  00FE                     l6268:
 10003                           
 10004                           ;main.c: 273:     LCDstr("insert minutes");
 10005  00FE  3067               	movlw	low (STR_3| (0+32768))
 10006  00FF  0020               	movlb	0	; select bank0
 10007  0100  00A9               	movwf	LCDstr@p
 10008  0101  3098               	movlw	high (STR_3| (0+32768))
 10009  0102  00AA               	movwf	LCDstr@p+1
 10010  0103  3193  2376  3180   	fcall	_LCDstr
 10011  0106                     l6270:
 10012                           
 10013                           ;main.c: 274:     _delay((unsigned long)((1000)*(1000000/4000.0)));
 10014  0106  3002               	movlw	2
 10015  0107  0021               	movlb	1	; select bank1
 10016  0108  00B7               	movwf	(??_main^(0+128)+1)
 10017  0109  3045               	movlw	69
 10018  010A  00B6               	movwf	??_main^(0+128)
 10019  010B  30A9               	movlw	169
 10020  010C                     u5377:
 10021  010C  0B89               	decfsz	9,f
 10022  010D  290C               	goto	u5377
 10023  010E  0BB6               	decfsz	??_main^(0+128),f
 10024  010F  290C               	goto	u5377
 10025  0110  0BB7               	decfsz	(??_main^(0+128)+1),f
 10026  0111  290C               	goto	u5377
 10027  0112  3200               	nop2
 10028                           
 10029                           ;main.c: 276:     while(PORTCbits.RC5==1){
 10030  0113  295A               	goto	l6284
 10031  0114                     l1473:
 10032                           
 10033                           ;main.c: 277:         if(PORTBbits.RB4==0){
 10034  0114  1A0D               	btfsc	13,4	;volatile
 10035  0115  2917               	goto	u5261
 10036  0116  2918               	goto	u5260
 10037  0117                     u5261:
 10038  0117  291D               	goto	l6274
 10039  0118                     u5260:
 10040  0118                     l6272:
 10041                           
 10042                           ;main.c: 278:             minutes++;
 10043  0118  3001               	movlw	1
 10044  0119  0021               	movlb	1	; select bank1
 10045  011A  00B6               	movwf	??_main^(0+128)
 10046  011B  0836               	movf	??_main^(0+128),w
 10047  011C  07FC               	addwf	_minutes,f
 10048  011D                     l6274:
 10049  011D  3192  22B9  3180   	fcall	_LCDbusy
 10050  0120  0020               	movlb	0	; select bank0
 10051  0121  0827               	movf	?_LCDbusy,w
 10052  0122  0428               	iorwf	?_LCDbusy+1,w
 10053  0123  1D03               	btfss	3,2
 10054  0124  2926               	goto	u5271
 10055  0125  2927               	goto	u5270
 10056  0126                     u5271:
 10057  0126  291D               	goto	l6274
 10058  0127                     u5270:
 10059  0127                     l6276:
 10060                           
 10061                           ;main.c: 281:         LCDcmd(0x80);
 10062  0127  3080               	movlw	128
 10063  0128  3191  21E7  3180   	fcall	_LCDcmd
 10064  012B                     l6278:
 10065                           
 10066                           ;main.c: 282:         sprintf(buf, "%02d:%02d:%02d      ", hours, minutes, seconds);
 10067  012B  3020               	movlw	low (STR_4| (0+32768))
 10068  012C  0021               	movlb	1	; select bank1
 10069  012D  00A6               	movwf	sprintf@fmt^(0+128)
 10070  012E  3098               	movlw	high (STR_4| (0+32768))
 10071  012F  00A7               	movwf	(sprintf@fmt^(0+128)+1)
 10072  0130  087D               	movf	_hours,w
 10073  0131  00B6               	movwf	??_main^(0+128)
 10074  0132  01B7               	clrf	(??_main^(0+128)+1)
 10075  0133  0836               	movf	??_main^(0+128),w
 10076  0134  00A8               	movwf	(?_sprintf^(0+128)+2)
 10077  0135  0837               	movf	(??_main+1)^(0+128),w
 10078  0136  00A9               	movwf	((?_sprintf+1)^(0+128)+2)
 10079  0137  087C               	movf	_minutes,w
 10080  0138  00B8               	movwf	(??_main+2)^(0+128)
 10081  0139  01B9               	clrf	((??_main+2)^(0+128)+1)
 10082  013A  0838               	movf	(??_main+2)^(0+128),w
 10083  013B  00AA               	movwf	(?_sprintf^(0+128)+4)
 10084  013C  0839               	movf	(??_main+3)^(0+128),w
 10085  013D  00AB               	movwf	((?_sprintf+1)^(0+128)+4)
 10086  013E  085E               	movf	_seconds^(0+128),w
 10087  013F  00BA               	movwf	(??_main+4)^(0+128)
 10088  0140  01BB               	clrf	((??_main+4)^(0+128)+1)
 10089  0141  083A               	movf	(??_main+4)^(0+128),w
 10090  0142  00AC               	movwf	(?_sprintf^(0+128)+6)
 10091  0143  083B               	movf	(??_main+5)^(0+128),w
 10092  0144  00AD               	movwf	((?_sprintf+1)^(0+128)+6)
 10093  0145  30C2               	movlw	(low (main@buf| 0))& (0+255)
 10094  0146  3194  2484  3180   	fcall	_sprintf
 10095  0149                     l6280:
 10096                           
 10097                           ;main.c: 283:         LCDstr(buf);
 10098  0149  30C2               	movlw	low main@buf
 10099  014A  0020               	movlb	0	; select bank0
 10100  014B  00A9               	movwf	LCDstr@p
 10101  014C  3000               	movlw	high main@buf
 10102  014D  00AA               	movwf	LCDstr@p+1
 10103  014E  3193  2376  3180   	fcall	_LCDstr
 10104  0151                     l6282:
 10105                           
 10106                           ;main.c: 284:         _delay((unsigned long)((250)*(1000000/4000.0)));
 10107  0151  3052               	movlw	82
 10108  0152  0021               	movlb	1	; select bank1
 10109  0153  00B6               	movwf	??_main^(0+128)
 10110  0154  3029               	movlw	41
 10111  0155                     u5387:
 10112  0155  0B89               	decfsz	9,f
 10113  0156  2955               	goto	u5387
 10114  0157  0BB6               	decfsz	??_main^(0+128),f
 10115  0158  2955               	goto	u5387
 10116  0159  3200               	nop2
 10117  015A                     l6284:
 10118                           
 10119                           ;main.c: 276:     while(PORTCbits.RC5==1){
 10120  015A  0020               	movlb	0	; select bank0
 10121  015B  1A8E               	btfsc	14,5	;volatile
 10122  015C  295E               	goto	u5281
 10123  015D  295F               	goto	u5280
 10124  015E                     u5281:
 10125  015E  2914               	goto	l1473
 10126  015F                     u5280:
 10127  015F                     l6286:
 10128                           
 10129                           ;main.c: 286:     LCDcmd(0x80);
 10130  015F  3080               	movlw	128
 10131  0160  3191  21E7  3180   	fcall	_LCDcmd
 10132  0163                     l6288:
 10133                           
 10134                           ;main.c: 287:     LCDstr("insert seconds");
 10135  0163  3058               	movlw	low (STR_5| (0+32768))
 10136  0164  0020               	movlb	0	; select bank0
 10137  0165  00A9               	movwf	LCDstr@p
 10138  0166  3098               	movlw	high (STR_5| (0+32768))
 10139  0167  00AA               	movwf	LCDstr@p+1
 10140  0168  3193  2376  3180   	fcall	_LCDstr
 10141  016B                     l6290:
 10142                           
 10143                           ;main.c: 288:     _delay((unsigned long)((1000)*(1000000/4000.0)));
 10144  016B  3002               	movlw	2
 10145  016C  0021               	movlb	1	; select bank1
 10146  016D  00B7               	movwf	(??_main^(0+128)+1)
 10147  016E  3045               	movlw	69
 10148  016F  00B6               	movwf	??_main^(0+128)
 10149  0170  30A9               	movlw	169
 10150  0171                     u5397:
 10151  0171  0B89               	decfsz	9,f
 10152  0172  2971               	goto	u5397
 10153  0173  0BB6               	decfsz	??_main^(0+128),f
 10154  0174  2971               	goto	u5397
 10155  0175  0BB7               	decfsz	(??_main^(0+128)+1),f
 10156  0176  2971               	goto	u5397
 10157  0177  3200               	nop2
 10158                           
 10159                           ;main.c: 290:     while(PORTCbits.RC5==1){
 10160  0178  29BF               	goto	l6304
 10161  0179                     l1480:
 10162                           
 10163                           ;main.c: 291:         if(PORTBbits.RB4==0){
 10164  0179  1A0D               	btfsc	13,4	;volatile
 10165  017A  297C               	goto	u5291
 10166  017B  297D               	goto	u5290
 10167  017C                     u5291:
 10168  017C  2982               	goto	l6294
 10169  017D                     u5290:
 10170  017D                     l6292:
 10171                           
 10172                           ;main.c: 292:             seconds++;
 10173  017D  3001               	movlw	1
 10174  017E  0021               	movlb	1	; select bank1
 10175  017F  00B6               	movwf	??_main^(0+128)
 10176  0180  0836               	movf	??_main^(0+128),w
 10177  0181  07DE               	addwf	_seconds^(0+128),f
 10178  0182                     l6294:
 10179  0182  3192  22B9  3180   	fcall	_LCDbusy
 10180  0185  0020               	movlb	0	; select bank0
 10181  0186  0827               	movf	?_LCDbusy,w
 10182  0187  0428               	iorwf	?_LCDbusy+1,w
 10183  0188  1D03               	btfss	3,2
 10184  0189  298B               	goto	u5301
 10185  018A  298C               	goto	u5300
 10186  018B                     u5301:
 10187  018B  2982               	goto	l6294
 10188  018C                     u5300:
 10189  018C                     l6296:
 10190                           
 10191                           ;main.c: 295:         LCDcmd(0x80);
 10192  018C  3080               	movlw	128
 10193  018D  3191  21E7  3180   	fcall	_LCDcmd
 10194  0190                     l6298:
 10195                           
 10196                           ;main.c: 296:         sprintf(buf, "%02d:%02d:%02d      ", hours, minutes, seconds);
 10197  0190  3020               	movlw	low (STR_4| (0+32768))
 10198  0191  0021               	movlb	1	; select bank1
 10199  0192  00A6               	movwf	sprintf@fmt^(0+128)
 10200  0193  3098               	movlw	high (STR_4| (0+32768))
 10201  0194  00A7               	movwf	(sprintf@fmt^(0+128)+1)
 10202  0195  087D               	movf	_hours,w
 10203  0196  00B6               	movwf	??_main^(0+128)
 10204  0197  01B7               	clrf	(??_main^(0+128)+1)
 10205  0198  0836               	movf	??_main^(0+128),w
 10206  0199  00A8               	movwf	(?_sprintf^(0+128)+2)
 10207  019A  0837               	movf	(??_main+1)^(0+128),w
 10208  019B  00A9               	movwf	((?_sprintf+1)^(0+128)+2)
 10209  019C  087C               	movf	_minutes,w
 10210  019D  00B8               	movwf	(??_main+2)^(0+128)
 10211  019E  01B9               	clrf	((??_main+2)^(0+128)+1)
 10212  019F  0838               	movf	(??_main+2)^(0+128),w
 10213  01A0  00AA               	movwf	(?_sprintf^(0+128)+4)
 10214  01A1  0839               	movf	(??_main+3)^(0+128),w
 10215  01A2  00AB               	movwf	((?_sprintf+1)^(0+128)+4)
 10216  01A3  085E               	movf	_seconds^(0+128),w
 10217  01A4  00BA               	movwf	(??_main+4)^(0+128)
 10218  01A5  01BB               	clrf	((??_main+4)^(0+128)+1)
 10219  01A6  083A               	movf	(??_main+4)^(0+128),w
 10220  01A7  00AC               	movwf	(?_sprintf^(0+128)+6)
 10221  01A8  083B               	movf	(??_main+5)^(0+128),w
 10222  01A9  00AD               	movwf	((?_sprintf+1)^(0+128)+6)
 10223  01AA  30C2               	movlw	(low (main@buf| 0))& (0+255)
 10224  01AB  3194  2484  3180   	fcall	_sprintf
 10225  01AE                     l6300:
 10226                           
 10227                           ;main.c: 297:         LCDstr(buf);
 10228  01AE  30C2               	movlw	low main@buf
 10229  01AF  0020               	movlb	0	; select bank0
 10230  01B0  00A9               	movwf	LCDstr@p
 10231  01B1  3000               	movlw	high main@buf
 10232  01B2  00AA               	movwf	LCDstr@p+1
 10233  01B3  3193  2376  3180   	fcall	_LCDstr
 10234  01B6                     l6302:
 10235                           
 10236                           ;main.c: 298:         _delay((unsigned long)((250)*(1000000/4000.0)));
 10237  01B6  3052               	movlw	82
 10238  01B7  0021               	movlb	1	; select bank1
 10239  01B8  00B6               	movwf	??_main^(0+128)
 10240  01B9  3029               	movlw	41
 10241  01BA                     u5407:
 10242  01BA  0B89               	decfsz	9,f
 10243  01BB  29BA               	goto	u5407
 10244  01BC  0BB6               	decfsz	??_main^(0+128),f
 10245  01BD  29BA               	goto	u5407
 10246  01BE  3200               	nop2
 10247  01BF                     l6304:
 10248                           
 10249                           ;main.c: 290:     while(PORTCbits.RC5==1){
 10250  01BF  0020               	movlb	0	; select bank0
 10251  01C0  1A8E               	btfsc	14,5	;volatile
 10252  01C1  29C3               	goto	u5311
 10253  01C2  29C4               	goto	u5310
 10254  01C3                     u5311:
 10255  01C3  2979               	goto	l1480
 10256  01C4                     u5310:
 10257  01C4                     l6306:
 10258                           
 10259                           ;main.c: 302:     TMR1_SetInterruptHandler(timerInterrupt);
 10260  01C4  30AC               	movlw	low _timerInterrupt
 10261  01C5  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 10262  01C6  300B               	movlw	high _timerInterrupt
 10263  01C7  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 10264  01C8  3192  2209  3180   	fcall	_TMR1_SetInterruptHandler
 10265  01CB                     l6308:
 10266                           
 10267                           ;main.c: 304:     {;main.c: 305:         parseEPROMInitialization(&magic_word,&NREG,&NR,
      +                          &WI,&RI,&PMON,&TALA,&ALAT,&ALAL,&ALAF,&CLKH,&CLKM,&checksum);
 10268  01CB  30EA               	movlw	(low (_NREG| 0))& (0+255)
 10269  01CC  0021               	movlb	1	; select bank1
 10270  01CD  00B6               	movwf	??_main^(0+128)
 10271  01CE  0836               	movf	??_main^(0+128),w
 10272  01CF  0020               	movlb	0	; select bank0
 10273  01D0  00A2               	movwf	parseEPROMInitialization@NREG
 10274  01D1  30E9               	movlw	(low (_NR| 0))& (0+255)
 10275  01D2  0021               	movlb	1	; select bank1
 10276  01D3  00B7               	movwf	(??_main+1)^(0+128)
 10277  01D4  0837               	movf	(??_main+1)^(0+128),w
 10278  01D5  0020               	movlb	0	; select bank0
 10279  01D6  00A3               	movwf	parseEPROMInitialization@NR
 10280  01D7  30E8               	movlw	(low (_WI| 0))& (0+255)
 10281  01D8  0021               	movlb	1	; select bank1
 10282  01D9  00B8               	movwf	(??_main+2)^(0+128)
 10283  01DA  0838               	movf	(??_main+2)^(0+128),w
 10284  01DB  0020               	movlb	0	; select bank0
 10285  01DC  00A4               	movwf	parseEPROMInitialization@WI
 10286  01DD  30E7               	movlw	(low (_RI| 0))& (0+255)
 10287  01DE  0021               	movlb	1	; select bank1
 10288  01DF  00B9               	movwf	(??_main+3)^(0+128)
 10289  01E0  0839               	movf	(??_main+3)^(0+128),w
 10290  01E1  0020               	movlb	0	; select bank0
 10291  01E2  00A5               	movwf	parseEPROMInitialization@RI
 10292  01E3  30E6               	movlw	(low (_PMON| 0))& (0+255)
 10293  01E4  0021               	movlb	1	; select bank1
 10294  01E5  00BA               	movwf	(??_main+4)^(0+128)
 10295  01E6  083A               	movf	(??_main+4)^(0+128),w
 10296  01E7  0020               	movlb	0	; select bank0
 10297  01E8  00A6               	movwf	parseEPROMInitialization@PMON
 10298  01E9  30E5               	movlw	(low (_TALA| 0))& (0+255)
 10299  01EA  0021               	movlb	1	; select bank1
 10300  01EB  00BB               	movwf	(??_main+5)^(0+128)
 10301  01EC  083B               	movf	(??_main+5)^(0+128),w
 10302  01ED  0020               	movlb	0	; select bank0
 10303  01EE  00A7               	movwf	parseEPROMInitialization@TALA
 10304  01EF  30E4               	movlw	(low (_ALAT| 0))& (0+255)
 10305  01F0  0021               	movlb	1	; select bank1
 10306  01F1  00BC               	movwf	(??_main+6)^(0+128)
 10307  01F2  083C               	movf	(??_main+6)^(0+128),w
 10308  01F3  0020               	movlb	0	; select bank0
 10309  01F4  00A8               	movwf	parseEPROMInitialization@ALAT
 10310  01F5  30E3               	movlw	(low (_ALAL| 0))& (0+255)
 10311  01F6  0021               	movlb	1	; select bank1
 10312  01F7  00BD               	movwf	(??_main+7)^(0+128)
 10313  01F8  083D               	movf	(??_main+7)^(0+128),w
 10314  01F9  0020               	movlb	0	; select bank0
 10315  01FA  00A9               	movwf	parseEPROMInitialization@ALAL
 10316  01FB  30E2               	movlw	(low (_ALAF| 0))& (0+255)
 10317  01FC  0021               	movlb	1	; select bank1
 10318  01FD  00BE               	movwf	(??_main+8)^(0+128)
 10319  01FE  083E               	movf	(??_main+8)^(0+128),w
 10320  01FF  0020               	movlb	0	; select bank0
 10321  0200  00AA               	movwf	parseEPROMInitialization@ALAF
 10322  0201  30E1               	movlw	(low (_CLKH| 0))& (0+255)
 10323  0202  0021               	movlb	1	; select bank1
 10324  0203  00BF               	movwf	(??_main+9)^(0+128)
 10325  0204  083F               	movf	(??_main+9)^(0+128),w
 10326  0205  0020               	movlb	0	; select bank0
 10327  0206  00AB               	movwf	parseEPROMInitialization@CLKH
 10328  0207  30E0               	movlw	(low (_CLKM| 0))& (0+255)
 10329  0208  0021               	movlb	1	; select bank1
 10330  0209  00C0               	movwf	(??_main+10)^(0+128)
 10331  020A  0840               	movf	(??_main+10)^(0+128),w
 10332  020B  0020               	movlb	0	; select bank0
 10333  020C  00AC               	movwf	parseEPROMInitialization@CLKM
 10334  020D  30DF               	movlw	(low (_checksum| 0))& (0+255)
 10335  020E  0021               	movlb	1	; select bank1
 10336  020F  00C1               	movwf	(??_main+11)^(0+128)
 10337  0210  0841               	movf	(??_main+11)^(0+128),w
 10338  0211  0020               	movlb	0	; select bank0
 10339  0212  00AD               	movwf	parseEPROMInitialization@checksum
 10340  0213  30EB               	movlw	(low (_magic_word| 0))& (0+255)
 10341  0214  3187  2743  3180   	fcall	_parseEPROMInitialization
 10342  0217                     l6310:
 10343                           
 10344                           ;main.c: 307:         c = readTC74();
 10345  0217  318E  26B0  3180   	fcall	_readTC74
 10346  021A  0021               	movlb	1	; select bank1
 10347  021B  00B6               	movwf	??_main^(0+128)
 10348  021C  0836               	movf	??_main^(0+128),w
 10349  021D  00D3               	movwf	main@c^(0+128)
 10350  021E                     l6312:
 10351                           
 10352                           ;main.c: 308:         LCDcmd(0x80);
 10353  021E  3080               	movlw	128
 10354  021F  3191  21E7  3180   	fcall	_LCDcmd
 10355  0222                     l6314:	
 10356                           ;main.c: 309:         while (LCDbusy());
 10357                           
 10358  0222  3192  22B9  3180   	fcall	_LCDbusy
 10359  0225  0020               	movlb	0	; select bank0
 10360  0226  0827               	movf	?_LCDbusy,w
 10361  0227  0428               	iorwf	?_LCDbusy+1,w
 10362  0228  1D03               	btfss	3,2
 10363  0229  2A2B               	goto	u5321
 10364  022A  2A2C               	goto	u5320
 10365  022B                     u5321:
 10366  022B  2A22               	goto	l6314
 10367  022C                     u5320:
 10368  022C                     l6316:
 10369                           
 10370                           ;main.c: 310:         sprintf(buf, "%02d:%02d:%02d", hours, minutes, seconds);
 10371  022C  3049               	movlw	low (STR_7| (0+32768))
 10372  022D  0021               	movlb	1	; select bank1
 10373  022E  00A6               	movwf	sprintf@fmt^(0+128)
 10374  022F  3098               	movlw	high (STR_7| (0+32768))
 10375  0230  00A7               	movwf	(sprintf@fmt^(0+128)+1)
 10376  0231  087D               	movf	_hours,w
 10377  0232  00B6               	movwf	??_main^(0+128)
 10378  0233  01B7               	clrf	(??_main^(0+128)+1)
 10379  0234  0836               	movf	??_main^(0+128),w
 10380  0235  00A8               	movwf	(?_sprintf^(0+128)+2)
 10381  0236  0837               	movf	(??_main+1)^(0+128),w
 10382  0237  00A9               	movwf	((?_sprintf+1)^(0+128)+2)
 10383  0238  087C               	movf	_minutes,w
 10384  0239  00B8               	movwf	(??_main+2)^(0+128)
 10385  023A  01B9               	clrf	((??_main+2)^(0+128)+1)
 10386  023B  0838               	movf	(??_main+2)^(0+128),w
 10387  023C  00AA               	movwf	(?_sprintf^(0+128)+4)
 10388  023D  0839               	movf	(??_main+3)^(0+128),w
 10389  023E  00AB               	movwf	((?_sprintf+1)^(0+128)+4)
 10390  023F  085E               	movf	_seconds^(0+128),w
 10391  0240  00BA               	movwf	(??_main+4)^(0+128)
 10392  0241  01BB               	clrf	((??_main+4)^(0+128)+1)
 10393  0242  083A               	movf	(??_main+4)^(0+128),w
 10394  0243  00AC               	movwf	(?_sprintf^(0+128)+6)
 10395  0244  083B               	movf	(??_main+5)^(0+128),w
 10396  0245  00AD               	movwf	((?_sprintf+1)^(0+128)+6)
 10397  0246  30C2               	movlw	(low (main@buf| 0))& (0+255)
 10398  0247  3194  2484  3180   	fcall	_sprintf
 10399  024A                     l6318:
 10400                           
 10401                           ;main.c: 311:         LCDstr(buf);
 10402  024A  30C2               	movlw	low main@buf
 10403  024B  0020               	movlb	0	; select bank0
 10404  024C  00A9               	movwf	LCDstr@p
 10405  024D  3000               	movlw	high main@buf
 10406  024E  00AA               	movwf	LCDstr@p+1
 10407  024F  3193  2376  3180   	fcall	_LCDstr
 10408  0252                     l6320:
 10409                           
 10410                           ;main.c: 312:         LCDpos(0,11);
 10411  0252  300B               	movlw	11
 10412  0253  0021               	movlb	1	; select bank1
 10413  0254  00B6               	movwf	??_main^(0+128)
 10414  0255  0836               	movf	??_main^(0+128),w
 10415  0256  0020               	movlb	0	; select bank0
 10416  0257  00A9               	movwf	LCDpos@c
 10417  0258  3000               	movlw	0
 10418  0259  3193  23AC  3180   	fcall	_LCDpos
 10419  025C                     l6322:	
 10420                           ;main.c: 313:         while (LCDbusy());
 10421                           
 10422  025C  3192  22B9  3180   	fcall	_LCDbusy
 10423  025F  0020               	movlb	0	; select bank0
 10424  0260  0827               	movf	?_LCDbusy,w
 10425  0261  0428               	iorwf	?_LCDbusy+1,w
 10426  0262  1D03               	btfss	3,2
 10427  0263  2A65               	goto	u5331
 10428  0264  2A66               	goto	u5330
 10429  0265                     u5331:
 10430  0265  2A5C               	goto	l6322
 10431  0266                     u5330:
 10432  0266                     l6324:
 10433                           
 10434                           ;main.c: 314:         LCDstr("STR");
 10435  0266  308A               	movlw	low (STR_8| (0+32768))
 10436  0267  00A9               	movwf	LCDstr@p
 10437  0268  3098               	movlw	high (STR_8| (0+32768))
 10438  0269  00AA               	movwf	LCDstr@p+1
 10439  026A  3193  2376  3180   	fcall	_LCDstr
 10440  026D                     l6326:
 10441                           
 10442                           ;main.c: 316:         LCDcmd(0xc0);
 10443  026D  30C0               	movlw	192
 10444  026E  3191  21E7  3180   	fcall	_LCDcmd
 10445  0271                     l6328:
 10446                           
 10447                           ;main.c: 317:         sprintf(buf, "%02d C", c);
 10448  0271  3083               	movlw	low (STR_9| (0+32768))
 10449  0272  0021               	movlb	1	; select bank1
 10450  0273  00A6               	movwf	sprintf@fmt^(0+128)
 10451  0274  3098               	movlw	high (STR_9| (0+32768))
 10452  0275  00A7               	movwf	(sprintf@fmt^(0+128)+1)
 10453  0276  0853               	movf	main@c^(0+128),w
 10454  0277  00B6               	movwf	??_main^(0+128)
 10455  0278  01B7               	clrf	(??_main^(0+128)+1)
 10456  0279  0836               	movf	??_main^(0+128),w
 10457  027A  00A8               	movwf	(?_sprintf^(0+128)+2)
 10458  027B  0837               	movf	(??_main+1)^(0+128),w
 10459  027C  00A9               	movwf	((?_sprintf+1)^(0+128)+2)
 10460  027D  30C2               	movlw	(low (main@buf| 0))& (0+255)
 10461  027E  3194  2484  3180   	fcall	_sprintf
 10462  0281                     l6330:	
 10463                           ;main.c: 318:         while (LCDbusy());
 10464                           
 10465  0281  3192  22B9  3180   	fcall	_LCDbusy
 10466  0284  0020               	movlb	0	; select bank0
 10467  0285  0827               	movf	?_LCDbusy,w
 10468  0286  0428               	iorwf	?_LCDbusy+1,w
 10469  0287  1D03               	btfss	3,2
 10470  0288  2A8A               	goto	u5341
 10471  0289  2A8B               	goto	u5340
 10472  028A                     u5341:
 10473  028A  2A81               	goto	l6330
 10474  028B                     u5340:
 10475  028B                     l6332:
 10476                           
 10477                           ;main.c: 319:         LCDstr(buf);
 10478  028B  30C2               	movlw	low main@buf
 10479  028C  00A9               	movwf	LCDstr@p
 10480  028D  3000               	movlw	high main@buf
 10481  028E  00AA               	movwf	LCDstr@p+1
 10482  028F  3193  2376  3180   	fcall	_LCDstr
 10483  0292                     l6334:
 10484                           
 10485                           ;main.c: 320:         _delay((unsigned long)((2000)*(1000000/4000.0)));
 10486  0292  3003               	movlw	3
 10487  0293  0021               	movlb	1	; select bank1
 10488  0294  00B7               	movwf	(??_main^(0+128)+1)
 10489  0295  308A               	movlw	138
 10490  0296  00B6               	movwf	??_main^(0+128)
 10491  0297  3055               	movlw	85
 10492  0298                     u5417:
 10493  0298  0B89               	decfsz	9,f
 10494  0299  2A98               	goto	u5417
 10495  029A  0BB6               	decfsz	??_main^(0+128),f
 10496  029B  2A98               	goto	u5417
 10497  029C  0BB7               	decfsz	(??_main^(0+128)+1),f
 10498  029D  2A98               	goto	u5417
 10499  029E  3200               	nop2
 10500  029F  29CB               	goto	l6308
 10501  02A0  3180  2825         	ljmp	start
 10502  02A2                     __end_of_main:
 10503                           
 10504                           	psect	text1
 10505  15F7                     __ptext1:	
 10506 ;; *************** function _storeEPROMBuild *****************
 10507 ;; Defined at:
 10508 ;;		line 50 in file "EPROMlib.c"
 10509 ;; Parameters:    Size  Location     Type
 10510 ;;  hours           1    wreg     unsigned char 
 10511 ;;  minutes         1    7[BANK0 ] unsigned char 
 10512 ;;  seconds         1    8[BANK0 ] unsigned char 
 10513 ;;  temperature     1    9[BANK0 ] unsigned char 
 10514 ;;  luminosity      1   10[BANK0 ] unsigned char 
 10515 ;;  operation       1   11[BANK0 ] unsigned char 
 10516 ;; Auto vars:     Size  Location     Type
 10517 ;;  hours           1   13[BANK0 ] unsigned char 
 10518 ;;  dataAddr        2   14[BANK0 ] unsigned short 
 10519 ;; Return value:  Size  Location     Type
 10520 ;;                  1    wreg      void 
 10521 ;; Registers used:
 10522 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10523 ;; Tracked objects:
 10524 ;;		On entry : 0/0
 10525 ;;		On exit  : 0/0
 10526 ;;		Unchanged: 0/0
 10527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10528 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10529 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10530 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10531 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10532 ;;Total ram usage:        9 bytes
 10533 ;; Hardware stack levels used: 1
 10534 ;; Hardware stack levels required when called: 8
 10535 ;; This function calls:
 10536 ;;		_DATAEE_WriteByte
 10537 ;;		_operADDR
 10538 ;; This function is called by:
 10539 ;;		_main
 10540 ;; This function uses a non-reentrant model
 10541 ;;
 10542                           
 10543                           
 10544                           ;psect for function _storeEPROMBuild
 10545  15F7                     _storeEPROMBuild:
 10546                           
 10547                           ;incstack = 0
 10548                           ; Regs used in _storeEPROMBuild: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10549                           ;storeEPROMBuild@hours stored from wreg
 10550  15F7  0020               	movlb	0	; select bank0
 10551  15F8  00AD               	movwf	storeEPROMBuild@hours
 10552  15F9                     l5708:
 10553                           
 10554                           ;EPROMlib.c: 51:     uint16_t dataAddr;;EPROMlib.c: 53:     dataAddr = operADDR(operatio
      +                          n);
 10555  15F9  082B               	movf	storeEPROMBuild@operation,w
 10556  15FA  3195  2530  3195   	fcall	_operADDR
 10557  15FD  0020               	movlb	0	; select bank0
 10558  15FE  0821               	movf	?_operADDR+1,w
 10559  15FF  00AF               	movwf	storeEPROMBuild@dataAddr+1
 10560  1600  0820               	movf	?_operADDR,w
 10561  1601  00AE               	movwf	storeEPROMBuild@dataAddr
 10562  1602                     l5710:
 10563                           
 10564                           ;EPROMlib.c: 54:     DATAEE_WriteByte(dataAddr, hours);
 10565  1602  082F               	movf	storeEPROMBuild@dataAddr+1,w
 10566  1603  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10567  1604  082E               	movf	storeEPROMBuild@dataAddr,w
 10568  1605  00A0               	movwf	DATAEE_WriteByte@bAdd
 10569  1606  082D               	movf	storeEPROMBuild@hours,w
 10570  1607  00AC               	movwf	??_storeEPROMBuild
 10571  1608  082C               	movf	??_storeEPROMBuild,w
 10572  1609  00A2               	movwf	DATAEE_WriteByte@bData
 10573  160A  3188  2004  3195   	fcall	_DATAEE_WriteByte
 10574  160D                     l5712:
 10575                           
 10576                           ;EPROMlib.c: 55:     DATAEE_WriteByte(dataAddr + 1, minutes);
 10577  160D  0020               	movlb	0	; select bank0
 10578  160E  082E               	movf	storeEPROMBuild@dataAddr,w
 10579  160F  3E01               	addlw	1
 10580  1610  00A0               	movwf	DATAEE_WriteByte@bAdd
 10581  1611  3000               	movlw	0
 10582  1612  3D2F               	addwfc	storeEPROMBuild@dataAddr+1,w
 10583  1613  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10584  1614  0827               	movf	storeEPROMBuild@minutes,w
 10585  1615  00AC               	movwf	??_storeEPROMBuild
 10586  1616  082C               	movf	??_storeEPROMBuild,w
 10587  1617  00A2               	movwf	DATAEE_WriteByte@bData
 10588  1618  3188  2004  3195   	fcall	_DATAEE_WriteByte
 10589  161B                     l5714:
 10590                           
 10591                           ;EPROMlib.c: 56:     DATAEE_WriteByte(dataAddr + 2, seconds);
 10592  161B  0020               	movlb	0	; select bank0
 10593  161C  082E               	movf	storeEPROMBuild@dataAddr,w
 10594  161D  3E02               	addlw	2
 10595  161E  00A0               	movwf	DATAEE_WriteByte@bAdd
 10596  161F  3000               	movlw	0
 10597  1620  3D2F               	addwfc	storeEPROMBuild@dataAddr+1,w
 10598  1621  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10599  1622  0828               	movf	storeEPROMBuild@seconds,w
 10600  1623  00AC               	movwf	??_storeEPROMBuild
 10601  1624  082C               	movf	??_storeEPROMBuild,w
 10602  1625  00A2               	movwf	DATAEE_WriteByte@bData
 10603  1626  3188  2004  3195   	fcall	_DATAEE_WriteByte
 10604  1629                     l5716:
 10605                           
 10606                           ;EPROMlib.c: 57:     DATAEE_WriteByte(dataAddr + 3, temperature);
 10607  1629  0020               	movlb	0	; select bank0
 10608  162A  082E               	movf	storeEPROMBuild@dataAddr,w
 10609  162B  3E03               	addlw	3
 10610  162C  00A0               	movwf	DATAEE_WriteByte@bAdd
 10611  162D  3000               	movlw	0
 10612  162E  3D2F               	addwfc	storeEPROMBuild@dataAddr+1,w
 10613  162F  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10614  1630  0829               	movf	storeEPROMBuild@temperature,w
 10615  1631  00AC               	movwf	??_storeEPROMBuild
 10616  1632  082C               	movf	??_storeEPROMBuild,w
 10617  1633  00A2               	movwf	DATAEE_WriteByte@bData
 10618  1634  3188  2004  3195   	fcall	_DATAEE_WriteByte
 10619  1637                     l5718:
 10620                           
 10621                           ;EPROMlib.c: 58:     DATAEE_WriteByte(dataAddr + 4, luminosity);
 10622  1637  0020               	movlb	0	; select bank0
 10623  1638  082E               	movf	storeEPROMBuild@dataAddr,w
 10624  1639  3E04               	addlw	4
 10625  163A  00A0               	movwf	DATAEE_WriteByte@bAdd
 10626  163B  3000               	movlw	0
 10627  163C  3D2F               	addwfc	storeEPROMBuild@dataAddr+1,w
 10628  163D  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 10629  163E  082A               	movf	storeEPROMBuild@luminosity,w
 10630  163F  00AC               	movwf	??_storeEPROMBuild
 10631  1640  082C               	movf	??_storeEPROMBuild,w
 10632  1641  00A2               	movwf	DATAEE_WriteByte@bData
 10633  1642  3188  2004  3195   	fcall	_DATAEE_WriteByte
 10634  1645                     l1518:
 10635  1645  0008               	return
 10636  1646                     __end_of_storeEPROMBuild:
 10637                           
 10638                           	psect	text2
 10639  1530                     __ptext2:	
 10640 ;; *************** function _operADDR *****************
 10641 ;; Defined at:
 10642 ;;		line 7 in file "EPROMlib.c"
 10643 ;; Parameters:    Size  Location     Type
 10644 ;;  operation       1    wreg     unsigned char 
 10645 ;; Auto vars:     Size  Location     Type
 10646 ;;  operation       1    4[BANK0 ] unsigned char 
 10647 ;;  dataAddr        2    5[BANK0 ] unsigned short 
 10648 ;; Return value:  Size  Location     Type
 10649 ;;                  2    0[BANK0 ] unsigned short 
 10650 ;; Registers used:
 10651 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10652 ;; Tracked objects:
 10653 ;;		On entry : 0/0
 10654 ;;		On exit  : 0/0
 10655 ;;		Unchanged: 0/0
 10656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10657 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10658 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10659 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10660 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10661 ;;Total ram usage:        7 bytes
 10662 ;; Hardware stack levels used: 1
 10663 ;; Hardware stack levels required when called: 7
 10664 ;; This function calls:
 10665 ;;		Nothing
 10666 ;; This function is called by:
 10667 ;;		_storeEPROMBuild
 10668 ;;		_parseEPROMReading
 10669 ;; This function uses a non-reentrant model
 10670 ;;
 10671                           
 10672                           
 10673                           ;psect for function _operADDR
 10674  1530                     _operADDR:
 10675                           
 10676                           ;incstack = 0
 10677                           ; Regs used in _operADDR: [wreg-fsr0h+status,2+status,0]
 10678                           ;operADDR@operation stored from wreg
 10679  1530  0020               	movlb	0	; select bank0
 10680  1531  00A4               	movwf	operADDR@operation
 10681  1532                     l5458:
 10682                           
 10683                           ;EPROMlib.c: 8:     uint16_t dataAddr;;EPROMlib.c: 9:     switch (operation){
 10684  1532  2D4C               	goto	l5462
 10685  1533                     l1506:	
 10686                           ;EPROMlib.c: 10:         case 100:
 10687                           
 10688                           
 10689                           ;EPROMlib.c: 11:             dataAddr = 0x7000;
 10690  1533  3000               	movlw	0
 10691  1534  00A5               	movwf	operADDR@dataAddr
 10692  1535  3070               	movlw	112
 10693  1536  00A6               	movwf	operADDR@dataAddr+1
 10694                           
 10695                           ;EPROMlib.c: 12:             break;
 10696  1537  2D62               	goto	l5464
 10697  1538                     l1508:	
 10698                           ;EPROMlib.c: 14:         case 101:
 10699                           
 10700                           
 10701                           ;EPROMlib.c: 15:             dataAddr = 0x7005;
 10702  1538  3005               	movlw	5
 10703  1539  00A5               	movwf	operADDR@dataAddr
 10704  153A  3070               	movlw	112
 10705  153B  00A6               	movwf	operADDR@dataAddr+1
 10706                           
 10707                           ;EPROMlib.c: 16:             break;
 10708  153C  2D62               	goto	l5464
 10709  153D                     l1509:	
 10710                           ;EPROMlib.c: 18:         case 102:
 10711                           
 10712                           
 10713                           ;EPROMlib.c: 19:             dataAddr = 0x700A;
 10714  153D  300A               	movlw	10
 10715  153E  00A5               	movwf	operADDR@dataAddr
 10716  153F  3070               	movlw	112
 10717  1540  00A6               	movwf	operADDR@dataAddr+1
 10718                           
 10719                           ;EPROMlib.c: 20:             break;
 10720  1541  2D62               	goto	l5464
 10721  1542                     l1510:	
 10722                           ;EPROMlib.c: 22:         case 103:
 10723                           
 10724                           
 10725                           ;EPROMlib.c: 23:             dataAddr = 0x700F;
 10726  1542  300F               	movlw	15
 10727  1543  00A5               	movwf	operADDR@dataAddr
 10728  1544  3070               	movlw	112
 10729  1545  00A6               	movwf	operADDR@dataAddr+1
 10730                           
 10731                           ;EPROMlib.c: 24:             break;
 10732  1546  2D62               	goto	l5464
 10733  1547                     l1511:	
 10734                           ;EPROMlib.c: 26:         default:
 10735                           
 10736                           
 10737                           ;EPROMlib.c: 27:             dataAddr = 0xF0FF;
 10738  1547  30FF               	movlw	255
 10739  1548  00A5               	movwf	operADDR@dataAddr
 10740  1549  30F0               	movlw	240
 10741  154A  00A6               	movwf	operADDR@dataAddr+1
 10742                           
 10743                           ;EPROMlib.c: 28:             break;
 10744  154B  2D62               	goto	l5464
 10745  154C                     l5462:
 10746  154C  0824               	movf	operADDR@operation,w
 10747  154D  00A2               	movwf	??_operADDR
 10748  154E  01A3               	clrf	??_operADDR+1
 10749                           
 10750                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10751                           ; Switch size 1, requested type "simple"
 10752                           ; Number of cases is 1, Range of values is 0 to 0
 10753                           ; switch strategies available:
 10754                           ; Name         Instructions Cycles
 10755                           ; simple_byte            4     3 (average)
 10756                           ; direct_byte            8     6 (fixed)
 10757                           ; jumptable            260     6 (fixed)
 10758                           ;	Chosen strategy is simple_byte
 10759  154F  0823               	movf	??_operADDR+1,w
 10760  1550  3A00               	xorlw	0	; case 0
 10761  1551  1903               	skipnz
 10762  1552  2D54               	goto	l6420
 10763  1553  2D47               	goto	l1511
 10764  1554                     l6420:
 10765                           
 10766                           ; Switch size 1, requested type "simple"
 10767                           ; Number of cases is 4, Range of values is 100 to 103
 10768                           ; switch strategies available:
 10769                           ; Name         Instructions Cycles
 10770                           ; simple_byte           13     7 (average)
 10771                           ; direct_byte           17     9 (fixed)
 10772                           ; jumptable            263     9 (fixed)
 10773                           ;	Chosen strategy is simple_byte
 10774  1554  0822               	movf	??_operADDR,w
 10775  1555  3A64               	xorlw	100	; case 100
 10776  1556  1903               	skipnz
 10777  1557  2D33               	goto	l1506
 10778  1558  3A01               	xorlw	1	; case 101
 10779  1559  1903               	skipnz
 10780  155A  2D38               	goto	l1508
 10781  155B  3A03               	xorlw	3	; case 102
 10782  155C  1903               	skipnz
 10783  155D  2D3D               	goto	l1509
 10784  155E  3A01               	xorlw	1	; case 103
 10785  155F  1903               	skipnz
 10786  1560  2D42               	goto	l1510
 10787  1561  2D47               	goto	l1511
 10788  1562                     l5464:
 10789                           
 10790                           ;EPROMlib.c: 31:     return dataAddr;
 10791  1562  0826               	movf	operADDR@dataAddr+1,w
 10792  1563  00A1               	movwf	?_operADDR+1
 10793  1564  0825               	movf	operADDR@dataAddr,w
 10794  1565  00A0               	movwf	?_operADDR
 10795  1566                     l1512:
 10796  1566  0008               	return
 10797  1567                     __end_of_operADDR:
 10798                           
 10799                           	psect	text3
 10800  1484                     __ptext3:	
 10801 ;; *************** function _sprintf *****************
 10802 ;; Defined at:
 10803 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
 10804 ;; Parameters:    Size  Location     Type
 10805 ;;  s               1    wreg     PTR unsigned char 
 10806 ;;		 -> main@buf(17), 
 10807 ;;  fmt             2    6[BANK1 ] PTR const unsigned char 
 10808 ;;		 -> STR_9(7), STR_7(15), STR_6(21), STR_4(21), 
 10809 ;;		 -> STR_2(20), 
 10810 ;; Auto vars:     Size  Location     Type
 10811 ;;  s               1   16[BANK1 ] PTR unsigned char 
 10812 ;;		 -> main@buf(17), 
 10813 ;;  f               5   17[BANK1 ] struct _IO_FILE
 10814 ;;  ret             2    0        int 
 10815 ;;  ap              1   15[BANK1 ] PTR void [1]
 10816 ;;		 -> ?_sprintf(2), 
 10817 ;; Return value:  Size  Location     Type
 10818 ;;                  2    6[BANK1 ] int 
 10819 ;; Registers used:
 10820 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10821 ;; Tracked objects:
 10822 ;;		On entry : 0/0
 10823 ;;		On exit  : 0/0
 10824 ;;		Unchanged: 0/0
 10825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10826 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0
 10827 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
 10828 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
 10829 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0
 10830 ;;Total ram usage:       16 bytes
 10831 ;; Hardware stack levels used: 1
 10832 ;; Hardware stack levels required when called: 14
 10833 ;; This function calls:
 10834 ;;		_vfprintf
 10835 ;; This function is called by:
 10836 ;;		_main
 10837 ;; This function uses a non-reentrant model
 10838 ;;
 10839                           
 10840                           
 10841                           ;psect for function _sprintf
 10842  1484                     _sprintf:
 10843                           
 10844                           ;incstack = 0
 10845                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10846                           ;sprintf@s stored from wreg
 10847  1484  0021               	movlb	1	; select bank1
 10848  1485  00B0               	movwf	sprintf@s^(0+128)
 10849  1486                     l5720:
 10850  1486  30A8               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
 10851  1487  00AE               	movwf	??_sprintf^(0+128)
 10852  1488  082E               	movf	??_sprintf^(0+128),w
 10853  1489  00AF               	movwf	sprintf@ap^(0+128)
 10854  148A  0830               	movf	sprintf@s^(0+128),w
 10855  148B  00AE               	movwf	??_sprintf^(0+128)
 10856  148C  082E               	movf	??_sprintf^(0+128),w
 10857  148D  00B1               	movwf	sprintf@f^(0+128)
 10858  148E                     l5722:
 10859  148E  01B2               	clrf	(sprintf@f^(0+128)+1)
 10860  148F  01B3               	clrf	((sprintf@f+1)^(0+128)+1)
 10861  1490                     l5724:
 10862  1490  01B4               	clrf	(sprintf@f^(0+128)+3)
 10863  1491  01B5               	clrf	((sprintf@f+1)^(0+128)+3)
 10864  1492                     l5726:
 10865  1492  0827               	movf	(sprintf@fmt+1)^(0+128),w
 10866  1493  00A1               	movwf	(vfprintf@fmt+1)^(0+128)
 10867  1494  0826               	movf	sprintf@fmt^(0+128),w
 10868  1495  00A0               	movwf	vfprintf@fmt^(0+128)
 10869  1496  30AF               	movlw	(low (sprintf@ap| 0))& (0+255)
 10870  1497  00AE               	movwf	??_sprintf^(0+128)
 10871  1498  082E               	movf	??_sprintf^(0+128),w
 10872  1499  00A2               	movwf	vfprintf@ap^(0+128)
 10873  149A  30B1               	movlw	(low (sprintf@f| 0))& (0+255)
 10874  149B  3194  24FB  3194   	fcall	_vfprintf
 10875  149E                     l5728:
 10876  149E  0021               	movlb	1	; select bank1
 10877  149F  0832               	movf	(sprintf@f^(0+128)+1),w
 10878  14A0  0730               	addwf	sprintf@s^(0+128),w
 10879  14A1  00AE               	movwf	??_sprintf^(0+128)
 10880  14A2  082E               	movf	??_sprintf^(0+128),w
 10881  14A3  0086               	movwf	6
 10882  14A4  0187               	clrf	7
 10883  14A5  0181               	clrf	1
 10884  14A6                     l2181:
 10885  14A6  0008               	return
 10886  14A7                     __end_of_sprintf:
 10887                           
 10888                           	psect	text4
 10889  14FB                     __ptext4:	
 10890 ;; *************** function _vfprintf *****************
 10891 ;; Defined at:
 10892 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 10893 ;; Parameters:    Size  Location     Type
 10894 ;;  fp              1    wreg     PTR struct _IO_FILE
 10895 ;;		 -> sprintf@f(5), 
 10896 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
 10897 ;;		 -> STR_9(7), STR_7(15), STR_6(21), STR_4(21), 
 10898 ;;		 -> STR_2(20), 
 10899 ;;  ap              1    2[BANK1 ] PTR PTR void 
 10900 ;;		 -> sprintf@ap(1), 
 10901 ;; Auto vars:     Size  Location     Type
 10902 ;;  fp              1    3[BANK1 ] PTR struct _IO_FILE
 10903 ;;		 -> sprintf@f(5), 
 10904 ;;  cfmt            2    4[BANK1 ] PTR unsigned char 
 10905 ;;		 -> STR_9(7), STR_7(15), STR_6(21), STR_4(21), 
 10906 ;;		 -> STR_2(20), 
 10907 ;; Return value:  Size  Location     Type
 10908 ;;                  2    0[BANK1 ] int 
 10909 ;; Registers used:
 10910 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10911 ;; Tracked objects:
 10912 ;;		On entry : 0/0
 10913 ;;		On exit  : 0/0
 10914 ;;		Unchanged: 0/0
 10915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10916 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10917 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
 10918 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10919 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0
 10920 ;;Total ram usage:        8 bytes
 10921 ;; Hardware stack levels used: 1
 10922 ;; Hardware stack levels required when called: 13
 10923 ;; This function calls:
 10924 ;;		_vfpfcnvrt
 10925 ;; This function is called by:
 10926 ;;		_sprintf
 10927 ;; This function uses a non-reentrant model
 10928 ;;
 10929                           
 10930                           
 10931                           ;psect for function _vfprintf
 10932  14FB                     _vfprintf:
 10933                           
 10934                           ;incstack = 0
 10935                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10936                           ;vfprintf@fp stored from wreg
 10937  14FB  0021               	movlb	1	; select bank1
 10938  14FC  00A3               	movwf	vfprintf@fp^(0+128)
 10939  14FD                     l5474:
 10940                           
 10941                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
 10942  14FD  0821               	movf	(vfprintf@fmt+1)^(0+128),w
 10943  14FE  00A5               	movwf	(vfprintf@cfmt+1)^(0+128)
 10944  14FF  0820               	movf	vfprintf@fmt^(0+128),w
 10945  1500  00A4               	movwf	vfprintf@cfmt^(0+128)
 10946  1501                     l5476:
 10947                           
 10948                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
 10949  1501  0022               	movlb	2	; select bank2
 10950  1502  01BD               	clrf	_nout^(0+256)
 10951  1503  01BE               	clrf	(_nout+1)^(0+256)
 10952                           
 10953                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 10954  1504  2D1D               	goto	l5480
 10955  1505                     l5478:
 10956                           
 10957                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
 10958  1505  30A4               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
 10959  1506  0020               	movlb	0	; select bank0
 10960  1507  00EE               	movwf	??_vfprintf
 10961  1508  086E               	movf	??_vfprintf,w
 10962  1509  00D9               	movwf	vfpfcnvrt@fmt
 10963  150A  0021               	movlb	1	; select bank1
 10964  150B  0822               	movf	vfprintf@ap^(0+128),w
 10965  150C  0020               	movlb	0	; select bank0
 10966  150D  00EF               	movwf	??_vfprintf+1
 10967  150E  086F               	movf	??_vfprintf+1,w
 10968  150F  00DA               	movwf	vfpfcnvrt@ap
 10969  1510  0021               	movlb	1	; select bank1
 10970  1511  0823               	movf	vfprintf@fp^(0+128),w
 10971  1512  3182  22A2  3194   	fcall	_vfpfcnvrt
 10972  1515  0020               	movlb	0	; select bank0
 10973  1516  0859               	movf	?_vfpfcnvrt,w
 10974  1517  0022               	movlb	2	; select bank2
 10975  1518  07BD               	addwf	_nout^(0+256),f
 10976  1519  0020               	movlb	0	; select bank0
 10977  151A  085A               	movf	?_vfpfcnvrt+1,w
 10978  151B  0022               	movlb	2	; select bank2
 10979  151C  3DBE               	addwfc	(_nout+1)^(0+256),f
 10980  151D                     l5480:
 10981                           
 10982                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
 10983  151D  0021               	movlb	1	; select bank1
 10984  151E  0824               	movf	vfprintf@cfmt^(0+128),w
 10985  151F  0084               	movwf	4
 10986  1520  0825               	movf	(vfprintf@cfmt+1)^(0+128),w
 10987  1521  0085               	movwf	5
 10988  1522  0012               	moviw fsr0++
 10989  1523  1D03               	btfss	3,2
 10990  1524  2D26               	goto	u4621
 10991  1525  2D27               	goto	u4620
 10992  1526                     u4621:
 10993  1526  2D05               	goto	l5478
 10994  1527                     u4620:
 10995  1527                     l5482:
 10996                           
 10997                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
 10998  1527  0022               	movlb	2	; select bank2
 10999  1528  083E               	movf	(_nout+1)^(0+256),w
 11000  1529  0021               	movlb	1	; select bank1
 11001  152A  00A1               	movwf	(?_vfprintf+1)^(0+128)
 11002  152B  0022               	movlb	2	; select bank2
 11003  152C  083D               	movf	_nout^(0+256),w
 11004  152D  0021               	movlb	1	; select bank1
 11005  152E  00A0               	movwf	?_vfprintf^(0+128)
 11006  152F                     l2279:
 11007  152F  0008               	return
 11008  1530                     __end_of_vfprintf:
 11009                           
 11010                           	psect	text5
 11011  02A2                     __ptext5:	
 11012 ;; *************** function _vfpfcnvrt *****************
 11013 ;; Defined at:
 11014 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 11015 ;; Parameters:    Size  Location     Type
 11016 ;;  fp              1    wreg     PTR struct _IO_FILE
 11017 ;;		 -> sprintf@f(5), 
 11018 ;;  fmt             1   57[BANK0 ] PTR PTR unsigned char 
 11019 ;;		 -> vfprintf@cfmt(2), 
 11020 ;;  ap              1   58[BANK0 ] PTR PTR void 
 11021 ;;		 -> sprintf@ap(1), 
 11022 ;; Auto vars:     Size  Location     Type
 11023 ;;  fp              1   77[BANK0 ] PTR struct _IO_FILE
 11024 ;;		 -> sprintf@f(5), 
 11025 ;;  ll              8   65[BANK0 ] long long 
 11026 ;;  llu             8    0        unsigned long long 
 11027 ;;  f               4    0        unsigned long long 
 11028 ;;  ct              3    0        unsigned char [3]
 11029 ;;  done            2   73[BANK0 ] int 
 11030 ;;  vp              2    0        PTR void 
 11031 ;;  i               2    0        int 
 11032 ;;  cp              2    0        PTR unsigned char 
 11033 ;;  c               1    0        unsigned char 
 11034 ;; Return value:  Size  Location     Type
 11035 ;;                  2   57[BANK0 ] int 
 11036 ;; Registers used:
 11037 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11038 ;; Tracked objects:
 11039 ;;		On entry : 0/0
 11040 ;;		On exit  : 0/0
 11041 ;;		Unchanged: 0/0
 11042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11043 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11044 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11045 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11046 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11047 ;;Total ram usage:       21 bytes
 11048 ;; Hardware stack levels used: 1
 11049 ;; Hardware stack levels required when called: 12
 11050 ;; This function calls:
 11051 ;;		_atoi
 11052 ;;		_dtoa
 11053 ;;		_fputc
 11054 ;;		_isdigit
 11055 ;; This function is called by:
 11056 ;;		_vfprintf
 11057 ;; This function uses a non-reentrant model
 11058 ;;
 11059                           
 11060                           
 11061                           ;psect for function _vfpfcnvrt
 11062  02A2                     _vfpfcnvrt:
 11063                           
 11064                           ;incstack = 0
 11065                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11066                           ;vfpfcnvrt@fp stored from wreg
 11067  02A2  0020               	movlb	0	; select bank0
 11068  02A3  00ED               	movwf	vfpfcnvrt@fp
 11069  02A4                     l5102:
 11070                           
 11071                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
 11072  02A4  0859               	movf	vfpfcnvrt@fmt,w
 11073  02A5  0086               	movwf	6
 11074  02A6  0187               	clrf	7
 11075  02A7  3F40               	moviw [0]fsr1
 11076  02A8  00DB               	movwf	??_vfpfcnvrt
 11077  02A9  3F41               	moviw [1]fsr1
 11078  02AA  00DC               	movwf	??_vfpfcnvrt+1
 11079  02AB  085B               	movf	??_vfpfcnvrt,w
 11080  02AC  0084               	movwf	4
 11081  02AD  085C               	movf	??_vfpfcnvrt+1,w
 11082  02AE  0085               	movwf	5
 11083  02AF  0012               	moviw fsr0++
 11084  02B0  3A25               	xorlw	37
 11085  02B1  1D03               	btfss	3,2
 11086  02B2  2AB4               	goto	u4131
 11087  02B3  2AB5               	goto	u4130
 11088  02B4                     u4131:
 11089  02B4  2C24               	goto	l5182
 11090  02B5                     u4130:
 11091  02B5                     l5104:
 11092                           
 11093                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
 11094  02B5  0859               	movf	vfpfcnvrt@fmt,w
 11095  02B6  0086               	movwf	6
 11096  02B7  0187               	clrf	7
 11097  02B8  3001               	movlw	1
 11098  02B9  0781               	addwf	1,f
 11099  02BA  3141               	addfsr 1,1
 11100  02BB  1803               	skipnc
 11101  02BC  0A81               	incf	1,f
 11102  02BD                     l5106:
 11103                           
 11104                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
 11105  02BD  0021               	movlb	1	; select bank1
 11106  02BE  01D4               	clrf	_width^(0+128)
 11107  02BF  01D5               	clrf	(_width+1)^(0+128)
 11108  02C0  01D8               	clrf	_flags^(0+128)
 11109  02C1  01D9               	clrf	(_flags+1)^(0+128)
 11110  02C2                     l5108:
 11111                           
 11112                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
 11113  02C2  30FF               	movlw	255
 11114  02C3  00D6               	movwf	_prec^(0+128)
 11115  02C4  30FF               	movlw	255
 11116  02C5  00D7               	movwf	(_prec^(0+128)+1)
 11117  02C6                     l5110:
 11118                           
 11119                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
 11120  02C6  0020               	movlb	0	; select bank0
 11121  02C7  01E9               	clrf	vfpfcnvrt@done
 11122  02C8  01EA               	clrf	vfpfcnvrt@done+1
 11123                           
 11124                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
 11125  02C9  2B0B               	goto	l5128
 11126  02CA                     l2250:	
 11127                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 713:             
      +                              case '-' :
 11128                           
 11129                           
 11130                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
 11131  02CA  0021               	movlb	1	; select bank1
 11132  02CB  1458               	bsf	_flags^(0+128),0
 11133  02CC                     l5112:
 11134                           
 11135                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
 11136  02CC  0020               	movlb	0	; select bank0
 11137  02CD  0859               	movf	vfpfcnvrt@fmt,w
 11138  02CE  0086               	movwf	6
 11139  02CF  0187               	clrf	7
 11140  02D0  3001               	movlw	1
 11141  02D1  0781               	addwf	1,f
 11142  02D2  3141               	addfsr 1,1
 11143  02D3  1803               	skipnc
 11144  02D4  0A81               	incf	1,f
 11145                           
 11146                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
 11147  02D5  2B0B               	goto	l5128
 11148  02D6                     l2252:	
 11149                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 717:             
      +                              case '0' :
 11150                           
 11151                           
 11152                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
 11153  02D6  0021               	movlb	1	; select bank1
 11154  02D7  14D8               	bsf	_flags^(0+128),1
 11155  02D8  2ACC               	goto	l5112
 11156  02D9                     l2253:	
 11157                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 721:             
      +                              case '+' :
 11158                           
 11159                           
 11160                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
 11161  02D9  0021               	movlb	1	; select bank1
 11162  02DA  1558               	bsf	_flags^(0+128),2
 11163  02DB  2ACC               	goto	l5112
 11164  02DC                     l2254:	
 11165                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 725:             
      +                              case ' ' :
 11166                           
 11167                           
 11168                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
 11169  02DC  0021               	movlb	1	; select bank1
 11170  02DD  15D8               	bsf	_flags^(0+128),3
 11171  02DE  2ACC               	goto	l5112
 11172  02DF                     l2255:	
 11173                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 729:             
      +                              case '#' :
 11174                           
 11175                           
 11176                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
 11177  02DF  0021               	movlb	1	; select bank1
 11178  02E0  1658               	bsf	_flags^(0+128),4
 11179  02E1  2ACC               	goto	l5112
 11180  02E2                     l5122:
 11181                           
 11182                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
 11183  02E2  3001               	movlw	1
 11184  02E3  00E9               	movwf	vfpfcnvrt@done
 11185  02E4  3000               	movlw	0
 11186  02E5  00EA               	movwf	vfpfcnvrt@done+1
 11187                           
 11188                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
 11189  02E6  2B0B               	goto	l5128
 11190  02E7                     l5126:
 11191  02E7  0859               	movf	vfpfcnvrt@fmt,w
 11192  02E8  0086               	movwf	6
 11193  02E9  0187               	clrf	7
 11194  02EA  3F40               	moviw [0]fsr1
 11195  02EB  00DB               	movwf	??_vfpfcnvrt
 11196  02EC  3F41               	moviw [1]fsr1
 11197  02ED  00DC               	movwf	??_vfpfcnvrt+1
 11198  02EE  085B               	movf	??_vfpfcnvrt,w
 11199  02EF  0084               	movwf	4
 11200  02F0  085C               	movf	??_vfpfcnvrt+1,w
 11201  02F1  0085               	movwf	5
 11202  02F2  0800               	movf	0,w	;code access
 11203  02F3  00DD               	movwf	??_vfpfcnvrt+2
 11204  02F4  01DE               	clrf	??_vfpfcnvrt+3
 11205                           
 11206                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11207                           ; Switch size 1, requested type "simple"
 11208                           ; Number of cases is 1, Range of values is 0 to 0
 11209                           ; switch strategies available:
 11210                           ; Name         Instructions Cycles
 11211                           ; simple_byte            4     3 (average)
 11212                           ; direct_byte            8     6 (fixed)
 11213                           ; jumptable            260     6 (fixed)
 11214                           ;	Chosen strategy is simple_byte
 11215  02F5  085E               	movf	??_vfpfcnvrt+3,w
 11216  02F6  3A00               	xorlw	0	; case 0
 11217  02F7  1903               	skipnz
 11218  02F8  2AFA               	goto	l6422
 11219  02F9  2AE2               	goto	l5122
 11220  02FA                     l6422:
 11221                           
 11222                           ; Switch size 1, requested type "simple"
 11223                           ; Number of cases is 5, Range of values is 32 to 48
 11224                           ; switch strategies available:
 11225                           ; Name         Instructions Cycles
 11226                           ; simple_byte           16     9 (average)
 11227                           ; direct_byte           43     9 (fixed)
 11228                           ; jumptable            263     9 (fixed)
 11229                           ;	Chosen strategy is simple_byte
 11230  02FA  085D               	movf	??_vfpfcnvrt+2,w
 11231  02FB  3A20               	xorlw	32	; case 32
 11232  02FC  1903               	skipnz
 11233  02FD  2ADC               	goto	l2254
 11234  02FE  3A03               	xorlw	3	; case 35
 11235  02FF  1903               	skipnz
 11236  0300  2ADF               	goto	l2255
 11237  0301  3A08               	xorlw	8	; case 43
 11238  0302  1903               	skipnz
 11239  0303  2AD9               	goto	l2253
 11240  0304  3A06               	xorlw	6	; case 45
 11241  0305  1903               	skipnz
 11242  0306  2ACA               	goto	l2250
 11243  0307  3A1D               	xorlw	29	; case 48
 11244  0308  1903               	skipnz
 11245  0309  2AD6               	goto	l2252
 11246  030A  2AE2               	goto	l5122
 11247  030B                     l5128:
 11248                           
 11249                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
 11250  030B  0869               	movf	vfpfcnvrt@done,w
 11251  030C  046A               	iorwf	vfpfcnvrt@done+1,w
 11252  030D  1903               	btfsc	3,2
 11253  030E  2B10               	goto	u4141
 11254  030F  2B11               	goto	u4140
 11255  0310                     u4141:
 11256  0310  2AE7               	goto	l5126
 11257  0311                     u4140:
 11258  0311                     l2257:
 11259                           
 11260                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
 11261  0311  0021               	movlb	1	; select bank1
 11262  0312  1C58               	btfss	_flags^(0+128),0
 11263  0313  2B15               	goto	u4151
 11264  0314  2B16               	goto	u4150
 11265  0315                     u4151:
 11266  0315  2B1A               	goto	l5132
 11267  0316                     u4150:
 11268  0316                     l5130:
 11269                           
 11270                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
 11271  0316  30FD               	movlw	253
 11272  0317  05D8               	andwf	_flags^(0+128),f
 11273  0318  30FF               	movlw	255
 11274  0319  05D9               	andwf	(_flags+1)^(0+128),f
 11275  031A                     l5132:
 11276                           
 11277                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
 11278  031A  0020               	movlb	0	; select bank0
 11279  031B  0859               	movf	vfpfcnvrt@fmt,w
 11280  031C  0086               	movwf	6
 11281  031D  0187               	clrf	7
 11282  031E  3F40               	moviw [0]fsr1
 11283  031F  00DB               	movwf	??_vfpfcnvrt
 11284  0320  3F41               	moviw [1]fsr1
 11285  0321  00DC               	movwf	??_vfpfcnvrt+1
 11286  0322  085B               	movf	??_vfpfcnvrt,w
 11287  0323  0084               	movwf	4
 11288  0324  085C               	movf	??_vfpfcnvrt+1,w
 11289  0325  0085               	movwf	5
 11290  0326  0012               	moviw fsr0++
 11291  0327  3A2A               	xorlw	42
 11292  0328  1D03               	btfss	3,2
 11293  0329  2B2B               	goto	u4161
 11294  032A  2B2C               	goto	u4160
 11295  032B                     u4161:
 11296  032B  2B4C               	goto	l5144
 11297  032C                     u4160:
 11298  032C                     l5134:
 11299                           
 11300                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
 11301  032C  0859               	movf	vfpfcnvrt@fmt,w
 11302  032D  0086               	movwf	6
 11303  032E  0187               	clrf	7
 11304  032F  3001               	movlw	1
 11305  0330  0781               	addwf	1,f
 11306  0331  3141               	addfsr 1,1
 11307  0332  1803               	skipnc
 11308  0333  0A81               	incf	1,f
 11309  0334                     l5136:
 11310                           
 11311                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
 11312  0334  085A               	movf	vfpfcnvrt@ap,w
 11313  0335  0086               	movwf	6
 11314  0336  0187               	clrf	7
 11315  0337  0801               	movf	1,w
 11316  0338  0084               	movwf	4
 11317  0339  0185               	clrf	5
 11318  033A  3002               	movlw	2
 11319  033B  0781               	addwf	1,f
 11320  033C  3F00               	moviw [0]fsr0
 11321  033D  0021               	movlb	1	; select bank1
 11322  033E  00D4               	movwf	_width^(0+128)
 11323  033F  3F01               	moviw [1]fsr0
 11324  0340  00D5               	movwf	(_width+1)^(0+128)
 11325  0341                     l5138:
 11326                           
 11327                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
 11328  0341  1FD5               	btfss	(_width+1)^(0+128),7
 11329  0342  2B44               	goto	u4171
 11330  0343  2B45               	goto	u4170
 11331  0344                     u4171:
 11332  0344  2B91               	goto	l5154
 11333  0345                     u4170:
 11334  0345                     l5140:
 11335                           
 11336                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
 11337  0345  1458               	bsf	_flags^(0+128),0
 11338  0346                     l5142:
 11339                           
 11340                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
 11341  0346  09D4               	comf	_width^(0+128),f
 11342  0347  09D5               	comf	(_width+1)^(0+128),f
 11343  0348  0AD4               	incf	_width^(0+128),f
 11344  0349  1903               	skipnz
 11345  034A  0AD5               	incf	(_width+1)^(0+128),f
 11346  034B  2B91               	goto	l5154
 11347  034C                     l5144:
 11348                           
 11349                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
 11350  034C  0859               	movf	vfpfcnvrt@fmt,w
 11351  034D  0086               	movwf	6
 11352  034E  0187               	clrf	7
 11353  034F  3F40               	moviw [0]fsr1
 11354  0350  00A6               	movwf	atoi@s
 11355  0351  3F41               	moviw [1]fsr1
 11356  0352  00A7               	movwf	atoi@s+1
 11357  0353  3189  2139  3182   	fcall	_atoi
 11358  0356  0020               	movlb	0	; select bank0
 11359  0357  0827               	movf	?_atoi+1,w
 11360  0358  0021               	movlb	1	; select bank1
 11361  0359  00D5               	movwf	(_width+1)^(0+128)
 11362  035A  0020               	movlb	0	; select bank0
 11363  035B  0826               	movf	?_atoi,w
 11364  035C  0021               	movlb	1	; select bank1
 11365  035D  00D4               	movwf	_width^(0+128)
 11366                           
 11367                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11368  035E  2B67               	goto	l5148
 11369  035F                     l5146:
 11370                           
 11371                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
 11372  035F  0859               	movf	vfpfcnvrt@fmt,w
 11373  0360  0086               	movwf	6
 11374  0361  0187               	clrf	7
 11375  0362  3001               	movlw	1
 11376  0363  0781               	addwf	1,f
 11377  0364  3141               	addfsr 1,1
 11378  0365  1803               	skipnc
 11379  0366  0A81               	incf	1,f
 11380  0367                     l5148:
 11381  0367  0020               	movlb	0	; select bank0
 11382  0368  0859               	movf	vfpfcnvrt@fmt,w
 11383  0369  0086               	movwf	6
 11384  036A  0187               	clrf	7
 11385  036B  3F40               	moviw [0]fsr1
 11386  036C  00DB               	movwf	??_vfpfcnvrt
 11387  036D  3F41               	moviw [1]fsr1
 11388  036E  00DC               	movwf	??_vfpfcnvrt+1
 11389  036F  085B               	movf	??_vfpfcnvrt,w
 11390  0370  0084               	movwf	4
 11391  0371  085C               	movf	??_vfpfcnvrt+1,w
 11392  0372  0085               	movwf	5
 11393  0373  0800               	movf	0,w	;code access
 11394  0374  3ED0               	addlw	208
 11395  0375  00DD               	movwf	??_vfpfcnvrt+2
 11396  0376  30FF               	movlw	255
 11397  0377  1803               	skipnc
 11398  0378  3000               	movlw	0
 11399  0379  00DE               	movwf	??_vfpfcnvrt+3
 11400  037A  3000               	movlw	0
 11401  037B  025E               	subwf	??_vfpfcnvrt+3,w
 11402  037C  300A               	movlw	10
 11403  037D  1903               	skipnz
 11404  037E  025D               	subwf	??_vfpfcnvrt+2,w
 11405  037F  1C03               	skipc
 11406  0380  2B82               	goto	u4181
 11407  0381  2B84               	goto	u4180
 11408  0382                     u4181:
 11409  0382  3001               	movlw	1
 11410  0383  2B85               	goto	u4190
 11411  0384                     u4180:
 11412  0384  3000               	movlw	0
 11413  0385                     u4190:
 11414  0385  00DF               	movwf	??_vfpfcnvrt+4
 11415  0386  01E0               	clrf	??_vfpfcnvrt+5
 11416  0387  085F               	movf	??_vfpfcnvrt+4,w
 11417  0388  00EB               	movwf	_vfpfcnvrt$3317
 11418  0389  0860               	movf	??_vfpfcnvrt+5,w
 11419  038A  00EC               	movwf	_vfpfcnvrt$3317+1
 11420  038B                     l5152:
 11421  038B  086B               	movf	_vfpfcnvrt$3317,w
 11422  038C  046C               	iorwf	_vfpfcnvrt$3317+1,w
 11423  038D  1D03               	btfss	3,2
 11424  038E  2B90               	goto	u4201
 11425  038F  2B91               	goto	u4200
 11426  0390                     u4201:
 11427  0390  2B5F               	goto	l5146
 11428  0391                     u4200:
 11429  0391                     l5154:
 11430                           
 11431                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
 11432  0391  0020               	movlb	0	; select bank0
 11433  0392  0859               	movf	vfpfcnvrt@fmt,w
 11434  0393  0086               	movwf	6
 11435  0394  0187               	clrf	7
 11436  0395  3F40               	moviw [0]fsr1
 11437  0396  00DB               	movwf	??_vfpfcnvrt
 11438  0397  3F41               	moviw [1]fsr1
 11439  0398  00DC               	movwf	??_vfpfcnvrt+1
 11440  0399  085B               	movf	??_vfpfcnvrt,w
 11441  039A  0084               	movwf	4
 11442  039B  085C               	movf	??_vfpfcnvrt+1,w
 11443  039C  0085               	movwf	5
 11444  039D  0012               	moviw fsr0++
 11445  039E  3A64               	xorlw	100
 11446  039F  1903               	btfsc	3,2
 11447  03A0  2BA2               	goto	u4211
 11448  03A1  2BA3               	goto	u4210
 11449  03A2                     u4211:
 11450  03A2  2BB4               	goto	l5158
 11451  03A3                     u4210:
 11452  03A3                     l5156:
 11453  03A3  0859               	movf	vfpfcnvrt@fmt,w
 11454  03A4  0086               	movwf	6
 11455  03A5  0187               	clrf	7
 11456  03A6  3F40               	moviw [0]fsr1
 11457  03A7  00DB               	movwf	??_vfpfcnvrt
 11458  03A8  3F41               	moviw [1]fsr1
 11459  03A9  00DC               	movwf	??_vfpfcnvrt+1
 11460  03AA  085B               	movf	??_vfpfcnvrt,w
 11461  03AB  0084               	movwf	4
 11462  03AC  085C               	movf	??_vfpfcnvrt+1,w
 11463  03AD  0085               	movwf	5
 11464  03AE  0012               	moviw fsr0++
 11465  03AF  3A69               	xorlw	105
 11466  03B0  1D03               	btfss	3,2
 11467  03B1  2BB3               	goto	u4221
 11468  03B2  2BB4               	goto	u4220
 11469  03B3                     u4221:
 11470  03B3  2BEF               	goto	l5166
 11471  03B4                     u4220:
 11472  03B4                     l5158:
 11473                           
 11474                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
 11475  03B4  0859               	movf	vfpfcnvrt@fmt,w
 11476  03B5  0086               	movwf	6
 11477  03B6  0187               	clrf	7
 11478  03B7  3001               	movlw	1
 11479  03B8  0781               	addwf	1,f
 11480  03B9  3141               	addfsr 1,1
 11481  03BA  1803               	skipnc
 11482  03BB  0A81               	incf	1,f
 11483  03BC                     l5160:
 11484                           
 11485                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
 11486  03BC  085A               	movf	vfpfcnvrt@ap,w
 11487  03BD  0086               	movwf	6
 11488  03BE  0187               	clrf	7
 11489  03BF  0801               	movf	1,w
 11490  03C0  0084               	movwf	4
 11491  03C1  0185               	clrf	5
 11492  03C2  3002               	movlw	2
 11493  03C3  0781               	addwf	1,f
 11494  03C4  3F00               	moviw [0]fsr0
 11495  03C5  00DB               	movwf	??_vfpfcnvrt
 11496  03C6  3F01               	moviw [1]fsr0
 11497  03C7  00DC               	movwf	??_vfpfcnvrt+1
 11498  03C8  085B               	movf	??_vfpfcnvrt,w
 11499  03C9  00E1               	movwf	vfpfcnvrt@ll
 11500  03CA  085C               	movf	??_vfpfcnvrt+1,w
 11501  03CB  00E2               	movwf	vfpfcnvrt@ll+1
 11502  03CC  0D89               	rlf	9,f
 11503  03CD  3B89               	subwfb	9,f
 11504  03CE  0989               	comf	9,f
 11505  03CF  00E3               	movwf	vfpfcnvrt@ll+2
 11506  03D0  00E4               	movwf	vfpfcnvrt@ll+3
 11507  03D1  00E5               	movwf	vfpfcnvrt@ll+4
 11508  03D2  00E6               	movwf	vfpfcnvrt@ll+5
 11509  03D3  00E7               	movwf	vfpfcnvrt@ll+6
 11510  03D4  00E8               	movwf	vfpfcnvrt@ll+7
 11511  03D5                     l5162:
 11512                           
 11513                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
 11514  03D5  0861               	movf	vfpfcnvrt@ll,w
 11515  03D6  00BB               	movwf	dtoa@d
 11516  03D7  0862               	movf	vfpfcnvrt@ll+1,w
 11517  03D8  00BC               	movwf	dtoa@d+1
 11518  03D9  0863               	movf	vfpfcnvrt@ll+2,w
 11519  03DA  00BD               	movwf	dtoa@d+2
 11520  03DB  0864               	movf	vfpfcnvrt@ll+3,w
 11521  03DC  00BE               	movwf	dtoa@d+3
 11522  03DD  0865               	movf	vfpfcnvrt@ll+4,w
 11523  03DE  00BF               	movwf	dtoa@d+4
 11524  03DF  0866               	movf	vfpfcnvrt@ll+5,w
 11525  03E0  00C0               	movwf	dtoa@d+5
 11526  03E1  0867               	movf	vfpfcnvrt@ll+6,w
 11527  03E2  00C1               	movwf	dtoa@d+6
 11528  03E3  0868               	movf	vfpfcnvrt@ll+7,w
 11529  03E4  00C2               	movwf	dtoa@d+7
 11530  03E5  086D               	movf	vfpfcnvrt@fp,w
 11531  03E6  3185  25D3  3182   	fcall	_dtoa
 11532  03E9  0020               	movlb	0	; select bank0
 11533  03EA  083C               	movf	?_dtoa+1,w
 11534  03EB  00DA               	movwf	?_vfpfcnvrt+1
 11535  03EC  083B               	movf	?_dtoa,w
 11536  03ED  00D9               	movwf	?_vfpfcnvrt
 11537  03EE  2C47               	goto	l2272
 11538  03EF                     l5166:
 11539                           
 11540                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
 11541  03EF  0859               	movf	vfpfcnvrt@fmt,w
 11542  03F0  0086               	movwf	6
 11543  03F1  0187               	clrf	7
 11544  03F2  3F40               	moviw [0]fsr1
 11545  03F3  00DB               	movwf	??_vfpfcnvrt
 11546  03F4  3F41               	moviw [1]fsr1
 11547  03F5  00DC               	movwf	??_vfpfcnvrt+1
 11548  03F6  085B               	movf	??_vfpfcnvrt,w
 11549  03F7  0084               	movwf	4
 11550  03F8  085C               	movf	??_vfpfcnvrt+1,w
 11551  03F9  0085               	movwf	5
 11552  03FA  0012               	moviw fsr0++
 11553  03FB  3A25               	xorlw	37
 11554  03FC  1D03               	btfss	3,2
 11555  03FD  2BFF               	goto	u4231
 11556  03FE  2C00               	goto	u4230
 11557  03FF                     u4231:
 11558  03FF  2C19               	goto	l5176
 11559  0400                     u4230:
 11560  0400                     l5168:
 11561                           
 11562                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
 11563  0400  0859               	movf	vfpfcnvrt@fmt,w
 11564  0401  0086               	movwf	6
 11565  0402  0187               	clrf	7
 11566  0403  3001               	movlw	1
 11567  0404  0781               	addwf	1,f
 11568  0405  3141               	addfsr 1,1
 11569  0406  1803               	skipnc
 11570  0407  0A81               	incf	1,f
 11571  0408                     l5170:
 11572                           
 11573                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
 11574  0408  3025               	movlw	37
 11575  0409  00A0               	movwf	fputc@c
 11576  040A  3000               	movlw	0
 11577  040B  00A1               	movwf	fputc@c+1
 11578  040C  086D               	movf	vfpfcnvrt@fp,w
 11579  040D  00DB               	movwf	??_vfpfcnvrt
 11580  040E  085B               	movf	??_vfpfcnvrt,w
 11581  040F  00A2               	movwf	fputc@fp
 11582  0410  3196  2646  3182   	fcall	_fputc
 11583  0413                     l5172:
 11584                           
 11585                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
 11586  0413  3001               	movlw	1
 11587  0414  0020               	movlb	0	; select bank0
 11588  0415  00D9               	movwf	?_vfpfcnvrt
 11589  0416  3000               	movlw	0
 11590  0417  00DA               	movwf	?_vfpfcnvrt+1
 11591  0418  2C47               	goto	l2272
 11592  0419                     l5176:
 11593                           
 11594                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
 11595  0419  0859               	movf	vfpfcnvrt@fmt,w
 11596  041A  0086               	movwf	6
 11597  041B  0187               	clrf	7
 11598  041C  3001               	movlw	1
 11599  041D  0781               	addwf	1,f
 11600  041E  3141               	addfsr 1,1
 11601  041F  1803               	skipnc
 11602  0420  0A81               	incf	1,f
 11603  0421                     l5178:
 11604                           
 11605                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
 11606  0421  01D9               	clrf	?_vfpfcnvrt
 11607  0422  01DA               	clrf	?_vfpfcnvrt+1
 11608  0423  2C47               	goto	l2272
 11609  0424                     l5182:
 11610                           
 11611                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
 11612  0424  0859               	movf	vfpfcnvrt@fmt,w
 11613  0425  0086               	movwf	6
 11614  0426  0187               	clrf	7
 11615  0427  3F40               	moviw [0]fsr1
 11616  0428  00DB               	movwf	??_vfpfcnvrt
 11617  0429  3F41               	moviw [1]fsr1
 11618  042A  00DC               	movwf	??_vfpfcnvrt+1
 11619  042B  085B               	movf	??_vfpfcnvrt,w
 11620  042C  0084               	movwf	4
 11621  042D  085C               	movf	??_vfpfcnvrt+1,w
 11622  042E  0085               	movwf	5
 11623  042F  0800               	movf	0,w	;code access
 11624  0430  00DD               	movwf	??_vfpfcnvrt+2
 11625  0431  01DE               	clrf	??_vfpfcnvrt+3
 11626  0432  085D               	movf	??_vfpfcnvrt+2,w
 11627  0433  00A0               	movwf	fputc@c
 11628  0434  085E               	movf	??_vfpfcnvrt+3,w
 11629  0435  00A1               	movwf	fputc@c+1
 11630  0436  086D               	movf	vfpfcnvrt@fp,w
 11631  0437  00DF               	movwf	??_vfpfcnvrt+4
 11632  0438  085F               	movf	??_vfpfcnvrt+4,w
 11633  0439  00A2               	movwf	fputc@fp
 11634  043A  3196  2646  3182   	fcall	_fputc
 11635  043D                     l5184:
 11636                           
 11637                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
 11638  043D  0020               	movlb	0	; select bank0
 11639  043E  0859               	movf	vfpfcnvrt@fmt,w
 11640  043F  0086               	movwf	6
 11641  0440  0187               	clrf	7
 11642  0441  3001               	movlw	1
 11643  0442  0781               	addwf	1,f
 11644  0443  3141               	addfsr 1,1
 11645  0444  1803               	skipnc
 11646  0445  0A81               	incf	1,f
 11647  0446  2C13               	goto	l5172
 11648  0447                     l2272:
 11649  0447  0008               	return
 11650  0448                     __end_of_vfpfcnvrt:
 11651                           
 11652                           	psect	text6
 11653  05D3                     __ptext6:	
 11654 ;; *************** function _dtoa *****************
 11655 ;; Defined at:
 11656 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 11657 ;; Parameters:    Size  Location     Type
 11658 ;;  fp              1    wreg     PTR struct _IO_FILE
 11659 ;;		 -> sprintf@f(5), 
 11660 ;;  d               8   27[BANK0 ] long long 
 11661 ;; Auto vars:     Size  Location     Type
 11662 ;;  fp              1   40[BANK0 ] PTR struct _IO_FILE
 11663 ;;		 -> sprintf@f(5), 
 11664 ;;  n               8   47[BANK0 ] long long 
 11665 ;;  i               2   55[BANK0 ] int 
 11666 ;;  s               2   45[BANK0 ] int 
 11667 ;;  w               2   43[BANK0 ] int 
 11668 ;;  p               2   41[BANK0 ] int 
 11669 ;; Return value:  Size  Location     Type
 11670 ;;                  2   27[BANK0 ] int 
 11671 ;; Registers used:
 11672 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11673 ;; Tracked objects:
 11674 ;;		On entry : 0/0
 11675 ;;		On exit  : 0/0
 11676 ;;		Unchanged: 0/0
 11677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11678 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11679 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11680 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11681 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11682 ;;Total ram usage:       30 bytes
 11683 ;; Hardware stack levels used: 1
 11684 ;; Hardware stack levels required when called: 11
 11685 ;; This function calls:
 11686 ;;		___aodiv
 11687 ;;		___aomod
 11688 ;;		_abs
 11689 ;;		_pad
 11690 ;; This function is called by:
 11691 ;;		_vfpfcnvrt
 11692 ;; This function uses a non-reentrant model
 11693 ;;
 11694                           
 11695                           
 11696                           ;psect for function _dtoa
 11697  05D3                     _dtoa:
 11698                           
 11699                           ;incstack = 0
 11700                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11701                           ;dtoa@fp stored from wreg
 11702  05D3  0020               	movlb	0	; select bank0
 11703  05D4  00C8               	movwf	dtoa@fp
 11704  05D5                     l4818:
 11705                           
 11706                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
 11707  05D5  083B               	movf	dtoa@d,w
 11708  05D6  00CF               	movwf	dtoa@n
 11709  05D7  083C               	movf	dtoa@d+1,w
 11710  05D8  00D0               	movwf	dtoa@n+1
 11711  05D9  083D               	movf	dtoa@d+2,w
 11712  05DA  00D1               	movwf	dtoa@n+2
 11713  05DB  083E               	movf	dtoa@d+3,w
 11714  05DC  00D2               	movwf	dtoa@n+3
 11715  05DD  083F               	movf	dtoa@d+4,w
 11716  05DE  00D3               	movwf	dtoa@n+4
 11717  05DF  0840               	movf	dtoa@d+5,w
 11718  05E0  00D4               	movwf	dtoa@n+5
 11719  05E1  0841               	movf	dtoa@d+6,w
 11720  05E2  00D5               	movwf	dtoa@n+6
 11721  05E3  0842               	movf	dtoa@d+7,w
 11722  05E4  00D6               	movwf	dtoa@n+7
 11723  05E5                     l4820:
 11724                           
 11725                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
 11726  05E5  304F               	movlw	low dtoa@n
 11727  05E6  0086               	movwf	6
 11728  05E7  3000               	movlw	high dtoa@n
 11729  05E8  0087               	movwf	7
 11730  05E9  3F47               	moviw [7]fsr1
 11731  05EA  00C3               	movwf	??_dtoa
 11732  05EB  1BC3               	btfsc	??_dtoa,7
 11733  05EC  2DEE               	goto	u3361
 11734  05ED  2DF0               	goto	u3360
 11735  05EE                     u3361:
 11736  05EE  3001               	movlw	1
 11737  05EF  2DF1               	goto	u3370
 11738  05F0                     u3360:
 11739  05F0  3000               	movlw	0
 11740  05F1                     u3370:
 11741  05F1  0020               	movlb	0	; select bank0
 11742  05F2  00C4               	movwf	??_dtoa+1
 11743  05F3  01C5               	clrf	??_dtoa+2
 11744  05F4  0844               	movf	??_dtoa+1,w
 11745  05F5  00CD               	movwf	dtoa@s
 11746  05F6  0845               	movf	??_dtoa+2,w
 11747  05F7  00CE               	movwf	dtoa@s+1
 11748  05F8                     l4822:
 11749                           
 11750                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
 11751  05F8  084D               	movf	dtoa@s,w
 11752  05F9  044E               	iorwf	dtoa@s+1,w
 11753  05FA  1903               	btfsc	3,2
 11754  05FB  2DFD               	goto	u3381
 11755  05FC  2DFE               	goto	u3380
 11756  05FD                     u3381:
 11757  05FD  2E1C               	goto	l2220
 11758  05FE                     u3380:
 11759  05FE                     l4824:
 11760                           
 11761                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
 11762  05FE  09CF               	comf	dtoa@n,f
 11763  05FF  09D0               	comf	dtoa@n+1,f
 11764  0600  09D1               	comf	dtoa@n+2,f
 11765  0601  09D2               	comf	dtoa@n+3,f
 11766  0602  09D3               	comf	dtoa@n+4,f
 11767  0603  09D4               	comf	dtoa@n+5,f
 11768  0604  09D5               	comf	dtoa@n+6,f
 11769  0605  09D6               	comf	dtoa@n+7,f
 11770  0606  0ACF               	incf	dtoa@n,f
 11771  0607  1D03               	skipz
 11772  0608  2E1C               	goto	u339lld
 11773  0609  0AD0               	incf	dtoa@n+1,f
 11774  060A  1D03               	skipz
 11775  060B  2E1C               	goto	u339lld
 11776  060C  0AD1               	incf	dtoa@n+2,f
 11777  060D  1D03               	skipz
 11778  060E  2E1C               	goto	u339lld
 11779  060F  0AD2               	incf	dtoa@n+3,f
 11780  0610  1D03               	skipz
 11781  0611  2E1C               	goto	u339lld
 11782  0612  0AD3               	incf	dtoa@n+4,f
 11783  0613  1D03               	skipz
 11784  0614  2E1C               	goto	u339lld
 11785  0615  0AD4               	incf	dtoa@n+5,f
 11786  0616  1D03               	skipz
 11787  0617  2E1C               	goto	u339lld
 11788  0618  0AD5               	incf	dtoa@n+6,f
 11789  0619  1D03               	skipz
 11790  061A  2E1C               	goto	u339lld
 11791  061B  0AD6               	incf	dtoa@n+7,f
 11792  061C                     u339lld:
 11793  061C                     l2220:	
 11794                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 297:     }
 11795                           
 11796                           
 11797                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
 11798  061C  0021               	movlb	1	; select bank1
 11799  061D  1BD7               	btfsc	(_prec+1)^(0+128),7
 11800  061E  2E20               	goto	u3401
 11801  061F  2E21               	goto	u3400
 11802  0620                     u3401:
 11803  0620  2E25               	goto	l2221
 11804  0621                     u3400:
 11805  0621                     l4826:
 11806                           
 11807                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
 11808  0621  30FD               	movlw	253
 11809  0622  05D8               	andwf	_flags^(0+128),f
 11810  0623  30FF               	movlw	255
 11811  0624  05D9               	andwf	(_flags+1)^(0+128),f
 11812  0625                     l2221:	
 11813                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 302:     }
 11814                           
 11815                           
 11816                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
 11817  0625  0857               	movf	(_prec+1)^(0+128),w
 11818  0626  3A80               	xorlw	128
 11819  0627  0020               	movlb	0	; select bank0
 11820  0628  00C3               	movwf	??_dtoa
 11821  0629  3080               	movlw	128
 11822  062A  0243               	subwf	??_dtoa,w
 11823  062B  1D03               	skipz
 11824  062C  2E30               	goto	u3415
 11825  062D  3001               	movlw	1
 11826  062E  0021               	movlb	1	; select bank1
 11827  062F  0256               	subwf	_prec^(0+128),w
 11828  0630                     u3415:
 11829  0630  1803               	skipnc
 11830  0631  2E33               	goto	u3411
 11831  0632  2E34               	goto	u3410
 11832  0633                     u3411:
 11833  0633  2E3A               	goto	l4830
 11834  0634                     u3410:
 11835  0634                     l4828:
 11836  0634  3001               	movlw	1
 11837  0635  0020               	movlb	0	; select bank0
 11838  0636  00C9               	movwf	dtoa@p
 11839  0637  3000               	movlw	0
 11840  0638  00CA               	movwf	dtoa@p+1
 11841  0639  2E42               	goto	l2225
 11842  063A                     l4830:
 11843  063A  0021               	movlb	1	; select bank1
 11844  063B  0857               	movf	(_prec+1)^(0+128),w
 11845  063C  0020               	movlb	0	; select bank0
 11846  063D  00CA               	movwf	dtoa@p+1
 11847  063E  0021               	movlb	1	; select bank1
 11848  063F  0856               	movf	_prec^(0+128),w
 11849  0640  0020               	movlb	0	; select bank0
 11850  0641  00C9               	movwf	dtoa@p
 11851  0642                     l2225:
 11852                           
 11853                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
 11854  0642  0021               	movlb	1	; select bank1
 11855  0643  0855               	movf	(_width+1)^(0+128),w
 11856  0644  0020               	movlb	0	; select bank0
 11857  0645  00CC               	movwf	dtoa@w+1
 11858  0646  0021               	movlb	1	; select bank1
 11859  0647  0854               	movf	_width^(0+128),w
 11860  0648  0020               	movlb	0	; select bank0
 11861  0649  00CB               	movwf	dtoa@w
 11862  064A                     l4832:
 11863                           
 11864                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
 11865  064A  084D               	movf	dtoa@s,w
 11866  064B  044E               	iorwf	dtoa@s+1,w
 11867  064C  1D03               	btfss	3,2
 11868  064D  2E4F               	goto	u3421
 11869  064E  2E50               	goto	u3420
 11870  064F                     u3421:
 11871  064F  2E55               	goto	l4836
 11872  0650                     u3420:
 11873  0650                     l4834:
 11874  0650  0021               	movlb	1	; select bank1
 11875  0651  1D58               	btfss	_flags^(0+128),2
 11876  0652  2E54               	goto	u3431
 11877  0653  2E55               	goto	u3430
 11878  0654                     u3431:
 11879  0654  2E5A               	goto	l2226
 11880  0655                     u3430:
 11881  0655                     l4836:
 11882                           
 11883                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
 11884  0655  30FF               	movlw	255
 11885  0656  0020               	movlb	0	; select bank0
 11886  0657  07CB               	addwf	dtoa@w,f
 11887  0658  30FF               	movlw	255
 11888  0659  3DCC               	addwfc	dtoa@w+1,f
 11889  065A                     l2226:	
 11890                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 307:     }
 11891                           
 11892                           
 11893                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
 11894  065A  301F               	movlw	31
 11895  065B  0020               	movlb	0	; select bank0
 11896  065C  00D7               	movwf	dtoa@i
 11897  065D  3000               	movlw	0
 11898  065E  00D8               	movwf	dtoa@i+1
 11899  065F                     l4838:
 11900                           
 11901                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
 11902  065F  0022               	movlb	2	; select bank2
 11903  0660  01DE               	clrf	(_dbuf^(0+256)+31)
 11904                           
 11905                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11906  0661  2ECB               	goto	l2229
 11907  0662                     l4840:
 11908                           
 11909                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
 11910  0662  30FF               	movlw	255
 11911  0663  0020               	movlb	0	; select bank0
 11912  0664  07D7               	addwf	dtoa@i,f
 11913  0665  30FF               	movlw	255
 11914  0666  3DD8               	addwfc	dtoa@i+1,f
 11915  0667                     l4842:
 11916                           
 11917                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
 11918  0667  300A               	movlw	10
 11919  0668  00A0               	movwf	___aomod@divisor
 11920  0669  01A1               	clrf	___aomod@divisor+1
 11921  066A  01A2               	clrf	___aomod@divisor+2
 11922  066B  01A3               	clrf	___aomod@divisor+3
 11923  066C  01A4               	clrf	___aomod@divisor+4
 11924  066D  01A5               	clrf	___aomod@divisor+5
 11925  066E  01A6               	clrf	___aomod@divisor+6
 11926  066F  01A7               	clrf	___aomod@divisor+7
 11927  0670  084F               	movf	dtoa@n,w
 11928  0671  00A8               	movwf	___aomod@dividend
 11929  0672  0850               	movf	dtoa@n+1,w
 11930  0673  00A9               	movwf	___aomod@dividend+1
 11931  0674  0851               	movf	dtoa@n+2,w
 11932  0675  00AA               	movwf	___aomod@dividend+2
 11933  0676  0852               	movf	dtoa@n+3,w
 11934  0677  00AB               	movwf	___aomod@dividend+3
 11935  0678  0853               	movf	dtoa@n+4,w
 11936  0679  00AC               	movwf	___aomod@dividend+4
 11937  067A  0854               	movf	dtoa@n+5,w
 11938  067B  00AD               	movwf	___aomod@dividend+5
 11939  067C  0855               	movf	dtoa@n+6,w
 11940  067D  00AE               	movwf	___aomod@dividend+6
 11941  067E  0856               	movf	dtoa@n+7,w
 11942  067F  00AF               	movwf	___aomod@dividend+7
 11943  0680  318A  22BF  3185   	fcall	___aomod
 11944  0683  0020               	movlb	0	; select bank0
 11945  0684  0821               	movf	?___aomod+1,w
 11946  0685  00B4               	movwf	abs@a+1
 11947  0686  0820               	movf	?___aomod,w
 11948  0687  00B3               	movwf	abs@a
 11949  0688  3193  23C8  3185   	fcall	_abs
 11950  068B  0020               	movlb	0	; select bank0
 11951  068C  0833               	movf	?_abs,w
 11952  068D  3E30               	addlw	48
 11953  068E  00C3               	movwf	??_dtoa
 11954  068F  0857               	movf	dtoa@i,w
 11955  0690  3E3F               	addlw	(low (_dbuf| (0+256)))& (0+255)
 11956  0691  0086               	movwf	6
 11957  0692  3001               	movlw	1	; select bank2/3
 11958  0693  0087               	movwf	7
 11959  0694  0843               	movf	??_dtoa,w
 11960  0695  0081               	movwf	1
 11961  0696                     l4844:
 11962                           
 11963                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
 11964  0696  30FF               	movlw	255
 11965  0697  07C9               	addwf	dtoa@p,f
 11966  0698  30FF               	movlw	255
 11967  0699  3DCA               	addwfc	dtoa@p+1,f
 11968  069A                     l4846:
 11969                           
 11970                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
 11971  069A  30FF               	movlw	255
 11972  069B  07CB               	addwf	dtoa@w,f
 11973  069C  30FF               	movlw	255
 11974  069D  3DCC               	addwfc	dtoa@w+1,f
 11975  069E                     l4848:
 11976                           
 11977                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
 11978  069E  300A               	movlw	10
 11979  069F  00A0               	movwf	___aodiv@divisor
 11980  06A0  01A1               	clrf	___aodiv@divisor+1
 11981  06A1  01A2               	clrf	___aodiv@divisor+2
 11982  06A2  01A3               	clrf	___aodiv@divisor+3
 11983  06A3  01A4               	clrf	___aodiv@divisor+4
 11984  06A4  01A5               	clrf	___aodiv@divisor+5
 11985  06A5  01A6               	clrf	___aodiv@divisor+6
 11986  06A6  01A7               	clrf	___aodiv@divisor+7
 11987  06A7  084F               	movf	dtoa@n,w
 11988  06A8  00A8               	movwf	___aodiv@dividend
 11989  06A9  0850               	movf	dtoa@n+1,w
 11990  06AA  00A9               	movwf	___aodiv@dividend+1
 11991  06AB  0851               	movf	dtoa@n+2,w
 11992  06AC  00AA               	movwf	___aodiv@dividend+2
 11993  06AD  0852               	movf	dtoa@n+3,w
 11994  06AE  00AB               	movwf	___aodiv@dividend+3
 11995  06AF  0853               	movf	dtoa@n+4,w
 11996  06B0  00AC               	movwf	___aodiv@dividend+4
 11997  06B1  0854               	movf	dtoa@n+5,w
 11998  06B2  00AD               	movwf	___aodiv@dividend+5
 11999  06B3  0855               	movf	dtoa@n+6,w
 12000  06B4  00AE               	movwf	___aodiv@dividend+6
 12001  06B5  0856               	movf	dtoa@n+7,w
 12002  06B6  00AF               	movwf	___aodiv@dividend+7
 12003  06B7  318C  249E  3185   	fcall	___aodiv
 12004  06BA  0020               	movlb	0	; select bank0
 12005  06BB  0820               	movf	?___aodiv,w
 12006  06BC  00CF               	movwf	dtoa@n
 12007  06BD  0821               	movf	?___aodiv+1,w
 12008  06BE  00D0               	movwf	dtoa@n+1
 12009  06BF  0822               	movf	?___aodiv+2,w
 12010  06C0  00D1               	movwf	dtoa@n+2
 12011  06C1  0823               	movf	?___aodiv+3,w
 12012  06C2  00D2               	movwf	dtoa@n+3
 12013  06C3  0824               	movf	?___aodiv+4,w
 12014  06C4  00D3               	movwf	dtoa@n+4
 12015  06C5  0825               	movf	?___aodiv+5,w
 12016  06C6  00D4               	movwf	dtoa@n+5
 12017  06C7  0826               	movf	?___aodiv+6,w
 12018  06C8  00D5               	movwf	dtoa@n+6
 12019  06C9  0827               	movf	?___aodiv+7,w
 12020  06CA  00D6               	movwf	dtoa@n+7
 12021  06CB                     l2229:	
 12022                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 318:     }
 12023                           
 12024                           
 12025                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12026  06CB  0020               	movlb	0	; select bank0
 12027  06CC  0858               	movf	dtoa@i+1,w
 12028  06CD  3A80               	xorlw	128
 12029  06CE  00C3               	movwf	??_dtoa
 12030  06CF  3080               	movlw	128
 12031  06D0  0243               	subwf	??_dtoa,w
 12032  06D1  1D03               	skipz
 12033  06D2  2ED5               	goto	u3445
 12034  06D3  3001               	movlw	1
 12035  06D4  0257               	subwf	dtoa@i,w
 12036  06D5                     u3445:
 12037  06D5  1C03               	skipc
 12038  06D6  2ED8               	goto	u3441
 12039  06D7  2ED9               	goto	u3440
 12040  06D8                     u3441:
 12041  06D8  2F06               	goto	l4858
 12042  06D9                     u3440:
 12043  06D9                     l4850:
 12044  06D9  0020               	movlb	0	; select bank0
 12045  06DA  084F               	movf	dtoa@n,w
 12046  06DB  0450               	iorwf	dtoa@n+1,w
 12047  06DC  0451               	iorwf	dtoa@n+2,w
 12048  06DD  0452               	iorwf	dtoa@n+3,w
 12049  06DE  0453               	iorwf	dtoa@n+4,w
 12050  06DF  0454               	iorwf	dtoa@n+5,w
 12051  06E0  0455               	iorwf	dtoa@n+6,w
 12052  06E1  0456               	iorwf	dtoa@n+7,w
 12053  06E2  1D03               	skipz
 12054  06E3  2EE5               	goto	u3451
 12055  06E4  2EE6               	goto	u3450
 12056  06E5                     u3451:
 12057  06E5  2E62               	goto	l4840
 12058  06E6                     u3450:
 12059  06E6                     l4852:
 12060  06E6  084A               	movf	dtoa@p+1,w
 12061  06E7  3A80               	xorlw	128
 12062  06E8  00C3               	movwf	??_dtoa
 12063  06E9  3080               	movlw	128
 12064  06EA  0243               	subwf	??_dtoa,w
 12065  06EB  1D03               	skipz
 12066  06EC  2EEF               	goto	u3465
 12067  06ED  3001               	movlw	1
 12068  06EE  0249               	subwf	dtoa@p,w
 12069  06EF                     u3465:
 12070  06EF  1803               	skipnc
 12071  06F0  2EF2               	goto	u3461
 12072  06F1  2EF3               	goto	u3460
 12073  06F2                     u3461:
 12074  06F2  2E62               	goto	l4840
 12075  06F3                     u3460:
 12076  06F3                     l4854:
 12077  06F3  0020               	movlb	0	; select bank0
 12078  06F4  084C               	movf	dtoa@w+1,w
 12079  06F5  3A80               	xorlw	128
 12080  06F6  00C3               	movwf	??_dtoa
 12081  06F7  3080               	movlw	128
 12082  06F8  0243               	subwf	??_dtoa,w
 12083  06F9  1D03               	skipz
 12084  06FA  2EFD               	goto	u3475
 12085  06FB  3001               	movlw	1
 12086  06FC  024B               	subwf	dtoa@w,w
 12087  06FD                     u3475:
 12088  06FD  1C03               	skipc
 12089  06FE  2F00               	goto	u3471
 12090  06FF  2F01               	goto	u3470
 12091  0700                     u3471:
 12092  0700  2F06               	goto	l4858
 12093  0701                     u3470:
 12094  0701                     l4856:
 12095  0701  0021               	movlb	1	; select bank1
 12096  0702  18D8               	btfsc	_flags^(0+128),1
 12097  0703  2F05               	goto	u3481
 12098  0704  2F06               	goto	u3480
 12099  0705                     u3481:
 12100  0705  2E62               	goto	l4840
 12101  0706                     u3480:
 12102  0706                     l4858:
 12103                           
 12104                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
 12105  0706  0020               	movlb	0	; select bank0
 12106  0707  084D               	movf	dtoa@s,w
 12107  0708  044E               	iorwf	dtoa@s+1,w
 12108  0709  1D03               	btfss	3,2
 12109  070A  2F0C               	goto	u3491
 12110  070B  2F0D               	goto	u3490
 12111  070C                     u3491:
 12112  070C  2F12               	goto	l4862
 12113  070D                     u3490:
 12114  070D                     l4860:
 12115  070D  0021               	movlb	1	; select bank1
 12116  070E  1D58               	btfss	_flags^(0+128),2
 12117  070F  2F11               	goto	u3501
 12118  0710  2F12               	goto	u3500
 12119  0711                     u3501:
 12120  0711  2F2F               	goto	l4872
 12121  0712                     u3500:
 12122  0712                     l4862:
 12123                           
 12124                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
 12125  0712  30FF               	movlw	255
 12126  0713  0020               	movlb	0	; select bank0
 12127  0714  07D7               	addwf	dtoa@i,f
 12128  0715  30FF               	movlw	255
 12129  0716  3DD8               	addwfc	dtoa@i+1,f
 12130  0717                     l4864:
 12131                           
 12132                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
 12133  0717  084D               	movf	dtoa@s,w
 12134  0718  044E               	iorwf	dtoa@s+1,w
 12135  0719  1D03               	btfss	3,2
 12136  071A  2F1C               	goto	u3511
 12137  071B  2F1D               	goto	u3510
 12138  071C                     u3511:
 12139  071C  2F22               	goto	l4868
 12140  071D                     u3510:
 12141  071D                     l4866:
 12142  071D  302B               	movlw	43
 12143  071E  00C6               	movwf	_dtoa$3302
 12144  071F  3000               	movlw	0
 12145  0720  00C7               	movwf	_dtoa$3302+1
 12146  0721  2F26               	goto	l4870
 12147  0722                     l4868:
 12148  0722  302D               	movlw	45
 12149  0723  00C6               	movwf	_dtoa$3302
 12150  0724  3000               	movlw	0
 12151  0725  00C7               	movwf	_dtoa$3302+1
 12152  0726                     l4870:
 12153  0726  0846               	movf	_dtoa$3302,w
 12154  0727  00C3               	movwf	??_dtoa
 12155  0728  0857               	movf	dtoa@i,w
 12156  0729  3E3F               	addlw	(low (_dbuf| (0+256)))& (0+255)
 12157  072A  0086               	movwf	6
 12158  072B  3001               	movlw	1	; select bank2/3
 12159  072C  0087               	movwf	7
 12160  072D  0843               	movf	??_dtoa,w
 12161  072E  0081               	movwf	1
 12162  072F                     l4872:
 12163                           
 12164                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
 12165  072F  0020               	movlb	0	; select bank0
 12166  0730  0857               	movf	dtoa@i,w
 12167  0731  3E3F               	addlw	(low (_dbuf| (0+256)))& (0+255)
 12168  0732  00C3               	movwf	??_dtoa
 12169  0733  0843               	movf	??_dtoa,w
 12170  0734  00B0               	movwf	pad@buf
 12171  0735  084C               	movf	dtoa@w+1,w
 12172  0736  00B2               	movwf	pad@p+1
 12173  0737  084B               	movf	dtoa@w,w
 12174  0738  00B1               	movwf	pad@p
 12175  0739  0848               	movf	dtoa@fp,w
 12176  073A  3196  26EA  3185   	fcall	_pad
 12177  073D  0020               	movlb	0	; select bank0
 12178  073E  0831               	movf	?_pad+1,w
 12179  073F  00BC               	movwf	?_dtoa+1
 12180  0740  0830               	movf	?_pad,w
 12181  0741  00BB               	movwf	?_dtoa
 12182  0742                     l2243:
 12183  0742  0008               	return
 12184  0743                     __end_of_dtoa:
 12185                           
 12186                           	psect	text7
 12187  16EA                     __ptext7:	
 12188 ;; *************** function _pad *****************
 12189 ;; Defined at:
 12190 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
 12191 ;; Parameters:    Size  Location     Type
 12192 ;;  fp              1    wreg     PTR struct _IO_FILE
 12193 ;;		 -> sprintf@f(5), 
 12194 ;;  buf             1   16[BANK0 ] PTR unsigned char 
 12195 ;;		 -> dbuf(32), 
 12196 ;;  p               2   17[BANK0 ] int 
 12197 ;; Auto vars:     Size  Location     Type
 12198 ;;  fp              1   24[BANK0 ] PTR struct _IO_FILE
 12199 ;;		 -> sprintf@f(5), 
 12200 ;;  w               2   22[BANK0 ] int 
 12201 ;;  i               2   20[BANK0 ] int 
 12202 ;; Return value:  Size  Location     Type
 12203 ;;                  2   16[BANK0 ] int 
 12204 ;; Registers used:
 12205 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12206 ;; Tracked objects:
 12207 ;;		On entry : 0/0
 12208 ;;		On exit  : 0/0
 12209 ;;		Unchanged: 0/0
 12210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12211 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12212 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12213 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12214 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12215 ;;Total ram usage:        9 bytes
 12216 ;; Hardware stack levels used: 1
 12217 ;; Hardware stack levels required when called: 10
 12218 ;; This function calls:
 12219 ;;		_fputc
 12220 ;;		_fputs
 12221 ;;		_strlen
 12222 ;; This function is called by:
 12223 ;;		_dtoa
 12224 ;; This function uses a non-reentrant model
 12225 ;;
 12226                           
 12227                           
 12228                           ;psect for function _pad
 12229  16EA                     _pad:
 12230                           
 12231                           ;incstack = 0
 12232                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12233                           ;pad@fp stored from wreg
 12234  16EA  0020               	movlb	0	; select bank0
 12235  16EB  00B8               	movwf	pad@fp
 12236  16EC                     l4650:
 12237                           
 12238                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 12239  16EC  0021               	movlb	1	; select bank1
 12240  16ED  1C58               	btfss	_flags^(0+128),0
 12241  16EE  2EF0               	goto	u3021
 12242  16EF  2EF1               	goto	u3020
 12243  16F0                     u3021:
 12244  16F0  2EFA               	goto	l4654
 12245  16F1                     u3020:
 12246  16F1                     l4652:
 12247                           
 12248                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 12249  16F1  0020               	movlb	0	; select bank0
 12250  16F2  0838               	movf	pad@fp,w
 12251  16F3  00B3               	movwf	??_pad
 12252  16F4  0833               	movf	??_pad,w
 12253  16F5  00A8               	movwf	fputs@fp
 12254  16F6  0830               	movf	pad@buf,w
 12255  16F7  3194  24A7  3196   	fcall	_fputs
 12256  16FA                     l4654:
 12257                           
 12258                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 12259  16FA  0020               	movlb	0	; select bank0
 12260  16FB  1BB2               	btfsc	pad@p+1,7
 12261  16FC  2EFE               	goto	u3031
 12262  16FD  2EFF               	goto	u3030
 12263  16FE                     u3031:
 12264  16FE  2F04               	goto	l4658
 12265  16FF                     u3030:
 12266  16FF                     l4656:
 12267  16FF  0832               	movf	pad@p+1,w
 12268  1700  00B7               	movwf	pad@w+1
 12269  1701  0831               	movf	pad@p,w
 12270  1702  00B6               	movwf	pad@w
 12271  1703  2F06               	goto	l2212
 12272  1704                     l4658:
 12273  1704  01B6               	clrf	pad@w
 12274  1705  01B7               	clrf	pad@w+1
 12275  1706                     l2212:
 12276                           
 12277                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 12278  1706  01B4               	clrf	pad@i
 12279  1707  01B5               	clrf	pad@i+1
 12280                           
 12281                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12282  1708  2F1A               	goto	l4664
 12283  1709                     l4660:
 12284                           
 12285                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 12286  1709  3020               	movlw	32
 12287  170A  0020               	movlb	0	; select bank0
 12288  170B  00A0               	movwf	fputc@c
 12289  170C  3000               	movlw	0
 12290  170D  00A1               	movwf	fputc@c+1
 12291  170E  0838               	movf	pad@fp,w
 12292  170F  00B3               	movwf	??_pad
 12293  1710  0833               	movf	??_pad,w
 12294  1711  00A2               	movwf	fputc@fp
 12295  1712  3196  2646  3196   	fcall	_fputc
 12296  1715                     l4662:
 12297                           
 12298                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
 12299  1715  3001               	movlw	1
 12300  1716  0020               	movlb	0	; select bank0
 12301  1717  07B4               	addwf	pad@i,f
 12302  1718  3000               	movlw	0
 12303  1719  3DB5               	addwfc	pad@i+1,f
 12304  171A                     l4664:
 12305                           
 12306                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12307  171A  0835               	movf	pad@i+1,w
 12308  171B  3A80               	xorlw	128
 12309  171C  00B3               	movwf	??_pad
 12310  171D  0837               	movf	pad@w+1,w
 12311  171E  3A80               	xorlw	128
 12312  171F  0233               	subwf	??_pad,w
 12313  1720  1D03               	skipz
 12314  1721  2F24               	goto	u3045
 12315  1722  0836               	movf	pad@w,w
 12316  1723  0234               	subwf	pad@i,w
 12317  1724                     u3045:
 12318  1724  1C03               	skipc
 12319  1725  2F27               	goto	u3041
 12320  1726  2F28               	goto	u3040
 12321  1727                     u3041:
 12322  1727  2F09               	goto	l4660
 12323  1728                     u3040:
 12324  1728                     l2215:
 12325                           
 12326                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 12327  1728  0021               	movlb	1	; select bank1
 12328  1729  1858               	btfsc	_flags^(0+128),0
 12329  172A  2F2C               	goto	u3051
 12330  172B  2F2D               	goto	u3050
 12331  172C                     u3051:
 12332  172C  2F36               	goto	l4668
 12333  172D                     u3050:
 12334  172D                     l4666:
 12335                           
 12336                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 12337  172D  0020               	movlb	0	; select bank0
 12338  172E  0838               	movf	pad@fp,w
 12339  172F  00B3               	movwf	??_pad
 12340  1730  0833               	movf	??_pad,w
 12341  1731  00A8               	movwf	fputs@fp
 12342  1732  0830               	movf	pad@buf,w
 12343  1733  3194  24A7  3196   	fcall	_fputs
 12344  1736                     l4668:
 12345                           
 12346                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
 12347  1736  0020               	movlb	0	; select bank0
 12348  1737  0830               	movf	pad@buf,w
 12349  1738  3193  2391  3196   	fcall	_strlen
 12350  173B  0020               	movlb	0	; select bank0
 12351  173C  0836               	movf	pad@w,w
 12352  173D  0720               	addwf	?_strlen,w
 12353  173E  00B0               	movwf	?_pad
 12354  173F  0837               	movf	pad@w+1,w
 12355  1740  3D21               	addwfc	?_strlen+1,w
 12356  1741  00B1               	movwf	?_pad+1
 12357  1742                     l2217:
 12358  1742  0008               	return
 12359  1743                     __end_of_pad:
 12360                           
 12361                           	psect	text8
 12362  1391                     __ptext8:	
 12363 ;; *************** function _strlen *****************
 12364 ;; Defined at:
 12365 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
 12366 ;; Parameters:    Size  Location     Type
 12367 ;;  s               1    wreg     PTR const unsigned char 
 12368 ;;		 -> dbuf(32), 
 12369 ;; Auto vars:     Size  Location     Type
 12370 ;;  s               1    4[BANK0 ] PTR const unsigned char 
 12371 ;;		 -> dbuf(32), 
 12372 ;;  a               1    3[BANK0 ] PTR const unsigned char 
 12373 ;;		 -> dbuf(32), 
 12374 ;; Return value:  Size  Location     Type
 12375 ;;                  2    0[BANK0 ] unsigned int 
 12376 ;; Registers used:
 12377 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12378 ;; Tracked objects:
 12379 ;;		On entry : 0/0
 12380 ;;		On exit  : 0/0
 12381 ;;		Unchanged: 0/0
 12382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12383 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12384 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12385 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12386 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12387 ;;Total ram usage:        5 bytes
 12388 ;; Hardware stack levels used: 1
 12389 ;; Hardware stack levels required when called: 7
 12390 ;; This function calls:
 12391 ;;		Nothing
 12392 ;; This function is called by:
 12393 ;;		_pad
 12394 ;; This function uses a non-reentrant model
 12395 ;;
 12396                           
 12397                           
 12398                           ;psect for function _strlen
 12399  1391                     _strlen:
 12400                           
 12401                           ;incstack = 0
 12402                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
 12403                           ;strlen@s stored from wreg
 12404  1391  0020               	movlb	0	; select bank0
 12405  1392  00A4               	movwf	strlen@s
 12406  1393                     l4534:
 12407  1393  0824               	movf	strlen@s,w
 12408  1394  00A2               	movwf	??_strlen
 12409  1395  0822               	movf	??_strlen,w
 12410  1396  00A3               	movwf	strlen@a
 12411  1397  2B9C               	goto	l4538
 12412  1398                     l4536:
 12413  1398  3001               	movlw	1
 12414  1399  00A2               	movwf	??_strlen
 12415  139A  0822               	movf	??_strlen,w
 12416  139B  07A4               	addwf	strlen@s,f
 12417  139C                     l4538:
 12418  139C  0824               	movf	strlen@s,w
 12419  139D  0086               	movwf	6
 12420  139E  3001               	movlw	1	; select bank2/3
 12421  139F  0087               	movwf	7
 12422  13A0  0801               	movf	1,w
 12423  13A1  1D03               	btfss	3,2
 12424  13A2  2BA4               	goto	u2751
 12425  13A3  2BA5               	goto	u2750
 12426  13A4                     u2751:
 12427  13A4  2B98               	goto	l4536
 12428  13A5                     u2750:
 12429  13A5                     l4540:
 12430  13A5  0823               	movf	strlen@a,w
 12431  13A6  0224               	subwf	strlen@s,w
 12432  13A7  00A0               	movwf	?_strlen
 12433  13A8  01A1               	clrf	?_strlen+1
 12434  13A9  1BA0               	btfsc	?_strlen,7
 12435  13AA  03A1               	decf	?_strlen+1,f
 12436  13AB                     l2360:
 12437  13AB  0008               	return
 12438  13AC                     __end_of_strlen:
 12439                           
 12440                           	psect	text9
 12441  14A7                     __ptext9:	
 12442 ;; *************** function _fputs *****************
 12443 ;; Defined at:
 12444 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
 12445 ;; Parameters:    Size  Location     Type
 12446 ;;  s               1    wreg     PTR const unsigned char 
 12447 ;;		 -> dbuf(32), 
 12448 ;;  fp              1    8[BANK0 ] PTR struct _IO_FILE
 12449 ;;		 -> sprintf@f(5), 
 12450 ;; Auto vars:     Size  Location     Type
 12451 ;;  s               1   15[BANK0 ] PTR const unsigned char 
 12452 ;;		 -> dbuf(32), 
 12453 ;;  i               2   13[BANK0 ] int 
 12454 ;;  c               1   12[BANK0 ] unsigned char 
 12455 ;; Return value:  Size  Location     Type
 12456 ;;                  2    8[BANK0 ] int 
 12457 ;; Registers used:
 12458 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12459 ;; Tracked objects:
 12460 ;;		On entry : 0/0
 12461 ;;		On exit  : 0/0
 12462 ;;		Unchanged: 0/0
 12463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12464 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12465 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12466 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12467 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12468 ;;Total ram usage:        8 bytes
 12469 ;; Hardware stack levels used: 1
 12470 ;; Hardware stack levels required when called: 9
 12471 ;; This function calls:
 12472 ;;		_fputc
 12473 ;; This function is called by:
 12474 ;;		_pad
 12475 ;; This function uses a non-reentrant model
 12476 ;;
 12477                           
 12478                           
 12479                           ;psect for function _fputs
 12480  14A7                     _fputs:
 12481                           
 12482                           ;incstack = 0
 12483                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12484                           ;fputs@s stored from wreg
 12485  14A7  0020               	movlb	0	; select bank0
 12486  14A8  00AF               	movwf	fputs@s
 12487  14A9                     l4526:
 12488  14A9  01AD               	clrf	fputs@i
 12489  14AA  01AE               	clrf	fputs@i+1
 12490  14AB  2CBF               	goto	l4532
 12491  14AC                     l4528:
 12492  14AC  082C               	movf	fputs@c,w
 12493  14AD  00A9               	movwf	??_fputs
 12494  14AE  01AA               	clrf	??_fputs+1
 12495  14AF  0829               	movf	??_fputs,w
 12496  14B0  00A0               	movwf	fputc@c
 12497  14B1  082A               	movf	??_fputs+1,w
 12498  14B2  00A1               	movwf	fputc@c+1
 12499  14B3  0828               	movf	fputs@fp,w
 12500  14B4  00AB               	movwf	??_fputs+2
 12501  14B5  082B               	movf	??_fputs+2,w
 12502  14B6  00A2               	movwf	fputc@fp
 12503  14B7  3196  2646  3194   	fcall	_fputc
 12504  14BA                     l4530:
 12505  14BA  3001               	movlw	1
 12506  14BB  0020               	movlb	0	; select bank0
 12507  14BC  07AD               	addwf	fputs@i,f
 12508  14BD  3000               	movlw	0
 12509  14BE  3DAE               	addwfc	fputs@i+1,f
 12510  14BF                     l4532:
 12511  14BF  082D               	movf	fputs@i,w
 12512  14C0  072F               	addwf	fputs@s,w
 12513  14C1  00A9               	movwf	??_fputs
 12514  14C2  0829               	movf	??_fputs,w
 12515  14C3  0086               	movwf	6
 12516  14C4  3001               	movlw	1	; select bank2/3
 12517  14C5  0087               	movwf	7
 12518  14C6  0801               	movf	1,w
 12519  14C7  00AA               	movwf	??_fputs+1
 12520  14C8  082A               	movf	??_fputs+1,w
 12521  14C9  00AC               	movwf	fputs@c
 12522  14CA  082C               	movf	fputs@c,w
 12523  14CB  1D03               	btfss	3,2
 12524  14CC  2CCE               	goto	u2741
 12525  14CD  2CCF               	goto	u2740
 12526  14CE                     u2741:
 12527  14CE  2CAC               	goto	l4528
 12528  14CF                     u2740:
 12529  14CF                     l2351:
 12530  14CF  0008               	return
 12531  14D0                     __end_of_fputs:
 12532                           
 12533                           	psect	text10
 12534  1646                     __ptext10:	
 12535 ;; *************** function _fputc *****************
 12536 ;; Defined at:
 12537 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
 12538 ;; Parameters:    Size  Location     Type
 12539 ;;  c               2    0[BANK0 ] int 
 12540 ;;  fp              1    2[BANK0 ] PTR struct _IO_FILE
 12541 ;;		 -> sprintf@f(5), 
 12542 ;; Auto vars:     Size  Location     Type
 12543 ;;		None
 12544 ;; Return value:  Size  Location     Type
 12545 ;;                  2    0[BANK0 ] int 
 12546 ;; Registers used:
 12547 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12548 ;; Tracked objects:
 12549 ;;		On entry : 0/0
 12550 ;;		On exit  : 0/0
 12551 ;;		Unchanged: 0/0
 12552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12553 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12555 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12556 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12557 ;;Total ram usage:        8 bytes
 12558 ;; Hardware stack levels used: 1
 12559 ;; Hardware stack levels required when called: 8
 12560 ;; This function calls:
 12561 ;;		_putch
 12562 ;; This function is called by:
 12563 ;;		_pad
 12564 ;;		_vfpfcnvrt
 12565 ;;		_fputs
 12566 ;; This function uses a non-reentrant model
 12567 ;;
 12568                           
 12569                           
 12570                           ;psect for function _fputc
 12571  1646                     _fputc:
 12572  1646                     l4506:	
 12573                           ;incstack = 0
 12574                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12575                           
 12576  1646  0020               	movlb	0	; select bank0
 12577  1647  0822               	movf	fputc@fp,w
 12578  1648  1903               	btfsc	3,2
 12579  1649  2E4B               	goto	u2701
 12580  164A  2E4C               	goto	u2700
 12581  164B                     u2701:
 12582  164B  2E51               	goto	l4510
 12583  164C                     u2700:
 12584  164C                     l4508:
 12585  164C  0822               	movf	fputc@fp,w
 12586  164D  1D03               	btfss	3,2
 12587  164E  2E50               	goto	u2711
 12588  164F  2E51               	goto	u2710
 12589  1650                     u2711:
 12590  1650  2E56               	goto	l4512
 12591  1651                     u2710:
 12592  1651                     l4510:
 12593  1651  0820               	movf	fputc@c,w
 12594  1652  3180  2003  3196   	fcall	_putch
 12595  1655  2E96               	goto	l2343
 12596  1656                     l4512:
 12597  1656  0822               	movf	fputc@fp,w
 12598  1657  3E03               	addlw	3
 12599  1658  0086               	movwf	6
 12600  1659  0187               	clrf	7
 12601  165A  0016               	moviw fsr1++
 12602  165B  0401               	iorwf	1,w
 12603  165C  1903               	btfsc	3,2
 12604  165D  2E5F               	goto	u2721
 12605  165E  2E60               	goto	u2720
 12606  165F                     u2721:
 12607  165F  2E7D               	goto	l4516
 12608  1660                     u2720:
 12609  1660                     l4514:
 12610  1660  0822               	movf	fputc@fp,w
 12611  1661  3E03               	addlw	3
 12612  1662  0086               	movwf	6
 12613  1663  0187               	clrf	7
 12614  1664  3F40               	moviw [0]fsr1
 12615  1665  00A3               	movwf	??_fputc
 12616  1666  3F41               	moviw [1]fsr1
 12617  1667  00A4               	movwf	??_fputc+1
 12618  1668  0A22               	incf	fputc@fp,w
 12619  1669  0086               	movwf	6
 12620  166A  0187               	clrf	7
 12621  166B  3F40               	moviw [0]fsr1
 12622  166C  00A5               	movwf	??_fputc+2
 12623  166D  3F41               	moviw [1]fsr1
 12624  166E  00A6               	movwf	??_fputc+3
 12625  166F  0826               	movf	??_fputc+3,w
 12626  1670  3A80               	xorlw	128
 12627  1671  00A7               	movwf	??_fputc+4
 12628  1672  0824               	movf	??_fputc+1,w
 12629  1673  3A80               	xorlw	128
 12630  1674  0227               	subwf	??_fputc+4,w
 12631  1675  1D03               	skipz
 12632  1676  2E79               	goto	u2735
 12633  1677  0823               	movf	??_fputc,w
 12634  1678  0225               	subwf	??_fputc+2,w
 12635  1679                     u2735:
 12636  1679  1803               	skipnc
 12637  167A  2E7C               	goto	u2731
 12638  167B  2E7D               	goto	u2730
 12639  167C                     u2731:
 12640  167C  2E96               	goto	l2343
 12641  167D                     u2730:
 12642  167D                     l4516:
 12643  167D  0020               	movlb	0	; select bank0
 12644  167E  0820               	movf	fputc@c,w
 12645  167F  00A3               	movwf	??_fputc
 12646  1680  0822               	movf	fputc@fp,w
 12647  1681  0086               	movwf	6
 12648  1682  0187               	clrf	7
 12649  1683  0A22               	incf	fputc@fp,w
 12650  1684  0084               	movwf	4
 12651  1685  0185               	clrf	5
 12652  1686  0800               	movf	0,w
 12653  1687  0701               	addwf	1,w
 12654  1688  00A4               	movwf	??_fputc+1
 12655  1689  0824               	movf	??_fputc+1,w
 12656  168A  0086               	movwf	6
 12657  168B  0187               	clrf	7
 12658  168C  0823               	movf	??_fputc,w
 12659  168D  0081               	movwf	1
 12660  168E                     l4518:
 12661  168E  0A22               	incf	fputc@fp,w
 12662  168F  0086               	movwf	6
 12663  1690  0187               	clrf	7
 12664  1691  3001               	movlw	1
 12665  1692  0781               	addwf	1,f
 12666  1693  3141               	addfsr 1,1
 12667  1694  1803               	skipnc
 12668  1695  0A81               	incf	1,f
 12669  1696                     l2343:
 12670  1696  0008               	return
 12671  1697                     __end_of_fputc:
 12672                           
 12673                           	psect	text11
 12674  0003                     __ptext11:	
 12675 ;; *************** function _putch *****************
 12676 ;; Defined at:
 12677 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
 12678 ;; Parameters:    Size  Location     Type
 12679 ;;  c               1    wreg     unsigned char 
 12680 ;; Auto vars:     Size  Location     Type
 12681 ;;  c               1    0[COMMON] unsigned char 
 12682 ;; Return value:  Size  Location     Type
 12683 ;;                  1    wreg      void 
 12684 ;; Registers used:
 12685 ;;		wreg
 12686 ;; Tracked objects:
 12687 ;;		On entry : 0/0
 12688 ;;		On exit  : 0/0
 12689 ;;		Unchanged: 0/0
 12690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12695 ;;Total ram usage:        0 bytes
 12696 ;; Hardware stack levels used: 1
 12697 ;; Hardware stack levels required when called: 7
 12698 ;; This function calls:
 12699 ;;		Nothing
 12700 ;; This function is called by:
 12701 ;;		_fputc
 12702 ;; This function uses a non-reentrant model
 12703 ;;
 12704                           
 12705                           
 12706                           ;psect for function _putch
 12707  0003                     _putch:
 12708  0003                     l2354:	
 12709                           ;incstack = 0
 12710                           ; Regs used in _putch: [wreg]
 12711                           
 12712  0003  0008               	return
 12713  0004                     __end_of_putch:
 12714                           
 12715                           	psect	text12
 12716  13C8                     __ptext12:	
 12717 ;; *************** function _abs *****************
 12718 ;; Defined at:
 12719 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
 12720 ;; Parameters:    Size  Location     Type
 12721 ;;  a               2   19[BANK0 ] int 
 12722 ;; Auto vars:     Size  Location     Type
 12723 ;;		None
 12724 ;; Return value:  Size  Location     Type
 12725 ;;                  2   19[BANK0 ] int 
 12726 ;; Registers used:
 12727 ;;		wreg, status,2, status,0
 12728 ;; Tracked objects:
 12729 ;;		On entry : 0/0
 12730 ;;		On exit  : 0/0
 12731 ;;		Unchanged: 0/0
 12732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12733 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12735 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12736 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12737 ;;Total ram usage:        4 bytes
 12738 ;; Hardware stack levels used: 1
 12739 ;; Hardware stack levels required when called: 7
 12740 ;; This function calls:
 12741 ;;		Nothing
 12742 ;; This function is called by:
 12743 ;;		_dtoa
 12744 ;; This function uses a non-reentrant model
 12745 ;;
 12746                           
 12747                           
 12748                           ;psect for function _abs
 12749  13C8                     _abs:
 12750  13C8                     l4672:	
 12751                           ;incstack = 0
 12752                           ; Regs used in _abs: [wreg+status,2+status,0]
 12753                           
 12754  13C8  0020               	movlb	0	; select bank0
 12755  13C9  0834               	movf	abs@a+1,w
 12756  13CA  3A80               	xorlw	128
 12757  13CB  00B5               	movwf	??_abs
 12758  13CC  3080               	movlw	128
 12759  13CD  0235               	subwf	??_abs,w
 12760  13CE  1D03               	skipz
 12761  13CF  2BD2               	goto	u3065
 12762  13D0  3001               	movlw	1
 12763  13D1  0233               	subwf	abs@a,w
 12764  13D2                     u3065:
 12765  13D2  1803               	skipnc
 12766  13D3  2BD5               	goto	u3061
 12767  13D4  2BD6               	goto	u3060
 12768  13D5                     u3061:
 12769  13D5  2BE3               	goto	l2283
 12770  13D6                     u3060:
 12771  13D6                     l4674:
 12772  13D6  0020               	movlb	0	; select bank0
 12773  13D7  0933               	comf	abs@a,w
 12774  13D8  00B5               	movwf	??_abs
 12775  13D9  0934               	comf	abs@a+1,w
 12776  13DA  00B6               	movwf	??_abs+1
 12777  13DB  0AB5               	incf	??_abs,f
 12778  13DC  1903               	skipnz
 12779  13DD  0AB6               	incf	??_abs+1,f
 12780  13DE  0835               	movf	??_abs,w
 12781  13DF  00B3               	movwf	?_abs
 12782  13E0  0836               	movf	??_abs+1,w
 12783  13E1  00B4               	movwf	?_abs+1
 12784  13E2  2BE3               	goto	l2286
 12785  13E3                     l2283:
 12786  13E3                     l2286:
 12787  13E3  0008               	return
 12788  13E4                     __end_of_abs:
 12789                           
 12790                           	psect	text13
 12791  0ABF                     __ptext13:	
 12792 ;; *************** function ___aomod *****************
 12793 ;; Defined at:
 12794 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
 12795 ;; Parameters:    Size  Location     Type
 12796 ;;  divisor         8    0[BANK0 ] long long 
 12797 ;;  dividend        8    8[BANK0 ] long long 
 12798 ;; Auto vars:     Size  Location     Type
 12799 ;;  sign            1   18[BANK0 ] unsigned char 
 12800 ;;  counter         1   17[BANK0 ] unsigned char 
 12801 ;; Return value:  Size  Location     Type
 12802 ;;                  8    0[BANK0 ] long long 
 12803 ;; Registers used:
 12804 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12805 ;; Tracked objects:
 12806 ;;		On entry : 0/0
 12807 ;;		On exit  : 0/0
 12808 ;;		Unchanged: 0/0
 12809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12810 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12811 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12812 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12813 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12814 ;;Total ram usage:       19 bytes
 12815 ;; Hardware stack levels used: 1
 12816 ;; Hardware stack levels required when called: 7
 12817 ;; This function calls:
 12818 ;;		Nothing
 12819 ;; This function is called by:
 12820 ;;		_dtoa
 12821 ;; This function uses a non-reentrant model
 12822 ;;
 12823                           
 12824                           
 12825                           ;psect for function ___aomod
 12826  0ABF                     ___aomod:
 12827  0ABF                     l4620:	
 12828                           ;incstack = 0
 12829                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
 12830                           
 12831  0ABF  0020               	movlb	0	; select bank0
 12832  0AC0  01B2               	clrf	___aomod@sign
 12833  0AC1                     l4622:
 12834  0AC1  3028               	movlw	low ___aomod@dividend
 12835  0AC2  0086               	movwf	6
 12836  0AC3  3000               	movlw	high ___aomod@dividend
 12837  0AC4  0087               	movwf	7
 12838  0AC5  3F47               	moviw [7]fsr1
 12839  0AC6  00B0               	movwf	??___aomod
 12840  0AC7  1FB0               	btfss	??___aomod,7
 12841  0AC8  2ACA               	goto	u2921
 12842  0AC9  2ACB               	goto	u2920
 12843  0ACA                     u2921:
 12844  0ACA  2AED               	goto	l4626
 12845  0ACB                     u2920:
 12846  0ACB                     l4624:
 12847  0ACB  0020               	movlb	0	; select bank0
 12848  0ACC  09A8               	comf	___aomod@dividend,f
 12849  0ACD  09A9               	comf	___aomod@dividend+1,f
 12850  0ACE  09AA               	comf	___aomod@dividend+2,f
 12851  0ACF  09AB               	comf	___aomod@dividend+3,f
 12852  0AD0  09AC               	comf	___aomod@dividend+4,f
 12853  0AD1  09AD               	comf	___aomod@dividend+5,f
 12854  0AD2  09AE               	comf	___aomod@dividend+6,f
 12855  0AD3  09AF               	comf	___aomod@dividend+7,f
 12856  0AD4  0AA8               	incf	___aomod@dividend,f
 12857  0AD5  1D03               	skipz
 12858  0AD6  2AEA               	goto	u293lld
 12859  0AD7  0AA9               	incf	___aomod@dividend+1,f
 12860  0AD8  1D03               	skipz
 12861  0AD9  2AEA               	goto	u293lld
 12862  0ADA  0AAA               	incf	___aomod@dividend+2,f
 12863  0ADB  1D03               	skipz
 12864  0ADC  2AEA               	goto	u293lld
 12865  0ADD  0AAB               	incf	___aomod@dividend+3,f
 12866  0ADE  1D03               	skipz
 12867  0ADF  2AEA               	goto	u293lld
 12868  0AE0  0AAC               	incf	___aomod@dividend+4,f
 12869  0AE1  1D03               	skipz
 12870  0AE2  2AEA               	goto	u293lld
 12871  0AE3  0AAD               	incf	___aomod@dividend+5,f
 12872  0AE4  1D03               	skipz
 12873  0AE5  2AEA               	goto	u293lld
 12874  0AE6  0AAE               	incf	___aomod@dividend+6,f
 12875  0AE7  1D03               	skipz
 12876  0AE8  2AEA               	goto	u293lld
 12877  0AE9  0AAF               	incf	___aomod@dividend+7,f
 12878  0AEA                     u293lld:
 12879  0AEA  0020               	movlb	0	; select bank0
 12880  0AEB  01B2               	clrf	___aomod@sign
 12881  0AEC  0AB2               	incf	___aomod@sign,f
 12882  0AED                     l4626:
 12883  0AED  3020               	movlw	low ___aomod@divisor
 12884  0AEE  0086               	movwf	6
 12885  0AEF  3000               	movlw	high ___aomod@divisor
 12886  0AF0  0087               	movwf	7
 12887  0AF1  3F47               	moviw [7]fsr1
 12888  0AF2  0020               	movlb	0	; select bank0
 12889  0AF3  00B0               	movwf	??___aomod
 12890  0AF4  1FB0               	btfss	??___aomod,7
 12891  0AF5  2AF7               	goto	u2941
 12892  0AF6  2AF8               	goto	u2940
 12893  0AF7                     u2941:
 12894  0AF7  2B17               	goto	l4630
 12895  0AF8                     u2940:
 12896  0AF8                     l4628:
 12897  0AF8  0020               	movlb	0	; select bank0
 12898  0AF9  09A0               	comf	___aomod@divisor,f
 12899  0AFA  09A1               	comf	___aomod@divisor+1,f
 12900  0AFB  09A2               	comf	___aomod@divisor+2,f
 12901  0AFC  09A3               	comf	___aomod@divisor+3,f
 12902  0AFD  09A4               	comf	___aomod@divisor+4,f
 12903  0AFE  09A5               	comf	___aomod@divisor+5,f
 12904  0AFF  09A6               	comf	___aomod@divisor+6,f
 12905  0B00  09A7               	comf	___aomod@divisor+7,f
 12906  0B01  0AA0               	incf	___aomod@divisor,f
 12907  0B02  1D03               	skipz
 12908  0B03  2B17               	goto	u295lld
 12909  0B04  0AA1               	incf	___aomod@divisor+1,f
 12910  0B05  1D03               	skipz
 12911  0B06  2B17               	goto	u295lld
 12912  0B07  0AA2               	incf	___aomod@divisor+2,f
 12913  0B08  1D03               	skipz
 12914  0B09  2B17               	goto	u295lld
 12915  0B0A  0AA3               	incf	___aomod@divisor+3,f
 12916  0B0B  1D03               	skipz
 12917  0B0C  2B17               	goto	u295lld
 12918  0B0D  0AA4               	incf	___aomod@divisor+4,f
 12919  0B0E  1D03               	skipz
 12920  0B0F  2B17               	goto	u295lld
 12921  0B10  0AA5               	incf	___aomod@divisor+5,f
 12922  0B11  1D03               	skipz
 12923  0B12  2B17               	goto	u295lld
 12924  0B13  0AA6               	incf	___aomod@divisor+6,f
 12925  0B14  1D03               	skipz
 12926  0B15  2B17               	goto	u295lld
 12927  0B16  0AA7               	incf	___aomod@divisor+7,f
 12928  0B17                     u295lld:
 12929  0B17                     l4630:
 12930  0B17  0020               	movlb	0	; select bank0
 12931  0B18  0820               	movf	___aomod@divisor,w
 12932  0B19  0421               	iorwf	___aomod@divisor+1,w
 12933  0B1A  0422               	iorwf	___aomod@divisor+2,w
 12934  0B1B  0423               	iorwf	___aomod@divisor+3,w
 12935  0B1C  0424               	iorwf	___aomod@divisor+4,w
 12936  0B1D  0425               	iorwf	___aomod@divisor+5,w
 12937  0B1E  0426               	iorwf	___aomod@divisor+6,w
 12938  0B1F  0427               	iorwf	___aomod@divisor+7,w
 12939  0B20  1903               	skipnz
 12940  0B21  2B23               	goto	u2961
 12941  0B22  2B24               	goto	u2960
 12942  0B23                     u2961:
 12943  0B23  2B77               	goto	l4646
 12944  0B24                     u2960:
 12945  0B24                     l4632:
 12946  0B24  01B1               	clrf	___aomod@counter
 12947  0B25  0AB1               	incf	___aomod@counter,f
 12948  0B26  2B33               	goto	l4638
 12949  0B27                     l4634:
 12950  0B27  35A0               	lslf	___aomod@divisor,f
 12951  0B28  0DA1               	rlf	___aomod@divisor+1,f
 12952  0B29  0DA2               	rlf	___aomod@divisor+2,f
 12953  0B2A  0DA3               	rlf	___aomod@divisor+3,f
 12954  0B2B  0DA4               	rlf	___aomod@divisor+4,f
 12955  0B2C  0DA5               	rlf	___aomod@divisor+5,f
 12956  0B2D  0DA6               	rlf	___aomod@divisor+6,f
 12957  0B2E  0DA7               	rlf	___aomod@divisor+7,f
 12958  0B2F                     l4636:
 12959  0B2F  3001               	movlw	1
 12960  0B30  00B0               	movwf	??___aomod
 12961  0B31  0830               	movf	??___aomod,w
 12962  0B32  07B1               	addwf	___aomod@counter,f
 12963  0B33                     l4638:
 12964  0B33  1FA7               	btfss	___aomod@divisor+7,7
 12965  0B34  2B36               	goto	u2971
 12966  0B35  2B37               	goto	u2970
 12967  0B36                     u2971:
 12968  0B36  2B27               	goto	l4634
 12969  0B37                     u2970:
 12970  0B37                     l4640:
 12971  0B37  0827               	movf	___aomod@divisor+7,w
 12972  0B38  022F               	subwf	___aomod@dividend+7,w
 12973  0B39  1D03               	skipz
 12974  0B3A  2B55               	goto	u2985
 12975  0B3B  0826               	movf	___aomod@divisor+6,w
 12976  0B3C  022E               	subwf	___aomod@dividend+6,w
 12977  0B3D  1D03               	skipz
 12978  0B3E  2B55               	goto	u2985
 12979  0B3F  0825               	movf	___aomod@divisor+5,w
 12980  0B40  022D               	subwf	___aomod@dividend+5,w
 12981  0B41  1D03               	skipz
 12982  0B42  2B55               	goto	u2985
 12983  0B43  0824               	movf	___aomod@divisor+4,w
 12984  0B44  022C               	subwf	___aomod@dividend+4,w
 12985  0B45  1D03               	skipz
 12986  0B46  2B55               	goto	u2985
 12987  0B47  0823               	movf	___aomod@divisor+3,w
 12988  0B48  022B               	subwf	___aomod@dividend+3,w
 12989  0B49  1D03               	skipz
 12990  0B4A  2B55               	goto	u2985
 12991  0B4B  0822               	movf	___aomod@divisor+2,w
 12992  0B4C  022A               	subwf	___aomod@dividend+2,w
 12993  0B4D  1D03               	skipz
 12994  0B4E  2B55               	goto	u2985
 12995  0B4F  0821               	movf	___aomod@divisor+1,w
 12996  0B50  0229               	subwf	___aomod@dividend+1,w
 12997  0B51  1D03               	skipz
 12998  0B52  2B55               	goto	u2985
 12999  0B53  0820               	movf	___aomod@divisor,w
 13000  0B54  0228               	subwf	___aomod@dividend,w
 13001  0B55                     u2985:
 13002  0B55  1C03               	skipc
 13003  0B56  2B58               	goto	u2981
 13004  0B57  2B59               	goto	u2980
 13005  0B58                     u2981:
 13006  0B58  2B69               	goto	l4644
 13007  0B59                     u2980:
 13008  0B59                     l4642:
 13009  0B59  0820               	movf	___aomod@divisor,w
 13010  0B5A  02A8               	subwf	___aomod@dividend,f
 13011  0B5B  0821               	movf	___aomod@divisor+1,w
 13012  0B5C  3BA9               	subwfb	___aomod@dividend+1,f
 13013  0B5D  0822               	movf	___aomod@divisor+2,w
 13014  0B5E  3BAA               	subwfb	___aomod@dividend+2,f
 13015  0B5F  0823               	movf	___aomod@divisor+3,w
 13016  0B60  3BAB               	subwfb	___aomod@dividend+3,f
 13017  0B61  0824               	movf	___aomod@divisor+4,w
 13018  0B62  3BAC               	subwfb	___aomod@dividend+4,f
 13019  0B63  0825               	movf	___aomod@divisor+5,w
 13020  0B64  3BAD               	subwfb	___aomod@dividend+5,f
 13021  0B65  0826               	movf	___aomod@divisor+6,w
 13022  0B66  3BAE               	subwfb	___aomod@dividend+6,f
 13023  0B67  0827               	movf	___aomod@divisor+7,w
 13024  0B68  3BAF               	subwfb	___aomod@dividend+7,f
 13025  0B69                     l4644:
 13026  0B69  36A7               	lsrf	___aomod@divisor+7,f
 13027  0B6A  0CA6               	rrf	___aomod@divisor+6,f
 13028  0B6B  0CA5               	rrf	___aomod@divisor+5,f
 13029  0B6C  0CA4               	rrf	___aomod@divisor+4,f
 13030  0B6D  0CA3               	rrf	___aomod@divisor+3,f
 13031  0B6E  0CA2               	rrf	___aomod@divisor+2,f
 13032  0B6F  0CA1               	rrf	___aomod@divisor+1,f
 13033  0B70  0CA0               	rrf	___aomod@divisor,f
 13034  0B71  3001               	movlw	1
 13035  0B72  02B1               	subwf	___aomod@counter,f
 13036  0B73  1D03               	btfss	3,2
 13037  0B74  2B76               	goto	u2991
 13038  0B75  2B77               	goto	u2990
 13039  0B76                     u2991:
 13040  0B76  2B37               	goto	l4640
 13041  0B77                     u2990:
 13042  0B77                     l4646:
 13043  0B77  0832               	movf	___aomod@sign,w
 13044  0B78  1903               	btfsc	3,2
 13045  0B79  2B7B               	goto	u3001
 13046  0B7A  2B7C               	goto	u3000
 13047  0B7B                     u3001:
 13048  0B7B  2B9A               	goto	l1831
 13049  0B7C                     u3000:
 13050  0B7C                     l4648:
 13051  0B7C  09A8               	comf	___aomod@dividend,f
 13052  0B7D  09A9               	comf	___aomod@dividend+1,f
 13053  0B7E  09AA               	comf	___aomod@dividend+2,f
 13054  0B7F  09AB               	comf	___aomod@dividend+3,f
 13055  0B80  09AC               	comf	___aomod@dividend+4,f
 13056  0B81  09AD               	comf	___aomod@dividend+5,f
 13057  0B82  09AE               	comf	___aomod@dividend+6,f
 13058  0B83  09AF               	comf	___aomod@dividend+7,f
 13059  0B84  0AA8               	incf	___aomod@dividend,f
 13060  0B85  1D03               	skipz
 13061  0B86  2B9A               	goto	u301lld
 13062  0B87  0AA9               	incf	___aomod@dividend+1,f
 13063  0B88  1D03               	skipz
 13064  0B89  2B9A               	goto	u301lld
 13065  0B8A  0AAA               	incf	___aomod@dividend+2,f
 13066  0B8B  1D03               	skipz
 13067  0B8C  2B9A               	goto	u301lld
 13068  0B8D  0AAB               	incf	___aomod@dividend+3,f
 13069  0B8E  1D03               	skipz
 13070  0B8F  2B9A               	goto	u301lld
 13071  0B90  0AAC               	incf	___aomod@dividend+4,f
 13072  0B91  1D03               	skipz
 13073  0B92  2B9A               	goto	u301lld
 13074  0B93  0AAD               	incf	___aomod@dividend+5,f
 13075  0B94  1D03               	skipz
 13076  0B95  2B9A               	goto	u301lld
 13077  0B96  0AAE               	incf	___aomod@dividend+6,f
 13078  0B97  1D03               	skipz
 13079  0B98  2B9A               	goto	u301lld
 13080  0B99  0AAF               	incf	___aomod@dividend+7,f
 13081  0B9A                     u301lld:
 13082  0B9A                     l1831:
 13083  0B9A  0020               	movlb	0	; select bank0
 13084  0B9B  0828               	movf	___aomod@dividend,w
 13085  0B9C  00A0               	movwf	?___aomod
 13086  0B9D  0829               	movf	___aomod@dividend+1,w
 13087  0B9E  00A1               	movwf	?___aomod+1
 13088  0B9F  082A               	movf	___aomod@dividend+2,w
 13089  0BA0  00A2               	movwf	?___aomod+2
 13090  0BA1  082B               	movf	___aomod@dividend+3,w
 13091  0BA2  00A3               	movwf	?___aomod+3
 13092  0BA3  082C               	movf	___aomod@dividend+4,w
 13093  0BA4  00A4               	movwf	?___aomod+4
 13094  0BA5  082D               	movf	___aomod@dividend+5,w
 13095  0BA6  00A5               	movwf	?___aomod+5
 13096  0BA7  082E               	movf	___aomod@dividend+6,w
 13097  0BA8  00A6               	movwf	?___aomod+6
 13098  0BA9  082F               	movf	___aomod@dividend+7,w
 13099  0BAA  00A7               	movwf	?___aomod+7
 13100  0BAB                     l1832:
 13101  0BAB  0008               	return
 13102  0BAC                     __end_of___aomod:
 13103                           
 13104                           	psect	text14
 13105  0C9E                     __ptext14:	
 13106 ;; *************** function ___aodiv *****************
 13107 ;; Defined at:
 13108 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
 13109 ;; Parameters:    Size  Location     Type
 13110 ;;  divisor         8    0[BANK0 ] long long 
 13111 ;;  dividend        8    8[BANK0 ] long long 
 13112 ;; Auto vars:     Size  Location     Type
 13113 ;;  quotient        8   19[BANK0 ] long long 
 13114 ;;  sign            1   18[BANK0 ] unsigned char 
 13115 ;;  counter         1   17[BANK0 ] unsigned char 
 13116 ;; Return value:  Size  Location     Type
 13117 ;;                  8    0[BANK0 ] long long 
 13118 ;; Registers used:
 13119 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13120 ;; Tracked objects:
 13121 ;;		On entry : 0/0
 13122 ;;		On exit  : 0/0
 13123 ;;		Unchanged: 0/0
 13124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13125 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13126 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13127 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13128 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13129 ;;Total ram usage:       27 bytes
 13130 ;; Hardware stack levels used: 1
 13131 ;; Hardware stack levels required when called: 7
 13132 ;; This function calls:
 13133 ;;		Nothing
 13134 ;; This function is called by:
 13135 ;;		_dtoa
 13136 ;; This function uses a non-reentrant model
 13137 ;;
 13138                           
 13139                           
 13140                           ;psect for function ___aodiv
 13141  0C9E                     ___aodiv:
 13142  0C9E                     l4582:	
 13143                           ;incstack = 0
 13144                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 13145                           
 13146  0C9E  0020               	movlb	0	; select bank0
 13147  0C9F  01B2               	clrf	___aodiv@sign
 13148  0CA0                     l4584:
 13149  0CA0  3020               	movlw	low ___aodiv@divisor
 13150  0CA1  0086               	movwf	6
 13151  0CA2  3000               	movlw	high ___aodiv@divisor
 13152  0CA3  0087               	movwf	7
 13153  0CA4  3F47               	moviw [7]fsr1
 13154  0CA5  00B0               	movwf	??___aodiv
 13155  0CA6  1FB0               	btfss	??___aodiv,7
 13156  0CA7  2CA9               	goto	u2811
 13157  0CA8  2CAA               	goto	u2810
 13158  0CA9                     u2811:
 13159  0CA9  2CCC               	goto	l4588
 13160  0CAA                     u2810:
 13161  0CAA                     l4586:
 13162  0CAA  0020               	movlb	0	; select bank0
 13163  0CAB  09A0               	comf	___aodiv@divisor,f
 13164  0CAC  09A1               	comf	___aodiv@divisor+1,f
 13165  0CAD  09A2               	comf	___aodiv@divisor+2,f
 13166  0CAE  09A3               	comf	___aodiv@divisor+3,f
 13167  0CAF  09A4               	comf	___aodiv@divisor+4,f
 13168  0CB0  09A5               	comf	___aodiv@divisor+5,f
 13169  0CB1  09A6               	comf	___aodiv@divisor+6,f
 13170  0CB2  09A7               	comf	___aodiv@divisor+7,f
 13171  0CB3  0AA0               	incf	___aodiv@divisor,f
 13172  0CB4  1D03               	skipz
 13173  0CB5  2CC9               	goto	u282lld
 13174  0CB6  0AA1               	incf	___aodiv@divisor+1,f
 13175  0CB7  1D03               	skipz
 13176  0CB8  2CC9               	goto	u282lld
 13177  0CB9  0AA2               	incf	___aodiv@divisor+2,f
 13178  0CBA  1D03               	skipz
 13179  0CBB  2CC9               	goto	u282lld
 13180  0CBC  0AA3               	incf	___aodiv@divisor+3,f
 13181  0CBD  1D03               	skipz
 13182  0CBE  2CC9               	goto	u282lld
 13183  0CBF  0AA4               	incf	___aodiv@divisor+4,f
 13184  0CC0  1D03               	skipz
 13185  0CC1  2CC9               	goto	u282lld
 13186  0CC2  0AA5               	incf	___aodiv@divisor+5,f
 13187  0CC3  1D03               	skipz
 13188  0CC4  2CC9               	goto	u282lld
 13189  0CC5  0AA6               	incf	___aodiv@divisor+6,f
 13190  0CC6  1D03               	skipz
 13191  0CC7  2CC9               	goto	u282lld
 13192  0CC8  0AA7               	incf	___aodiv@divisor+7,f
 13193  0CC9                     u282lld:
 13194  0CC9  0020               	movlb	0	; select bank0
 13195  0CCA  01B2               	clrf	___aodiv@sign
 13196  0CCB  0AB2               	incf	___aodiv@sign,f
 13197  0CCC                     l4588:
 13198  0CCC  3028               	movlw	low ___aodiv@dividend
 13199  0CCD  0086               	movwf	6
 13200  0CCE  3000               	movlw	high ___aodiv@dividend
 13201  0CCF  0087               	movwf	7
 13202  0CD0  3F47               	moviw [7]fsr1
 13203  0CD1  0020               	movlb	0	; select bank0
 13204  0CD2  00B0               	movwf	??___aodiv
 13205  0CD3  1FB0               	btfss	??___aodiv,7
 13206  0CD4  2CD6               	goto	u2831
 13207  0CD5  2CD7               	goto	u2830
 13208  0CD6                     u2831:
 13209  0CD6  2CFB               	goto	l4594
 13210  0CD7                     u2830:
 13211  0CD7                     l4590:
 13212  0CD7  0020               	movlb	0	; select bank0
 13213  0CD8  09A8               	comf	___aodiv@dividend,f
 13214  0CD9  09A9               	comf	___aodiv@dividend+1,f
 13215  0CDA  09AA               	comf	___aodiv@dividend+2,f
 13216  0CDB  09AB               	comf	___aodiv@dividend+3,f
 13217  0CDC  09AC               	comf	___aodiv@dividend+4,f
 13218  0CDD  09AD               	comf	___aodiv@dividend+5,f
 13219  0CDE  09AE               	comf	___aodiv@dividend+6,f
 13220  0CDF  09AF               	comf	___aodiv@dividend+7,f
 13221  0CE0  0AA8               	incf	___aodiv@dividend,f
 13222  0CE1  1D03               	skipz
 13223  0CE2  2CF6               	goto	u284lld
 13224  0CE3  0AA9               	incf	___aodiv@dividend+1,f
 13225  0CE4  1D03               	skipz
 13226  0CE5  2CF6               	goto	u284lld
 13227  0CE6  0AAA               	incf	___aodiv@dividend+2,f
 13228  0CE7  1D03               	skipz
 13229  0CE8  2CF6               	goto	u284lld
 13230  0CE9  0AAB               	incf	___aodiv@dividend+3,f
 13231  0CEA  1D03               	skipz
 13232  0CEB  2CF6               	goto	u284lld
 13233  0CEC  0AAC               	incf	___aodiv@dividend+4,f
 13234  0CED  1D03               	skipz
 13235  0CEE  2CF6               	goto	u284lld
 13236  0CEF  0AAD               	incf	___aodiv@dividend+5,f
 13237  0CF0  1D03               	skipz
 13238  0CF1  2CF6               	goto	u284lld
 13239  0CF2  0AAE               	incf	___aodiv@dividend+6,f
 13240  0CF3  1D03               	skipz
 13241  0CF4  2CF6               	goto	u284lld
 13242  0CF5  0AAF               	incf	___aodiv@dividend+7,f
 13243  0CF6                     u284lld:
 13244  0CF6                     l4592:
 13245  0CF6  3001               	movlw	1
 13246  0CF7  0020               	movlb	0	; select bank0
 13247  0CF8  00B0               	movwf	??___aodiv
 13248  0CF9  0830               	movf	??___aodiv,w
 13249  0CFA  06B2               	xorwf	___aodiv@sign,f
 13250  0CFB                     l4594:
 13251  0CFB  3033               	movlw	low ___aodiv@quotient
 13252  0CFC  0086               	movwf	6
 13253  0CFD  3000               	movlw	high ___aodiv@quotient
 13254  0CFE  0087               	movwf	7
 13255  0CFF  3008               	movlw	8
 13256  0D00  0020               	movlb	0	; select bank0
 13257  0D01  00B0               	movwf	??___aodiv
 13258  0D02  3000               	movlw	0
 13259  0D03                     u2850:
 13260  0D03  001E               	movwi fsr1++
 13261  0D04  0BB0               	decfsz	??___aodiv,f
 13262  0D05  2D03               	goto	u2850
 13263  0D06                     l4596:
 13264  0D06  0820               	movf	___aodiv@divisor,w
 13265  0D07  0421               	iorwf	___aodiv@divisor+1,w
 13266  0D08  0422               	iorwf	___aodiv@divisor+2,w
 13267  0D09  0423               	iorwf	___aodiv@divisor+3,w
 13268  0D0A  0424               	iorwf	___aodiv@divisor+4,w
 13269  0D0B  0425               	iorwf	___aodiv@divisor+5,w
 13270  0D0C  0426               	iorwf	___aodiv@divisor+6,w
 13271  0D0D  0427               	iorwf	___aodiv@divisor+7,w
 13272  0D0E  1903               	skipnz
 13273  0D0F  2D11               	goto	u2861
 13274  0D10  2D12               	goto	u2860
 13275  0D11                     u2861:
 13276  0D11  2D6E               	goto	l4616
 13277  0D12                     u2860:
 13278  0D12                     l4598:
 13279  0D12  01B1               	clrf	___aodiv@counter
 13280  0D13  0AB1               	incf	___aodiv@counter,f
 13281  0D14  2D21               	goto	l4604
 13282  0D15                     l4600:
 13283  0D15  35A0               	lslf	___aodiv@divisor,f
 13284  0D16  0DA1               	rlf	___aodiv@divisor+1,f
 13285  0D17  0DA2               	rlf	___aodiv@divisor+2,f
 13286  0D18  0DA3               	rlf	___aodiv@divisor+3,f
 13287  0D19  0DA4               	rlf	___aodiv@divisor+4,f
 13288  0D1A  0DA5               	rlf	___aodiv@divisor+5,f
 13289  0D1B  0DA6               	rlf	___aodiv@divisor+6,f
 13290  0D1C  0DA7               	rlf	___aodiv@divisor+7,f
 13291  0D1D                     l4602:
 13292  0D1D  3001               	movlw	1
 13293  0D1E  00B0               	movwf	??___aodiv
 13294  0D1F  0830               	movf	??___aodiv,w
 13295  0D20  07B1               	addwf	___aodiv@counter,f
 13296  0D21                     l4604:
 13297  0D21  1FA7               	btfss	___aodiv@divisor+7,7
 13298  0D22  2D24               	goto	u2871
 13299  0D23  2D25               	goto	u2870
 13300  0D24                     u2871:
 13301  0D24  2D15               	goto	l4600
 13302  0D25                     u2870:
 13303  0D25                     l4606:
 13304  0D25  35B3               	lslf	___aodiv@quotient,f
 13305  0D26  0DB4               	rlf	___aodiv@quotient+1,f
 13306  0D27  0DB5               	rlf	___aodiv@quotient+2,f
 13307  0D28  0DB6               	rlf	___aodiv@quotient+3,f
 13308  0D29  0DB7               	rlf	___aodiv@quotient+4,f
 13309  0D2A  0DB8               	rlf	___aodiv@quotient+5,f
 13310  0D2B  0DB9               	rlf	___aodiv@quotient+6,f
 13311  0D2C  0DBA               	rlf	___aodiv@quotient+7,f
 13312  0D2D                     l4608:
 13313  0D2D  0827               	movf	___aodiv@divisor+7,w
 13314  0D2E  022F               	subwf	___aodiv@dividend+7,w
 13315  0D2F  1D03               	skipz
 13316  0D30  2D4B               	goto	u2885
 13317  0D31  0826               	movf	___aodiv@divisor+6,w
 13318  0D32  022E               	subwf	___aodiv@dividend+6,w
 13319  0D33  1D03               	skipz
 13320  0D34  2D4B               	goto	u2885
 13321  0D35  0825               	movf	___aodiv@divisor+5,w
 13322  0D36  022D               	subwf	___aodiv@dividend+5,w
 13323  0D37  1D03               	skipz
 13324  0D38  2D4B               	goto	u2885
 13325  0D39  0824               	movf	___aodiv@divisor+4,w
 13326  0D3A  022C               	subwf	___aodiv@dividend+4,w
 13327  0D3B  1D03               	skipz
 13328  0D3C  2D4B               	goto	u2885
 13329  0D3D  0823               	movf	___aodiv@divisor+3,w
 13330  0D3E  022B               	subwf	___aodiv@dividend+3,w
 13331  0D3F  1D03               	skipz
 13332  0D40  2D4B               	goto	u2885
 13333  0D41  0822               	movf	___aodiv@divisor+2,w
 13334  0D42  022A               	subwf	___aodiv@dividend+2,w
 13335  0D43  1D03               	skipz
 13336  0D44  2D4B               	goto	u2885
 13337  0D45  0821               	movf	___aodiv@divisor+1,w
 13338  0D46  0229               	subwf	___aodiv@dividend+1,w
 13339  0D47  1D03               	skipz
 13340  0D48  2D4B               	goto	u2885
 13341  0D49  0820               	movf	___aodiv@divisor,w
 13342  0D4A  0228               	subwf	___aodiv@dividend,w
 13343  0D4B                     u2885:
 13344  0D4B  1C03               	skipc
 13345  0D4C  2D4E               	goto	u2881
 13346  0D4D  2D4F               	goto	u2880
 13347  0D4E                     u2881:
 13348  0D4E  2D60               	goto	l4614
 13349  0D4F                     u2880:
 13350  0D4F                     l4610:
 13351  0D4F  0820               	movf	___aodiv@divisor,w
 13352  0D50  02A8               	subwf	___aodiv@dividend,f
 13353  0D51  0821               	movf	___aodiv@divisor+1,w
 13354  0D52  3BA9               	subwfb	___aodiv@dividend+1,f
 13355  0D53  0822               	movf	___aodiv@divisor+2,w
 13356  0D54  3BAA               	subwfb	___aodiv@dividend+2,f
 13357  0D55  0823               	movf	___aodiv@divisor+3,w
 13358  0D56  3BAB               	subwfb	___aodiv@dividend+3,f
 13359  0D57  0824               	movf	___aodiv@divisor+4,w
 13360  0D58  3BAC               	subwfb	___aodiv@dividend+4,f
 13361  0D59  0825               	movf	___aodiv@divisor+5,w
 13362  0D5A  3BAD               	subwfb	___aodiv@dividend+5,f
 13363  0D5B  0826               	movf	___aodiv@divisor+6,w
 13364  0D5C  3BAE               	subwfb	___aodiv@dividend+6,f
 13365  0D5D  0827               	movf	___aodiv@divisor+7,w
 13366  0D5E  3BAF               	subwfb	___aodiv@dividend+7,f
 13367  0D5F                     l4612:
 13368  0D5F  1433               	bsf	___aodiv@quotient,0
 13369  0D60                     l4614:
 13370  0D60  36A7               	lsrf	___aodiv@divisor+7,f
 13371  0D61  0CA6               	rrf	___aodiv@divisor+6,f
 13372  0D62  0CA5               	rrf	___aodiv@divisor+5,f
 13373  0D63  0CA4               	rrf	___aodiv@divisor+4,f
 13374  0D64  0CA3               	rrf	___aodiv@divisor+3,f
 13375  0D65  0CA2               	rrf	___aodiv@divisor+2,f
 13376  0D66  0CA1               	rrf	___aodiv@divisor+1,f
 13377  0D67  0CA0               	rrf	___aodiv@divisor,f
 13378  0D68  3001               	movlw	1
 13379  0D69  02B1               	subwf	___aodiv@counter,f
 13380  0D6A  1D03               	btfss	3,2
 13381  0D6B  2D6D               	goto	u2891
 13382  0D6C  2D6E               	goto	u2890
 13383  0D6D                     u2891:
 13384  0D6D  2D25               	goto	l4606
 13385  0D6E                     u2890:
 13386  0D6E                     l4616:
 13387  0D6E  0832               	movf	___aodiv@sign,w
 13388  0D6F  1903               	btfsc	3,2
 13389  0D70  2D72               	goto	u2901
 13390  0D71  2D73               	goto	u2900
 13391  0D72                     u2901:
 13392  0D72  2D91               	goto	l1818
 13393  0D73                     u2900:
 13394  0D73                     l4618:
 13395  0D73  09B3               	comf	___aodiv@quotient,f
 13396  0D74  09B4               	comf	___aodiv@quotient+1,f
 13397  0D75  09B5               	comf	___aodiv@quotient+2,f
 13398  0D76  09B6               	comf	___aodiv@quotient+3,f
 13399  0D77  09B7               	comf	___aodiv@quotient+4,f
 13400  0D78  09B8               	comf	___aodiv@quotient+5,f
 13401  0D79  09B9               	comf	___aodiv@quotient+6,f
 13402  0D7A  09BA               	comf	___aodiv@quotient+7,f
 13403  0D7B  0AB3               	incf	___aodiv@quotient,f
 13404  0D7C  1D03               	skipz
 13405  0D7D  2D91               	goto	u291lld
 13406  0D7E  0AB4               	incf	___aodiv@quotient+1,f
 13407  0D7F  1D03               	skipz
 13408  0D80  2D91               	goto	u291lld
 13409  0D81  0AB5               	incf	___aodiv@quotient+2,f
 13410  0D82  1D03               	skipz
 13411  0D83  2D91               	goto	u291lld
 13412  0D84  0AB6               	incf	___aodiv@quotient+3,f
 13413  0D85  1D03               	skipz
 13414  0D86  2D91               	goto	u291lld
 13415  0D87  0AB7               	incf	___aodiv@quotient+4,f
 13416  0D88  1D03               	skipz
 13417  0D89  2D91               	goto	u291lld
 13418  0D8A  0AB8               	incf	___aodiv@quotient+5,f
 13419  0D8B  1D03               	skipz
 13420  0D8C  2D91               	goto	u291lld
 13421  0D8D  0AB9               	incf	___aodiv@quotient+6,f
 13422  0D8E  1D03               	skipz
 13423  0D8F  2D91               	goto	u291lld
 13424  0D90  0ABA               	incf	___aodiv@quotient+7,f
 13425  0D91                     u291lld:
 13426  0D91                     l1818:
 13427  0D91  0020               	movlb	0	; select bank0
 13428  0D92  0833               	movf	___aodiv@quotient,w
 13429  0D93  00A0               	movwf	?___aodiv
 13430  0D94  0834               	movf	___aodiv@quotient+1,w
 13431  0D95  00A1               	movwf	?___aodiv+1
 13432  0D96  0835               	movf	___aodiv@quotient+2,w
 13433  0D97  00A2               	movwf	?___aodiv+2
 13434  0D98  0836               	movf	___aodiv@quotient+3,w
 13435  0D99  00A3               	movwf	?___aodiv+3
 13436  0D9A  0837               	movf	___aodiv@quotient+4,w
 13437  0D9B  00A4               	movwf	?___aodiv+4
 13438  0D9C  0838               	movf	___aodiv@quotient+5,w
 13439  0D9D  00A5               	movwf	?___aodiv+5
 13440  0D9E  0839               	movf	___aodiv@quotient+6,w
 13441  0D9F  00A6               	movwf	?___aodiv+6
 13442  0DA0  083A               	movf	___aodiv@quotient+7,w
 13443  0DA1  00A7               	movwf	?___aodiv+7
 13444  0DA2                     l1819:
 13445  0DA2  0008               	return
 13446  0DA3                     __end_of___aodiv:
 13447                           
 13448                           	psect	text15
 13449  0939                     __ptext15:	
 13450 ;; *************** function _atoi *****************
 13451 ;; Defined at:
 13452 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
 13453 ;; Parameters:    Size  Location     Type
 13454 ;;  s               2    6[BANK0 ] PTR const unsigned char 
 13455 ;;		 -> STR_9(7), STR_7(15), STR_6(21), STR_4(21), 
 13456 ;;		 -> STR_2(20), 
 13457 ;; Auto vars:     Size  Location     Type
 13458 ;;  n               2   19[BANK0 ] int 
 13459 ;;  neg             2   12[BANK0 ] int 
 13460 ;; Return value:  Size  Location     Type
 13461 ;;                  2    6[BANK0 ] int 
 13462 ;; Registers used:
 13463 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13464 ;; Tracked objects:
 13465 ;;		On entry : 0/0
 13466 ;;		On exit  : 0/0
 13467 ;;		Unchanged: 0/0
 13468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13469 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13470 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13471 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13472 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13473 ;;Total ram usage:       15 bytes
 13474 ;; Hardware stack levels used: 1
 13475 ;; Hardware stack levels required when called: 8
 13476 ;; This function calls:
 13477 ;;		___wmul
 13478 ;;		_isdigit
 13479 ;;		_isspace
 13480 ;; This function is called by:
 13481 ;;		_vfpfcnvrt
 13482 ;; This function uses a non-reentrant model
 13483 ;;
 13484                           
 13485                           
 13486                           ;psect for function _atoi
 13487  0939                     _atoi:
 13488  0939                     l4876:	
 13489                           ;incstack = 0
 13490                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13491                           
 13492  0939  0020               	movlb	0	; select bank0
 13493  093A  01B3               	clrf	atoi@n
 13494  093B  01B4               	clrf	atoi@n+1
 13495  093C  01AC               	clrf	atoi@neg
 13496  093D  01AD               	clrf	atoi@neg+1
 13497  093E  2943               	goto	l4880
 13498  093F                     l4878:
 13499  093F  3001               	movlw	1
 13500  0940  07A6               	addwf	atoi@s,f
 13501  0941  3000               	movlw	0
 13502  0942  3DA7               	addwfc	atoi@s+1,f
 13503  0943                     l4880:
 13504  0943  01B2               	clrf	_atoi$3338
 13505  0944  0AB2               	incf	_atoi$3338,f
 13506  0945                     l4882:
 13507  0945  0826               	movf	atoi@s,w
 13508  0946  0084               	movwf	4
 13509  0947  0827               	movf	atoi@s+1,w
 13510  0948  0085               	movwf	5
 13511  0949  0012               	moviw fsr0++
 13512  094A  3A20               	xorlw	32
 13513  094B  1903               	btfsc	3,2
 13514  094C  294E               	goto	u3521
 13515  094D  294F               	goto	u3520
 13516  094E                     u3521:
 13517  094E  2964               	goto	l4888
 13518  094F                     u3520:
 13519  094F                     l4884:
 13520  094F  0826               	movf	atoi@s,w
 13521  0950  0084               	movwf	4
 13522  0951  0827               	movf	atoi@s+1,w
 13523  0952  0085               	movwf	5
 13524  0953  0800               	movf	0,w	;code access
 13525  0954  3EF7               	addlw	247
 13526  0955  00A8               	movwf	??_atoi
 13527  0956  30FF               	movlw	255
 13528  0957  1803               	skipnc
 13529  0958  3000               	movlw	0
 13530  0959  00A9               	movwf	??_atoi+1
 13531  095A  3000               	movlw	0
 13532  095B  0229               	subwf	??_atoi+1,w
 13533  095C  3005               	movlw	5
 13534  095D  1903               	skipnz
 13535  095E  0228               	subwf	??_atoi,w
 13536  095F  1C03               	skipc
 13537  0960  2962               	goto	u3531
 13538  0961  2963               	goto	u3530
 13539  0962                     u3531:
 13540  0962  2964               	goto	l4888
 13541  0963                     u3530:
 13542  0963                     l4886:
 13543  0963  01B2               	clrf	_atoi$3338
 13544  0964                     l4888:
 13545  0964  0832               	movf	_atoi$3338,w
 13546  0965  00A8               	movwf	??_atoi
 13547  0966  01A9               	clrf	??_atoi+1
 13548  0967  0828               	movf	??_atoi,w
 13549  0968  00AE               	movwf	_atoi$3337
 13550  0969  0829               	movf	??_atoi+1,w
 13551  096A  00AF               	movwf	_atoi$3337+1
 13552  096B                     l4892:
 13553  096B  082E               	movf	_atoi$3337,w
 13554  096C  042F               	iorwf	_atoi$3337+1,w
 13555  096D  1D03               	btfss	3,2
 13556  096E  2970               	goto	u3541
 13557  096F  2971               	goto	u3540
 13558  0970                     u3541:
 13559  0970  293F               	goto	l4878
 13560  0971                     u3540:
 13561  0971  297B               	goto	l4896
 13562  0972                     l4894:
 13563  0972  3001               	movlw	1
 13564  0973  00AC               	movwf	atoi@neg
 13565  0974  3000               	movlw	0
 13566  0975  00AD               	movwf	atoi@neg+1
 13567  0976                     l2304:
 13568  0976  3001               	movlw	1
 13569  0977  07A6               	addwf	atoi@s,f
 13570  0978  3000               	movlw	0
 13571  0979  3DA7               	addwfc	atoi@s+1,f
 13572  097A  29AF               	goto	l4902
 13573  097B                     l4896:
 13574  097B  0826               	movf	atoi@s,w
 13575  097C  0084               	movwf	4
 13576  097D  0827               	movf	atoi@s+1,w
 13577  097E  0085               	movwf	5
 13578  097F  0800               	movf	0,w	;code access
 13579  0980  00A8               	movwf	??_atoi
 13580  0981  01A9               	clrf	??_atoi+1
 13581                           
 13582                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13583                           ; Switch size 1, requested type "simple"
 13584                           ; Number of cases is 1, Range of values is 0 to 0
 13585                           ; switch strategies available:
 13586                           ; Name         Instructions Cycles
 13587                           ; simple_byte            4     3 (average)
 13588                           ; direct_byte            8     6 (fixed)
 13589                           ; jumptable            260     6 (fixed)
 13590                           ;	Chosen strategy is simple_byte
 13591  0982  0829               	movf	??_atoi+1,w
 13592  0983  3A00               	xorlw	0	; case 0
 13593  0984  1903               	skipnz
 13594  0985  2987               	goto	l6424
 13595  0986  29AF               	goto	l4902
 13596  0987                     l6424:
 13597                           
 13598                           ; Switch size 1, requested type "simple"
 13599                           ; Number of cases is 2, Range of values is 43 to 45
 13600                           ; switch strategies available:
 13601                           ; Name         Instructions Cycles
 13602                           ; simple_byte            7     4 (average)
 13603                           ; direct_byte           15     9 (fixed)
 13604                           ; jumptable            263     9 (fixed)
 13605                           ;	Chosen strategy is simple_byte
 13606  0987  0828               	movf	??_atoi,w
 13607  0988  3A2B               	xorlw	43	; case 43
 13608  0989  1903               	skipnz
 13609  098A  2976               	goto	l2304
 13610  098B  3A06               	xorlw	6	; case 45
 13611  098C  1903               	skipnz
 13612  098D  2972               	goto	l4894
 13613  098E  29AF               	goto	l4902
 13614  098F                     l4898:
 13615  098F  0826               	movf	atoi@s,w
 13616  0990  0084               	movwf	4
 13617  0991  0827               	movf	atoi@s+1,w
 13618  0992  0085               	movwf	5
 13619  0993  0800               	movf	0,w	;code access
 13620  0994  00A8               	movwf	??_atoi
 13621  0995  0834               	movf	atoi@n+1,w
 13622  0996  00A1               	movwf	___wmul@multiplier+1
 13623  0997  0833               	movf	atoi@n,w
 13624  0998  00A0               	movwf	___wmul@multiplier
 13625  0999  300A               	movlw	10
 13626  099A  00A2               	movwf	___wmul@multiplicand
 13627  099B  3000               	movlw	0
 13628  099C  00A3               	movwf	___wmul@multiplicand+1
 13629  099D  3194  2421  3189   	fcall	___wmul
 13630  09A0  0020               	movlb	0	; select bank0
 13631  09A1  0821               	movf	?___wmul+1,w
 13632  09A2  00AA               	movwf	??_atoi+2
 13633  09A3  0828               	movf	??_atoi,w
 13634  09A4  0220               	subwf	?___wmul,w
 13635  09A5  00A9               	movwf	??_atoi+1
 13636  09A6  1C03               	skipc
 13637  09A7  03AA               	decf	??_atoi+2,f
 13638  09A8  0829               	movf	??_atoi+1,w
 13639  09A9  3E30               	addlw	48
 13640  09AA  00B3               	movwf	atoi@n
 13641  09AB  3000               	movlw	0
 13642  09AC  3D2A               	addwfc	??_atoi+2,w
 13643  09AD  00B4               	movwf	atoi@n+1
 13644  09AE  2976               	goto	l2304
 13645  09AF                     l4902:
 13646  09AF  0826               	movf	atoi@s,w
 13647  09B0  0084               	movwf	4
 13648  09B1  0827               	movf	atoi@s+1,w
 13649  09B2  0085               	movwf	5
 13650  09B3  0800               	movf	0,w	;code access
 13651  09B4  3ED0               	addlw	208
 13652  09B5  00A8               	movwf	??_atoi
 13653  09B6  30FF               	movlw	255
 13654  09B7  1803               	skipnc
 13655  09B8  3000               	movlw	0
 13656  09B9  00A9               	movwf	??_atoi+1
 13657  09BA  3000               	movlw	0
 13658  09BB  0229               	subwf	??_atoi+1,w
 13659  09BC  300A               	movlw	10
 13660  09BD  1903               	skipnz
 13661  09BE  0228               	subwf	??_atoi,w
 13662  09BF  1C03               	skipc
 13663  09C0  29C2               	goto	u3551
 13664  09C1  29C4               	goto	u3550
 13665  09C2                     u3551:
 13666  09C2  3001               	movlw	1
 13667  09C3  29C5               	goto	u3560
 13668  09C4                     u3550:
 13669  09C4  3000               	movlw	0
 13670  09C5                     u3560:
 13671  09C5  00AA               	movwf	??_atoi+2
 13672  09C6  01AB               	clrf	??_atoi+3
 13673  09C7  082A               	movf	??_atoi+2,w
 13674  09C8  00B0               	movwf	_atoi$3339
 13675  09C9  082B               	movf	??_atoi+3,w
 13676  09CA  00B1               	movwf	_atoi$3339+1
 13677  09CB                     l4906:
 13678  09CB  0830               	movf	_atoi$3339,w
 13679  09CC  0431               	iorwf	_atoi$3339+1,w
 13680  09CD  1D03               	btfss	3,2
 13681  09CE  29D0               	goto	u3571
 13682  09CF  29D1               	goto	u3570
 13683  09D0                     u3571:
 13684  09D0  298F               	goto	l4898
 13685  09D1                     u3570:
 13686  09D1                     l4908:
 13687  09D1  082C               	movf	atoi@neg,w
 13688  09D2  042D               	iorwf	atoi@neg+1,w
 13689  09D3  1D03               	btfss	3,2
 13690  09D4  29D6               	goto	u3581
 13691  09D5  29D7               	goto	u3580
 13692  09D6                     u3581:
 13693  09D6  29E3               	goto	l4912
 13694  09D7                     u3580:
 13695  09D7                     l4910:
 13696  09D7  0933               	comf	atoi@n,w
 13697  09D8  00A8               	movwf	??_atoi
 13698  09D9  0934               	comf	atoi@n+1,w
 13699  09DA  00A9               	movwf	??_atoi+1
 13700  09DB  0AA8               	incf	??_atoi,f
 13701  09DC  1903               	skipnz
 13702  09DD  0AA9               	incf	??_atoi+1,f
 13703  09DE  0828               	movf	??_atoi,w
 13704  09DF  00A6               	movwf	?_atoi
 13705  09E0  0829               	movf	??_atoi+1,w
 13706  09E1  00A7               	movwf	?_atoi+1
 13707  09E2  29E7               	goto	l2317
 13708  09E3                     l4912:
 13709  09E3  0834               	movf	atoi@n+1,w
 13710  09E4  00A7               	movwf	?_atoi+1
 13711  09E5  0833               	movf	atoi@n,w
 13712  09E6  00A6               	movwf	?_atoi
 13713  09E7                     l2317:
 13714  09E7  0008               	return
 13715  09E8                     __end_of_atoi:
 13716                           
 13717                           	psect	text16
 13718  1462                     __ptext16:	
 13719 ;; *************** function _isspace *****************
 13720 ;; Defined at:
 13721 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
 13722 ;; Parameters:    Size  Location     Type
 13723 ;;  c               2    0[BANK0 ] int 
 13724 ;; Auto vars:     Size  Location     Type
 13725 ;;		None
 13726 ;; Return value:  Size  Location     Type
 13727 ;;                  2    0[BANK0 ] int 
 13728 ;; Registers used:
 13729 ;;		wreg, status,2, status,0
 13730 ;; Tracked objects:
 13731 ;;		On entry : 0/0
 13732 ;;		On exit  : 0/0
 13733 ;;		Unchanged: 0/0
 13734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13735 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13736 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13737 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13738 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13739 ;;Total ram usage:        5 bytes
 13740 ;; Hardware stack levels used: 1
 13741 ;; Hardware stack levels required when called: 7
 13742 ;; This function calls:
 13743 ;;		Nothing
 13744 ;; This function is called by:
 13745 ;;		_atoi
 13746 ;; This function uses a non-reentrant model
 13747 ;;
 13748                           
 13749                           
 13750                           ;psect for function _isspace
 13751  1462                     _isspace:
 13752  1462                     l4680:	
 13753                           ;incstack = 0
 13754                           ; Regs used in _isspace: [wreg+status,2+status,0]
 13755                           
 13756  1462  0020               	movlb	0	; select bank0
 13757  1463  01A4               	clrf	_isspace$3355
 13758  1464  0AA4               	incf	_isspace$3355,f
 13759  1465                     l4682:
 13760  1465  3020               	movlw	32
 13761  1466  0620               	xorwf	isspace@c,w
 13762  1467  0421               	iorwf	isspace@c+1,w
 13763  1468  1903               	btfsc	3,2
 13764  1469  2C6B               	goto	u3091
 13765  146A  2C6C               	goto	u3090
 13766  146B                     u3091:
 13767  146B  2C7C               	goto	l4688
 13768  146C                     u3090:
 13769  146C                     l4684:
 13770  146C  0820               	movf	isspace@c,w
 13771  146D  3EF7               	addlw	247
 13772  146E  00A2               	movwf	??_isspace
 13773  146F  30FF               	movlw	255
 13774  1470  3D21               	addwfc	isspace@c+1,w
 13775  1471  00A3               	movwf	??_isspace+1
 13776  1472  3000               	movlw	0
 13777  1473  0223               	subwf	??_isspace+1,w
 13778  1474  3005               	movlw	5
 13779  1475  1903               	skipnz
 13780  1476  0222               	subwf	??_isspace,w
 13781  1477  1C03               	skipc
 13782  1478  2C7A               	goto	u3101
 13783  1479  2C7B               	goto	u3100
 13784  147A                     u3101:
 13785  147A  2C7C               	goto	l4688
 13786  147B                     u3100:
 13787  147B                     l4686:
 13788  147B  01A4               	clrf	_isspace$3355
 13789  147C                     l4688:
 13790  147C  0824               	movf	_isspace$3355,w
 13791  147D  00A2               	movwf	??_isspace
 13792  147E  01A3               	clrf	??_isspace+1
 13793  147F  0822               	movf	??_isspace,w
 13794  1480  00A0               	movwf	?_isspace
 13795  1481  0823               	movf	??_isspace+1,w
 13796  1482  00A1               	movwf	?_isspace+1
 13797  1483                     l2328:
 13798  1483  0008               	return
 13799  1484                     __end_of_isspace:
 13800                           
 13801                           	psect	text17
 13802  1329                     __ptext17:	
 13803 ;; *************** function _isdigit *****************
 13804 ;; Defined at:
 13805 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
 13806 ;; Parameters:    Size  Location     Type
 13807 ;;  c               2    0[BANK0 ] int 
 13808 ;; Auto vars:     Size  Location     Type
 13809 ;;		None
 13810 ;; Return value:  Size  Location     Type
 13811 ;;                  2    0[BANK0 ] int 
 13812 ;; Registers used:
 13813 ;;		wreg, status,2, status,0
 13814 ;; Tracked objects:
 13815 ;;		On entry : 0/0
 13816 ;;		On exit  : 0/0
 13817 ;;		Unchanged: 0/0
 13818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13819 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13821 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13822 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13823 ;;Total ram usage:        6 bytes
 13824 ;; Hardware stack levels used: 1
 13825 ;; Hardware stack levels required when called: 7
 13826 ;; This function calls:
 13827 ;;		Nothing
 13828 ;; This function is called by:
 13829 ;;		_vfpfcnvrt
 13830 ;;		_atoi
 13831 ;; This function uses a non-reentrant model
 13832 ;;
 13833                           
 13834                           
 13835                           ;psect for function _isdigit
 13836  1329                     _isdigit:
 13837  1329                     l4676:	
 13838                           ;incstack = 0
 13839                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 13840                           
 13841  1329  0020               	movlb	0	; select bank0
 13842  132A  0820               	movf	isdigit@c,w
 13843  132B  3ED0               	addlw	208
 13844  132C  00A2               	movwf	??_isdigit
 13845  132D  30FF               	movlw	255
 13846  132E  3D21               	addwfc	isdigit@c+1,w
 13847  132F  00A3               	movwf	??_isdigit+1
 13848  1330  3000               	movlw	0
 13849  1331  0223               	subwf	??_isdigit+1,w
 13850  1332  300A               	movlw	10
 13851  1333  1903               	skipnz
 13852  1334  0222               	subwf	??_isdigit,w
 13853  1335  1C03               	skipc
 13854  1336  2B38               	goto	u3071
 13855  1337  2B3A               	goto	u3070
 13856  1338                     u3071:
 13857  1338  3001               	movlw	1
 13858  1339  2B3B               	goto	u3080
 13859  133A                     u3070:
 13860  133A  3000               	movlw	0
 13861  133B                     u3080:
 13862  133B  00A4               	movwf	??_isdigit+2
 13863  133C  01A5               	clrf	??_isdigit+3
 13864  133D  0824               	movf	??_isdigit+2,w
 13865  133E  00A0               	movwf	?_isdigit
 13866  133F  0825               	movf	??_isdigit+3,w
 13867  1340  00A1               	movwf	?_isdigit+1
 13868  1341                     l2320:
 13869  1341  0008               	return
 13870  1342                     __end_of_isdigit:
 13871                           
 13872                           	psect	text18
 13873  1421                     __ptext18:	
 13874 ;; *************** function ___wmul *****************
 13875 ;; Defined at:
 13876 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 13877 ;; Parameters:    Size  Location     Type
 13878 ;;  multiplier      2    0[BANK0 ] unsigned int 
 13879 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 13880 ;; Auto vars:     Size  Location     Type
 13881 ;;  product         2    4[BANK0 ] unsigned int 
 13882 ;; Return value:  Size  Location     Type
 13883 ;;                  2    0[BANK0 ] unsigned int 
 13884 ;; Registers used:
 13885 ;;		wreg, status,2, status,0
 13886 ;; Tracked objects:
 13887 ;;		On entry : 0/0
 13888 ;;		On exit  : 0/0
 13889 ;;		Unchanged: 0/0
 13890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13891 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13892 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13894 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13895 ;;Total ram usage:        6 bytes
 13896 ;; Hardware stack levels used: 1
 13897 ;; Hardware stack levels required when called: 7
 13898 ;; This function calls:
 13899 ;;		Nothing
 13900 ;; This function is called by:
 13901 ;;		_atoi
 13902 ;; This function uses a non-reentrant model
 13903 ;;
 13904                           
 13905                           
 13906                           ;psect for function ___wmul
 13907  1421                     ___wmul:
 13908  1421                     l4568:	
 13909                           ;incstack = 0
 13910                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 13911                           
 13912  1421  0020               	movlb	0	; select bank0
 13913  1422  01A4               	clrf	___wmul@product
 13914  1423  01A5               	clrf	___wmul@product+1
 13915  1424                     l4570:
 13916  1424  1C20               	btfss	___wmul@multiplier,0
 13917  1425  2C27               	goto	u2771
 13918  1426  2C28               	goto	u2770
 13919  1427                     u2771:
 13920  1427  2C2C               	goto	l1718
 13921  1428                     u2770:
 13922  1428                     l4572:
 13923  1428  0822               	movf	___wmul@multiplicand,w
 13924  1429  07A4               	addwf	___wmul@product,f
 13925  142A  0823               	movf	___wmul@multiplicand+1,w
 13926  142B  3DA5               	addwfc	___wmul@product+1,f
 13927  142C                     l1718:
 13928  142C  3001               	movlw	1
 13929  142D                     u2785:
 13930  142D  35A2               	lslf	___wmul@multiplicand,f
 13931  142E  0DA3               	rlf	___wmul@multiplicand+1,f
 13932  142F  0B89               	decfsz	9,f
 13933  1430  2C2D               	goto	u2785
 13934  1431                     l4574:
 13935  1431  3001               	movlw	1
 13936  1432                     u2795:
 13937  1432  36A1               	lsrf	___wmul@multiplier+1,f
 13938  1433  0CA0               	rrf	___wmul@multiplier,f
 13939  1434  0B89               	decfsz	9,f
 13940  1435  2C32               	goto	u2795
 13941  1436                     l4576:
 13942  1436  0820               	movf	___wmul@multiplier,w
 13943  1437  0421               	iorwf	___wmul@multiplier+1,w
 13944  1438  1D03               	btfss	3,2
 13945  1439  2C3B               	goto	u2801
 13946  143A  2C3C               	goto	u2800
 13947  143B                     u2801:
 13948  143B  2C24               	goto	l4570
 13949  143C                     u2800:
 13950  143C                     l4578:
 13951  143C  0825               	movf	___wmul@product+1,w
 13952  143D  00A1               	movwf	?___wmul+1
 13953  143E  0824               	movf	___wmul@product,w
 13954  143F  00A0               	movwf	?___wmul
 13955  1440                     l1720:
 13956  1440  0008               	return
 13957  1441                     __end_of___wmul:
 13958                           
 13959                           	psect	text19
 13960  0EB0                     __ptext19:	
 13961 ;; *************** function _readTC74 *****************
 13962 ;; Defined at:
 13963 ;;		line 75 in file "main.c"
 13964 ;; Parameters:    Size  Location     Type
 13965 ;;		None
 13966 ;; Auto vars:     Size  Location     Type
 13967 ;;  value           1    3[BANK0 ] unsigned char 
 13968 ;; Return value:  Size  Location     Type
 13969 ;;                  1    wreg      unsigned char 
 13970 ;; Registers used:
 13971 ;;		wreg, status,2, status,0, pclath, cstack
 13972 ;; Tracked objects:
 13973 ;;		On entry : 0/0
 13974 ;;		On exit  : 0/0
 13975 ;;		Unchanged: 0/0
 13976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13978 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13979 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13980 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13981 ;;Total ram usage:        2 bytes
 13982 ;; Hardware stack levels used: 1
 13983 ;; Hardware stack levels required when called: 8
 13984 ;; This function calls:
 13985 ;;		_ReadI2C
 13986 ;;		_WriteI2C
 13987 ;; This function is called by:
 13988 ;;		_main
 13989 ;; This function uses a non-reentrant model
 13990 ;;
 13991                           
 13992                           
 13993                           ;psect for function _readTC74
 13994  0EB0                     _readTC74:
 13995  0EB0                     l1329:	
 13996                           ;incstack = 0
 13997                           ; Regs used in _readTC74: [wreg+status,2+status,0+pclath+cstack]
 13998                           ;main.c: 77:  unsigned char value;;main.c: 78: do{
 13999                           
 14000  0EB0                     l5652:	
 14001                           ;main.c: 79:  while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14002                           
 14003  0EB0  0023               	movlb	3	; select bank3
 14004  0EB1  0C0F               	rrf	15,w	;volatile
 14005  0EB2  0C89               	rrf	9,f
 14006  0EB3  3901               	andlw	1
 14007  0EB4  0020               	movlb	0	; select bank0
 14008  0EB5  00A2               	movwf	??_readTC74
 14009  0EB6  0023               	movlb	3	; select bank3
 14010  0EB7  0811               	movf	17,w	;volatile
 14011  0EB8  391F               	andlw	31
 14012  0EB9  0020               	movlb	0	; select bank0
 14013  0EBA  0422               	iorwf	??_readTC74,w
 14014  0EBB  1D03               	btfss	3,2
 14015  0EBC  2EBE               	goto	u4681
 14016  0EBD  2EBF               	goto	u4680
 14017  0EBE                     u4681:
 14018  0EBE  2EB0               	goto	l5652
 14019  0EBF                     u4680:
 14020  0EBF                     l1333:	
 14021                           ;main.c: 80:  do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((SSP1
      +                          CON2 & 0x1F) | (SSP1STATbits.R_W));
 14022                           
 14023  0EBF  0023               	movlb	3	; select bank3
 14024  0EC0  1411               	bsf	17,0	;volatile
 14025  0EC1                     l1334:
 14026  0EC1  1811               	btfsc	17,0	;volatile
 14027  0EC2  2EC4               	goto	u4691
 14028  0EC3  2EC5               	goto	u4690
 14029  0EC4                     u4691:
 14030  0EC4  2EC1               	goto	l1334
 14031  0EC5                     u4690:
 14032  0EC5                     l5654:
 14033  0EC5  0023               	movlb	3	; select bank3
 14034  0EC6  0C0F               	rrf	15,w	;volatile
 14035  0EC7  0C89               	rrf	9,f
 14036  0EC8  3901               	andlw	1
 14037  0EC9  0020               	movlb	0	; select bank0
 14038  0ECA  00A2               	movwf	??_readTC74
 14039  0ECB  0023               	movlb	3	; select bank3
 14040  0ECC  0811               	movf	17,w	;volatile
 14041  0ECD  391F               	andlw	31
 14042  0ECE  0020               	movlb	0	; select bank0
 14043  0ECF  0422               	iorwf	??_readTC74,w
 14044  0ED0  1D03               	btfss	3,2
 14045  0ED1  2ED3               	goto	u4701
 14046  0ED2  2ED4               	goto	u4700
 14047  0ED3                     u4701:
 14048  0ED3  2EC5               	goto	l5654
 14049  0ED4                     u4700:
 14050  0ED4                     l5656:
 14051                           
 14052                           ;main.c: 82:  WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14053  0ED4  309A               	movlw	154
 14054  0ED5  3197  2743  318E   	fcall	_WriteI2C
 14055  0ED8                     l5658:
 14056  0ED8  0023               	movlb	3	; select bank3
 14057  0ED9  0C0F               	rrf	15,w	;volatile
 14058  0EDA  0C89               	rrf	9,f
 14059  0EDB  3901               	andlw	1
 14060  0EDC  0020               	movlb	0	; select bank0
 14061  0EDD  00A2               	movwf	??_readTC74
 14062  0EDE  0023               	movlb	3	; select bank3
 14063  0EDF  0811               	movf	17,w	;volatile
 14064  0EE0  391F               	andlw	31
 14065  0EE1  0020               	movlb	0	; select bank0
 14066  0EE2  0422               	iorwf	??_readTC74,w
 14067  0EE3  1D03               	btfss	3,2
 14068  0EE4  2EE6               	goto	u4711
 14069  0EE5  2EE7               	goto	u4710
 14070  0EE6                     u4711:
 14071  0EE6  2ED8               	goto	l5658
 14072  0EE7                     u4710:
 14073  0EE7                     l5660:
 14074                           
 14075                           ;main.c: 83:  WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14076  0EE7  3001               	movlw	1
 14077  0EE8  3197  2743  318E   	fcall	_WriteI2C
 14078  0EEB                     l5662:
 14079  0EEB  0023               	movlb	3	; select bank3
 14080  0EEC  0C0F               	rrf	15,w	;volatile
 14081  0EED  0C89               	rrf	9,f
 14082  0EEE  3901               	andlw	1
 14083  0EEF  0020               	movlb	0	; select bank0
 14084  0EF0  00A2               	movwf	??_readTC74
 14085  0EF1  0023               	movlb	3	; select bank3
 14086  0EF2  0811               	movf	17,w	;volatile
 14087  0EF3  391F               	andlw	31
 14088  0EF4  0020               	movlb	0	; select bank0
 14089  0EF5  0422               	iorwf	??_readTC74,w
 14090  0EF6  1D03               	btfss	3,2
 14091  0EF7  2EF9               	goto	u4721
 14092  0EF8  2EFA               	goto	u4720
 14093  0EF9                     u4721:
 14094  0EF9  2EEB               	goto	l5662
 14095  0EFA                     u4720:
 14096  0EFA                     l1347:	
 14097                           ;main.c: 84:  do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while ((SS
      +                          P1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14098                           
 14099  0EFA  0023               	movlb	3	; select bank3
 14100  0EFB  1491               	bsf	17,1	;volatile
 14101  0EFC                     l1348:
 14102  0EFC  1891               	btfsc	17,1	;volatile
 14103  0EFD  2EFF               	goto	u4731
 14104  0EFE  2F00               	goto	u4730
 14105  0EFF                     u4731:
 14106  0EFF  2EFC               	goto	l1348
 14107  0F00                     u4730:
 14108  0F00                     l5664:
 14109  0F00  0023               	movlb	3	; select bank3
 14110  0F01  0C0F               	rrf	15,w	;volatile
 14111  0F02  0C89               	rrf	9,f
 14112  0F03  3901               	andlw	1
 14113  0F04  0020               	movlb	0	; select bank0
 14114  0F05  00A2               	movwf	??_readTC74
 14115  0F06  0023               	movlb	3	; select bank3
 14116  0F07  0811               	movf	17,w	;volatile
 14117  0F08  391F               	andlw	31
 14118  0F09  0020               	movlb	0	; select bank0
 14119  0F0A  0422               	iorwf	??_readTC74,w
 14120  0F0B  1D03               	btfss	3,2
 14121  0F0C  2F0E               	goto	u4741
 14122  0F0D  2F0F               	goto	u4740
 14123  0F0E                     u4741:
 14124  0F0E  2F00               	goto	l5664
 14125  0F0F                     u4740:
 14126  0F0F                     l5666:
 14127                           
 14128                           ;main.c: 85:  WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14129  0F0F  309B               	movlw	155
 14130  0F10  3197  2743  318E   	fcall	_WriteI2C
 14131  0F13                     l5668:
 14132  0F13  0023               	movlb	3	; select bank3
 14133  0F14  0C0F               	rrf	15,w	;volatile
 14134  0F15  0C89               	rrf	9,f
 14135  0F16  3901               	andlw	1
 14136  0F17  0020               	movlb	0	; select bank0
 14137  0F18  00A2               	movwf	??_readTC74
 14138  0F19  0023               	movlb	3	; select bank3
 14139  0F1A  0811               	movf	17,w	;volatile
 14140  0F1B  391F               	andlw	31
 14141  0F1C  0020               	movlb	0	; select bank0
 14142  0F1D  0422               	iorwf	??_readTC74,w
 14143  0F1E  1D03               	btfss	3,2
 14144  0F1F  2F21               	goto	u4751
 14145  0F20  2F22               	goto	u4750
 14146  0F21                     u4751:
 14147  0F21  2F13               	goto	l5668
 14148  0F22                     u4750:
 14149  0F22                     l5670:
 14150                           
 14151                           ;main.c: 86:  value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14152  0F22  3194  2402  318E   	fcall	_ReadI2C
 14153  0F25  0020               	movlb	0	; select bank0
 14154  0F26  00A2               	movwf	??_readTC74
 14155  0F27  0822               	movf	??_readTC74,w
 14156  0F28  00A3               	movwf	readTC74@value
 14157  0F29                     l5672:
 14158  0F29  0023               	movlb	3	; select bank3
 14159  0F2A  0C0F               	rrf	15,w	;volatile
 14160  0F2B  0C89               	rrf	9,f
 14161  0F2C  3901               	andlw	1
 14162  0F2D  0020               	movlb	0	; select bank0
 14163  0F2E  00A2               	movwf	??_readTC74
 14164  0F2F  0023               	movlb	3	; select bank3
 14165  0F30  0811               	movf	17,w	;volatile
 14166  0F31  391F               	andlw	31
 14167  0F32  0020               	movlb	0	; select bank0
 14168  0F33  0422               	iorwf	??_readTC74,w
 14169  0F34  1D03               	btfss	3,2
 14170  0F35  2F37               	goto	u4761
 14171  0F36  2F38               	goto	u4760
 14172  0F37                     u4761:
 14173  0F37  2F29               	goto	l5672
 14174  0F38                     u4760:
 14175  0F38                     l1361:	
 14176                           ;main.c: 87:  do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); 
      +                          } while (0); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14177                           
 14178  0F38  0023               	movlb	3	; select bank3
 14179  0F39  1691               	bsf	17,5	;volatile
 14180  0F3A  1611               	bsf	17,4	;volatile
 14181  0F3B                     l1362:
 14182  0F3B  1A11               	btfsc	17,4	;volatile
 14183  0F3C  2F3E               	goto	u4771
 14184  0F3D  2F3F               	goto	u4770
 14185  0F3E                     u4771:
 14186  0F3E  2F3B               	goto	l1362
 14187  0F3F                     u4770:
 14188  0F3F                     l5674:
 14189  0F3F  0023               	movlb	3	; select bank3
 14190  0F40  0C0F               	rrf	15,w	;volatile
 14191  0F41  0C89               	rrf	9,f
 14192  0F42  3901               	andlw	1
 14193  0F43  0020               	movlb	0	; select bank0
 14194  0F44  00A2               	movwf	??_readTC74
 14195  0F45  0023               	movlb	3	; select bank3
 14196  0F46  0811               	movf	17,w	;volatile
 14197  0F47  391F               	andlw	31
 14198  0F48  0020               	movlb	0	; select bank0
 14199  0F49  0422               	iorwf	??_readTC74,w
 14200  0F4A  1D03               	btfss	3,2
 14201  0F4B  2F4D               	goto	u4781
 14202  0F4C  2F4E               	goto	u4780
 14203  0F4D                     u4781:
 14204  0F4D  2F3F               	goto	l5674
 14205  0F4E                     u4780:
 14206  0F4E                     l1369:	
 14207                           ;main.c: 88:  do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 14208                           
 14209  0F4E  0023               	movlb	3	; select bank3
 14210  0F4F  1511               	bsf	17,2	;volatile
 14211  0F50                     l1370:
 14212  0F50  1911               	btfsc	17,2	;volatile
 14213  0F51  2F53               	goto	u4791
 14214  0F52  2F54               	goto	u4790
 14215  0F53                     u4791:
 14216  0F53  2F50               	goto	l1370
 14217  0F54                     u4790:
 14218  0F54                     l1373:
 14219                           
 14220                           ;main.c: 89: } while (!(value & 0x40));
 14221  0F54  0020               	movlb	0	; select bank0
 14222  0F55  1F23               	btfss	readTC74@value,6
 14223  0F56  2F58               	goto	u4801
 14224  0F57  2F59               	goto	u4800
 14225  0F58                     u4801:
 14226  0F58  2EB0               	goto	l1329
 14227  0F59                     u4800:
 14228  0F59                     l5676:
 14229  0F59  0023               	movlb	3	; select bank3
 14230  0F5A  0C0F               	rrf	15,w	;volatile
 14231  0F5B  0C89               	rrf	9,f
 14232  0F5C  3901               	andlw	1
 14233  0F5D  0020               	movlb	0	; select bank0
 14234  0F5E  00A2               	movwf	??_readTC74
 14235  0F5F  0023               	movlb	3	; select bank3
 14236  0F60  0811               	movf	17,w	;volatile
 14237  0F61  391F               	andlw	31
 14238  0F62  0020               	movlb	0	; select bank0
 14239  0F63  0422               	iorwf	??_readTC74,w
 14240  0F64  1D03               	btfss	3,2
 14241  0F65  2F67               	goto	u4811
 14242  0F66  2F68               	goto	u4810
 14243  0F67                     u4811:
 14244  0F67  2F59               	goto	l5676
 14245  0F68                     u4810:
 14246  0F68                     l1378:	
 14247                           ;main.c: 92:  do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((SSP1
      +                          CON2 & 0x1F) | (SSP1STATbits.R_W));
 14248                           
 14249  0F68  0023               	movlb	3	; select bank3
 14250  0F69  1411               	bsf	17,0	;volatile
 14251  0F6A                     l1379:
 14252  0F6A  1811               	btfsc	17,0	;volatile
 14253  0F6B  2F6D               	goto	u4821
 14254  0F6C  2F6E               	goto	u4820
 14255  0F6D                     u4821:
 14256  0F6D  2F6A               	goto	l1379
 14257  0F6E                     u4820:
 14258  0F6E                     l5678:
 14259  0F6E  0023               	movlb	3	; select bank3
 14260  0F6F  0C0F               	rrf	15,w	;volatile
 14261  0F70  0C89               	rrf	9,f
 14262  0F71  3901               	andlw	1
 14263  0F72  0020               	movlb	0	; select bank0
 14264  0F73  00A2               	movwf	??_readTC74
 14265  0F74  0023               	movlb	3	; select bank3
 14266  0F75  0811               	movf	17,w	;volatile
 14267  0F76  391F               	andlw	31
 14268  0F77  0020               	movlb	0	; select bank0
 14269  0F78  0422               	iorwf	??_readTC74,w
 14270  0F79  1D03               	btfss	3,2
 14271  0F7A  2F7C               	goto	u4831
 14272  0F7B  2F7D               	goto	u4830
 14273  0F7C                     u4831:
 14274  0F7C  2F6E               	goto	l5678
 14275  0F7D                     u4830:
 14276  0F7D                     l5680:
 14277                           
 14278                           ;main.c: 93:  WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14279  0F7D  309A               	movlw	154
 14280  0F7E  3197  2743  318E   	fcall	_WriteI2C
 14281  0F81                     l5682:
 14282  0F81  0023               	movlb	3	; select bank3
 14283  0F82  0C0F               	rrf	15,w	;volatile
 14284  0F83  0C89               	rrf	9,f
 14285  0F84  3901               	andlw	1
 14286  0F85  0020               	movlb	0	; select bank0
 14287  0F86  00A2               	movwf	??_readTC74
 14288  0F87  0023               	movlb	3	; select bank3
 14289  0F88  0811               	movf	17,w	;volatile
 14290  0F89  391F               	andlw	31
 14291  0F8A  0020               	movlb	0	; select bank0
 14292  0F8B  0422               	iorwf	??_readTC74,w
 14293  0F8C  1D03               	btfss	3,2
 14294  0F8D  2F8F               	goto	u4841
 14295  0F8E  2F90               	goto	u4840
 14296  0F8F                     u4841:
 14297  0F8F  2F81               	goto	l5682
 14298  0F90                     u4840:
 14299  0F90                     l5684:
 14300                           
 14301                           ;main.c: 94:  WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14302  0F90  3000               	movlw	0
 14303  0F91  3197  2743  318E   	fcall	_WriteI2C
 14304  0F94                     l5686:
 14305  0F94  0023               	movlb	3	; select bank3
 14306  0F95  0C0F               	rrf	15,w	;volatile
 14307  0F96  0C89               	rrf	9,f
 14308  0F97  3901               	andlw	1
 14309  0F98  0020               	movlb	0	; select bank0
 14310  0F99  00A2               	movwf	??_readTC74
 14311  0F9A  0023               	movlb	3	; select bank3
 14312  0F9B  0811               	movf	17,w	;volatile
 14313  0F9C  391F               	andlw	31
 14314  0F9D  0020               	movlb	0	; select bank0
 14315  0F9E  0422               	iorwf	??_readTC74,w
 14316  0F9F  1D03               	btfss	3,2
 14317  0FA0  2FA2               	goto	u4851
 14318  0FA1  2FA3               	goto	u4850
 14319  0FA2                     u4851:
 14320  0FA2  2F94               	goto	l5686
 14321  0FA3                     u4850:
 14322  0FA3                     l1392:	
 14323                           ;main.c: 95:  do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while ((SS
      +                          P1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14324                           
 14325  0FA3  0023               	movlb	3	; select bank3
 14326  0FA4  1491               	bsf	17,1	;volatile
 14327  0FA5                     l1393:
 14328  0FA5  1891               	btfsc	17,1	;volatile
 14329  0FA6  2FA8               	goto	u4861
 14330  0FA7  2FA9               	goto	u4860
 14331  0FA8                     u4861:
 14332  0FA8  2FA5               	goto	l1393
 14333  0FA9                     u4860:
 14334  0FA9                     l5688:
 14335  0FA9  0023               	movlb	3	; select bank3
 14336  0FAA  0C0F               	rrf	15,w	;volatile
 14337  0FAB  0C89               	rrf	9,f
 14338  0FAC  3901               	andlw	1
 14339  0FAD  0020               	movlb	0	; select bank0
 14340  0FAE  00A2               	movwf	??_readTC74
 14341  0FAF  0023               	movlb	3	; select bank3
 14342  0FB0  0811               	movf	17,w	;volatile
 14343  0FB1  391F               	andlw	31
 14344  0FB2  0020               	movlb	0	; select bank0
 14345  0FB3  0422               	iorwf	??_readTC74,w
 14346  0FB4  1D03               	btfss	3,2
 14347  0FB5  2FB7               	goto	u4871
 14348  0FB6  2FB8               	goto	u4870
 14349  0FB7                     u4871:
 14350  0FB7  2FA9               	goto	l5688
 14351  0FB8                     u4870:
 14352  0FB8                     l5690:
 14353                           
 14354                           ;main.c: 96:  WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14355  0FB8  309B               	movlw	155
 14356  0FB9  3197  2743  318E   	fcall	_WriteI2C
 14357  0FBC                     l5692:
 14358  0FBC  0023               	movlb	3	; select bank3
 14359  0FBD  0C0F               	rrf	15,w	;volatile
 14360  0FBE  0C89               	rrf	9,f
 14361  0FBF  3901               	andlw	1
 14362  0FC0  0020               	movlb	0	; select bank0
 14363  0FC1  00A2               	movwf	??_readTC74
 14364  0FC2  0023               	movlb	3	; select bank3
 14365  0FC3  0811               	movf	17,w	;volatile
 14366  0FC4  391F               	andlw	31
 14367  0FC5  0020               	movlb	0	; select bank0
 14368  0FC6  0422               	iorwf	??_readTC74,w
 14369  0FC7  1D03               	btfss	3,2
 14370  0FC8  2FCA               	goto	u4881
 14371  0FC9  2FCB               	goto	u4880
 14372  0FCA                     u4881:
 14373  0FCA  2FBC               	goto	l5692
 14374  0FCB                     u4880:
 14375  0FCB                     l5694:
 14376                           
 14377                           ;main.c: 97:  value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14378  0FCB  3194  2402  318E   	fcall	_ReadI2C
 14379  0FCE  0020               	movlb	0	; select bank0
 14380  0FCF  00A2               	movwf	??_readTC74
 14381  0FD0  0822               	movf	??_readTC74,w
 14382  0FD1  00A3               	movwf	readTC74@value
 14383  0FD2                     l5696:
 14384  0FD2  0023               	movlb	3	; select bank3
 14385  0FD3  0C0F               	rrf	15,w	;volatile
 14386  0FD4  0C89               	rrf	9,f
 14387  0FD5  3901               	andlw	1
 14388  0FD6  0020               	movlb	0	; select bank0
 14389  0FD7  00A2               	movwf	??_readTC74
 14390  0FD8  0023               	movlb	3	; select bank3
 14391  0FD9  0811               	movf	17,w	;volatile
 14392  0FDA  391F               	andlw	31
 14393  0FDB  0020               	movlb	0	; select bank0
 14394  0FDC  0422               	iorwf	??_readTC74,w
 14395  0FDD  1D03               	btfss	3,2
 14396  0FDE  2FE0               	goto	u4891
 14397  0FDF  2FE1               	goto	u4890
 14398  0FE0                     u4891:
 14399  0FE0  2FD2               	goto	l5696
 14400  0FE1                     u4890:
 14401  0FE1                     l1406:	
 14402                           ;main.c: 98:  do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); 
      +                          } while (0); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14403                           
 14404  0FE1  0023               	movlb	3	; select bank3
 14405  0FE2  1691               	bsf	17,5	;volatile
 14406  0FE3  1611               	bsf	17,4	;volatile
 14407  0FE4                     l1407:
 14408  0FE4  1A11               	btfsc	17,4	;volatile
 14409  0FE5  2FE7               	goto	u4901
 14410  0FE6  2FE8               	goto	u4900
 14411  0FE7                     u4901:
 14412  0FE7  2FE4               	goto	l1407
 14413  0FE8                     u4900:
 14414  0FE8                     l5698:
 14415  0FE8  0023               	movlb	3	; select bank3
 14416  0FE9  0C0F               	rrf	15,w	;volatile
 14417  0FEA  0C89               	rrf	9,f
 14418  0FEB  3901               	andlw	1
 14419  0FEC  0020               	movlb	0	; select bank0
 14420  0FED  00A2               	movwf	??_readTC74
 14421  0FEE  0023               	movlb	3	; select bank3
 14422  0FEF  0811               	movf	17,w	;volatile
 14423  0FF0  391F               	andlw	31
 14424  0FF1  0020               	movlb	0	; select bank0
 14425  0FF2  0422               	iorwf	??_readTC74,w
 14426  0FF3  1D03               	btfss	3,2
 14427  0FF4  2FF6               	goto	u4911
 14428  0FF5  2FF7               	goto	u4910
 14429  0FF6                     u4911:
 14430  0FF6  2FE8               	goto	l5698
 14431  0FF7                     u4910:
 14432  0FF7                     l1414:	
 14433                           ;main.c: 99:  do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 14434                           
 14435  0FF7  0023               	movlb	3	; select bank3
 14436  0FF8  1511               	bsf	17,2	;volatile
 14437  0FF9                     l1415:
 14438  0FF9  1911               	btfsc	17,2	;volatile
 14439  0FFA  2FFC               	goto	u4921
 14440  0FFB  2FFD               	goto	u4920
 14441  0FFC                     u4921:
 14442  0FFC  2FF9               	goto	l1415
 14443  0FFD                     u4920:
 14444  0FFD                     l5700:
 14445                           
 14446                           ;main.c: 101:  return value;
 14447  0FFD  0020               	movlb	0	; select bank0
 14448  0FFE  0823               	movf	readTC74@value,w
 14449  0FFF                     l1419:
 14450  0FFF  0008               	return
 14451  1000                     __end_of_readTC74:
 14452                           
 14453                           	psect	text20
 14454  0743                     __ptext20:	
 14455 ;; *************** function _parseEPROMInitialization *****************
 14456 ;; Defined at:
 14457 ;;		line 71 in file "EPROMlib.c"
 14458 ;; Parameters:    Size  Location     Type
 14459 ;;  magic_word      1    wreg     PTR unsigned char 
 14460 ;;		 -> magic_word(1), 
 14461 ;;  NREG            1    2[BANK0 ] PTR unsigned char 
 14462 ;;		 -> NREG(1), 
 14463 ;;  NR              1    3[BANK0 ] PTR unsigned char 
 14464 ;;		 -> NR(1), 
 14465 ;;  WI              1    4[BANK0 ] PTR unsigned char 
 14466 ;;		 -> WI(1), 
 14467 ;;  RI              1    5[BANK0 ] PTR unsigned char 
 14468 ;;		 -> RI(1), 
 14469 ;;  PMON            1    6[BANK0 ] PTR unsigned char 
 14470 ;;		 -> PMON(1), 
 14471 ;;  TALA            1    7[BANK0 ] PTR unsigned char 
 14472 ;;		 -> TALA(1), 
 14473 ;;  ALAT            1    8[BANK0 ] PTR unsigned char 
 14474 ;;		 -> ALAT(1), 
 14475 ;;  ALAL            1    9[BANK0 ] PTR unsigned char 
 14476 ;;		 -> ALAL(1), 
 14477 ;;  ALAF            1   10[BANK0 ] PTR unsigned char 
 14478 ;;		 -> ALAF(1), 
 14479 ;;  CLKH            1   11[BANK0 ] PTR unsigned char 
 14480 ;;		 -> CLKH(1), 
 14481 ;;  CLKM            1   12[BANK0 ] PTR unsigned char 
 14482 ;;		 -> CLKM(1), 
 14483 ;;  checksum        1   13[BANK0 ] PTR unsigned char 
 14484 ;;		 -> checksum(1), 
 14485 ;; Auto vars:     Size  Location     Type
 14486 ;;  magic_word      1   15[BANK0 ] PTR unsigned char 
 14487 ;;		 -> magic_word(1), 
 14488 ;; Return value:  Size  Location     Type
 14489 ;;                  1    wreg      unsigned char 
 14490 ;; Registers used:
 14491 ;;		wreg, fsr1l, fsr1h, status,2, pclath, cstack
 14492 ;; Tracked objects:
 14493 ;;		On entry : 0/0
 14494 ;;		On exit  : 0/0
 14495 ;;		Unchanged: 0/0
 14496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14497 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14498 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14499 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14500 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14501 ;;Total ram usage:       14 bytes
 14502 ;; Hardware stack levels used: 1
 14503 ;; Hardware stack levels required when called: 8
 14504 ;; This function calls:
 14505 ;;		_DATAEE_ReadByte
 14506 ;; This function is called by:
 14507 ;;		_main
 14508 ;; This function uses a non-reentrant model
 14509 ;;
 14510                           
 14511                           
 14512                           ;psect for function _parseEPROMInitialization
 14513  0743                     _parseEPROMInitialization:
 14514                           
 14515                           ;incstack = 0
 14516                           ; Regs used in _parseEPROMInitialization: [wreg+fsr1l+fsr1h+status,2+pclath+cstack]
 14517                           ;parseEPROMInitialization@magic_word stored from wreg
 14518  0743  0020               	movlb	0	; select bank0
 14519  0744  00AF               	movwf	parseEPROMInitialization@magic_word
 14520  0745                     l5732:
 14521                           
 14522                           ;EPROMlib.c: 72:     *magic_word = DATAEE_ReadByte(0x7099);
 14523  0745  3099               	movlw	153
 14524  0746  00A0               	movwf	DATAEE_ReadByte@bAdd
 14525  0747  3070               	movlw	112
 14526  0748  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 14527  0749  3192  2286  3187   	fcall	_DATAEE_ReadByte
 14528  074C  0020               	movlb	0	; select bank0
 14529  074D  00AE               	movwf	??_parseEPROMInitialization
 14530  074E  082F               	movf	parseEPROMInitialization@magic_word,w
 14531  074F  0086               	movwf	6
 14532  0750  0187               	clrf	7
 14533  0751  082E               	movf	??_parseEPROMInitialization,w
 14534  0752  0081               	movwf	1
 14535                           
 14536                           ;EPROMlib.c: 73:     *NREG = DATAEE_ReadByte(0x7099 + 1);
 14537  0753  309A               	movlw	154
 14538  0754  00A0               	movwf	DATAEE_ReadByte@bAdd
 14539  0755  3070               	movlw	112
 14540  0756  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 14541  0757  3192  2286  3187   	fcall	_DATAEE_ReadByte
 14542  075A  0020               	movlb	0	; select bank0
 14543  075B  00AE               	movwf	??_parseEPROMInitialization
 14544  075C  0822               	movf	parseEPROMInitialization@NREG,w
 14545  075D  0086               	movwf	6
 14546  075E  0187               	clrf	7
 14547  075F  082E               	movf	??_parseEPROMInitialization,w
 14548  0760  0081               	movwf	1
 14549                           
 14550                           ;EPROMlib.c: 74:     *NR = DATAEE_ReadByte(0x7099 + 2);
 14551  0761  309B               	movlw	155
 14552  0762  00A0               	movwf	DATAEE_ReadByte@bAdd
 14553  0763  3070               	movlw	112
 14554  0764  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 14555  0765  3192  2286  3187   	fcall	_DATAEE_ReadByte
 14556  0768  0020               	movlb	0	; select bank0
 14557  0769  00AE               	movwf	??_parseEPROMInitialization
 14558  076A  0823               	movf	parseEPROMInitialization@NR,w
 14559  076B  0086               	movwf	6
 14560  076C  0187               	clrf	7
 14561  076D  082E               	movf	??_parseEPROMInitialization,w
 14562  076E  0081               	movwf	1
 14563                           
 14564                           ;EPROMlib.c: 75:     *WI = DATAEE_ReadByte(0x7099 + 3);
 14565  076F  309C               	movlw	156
 14566  0770  00A0               	movwf	DATAEE_ReadByte@bAdd
 14567  0771  3070               	movlw	112
 14568  0772  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 14569  0773  3192  2286  3187   	fcall	_DATAEE_ReadByte
 14570  0776  0020               	movlb	0	; select bank0
 14571  0777  00AE               	movwf	??_parseEPROMInitialization
 14572  0778  0824               	movf	parseEPROMInitialization@WI,w
 14573  0779  0086               	movwf	6
 14574  077A  0187               	clrf	7
 14575  077B  082E               	movf	??_parseEPROMInitialization,w
 14576  077C  0081               	movwf	1
 14577                           
 14578                           ;EPROMlib.c: 76:     *RI = DATAEE_ReadByte(0x7099 + 4);
 14579  077D  309D               	movlw	157
 14580  077E  00A0               	movwf	DATAEE_ReadByte@bAdd
 14581  077F  3070               	movlw	112
 14582  0780  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 14583  0781  3192  2286  3187   	fcall	_DATAEE_ReadByte
 14584  0784  0020               	movlb	0	; select bank0
 14585  0785  00AE               	movwf	??_parseEPROMInitialization
 14586  0786  0825               	movf	parseEPROMInitialization@RI,w
 14587  0787  0086               	movwf	6
 14588  0788  0187               	clrf	7
 14589  0789  082E               	movf	??_parseEPROMInitialization,w
 14590  078A  0081               	movwf	1
 14591                           
 14592                           ;EPROMlib.c: 77:     *PMON = DATAEE_ReadByte(0x7099 + 5);
 14593  078B  309E               	movlw	158
 14594  078C  00A0               	movwf	DATAEE_ReadByte@bAdd
 14595  078D  3070               	movlw	112
 14596  078E  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 14597  078F  3192  2286  3187   	fcall	_DATAEE_ReadByte
 14598  0792  0020               	movlb	0	; select bank0
 14599  0793  00AE               	movwf	??_parseEPROMInitialization
 14600  0794  0826               	movf	parseEPROMInitialization@PMON,w
 14601  0795  0086               	movwf	6
 14602  0796  0187               	clrf	7
 14603  0797  082E               	movf	??_parseEPROMInitialization,w
 14604  0798  0081               	movwf	1
 14605                           
 14606                           ;EPROMlib.c: 78:     *TALA = DATAEE_ReadByte(0x7099 + 6);
 14607  0799  309F               	movlw	159
 14608  079A  00A0               	movwf	DATAEE_ReadByte@bAdd
 14609  079B  3070               	movlw	112
 14610  079C  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 14611  079D  3192  2286  3187   	fcall	_DATAEE_ReadByte
 14612  07A0  0020               	movlb	0	; select bank0
 14613  07A1  00AE               	movwf	??_parseEPROMInitialization
 14614  07A2  0827               	movf	parseEPROMInitialization@TALA,w
 14615  07A3  0086               	movwf	6
 14616  07A4  0187               	clrf	7
 14617  07A5  082E               	movf	??_parseEPROMInitialization,w
 14618  07A6  0081               	movwf	1
 14619                           
 14620                           ;EPROMlib.c: 79:     *ALAT = DATAEE_ReadByte(0x7099 + 7);
 14621  07A7  30A0               	movlw	160
 14622  07A8  00A0               	movwf	DATAEE_ReadByte@bAdd
 14623  07A9  3070               	movlw	112
 14624  07AA  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 14625  07AB  3192  2286  3187   	fcall	_DATAEE_ReadByte
 14626  07AE  0020               	movlb	0	; select bank0
 14627  07AF  00AE               	movwf	??_parseEPROMInitialization
 14628  07B0  0828               	movf	parseEPROMInitialization@ALAT,w
 14629  07B1  0086               	movwf	6
 14630  07B2  0187               	clrf	7
 14631  07B3  082E               	movf	??_parseEPROMInitialization,w
 14632  07B4  0081               	movwf	1
 14633                           
 14634                           ;EPROMlib.c: 80:     *ALAL = DATAEE_ReadByte(0x7099 + 8);
 14635  07B5  30A1               	movlw	161
 14636  07B6  00A0               	movwf	DATAEE_ReadByte@bAdd
 14637  07B7  3070               	movlw	112
 14638  07B8  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 14639  07B9  3192  2286  3187   	fcall	_DATAEE_ReadByte
 14640  07BC  0020               	movlb	0	; select bank0
 14641  07BD  00AE               	movwf	??_parseEPROMInitialization
 14642  07BE  0829               	movf	parseEPROMInitialization@ALAL,w
 14643  07BF  0086               	movwf	6
 14644  07C0  0187               	clrf	7
 14645  07C1  082E               	movf	??_parseEPROMInitialization,w
 14646  07C2  0081               	movwf	1
 14647                           
 14648                           ;EPROMlib.c: 81:     *ALAF = DATAEE_ReadByte(0x7099 + 9);
 14649  07C3  30A2               	movlw	162
 14650  07C4  00A0               	movwf	DATAEE_ReadByte@bAdd
 14651  07C5  3070               	movlw	112
 14652  07C6  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 14653  07C7  3192  2286  3187   	fcall	_DATAEE_ReadByte
 14654  07CA  0020               	movlb	0	; select bank0
 14655  07CB  00AE               	movwf	??_parseEPROMInitialization
 14656  07CC  082A               	movf	parseEPROMInitialization@ALAF,w
 14657  07CD  0086               	movwf	6
 14658  07CE  0187               	clrf	7
 14659  07CF  082E               	movf	??_parseEPROMInitialization,w
 14660  07D0  0081               	movwf	1
 14661                           
 14662                           ;EPROMlib.c: 82:     *CLKH = DATAEE_ReadByte(0x7099 + 10);
 14663  07D1  30A3               	movlw	163
 14664  07D2  00A0               	movwf	DATAEE_ReadByte@bAdd
 14665  07D3  3070               	movlw	112
 14666  07D4  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 14667  07D5  3192  2286  3187   	fcall	_DATAEE_ReadByte
 14668  07D8  0020               	movlb	0	; select bank0
 14669  07D9  00AE               	movwf	??_parseEPROMInitialization
 14670  07DA  082B               	movf	parseEPROMInitialization@CLKH,w
 14671  07DB  0086               	movwf	6
 14672  07DC  0187               	clrf	7
 14673  07DD  082E               	movf	??_parseEPROMInitialization,w
 14674  07DE  0081               	movwf	1
 14675                           
 14676                           ;EPROMlib.c: 83:     *CLKM = DATAEE_ReadByte(0x7099 + 11);
 14677  07DF  30A4               	movlw	164
 14678  07E0  00A0               	movwf	DATAEE_ReadByte@bAdd
 14679  07E1  3070               	movlw	112
 14680  07E2  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 14681  07E3  3192  2286  3187   	fcall	_DATAEE_ReadByte
 14682  07E6  0020               	movlb	0	; select bank0
 14683  07E7  00AE               	movwf	??_parseEPROMInitialization
 14684  07E8  082C               	movf	parseEPROMInitialization@CLKM,w
 14685  07E9  0086               	movwf	6
 14686  07EA  0187               	clrf	7
 14687  07EB  082E               	movf	??_parseEPROMInitialization,w
 14688  07EC  0081               	movwf	1
 14689                           
 14690                           ;EPROMlib.c: 84:     *checksum = DATAEE_ReadByte(0x7099 + 12);
 14691  07ED  30A5               	movlw	165
 14692  07EE  00A0               	movwf	DATAEE_ReadByte@bAdd
 14693  07EF  3070               	movlw	112
 14694  07F0  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 14695  07F1  3192  2286  3187   	fcall	_DATAEE_ReadByte
 14696  07F4  0020               	movlb	0	; select bank0
 14697  07F5  00AE               	movwf	??_parseEPROMInitialization
 14698  07F6  082D               	movf	parseEPROMInitialization@checksum,w
 14699  07F7  0086               	movwf	6
 14700  07F8  0187               	clrf	7
 14701  07F9  082E               	movf	??_parseEPROMInitialization,w
 14702  07FA  0081               	movwf	1
 14703  07FB                     l1525:
 14704  07FB  0008               	return
 14705  07FC                     __end_of_parseEPROMInitialization:
 14706                           
 14707                           	psect	text21
 14708  1286                     __ptext21:	
 14709 ;; *************** function _DATAEE_ReadByte *****************
 14710 ;; Defined at:
 14711 ;;		line 202 in file "mcc_generated_files/memory.c"
 14712 ;; Parameters:    Size  Location     Type
 14713 ;;  bAdd            2    0[BANK0 ] unsigned short 
 14714 ;; Auto vars:     Size  Location     Type
 14715 ;;		None
 14716 ;; Return value:  Size  Location     Type
 14717 ;;                  1    wreg      unsigned char 
 14718 ;; Registers used:
 14719 ;;		wreg, status,2
 14720 ;; Tracked objects:
 14721 ;;		On entry : 0/0
 14722 ;;		On exit  : 0/0
 14723 ;;		Unchanged: 0/0
 14724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14725 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14728 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14729 ;;Total ram usage:        2 bytes
 14730 ;; Hardware stack levels used: 1
 14731 ;; Hardware stack levels required when called: 7
 14732 ;; This function calls:
 14733 ;;		Nothing
 14734 ;; This function is called by:
 14735 ;;		_parseEPROMInitialization
 14736 ;;		_parseEPROMReading
 14737 ;; This function uses a non-reentrant model
 14738 ;;
 14739                           
 14740                           
 14741                           ;psect for function _DATAEE_ReadByte
 14742  1286                     _DATAEE_ReadByte:
 14743  1286                     l5436:	
 14744                           ;incstack = 0
 14745                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 14746                           
 14747                           
 14748                           ;mcc_generated_files/memory.c: 202: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 203: {;mcc_generated_files/memory.c: 204:     NVMADRH = ((bAdd >> 8) & 
      +                          0xFF);
 14749  1286  0020               	movlb	0	; select bank0
 14750  1287  0821               	movf	DATAEE_ReadByte@bAdd+1,w
 14751  1288  0030               	movlb	16	; select bank16
 14752  1289  009B               	movwf	27	;volatile
 14753  128A                     l5438:
 14754                           
 14755                           ;mcc_generated_files/memory.c: 205:     NVMADRL = (bAdd & 0xFF);
 14756  128A  0020               	movlb	0	; select bank0
 14757  128B  0820               	movf	DATAEE_ReadByte@bAdd,w
 14758  128C  0030               	movlb	16	; select bank16
 14759  128D  009A               	movwf	26	;volatile
 14760  128E                     l5440:
 14761                           
 14762                           ;mcc_generated_files/memory.c: 206:     NVMCON1bits.NVMREGS = 1;
 14763  128E  171E               	bsf	30,6	;volsfr
 14764  128F                     l5442:
 14765                           
 14766                           ;mcc_generated_files/memory.c: 207:     NVMCON1bits.RD = 1;
 14767  128F  141E               	bsf	30,0	;volsfr
 14768  1290                     l5444:
 14769                           
 14770                           ;mcc_generated_files/memory.c: 208:     __nop();
 14771  1290  0000               	nop
 14772  1291                     l5446:
 14773                           
 14774                           ;mcc_generated_files/memory.c: 209:     __nop();
 14775  1291  0000               	nop
 14776  1292                     l5448:
 14777                           
 14778                           ;mcc_generated_files/memory.c: 211:     NVMCON1|=0x80;
 14779  1292  0030               	movlb	16	; select bank16
 14780  1293  179E               	bsf	30,7	;volsfr
 14781  1294                     l5450:
 14782                           
 14783                           ;mcc_generated_files/memory.c: 213:     return (NVMDATL);
 14784  1294  081C               	movf	28,w	;volatile
 14785  1295                     l781:
 14786  1295  0008               	return
 14787  1296                     __end_of_DATAEE_ReadByte:
 14788                           
 14789                           	psect	text22
 14790  14D0                     __ptext22:	
 14791 ;; *************** function _initializeREG *****************
 14792 ;; Defined at:
 14793 ;;		line 106 in file "main.c"
 14794 ;; Parameters:    Size  Location     Type
 14795 ;;		None
 14796 ;; Auto vars:     Size  Location     Type
 14797 ;;		None
 14798 ;; Return value:  Size  Location     Type
 14799 ;;                  1    wreg      void 
 14800 ;; Registers used:
 14801 ;;		wreg, status,2, status,0, pclath, cstack
 14802 ;; Tracked objects:
 14803 ;;		On entry : 0/0
 14804 ;;		On exit  : 0/0
 14805 ;;		Unchanged: 0/0
 14806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14809 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14810 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14811 ;;Total ram usage:        1 bytes
 14812 ;; Hardware stack levels used: 1
 14813 ;; Hardware stack levels required when called: 8
 14814 ;; This function calls:
 14815 ;;		_DATAEE_WriteByte
 14816 ;; This function is called by:
 14817 ;;		_main
 14818 ;; This function uses a non-reentrant model
 14819 ;;
 14820                           
 14821                           
 14822                           ;psect for function _initializeREG
 14823  14D0                     _initializeREG:
 14824  14D0                     l5704:	
 14825                           ;incstack = 0
 14826                           ; Regs used in _initializeREG: [wreg+status,2+status,0+pclath+cstack]
 14827                           
 14828                           
 14829                           ;main.c: 108:     DATAEE_WriteByte(0x7053,(uint8_t) 255);
 14830  14D0  3053               	movlw	83
 14831  14D1  0020               	movlb	0	; select bank0
 14832  14D2  00A0               	movwf	DATAEE_WriteByte@bAdd
 14833  14D3  3070               	movlw	112
 14834  14D4  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 14835  14D5  30FF               	movlw	255
 14836  14D6  00A4               	movwf	??_initializeREG
 14837  14D7  0824               	movf	??_initializeREG,w
 14838  14D8  00A2               	movwf	DATAEE_WriteByte@bData
 14839  14D9  3188  2004  3194   	fcall	_DATAEE_WriteByte
 14840                           
 14841                           ;main.c: 109:     DATAEE_WriteByte(0x7054,(uint8_t) 0);
 14842  14DC  3054               	movlw	84
 14843  14DD  0020               	movlb	0	; select bank0
 14844  14DE  00A0               	movwf	DATAEE_WriteByte@bAdd
 14845  14DF  3070               	movlw	112
 14846  14E0  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 14847  14E1  01A2               	clrf	DATAEE_WriteByte@bData
 14848  14E2  3188  2004  3194   	fcall	_DATAEE_WriteByte
 14849                           
 14850                           ;main.c: 110:     DATAEE_WriteByte(0x7055 + 2,(uint8_t) 255);
 14851  14E5  3057               	movlw	87
 14852  14E6  0020               	movlb	0	; select bank0
 14853  14E7  00A0               	movwf	DATAEE_WriteByte@bAdd
 14854  14E8  3070               	movlw	112
 14855  14E9  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 14856  14EA  30FF               	movlw	255
 14857  14EB  00A4               	movwf	??_initializeREG
 14858  14EC  0824               	movf	??_initializeREG,w
 14859  14ED  00A2               	movwf	DATAEE_WriteByte@bData
 14860  14EE  3188  2004  3194   	fcall	_DATAEE_WriteByte
 14861                           
 14862                           ;main.c: 111:     DATAEE_WriteByte(0x7056 + 3,(uint8_t) 0);
 14863  14F1  3059               	movlw	89
 14864  14F2  0020               	movlb	0	; select bank0
 14865  14F3  00A0               	movwf	DATAEE_WriteByte@bAdd
 14866  14F4  3070               	movlw	112
 14867  14F5  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 14868  14F6  01A2               	clrf	DATAEE_WriteByte@bData
 14869  14F7  3188  2004  3194   	fcall	_DATAEE_WriteByte
 14870  14FA                     l1422:
 14871  14FA  0008               	return
 14872  14FB                     __end_of_initializeREG:
 14873                           
 14874                           	psect	text23
 14875  08AB                     __ptext23:	
 14876 ;; *************** function _initializeEPROM *****************
 14877 ;; Defined at:
 14878 ;;		line 34 in file "EPROMlib.c"
 14879 ;; Parameters:    Size  Location     Type
 14880 ;;		None
 14881 ;; Auto vars:     Size  Location     Type
 14882 ;;		None
 14883 ;; Return value:  Size  Location     Type
 14884 ;;                  1    wreg      void 
 14885 ;; Registers used:
 14886 ;;		wreg, status,2, status,0, pclath, cstack
 14887 ;; Tracked objects:
 14888 ;;		On entry : 0/0
 14889 ;;		On exit  : 0/0
 14890 ;;		Unchanged: 0/0
 14891 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14893 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14894 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14895 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14896 ;;Total ram usage:        1 bytes
 14897 ;; Hardware stack levels used: 1
 14898 ;; Hardware stack levels required when called: 8
 14899 ;; This function calls:
 14900 ;;		_DATAEE_WriteByte
 14901 ;; This function is called by:
 14902 ;;		_main
 14903 ;; This function uses a non-reentrant model
 14904 ;;
 14905                           
 14906                           
 14907                           ;psect for function _initializeEPROM
 14908  08AB                     _initializeEPROM:
 14909  08AB                     l5706:	
 14910                           ;incstack = 0
 14911                           ; Regs used in _initializeEPROM: [wreg+status,2+status,0+pclath+cstack]
 14912                           
 14913                           
 14914                           ;EPROMlib.c: 35:     DATAEE_WriteByte(0x7099,(uint8_t) 0xAA);
 14915  08AB  3099               	movlw	153
 14916  08AC  0020               	movlb	0	; select bank0
 14917  08AD  00A0               	movwf	DATAEE_WriteByte@bAdd
 14918  08AE  3070               	movlw	112
 14919  08AF  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 14920  08B0  30AA               	movlw	170
 14921  08B1  00A4               	movwf	??_initializeEPROM
 14922  08B2  0824               	movf	??_initializeEPROM,w
 14923  08B3  00A2               	movwf	DATAEE_WriteByte@bData
 14924  08B4  3188  2004  3188   	fcall	_DATAEE_WriteByte
 14925                           
 14926                           ;EPROMlib.c: 36:     DATAEE_WriteByte(0x7099 + 1,(uint8_t) 0xA);
 14927  08B7  309A               	movlw	154
 14928  08B8  0020               	movlb	0	; select bank0
 14929  08B9  00A0               	movwf	DATAEE_WriteByte@bAdd
 14930  08BA  3070               	movlw	112
 14931  08BB  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 14932  08BC  300A               	movlw	10
 14933  08BD  00A4               	movwf	??_initializeEPROM
 14934  08BE  0824               	movf	??_initializeEPROM,w
 14935  08BF  00A2               	movwf	DATAEE_WriteByte@bData
 14936  08C0  3188  2004  3188   	fcall	_DATAEE_WriteByte
 14937                           
 14938                           ;EPROMlib.c: 37:     DATAEE_WriteByte(0x7099 + 2,(uint8_t) 0x0);
 14939  08C3  309B               	movlw	155
 14940  08C4  0020               	movlb	0	; select bank0
 14941  08C5  00A0               	movwf	DATAEE_WriteByte@bAdd
 14942  08C6  3070               	movlw	112
 14943  08C7  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 14944  08C8  01A2               	clrf	DATAEE_WriteByte@bData
 14945  08C9  3188  2004  3188   	fcall	_DATAEE_WriteByte
 14946                           
 14947                           ;EPROMlib.c: 38:     DATAEE_WriteByte(0x7099 + 3,(uint8_t) 0x0);
 14948  08CC  309C               	movlw	156
 14949  08CD  0020               	movlb	0	; select bank0
 14950  08CE  00A0               	movwf	DATAEE_WriteByte@bAdd
 14951  08CF  3070               	movlw	112
 14952  08D0  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 14953  08D1  01A2               	clrf	DATAEE_WriteByte@bData
 14954  08D2  3188  2004  3188   	fcall	_DATAEE_WriteByte
 14955                           
 14956                           ;EPROMlib.c: 39:     DATAEE_WriteByte(0x7099 + 4,(uint8_t) 0x0);
 14957  08D5  309D               	movlw	157
 14958  08D6  0020               	movlb	0	; select bank0
 14959  08D7  00A0               	movwf	DATAEE_WriteByte@bAdd
 14960  08D8  3070               	movlw	112
 14961  08D9  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 14962  08DA  01A2               	clrf	DATAEE_WriteByte@bData
 14963  08DB  3188  2004  3188   	fcall	_DATAEE_WriteByte
 14964                           
 14965                           ;EPROMlib.c: 40:     DATAEE_WriteByte(0x7099 + 5,(uint8_t) 0x5);
 14966  08DE  309E               	movlw	158
 14967  08DF  0020               	movlb	0	; select bank0
 14968  08E0  00A0               	movwf	DATAEE_WriteByte@bAdd
 14969  08E1  3070               	movlw	112
 14970  08E2  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 14971  08E3  3005               	movlw	5
 14972  08E4  00A4               	movwf	??_initializeEPROM
 14973  08E5  0824               	movf	??_initializeEPROM,w
 14974  08E6  00A2               	movwf	DATAEE_WriteByte@bData
 14975  08E7  3188  2004  3188   	fcall	_DATAEE_WriteByte
 14976                           
 14977                           ;EPROMlib.c: 41:     DATAEE_WriteByte(0x7099 + 6,(uint8_t) 0x3);
 14978  08EA  309F               	movlw	159
 14979  08EB  0020               	movlb	0	; select bank0
 14980  08EC  00A0               	movwf	DATAEE_WriteByte@bAdd
 14981  08ED  3070               	movlw	112
 14982  08EE  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 14983  08EF  3003               	movlw	3
 14984  08F0  00A4               	movwf	??_initializeEPROM
 14985  08F1  0824               	movf	??_initializeEPROM,w
 14986  08F2  00A2               	movwf	DATAEE_WriteByte@bData
 14987  08F3  3188  2004  3188   	fcall	_DATAEE_WriteByte
 14988                           
 14989                           ;EPROMlib.c: 42:     DATAEE_WriteByte(0x7099 + 7,(uint8_t) 0x19);
 14990  08F6  30A0               	movlw	160
 14991  08F7  0020               	movlb	0	; select bank0
 14992  08F8  00A0               	movwf	DATAEE_WriteByte@bAdd
 14993  08F9  3070               	movlw	112
 14994  08FA  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 14995  08FB  3019               	movlw	25
 14996  08FC  00A4               	movwf	??_initializeEPROM
 14997  08FD  0824               	movf	??_initializeEPROM,w
 14998  08FE  00A2               	movwf	DATAEE_WriteByte@bData
 14999  08FF  3188  2004  3188   	fcall	_DATAEE_WriteByte
 15000                           
 15001                           ;EPROMlib.c: 43:     DATAEE_WriteByte(0x7099 + 8,(uint8_t) 0x2);
 15002  0902  30A1               	movlw	161
 15003  0903  0020               	movlb	0	; select bank0
 15004  0904  00A0               	movwf	DATAEE_WriteByte@bAdd
 15005  0905  3070               	movlw	112
 15006  0906  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 15007  0907  3002               	movlw	2
 15008  0908  00A4               	movwf	??_initializeEPROM
 15009  0909  0824               	movf	??_initializeEPROM,w
 15010  090A  00A2               	movwf	DATAEE_WriteByte@bData
 15011  090B  3188  2004  3188   	fcall	_DATAEE_WriteByte
 15012                           
 15013                           ;EPROMlib.c: 44:     DATAEE_WriteByte(0x7099 + 9,(uint8_t) 0x0);
 15014  090E  30A2               	movlw	162
 15015  090F  0020               	movlb	0	; select bank0
 15016  0910  00A0               	movwf	DATAEE_WriteByte@bAdd
 15017  0911  3070               	movlw	112
 15018  0912  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 15019  0913  01A2               	clrf	DATAEE_WriteByte@bData
 15020  0914  3188  2004  3188   	fcall	_DATAEE_WriteByte
 15021                           
 15022                           ;EPROMlib.c: 45:     DATAEE_WriteByte(0x7099 + 10,(uint8_t) 0xC);
 15023  0917  30A3               	movlw	163
 15024  0918  0020               	movlb	0	; select bank0
 15025  0919  00A0               	movwf	DATAEE_WriteByte@bAdd
 15026  091A  3070               	movlw	112
 15027  091B  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 15028  091C  300C               	movlw	12
 15029  091D  00A4               	movwf	??_initializeEPROM
 15030  091E  0824               	movf	??_initializeEPROM,w
 15031  091F  00A2               	movwf	DATAEE_WriteByte@bData
 15032  0920  3188  2004  3188   	fcall	_DATAEE_WriteByte
 15033                           
 15034                           ;EPROMlib.c: 46:     DATAEE_WriteByte(0x7099 + 11,(uint8_t) 0x0);
 15035  0923  30A4               	movlw	164
 15036  0924  0020               	movlb	0	; select bank0
 15037  0925  00A0               	movwf	DATAEE_WriteByte@bAdd
 15038  0926  3070               	movlw	112
 15039  0927  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 15040  0928  01A2               	clrf	DATAEE_WriteByte@bData
 15041  0929  3188  2004  3188   	fcall	_DATAEE_WriteByte
 15042                           
 15043                           ;EPROMlib.c: 47:     DATAEE_WriteByte(0x7099 + 12,(uint8_t) 0xE3);
 15044  092C  30A5               	movlw	165
 15045  092D  0020               	movlb	0	; select bank0
 15046  092E  00A0               	movwf	DATAEE_WriteByte@bAdd
 15047  092F  3070               	movlw	112
 15048  0930  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 15049  0931  30E3               	movlw	227
 15050  0932  00A4               	movwf	??_initializeEPROM
 15051  0933  0824               	movf	??_initializeEPROM,w
 15052  0934  00A2               	movwf	DATAEE_WriteByte@bData
 15053  0935  3188  2004  3188   	fcall	_DATAEE_WriteByte
 15054  0938                     l1515:
 15055  0938  0008               	return
 15056  0939                     __end_of_initializeEPROM:
 15057                           
 15058                           	psect	text24
 15059  0804                     __ptext24:	
 15060 ;; *************** function _DATAEE_WriteByte *****************
 15061 ;; Defined at:
 15062 ;;		line 180 in file "mcc_generated_files/memory.c"
 15063 ;; Parameters:    Size  Location     Type
 15064 ;;  bAdd            2    0[BANK0 ] unsigned short 
 15065 ;;  bData           1    2[BANK0 ] unsigned char 
 15066 ;; Auto vars:     Size  Location     Type
 15067 ;;  GIEBitValue     1    3[BANK0 ] unsigned char 
 15068 ;; Return value:  Size  Location     Type
 15069 ;;                  1    wreg      void 
 15070 ;; Registers used:
 15071 ;;		wreg, status,2, status,0
 15072 ;; Tracked objects:
 15073 ;;		On entry : 0/0
 15074 ;;		On exit  : 0/0
 15075 ;;		Unchanged: 0/0
 15076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15077 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15078 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15079 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15080 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15081 ;;Total ram usage:        4 bytes
 15082 ;; Hardware stack levels used: 1
 15083 ;; Hardware stack levels required when called: 7
 15084 ;; This function calls:
 15085 ;;		Nothing
 15086 ;; This function is called by:
 15087 ;;		_initializeREG
 15088 ;;		_initializeEPROM
 15089 ;;		_storeEPROMBuild
 15090 ;; This function uses a non-reentrant model
 15091 ;;
 15092                           
 15093                           
 15094                           ;psect for function _DATAEE_WriteByte
 15095  0804                     _DATAEE_WriteByte:
 15096  0804                     l5416:	
 15097                           ;incstack = 0
 15098                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 15099                           
 15100                           
 15101                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
 15102  0804  3000               	movlw	0
 15103  0805  1B8B               	btfsc	11,7	;volatile
 15104  0806  3001               	movlw	1
 15105  0807  0020               	movlb	0	; select bank0
 15106  0808  00A3               	movwf	DATAEE_WriteByte@GIEBitValue
 15107                           
 15108                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
 15109  0809  0821               	movf	DATAEE_WriteByte@bAdd+1,w
 15110  080A  0030               	movlb	16	; select bank16
 15111  080B  009B               	movwf	27	;volatile
 15112  080C                     l5418:
 15113                           
 15114                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
 15115  080C  0020               	movlb	0	; select bank0
 15116  080D  0820               	movf	DATAEE_WriteByte@bAdd,w
 15117  080E  0030               	movlb	16	; select bank16
 15118  080F  009A               	movwf	26	;volatile
 15119  0810                     l5420:
 15120                           
 15121                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
 15122  0810  0020               	movlb	0	; select bank0
 15123  0811  0822               	movf	DATAEE_WriteByte@bData,w
 15124  0812  0030               	movlb	16	; select bank16
 15125  0813  009C               	movwf	28	;volatile
 15126  0814                     l5422:
 15127                           
 15128                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
 15129  0814  171E               	bsf	30,6	;volsfr
 15130  0815                     l5424:
 15131                           
 15132                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
 15133  0815  151E               	bsf	30,2	;volsfr
 15134  0816                     l5426:
 15135                           
 15136                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
 15137  0816  138B               	bcf	11,7	;volatile
 15138  0817                     l5428:
 15139                           
 15140                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
 15141  0817  3055               	movlw	85
 15142  0818  009F               	movwf	31	;volsfr
 15143  0819                     l5430:
 15144                           
 15145                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
 15146  0819  30AA               	movlw	170
 15147  081A  009F               	movwf	31	;volsfr
 15148  081B                     l5432:
 15149                           
 15150                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
 15151  081B  149E               	bsf	30,1	;volsfr
 15152  081C                     l775:	
 15153                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
 15154                           
 15155                           
 15156                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
 15157  081C  189E               	btfsc	30,1	;volsfr
 15158  081D  281F               	goto	u4601
 15159  081E  2820               	goto	u4600
 15160  081F                     u4601:
 15161  081F  281C               	goto	l775
 15162  0820                     u4600:
 15163  0820                     l777:
 15164                           
 15165                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
 15166  0820  111E               	bcf	30,2	;volsfr
 15167  0821                     l5434:
 15168                           
 15169                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
 15170  0821  0020               	movlb	0	; select bank0
 15171  0822  0C23               	rrf	DATAEE_WriteByte@GIEBitValue,w
 15172  0823  1C03               	skipc
 15173  0824  138B               	bcf	11,7	;volatile
 15174  0825  1803               	skipnc
 15175  0826  178B               	bsf	11,7	;volatile
 15176  0827                     l778:
 15177  0827  0008               	return
 15178  0828                     __end_of_DATAEE_WriteByte:
 15179                           
 15180                           	psect	text25
 15181  1310                     __ptext25:	
 15182 ;; *************** function _SYSTEM_Initialize *****************
 15183 ;; Defined at:
 15184 ;;		line 50 in file "mcc_generated_files/mcc.c"
 15185 ;; Parameters:    Size  Location     Type
 15186 ;;		None
 15187 ;; Auto vars:     Size  Location     Type
 15188 ;;		None
 15189 ;; Return value:  Size  Location     Type
 15190 ;;                  1    wreg      void 
 15191 ;; Registers used:
 15192 ;;		wreg, status,2, status,0, pclath, cstack
 15193 ;; Tracked objects:
 15194 ;;		On entry : 0/0
 15195 ;;		On exit  : 0/0
 15196 ;;		Unchanged: 0/0
 15197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15198 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15199 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15201 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15202 ;;Total ram usage:        0 bytes
 15203 ;; Hardware stack levels used: 1
 15204 ;; Hardware stack levels required when called: 9
 15205 ;; This function calls:
 15206 ;;		_ADCC_Initialize
 15207 ;;		_I2C1_Initialize
 15208 ;;		_OSCILLATOR_Initialize
 15209 ;;		_PIN_MANAGER_Initialize
 15210 ;;		_PMD_Initialize
 15211 ;;		_PWM6_Initialize
 15212 ;;		_TMR1_Initialize
 15213 ;;		_TMR2_Initialize
 15214 ;; This function is called by:
 15215 ;;		_main
 15216 ;; This function uses a non-reentrant model
 15217 ;;
 15218                           
 15219                           
 15220                           ;psect for function _SYSTEM_Initialize
 15221  1310                     _SYSTEM_Initialize:
 15222  1310                     l5596:	
 15223                           ;incstack = 0
 15224                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15225                           
 15226                           
 15227                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 15228  1310  3191  21EF  3193   	fcall	_PMD_Initialize
 15229  1313                     l5598:
 15230                           
 15231                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
 15232  1313  3192  221B  3193   	fcall	_I2C1_Initialize
 15233  1316                     l5600:
 15234                           
 15235                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 15236  1316  3195  2567  3193   	fcall	_PIN_MANAGER_Initialize
 15237  1319                     l5602:
 15238                           
 15239                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 15240  1319  3192  2200  3193   	fcall	_OSCILLATOR_Initialize
 15241  131C                     l5604:
 15242                           
 15243                           ;mcc_generated_files/mcc.c: 56:     PWM6_Initialize();
 15244  131C  3192  224C  3193   	fcall	_PWM6_Initialize
 15245  131F                     l5606:
 15246                           
 15247                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 15248  131F  3192  22E2  3193   	fcall	_ADCC_Initialize
 15249  1322                     l5608:
 15250                           
 15251                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 15252  1322  3192  22F9  3193   	fcall	_TMR2_Initialize
 15253  1325                     l5610:
 15254                           
 15255                           ;mcc_generated_files/mcc.c: 59:     TMR1_Initialize();
 15256  1325  3194  2441  3193   	fcall	_TMR1_Initialize
 15257  1328                     l480:
 15258  1328  0008               	return
 15259  1329                     __end_of_SYSTEM_Initialize:
 15260                           
 15261                           	psect	text26
 15262  12F9                     __ptext26:	
 15263 ;; *************** function _TMR2_Initialize *****************
 15264 ;; Defined at:
 15265 ;;		line 64 in file "mcc_generated_files/tmr2.c"
 15266 ;; Parameters:    Size  Location     Type
 15267 ;;		None
 15268 ;; Auto vars:     Size  Location     Type
 15269 ;;		None
 15270 ;; Return value:  Size  Location     Type
 15271 ;;                  1    wreg      void 
 15272 ;; Registers used:
 15273 ;;		wreg, status,2, status,0, pclath, cstack
 15274 ;; Tracked objects:
 15275 ;;		On entry : 0/0
 15276 ;;		On exit  : 0/0
 15277 ;;		Unchanged: 0/0
 15278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15283 ;;Total ram usage:        0 bytes
 15284 ;; Hardware stack levels used: 1
 15285 ;; Hardware stack levels required when called: 8
 15286 ;; This function calls:
 15287 ;;		_TMR2_SetInterruptHandler
 15288 ;; This function is called by:
 15289 ;;		_SYSTEM_Initialize
 15290 ;; This function uses a non-reentrant model
 15291 ;;
 15292                           
 15293                           
 15294                           ;psect for function _TMR2_Initialize
 15295  12F9                     _TMR2_Initialize:
 15296  12F9                     l5364:	
 15297                           ;incstack = 0
 15298                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15299                           
 15300                           
 15301                           ;mcc_generated_files/tmr2.c: 69:     T2CLKCON = 0x01;
 15302  12F9  3001               	movlw	1
 15303  12FA  0025               	movlb	5	; select bank5
 15304  12FB  0090               	movwf	16	;volatile
 15305  12FC                     l5366:
 15306                           
 15307                           ;mcc_generated_files/tmr2.c: 72:     T2HLT = 0x00;
 15308  12FC  018F               	clrf	15	;volatile
 15309  12FD                     l5368:
 15310                           
 15311                           ;mcc_generated_files/tmr2.c: 75:     T2RST = 0x00;
 15312  12FD  0191               	clrf	17	;volatile
 15313                           
 15314                           ;mcc_generated_files/tmr2.c: 78:     T2PR = 0x0C;
 15315  12FE  300C               	movlw	12
 15316  12FF  008D               	movwf	13	;volatile
 15317  1300                     l5370:
 15318                           
 15319                           ;mcc_generated_files/tmr2.c: 81:     T2TMR = 0x00;
 15320  1300  018C               	clrf	12	;volatile
 15321  1301                     l5372:
 15322                           
 15323                           ;mcc_generated_files/tmr2.c: 84:     PIR4bits.TMR2IF = 0;
 15324  1301  002E               	movlb	14	; select bank14
 15325  1302  1090               	bcf	16,1	;volatile
 15326  1303                     l5374:
 15327                           
 15328                           ;mcc_generated_files/tmr2.c: 87:     PIE4bits.TMR2IE = 1;
 15329  1303  149A               	bsf	26,1	;volatile
 15330  1304                     l5376:
 15331                           
 15332                           ;mcc_generated_files/tmr2.c: 90:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
 15333  1304  3002               	movlw	low _TMR2_DefaultInterruptHandler
 15334  1305  0020               	movlb	0	; select bank0
 15335  1306  00A0               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 15336  1307  3000               	movlw	high _TMR2_DefaultInterruptHandler
 15337  1308  00A1               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 15338  1309  3192  2212  3192   	fcall	_TMR2_SetInterruptHandler
 15339  130C                     l5378:
 15340                           
 15341                           ;mcc_generated_files/tmr2.c: 93:     T2CON = 0x80;
 15342  130C  3080               	movlw	128
 15343  130D  0025               	movlb	5	; select bank5
 15344  130E  008E               	movwf	14	;volatile
 15345  130F                     l1167:
 15346  130F  0008               	return
 15347  1310                     __end_of_TMR2_Initialize:
 15348                           
 15349                           	psect	text27
 15350  1212                     __ptext27:	
 15351 ;; *************** function _TMR2_SetInterruptHandler *****************
 15352 ;; Defined at:
 15353 ;;		line 186 in file "mcc_generated_files/tmr2.c"
 15354 ;; Parameters:    Size  Location     Type
 15355 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 15356 ;;		 -> TMR2_DefaultInterruptHandler(1), 
 15357 ;; Auto vars:     Size  Location     Type
 15358 ;;		None
 15359 ;; Return value:  Size  Location     Type
 15360 ;;                  1    wreg      void 
 15361 ;; Registers used:
 15362 ;;		wreg
 15363 ;; Tracked objects:
 15364 ;;		On entry : 0/0
 15365 ;;		On exit  : 0/0
 15366 ;;		Unchanged: 0/0
 15367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15368 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15371 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15372 ;;Total ram usage:        2 bytes
 15373 ;; Hardware stack levels used: 1
 15374 ;; Hardware stack levels required when called: 7
 15375 ;; This function calls:
 15376 ;;		Nothing
 15377 ;; This function is called by:
 15378 ;;		_TMR2_Initialize
 15379 ;; This function uses a non-reentrant model
 15380 ;;
 15381                           
 15382                           
 15383                           ;psect for function _TMR2_SetInterruptHandler
 15384  1212                     _TMR2_SetInterruptHandler:
 15385  1212                     l5026:	
 15386                           ;incstack = 0
 15387                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 15388                           
 15389                           
 15390                           ;mcc_generated_files/tmr2.c: 187:     TMR2_InterruptHandler = InterruptHandler;
 15391  1212  0020               	movlb	0	; select bank0
 15392  1213  0821               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 15393  1214  0022               	movlb	2	; select bank2
 15394  1215  00E0               	movwf	(_TMR2_InterruptHandler+1)^(0+256)
 15395  1216  0020               	movlb	0	; select bank0
 15396  1217  0820               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 15397  1218  0022               	movlb	2	; select bank2
 15398  1219  00DF               	movwf	_TMR2_InterruptHandler^(0+256)
 15399  121A                     l1213:
 15400  121A  0008               	return
 15401  121B                     __end_of_TMR2_SetInterruptHandler:
 15402                           
 15403                           	psect	text28
 15404  1441                     __ptext28:	
 15405 ;; *************** function _TMR1_Initialize *****************
 15406 ;; Defined at:
 15407 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 15408 ;; Parameters:    Size  Location     Type
 15409 ;;		None
 15410 ;; Auto vars:     Size  Location     Type
 15411 ;;		None
 15412 ;; Return value:  Size  Location     Type
 15413 ;;                  1    wreg      void 
 15414 ;; Registers used:
 15415 ;;		wreg, status,2, status,0, pclath, cstack
 15416 ;; Tracked objects:
 15417 ;;		On entry : 0/0
 15418 ;;		On exit  : 0/0
 15419 ;;		Unchanged: 0/0
 15420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15425 ;;Total ram usage:        0 bytes
 15426 ;; Hardware stack levels used: 1
 15427 ;; Hardware stack levels required when called: 8
 15428 ;; This function calls:
 15429 ;;		_TMR1_SetInterruptHandler
 15430 ;; This function is called by:
 15431 ;;		_SYSTEM_Initialize
 15432 ;; This function uses a non-reentrant model
 15433 ;;
 15434                           
 15435                           
 15436                           ;psect for function _TMR1_Initialize
 15437  1441                     _TMR1_Initialize:
 15438  1441                     l5380:	
 15439                           ;incstack = 0
 15440                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 15441                           
 15442                           
 15443                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
 15444  1441  0024               	movlb	4	; select bank4
 15445  1442  018F               	clrf	15	;volatile
 15446                           
 15447                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
 15448  1443  0190               	clrf	16	;volatile
 15449  1444                     l5382:
 15450                           
 15451                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
 15452  1444  3004               	movlw	4
 15453  1445  0091               	movwf	17	;volatile
 15454  1446                     l5384:
 15455                           
 15456                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0x86;
 15457  1446  3086               	movlw	134
 15458  1447  008D               	movwf	13	;volatile
 15459  1448                     l5386:
 15460                           
 15461                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xE8;
 15462  1448  30E8               	movlw	232
 15463  1449  008C               	movwf	12	;volatile
 15464  144A                     l5388:
 15465                           
 15466                           ;mcc_generated_files/tmr1.c: 84:     PIR4bits.TMR1IF = 0;
 15467  144A  002E               	movlb	14	; select bank14
 15468  144B  1010               	bcf	16,0	;volatile
 15469  144C                     l5390:
 15470                           
 15471                           ;mcc_generated_files/tmr1.c: 87:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 15472  144C  0024               	movlb	4	; select bank4
 15473  144D  080D               	movf	13,w	;volatile
 15474  144E  0022               	movlb	2	; select bank2
 15475  144F  00E4               	movwf	(_timer1ReloadVal+1)^(0+256)	;volatile
 15476  1450  0024               	movlb	4	; select bank4
 15477  1451  080C               	movf	12,w	;volatile
 15478  1452  0022               	movlb	2	; select bank2
 15479  1453  00E3               	movwf	_timer1ReloadVal^(0+256)	;volatile
 15480  1454                     l5392:
 15481                           
 15482                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
 15483  1454  002E               	movlb	14	; select bank14
 15484  1455  141A               	bsf	26,0	;volatile
 15485  1456                     l5394:
 15486                           
 15487                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 15488  1456  30CD               	movlw	low _TMR1_DefaultInterruptHandler
 15489  1457  0020               	movlb	0	; select bank0
 15490  1458  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 15491  1459  3011               	movlw	high _TMR1_DefaultInterruptHandler
 15492  145A  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 15493  145B  3192  2209  3194   	fcall	_TMR1_SetInterruptHandler
 15494  145E                     l5396:
 15495                           
 15496                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x01;
 15497  145E  3001               	movlw	1
 15498  145F  0024               	movlb	4	; select bank4
 15499  1460  008E               	movwf	14	;volatile
 15500  1461                     l540:
 15501  1461  0008               	return
 15502  1462                     __end_of_TMR1_Initialize:
 15503                           
 15504                           	psect	text29
 15505  1209                     __ptext29:	
 15506 ;; *************** function _TMR1_SetInterruptHandler *****************
 15507 ;; Defined at:
 15508 ;;		line 185 in file "mcc_generated_files/tmr1.c"
 15509 ;; Parameters:    Size  Location     Type
 15510 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 15511 ;;		 -> timerInterrupt(1), TMR1_DefaultInterruptHandler(1), 
 15512 ;; Auto vars:     Size  Location     Type
 15513 ;;		None
 15514 ;; Return value:  Size  Location     Type
 15515 ;;                  1    wreg      void 
 15516 ;; Registers used:
 15517 ;;		wreg
 15518 ;; Tracked objects:
 15519 ;;		On entry : 0/0
 15520 ;;		On exit  : 0/0
 15521 ;;		Unchanged: 0/0
 15522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15523 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15526 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15527 ;;Total ram usage:        2 bytes
 15528 ;; Hardware stack levels used: 1
 15529 ;; Hardware stack levels required when called: 7
 15530 ;; This function calls:
 15531 ;;		Nothing
 15532 ;; This function is called by:
 15533 ;;		_TMR1_Initialize
 15534 ;;		_main
 15535 ;; This function uses a non-reentrant model
 15536 ;;
 15537                           
 15538                           
 15539                           ;psect for function _TMR1_SetInterruptHandler
 15540  1209                     _TMR1_SetInterruptHandler:
 15541  1209                     l5018:	
 15542                           ;incstack = 0
 15543                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 15544                           
 15545                           
 15546                           ;mcc_generated_files/tmr1.c: 186:     TMR1_InterruptHandler = InterruptHandler;
 15547  1209  0020               	movlb	0	; select bank0
 15548  120A  0821               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 15549  120B  0022               	movlb	2	; select bank2
 15550  120C  00E2               	movwf	(_TMR1_InterruptHandler+1)^(0+256)
 15551  120D  0020               	movlb	0	; select bank0
 15552  120E  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 15553  120F  0022               	movlb	2	; select bank2
 15554  1210  00E1               	movwf	_TMR1_InterruptHandler^(0+256)
 15555  1211                     l573:
 15556  1211  0008               	return
 15557  1212                     __end_of_TMR1_SetInterruptHandler:
 15558                           
 15559                           	psect	text30
 15560  124C                     __ptext30:	
 15561 ;; *************** function _PWM6_Initialize *****************
 15562 ;; Defined at:
 15563 ;;		line 58 in file "mcc_generated_files/pwm6.c"
 15564 ;; Parameters:    Size  Location     Type
 15565 ;;		None
 15566 ;; Auto vars:     Size  Location     Type
 15567 ;;		None
 15568 ;; Return value:  Size  Location     Type
 15569 ;;                  1    wreg      void 
 15570 ;; Registers used:
 15571 ;;		wreg, status,2, status,0
 15572 ;; Tracked objects:
 15573 ;;		On entry : 0/0
 15574 ;;		On exit  : 0/0
 15575 ;;		Unchanged: 0/0
 15576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15578 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15580 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15581 ;;Total ram usage:        0 bytes
 15582 ;; Hardware stack levels used: 1
 15583 ;; Hardware stack levels required when called: 7
 15584 ;; This function calls:
 15585 ;;		Nothing
 15586 ;; This function is called by:
 15587 ;;		_SYSTEM_Initialize
 15588 ;;		_main
 15589 ;; This function uses a non-reentrant model
 15590 ;;
 15591                           
 15592                           
 15593                           ;psect for function _PWM6_Initialize
 15594  124C                     _PWM6_Initialize:
 15595  124C                     l5354:	
 15596                           ;incstack = 0
 15597                           ; Regs used in _PWM6_Initialize: [wreg+status,2+status,0]
 15598                           
 15599                           
 15600                           ;mcc_generated_files/pwm6.c: 62:     PWM6CON = 0x80;
 15601  124C  3080               	movlw	128
 15602  124D  0027               	movlb	7	; select bank7
 15603  124E  008E               	movwf	14	;volatile
 15604                           
 15605                           ;mcc_generated_files/pwm6.c: 65:     PWM6DCH = 0x06;
 15606  124F  3006               	movlw	6
 15607  1250  008D               	movwf	13	;volatile
 15608                           
 15609                           ;mcc_generated_files/pwm6.c: 68:     PWM6DCL = 0x40;
 15610  1251  3040               	movlw	64
 15611  1252  008C               	movwf	12	;volatile
 15612  1253                     l5356:
 15613                           
 15614                           ;mcc_generated_files/pwm6.c: 71:     CCPTMRS1bits.P6TSEL = 1;
 15615  1253  0024               	movlb	4	; select bank4
 15616  1254  081F               	movf	31,w	;volatile
 15617  1255  39F3               	andlw	-13
 15618  1256  3804               	iorlw	4
 15619  1257  009F               	movwf	31	;volatile
 15620  1258                     l1127:
 15621  1258  0008               	return
 15622  1259                     __end_of_PWM6_Initialize:
 15623                           
 15624                           	psect	text31
 15625  11EF                     __ptext31:	
 15626 ;; *************** function _PMD_Initialize *****************
 15627 ;; Defined at:
 15628 ;;		line 76 in file "mcc_generated_files/mcc.c"
 15629 ;; Parameters:    Size  Location     Type
 15630 ;;		None
 15631 ;; Auto vars:     Size  Location     Type
 15632 ;;		None
 15633 ;; Return value:  Size  Location     Type
 15634 ;;                  1    wreg      void 
 15635 ;; Registers used:
 15636 ;;		status,2
 15637 ;; Tracked objects:
 15638 ;;		On entry : 0/0
 15639 ;;		On exit  : 0/0
 15640 ;;		Unchanged: 0/0
 15641 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15646 ;;Total ram usage:        0 bytes
 15647 ;; Hardware stack levels used: 1
 15648 ;; Hardware stack levels required when called: 7
 15649 ;; This function calls:
 15650 ;;		Nothing
 15651 ;; This function is called by:
 15652 ;;		_SYSTEM_Initialize
 15653 ;; This function uses a non-reentrant model
 15654 ;;
 15655                           
 15656                           
 15657                           ;psect for function _PMD_Initialize
 15658  11EF                     _PMD_Initialize:
 15659  11EF                     l5336:	
 15660                           ;incstack = 0
 15661                           ; Regs used in _PMD_Initialize: [status,2]
 15662                           
 15663                           
 15664                           ;mcc_generated_files/mcc.c: 79:     PMD0 = 0x00;
 15665  11EF  002F               	movlb	15	; select bank15
 15666  11F0  0196               	clrf	22	;volatile
 15667                           
 15668                           ;mcc_generated_files/mcc.c: 81:     PMD1 = 0x00;
 15669  11F1  0197               	clrf	23	;volatile
 15670                           
 15671                           ;mcc_generated_files/mcc.c: 83:     PMD2 = 0x00;
 15672  11F2  0198               	clrf	24	;volatile
 15673                           
 15674                           ;mcc_generated_files/mcc.c: 85:     PMD3 = 0x00;
 15675  11F3  0199               	clrf	25	;volatile
 15676                           
 15677                           ;mcc_generated_files/mcc.c: 87:     PMD4 = 0x00;
 15678  11F4  019A               	clrf	26	;volatile
 15679                           
 15680                           ;mcc_generated_files/mcc.c: 89:     PMD5 = 0x00;
 15681  11F5  019B               	clrf	27	;volatile
 15682  11F6                     l486:
 15683  11F6  0008               	return
 15684  11F7                     __end_of_PMD_Initialize:
 15685                           
 15686                           	psect	text32
 15687  1567                     __ptext32:	
 15688 ;; *************** function _PIN_MANAGER_Initialize *****************
 15689 ;; Defined at:
 15690 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 15691 ;; Parameters:    Size  Location     Type
 15692 ;;		None
 15693 ;; Auto vars:     Size  Location     Type
 15694 ;;		None
 15695 ;; Return value:  Size  Location     Type
 15696 ;;                  1    wreg      void 
 15697 ;; Registers used:
 15698 ;;		wreg, status,2
 15699 ;; Tracked objects:
 15700 ;;		On entry : 0/0
 15701 ;;		On exit  : 0/0
 15702 ;;		Unchanged: 0/0
 15703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15708 ;;Total ram usage:        0 bytes
 15709 ;; Hardware stack levels used: 1
 15710 ;; Hardware stack levels required when called: 7
 15711 ;; This function calls:
 15712 ;;		Nothing
 15713 ;; This function is called by:
 15714 ;;		_SYSTEM_Initialize
 15715 ;; This function uses a non-reentrant model
 15716 ;;
 15717                           
 15718                           
 15719                           ;psect for function _PIN_MANAGER_Initialize
 15720  1567                     _PIN_MANAGER_Initialize:
 15721  1567                     l5286:	
 15722                           ;incstack = 0
 15723                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 15724                           
 15725                           
 15726                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 15727  1567  0020               	movlb	0	; select bank0
 15728  1568  019A               	clrf	26	;volatile
 15729                           
 15730                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 15731  1569  0199               	clrf	25	;volatile
 15732                           
 15733                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 15734  156A  0196               	clrf	22	;volatile
 15735                           
 15736                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 15737  156B  0197               	clrf	23	;volatile
 15738                           
 15739                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 15740  156C  0198               	clrf	24	;volatile
 15741  156D                     l5288:
 15742                           
 15743                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 15744  156D  3007               	movlw	7
 15745  156E  0095               	movwf	21	;volatile
 15746  156F                     l5290:
 15747                           
 15748                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x4F;
 15749  156F  304F               	movlw	79
 15750  1570  0091               	movwf	17	;volatile
 15751  1571                     l5292:
 15752                           
 15753                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 15754  1571  30FF               	movlw	255
 15755  1572  0092               	movwf	18	;volatile
 15756  1573                     l5294:
 15757                           
 15758                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 15759  1573  30FF               	movlw	255
 15760  1574  0093               	movwf	19	;volatile
 15761  1575                     l5296:
 15762                           
 15763                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 15764  1575  30FF               	movlw	255
 15765  1576  0094               	movwf	20	;volatile
 15766  1577                     l5298:
 15767                           
 15768                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
 15769  1577  30FF               	movlw	255
 15770  1578  003E               	movlb	30	; select bank30
 15771  1579  00D9               	movwf	89	;volatile
 15772  157A                     l5300:
 15773                           
 15774                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xC7;
 15775  157A  30C7               	movlw	199
 15776  157B  00CE               	movwf	78	;volatile
 15777  157C                     l5302:
 15778                           
 15779                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xEF;
 15780  157C  30EF               	movlw	239
 15781  157D  00C3               	movwf	67	;volatile
 15782  157E                     l5304:
 15783                           
 15784                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 15785  157E  3007               	movlw	7
 15786  157F  00E4               	movwf	100	;volatile
 15787  1580                     l5306:
 15788                           
 15789                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x0F;
 15790  1580  300F               	movlw	15
 15791  1581  00B8               	movwf	56	;volatile
 15792                           
 15793                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 15794  1582  01DA               	clrf	90	;volatile
 15795                           
 15796                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 15797  1583  01E5               	clrf	101	;volatile
 15798                           
 15799                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 15800  1584  01C4               	clrf	68	;volatile
 15801                           
 15802                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 15803  1585  01B9               	clrf	57	;volatile
 15804                           
 15805                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 15806  1586  01CF               	clrf	79	;volatile
 15807                           
 15808                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 15809  1587  01E6               	clrf	102	;volatile
 15810                           
 15811                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 15812  1588  01BA               	clrf	58	;volatile
 15813                           
 15814                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 15815  1589  01C5               	clrf	69	;volatile
 15816                           
 15817                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 15818  158A  01D0               	clrf	80	;volatile
 15819                           
 15820                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 15821  158B  01DB               	clrf	91	;volatile
 15822  158C                     l5308:
 15823                           
 15824                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 15825  158C  30FF               	movlw	255
 15826  158D  00BB               	movwf	59	;volatile
 15827  158E                     l5310:
 15828                           
 15829                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 15830  158E  30FF               	movlw	255
 15831  158F  00C6               	movwf	70	;volatile
 15832  1590                     l5312:
 15833                           
 15834                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 15835  1590  30FF               	movlw	255
 15836  1591  00D1               	movwf	81	;volatile
 15837  1592                     l5314:
 15838                           
 15839                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 15840  1592  30FF               	movlw	255
 15841  1593  00DC               	movwf	92	;volatile
 15842  1594                     l5316:
 15843                           
 15844                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 15845  1594  3007               	movlw	7
 15846  1595  00E7               	movwf	103	;volatile
 15847  1596                     l5318:
 15848                           
 15849                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 15850  1596  30FF               	movlw	255
 15851  1597  00BC               	movwf	60	;volatile
 15852  1598                     l5320:
 15853                           
 15854                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 15855  1598  30FF               	movlw	255
 15856  1599  00C7               	movwf	71	;volatile
 15857  159A                     l5322:
 15858                           
 15859                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 15860  159A  30FF               	movlw	255
 15861  159B  00D2               	movwf	82	;volatile
 15862  159C                     l5324:
 15863                           
 15864                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 15865  159C  30FF               	movlw	255
 15866  159D  00DD               	movwf	93	;volatile
 15867  159E                     l5326:
 15868                           
 15869                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
 15870  159E  3007               	movlw	7
 15871  159F  00E8               	movwf	104	;volatile
 15872  15A0                     l5328:
 15873                           
 15874                           ;mcc_generated_files/pin_manager.c: 127:     SSP1CLKPPS = 0x13;
 15875  15A0  3013               	movlw	19
 15876  15A1  003D               	movlb	29	; select bank29
 15877  15A2  00C5               	movwf	69	;volatile
 15878  15A3                     l5330:
 15879                           
 15880                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x14;
 15881  15A3  3014               	movlw	20
 15882  15A4  003E               	movlb	30	; select bank30
 15883  15A5  00A3               	movwf	35	;volatile
 15884  15A6                     l5332:
 15885                           
 15886                           ;mcc_generated_files/pin_manager.c: 129:     RC4PPS = 0x15;
 15887  15A6  3015               	movlw	21
 15888  15A7  00A4               	movwf	36	;volatile
 15889  15A8                     l5334:
 15890                           
 15891                           ;mcc_generated_files/pin_manager.c: 130:     SSP1DATPPS = 0x14;
 15892  15A8  3014               	movlw	20
 15893  15A9  003D               	movlb	29	; select bank29
 15894  15AA  00C6               	movwf	70	;volatile
 15895  15AB                     l436:
 15896  15AB  0008               	return
 15897  15AC                     __end_of_PIN_MANAGER_Initialize:
 15898                           
 15899                           	psect	text33
 15900  1200                     __ptext33:	
 15901 ;; *************** function _OSCILLATOR_Initialize *****************
 15902 ;; Defined at:
 15903 ;;		line 62 in file "mcc_generated_files/mcc.c"
 15904 ;; Parameters:    Size  Location     Type
 15905 ;;		None
 15906 ;; Auto vars:     Size  Location     Type
 15907 ;;		None
 15908 ;; Return value:  Size  Location     Type
 15909 ;;                  1    wreg      void 
 15910 ;; Registers used:
 15911 ;;		wreg, status,2
 15912 ;; Tracked objects:
 15913 ;;		On entry : 0/0
 15914 ;;		On exit  : 0/0
 15915 ;;		Unchanged: 0/0
 15916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15921 ;;Total ram usage:        0 bytes
 15922 ;; Hardware stack levels used: 1
 15923 ;; Hardware stack levels required when called: 7
 15924 ;; This function calls:
 15925 ;;		Nothing
 15926 ;; This function is called by:
 15927 ;;		_SYSTEM_Initialize
 15928 ;; This function uses a non-reentrant model
 15929 ;;
 15930                           
 15931                           
 15932                           ;psect for function _OSCILLATOR_Initialize
 15933  1200                     _OSCILLATOR_Initialize:
 15934  1200                     l5346:	
 15935                           ;incstack = 0
 15936                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 15937                           
 15938                           
 15939                           ;mcc_generated_files/mcc.c: 65:     OSCCON1 = 0x62;
 15940  1200  3062               	movlw	98
 15941  1201  0031               	movlb	17	; select bank17
 15942  1202  008D               	movwf	13	;volatile
 15943  1203                     l5348:
 15944                           
 15945                           ;mcc_generated_files/mcc.c: 67:     OSCCON3 = 0x00;
 15946  1203  018F               	clrf	15	;volatile
 15947  1204                     l5350:
 15948                           
 15949                           ;mcc_generated_files/mcc.c: 69:     OSCEN = 0x00;
 15950  1204  0191               	clrf	17	;volatile
 15951                           
 15952                           ;mcc_generated_files/mcc.c: 71:     OSCFRQ = 0x02;
 15953  1205  3002               	movlw	2
 15954  1206  0093               	movwf	19	;volatile
 15955  1207                     l5352:
 15956                           
 15957                           ;mcc_generated_files/mcc.c: 73:     OSCTUNE = 0x00;
 15958  1207  0192               	clrf	18	;volatile
 15959  1208                     l483:
 15960  1208  0008               	return
 15961  1209                     __end_of_OSCILLATOR_Initialize:
 15962                           
 15963                           	psect	text34
 15964  121B                     __ptext34:	
 15965 ;; *************** function _I2C1_Initialize *****************
 15966 ;; Defined at:
 15967 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 15968 ;; Parameters:    Size  Location     Type
 15969 ;;		None
 15970 ;; Auto vars:     Size  Location     Type
 15971 ;;		None
 15972 ;; Return value:  Size  Location     Type
 15973 ;;                  1    wreg      void 
 15974 ;; Registers used:
 15975 ;;		wreg, status,2
 15976 ;; Tracked objects:
 15977 ;;		On entry : 0/0
 15978 ;;		On exit  : 0/0
 15979 ;;		Unchanged: 0/0
 15980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15985 ;;Total ram usage:        0 bytes
 15986 ;; Hardware stack levels used: 1
 15987 ;; Hardware stack levels required when called: 7
 15988 ;; This function calls:
 15989 ;;		Nothing
 15990 ;; This function is called by:
 15991 ;;		_SYSTEM_Initialize
 15992 ;; This function uses a non-reentrant model
 15993 ;;
 15994                           
 15995                           
 15996                           ;psect for function _I2C1_Initialize
 15997  121B                     _I2C1_Initialize:
 15998  121B                     l5338:	
 15999                           ;incstack = 0
 16000                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 16001                           
 16002                           
 16003                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x80;
 16004  121B  3080               	movlw	128
 16005  121C  0023               	movlb	3	; select bank3
 16006  121D  008F               	movwf	15	;volatile
 16007                           
 16008                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 16009  121E  3008               	movlw	8
 16010  121F  0090               	movwf	16	;volatile
 16011  1220                     l5340:
 16012                           
 16013                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 16014  1220  0191               	clrf	17	;volatile
 16015  1221                     l5342:
 16016                           
 16017                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x03;
 16018  1221  3003               	movlw	3
 16019  1222  008D               	movwf	13	;volatile
 16020  1223                     l5344:
 16021                           
 16022                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 16023  1223  1290               	bcf	16,5	;volatile
 16024  1224                     l886:
 16025  1224  0008               	return
 16026  1225                     __end_of_I2C1_Initialize:
 16027                           
 16028                           	psect	text35
 16029  12E2                     __ptext35:	
 16030 ;; *************** function _ADCC_Initialize *****************
 16031 ;; Defined at:
 16032 ;;		line 63 in file "mcc_generated_files/adcc.c"
 16033 ;; Parameters:    Size  Location     Type
 16034 ;;		None
 16035 ;; Auto vars:     Size  Location     Type
 16036 ;;		None
 16037 ;; Return value:  Size  Location     Type
 16038 ;;                  1    wreg      void 
 16039 ;; Registers used:
 16040 ;;		wreg, status,2
 16041 ;; Tracked objects:
 16042 ;;		On entry : 0/0
 16043 ;;		On exit  : 0/0
 16044 ;;		Unchanged: 0/0
 16045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16050 ;;Total ram usage:        0 bytes
 16051 ;; Hardware stack levels used: 1
 16052 ;; Hardware stack levels required when called: 7
 16053 ;; This function calls:
 16054 ;;		Nothing
 16055 ;; This function is called by:
 16056 ;;		_SYSTEM_Initialize
 16057 ;; This function uses a non-reentrant model
 16058 ;;
 16059                           
 16060                           
 16061                           ;psect for function _ADCC_Initialize
 16062  12E2                     _ADCC_Initialize:
 16063  12E2                     l5358:	
 16064                           ;incstack = 0
 16065                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 16066                           
 16067                           
 16068                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
 16069  12E2  0022               	movlb	2	; select bank2
 16070  12E3  018E               	clrf	14	;volatile
 16071                           
 16072                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
 16073  12E4  018F               	clrf	15	;volatile
 16074                           
 16075                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 16076  12E5  0190               	clrf	16	;volatile
 16077                           
 16078                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
 16079  12E6  0191               	clrf	17	;volatile
 16080                           
 16081                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 16082  12E7  0192               	clrf	18	;volatile
 16083                           
 16084                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 16085  12E8  0193               	clrf	19	;volatile
 16086                           
 16087                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
 16088  12E9  018D               	clrf	13	;volatile
 16089                           
 16090                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
 16091  12EA  0021               	movlb	1	; select bank1
 16092  12EB  019E               	clrf	30	;volatile
 16093                           
 16094                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
 16095  12EC  019B               	clrf	27	;volatile
 16096                           
 16097                           ;mcc_generated_files/adcc.c: 85:     ADPRE = 0x00;
 16098  12ED  019C               	clrf	28	;volatile
 16099                           
 16100                           ;mcc_generated_files/adcc.c: 87:     ADCON1 = 0x00;
 16101  12EE  0194               	clrf	20	;volatile
 16102                           
 16103                           ;mcc_generated_files/adcc.c: 89:     ADCON2 = 0x00;
 16104  12EF  0195               	clrf	21	;volatile
 16105                           
 16106                           ;mcc_generated_files/adcc.c: 91:     ADCON3 = 0x00;
 16107  12F0  0196               	clrf	22	;volatile
 16108                           
 16109                           ;mcc_generated_files/adcc.c: 93:     ADSTAT = 0x00;
 16110  12F1  0197               	clrf	23	;volatile
 16111                           
 16112                           ;mcc_generated_files/adcc.c: 95:     ADREF = 0x00;
 16113  12F2  019A               	clrf	26	;volatile
 16114                           
 16115                           ;mcc_generated_files/adcc.c: 97:     ADACT = 0x00;
 16116  12F3  0199               	clrf	25	;volatile
 16117                           
 16118                           ;mcc_generated_files/adcc.c: 99:     ADCLK = 0x00;
 16119  12F4  0198               	clrf	24	;volatile
 16120  12F5                     l5360:
 16121                           
 16122                           ;mcc_generated_files/adcc.c: 101:     ADCON0 = 0x84;
 16123  12F5  3084               	movlw	132
 16124  12F6  0093               	movwf	19	;volatile
 16125  12F7                     l5362:
 16126                           
 16127                           ;mcc_generated_files/adcc.c: 103:     ADACQ = 0x00;
 16128  12F7  019D               	clrf	29	;volatile
 16129  12F8                     l651:
 16130  12F8  0008               	return
 16131  12F9                     __end_of_ADCC_Initialize:
 16132                           
 16133                           	psect	text36
 16134  123F                     __ptext36:	
 16135 ;; *************** function _OpenI2C *****************
 16136 ;; Defined at:
 16137 ;;		line 26 in file "I2C/i2c.c"
 16138 ;; Parameters:    Size  Location     Type
 16139 ;;		None
 16140 ;; Auto vars:     Size  Location     Type
 16141 ;;		None
 16142 ;; Return value:  Size  Location     Type
 16143 ;;                  1    wreg      void 
 16144 ;; Registers used:
 16145 ;;		wreg, status,2
 16146 ;; Tracked objects:
 16147 ;;		On entry : 0/0
 16148 ;;		On exit  : 0/0
 16149 ;;		Unchanged: 0/0
 16150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16155 ;;Total ram usage:        0 bytes
 16156 ;; Hardware stack levels used: 1
 16157 ;; Hardware stack levels required when called: 7
 16158 ;; This function calls:
 16159 ;;		Nothing
 16160 ;; This function is called by:
 16161 ;;		_main
 16162 ;; This function uses a non-reentrant model
 16163 ;;
 16164                           
 16165                           
 16166                           ;psect for function _OpenI2C
 16167  123F                     _OpenI2C:
 16168  123F                     l5486:	
 16169                           ;incstack = 0
 16170                           ; Regs used in _OpenI2C: [wreg+status,2]
 16171                           
 16172                           
 16173                           ;I2C/i2c.c: 28:   SSP1STAT = 0x80;
 16174  123F  3080               	movlw	128
 16175  1240  0023               	movlb	3	; select bank3
 16176  1241  008F               	movwf	15	;volatile
 16177                           
 16178                           ;I2C/i2c.c: 29:   SSP1CON1 = 0x08;
 16179  1242  3008               	movlw	8
 16180  1243  0090               	movwf	16	;volatile
 16181  1244                     l5488:
 16182                           
 16183                           ;I2C/i2c.c: 30:   SSP1CON2 = 0x00;
 16184  1244  0191               	clrf	17	;volatile
 16185  1245                     l5490:
 16186                           
 16187                           ;I2C/i2c.c: 31:   SSP1ADD = 0x03;
 16188  1245  3003               	movlw	3
 16189  1246  008D               	movwf	13	;volatile
 16190  1247                     l5492:
 16191                           
 16192                           ;I2C/i2c.c: 32:   SSP1CON1bits.SSPEN = 1;
 16193  1247  1690               	bsf	16,5	;volatile
 16194  1248                     l5494:
 16195                           
 16196                           ;I2C/i2c.c: 34:   TRISCbits.TRISC3 = 1;
 16197  1248  0020               	movlb	0	; select bank0
 16198  1249  1593               	bsf	19,3	;volatile
 16199  124A                     l5496:
 16200                           
 16201                           ;I2C/i2c.c: 35:   TRISCbits.TRISC4 = 1;
 16202  124A  1613               	bsf	19,4	;volatile
 16203  124B                     l23:
 16204  124B  0008               	return
 16205  124C                     __end_of_OpenI2C:
 16206                           
 16207                           	psect	text37
 16208  1376                     __ptext37:	
 16209 ;; *************** function _LCDstr *****************
 16210 ;; Defined at:
 16211 ;;		line 112 in file "LCD/lcd.c"
 16212 ;; Parameters:    Size  Location     Type
 16213 ;;  p               2    9[BANK0 ] PTR unsigned char 
 16214 ;;		 -> STR_8(4), STR_5(15), STR_3(15), main@buf(17), 
 16215 ;;		 -> STR_1(13), 
 16216 ;; Auto vars:     Size  Location     Type
 16217 ;;  c               1   14[BANK0 ] unsigned char 
 16218 ;; Return value:  Size  Location     Type
 16219 ;;                  1    wreg      void 
 16220 ;; Registers used:
 16221 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 16222 ;; Tracked objects:
 16223 ;;		On entry : 0/0
 16224 ;;		On exit  : 0/0
 16225 ;;		Unchanged: 0/0
 16226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16227 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16228 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16229 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16230 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16231 ;;Total ram usage:        6 bytes
 16232 ;; Hardware stack levels used: 1
 16233 ;; Hardware stack levels required when called: 10
 16234 ;; This function calls:
 16235 ;;		_LCDchar
 16236 ;; This function is called by:
 16237 ;;		_main
 16238 ;; This function uses a non-reentrant model
 16239 ;;
 16240                           
 16241                           
 16242                           ;psect for function _LCDstr
 16243  1376                     _LCDstr:
 16244  1376                     l5532:	
 16245                           ;incstack = 0
 16246                           ; Regs used in _LCDstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 16247                           
 16248                           
 16249                           ;LCD/lcd.c: 112: void LCDstr(char *p);LCD/lcd.c: 113: {;LCD/lcd.c: 114:   unsigned char 
      +                          c;;LCD/lcd.c: 116:   while((c = *p++)) LCDchar(c);
 16250  1376  2B7B               	goto	l5536
 16251  1377                     l5534:
 16252  1377  082E               	movf	LCDstr@c,w
 16253  1378  3191  21F7  3193   	fcall	_LCDchar
 16254  137B                     l5536:
 16255  137B  0020               	movlb	0	; select bank0
 16256  137C  082A               	movf	LCDstr@p+1,w
 16257  137D  00AC               	movwf	??_LCDstr+1
 16258  137E  0829               	movf	LCDstr@p,w
 16259  137F  00AB               	movwf	??_LCDstr
 16260  1380  0AA9               	incf	LCDstr@p,f
 16261  1381  1903               	skipnz
 16262  1382  0AAA               	incf	LCDstr@p+1,f
 16263  1383  082B               	movf	??_LCDstr,w
 16264  1384  0084               	movwf	4
 16265  1385  082C               	movf	??_LCDstr+1,w
 16266  1386  0085               	movwf	5
 16267  1387  0800               	movf	0,w	;code access
 16268  1388  00AD               	movwf	??_LCDstr+2
 16269  1389  082D               	movf	??_LCDstr+2,w
 16270  138A  00AE               	movwf	LCDstr@c
 16271  138B  082E               	movf	LCDstr@c,w
 16272  138C  1D03               	btfss	3,2
 16273  138D  2B8F               	goto	u4631
 16274  138E  2B90               	goto	u4630
 16275  138F                     u4631:
 16276  138F  2B77               	goto	l5534
 16277  1390                     u4630:
 16278  1390                     l244:
 16279  1390  0008               	return
 16280  1391                     __end_of_LCDstr:
 16281                           
 16282                           	psect	text38
 16283  11F7                     __ptext38:	
 16284 ;; *************** function _LCDchar *****************
 16285 ;; Defined at:
 16286 ;;		line 107 in file "LCD/lcd.c"
 16287 ;; Parameters:    Size  Location     Type
 16288 ;;  c               1    wreg     unsigned char 
 16289 ;; Auto vars:     Size  Location     Type
 16290 ;;  c               1    8[BANK0 ] unsigned char 
 16291 ;; Return value:  Size  Location     Type
 16292 ;;                  1    wreg      void 
 16293 ;; Registers used:
 16294 ;;		wreg, status,2, status,0, pclath, cstack
 16295 ;; Tracked objects:
 16296 ;;		On entry : 0/0
 16297 ;;		On exit  : 0/0
 16298 ;;		Unchanged: 0/0
 16299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16301 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16303 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16304 ;;Total ram usage:        1 bytes
 16305 ;; Hardware stack levels used: 1
 16306 ;; Hardware stack levels required when called: 9
 16307 ;; This function calls:
 16308 ;;		_LCDsend2x4
 16309 ;; This function is called by:
 16310 ;;		_LCDstr
 16311 ;; This function uses a non-reentrant model
 16312 ;;
 16313                           
 16314                           
 16315                           ;psect for function _LCDchar
 16316  11F7                     _LCDchar:
 16317                           
 16318                           ;incstack = 0
 16319                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
 16320                           ;LCDchar@c stored from wreg
 16321  11F7  0020               	movlb	0	; select bank0
 16322  11F8  00A8               	movwf	LCDchar@c
 16323  11F9                     l5276:
 16324                           
 16325                           ;LCD/lcd.c: 107: void LCDchar(unsigned char c);LCD/lcd.c: 108: {;LCD/lcd.c: 109:   LCDse
      +                          nd2x4(c, 0x01);
 16326  11F9  01A2               	clrf	LCDsend2x4@mode
 16327  11FA  0AA2               	incf	LCDsend2x4@mode,f
 16328  11FB  0828               	movf	LCDchar@c,w
 16329  11FC  3189  21E8  3191   	fcall	_LCDsend2x4
 16330  11FF                     l238:
 16331  11FF  0008               	return
 16332  1200                     __end_of_LCDchar:
 16333                           
 16334                           	psect	text39
 16335  13AC                     __ptext39:	
 16336 ;; *************** function _LCDpos *****************
 16337 ;; Defined at:
 16338 ;;		line 125 in file "LCD/lcd.c"
 16339 ;; Parameters:    Size  Location     Type
 16340 ;;  l               1    wreg     unsigned char 
 16341 ;;  c               1    9[BANK0 ] unsigned char 
 16342 ;; Auto vars:     Size  Location     Type
 16343 ;;  l               1   11[BANK0 ] unsigned char 
 16344 ;;  p               1   12[BANK0 ] unsigned char 
 16345 ;; Return value:  Size  Location     Type
 16346 ;;                  1    wreg      void 
 16347 ;; Registers used:
 16348 ;;		wreg, status,2, status,0, pclath, cstack
 16349 ;; Tracked objects:
 16350 ;;		On entry : 0/0
 16351 ;;		On exit  : 0/0
 16352 ;;		Unchanged: 0/0
 16353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16354 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16355 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16356 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16357 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16358 ;;Total ram usage:        4 bytes
 16359 ;; Hardware stack levels used: 1
 16360 ;; Hardware stack levels required when called: 10
 16361 ;; This function calls:
 16362 ;;		_LCDcmd
 16363 ;; This function is called by:
 16364 ;;		_main
 16365 ;; This function uses a non-reentrant model
 16366 ;;
 16367                           
 16368                           
 16369                           ;psect for function _LCDpos
 16370  13AC                     _LCDpos:
 16371                           
 16372                           ;incstack = 0
 16373                           ; Regs used in _LCDpos: [wreg+status,2+status,0+pclath+cstack]
 16374                           ;LCDpos@l stored from wreg
 16375  13AC  0020               	movlb	0	; select bank0
 16376  13AD  00AB               	movwf	LCDpos@l
 16377  13AE                     l5548:
 16378                           
 16379                           ;LCD/lcd.c: 125: void LCDpos(unsigned char l, unsigned char c);LCD/lcd.c: 126: {;LCD/lcd
      +                          .c: 127:   unsigned char p;;LCD/lcd.c: 131:   if (l>1) p = 0xc0; else p=0x80;
 16380  13AE  3002               	movlw	2
 16381  13AF  022B               	subwf	LCDpos@l,w
 16382  13B0  1C03               	skipc
 16383  13B1  2BB3               	goto	u4651
 16384  13B2  2BB4               	goto	u4650
 16385  13B3                     u4651:
 16386  13B3  2BB9               	goto	l5552
 16387  13B4                     u4650:
 16388  13B4                     l5550:
 16389  13B4  30C0               	movlw	192
 16390  13B5  00AA               	movwf	??_LCDpos
 16391  13B6  082A               	movf	??_LCDpos,w
 16392  13B7  00AC               	movwf	LCDpos@p
 16393  13B8  2BBD               	goto	l5554
 16394  13B9                     l5552:
 16395  13B9  3080               	movlw	128
 16396  13BA  00AA               	movwf	??_LCDpos
 16397  13BB  082A               	movf	??_LCDpos,w
 16398  13BC  00AC               	movwf	LCDpos@p
 16399  13BD                     l5554:
 16400                           
 16401                           ;LCD/lcd.c: 132:   p = p | (c&0x0f);
 16402  13BD  0829               	movf	LCDpos@c,w
 16403  13BE  390F               	andlw	15
 16404  13BF  042C               	iorwf	LCDpos@p,w
 16405  13C0  00AA               	movwf	??_LCDpos
 16406  13C1  082A               	movf	??_LCDpos,w
 16407  13C2  00AC               	movwf	LCDpos@p
 16408  13C3                     l5556:
 16409                           
 16410                           ;LCD/lcd.c: 133:   LCDcmd(p);
 16411  13C3  082C               	movf	LCDpos@p,w
 16412  13C4  3191  21E7  3193   	fcall	_LCDcmd
 16413  13C7                     l253:
 16414  13C7  0008               	return
 16415  13C8                     __end_of_LCDpos:
 16416                           
 16417                           	psect	text40
 16418  11E7                     __ptext40:	
 16419 ;; *************** function _LCDcmd *****************
 16420 ;; Defined at:
 16421 ;;		line 102 in file "LCD/lcd.c"
 16422 ;; Parameters:    Size  Location     Type
 16423 ;;  c               1    wreg     unsigned char 
 16424 ;; Auto vars:     Size  Location     Type
 16425 ;;  c               1    8[BANK0 ] unsigned char 
 16426 ;; Return value:  Size  Location     Type
 16427 ;;                  1    wreg      void 
 16428 ;; Registers used:
 16429 ;;		wreg, status,2, status,0, pclath, cstack
 16430 ;; Tracked objects:
 16431 ;;		On entry : 0/0
 16432 ;;		On exit  : 0/0
 16433 ;;		Unchanged: 0/0
 16434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16436 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16438 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16439 ;;Total ram usage:        1 bytes
 16440 ;; Hardware stack levels used: 1
 16441 ;; Hardware stack levels required when called: 9
 16442 ;; This function calls:
 16443 ;;		_LCDsend2x4
 16444 ;; This function is called by:
 16445 ;;		_LCDpos
 16446 ;;		_main
 16447 ;; This function uses a non-reentrant model
 16448 ;;
 16449                           
 16450                           
 16451                           ;psect for function _LCDcmd
 16452  11E7                     _LCDcmd:
 16453                           
 16454                           ;incstack = 0
 16455                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
 16456                           ;LCDcmd@c stored from wreg
 16457  11E7  0020               	movlb	0	; select bank0
 16458  11E8  00A8               	movwf	LCDcmd@c
 16459  11E9                     l5274:
 16460                           
 16461                           ;LCD/lcd.c: 102: void LCDcmd(unsigned char c);LCD/lcd.c: 103: {;LCD/lcd.c: 104:   LCDsen
      +                          d2x4(c, 0);
 16462  11E9  01A2               	clrf	LCDsend2x4@mode
 16463  11EA  0828               	movf	LCDcmd@c,w
 16464  11EB  3189  21E8  3191   	fcall	_LCDsend2x4
 16465  11EE                     l235:
 16466  11EE  0008               	return
 16467  11EF                     __end_of_LCDcmd:
 16468                           
 16469                           	psect	text41
 16470  0828                     __ptext41:	
 16471 ;; *************** function _LCDinit *****************
 16472 ;; Defined at:
 16473 ;;		line 79 in file "LCD/lcd.c"
 16474 ;; Parameters:    Size  Location     Type
 16475 ;;		None
 16476 ;; Auto vars:     Size  Location     Type
 16477 ;;		None
 16478 ;; Return value:  Size  Location     Type
 16479 ;;                  1    wreg      void 
 16480 ;; Registers used:
 16481 ;;		wreg, status,2, status,0, pclath, cstack
 16482 ;; Tracked objects:
 16483 ;;		On entry : 0/0
 16484 ;;		On exit  : 0/0
 16485 ;;		Unchanged: 0/0
 16486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16489 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16490 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16491 ;;Total ram usage:        1 bytes
 16492 ;; Hardware stack levels used: 1
 16493 ;; Hardware stack levels required when called: 9
 16494 ;; This function calls:
 16495 ;;		_LCDsend
 16496 ;;		_LCDsend2x4
 16497 ;; This function is called by:
 16498 ;;		_main
 16499 ;; This function uses a non-reentrant model
 16500 ;;
 16501                           
 16502                           
 16503                           ;psect for function _LCDinit
 16504  0828                     _LCDinit:
 16505  0828                     l5498:	
 16506                           ;incstack = 0
 16507                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
 16508                           
 16509                           
 16510                           ;LCD/lcd.c: 81:   _delay((unsigned long)((50)*(4000000/4000.0)));
 16511  0828  3041               	movlw	65
 16512  0829  0020               	movlb	0	; select bank0
 16513  082A  00A8               	movwf	??_LCDinit
 16514  082B  30EE               	movlw	238
 16515  082C                     u5427:
 16516  082C  0B89               	decfsz	9,f
 16517  082D  282C               	goto	u5427
 16518  082E  0BA8               	decfsz	??_LCDinit,f
 16519  082F  282C               	goto	u5427
 16520  0830  0000               	nop
 16521  0831                     l5500:
 16522                           
 16523                           ;LCD/lcd.c: 82:   LCDsend(0x30);
 16524  0831  3030               	movlw	48
 16525  0832  3196  2697  3188   	fcall	_LCDsend
 16526  0835                     l5502:
 16527                           
 16528                           ;LCD/lcd.c: 83:   LCDsend(0x34); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x30);
 16529  0835  3034               	movlw	52
 16530  0836  3196  2697  3188   	fcall	_LCDsend
 16531  0839  30A6               	movlw	166
 16532  083A                     u5437:
 16533  083A  0B89               	decfsz	9,f
 16534  083B  283A               	goto	u5437
 16535  083C  3200               	nop2
 16536  083D                     l5504:
 16537  083D  3030               	movlw	48
 16538  083E  3196  2697  3188   	fcall	_LCDsend
 16539  0841                     l5506:
 16540                           
 16541                           ;LCD/lcd.c: 84:   _delay((unsigned long)((5)*(4000000/4000.0)));
 16542  0841  3007               	movlw	7
 16543  0842  0020               	movlb	0	; select bank0
 16544  0843  00A8               	movwf	??_LCDinit
 16545  0844  307D               	movlw	125
 16546  0845                     u5447:
 16547  0845  0B89               	decfsz	9,f
 16548  0846  2845               	goto	u5447
 16549  0847  0BA8               	decfsz	??_LCDinit,f
 16550  0848  2845               	goto	u5447
 16551                           
 16552                           ;LCD/lcd.c: 85:   LCDsend(0x30);
 16553  0849  3030               	movlw	48
 16554  084A  3196  2697  3188   	fcall	_LCDsend
 16555                           
 16556                           ;LCD/lcd.c: 86:   LCDsend(0x34); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x30);
 16557  084D  3034               	movlw	52
 16558  084E  3196  2697  3188   	fcall	_LCDsend
 16559  0851                     l5508:
 16560  0851  30A6               	movlw	166
 16561  0852                     u5457:
 16562  0852  0B89               	decfsz	9,f
 16563  0853  2852               	goto	u5457
 16564  0854  3200               	nop2
 16565  0855                     l5510:
 16566  0855  3030               	movlw	48
 16567  0856  3196  2697  3188   	fcall	_LCDsend
 16568                           
 16569                           ;LCD/lcd.c: 87:   _delay((unsigned long)((100)*(4000000/4000000.0)));
 16570  0859  3021               	movlw	33
 16571  085A                     u5467:
 16572  085A  0B89               	decfsz	9,f
 16573  085B  285A               	goto	u5467
 16574  085C  0000               	nop
 16575  085D                     l5512:
 16576                           
 16577                           ;LCD/lcd.c: 88:   LCDsend(0x30);
 16578  085D  3030               	movlw	48
 16579  085E  3196  2697  3188   	fcall	_LCDsend
 16580  0861                     l5514:
 16581                           
 16582                           ;LCD/lcd.c: 89:   LCDsend(0x34); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x30);
 16583  0861  3034               	movlw	52
 16584  0862  3196  2697  3188   	fcall	_LCDsend
 16585  0865  30A6               	movlw	166
 16586  0866                     u5477:
 16587  0866  0B89               	decfsz	9,f
 16588  0867  2866               	goto	u5477
 16589  0868  3200               	nop2
 16590  0869                     l5516:
 16591  0869  3030               	movlw	48
 16592  086A  3196  2697  3188   	fcall	_LCDsend
 16593  086D                     l5518:
 16594                           
 16595                           ;LCD/lcd.c: 90:   _delay((unsigned long)((100)*(4000000/4000000.0)));
 16596  086D  3021               	movlw	33
 16597  086E                     u5487:
 16598  086E  0B89               	decfsz	9,f
 16599  086F  286E               	goto	u5487
 16600  0870  0000               	nop
 16601                           
 16602                           ;LCD/lcd.c: 91:   LCDsend(0x20);
 16603  0871  3020               	movlw	32
 16604  0872  3196  2697  3188   	fcall	_LCDsend
 16605                           
 16606                           ;LCD/lcd.c: 92:   LCDsend(0x24); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x20);
 16607  0875  3024               	movlw	36
 16608  0876  3196  2697  3188   	fcall	_LCDsend
 16609  0879                     l5520:
 16610  0879  30A6               	movlw	166
 16611  087A                     u5497:
 16612  087A  0B89               	decfsz	9,f
 16613  087B  287A               	goto	u5497
 16614  087C  3200               	nop2
 16615  087D                     l5522:
 16616  087D  3020               	movlw	32
 16617  087E  3196  2697  3188   	fcall	_LCDsend
 16618                           
 16619                           ;LCD/lcd.c: 93:   _delay((unsigned long)((5)*(4000000/4000.0)));
 16620  0881  3007               	movlw	7
 16621  0882  0020               	movlb	0	; select bank0
 16622  0883  00A8               	movwf	??_LCDinit
 16623  0884  307D               	movlw	125
 16624  0885                     u5507:
 16625  0885  0B89               	decfsz	9,f
 16626  0886  2885               	goto	u5507
 16627  0887  0BA8               	decfsz	??_LCDinit,f
 16628  0888  2885               	goto	u5507
 16629  0889                     l5524:
 16630                           
 16631                           ;LCD/lcd.c: 95:   LCDsend2x4(0x28, 0);
 16632  0889  0020               	movlb	0	; select bank0
 16633  088A  01A2               	clrf	LCDsend2x4@mode
 16634  088B  3028               	movlw	40
 16635  088C  3189  21E8  3188   	fcall	_LCDsend2x4
 16636  088F                     l5526:
 16637                           
 16638                           ;LCD/lcd.c: 96:   LCDsend2x4(0x06, 0);
 16639  088F  0020               	movlb	0	; select bank0
 16640  0890  01A2               	clrf	LCDsend2x4@mode
 16641  0891  3006               	movlw	6
 16642  0892  3189  21E8  3188   	fcall	_LCDsend2x4
 16643  0895                     l5528:
 16644                           
 16645                           ;LCD/lcd.c: 97:   LCDsend2x4(0x0f, 0);
 16646  0895  0020               	movlb	0	; select bank0
 16647  0896  01A2               	clrf	LCDsend2x4@mode
 16648  0897  300F               	movlw	15
 16649  0898  3189  21E8  3188   	fcall	_LCDsend2x4
 16650  089B                     l5530:
 16651                           
 16652                           ;LCD/lcd.c: 98:   LCDsend2x4(0x01, 0);
 16653  089B  0020               	movlb	0	; select bank0
 16654  089C  01A2               	clrf	LCDsend2x4@mode
 16655  089D  3001               	movlw	1
 16656  089E  3189  21E8  3188   	fcall	_LCDsend2x4
 16657                           
 16658                           ;LCD/lcd.c: 99:   _delay((unsigned long)((2)*(4000000/4000.0)));
 16659  08A1  3003               	movlw	3
 16660  08A2  0020               	movlb	0	; select bank0
 16661  08A3  00A8               	movwf	??_LCDinit
 16662  08A4  3097               	movlw	151
 16663  08A5                     u5517:
 16664  08A5  0B89               	decfsz	9,f
 16665  08A6  28A5               	goto	u5517
 16666  08A7  0BA8               	decfsz	??_LCDinit,f
 16667  08A8  28A5               	goto	u5517
 16668  08A9  3200               	nop2
 16669  08AA                     l232:
 16670  08AA  0008               	return
 16671  08AB                     __end_of_LCDinit:
 16672                           
 16673                           	psect	text42
 16674  09E8                     __ptext42:	
 16675 ;; *************** function _LCDsend2x4 *****************
 16676 ;; Defined at:
 16677 ;;		line 56 in file "LCD/lcd.c"
 16678 ;; Parameters:    Size  Location     Type
 16679 ;;  c               1    wreg     unsigned char 
 16680 ;;  mode            1    2[BANK0 ] unsigned char 
 16681 ;; Auto vars:     Size  Location     Type
 16682 ;;  c               1    5[BANK0 ] unsigned char 
 16683 ;;  lc              1    7[BANK0 ] unsigned char 
 16684 ;;  hc              1    6[BANK0 ] unsigned char 
 16685 ;; Return value:  Size  Location     Type
 16686 ;;                  1    wreg      void 
 16687 ;; Registers used:
 16688 ;;		wreg, status,2, status,0, pclath, cstack
 16689 ;; Tracked objects:
 16690 ;;		On entry : 0/0
 16691 ;;		On exit  : 0/0
 16692 ;;		Unchanged: 0/0
 16693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16694 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16695 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16696 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16697 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16698 ;;Total ram usage:        6 bytes
 16699 ;; Hardware stack levels used: 1
 16700 ;; Hardware stack levels required when called: 8
 16701 ;; This function calls:
 16702 ;;		_WriteI2C
 16703 ;; This function is called by:
 16704 ;;		_LCDinit
 16705 ;;		_LCDcmd
 16706 ;;		_LCDchar
 16707 ;; This function uses a non-reentrant model
 16708 ;;
 16709                           
 16710                           
 16711                           ;psect for function _LCDsend2x4
 16712  09E8                     _LCDsend2x4:
 16713                           
 16714                           ;incstack = 0
 16715                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 16716                           ;LCDsend2x4@c stored from wreg
 16717  09E8  0020               	movlb	0	; select bank0
 16718  09E9  00A5               	movwf	LCDsend2x4@c
 16719  09EA                     l4980:
 16720                           
 16721                           ;LCD/lcd.c: 56: void LCDsend2x4(unsigned char c, unsigned char mode);LCD/lcd.c: 57: {;LC
      +                          D/lcd.c: 58:   unsigned char hc;;LCD/lcd.c: 59:   unsigned char lc;;LCD/lcd.c: 61:   hc 
      +                          = c & 0xf0;
 16722  09EA  0825               	movf	LCDsend2x4@c,w
 16723  09EB  39F0               	andlw	240
 16724  09EC  00A3               	movwf	??_LCDsend2x4
 16725  09ED  0823               	movf	??_LCDsend2x4,w
 16726  09EE  00A6               	movwf	LCDsend2x4@hc
 16727  09EF                     l4982:
 16728                           
 16729                           ;LCD/lcd.c: 62:   lc = (c << 4) & 0xf0;
 16730  09EF  0825               	movf	LCDsend2x4@c,w
 16731  09F0  00A3               	movwf	??_LCDsend2x4
 16732  09F1  3003               	movlw	3
 16733  09F2                     u3875:
 16734  09F2  35A3               	lslf	??_LCDsend2x4,f
 16735  09F3  3EFF               	addlw	-1
 16736  09F4  1D03               	skipz
 16737  09F5  29F2               	goto	u3875
 16738  09F6  3523               	lslf	??_LCDsend2x4,w
 16739  09F7  39F0               	andlw	240
 16740  09F8  00A4               	movwf	??_LCDsend2x4+1
 16741  09F9  0824               	movf	??_LCDsend2x4+1,w
 16742  09FA  00A7               	movwf	LCDsend2x4@lc
 16743  09FB                     l4984:	
 16744                           ;LCD/lcd.c: 64:   while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 16745                           
 16746  09FB  0023               	movlb	3	; select bank3
 16747  09FC  0C0F               	rrf	15,w	;volatile
 16748  09FD  0C89               	rrf	9,f
 16749  09FE  3901               	andlw	1
 16750  09FF  0020               	movlb	0	; select bank0
 16751  0A00  00A3               	movwf	??_LCDsend2x4
 16752  0A01  0023               	movlb	3	; select bank3
 16753  0A02  0811               	movf	17,w	;volatile
 16754  0A03  391F               	andlw	31
 16755  0A04  0020               	movlb	0	; select bank0
 16756  0A05  0423               	iorwf	??_LCDsend2x4,w
 16757  0A06  1D03               	btfss	3,2
 16758  0A07  2A09               	goto	u3881
 16759  0A08  2A0A               	goto	u3880
 16760  0A09                     u3881:
 16761  0A09  29FB               	goto	l4984
 16762  0A0A                     u3880:
 16763  0A0A                     l195:	
 16764                           ;LCD/lcd.c: 65:   do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 16765                           
 16766  0A0A  0023               	movlb	3	; select bank3
 16767  0A0B  1411               	bsf	17,0	;volatile
 16768  0A0C                     l196:
 16769  0A0C  1811               	btfsc	17,0	;volatile
 16770  0A0D  2A0F               	goto	u3891
 16771  0A0E  2A10               	goto	u3890
 16772  0A0F                     u3891:
 16773  0A0F  2A0C               	goto	l196
 16774  0A10                     u3890:
 16775  0A10                     l4986:
 16776  0A10  0023               	movlb	3	; select bank3
 16777  0A11  0C0F               	rrf	15,w	;volatile
 16778  0A12  0C89               	rrf	9,f
 16779  0A13  3901               	andlw	1
 16780  0A14  0020               	movlb	0	; select bank0
 16781  0A15  00A3               	movwf	??_LCDsend2x4
 16782  0A16  0023               	movlb	3	; select bank3
 16783  0A17  0811               	movf	17,w	;volatile
 16784  0A18  391F               	andlw	31
 16785  0A19  0020               	movlb	0	; select bank0
 16786  0A1A  0423               	iorwf	??_LCDsend2x4,w
 16787  0A1B  1D03               	btfss	3,2
 16788  0A1C  2A1E               	goto	u3901
 16789  0A1D  2A1F               	goto	u3900
 16790  0A1E                     u3901:
 16791  0A1E  2A10               	goto	l4986
 16792  0A1F                     u3900:
 16793  0A1F                     l4988:
 16794                           
 16795                           ;LCD/lcd.c: 66:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 16796  0A1F  304E               	movlw	78
 16797  0A20  3197  2743  3189   	fcall	_WriteI2C
 16798  0A23                     l4990:
 16799  0A23  0023               	movlb	3	; select bank3
 16800  0A24  0C0F               	rrf	15,w	;volatile
 16801  0A25  0C89               	rrf	9,f
 16802  0A26  3901               	andlw	1
 16803  0A27  0020               	movlb	0	; select bank0
 16804  0A28  00A3               	movwf	??_LCDsend2x4
 16805  0A29  0023               	movlb	3	; select bank3
 16806  0A2A  0811               	movf	17,w	;volatile
 16807  0A2B  391F               	andlw	31
 16808  0A2C  0020               	movlb	0	; select bank0
 16809  0A2D  0423               	iorwf	??_LCDsend2x4,w
 16810  0A2E  1D03               	btfss	3,2
 16811  0A2F  2A31               	goto	u3911
 16812  0A30  2A32               	goto	u3910
 16813  0A31                     u3911:
 16814  0A31  2A23               	goto	l4990
 16815  0A32                     u3910:
 16816  0A32                     l4992:
 16817                           
 16818                           ;LCD/lcd.c: 67:   WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 16819  0A32  0826               	movf	LCDsend2x4@hc,w
 16820  0A33  0422               	iorwf	LCDsend2x4@mode,w
 16821  0A34  3808               	iorlw	8
 16822  0A35  3197  2743  3189   	fcall	_WriteI2C
 16823  0A38                     l4994:
 16824  0A38  0023               	movlb	3	; select bank3
 16825  0A39  0C0F               	rrf	15,w	;volatile
 16826  0A3A  0C89               	rrf	9,f
 16827  0A3B  3901               	andlw	1
 16828  0A3C  0020               	movlb	0	; select bank0
 16829  0A3D  00A3               	movwf	??_LCDsend2x4
 16830  0A3E  0023               	movlb	3	; select bank3
 16831  0A3F  0811               	movf	17,w	;volatile
 16832  0A40  391F               	andlw	31
 16833  0A41  0020               	movlb	0	; select bank0
 16834  0A42  0423               	iorwf	??_LCDsend2x4,w
 16835  0A43  1D03               	btfss	3,2
 16836  0A44  2A46               	goto	u3921
 16837  0A45  2A47               	goto	u3920
 16838  0A46                     u3921:
 16839  0A46  2A38               	goto	l4994
 16840  0A47                     u3920:
 16841  0A47                     l4996:
 16842                           
 16843                           ;LCD/lcd.c: 68:   WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STA
      +                          Tbits.R_W));
 16844  0A47  0826               	movf	LCDsend2x4@hc,w
 16845  0A48  0422               	iorwf	LCDsend2x4@mode,w
 16846  0A49  380C               	iorlw	12
 16847  0A4A  3197  2743  3189   	fcall	_WriteI2C
 16848  0A4D                     l4998:
 16849  0A4D  0023               	movlb	3	; select bank3
 16850  0A4E  0C0F               	rrf	15,w	;volatile
 16851  0A4F  0C89               	rrf	9,f
 16852  0A50  3901               	andlw	1
 16853  0A51  0020               	movlb	0	; select bank0
 16854  0A52  00A3               	movwf	??_LCDsend2x4
 16855  0A53  0023               	movlb	3	; select bank3
 16856  0A54  0811               	movf	17,w	;volatile
 16857  0A55  391F               	andlw	31
 16858  0A56  0020               	movlb	0	; select bank0
 16859  0A57  0423               	iorwf	??_LCDsend2x4,w
 16860  0A58  1D03               	btfss	3,2
 16861  0A59  2A5B               	goto	u3931
 16862  0A5A  2A5C               	goto	u3930
 16863  0A5B                     u3931:
 16864  0A5B  2A4D               	goto	l4998
 16865  0A5C                     u3930:
 16866  0A5C                     l211:
 16867                           
 16868                           ;LCD/lcd.c: 69:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 16869  0A5C  0000               	nop
 16870  0A5D                     l5000:
 16871                           
 16872                           ;LCD/lcd.c: 70:   WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 16873  0A5D  0020               	movlb	0	; select bank0
 16874  0A5E  0826               	movf	LCDsend2x4@hc,w
 16875  0A5F  0422               	iorwf	LCDsend2x4@mode,w
 16876  0A60  3808               	iorlw	8
 16877  0A61  3197  2743  3189   	fcall	_WriteI2C
 16878  0A64                     l5002:
 16879  0A64  0023               	movlb	3	; select bank3
 16880  0A65  0C0F               	rrf	15,w	;volatile
 16881  0A66  0C89               	rrf	9,f
 16882  0A67  3901               	andlw	1
 16883  0A68  0020               	movlb	0	; select bank0
 16884  0A69  00A3               	movwf	??_LCDsend2x4
 16885  0A6A  0023               	movlb	3	; select bank3
 16886  0A6B  0811               	movf	17,w	;volatile
 16887  0A6C  391F               	andlw	31
 16888  0A6D  0020               	movlb	0	; select bank0
 16889  0A6E  0423               	iorwf	??_LCDsend2x4,w
 16890  0A6F  1D03               	btfss	3,2
 16891  0A70  2A72               	goto	u3941
 16892  0A71  2A73               	goto	u3940
 16893  0A72                     u3941:
 16894  0A72  2A64               	goto	l5002
 16895  0A73                     u3940:
 16896  0A73                     l5004:
 16897                           
 16898                           ;LCD/lcd.c: 71:   WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 16899  0A73  0827               	movf	LCDsend2x4@lc,w
 16900  0A74  0422               	iorwf	LCDsend2x4@mode,w
 16901  0A75  3808               	iorlw	8
 16902  0A76  3197  2743  3189   	fcall	_WriteI2C
 16903  0A79                     l5006:
 16904  0A79  0023               	movlb	3	; select bank3
 16905  0A7A  0C0F               	rrf	15,w	;volatile
 16906  0A7B  0C89               	rrf	9,f
 16907  0A7C  3901               	andlw	1
 16908  0A7D  0020               	movlb	0	; select bank0
 16909  0A7E  00A3               	movwf	??_LCDsend2x4
 16910  0A7F  0023               	movlb	3	; select bank3
 16911  0A80  0811               	movf	17,w	;volatile
 16912  0A81  391F               	andlw	31
 16913  0A82  0020               	movlb	0	; select bank0
 16914  0A83  0423               	iorwf	??_LCDsend2x4,w
 16915  0A84  1D03               	btfss	3,2
 16916  0A85  2A87               	goto	u3951
 16917  0A86  2A88               	goto	u3950
 16918  0A87                     u3951:
 16919  0A87  2A79               	goto	l5006
 16920  0A88                     u3950:
 16921  0A88                     l5008:
 16922                           
 16923                           ;LCD/lcd.c: 72:   WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STA
      +                          Tbits.R_W));
 16924  0A88  0827               	movf	LCDsend2x4@lc,w
 16925  0A89  0422               	iorwf	LCDsend2x4@mode,w
 16926  0A8A  380C               	iorlw	12
 16927  0A8B  3197  2743  3189   	fcall	_WriteI2C
 16928  0A8E                     l5010:
 16929  0A8E  0023               	movlb	3	; select bank3
 16930  0A8F  0C0F               	rrf	15,w	;volatile
 16931  0A90  0C89               	rrf	9,f
 16932  0A91  3901               	andlw	1
 16933  0A92  0020               	movlb	0	; select bank0
 16934  0A93  00A3               	movwf	??_LCDsend2x4
 16935  0A94  0023               	movlb	3	; select bank3
 16936  0A95  0811               	movf	17,w	;volatile
 16937  0A96  391F               	andlw	31
 16938  0A97  0020               	movlb	0	; select bank0
 16939  0A98  0423               	iorwf	??_LCDsend2x4,w
 16940  0A99  1D03               	btfss	3,2
 16941  0A9A  2A9C               	goto	u3961
 16942  0A9B  2A9D               	goto	u3960
 16943  0A9C                     u3961:
 16944  0A9C  2A8E               	goto	l5010
 16945  0A9D                     u3960:
 16946  0A9D                     l220:
 16947                           
 16948                           ;LCD/lcd.c: 73:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 16949  0A9D  0000               	nop
 16950  0A9E                     l5012:
 16951                           
 16952                           ;LCD/lcd.c: 74:   WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 16953  0A9E  0020               	movlb	0	; select bank0
 16954  0A9F  0827               	movf	LCDsend2x4@lc,w
 16955  0AA0  0422               	iorwf	LCDsend2x4@mode,w
 16956  0AA1  3808               	iorlw	8
 16957  0AA2  3197  2743  3189   	fcall	_WriteI2C
 16958  0AA5                     l5014:
 16959  0AA5  0023               	movlb	3	; select bank3
 16960  0AA6  0C0F               	rrf	15,w	;volatile
 16961  0AA7  0C89               	rrf	9,f
 16962  0AA8  3901               	andlw	1
 16963  0AA9  0020               	movlb	0	; select bank0
 16964  0AAA  00A3               	movwf	??_LCDsend2x4
 16965  0AAB  0023               	movlb	3	; select bank3
 16966  0AAC  0811               	movf	17,w	;volatile
 16967  0AAD  391F               	andlw	31
 16968  0AAE  0020               	movlb	0	; select bank0
 16969  0AAF  0423               	iorwf	??_LCDsend2x4,w
 16970  0AB0  1D03               	btfss	3,2
 16971  0AB1  2AB3               	goto	u3971
 16972  0AB2  2AB4               	goto	u3970
 16973  0AB3                     u3971:
 16974  0AB3  2AA5               	goto	l5014
 16975  0AB4                     u3970:
 16976  0AB4                     l224:	
 16977                           ;LCD/lcd.c: 75:   do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 16978                           
 16979  0AB4  0023               	movlb	3	; select bank3
 16980  0AB5  1511               	bsf	17,2	;volatile
 16981  0AB6                     l225:
 16982  0AB6  1911               	btfsc	17,2	;volatile
 16983  0AB7  2AB9               	goto	u3981
 16984  0AB8  2ABA               	goto	u3980
 16985  0AB9                     u3981:
 16986  0AB9  2AB6               	goto	l225
 16987  0ABA                     u3980:
 16988  0ABA                     l5016:
 16989                           
 16990                           ;LCD/lcd.c: 76:   _delay((unsigned long)((50)*(4000000/4000000.0)));
 16991  0ABA  3010               	movlw	16
 16992  0ABB                     u5527:
 16993  0ABB  0B89               	decfsz	9,f
 16994  0ABC  2ABB               	goto	u5527
 16995  0ABD  3200               	nop2
 16996  0ABE                     l229:
 16997  0ABE  0008               	return
 16998  0ABF                     __end_of_LCDsend2x4:
 16999                           
 17000                           	psect	text43
 17001  1697                     __ptext43:	
 17002 ;; *************** function _LCDsend *****************
 17003 ;; Defined at:
 17004 ;;		line 17 in file "LCD/lcd.c"
 17005 ;; Parameters:    Size  Location     Type
 17006 ;;  c               1    wreg     unsigned char 
 17007 ;; Auto vars:     Size  Location     Type
 17008 ;;  c               1    3[BANK0 ] unsigned char 
 17009 ;; Return value:  Size  Location     Type
 17010 ;;                  1    wreg      void 
 17011 ;; Registers used:
 17012 ;;		wreg, status,2, status,0, pclath, cstack
 17013 ;; Tracked objects:
 17014 ;;		On entry : 0/0
 17015 ;;		On exit  : 0/0
 17016 ;;		Unchanged: 0/0
 17017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17019 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17020 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17021 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17022 ;;Total ram usage:        2 bytes
 17023 ;; Hardware stack levels used: 1
 17024 ;; Hardware stack levels required when called: 8
 17025 ;; This function calls:
 17026 ;;		_WriteI2C
 17027 ;; This function is called by:
 17028 ;;		_LCDinit
 17029 ;; This function uses a non-reentrant model
 17030 ;;
 17031                           
 17032                           
 17033                           ;psect for function _LCDsend
 17034  1697                     _LCDsend:
 17035                           
 17036                           ;incstack = 0
 17037                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
 17038                           ;LCDsend@c stored from wreg
 17039  1697  0020               	movlb	0	; select bank0
 17040  1698  00A3               	movwf	LCDsend@c
 17041  1699                     l5194:
 17042  1699                     l5196:	
 17043                           ;LCD/lcd.c: 17: void LCDsend(unsigned char c);LCD/lcd.c: 18: {;LCD/lcd.c: 19:   while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 17044                           
 17045  1699  0023               	movlb	3	; select bank3
 17046  169A  0C0F               	rrf	15,w	;volatile
 17047  169B  0C89               	rrf	9,f
 17048  169C  3901               	andlw	1
 17049  169D  0020               	movlb	0	; select bank0
 17050  169E  00A2               	movwf	??_LCDsend
 17051  169F  0023               	movlb	3	; select bank3
 17052  16A0  0811               	movf	17,w	;volatile
 17053  16A1  391F               	andlw	31
 17054  16A2  0020               	movlb	0	; select bank0
 17055  16A3  0422               	iorwf	??_LCDsend,w
 17056  16A4  1D03               	btfss	3,2
 17057  16A5  2EA7               	goto	u4241
 17058  16A6  2EA8               	goto	u4240
 17059  16A7                     u4241:
 17060  16A7  2E99               	goto	l5196
 17061  16A8                     u4240:
 17062  16A8                     l73:	
 17063                           ;LCD/lcd.c: 20:   do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 17064                           
 17065  16A8  0023               	movlb	3	; select bank3
 17066  16A9  1411               	bsf	17,0	;volatile
 17067  16AA                     l74:
 17068  16AA  1811               	btfsc	17,0	;volatile
 17069  16AB  2EAD               	goto	u4251
 17070  16AC  2EAE               	goto	u4250
 17071  16AD                     u4251:
 17072  16AD  2EAA               	goto	l74
 17073  16AE                     u4250:
 17074  16AE                     l5198:
 17075  16AE  0023               	movlb	3	; select bank3
 17076  16AF  0C0F               	rrf	15,w	;volatile
 17077  16B0  0C89               	rrf	9,f
 17078  16B1  3901               	andlw	1
 17079  16B2  0020               	movlb	0	; select bank0
 17080  16B3  00A2               	movwf	??_LCDsend
 17081  16B4  0023               	movlb	3	; select bank3
 17082  16B5  0811               	movf	17,w	;volatile
 17083  16B6  391F               	andlw	31
 17084  16B7  0020               	movlb	0	; select bank0
 17085  16B8  0422               	iorwf	??_LCDsend,w
 17086  16B9  1D03               	btfss	3,2
 17087  16BA  2EBC               	goto	u4261
 17088  16BB  2EBD               	goto	u4260
 17089  16BC                     u4261:
 17090  16BC  2EAE               	goto	l5198
 17091  16BD                     u4260:
 17092  16BD                     l5200:
 17093                           
 17094                           ;LCD/lcd.c: 21:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 17095  16BD  304E               	movlw	78
 17096  16BE  3197  2743  3196   	fcall	_WriteI2C
 17097  16C1                     l5202:
 17098  16C1  0023               	movlb	3	; select bank3
 17099  16C2  0C0F               	rrf	15,w	;volatile
 17100  16C3  0C89               	rrf	9,f
 17101  16C4  3901               	andlw	1
 17102  16C5  0020               	movlb	0	; select bank0
 17103  16C6  00A2               	movwf	??_LCDsend
 17104  16C7  0023               	movlb	3	; select bank3
 17105  16C8  0811               	movf	17,w	;volatile
 17106  16C9  391F               	andlw	31
 17107  16CA  0020               	movlb	0	; select bank0
 17108  16CB  0422               	iorwf	??_LCDsend,w
 17109  16CC  1D03               	btfss	3,2
 17110  16CD  2ECF               	goto	u4271
 17111  16CE  2ED0               	goto	u4270
 17112  16CF                     u4271:
 17113  16CF  2EC1               	goto	l5202
 17114  16D0                     u4270:
 17115  16D0                     l5204:
 17116                           
 17117                           ;LCD/lcd.c: 22:   WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 17118  16D0  0823               	movf	LCDsend@c,w
 17119  16D1  3197  2743  3196   	fcall	_WriteI2C
 17120  16D4                     l5206:
 17121  16D4  0023               	movlb	3	; select bank3
 17122  16D5  0C0F               	rrf	15,w	;volatile
 17123  16D6  0C89               	rrf	9,f
 17124  16D7  3901               	andlw	1
 17125  16D8  0020               	movlb	0	; select bank0
 17126  16D9  00A2               	movwf	??_LCDsend
 17127  16DA  0023               	movlb	3	; select bank3
 17128  16DB  0811               	movf	17,w	;volatile
 17129  16DC  391F               	andlw	31
 17130  16DD  0020               	movlb	0	; select bank0
 17131  16DE  0422               	iorwf	??_LCDsend,w
 17132  16DF  1D03               	btfss	3,2
 17133  16E0  2EE2               	goto	u4281
 17134  16E1  2EE3               	goto	u4280
 17135  16E2                     u4281:
 17136  16E2  2ED4               	goto	l5206
 17137  16E3                     u4280:
 17138  16E3                     l87:	
 17139                           ;LCD/lcd.c: 23:   do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 17140                           
 17141  16E3  0023               	movlb	3	; select bank3
 17142  16E4  1511               	bsf	17,2	;volatile
 17143  16E5                     l88:
 17144  16E5  1911               	btfsc	17,2	;volatile
 17145  16E6  2EE8               	goto	u4291
 17146  16E7  2EE9               	goto	u4290
 17147  16E8                     u4291:
 17148  16E8  2EE5               	goto	l88
 17149  16E9                     u4290:
 17150  16E9                     l92:
 17151  16E9  0008               	return
 17152  16EA                     __end_of_LCDsend:
 17153                           
 17154                           	psect	text44
 17155  12B9                     __ptext44:	
 17156 ;; *************** function _LCDbusy *****************
 17157 ;; Defined at:
 17158 ;;		line 119 in file "LCD/lcd.c"
 17159 ;; Parameters:    Size  Location     Type
 17160 ;;		None
 17161 ;; Auto vars:     Size  Location     Type
 17162 ;;		None
 17163 ;; Return value:  Size  Location     Type
 17164 ;;                  2    7[BANK0 ] int 
 17165 ;; Registers used:
 17166 ;;		wreg, status,2, status,0, pclath, cstack
 17167 ;; Tracked objects:
 17168 ;;		On entry : 0/0
 17169 ;;		On exit  : 0/0
 17170 ;;		Unchanged: 0/0
 17171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17172 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17175 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17176 ;;Total ram usage:        2 bytes
 17177 ;; Hardware stack levels used: 1
 17178 ;; Hardware stack levels required when called: 9
 17179 ;; This function calls:
 17180 ;;		_LCDrecv
 17181 ;; This function is called by:
 17182 ;;		_main
 17183 ;; This function uses a non-reentrant model
 17184 ;;
 17185                           
 17186                           
 17187                           ;psect for function _LCDbusy
 17188  12B9                     _LCDbusy:
 17189  12B9                     l5538:	
 17190                           ;incstack = 0
 17191                           ; Regs used in _LCDbusy: [wreg+status,2+status,0+pclath+cstack]
 17192                           
 17193                           
 17194                           ;LCD/lcd.c: 121:   if(LCDrecv(0) & 0x80) return 1;
 17195  12B9  3000               	movlw	0
 17196  12BA  3184  2448  3192   	fcall	_LCDrecv
 17197  12BD  3980               	andlw	128
 17198  12BE  1903               	btfsc	3,2
 17199  12BF  2AC1               	goto	u4641
 17200  12C0  2AC2               	goto	u4640
 17201  12C1                     u4641:
 17202  12C1  2AC8               	goto	l5544
 17203  12C2                     u4640:
 17204  12C2                     l5540:
 17205  12C2  3001               	movlw	1
 17206  12C3  0020               	movlb	0	; select bank0
 17207  12C4  00A7               	movwf	?_LCDbusy
 17208  12C5  3000               	movlw	0
 17209  12C6  00A8               	movwf	?_LCDbusy+1
 17210  12C7  2ACB               	goto	l248
 17211  12C8                     l5544:
 17212                           
 17213                           ;LCD/lcd.c: 122:   return 0;
 17214  12C8  0020               	movlb	0	; select bank0
 17215  12C9  01A7               	clrf	?_LCDbusy
 17216  12CA  01A8               	clrf	?_LCDbusy+1
 17217  12CB                     l248:
 17218  12CB  0008               	return
 17219  12CC                     __end_of_LCDbusy:
 17220                           
 17221                           	psect	text45
 17222  0448                     __ptext45:	
 17223 ;; *************** function _LCDrecv *****************
 17224 ;; Defined at:
 17225 ;;		line 25 in file "LCD/lcd.c"
 17226 ;; Parameters:    Size  Location     Type
 17227 ;;  mode            1    wreg     unsigned char 
 17228 ;; Auto vars:     Size  Location     Type
 17229 ;;  mode            1    6[BANK0 ] unsigned char 
 17230 ;;  lc              1    5[BANK0 ] unsigned char 
 17231 ;;  hc              1    4[BANK0 ] unsigned char 
 17232 ;; Return value:  Size  Location     Type
 17233 ;;                  1    wreg      unsigned char 
 17234 ;; Registers used:
 17235 ;;		wreg, status,2, status,0, pclath, cstack
 17236 ;; Tracked objects:
 17237 ;;		On entry : 0/0
 17238 ;;		On exit  : 0/0
 17239 ;;		Unchanged: 0/0
 17240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17242 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17243 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17244 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17245 ;;Total ram usage:        5 bytes
 17246 ;; Hardware stack levels used: 1
 17247 ;; Hardware stack levels required when called: 8
 17248 ;; This function calls:
 17249 ;;		_ReadI2C
 17250 ;;		_WriteI2C
 17251 ;; This function is called by:
 17252 ;;		_LCDbusy
 17253 ;; This function uses a non-reentrant model
 17254 ;;
 17255                           
 17256                           
 17257                           ;psect for function _LCDrecv
 17258  0448                     _LCDrecv:
 17259                           
 17260                           ;incstack = 0
 17261                           ; Regs used in _LCDrecv: [wreg+status,2+status,0+pclath+cstack]
 17262                           ;LCDrecv@mode stored from wreg
 17263  0448  0020               	movlb	0	; select bank0
 17264  0449  00A6               	movwf	LCDrecv@mode
 17265  044A                     l5208:
 17266  044A                     l5210:	
 17267                           ;LCD/lcd.c: 25: unsigned char LCDrecv(unsigned char mode);LCD/lcd.c: 26: {;LCD/lcd.c: 27
      +                          :   unsigned char hc;;LCD/lcd.c: 28:   unsigned char lc;;LCD/lcd.c: 30:   while ((SSP1CO
      +                          N2 & 0x1F) | (SSP1STATbits.R_W));
 17268                           
 17269  044A  0023               	movlb	3	; select bank3
 17270  044B  0C0F               	rrf	15,w	;volatile
 17271  044C  0C89               	rrf	9,f
 17272  044D  3901               	andlw	1
 17273  044E  0020               	movlb	0	; select bank0
 17274  044F  00A2               	movwf	??_LCDrecv
 17275  0450  0023               	movlb	3	; select bank3
 17276  0451  0811               	movf	17,w	;volatile
 17277  0452  391F               	andlw	31
 17278  0453  0020               	movlb	0	; select bank0
 17279  0454  0422               	iorwf	??_LCDrecv,w
 17280  0455  1D03               	btfss	3,2
 17281  0456  2C58               	goto	u4301
 17282  0457  2C59               	goto	u4300
 17283  0458                     u4301:
 17284  0458  2C4A               	goto	l5210
 17285  0459                     u4300:
 17286  0459                     l98:	
 17287                           ;LCD/lcd.c: 31:   do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 17288                           
 17289  0459  0023               	movlb	3	; select bank3
 17290  045A  1411               	bsf	17,0	;volatile
 17291  045B                     l99:
 17292  045B  1811               	btfsc	17,0	;volatile
 17293  045C  2C5E               	goto	u4311
 17294  045D  2C5F               	goto	u4310
 17295  045E                     u4311:
 17296  045E  2C5B               	goto	l99
 17297  045F                     u4310:
 17298  045F                     l5212:
 17299  045F  0023               	movlb	3	; select bank3
 17300  0460  0C0F               	rrf	15,w	;volatile
 17301  0461  0C89               	rrf	9,f
 17302  0462  3901               	andlw	1
 17303  0463  0020               	movlb	0	; select bank0
 17304  0464  00A2               	movwf	??_LCDrecv
 17305  0465  0023               	movlb	3	; select bank3
 17306  0466  0811               	movf	17,w	;volatile
 17307  0467  391F               	andlw	31
 17308  0468  0020               	movlb	0	; select bank0
 17309  0469  0422               	iorwf	??_LCDrecv,w
 17310  046A  1D03               	btfss	3,2
 17311  046B  2C6D               	goto	u4321
 17312  046C  2C6E               	goto	u4320
 17313  046D                     u4321:
 17314  046D  2C5F               	goto	l5212
 17315  046E                     u4320:
 17316  046E                     l5214:
 17317                           
 17318                           ;LCD/lcd.c: 32:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 17319  046E  304E               	movlw	78
 17320  046F  3197  2743  3184   	fcall	_WriteI2C
 17321  0472                     l5216:
 17322  0472  0023               	movlb	3	; select bank3
 17323  0473  0C0F               	rrf	15,w	;volatile
 17324  0474  0C89               	rrf	9,f
 17325  0475  3901               	andlw	1
 17326  0476  0020               	movlb	0	; select bank0
 17327  0477  00A2               	movwf	??_LCDrecv
 17328  0478  0023               	movlb	3	; select bank3
 17329  0479  0811               	movf	17,w	;volatile
 17330  047A  391F               	andlw	31
 17331  047B  0020               	movlb	0	; select bank0
 17332  047C  0422               	iorwf	??_LCDrecv,w
 17333  047D  1D03               	btfss	3,2
 17334  047E  2C80               	goto	u4331
 17335  047F  2C81               	goto	u4330
 17336  0480                     u4331:
 17337  0480  2C72               	goto	l5216
 17338  0481                     u4330:
 17339  0481                     l5218:
 17340                           
 17341                           ;LCD/lcd.c: 33:   WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1S
      +                          TATbits.R_W));
 17342  0481  0826               	movf	LCDrecv@mode,w
 17343  0482  38FA               	iorlw	250
 17344  0483  3197  2743  3184   	fcall	_WriteI2C
 17345  0486                     l5220:
 17346  0486  0023               	movlb	3	; select bank3
 17347  0487  0C0F               	rrf	15,w	;volatile
 17348  0488  0C89               	rrf	9,f
 17349  0489  3901               	andlw	1
 17350  048A  0020               	movlb	0	; select bank0
 17351  048B  00A2               	movwf	??_LCDrecv
 17352  048C  0023               	movlb	3	; select bank3
 17353  048D  0811               	movf	17,w	;volatile
 17354  048E  391F               	andlw	31
 17355  048F  0020               	movlb	0	; select bank0
 17356  0490  0422               	iorwf	??_LCDrecv,w
 17357  0491  1D03               	btfss	3,2
 17358  0492  2C94               	goto	u4341
 17359  0493  2C95               	goto	u4340
 17360  0494                     u4341:
 17361  0494  2C86               	goto	l5220
 17362  0495                     u4340:
 17363  0495                     l5222:
 17364                           
 17365                           ;LCD/lcd.c: 34:   WriteI2C(0xf0 | 0x08 | 0x04 | 0x02 | mode); while ((SSP1CON2 & 0x1F) |
      +                           (SSP1STATbits.R_W));
 17366  0495  0826               	movf	LCDrecv@mode,w
 17367  0496  38FE               	iorlw	254
 17368  0497  3197  2743  3184   	fcall	_WriteI2C
 17369  049A                     l5224:
 17370  049A  0023               	movlb	3	; select bank3
 17371  049B  0C0F               	rrf	15,w	;volatile
 17372  049C  0C89               	rrf	9,f
 17373  049D  3901               	andlw	1
 17374  049E  0020               	movlb	0	; select bank0
 17375  049F  00A2               	movwf	??_LCDrecv
 17376  04A0  0023               	movlb	3	; select bank3
 17377  04A1  0811               	movf	17,w	;volatile
 17378  04A2  391F               	andlw	31
 17379  04A3  0020               	movlb	0	; select bank0
 17380  04A4  0422               	iorwf	??_LCDrecv,w
 17381  04A5  1D03               	btfss	3,2
 17382  04A6  2CA8               	goto	u4351
 17383  04A7  2CA9               	goto	u4350
 17384  04A8                     u4351:
 17385  04A8  2C9A               	goto	l5224
 17386  04A9                     u4350:
 17387  04A9                     l114:
 17388                           
 17389                           ;LCD/lcd.c: 35:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 17390  04A9  0000               	nop
 17391  04AA                     l115:	
 17392                           ;LCD/lcd.c: 36:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 17393                           
 17394  04AA  0023               	movlb	3	; select bank3
 17395  04AB  1491               	bsf	17,1	;volatile
 17396  04AC                     l116:
 17397  04AC  1891               	btfsc	17,1	;volatile
 17398  04AD  2CAF               	goto	u4361
 17399  04AE  2CB0               	goto	u4360
 17400  04AF                     u4361:
 17401  04AF  2CAC               	goto	l116
 17402  04B0                     u4360:
 17403  04B0                     l5226:
 17404  04B0  0023               	movlb	3	; select bank3
 17405  04B1  0C0F               	rrf	15,w	;volatile
 17406  04B2  0C89               	rrf	9,f
 17407  04B3  3901               	andlw	1
 17408  04B4  0020               	movlb	0	; select bank0
 17409  04B5  00A2               	movwf	??_LCDrecv
 17410  04B6  0023               	movlb	3	; select bank3
 17411  04B7  0811               	movf	17,w	;volatile
 17412  04B8  391F               	andlw	31
 17413  04B9  0020               	movlb	0	; select bank0
 17414  04BA  0422               	iorwf	??_LCDrecv,w
 17415  04BB  1D03               	btfss	3,2
 17416  04BC  2CBE               	goto	u4371
 17417  04BD  2CBF               	goto	u4370
 17418  04BE                     u4371:
 17419  04BE  2CB0               	goto	l5226
 17420  04BF                     u4370:
 17421  04BF                     l5228:
 17422                           
 17423                           ;LCD/lcd.c: 37:   WriteI2C(0x4e | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 17424  04BF  304F               	movlw	79
 17425  04C0  3197  2743  3184   	fcall	_WriteI2C
 17426  04C3                     l5230:
 17427  04C3  0023               	movlb	3	; select bank3
 17428  04C4  0C0F               	rrf	15,w	;volatile
 17429  04C5  0C89               	rrf	9,f
 17430  04C6  3901               	andlw	1
 17431  04C7  0020               	movlb	0	; select bank0
 17432  04C8  00A2               	movwf	??_LCDrecv
 17433  04C9  0023               	movlb	3	; select bank3
 17434  04CA  0811               	movf	17,w	;volatile
 17435  04CB  391F               	andlw	31
 17436  04CC  0020               	movlb	0	; select bank0
 17437  04CD  0422               	iorwf	??_LCDrecv,w
 17438  04CE  1D03               	btfss	3,2
 17439  04CF  2CD1               	goto	u4381
 17440  04D0  2CD2               	goto	u4380
 17441  04D1                     u4381:
 17442  04D1  2CC3               	goto	l5230
 17443  04D2                     u4380:
 17444  04D2                     l5232:
 17445                           
 17446                           ;LCD/lcd.c: 38:   hc = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 17447  04D2  3194  2402  3184   	fcall	_ReadI2C
 17448  04D5  0020               	movlb	0	; select bank0
 17449  04D6  00A2               	movwf	??_LCDrecv
 17450  04D7  0822               	movf	??_LCDrecv,w
 17451  04D8  00A4               	movwf	LCDrecv@hc
 17452  04D9                     l5234:
 17453  04D9  0023               	movlb	3	; select bank3
 17454  04DA  0C0F               	rrf	15,w	;volatile
 17455  04DB  0C89               	rrf	9,f
 17456  04DC  3901               	andlw	1
 17457  04DD  0020               	movlb	0	; select bank0
 17458  04DE  00A2               	movwf	??_LCDrecv
 17459  04DF  0023               	movlb	3	; select bank3
 17460  04E0  0811               	movf	17,w	;volatile
 17461  04E1  391F               	andlw	31
 17462  04E2  0020               	movlb	0	; select bank0
 17463  04E3  0422               	iorwf	??_LCDrecv,w
 17464  04E4  1D03               	btfss	3,2
 17465  04E5  2CE7               	goto	u4391
 17466  04E6  2CE8               	goto	u4390
 17467  04E7                     u4391:
 17468  04E7  2CD9               	goto	l5234
 17469  04E8                     u4390:
 17470  04E8                     l129:	
 17471                           ;LCD/lcd.c: 39:   do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKE
      +                          N); } while (0);
 17472                           
 17473  04E8  0023               	movlb	3	; select bank3
 17474  04E9  1691               	bsf	17,5	;volatile
 17475  04EA  1611               	bsf	17,4	;volatile
 17476  04EB                     l130:
 17477  04EB  1A11               	btfsc	17,4	;volatile
 17478  04EC  2CEE               	goto	u4401
 17479  04ED  2CEF               	goto	u4400
 17480  04EE                     u4401:
 17481  04EE  2CEB               	goto	l130
 17482  04EF                     u4400:
 17483  04EF                     l134:	
 17484                           ;LCD/lcd.c: 40:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 17485                           
 17486  04EF  1491               	bsf	17,1	;volatile
 17487  04F0                     l135:
 17488  04F0  1891               	btfsc	17,1	;volatile
 17489  04F1  2CF3               	goto	u4411
 17490  04F2  2CF4               	goto	u4410
 17491  04F3                     u4411:
 17492  04F3  2CF0               	goto	l135
 17493  04F4                     u4410:
 17494  04F4                     l5236:
 17495  04F4  0023               	movlb	3	; select bank3
 17496  04F5  0C0F               	rrf	15,w	;volatile
 17497  04F6  0C89               	rrf	9,f
 17498  04F7  3901               	andlw	1
 17499  04F8  0020               	movlb	0	; select bank0
 17500  04F9  00A2               	movwf	??_LCDrecv
 17501  04FA  0023               	movlb	3	; select bank3
 17502  04FB  0811               	movf	17,w	;volatile
 17503  04FC  391F               	andlw	31
 17504  04FD  0020               	movlb	0	; select bank0
 17505  04FE  0422               	iorwf	??_LCDrecv,w
 17506  04FF  1D03               	btfss	3,2
 17507  0500  2D02               	goto	u4421
 17508  0501  2D03               	goto	u4420
 17509  0502                     u4421:
 17510  0502  2CF4               	goto	l5236
 17511  0503                     u4420:
 17512  0503                     l5238:
 17513                           
 17514                           ;LCD/lcd.c: 41:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 17515  0503  304E               	movlw	78
 17516  0504  3197  2743  3184   	fcall	_WriteI2C
 17517  0507                     l5240:
 17518  0507  0023               	movlb	3	; select bank3
 17519  0508  0C0F               	rrf	15,w	;volatile
 17520  0509  0C89               	rrf	9,f
 17521  050A  3901               	andlw	1
 17522  050B  0020               	movlb	0	; select bank0
 17523  050C  00A2               	movwf	??_LCDrecv
 17524  050D  0023               	movlb	3	; select bank3
 17525  050E  0811               	movf	17,w	;volatile
 17526  050F  391F               	andlw	31
 17527  0510  0020               	movlb	0	; select bank0
 17528  0511  0422               	iorwf	??_LCDrecv,w
 17529  0512  1D03               	btfss	3,2
 17530  0513  2D15               	goto	u4431
 17531  0514  2D16               	goto	u4430
 17532  0515                     u4431:
 17533  0515  2D07               	goto	l5240
 17534  0516                     u4430:
 17535  0516                     l5242:
 17536                           
 17537                           ;LCD/lcd.c: 42:   WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1S
      +                          TATbits.R_W));
 17538  0516  0826               	movf	LCDrecv@mode,w
 17539  0517  38FA               	iorlw	250
 17540  0518  3197  2743  3184   	fcall	_WriteI2C
 17541  051B                     l5244:
 17542  051B  0023               	movlb	3	; select bank3
 17543  051C  0C0F               	rrf	15,w	;volatile
 17544  051D  0C89               	rrf	9,f
 17545  051E  3901               	andlw	1
 17546  051F  0020               	movlb	0	; select bank0
 17547  0520  00A2               	movwf	??_LCDrecv
 17548  0521  0023               	movlb	3	; select bank3
 17549  0522  0811               	movf	17,w	;volatile
 17550  0523  391F               	andlw	31
 17551  0524  0020               	movlb	0	; select bank0
 17552  0525  0422               	iorwf	??_LCDrecv,w
 17553  0526  1D03               	btfss	3,2
 17554  0527  2D29               	goto	u4441
 17555  0528  2D2A               	goto	u4440
 17556  0529                     u4441:
 17557  0529  2D1B               	goto	l5244
 17558  052A                     u4440:
 17559  052A                     l5246:
 17560                           
 17561                           ;LCD/lcd.c: 43:   WriteI2C(0xf0 | 0x08 | 0x04 | 0x02 | mode); while ((SSP1CON2 & 0x1F) |
      +                           (SSP1STATbits.R_W));
 17562  052A  0826               	movf	LCDrecv@mode,w
 17563  052B  38FE               	iorlw	254
 17564  052C  3197  2743  3184   	fcall	_WriteI2C
 17565  052F                     l5248:
 17566  052F  0023               	movlb	3	; select bank3
 17567  0530  0C0F               	rrf	15,w	;volatile
 17568  0531  0C89               	rrf	9,f
 17569  0532  3901               	andlw	1
 17570  0533  0020               	movlb	0	; select bank0
 17571  0534  00A2               	movwf	??_LCDrecv
 17572  0535  0023               	movlb	3	; select bank3
 17573  0536  0811               	movf	17,w	;volatile
 17574  0537  391F               	andlw	31
 17575  0538  0020               	movlb	0	; select bank0
 17576  0539  0422               	iorwf	??_LCDrecv,w
 17577  053A  1D03               	btfss	3,2
 17578  053B  2D3D               	goto	u4451
 17579  053C  2D3E               	goto	u4450
 17580  053D                     u4451:
 17581  053D  2D2F               	goto	l5248
 17582  053E                     u4450:
 17583  053E                     l150:
 17584                           
 17585                           ;LCD/lcd.c: 44:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 17586  053E  0000               	nop
 17587  053F                     l151:	
 17588                           ;LCD/lcd.c: 45:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 17589                           
 17590  053F  0023               	movlb	3	; select bank3
 17591  0540  1491               	bsf	17,1	;volatile
 17592  0541                     l152:
 17593  0541  1891               	btfsc	17,1	;volatile
 17594  0542  2D44               	goto	u4461
 17595  0543  2D45               	goto	u4460
 17596  0544                     u4461:
 17597  0544  2D41               	goto	l152
 17598  0545                     u4460:
 17599  0545                     l5250:
 17600  0545  0023               	movlb	3	; select bank3
 17601  0546  0C0F               	rrf	15,w	;volatile
 17602  0547  0C89               	rrf	9,f
 17603  0548  3901               	andlw	1
 17604  0549  0020               	movlb	0	; select bank0
 17605  054A  00A2               	movwf	??_LCDrecv
 17606  054B  0023               	movlb	3	; select bank3
 17607  054C  0811               	movf	17,w	;volatile
 17608  054D  391F               	andlw	31
 17609  054E  0020               	movlb	0	; select bank0
 17610  054F  0422               	iorwf	??_LCDrecv,w
 17611  0550  1D03               	btfss	3,2
 17612  0551  2D53               	goto	u4471
 17613  0552  2D54               	goto	u4470
 17614  0553                     u4471:
 17615  0553  2D45               	goto	l5250
 17616  0554                     u4470:
 17617  0554                     l5252:
 17618                           
 17619                           ;LCD/lcd.c: 46:   WriteI2C(0x4e | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 17620  0554  304F               	movlw	79
 17621  0555  3197  2743  3184   	fcall	_WriteI2C
 17622  0558                     l5254:
 17623  0558  0023               	movlb	3	; select bank3
 17624  0559  0C0F               	rrf	15,w	;volatile
 17625  055A  0C89               	rrf	9,f
 17626  055B  3901               	andlw	1
 17627  055C  0020               	movlb	0	; select bank0
 17628  055D  00A2               	movwf	??_LCDrecv
 17629  055E  0023               	movlb	3	; select bank3
 17630  055F  0811               	movf	17,w	;volatile
 17631  0560  391F               	andlw	31
 17632  0561  0020               	movlb	0	; select bank0
 17633  0562  0422               	iorwf	??_LCDrecv,w
 17634  0563  1D03               	btfss	3,2
 17635  0564  2D66               	goto	u4481
 17636  0565  2D67               	goto	u4480
 17637  0566                     u4481:
 17638  0566  2D58               	goto	l5254
 17639  0567                     u4480:
 17640  0567                     l5256:
 17641                           
 17642                           ;LCD/lcd.c: 47:   lc = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 17643  0567  3194  2402  3184   	fcall	_ReadI2C
 17644  056A  0020               	movlb	0	; select bank0
 17645  056B  00A2               	movwf	??_LCDrecv
 17646  056C  0822               	movf	??_LCDrecv,w
 17647  056D  00A5               	movwf	LCDrecv@lc
 17648  056E                     l5258:
 17649  056E  0023               	movlb	3	; select bank3
 17650  056F  0C0F               	rrf	15,w	;volatile
 17651  0570  0C89               	rrf	9,f
 17652  0571  3901               	andlw	1
 17653  0572  0020               	movlb	0	; select bank0
 17654  0573  00A2               	movwf	??_LCDrecv
 17655  0574  0023               	movlb	3	; select bank3
 17656  0575  0811               	movf	17,w	;volatile
 17657  0576  391F               	andlw	31
 17658  0577  0020               	movlb	0	; select bank0
 17659  0578  0422               	iorwf	??_LCDrecv,w
 17660  0579  1D03               	btfss	3,2
 17661  057A  2D7C               	goto	u4491
 17662  057B  2D7D               	goto	u4490
 17663  057C                     u4491:
 17664  057C  2D6E               	goto	l5258
 17665  057D                     u4490:
 17666  057D                     l165:	
 17667                           ;LCD/lcd.c: 48:   do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKE
      +                          N); } while (0);
 17668                           
 17669  057D  0023               	movlb	3	; select bank3
 17670  057E  1691               	bsf	17,5	;volatile
 17671  057F  1611               	bsf	17,4	;volatile
 17672  0580                     l166:
 17673  0580  1A11               	btfsc	17,4	;volatile
 17674  0581  2D83               	goto	u4501
 17675  0582  2D84               	goto	u4500
 17676  0583                     u4501:
 17677  0583  2D80               	goto	l166
 17678  0584                     u4500:
 17679  0584                     l170:	
 17680                           ;LCD/lcd.c: 49:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 17681                           
 17682  0584  1491               	bsf	17,1	;volatile
 17683  0585                     l171:
 17684  0585  1891               	btfsc	17,1	;volatile
 17685  0586  2D88               	goto	u4511
 17686  0587  2D89               	goto	u4510
 17687  0588                     u4511:
 17688  0588  2D85               	goto	l171
 17689  0589                     u4510:
 17690  0589                     l5260:
 17691  0589  0023               	movlb	3	; select bank3
 17692  058A  0C0F               	rrf	15,w	;volatile
 17693  058B  0C89               	rrf	9,f
 17694  058C  3901               	andlw	1
 17695  058D  0020               	movlb	0	; select bank0
 17696  058E  00A2               	movwf	??_LCDrecv
 17697  058F  0023               	movlb	3	; select bank3
 17698  0590  0811               	movf	17,w	;volatile
 17699  0591  391F               	andlw	31
 17700  0592  0020               	movlb	0	; select bank0
 17701  0593  0422               	iorwf	??_LCDrecv,w
 17702  0594  1D03               	btfss	3,2
 17703  0595  2D97               	goto	u4521
 17704  0596  2D98               	goto	u4520
 17705  0597                     u4521:
 17706  0597  2D89               	goto	l5260
 17707  0598                     u4520:
 17708  0598                     l5262:
 17709                           
 17710                           ;LCD/lcd.c: 50:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 17711  0598  304E               	movlw	78
 17712  0599  3197  2743  3184   	fcall	_WriteI2C
 17713  059C                     l5264:
 17714  059C  0023               	movlb	3	; select bank3
 17715  059D  0C0F               	rrf	15,w	;volatile
 17716  059E  0C89               	rrf	9,f
 17717  059F  3901               	andlw	1
 17718  05A0  0020               	movlb	0	; select bank0
 17719  05A1  00A2               	movwf	??_LCDrecv
 17720  05A2  0023               	movlb	3	; select bank3
 17721  05A3  0811               	movf	17,w	;volatile
 17722  05A4  391F               	andlw	31
 17723  05A5  0020               	movlb	0	; select bank0
 17724  05A6  0422               	iorwf	??_LCDrecv,w
 17725  05A7  1D03               	btfss	3,2
 17726  05A8  2DAA               	goto	u4531
 17727  05A9  2DAB               	goto	u4530
 17728  05AA                     u4531:
 17729  05AA  2D9C               	goto	l5264
 17730  05AB                     u4530:
 17731  05AB                     l5266:
 17732                           
 17733                           ;LCD/lcd.c: 51:   WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1S
      +                          TATbits.R_W));
 17734  05AB  0826               	movf	LCDrecv@mode,w
 17735  05AC  38FA               	iorlw	250
 17736  05AD  3197  2743  3184   	fcall	_WriteI2C
 17737  05B0                     l5268:
 17738  05B0  0023               	movlb	3	; select bank3
 17739  05B1  0C0F               	rrf	15,w	;volatile
 17740  05B2  0C89               	rrf	9,f
 17741  05B3  3901               	andlw	1
 17742  05B4  0020               	movlb	0	; select bank0
 17743  05B5  00A2               	movwf	??_LCDrecv
 17744  05B6  0023               	movlb	3	; select bank3
 17745  05B7  0811               	movf	17,w	;volatile
 17746  05B8  391F               	andlw	31
 17747  05B9  0020               	movlb	0	; select bank0
 17748  05BA  0422               	iorwf	??_LCDrecv,w
 17749  05BB  1D03               	btfss	3,2
 17750  05BC  2DBE               	goto	u4541
 17751  05BD  2DBF               	goto	u4540
 17752  05BE                     u4541:
 17753  05BE  2DB0               	goto	l5268
 17754  05BF                     u4540:
 17755  05BF                     l184:	
 17756                           ;LCD/lcd.c: 52:   do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 17757                           
 17758  05BF  0023               	movlb	3	; select bank3
 17759  05C0  1511               	bsf	17,2	;volatile
 17760  05C1                     l185:
 17761  05C1  1911               	btfsc	17,2	;volatile
 17762  05C2  2DC4               	goto	u4551
 17763  05C3  2DC5               	goto	u4550
 17764  05C4                     u4551:
 17765  05C4  2DC1               	goto	l185
 17766  05C5                     u4550:
 17767  05C5                     l5270:
 17768                           
 17769                           ;LCD/lcd.c: 53:   return ((hc&0xf0) | ((lc>>4)&0x0f));
 17770  05C5  0020               	movlb	0	; select bank0
 17771  05C6  0825               	movf	LCDrecv@lc,w
 17772  05C7  00A2               	movwf	??_LCDrecv
 17773  05C8  3004               	movlw	4
 17774  05C9                     u4565:
 17775  05C9  36A2               	lsrf	??_LCDrecv,f
 17776  05CA  0B89               	decfsz	9,f
 17777  05CB  2DC9               	goto	u4565
 17778  05CC  300F               	movlw	15
 17779  05CD  0522               	andwf	??_LCDrecv,w
 17780  05CE  00A3               	movwf	??_LCDrecv+1
 17781  05CF  0824               	movf	LCDrecv@hc,w
 17782  05D0  39F0               	andlw	240
 17783  05D1  0423               	iorwf	??_LCDrecv+1,w
 17784  05D2                     l189:
 17785  05D2  0008               	return
 17786  05D3                     __end_of_LCDrecv:
 17787                           
 17788                           	psect	text46
 17789  1743                     __ptext46:	
 17790 ;; *************** function _WriteI2C *****************
 17791 ;; Defined at:
 17792 ;;		line 59 in file "I2C/i2c.c"
 17793 ;; Parameters:    Size  Location     Type
 17794 ;;  data_out        1    wreg     unsigned char 
 17795 ;; Auto vars:     Size  Location     Type
 17796 ;;  data_out        1    1[BANK0 ] unsigned char 
 17797 ;; Return value:  Size  Location     Type
 17798 ;;                  1    wreg      char 
 17799 ;; Registers used:
 17800 ;;		wreg, status,2, status,0
 17801 ;; Tracked objects:
 17802 ;;		On entry : 0/0
 17803 ;;		On exit  : 0/0
 17804 ;;		Unchanged: 0/0
 17805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17807 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17808 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17809 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17810 ;;Total ram usage:        2 bytes
 17811 ;; Hardware stack levels used: 1
 17812 ;; Hardware stack levels required when called: 7
 17813 ;; This function calls:
 17814 ;;		Nothing
 17815 ;; This function is called by:
 17816 ;;		_LCDsend
 17817 ;;		_LCDrecv
 17818 ;;		_LCDsend2x4
 17819 ;;		_readTC74
 17820 ;; This function uses a non-reentrant model
 17821 ;;
 17822                           
 17823                           
 17824                           ;psect for function _WriteI2C
 17825  1743                     _WriteI2C:
 17826                           
 17827                           ;incstack = 0
 17828                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 17829                           ;WriteI2C@data_out stored from wreg
 17830  1743  0020               	movlb	0	; select bank0
 17831  1744  00A1               	movwf	WriteI2C@data_out
 17832  1745                     l4750:
 17833                           
 17834                           ;I2C/i2c.c: 59: signed char WriteI2C( unsigned char data_out );I2C/i2c.c: 60: {;I2C/i2c.
      +                          c: 61:   SSP1BUF = data_out;
 17835  1745  0821               	movf	WriteI2C@data_out,w
 17836  1746  0023               	movlb	3	; select bank3
 17837  1747  008C               	movwf	12	;volatile
 17838  1748                     l4752:
 17839                           
 17840                           ;I2C/i2c.c: 62:   if ( SSP1CON1bits.WCOL )
 17841  1748  1F90               	btfss	16,7	;volatile
 17842  1749  2F4B               	goto	u3241
 17843  174A  2F4C               	goto	u3240
 17844  174B                     u3241:
 17845  174B  2F4D               	goto	l4758
 17846  174C                     u3240:
 17847  174C  2F9C               	goto	l36
 17848  174D                     l4758:
 17849                           
 17850                           ;I2C/i2c.c: 65:   {;I2C/i2c.c: 66:  if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)!=0x0
      +                          B) )
 17851  174D  300F               	movlw	15
 17852  174E  0510               	andwf	16,w	;volatile
 17853  174F  0020               	movlb	0	; select bank0
 17854  1750  00A0               	movwf	??_WriteI2C
 17855  1751  3008               	movlw	8
 17856  1752  0620               	xorwf	??_WriteI2C,w
 17857  1753  1903               	btfsc	3,2
 17858  1754  2F56               	goto	u3251
 17859  1755  2F57               	goto	u3250
 17860  1756                     u3251:
 17861  1756  2F70               	goto	l4770
 17862  1757                     u3250:
 17863  1757                     l4760:
 17864  1757  300F               	movlw	15
 17865  1758  0023               	movlb	3	; select bank3
 17866  1759  0510               	andwf	16,w	;volatile
 17867  175A  0020               	movlb	0	; select bank0
 17868  175B  00A0               	movwf	??_WriteI2C
 17869  175C  300B               	movlw	11
 17870  175D  0620               	xorwf	??_WriteI2C,w
 17871  175E  1903               	btfsc	3,2
 17872  175F  2F61               	goto	u3261
 17873  1760  2F62               	goto	u3260
 17874  1761                     u3261:
 17875  1761  2F70               	goto	l4770
 17876  1762                     u3260:
 17877  1762                     l4762:
 17878                           
 17879                           ;I2C/i2c.c: 67:  {;I2C/i2c.c: 68:        SSP1CON1bits.CKP = 1;
 17880  1762  0023               	movlb	3	; select bank3
 17881  1763  1610               	bsf	16,4	;volatile
 17882  1764                     l39:	
 17883                           ;I2C/i2c.c: 69:        while ( !PIR3bits.SSP1IF );
 17884                           
 17885  1764  002E               	movlb	14	; select bank14
 17886  1765  1C0F               	btfss	15,0	;volatile
 17887  1766  2F68               	goto	u3271
 17888  1767  2F69               	goto	u3270
 17889  1768                     u3271:
 17890  1768  2F64               	goto	l39
 17891  1769                     u3270:
 17892  1769                     l41:
 17893                           
 17894                           ;I2C/i2c.c: 71:        if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 17895  1769  0023               	movlb	3	; select bank3
 17896  176A  190F               	btfsc	15,2	;volatile
 17897  176B  2F6D               	goto	u3281
 17898  176C  2F6E               	goto	u3280
 17899  176D                     u3281:
 17900  176D  2F9C               	goto	l36
 17901  176E                     u3280:
 17902  176E                     l4764:
 17903  176E  080F               	movf	15,w	;volatile
 17904  176F  2F9C               	goto	l36
 17905  1770                     l4770:
 17906  1770  300F               	movlw	15
 17907  1771  0023               	movlb	3	; select bank3
 17908  1772  0510               	andwf	16,w	;volatile
 17909  1773  0020               	movlb	0	; select bank0
 17910  1774  00A0               	movwf	??_WriteI2C
 17911  1775  3008               	movlw	8
 17912  1776  0620               	xorwf	??_WriteI2C,w
 17913  1777  1903               	btfsc	3,2
 17914  1778  2F7A               	goto	u3291
 17915  1779  2F7B               	goto	u3290
 17916  177A                     u3291:
 17917  177A  2F86               	goto	l48
 17918  177B                     u3290:
 17919  177B                     l4772:
 17920  177B  300F               	movlw	15
 17921  177C  0023               	movlb	3	; select bank3
 17922  177D  0510               	andwf	16,w	;volatile
 17923  177E  0020               	movlb	0	; select bank0
 17924  177F  00A0               	movwf	??_WriteI2C
 17925  1780  300B               	movlw	11
 17926  1781  0620               	xorwf	??_WriteI2C,w
 17927  1782  1D03               	btfss	3,2
 17928  1783  2F85               	goto	u3301
 17929  1784  2F86               	goto	u3300
 17930  1785                     u3301:
 17931  1785  2F9C               	goto	l36
 17932  1786                     u3300:
 17933  1786                     l48:
 17934  1786  0023               	movlb	3	; select bank3
 17935  1787  180F               	btfsc	15,0	;volatile
 17936  1788  2F8A               	goto	u3311
 17937  1789  2F8B               	goto	u3310
 17938  178A                     u3311:
 17939  178A  2F86               	goto	l48
 17940  178B                     u3310:
 17941  178B                     l4774:
 17942  178B  0023               	movlb	3	; select bank3
 17943  178C  0C0F               	rrf	15,w	;volatile
 17944  178D  0C89               	rrf	9,f
 17945  178E  3901               	andlw	1
 17946  178F  0020               	movlb	0	; select bank0
 17947  1790  00A0               	movwf	??_WriteI2C
 17948  1791  0023               	movlb	3	; select bank3
 17949  1792  0811               	movf	17,w	;volatile
 17950  1793  391F               	andlw	31
 17951  1794  0020               	movlb	0	; select bank0
 17952  1795  0420               	iorwf	??_WriteI2C,w
 17953  1796  1D03               	btfss	3,2
 17954  1797  2F99               	goto	u3321
 17955  1798  2F9A               	goto	u3320
 17956  1799                     u3321:
 17957  1799  2F8B               	goto	l4774
 17958  179A                     u3320:
 17959  179A                     l53:
 17960                           
 17961                           ;I2C/i2c.c: 84:      if ( SSP1CON2bits.ACKSTAT )
 17962  179A  0023               	movlb	3	; select bank3
 17963  179B  0811               	movf	17,w	;volatile
 17964  179C                     l36:
 17965  179C  0008               	return
 17966  179D                     __end_of_WriteI2C:
 17967                           
 17968                           	psect	text47
 17969  1402                     __ptext47:	
 17970 ;; *************** function _ReadI2C *****************
 17971 ;; Defined at:
 17972 ;;		line 44 in file "I2C/i2c.c"
 17973 ;; Parameters:    Size  Location     Type
 17974 ;;		None
 17975 ;; Auto vars:     Size  Location     Type
 17976 ;;		None
 17977 ;; Return value:  Size  Location     Type
 17978 ;;                  1    wreg      unsigned char 
 17979 ;; Registers used:
 17980 ;;		wreg, status,2, status,0
 17981 ;; Tracked objects:
 17982 ;;		On entry : 0/0
 17983 ;;		On exit  : 0/0
 17984 ;;		Unchanged: 0/0
 17985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 17986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17988 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17989 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 17990 ;;Total ram usage:        1 bytes
 17991 ;; Hardware stack levels used: 1
 17992 ;; Hardware stack levels required when called: 7
 17993 ;; This function calls:
 17994 ;;		Nothing
 17995 ;; This function is called by:
 17996 ;;		_LCDrecv
 17997 ;;		_readTC74
 17998 ;; This function uses a non-reentrant model
 17999 ;;
 18000                           
 18001                           
 18002                           ;psect for function _ReadI2C
 18003  1402                     _ReadI2C:
 18004  1402                     l4972:	
 18005                           ;incstack = 0
 18006                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 18007                           
 18008                           
 18009                           ;I2C/i2c.c: 46: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 18010  1402  300F               	movlw	15
 18011  1403  0023               	movlb	3	; select bank3
 18012  1404  0510               	andwf	16,w	;volatile
 18013  1405  0020               	movlb	0	; select bank0
 18014  1406  00A0               	movwf	??_ReadI2C
 18015  1407  3008               	movlw	8
 18016  1408  0620               	xorwf	??_ReadI2C,w
 18017  1409  1903               	btfsc	3,2
 18018  140A  2C0C               	goto	u3841
 18019  140B  2C0D               	goto	u3840
 18020  140C                     u3841:
 18021  140C  2C18               	goto	l28
 18022  140D                     u3840:
 18023  140D                     l4974:
 18024  140D  300F               	movlw	15
 18025  140E  0023               	movlb	3	; select bank3
 18026  140F  0510               	andwf	16,w	;volatile
 18027  1410  0020               	movlb	0	; select bank0
 18028  1411  00A0               	movwf	??_ReadI2C
 18029  1412  300B               	movlw	11
 18030  1413  0620               	xorwf	??_ReadI2C,w
 18031  1414  1D03               	btfss	3,2
 18032  1415  2C17               	goto	u3851
 18033  1416  2C18               	goto	u3850
 18034  1417                     u3851:
 18035  1417  2C1A               	goto	l29
 18036  1418                     u3850:
 18037  1418                     l28:
 18038                           
 18039                           ;I2C/i2c.c: 47:   SSP1CON2bits.RCEN = 1;
 18040  1418  0023               	movlb	3	; select bank3
 18041  1419  1591               	bsf	17,3	;volatile
 18042  141A                     l29:
 18043  141A  0023               	movlb	3	; select bank3
 18044  141B  1C0F               	btfss	15,0	;volatile
 18045  141C  2C1E               	goto	u3861
 18046  141D  2C1F               	goto	u3860
 18047  141E                     u3861:
 18048  141E  2C1A               	goto	l29
 18049  141F                     u3860:
 18050  141F                     l4976:
 18051                           
 18052                           ;I2C/i2c.c: 49:   return ( SSP1BUF );
 18053  141F  080C               	movf	12,w	;volatile
 18054  1420                     l32:
 18055  1420  0008               	return
 18056  1421                     __end_of_ReadI2C:
 18057                           
 18058                           	psect	intentry
 18059  0004                     __pintentry:	
 18060 ;; *************** function _INTERRUPT_InterruptManager *****************
 18061 ;; Defined at:
 18062 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 18063 ;; Parameters:    Size  Location     Type
 18064 ;;		None
 18065 ;; Auto vars:     Size  Location     Type
 18066 ;;		None
 18067 ;; Return value:  Size  Location     Type
 18068 ;;                  1    wreg      void 
 18069 ;; Registers used:
 18070 ;;		wreg, status,2, status,0, pclath, cstack
 18071 ;; Tracked objects:
 18072 ;;		On entry : 0/0
 18073 ;;		On exit  : 0/0
 18074 ;;		Unchanged: 0/0
 18075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18080 ;;Total ram usage:        0 bytes
 18081 ;; Hardware stack levels used: 1
 18082 ;; Hardware stack levels required when called: 6
 18083 ;; This function calls:
 18084 ;;		_TMR1_ISR
 18085 ;;		_TMR2_ISR
 18086 ;; This function is called by:
 18087 ;;		Interrupt level 1
 18088 ;; This function uses a non-reentrant model
 18089 ;;
 18090                           
 18091  0004                     _INTERRUPT_InterruptManager:
 18092                           
 18093                           ;incstack = 0
 18094  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 18095                           
 18096                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 18097  0005  3180               	pagesel	$
 18098  0006                     i1l5890:
 18099                           
 18100                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
 18101  0006  1F0B               	btfss	11,6	;volatile
 18102  0007  2809               	goto	u509_21
 18103  0008  280A               	goto	u509_20
 18104  0009                     u509_21:
 18105  0009  2823               	goto	i1l507
 18106  000A                     u509_20:
 18107  000A                     i1l5892:
 18108                           
 18109                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE4bits.TMR2IE == 1 && PIR4bits.TMR2IF == 1)
 18110  000A  002E               	movlb	14	; select bank14
 18111  000B  1C9A               	btfss	26,1	;volatile
 18112  000C  280E               	goto	u510_21
 18113  000D  280F               	goto	u510_20
 18114  000E                     u510_21:
 18115  000E  2817               	goto	i1l502
 18116  000F                     u510_20:
 18117  000F                     i1l5894:
 18118  000F  1C90               	btfss	16,1	;volatile
 18119  0010  2812               	goto	u511_21
 18120  0011  2813               	goto	u511_20
 18121  0012                     u511_21:
 18122  0012  2817               	goto	i1l502
 18123  0013                     u511_20:
 18124  0013                     i1l5896:
 18125                           
 18126                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR2_ISR();
 18127  0013  3191  21D4  3180   	fcall	_TMR2_ISR
 18128                           
 18129                           ;mcc_generated_files/interrupt_manager.c: 60:         }
 18130  0016  2823               	goto	i1l507
 18131  0017                     i1l502:	
 18132                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE4bits.TMR1IE == 1 && PI
      +                          R4bits.TMR1IF == 1)
 18133                           
 18134  0017  1C1A               	btfss	26,0	;volatile
 18135  0018  281A               	goto	u512_21
 18136  0019  281B               	goto	u512_20
 18137  001A                     u512_21:
 18138  001A  2823               	goto	i1l503
 18139  001B                     u512_20:
 18140  001B                     i1l5898:
 18141  001B  1C10               	btfss	16,0	;volatile
 18142  001C  281E               	goto	u513_21
 18143  001D  281F               	goto	u513_20
 18144  001E                     u513_21:
 18145  001E  2823               	goto	i1l503
 18146  001F                     u513_20:
 18147  001F                     i1l5900:
 18148                           
 18149                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR1_ISR();
 18150  001F  3192  2259  3180   	fcall	_TMR1_ISR
 18151                           
 18152                           ;mcc_generated_files/interrupt_manager.c: 64:         }
 18153  0022  2823               	goto	i1l507
 18154  0023                     i1l503:
 18155  0023                     i1l507:	
 18156                           ;mcc_generated_files/interrupt_manager.c: 69:     }
 18157                           
 18158  0023  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 18159  0024  0009               	retfie
 18160  0025                     __end_of_INTERRUPT_InterruptManager:
 18161                           
 18162                           	psect	text49
 18163  11D4                     __ptext49:	
 18164 ;; *************** function _TMR2_ISR *****************
 18165 ;; Defined at:
 18166 ;;		line 165 in file "mcc_generated_files/tmr2.c"
 18167 ;; Parameters:    Size  Location     Type
 18168 ;;		None
 18169 ;; Auto vars:     Size  Location     Type
 18170 ;;		None
 18171 ;; Return value:  Size  Location     Type
 18172 ;;                  1    wreg      void 
 18173 ;; Registers used:
 18174 ;;		wreg, status,2, status,0, pclath, cstack
 18175 ;; Tracked objects:
 18176 ;;		On entry : 0/0
 18177 ;;		On exit  : 0/0
 18178 ;;		Unchanged: 0/0
 18179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18184 ;;Total ram usage:        0 bytes
 18185 ;; Hardware stack levels used: 1
 18186 ;; Hardware stack levels required when called: 2
 18187 ;; This function calls:
 18188 ;;		_TMR2_CallBack
 18189 ;; This function is called by:
 18190 ;;		_INTERRUPT_InterruptManager
 18191 ;; This function uses a non-reentrant model
 18192 ;;
 18193                           
 18194                           
 18195                           ;psect for function _TMR2_ISR
 18196  11D4                     _TMR2_ISR:
 18197  11D4                     i1l5612:	
 18198                           ;incstack = 0
 18199                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 18200                           
 18201                           
 18202                           ;mcc_generated_files/tmr2.c: 169:     PIR4bits.TMR2IF = 0;
 18203  11D4  002E               	movlb	14	; select bank14
 18204  11D5  1090               	bcf	16,1	;volatile
 18205  11D6                     i1l5614:
 18206                           
 18207                           ;mcc_generated_files/tmr2.c: 173:     TMR2_CallBack();
 18208  11D6  3192  2232  3191   	fcall	_TMR2_CallBack
 18209  11D9                     i1l1206:
 18210  11D9  0008               	return
 18211  11DA                     __end_of_TMR2_ISR:
 18212                           
 18213                           	psect	text50
 18214  1232                     __ptext50:	
 18215 ;; *************** function _TMR2_CallBack *****************
 18216 ;; Defined at:
 18217 ;;		line 176 in file "mcc_generated_files/tmr2.c"
 18218 ;; Parameters:    Size  Location     Type
 18219 ;;		None
 18220 ;; Auto vars:     Size  Location     Type
 18221 ;;		None
 18222 ;; Return value:  Size  Location     Type
 18223 ;;                  1    wreg      void 
 18224 ;; Registers used:
 18225 ;;		wreg, status,2, status,0, pclath, cstack
 18226 ;; Tracked objects:
 18227 ;;		On entry : 0/0
 18228 ;;		On exit  : 0/0
 18229 ;;		Unchanged: 0/0
 18230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18235 ;;Total ram usage:        0 bytes
 18236 ;; Hardware stack levels used: 1
 18237 ;; Hardware stack levels required when called: 1
 18238 ;; This function calls:
 18239 ;;		Absolute function
 18240 ;;		_TMR2_DefaultInterruptHandler
 18241 ;; This function is called by:
 18242 ;;		_TMR2_ISR
 18243 ;; This function uses a non-reentrant model
 18244 ;;
 18245                           
 18246                           
 18247                           ;psect for function _TMR2_CallBack
 18248  1232                     _TMR2_CallBack:
 18249  1232                     i1l5454:	
 18250                           ;incstack = 0
 18251                           ; Regs used in _TMR2_CallBack: [wreg+status,2+status,0+pclath+cstack]
 18252                           
 18253                           
 18254                           ;mcc_generated_files/tmr2.c: 180:     if(TMR2_InterruptHandler)
 18255  1232  0022               	movlb	2	; select bank2
 18256  1233  085F               	movf	_TMR2_InterruptHandler^(0+256),w
 18257  1234  0460               	iorwf	(_TMR2_InterruptHandler+1)^(0+256),w
 18258  1235  1903               	btfsc	3,2
 18259  1236  2A38               	goto	u461_21
 18260  1237  2A39               	goto	u461_20
 18261  1238                     u461_21:
 18262  1238  2A3E               	goto	i1l1210
 18263  1239                     u461_20:
 18264  1239                     i1l5456:
 18265                           
 18266                           ;mcc_generated_files/tmr2.c: 181:     {;mcc_generated_files/tmr2.c: 182:         TMR2_In
      +                          terruptHandler();
 18267  1239  0860               	movf	(_TMR2_InterruptHandler+1)^(0+256),w
 18268  123A  008A               	movwf	10
 18269  123B  085F               	movf	_TMR2_InterruptHandler^(0+256),w
 18270  123C  000A               	callw
 18271  123D  3192               	pagesel	$
 18272  123E                     i1l1210:
 18273  123E  0008               	return
 18274  123F                     __end_of_TMR2_CallBack:
 18275                           
 18276                           	psect	text51
 18277  0002                     __ptext51:	
 18278 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 18279 ;; Defined at:
 18280 ;;		line 190 in file "mcc_generated_files/tmr2.c"
 18281 ;; Parameters:    Size  Location     Type
 18282 ;;		None
 18283 ;; Auto vars:     Size  Location     Type
 18284 ;;		None
 18285 ;; Return value:  Size  Location     Type
 18286 ;;                  1    wreg      void 
 18287 ;; Registers used:
 18288 ;;		None
 18289 ;; Tracked objects:
 18290 ;;		On entry : 0/0
 18291 ;;		On exit  : 0/0
 18292 ;;		Unchanged: 0/0
 18293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18298 ;;Total ram usage:        0 bytes
 18299 ;; Hardware stack levels used: 1
 18300 ;; This function calls:
 18301 ;;		Nothing
 18302 ;; This function is called by:
 18303 ;;		_TMR2_Initialize
 18304 ;;		_TMR2_CallBack
 18305 ;; This function uses a non-reentrant model
 18306 ;;
 18307                           
 18308                           
 18309                           ;psect for function _TMR2_DefaultInterruptHandler
 18310  0002                     _TMR2_DefaultInterruptHandler:
 18311  0002                     i1l1216:	
 18312                           ;incstack = 0
 18313                           ; Regs used in _TMR2_DefaultInterruptHandler: []
 18314                           
 18315  0002  0008               	return
 18316  0003                     __end_of_TMR2_DefaultInterruptHandler:
 18317                           
 18318                           	psect	text52
 18319  1259                     __ptext52:	
 18320 ;; *************** function _TMR1_ISR *****************
 18321 ;; Defined at:
 18322 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 18323 ;; Parameters:    Size  Location     Type
 18324 ;;		None
 18325 ;; Auto vars:     Size  Location     Type
 18326 ;;		None
 18327 ;; Return value:  Size  Location     Type
 18328 ;;                  1    wreg      void 
 18329 ;; Registers used:
 18330 ;;		wreg, status,2, status,0, pclath, cstack
 18331 ;; Tracked objects:
 18332 ;;		On entry : 0/0
 18333 ;;		On exit  : 0/0
 18334 ;;		Unchanged: 0/0
 18335 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18340 ;;Total ram usage:        0 bytes
 18341 ;; Hardware stack levels used: 1
 18342 ;; Hardware stack levels required when called: 5
 18343 ;; This function calls:
 18344 ;;		_TMR1_CallBack
 18345 ;;		_TMR1_WriteTimer
 18346 ;; This function is called by:
 18347 ;;		_INTERRUPT_InterruptManager
 18348 ;; This function uses a non-reentrant model
 18349 ;;
 18350                           
 18351                           
 18352                           ;psect for function _TMR1_ISR
 18353  1259                     _TMR1_ISR:
 18354  1259                     i1l5616:	
 18355                           ;incstack = 0
 18356                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 18357                           
 18358                           
 18359                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 18360  1259  002E               	movlb	14	; select bank14
 18361  125A  1010               	bcf	16,0	;volatile
 18362  125B                     i1l5618:
 18363                           
 18364                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 18365  125B  0022               	movlb	2	; select bank2
 18366  125C  0864               	movf	(_timer1ReloadVal+1)^(0+256),w	;volatile
 18367  125D  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 18368  125E  0863               	movf	_timer1ReloadVal^(0+256),w	;volatile
 18369  125F  00F0               	movwf	TMR1_WriteTimer@timerVal
 18370  1260  3192  2296  3192   	fcall	_TMR1_WriteTimer
 18371                           
 18372                           ;mcc_generated_files/tmr1.c: 173:     TMR1_CallBack();
 18373  1263  3192  2225  3192   	fcall	_TMR1_CallBack
 18374  1266                     i1l566:
 18375  1266  0008               	return
 18376  1267                     __end_of_TMR1_ISR:
 18377                           
 18378                           	psect	text53
 18379  1296                     __ptext53:	
 18380 ;; *************** function _TMR1_WriteTimer *****************
 18381 ;; Defined at:
 18382 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 18383 ;; Parameters:    Size  Location     Type
 18384 ;;  timerVal        2    0[COMMON] unsigned short 
 18385 ;; Auto vars:     Size  Location     Type
 18386 ;;		None
 18387 ;; Return value:  Size  Location     Type
 18388 ;;                  1    wreg      void 
 18389 ;; Registers used:
 18390 ;;		wreg, status,2
 18391 ;; Tracked objects:
 18392 ;;		On entry : 0/0
 18393 ;;		On exit  : 0/0
 18394 ;;		Unchanged: 0/0
 18395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18396 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18399 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18400 ;;Total ram usage:        2 bytes
 18401 ;; Hardware stack levels used: 1
 18402 ;; This function calls:
 18403 ;;		Nothing
 18404 ;; This function is called by:
 18405 ;;		_TMR1_ISR
 18406 ;;		_TMR1_Reload
 18407 ;; This function uses a non-reentrant model
 18408 ;;
 18409                           
 18410                           
 18411                           ;psect for function _TMR1_WriteTimer
 18412  1296                     _TMR1_WriteTimer:
 18413  1296                     i1l5398:	
 18414                           ;incstack = 0
 18415                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 18416                           
 18417                           
 18418                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 18419  1296  0024               	movlb	4	; select bank4
 18420  1297  1D0E               	btfss	14,2	;volatile
 18421  1298  2A9A               	goto	u458_21
 18422  1299  2A9B               	goto	u458_20
 18423  129A                     u458_21:
 18424  129A  2AA2               	goto	i1l5408
 18425  129B                     u458_20:
 18426  129B                     i1l5400:
 18427                           
 18428                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 18429  129B  100E               	bcf	14,0	;volatile
 18430  129C                     i1l5402:
 18431                           
 18432                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (uint8_t)(timerVal >> 8);
 18433  129C  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 18434  129D  008D               	movwf	13	;volatile
 18435  129E                     i1l5404:
 18436                           
 18437                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = (uint8_t)timerVal;
 18438  129E  0870               	movf	TMR1_WriteTimer@timerVal,w
 18439  129F  008C               	movwf	12	;volatile
 18440  12A0                     i1l5406:
 18441                           
 18442                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 18443  12A0  140E               	bsf	14,0	;volatile
 18444                           
 18445                           ;mcc_generated_files/tmr1.c: 140:     }
 18446  12A1  2AA6               	goto	i1l554
 18447  12A2                     i1l5408:
 18448                           
 18449                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 18450  12A2  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 18451  12A3  008D               	movwf	13	;volatile
 18452  12A4                     i1l5410:
 18453                           
 18454                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = (uint8_t)timerVal;
 18455  12A4  0870               	movf	TMR1_WriteTimer@timerVal,w
 18456  12A5  008C               	movwf	12	;volatile
 18457  12A6                     i1l554:
 18458  12A6  0008               	return
 18459  12A7                     __end_of_TMR1_WriteTimer:
 18460                           
 18461                           	psect	text54
 18462  1225                     __ptext54:	
 18463 ;; *************** function _TMR1_CallBack *****************
 18464 ;; Defined at:
 18465 ;;		line 176 in file "mcc_generated_files/tmr1.c"
 18466 ;; Parameters:    Size  Location     Type
 18467 ;;		None
 18468 ;; Auto vars:     Size  Location     Type
 18469 ;;		None
 18470 ;; Return value:  Size  Location     Type
 18471 ;;                  1    wreg      void 
 18472 ;; Registers used:
 18473 ;;		wreg, status,2, status,0, pclath, cstack
 18474 ;; Tracked objects:
 18475 ;;		On entry : 0/0
 18476 ;;		On exit  : 0/0
 18477 ;;		Unchanged: 0/0
 18478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18483 ;;Total ram usage:        0 bytes
 18484 ;; Hardware stack levels used: 1
 18485 ;; Hardware stack levels required when called: 4
 18486 ;; This function calls:
 18487 ;;		Absolute function
 18488 ;;		_TMR1_DefaultInterruptHandler
 18489 ;;		_timerInterrupt
 18490 ;; This function is called by:
 18491 ;;		_TMR1_ISR
 18492 ;; This function uses a non-reentrant model
 18493 ;;
 18494                           
 18495                           
 18496                           ;psect for function _TMR1_CallBack
 18497  1225                     _TMR1_CallBack:
 18498  1225                     i1l5412:	
 18499                           ;incstack = 0
 18500                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
 18501                           
 18502                           
 18503                           ;mcc_generated_files/tmr1.c: 179:     if(TMR1_InterruptHandler)
 18504  1225  0022               	movlb	2	; select bank2
 18505  1226  0861               	movf	_TMR1_InterruptHandler^(0+256),w
 18506  1227  0462               	iorwf	(_TMR1_InterruptHandler+1)^(0+256),w
 18507  1228  1903               	btfsc	3,2
 18508  1229  2A2B               	goto	u459_21
 18509  122A  2A2C               	goto	u459_20
 18510  122B                     u459_21:
 18511  122B  2A31               	goto	i1l570
 18512  122C                     u459_20:
 18513  122C                     i1l5414:
 18514                           
 18515                           ;mcc_generated_files/tmr1.c: 180:     {;mcc_generated_files/tmr1.c: 181:         TMR1_In
      +                          terruptHandler();
 18516  122C  0862               	movf	(_TMR1_InterruptHandler+1)^(0+256),w
 18517  122D  008A               	movwf	10
 18518  122E  0861               	movf	_TMR1_InterruptHandler^(0+256),w
 18519  122F  000A               	callw
 18520  1230  3192               	pagesel	$
 18521  1231                     i1l570:
 18522  1231  0008               	return
 18523  1232                     __end_of_TMR1_CallBack:
 18524                           
 18525                           	psect	text55
 18526  11CD                     __ptext55:	
 18527 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 18528 ;; Defined at:
 18529 ;;		line 189 in file "mcc_generated_files/tmr1.c"
 18530 ;; Parameters:    Size  Location     Type
 18531 ;;		None
 18532 ;; Auto vars:     Size  Location     Type
 18533 ;;		None
 18534 ;; Return value:  Size  Location     Type
 18535 ;;                  1    wreg      void 
 18536 ;; Registers used:
 18537 ;;		None
 18538 ;; Tracked objects:
 18539 ;;		On entry : 0/0
 18540 ;;		On exit  : 0/0
 18541 ;;		Unchanged: 0/0
 18542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18546 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18547 ;;Total ram usage:        0 bytes
 18548 ;; Hardware stack levels used: 1
 18549 ;; This function calls:
 18550 ;;		Nothing
 18551 ;; This function is called by:
 18552 ;;		_TMR1_Initialize
 18553 ;;		_TMR1_CallBack
 18554 ;; This function uses a non-reentrant model
 18555 ;;
 18556                           
 18557                           
 18558                           ;psect for function _TMR1_DefaultInterruptHandler
 18559  11CD                     _TMR1_DefaultInterruptHandler:
 18560  11CD                     i1l576:	
 18561                           ;incstack = 0
 18562                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 18563                           
 18564  11CD  0008               	return
 18565  11CE                     __end_of_TMR1_DefaultInterruptHandler:
 18566                           
 18567                           	psect	text56
 18568  0BAC                     __ptext56:	
 18569 ;; *************** function _timerInterrupt *****************
 18570 ;; Defined at:
 18571 ;;		line 141 in file "main.c"
 18572 ;; Parameters:    Size  Location     Type
 18573 ;;		None
 18574 ;; Auto vars:     Size  Location     Type
 18575 ;;  temperature     1    9[COMMON] unsigned char 
 18576 ;;  value           2   10[COMMON] unsigned short 
 18577 ;; Return value:  Size  Location     Type
 18578 ;;                  1    wreg      void 
 18579 ;; Registers used:
 18580 ;;		wreg, status,2, status,0, pclath, cstack
 18581 ;; Tracked objects:
 18582 ;;		On entry : 0/0
 18583 ;;		On exit  : 0/0
 18584 ;;		Unchanged: 0/0
 18585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 18586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18587 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18588 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18589 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 18590 ;;Total ram usage:        5 bytes
 18591 ;; Hardware stack levels used: 1
 18592 ;; Hardware stack levels required when called: 3
 18593 ;; This function calls:
 18594 ;;		_ADCC_GetSingleConversion
 18595 ;;		_PWM6_LoadDutyValue
 18596 ;;		_activateAlarm
 18597 ;;		_deactivatePWM
 18598 ;;		_writeRingBuffer
 18599 ;;		i1_DATAEE_WriteByte
 18600 ;;		i1_readTC74
 18601 ;; This function is called by:
 18602 ;;		_main
 18603 ;;		_TMR1_CallBack
 18604 ;; This function uses a non-reentrant model
 18605 ;;
 18606                           
 18607                           
 18608                           ;psect for function _timerInterrupt
 18609  0BAC                     _timerInterrupt:
 18610  0BAC                     i1l5028:	
 18611                           ;incstack = 0
 18612                           ; Regs used in _timerInterrupt: [wreg+status,2+status,0+pclath+cstack]
 18613                           
 18614                           
 18615                           ;main.c: 143:    adc_result_t value;;main.c: 145:     if(counter == 5){
 18616  0BAC  3005               	movlw	5
 18617  0BAD  0022               	movlb	2	; select bank2
 18618  0BAE  0666               	xorwf	_counter^(0+256),w
 18619  0BAF  1D03               	btfss	3,2
 18620  0BB0  2BB2               	goto	u400_21
 18621  0BB1  2BB3               	goto	u400_20
 18622  0BB2                     u400_21:
 18623  0BB2  2C48               	goto	i1l5072
 18624  0BB3                     u400_20:
 18625  0BB3                     i1l5030:
 18626                           
 18627                           ;main.c: 147:         if(last_temperature > max_temperature){
 18628  0BB3  0021               	movlb	1	; select bank1
 18629  0BB4  086E               	movf	_last_temperature^(0+128),w
 18630  0BB5  0022               	movlb	2	; select bank2
 18631  0BB6  0265               	subwf	_max_temperature^(0+256),w
 18632  0BB7  1803               	skipnc
 18633  0BB8  2BBA               	goto	u401_21
 18634  0BB9  2BBB               	goto	u401_20
 18635  0BBA                     u401_21:
 18636  0BBA  2BD0               	goto	i1l5038
 18637  0BBB                     u401_20:
 18638  0BBB                     i1l5032:
 18639                           
 18640                           ;main.c: 148:             DATAEE_WriteByte(0x7053, last_temperature);
 18641  0BBB  3053               	movlw	83
 18642  0BBC  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 18643  0BBD  3070               	movlw	112
 18644  0BBE  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 18645  0BBF  0021               	movlb	1	; select bank1
 18646  0BC0  086E               	movf	_last_temperature^(0+128),w
 18647  0BC1  00F7               	movwf	??_timerInterrupt
 18648  0BC2  0877               	movf	??_timerInterrupt,w
 18649  0BC3  00F2               	movwf	i1DATAEE_WriteByte@bData
 18650  0BC4  3193  23E4  318B   	fcall	i1_DATAEE_WriteByte
 18651  0BC7                     i1l5034:
 18652                           
 18653                           ;main.c: 149:             tala_counter=0;
 18654  0BC7  0021               	movlb	1	; select bank1
 18655  0BC8  01DC               	clrf	_tala_counter^(0+128)
 18656  0BC9                     i1l5036:
 18657                           
 18658                           ;main.c: 150:             activateAlarm(46);
 18659  0BC9  302E               	movlw	46
 18660  0BCA  3193  2342  318B   	fcall	_activateAlarm
 18661                           
 18662                           ;main.c: 151:             pwm_control=0;
 18663  0BCD  0021               	movlb	1	; select bank1
 18664  0BCE  01DA               	clrf	_pwm_control^(0+128)
 18665                           
 18666                           ;main.c: 152:         }else if(last_temperature < min_temperature){
 18667  0BCF  2BE9               	goto	i1l5046
 18668  0BD0                     i1l5038:
 18669  0BD0  0021               	movlb	1	; select bank1
 18670  0BD1  085B               	movf	_min_temperature^(0+128),w
 18671  0BD2  026E               	subwf	_last_temperature^(0+128),w
 18672  0BD3  1803               	skipnc
 18673  0BD4  2BD6               	goto	u402_21
 18674  0BD5  2BD7               	goto	u402_20
 18675  0BD6                     u402_21:
 18676  0BD6  2BE9               	goto	i1l5046
 18677  0BD7                     u402_20:
 18678  0BD7                     i1l5040:
 18679                           
 18680                           ;main.c: 153:             DATAEE_WriteByte(0x7054, last_temperature);
 18681  0BD7  3054               	movlw	84
 18682  0BD8  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 18683  0BD9  3070               	movlw	112
 18684  0BDA  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 18685  0BDB  086E               	movf	_last_temperature^(0+128),w
 18686  0BDC  00F7               	movwf	??_timerInterrupt
 18687  0BDD  0877               	movf	??_timerInterrupt,w
 18688  0BDE  00F2               	movwf	i1DATAEE_WriteByte@bData
 18689  0BDF  3193  23E4  318B   	fcall	i1_DATAEE_WriteByte
 18690  0BE2                     i1l5042:
 18691                           
 18692                           ;main.c: 154:             tala_counter=0;
 18693  0BE2  0021               	movlb	1	; select bank1
 18694  0BE3  01DC               	clrf	_tala_counter^(0+128)
 18695  0BE4                     i1l5044:
 18696                           
 18697                           ;main.c: 155:             pwm_control=0;
 18698  0BE4  01DA               	clrf	_pwm_control^(0+128)
 18699                           
 18700                           ;main.c: 156:             activateAlarm(46);
 18701  0BE5  302E               	movlw	46
 18702  0BE6  3193  2342  318B   	fcall	_activateAlarm
 18703  0BE9                     i1l5046:
 18704                           
 18705                           ;main.c: 158:         if(last_luminosity > max_luminosity){
 18706  0BE9  0021               	movlb	1	; select bank1
 18707  0BEA  086F               	movf	_last_luminosity^(0+128),w
 18708  0BEB  0022               	movlb	2	; select bank2
 18709  0BEC  0267               	subwf	_max_luminosity^(0+256),w
 18710  0BED  1803               	skipnc
 18711  0BEE  2BF0               	goto	u403_21
 18712  0BEF  2BF1               	goto	u403_20
 18713  0BF0                     u403_21:
 18714  0BF0  2C05               	goto	i1l5054
 18715  0BF1                     u403_20:
 18716  0BF1                     i1l5048:
 18717                           
 18718                           ;main.c: 159:             DATAEE_WriteByte(0x7055, last_luminosity);
 18719  0BF1  3055               	movlw	85
 18720  0BF2  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 18721  0BF3  3070               	movlw	112
 18722  0BF4  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 18723  0BF5  0021               	movlb	1	; select bank1
 18724  0BF6  086F               	movf	_last_luminosity^(0+128),w
 18725  0BF7  00F7               	movwf	??_timerInterrupt
 18726  0BF8  0877               	movf	??_timerInterrupt,w
 18727  0BF9  00F2               	movwf	i1DATAEE_WriteByte@bData
 18728  0BFA  3193  23E4  318B   	fcall	i1_DATAEE_WriteByte
 18729  0BFD                     i1l5050:
 18730                           
 18731                           ;main.c: 160:             tala_counter=0;
 18732  0BFD  0021               	movlb	1	; select bank1
 18733  0BFE  01DC               	clrf	_tala_counter^(0+128)
 18734  0BFF                     i1l5052:
 18735                           
 18736                           ;main.c: 161:             pwm_control=0;
 18737  0BFF  01DA               	clrf	_pwm_control^(0+128)
 18738                           
 18739                           ;main.c: 162:             activateAlarm(64);
 18740  0C00  3040               	movlw	64
 18741  0C01  3193  2342  318B   	fcall	_activateAlarm
 18742                           
 18743                           ;main.c: 164:         }else if(last_luminosity < min_luminosity){
 18744  0C04  2C1E               	goto	i1l5062
 18745  0C05                     i1l5054:
 18746  0C05  0021               	movlb	1	; select bank1
 18747  0C06  085D               	movf	_min_luminosity^(0+128),w
 18748  0C07  026F               	subwf	_last_luminosity^(0+128),w
 18749  0C08  1803               	skipnc
 18750  0C09  2C0B               	goto	u404_21
 18751  0C0A  2C0C               	goto	u404_20
 18752  0C0B                     u404_21:
 18753  0C0B  2C1E               	goto	i1l5062
 18754  0C0C                     u404_20:
 18755  0C0C                     i1l5056:
 18756                           
 18757                           ;main.c: 165:             tala_counter=0;
 18758  0C0C  01DC               	clrf	_tala_counter^(0+128)
 18759  0C0D                     i1l5058:
 18760                           
 18761                           ;main.c: 166:             DATAEE_WriteByte(0x7056, last_luminosity);
 18762  0C0D  3056               	movlw	86
 18763  0C0E  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 18764  0C0F  3070               	movlw	112
 18765  0C10  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 18766  0C11  086F               	movf	_last_luminosity^(0+128),w
 18767  0C12  00F7               	movwf	??_timerInterrupt
 18768  0C13  0877               	movf	??_timerInterrupt,w
 18769  0C14  00F2               	movwf	i1DATAEE_WriteByte@bData
 18770  0C15  3193  23E4  318B   	fcall	i1_DATAEE_WriteByte
 18771  0C18                     i1l5060:
 18772                           
 18773                           ;main.c: 167:             pwm_control=0;
 18774  0C18  0021               	movlb	1	; select bank1
 18775  0C19  01DA               	clrf	_pwm_control^(0+128)
 18776                           
 18777                           ;main.c: 168:             activateAlarm(64);
 18778  0C1A  3040               	movlw	64
 18779  0C1B  3193  2342  318B   	fcall	_activateAlarm
 18780  0C1E                     i1l5062:
 18781                           
 18782                           ;main.c: 171:         value = ADCC_GetSingleConversion(channel_ANA0);
 18783  0C1E  3000               	movlw	0
 18784  0C1F  3192  22A7  318B   	fcall	_ADCC_GetSingleConversion
 18785  0C22  0871               	movf	?_ADCC_GetSingleConversion+1,w
 18786  0C23  00FB               	movwf	timerInterrupt@value+1
 18787  0C24  0870               	movf	?_ADCC_GetSingleConversion,w
 18788  0C25  00FA               	movwf	timerInterrupt@value
 18789  0C26                     i1l5064:
 18790                           
 18791                           ;main.c: 172:         unsigned char temperature = readTC74();
 18792  0C26  318D  25A3  318B   	fcall	i1_readTC74
 18793  0C29  00F7               	movwf	??_timerInterrupt
 18794  0C2A  0877               	movf	??_timerInterrupt,w
 18795  0C2B  00F9               	movwf	timerInterrupt@temperature
 18796  0C2C                     i1l5066:
 18797                           
 18798                           ;main.c: 173:         if(temperature!= last_temperature || value!= last_luminosity){
 18799  0C2C  0879               	movf	timerInterrupt@temperature,w
 18800  0C2D  0021               	movlb	1	; select bank1
 18801  0C2E  066E               	xorwf	_last_temperature^(0+128),w
 18802  0C2F  1D03               	skipz
 18803  0C30  2C32               	goto	u405_21
 18804  0C31  2C33               	goto	u405_20
 18805  0C32                     u405_21:
 18806  0C32  2C40               	goto	i1l5070
 18807  0C33                     u405_20:
 18808  0C33                     i1l5068:
 18809  0C33  086F               	movf	_last_luminosity^(0+128),w
 18810  0C34  00F7               	movwf	??_timerInterrupt
 18811  0C35  01F8               	clrf	??_timerInterrupt+1
 18812  0C36  087B               	movf	timerInterrupt@value+1,w
 18813  0C37  0678               	xorwf	??_timerInterrupt+1,w
 18814  0C38  1D03               	skipz
 18815  0C39  2C3C               	goto	u406_25
 18816  0C3A  087A               	movf	timerInterrupt@value,w
 18817  0C3B  0677               	xorwf	??_timerInterrupt,w
 18818  0C3C                     u406_25:
 18819  0C3C  1903               	skipnz
 18820  0C3D  2C3F               	goto	u406_21
 18821  0C3E  2C40               	goto	u406_20
 18822  0C3F                     u406_21:
 18823  0C3F  2C48               	goto	i1l5072
 18824  0C40                     u406_20:
 18825  0C40                     i1l5070:
 18826                           
 18827                           ;main.c: 174:             writeRingBuffer(temperature, value);
 18828  0C40  087A               	movf	timerInterrupt@value,w
 18829  0C41  00F7               	movwf	??_timerInterrupt
 18830  0C42  0877               	movf	??_timerInterrupt,w
 18831  0C43  00F4               	movwf	writeRingBuffer@luminosity
 18832  0C44  0879               	movf	timerInterrupt@temperature,w
 18833  0C45  3197  279D  318B   	fcall	_writeRingBuffer
 18834  0C48                     i1l5072:
 18835                           
 18836                           ;main.c: 178:     if(counter == 5){
 18837  0C48  3005               	movlw	5
 18838  0C49  0022               	movlb	2	; select bank2
 18839  0C4A  0666               	xorwf	_counter^(0+256),w
 18840  0C4B  1D03               	btfss	3,2
 18841  0C4C  2C4E               	goto	u407_21
 18842  0C4D  2C4F               	goto	u407_20
 18843  0C4E                     u407_21:
 18844  0C4E  2C52               	goto	i1l5076
 18845  0C4F                     u407_20:
 18846  0C4F                     i1l5074:
 18847                           
 18848                           ;main.c: 179:         counter = 1;
 18849  0C4F  01E6               	clrf	_counter^(0+256)
 18850  0C50  0AE6               	incf	_counter^(0+256),f
 18851                           
 18852                           ;main.c: 180:     }else{
 18853  0C51  2C56               	goto	i1l5078
 18854  0C52                     i1l5076:
 18855                           
 18856                           ;main.c: 181:         counter ++;
 18857  0C52  3001               	movlw	1
 18858  0C53  00F7               	movwf	??_timerInterrupt
 18859  0C54  0877               	movf	??_timerInterrupt,w
 18860  0C55  07E6               	addwf	_counter^(0+256),f
 18861  0C56                     i1l5078:
 18862                           
 18863                           ;main.c: 184:     if(tala_counter == TALA){
 18864  0C56  0021               	movlb	1	; select bank1
 18865  0C57  085C               	movf	_tala_counter^(0+128),w
 18866  0C58  0665               	xorwf	_TALA^(0+128),w
 18867  0C59  1D03               	skipz
 18868  0C5A  2C5C               	goto	u408_21
 18869  0C5B  2C5D               	goto	u408_20
 18870  0C5C                     u408_21:
 18871  0C5C  2C63               	goto	i1l5084
 18872  0C5D                     u408_20:
 18873  0C5D                     i1l5080:
 18874                           
 18875                           ;main.c: 185:         deactivatePWM();
 18876  0C5D  3191  21E0  318B   	fcall	_deactivatePWM
 18877  0C60                     i1l5082:
 18878                           
 18879                           ;main.c: 186:         tala_counter = 0;
 18880  0C60  0021               	movlb	1	; select bank1
 18881  0C61  01DC               	clrf	_tala_counter^(0+128)
 18882                           
 18883                           ;main.c: 187:     }else{
 18884  0C62  2C80               	goto	i1l5096
 18885  0C63                     i1l5084:
 18886                           
 18887                           ;main.c: 188:         if(pwm_control==0){
 18888  0C63  085A               	movf	_pwm_control^(0+128),w
 18889  0C64  1D03               	btfss	3,2
 18890  0C65  2C67               	goto	u409_21
 18891  0C66  2C68               	goto	u409_20
 18892  0C67                     u409_21:
 18893  0C67  2C73               	goto	i1l5090
 18894  0C68                     u409_20:
 18895  0C68                     i1l5086:
 18896                           
 18897                           ;main.c: 189:             PWM6_LoadDutyValue(0xA);
 18898  0C68  300A               	movlw	10
 18899  0C69  00F0               	movwf	PWM6_LoadDutyValue@dutyValue
 18900  0C6A  3000               	movlw	0
 18901  0C6B  00F1               	movwf	PWM6_LoadDutyValue@dutyValue+1
 18902  0C6C  3192  22CC  318B   	fcall	_PWM6_LoadDutyValue
 18903  0C6F                     i1l5088:
 18904                           
 18905                           ;main.c: 190:             pwm_control=1;
 18906  0C6F  0021               	movlb	1	; select bank1
 18907  0C70  01DA               	clrf	_pwm_control^(0+128)
 18908  0C71  0ADA               	incf	_pwm_control^(0+128),f
 18909                           
 18910                           ;main.c: 191:         }else{
 18911  0C72  2C7C               	goto	i1l5094
 18912  0C73                     i1l5090:
 18913                           
 18914                           ;main.c: 192:             PWM6_LoadDutyValue(0x3);
 18915  0C73  3003               	movlw	3
 18916  0C74  00F0               	movwf	PWM6_LoadDutyValue@dutyValue
 18917  0C75  3000               	movlw	0
 18918  0C76  00F1               	movwf	PWM6_LoadDutyValue@dutyValue+1
 18919  0C77  3192  22CC  318B   	fcall	_PWM6_LoadDutyValue
 18920  0C7A                     i1l5092:
 18921                           
 18922                           ;main.c: 193:             pwm_control=0;
 18923  0C7A  0021               	movlb	1	; select bank1
 18924  0C7B  01DA               	clrf	_pwm_control^(0+128)
 18925  0C7C                     i1l5094:
 18926                           
 18927                           ;main.c: 195:         tala_counter ++;
 18928  0C7C  3001               	movlw	1
 18929  0C7D  00F7               	movwf	??_timerInterrupt
 18930  0C7E  0877               	movf	??_timerInterrupt,w
 18931  0C7F  07DC               	addwf	_tala_counter^(0+128),f
 18932  0C80                     i1l5096:
 18933                           
 18934                           ;main.c: 198:     if(PORTAbits.RA7==0){
 18935  0C80  0020               	movlb	0	; select bank0
 18936  0C81  1B8C               	btfsc	12,7	;volatile
 18937  0C82  2C84               	goto	u410_21
 18938  0C83  2C85               	goto	u410_20
 18939  0C84                     u410_21:
 18940  0C84  2C87               	goto	i1l1450
 18941  0C85                     u410_20:
 18942  0C85                     i1l1447:	
 18943                           ;main.c: 199:         do { LATAbits.LATA7 = 1; } while(0);
 18944                           
 18945  0C85  1796               	bsf	22,7	;volatile
 18946  0C86  2C88               	goto	i1l5098
 18947  0C87                     i1l1450:	
 18948                           ;main.c: 201:         do { LATAbits.LATA7 = 0; } while(0);
 18949                           
 18950  0C87  1396               	bcf	22,7	;volatile
 18951  0C88                     i1l5098:
 18952                           
 18953                           ;main.c: 204:     if(value > 0x2FD || value < 0xFF){
 18954  0C88  3002               	movlw	2
 18955  0C89  027B               	subwf	timerInterrupt@value+1,w
 18956  0C8A  30FE               	movlw	254
 18957  0C8B  1903               	skipnz
 18958  0C8C  027A               	subwf	timerInterrupt@value,w
 18959  0C8D  1803               	skipnc
 18960  0C8E  2C90               	goto	u411_21
 18961  0C8F  2C91               	goto	u411_20
 18962  0C90                     u411_21:
 18963  0C90  2C9A               	goto	i1l1455
 18964  0C91                     u411_20:
 18965  0C91                     i1l5100:
 18966  0C91  3000               	movlw	0
 18967  0C92  027B               	subwf	timerInterrupt@value+1,w
 18968  0C93  30FF               	movlw	255
 18969  0C94  1903               	skipnz
 18970  0C95  027A               	subwf	timerInterrupt@value,w
 18971  0C96  1803               	skipnc
 18972  0C97  2C99               	goto	u412_21
 18973  0C98  2C9A               	goto	u412_20
 18974  0C99                     u412_21:
 18975  0C99  2C9C               	goto	i1l1458
 18976  0C9A                     u412_20:
 18977  0C9A                     i1l1455:	
 18978                           ;main.c: 205:         do { LATAbits.LATA4 = 1; } while(0);
 18979                           
 18980  0C9A  1616               	bsf	22,4	;volatile
 18981  0C9B  2C9D               	goto	i1l1460
 18982  0C9C                     i1l1458:	
 18983                           ;main.c: 207:         do { LATAbits.LATA4 = 0; } while(0);
 18984                           
 18985  0C9C  1216               	bcf	22,4	;volatile
 18986  0C9D                     i1l1460:
 18987  0C9D  0008               	return
 18988  0C9E                     __end_of_timerInterrupt:
 18989                           
 18990                           	psect	text57
 18991  0DA3                     __ptext57:	
 18992 ;; *************** function i1_readTC74 *****************
 18993 ;; Defined at:
 18994 ;;		line 75 in file "main.c"
 18995 ;; Parameters:    Size  Location     Type
 18996 ;;		None
 18997 ;; Auto vars:     Size  Location     Type
 18998 ;;  value           1    3[COMMON] unsigned char 
 18999 ;; Return value:  Size  Location     Type
 19000 ;;                  1    wreg      unsigned char 
 19001 ;; Registers used:
 19002 ;;		wreg, status,2, status,0, pclath, cstack
 19003 ;; Tracked objects:
 19004 ;;		On entry : 0/0
 19005 ;;		On exit  : 0/0
 19006 ;;		Unchanged: 0/0
 19007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19009 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19010 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19011 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19012 ;;Total ram usage:        2 bytes
 19013 ;; Hardware stack levels used: 1
 19014 ;; Hardware stack levels required when called: 1
 19015 ;; This function calls:
 19016 ;;		i1_ReadI2C
 19017 ;;		i1_WriteI2C
 19018 ;; This function is called by:
 19019 ;;		_timerInterrupt
 19020 ;; This function uses a non-reentrant model
 19021 ;;
 19022                           
 19023                           
 19024                           ;psect for function i1_readTC74
 19025  0DA3                     i1_readTC74:
 19026  0DA3                     i1l1329:	
 19027                           ;incstack = 0
 19028                           ; Regs used in i1_readTC74: [wreg+status,2+status,0+pclath+cstack]
 19029                           ;main.c: 77:  unsigned char value;;main.c: 78: do{
 19030                           
 19031  0DA3                     i1l4920:	
 19032                           ;main.c: 79:  while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19033                           
 19034  0DA3  0023               	movlb	3	; select bank3
 19035  0DA4  0C0F               	rrf	15,w	;volatile
 19036  0DA5  0C89               	rrf	9,f
 19037  0DA6  3901               	andlw	1
 19038  0DA7  00F2               	movwf	??i1_readTC74
 19039  0DA8  0811               	movf	17,w	;volatile
 19040  0DA9  391F               	andlw	31
 19041  0DAA  0472               	iorwf	??i1_readTC74,w
 19042  0DAB  1D03               	btfss	3,2
 19043  0DAC  2DAE               	goto	u359_21
 19044  0DAD  2DAF               	goto	u359_20
 19045  0DAE                     u359_21:
 19046  0DAE  2DA3               	goto	i1l4920
 19047  0DAF                     u359_20:
 19048  0DAF                     i1l1333:	
 19049                           ;main.c: 80:  do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((SSP1
      +                          CON2 & 0x1F) | (SSP1STATbits.R_W));
 19050                           
 19051  0DAF  1411               	bsf	17,0	;volatile
 19052  0DB0                     i1l1334:
 19053  0DB0  1811               	btfsc	17,0	;volatile
 19054  0DB1  2DB3               	goto	u360_21
 19055  0DB2  2DB4               	goto	u360_20
 19056  0DB3                     u360_21:
 19057  0DB3  2DB0               	goto	i1l1334
 19058  0DB4                     u360_20:
 19059  0DB4                     i1l4922:
 19060  0DB4  0C0F               	rrf	15,w	;volatile
 19061  0DB5  0C89               	rrf	9,f
 19062  0DB6  3901               	andlw	1
 19063  0DB7  00F2               	movwf	??i1_readTC74
 19064  0DB8  0811               	movf	17,w	;volatile
 19065  0DB9  391F               	andlw	31
 19066  0DBA  0472               	iorwf	??i1_readTC74,w
 19067  0DBB  1D03               	btfss	3,2
 19068  0DBC  2DBE               	goto	u361_21
 19069  0DBD  2DBF               	goto	u361_20
 19070  0DBE                     u361_21:
 19071  0DBE  2DB4               	goto	i1l4922
 19072  0DBF                     u361_20:
 19073  0DBF                     i1l4924:
 19074                           
 19075                           ;main.c: 82:  WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19076  0DBF  309A               	movlw	154
 19077  0DC0  3195  25AC  318D   	fcall	i1_WriteI2C
 19078  0DC3                     i1l4926:
 19079  0DC3  0023               	movlb	3	; select bank3
 19080  0DC4  0C0F               	rrf	15,w	;volatile
 19081  0DC5  0C89               	rrf	9,f
 19082  0DC6  3901               	andlw	1
 19083  0DC7  00F2               	movwf	??i1_readTC74
 19084  0DC8  0811               	movf	17,w	;volatile
 19085  0DC9  391F               	andlw	31
 19086  0DCA  0472               	iorwf	??i1_readTC74,w
 19087  0DCB  1D03               	btfss	3,2
 19088  0DCC  2DCE               	goto	u362_21
 19089  0DCD  2DCF               	goto	u362_20
 19090  0DCE                     u362_21:
 19091  0DCE  2DC3               	goto	i1l4926
 19092  0DCF                     u362_20:
 19093  0DCF                     i1l4928:
 19094                           
 19095                           ;main.c: 83:  WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19096  0DCF  3001               	movlw	1
 19097  0DD0  3195  25AC  318D   	fcall	i1_WriteI2C
 19098  0DD3                     i1l4930:
 19099  0DD3  0023               	movlb	3	; select bank3
 19100  0DD4  0C0F               	rrf	15,w	;volatile
 19101  0DD5  0C89               	rrf	9,f
 19102  0DD6  3901               	andlw	1
 19103  0DD7  00F2               	movwf	??i1_readTC74
 19104  0DD8  0811               	movf	17,w	;volatile
 19105  0DD9  391F               	andlw	31
 19106  0DDA  0472               	iorwf	??i1_readTC74,w
 19107  0DDB  1D03               	btfss	3,2
 19108  0DDC  2DDE               	goto	u363_21
 19109  0DDD  2DDF               	goto	u363_20
 19110  0DDE                     u363_21:
 19111  0DDE  2DD3               	goto	i1l4930
 19112  0DDF                     u363_20:
 19113  0DDF                     i1l1347:	
 19114                           ;main.c: 84:  do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while ((SS
      +                          P1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19115                           
 19116  0DDF  1491               	bsf	17,1	;volatile
 19117  0DE0                     i1l1348:
 19118  0DE0  1891               	btfsc	17,1	;volatile
 19119  0DE1  2DE3               	goto	u364_21
 19120  0DE2  2DE4               	goto	u364_20
 19121  0DE3                     u364_21:
 19122  0DE3  2DE0               	goto	i1l1348
 19123  0DE4                     u364_20:
 19124  0DE4                     i1l4932:
 19125  0DE4  0C0F               	rrf	15,w	;volatile
 19126  0DE5  0C89               	rrf	9,f
 19127  0DE6  3901               	andlw	1
 19128  0DE7  00F2               	movwf	??i1_readTC74
 19129  0DE8  0811               	movf	17,w	;volatile
 19130  0DE9  391F               	andlw	31
 19131  0DEA  0472               	iorwf	??i1_readTC74,w
 19132  0DEB  1D03               	btfss	3,2
 19133  0DEC  2DEE               	goto	u365_21
 19134  0DED  2DEF               	goto	u365_20
 19135  0DEE                     u365_21:
 19136  0DEE  2DE4               	goto	i1l4932
 19137  0DEF                     u365_20:
 19138  0DEF                     i1l4934:
 19139                           
 19140                           ;main.c: 85:  WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19141  0DEF  309B               	movlw	155
 19142  0DF0  3195  25AC  318D   	fcall	i1_WriteI2C
 19143  0DF3                     i1l4936:
 19144  0DF3  0023               	movlb	3	; select bank3
 19145  0DF4  0C0F               	rrf	15,w	;volatile
 19146  0DF5  0C89               	rrf	9,f
 19147  0DF6  3901               	andlw	1
 19148  0DF7  00F2               	movwf	??i1_readTC74
 19149  0DF8  0811               	movf	17,w	;volatile
 19150  0DF9  391F               	andlw	31
 19151  0DFA  0472               	iorwf	??i1_readTC74,w
 19152  0DFB  1D03               	btfss	3,2
 19153  0DFC  2DFE               	goto	u366_21
 19154  0DFD  2DFF               	goto	u366_20
 19155  0DFE                     u366_21:
 19156  0DFE  2DF3               	goto	i1l4936
 19157  0DFF                     u366_20:
 19158  0DFF                     i1l4938:
 19159                           
 19160                           ;main.c: 86:  value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19161  0DFF  3193  235C  318D   	fcall	i1_ReadI2C
 19162  0E02  00F2               	movwf	??i1_readTC74
 19163  0E03  0872               	movf	??i1_readTC74,w
 19164  0E04  00F3               	movwf	i1readTC74@value
 19165  0E05                     i1l4940:
 19166  0E05  0023               	movlb	3	; select bank3
 19167  0E06  0C0F               	rrf	15,w	;volatile
 19168  0E07  0C89               	rrf	9,f
 19169  0E08  3901               	andlw	1
 19170  0E09  00F2               	movwf	??i1_readTC74
 19171  0E0A  0811               	movf	17,w	;volatile
 19172  0E0B  391F               	andlw	31
 19173  0E0C  0472               	iorwf	??i1_readTC74,w
 19174  0E0D  1D03               	btfss	3,2
 19175  0E0E  2E10               	goto	u367_21
 19176  0E0F  2E11               	goto	u367_20
 19177  0E10                     u367_21:
 19178  0E10  2E05               	goto	i1l4940
 19179  0E11                     u367_20:
 19180  0E11                     i1l1361:	
 19181                           ;main.c: 87:  do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); 
      +                          } while (0); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19182                           
 19183  0E11  1691               	bsf	17,5	;volatile
 19184  0E12  1611               	bsf	17,4	;volatile
 19185  0E13                     i1l1362:
 19186  0E13  1A11               	btfsc	17,4	;volatile
 19187  0E14  2E16               	goto	u368_21
 19188  0E15  2E17               	goto	u368_20
 19189  0E16                     u368_21:
 19190  0E16  2E13               	goto	i1l1362
 19191  0E17                     u368_20:
 19192  0E17                     i1l4942:
 19193  0E17  0C0F               	rrf	15,w	;volatile
 19194  0E18  0C89               	rrf	9,f
 19195  0E19  3901               	andlw	1
 19196  0E1A  00F2               	movwf	??i1_readTC74
 19197  0E1B  0811               	movf	17,w	;volatile
 19198  0E1C  391F               	andlw	31
 19199  0E1D  0472               	iorwf	??i1_readTC74,w
 19200  0E1E  1D03               	btfss	3,2
 19201  0E1F  2E21               	goto	u369_21
 19202  0E20  2E22               	goto	u369_20
 19203  0E21                     u369_21:
 19204  0E21  2E17               	goto	i1l4942
 19205  0E22                     u369_20:
 19206  0E22                     i1l1369:	
 19207                           ;main.c: 88:  do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 19208                           
 19209  0E22  1511               	bsf	17,2	;volatile
 19210  0E23                     i1l1370:
 19211  0E23  1911               	btfsc	17,2	;volatile
 19212  0E24  2E26               	goto	u370_21
 19213  0E25  2E27               	goto	u370_20
 19214  0E26                     u370_21:
 19215  0E26  2E23               	goto	i1l1370
 19216  0E27                     u370_20:
 19217  0E27                     i1l1373:
 19218                           
 19219                           ;main.c: 89: } while (!(value & 0x40));
 19220  0E27  1F73               	btfss	i1readTC74@value,6
 19221  0E28  2E2A               	goto	u371_21
 19222  0E29  2E2B               	goto	u371_20
 19223  0E2A                     u371_21:
 19224  0E2A  2DA3               	goto	i1l1329
 19225  0E2B                     u371_20:
 19226  0E2B                     i1l4944:
 19227  0E2B  0C0F               	rrf	15,w	;volatile
 19228  0E2C  0C89               	rrf	9,f
 19229  0E2D  3901               	andlw	1
 19230  0E2E  00F2               	movwf	??i1_readTC74
 19231  0E2F  0811               	movf	17,w	;volatile
 19232  0E30  391F               	andlw	31
 19233  0E31  0472               	iorwf	??i1_readTC74,w
 19234  0E32  1D03               	btfss	3,2
 19235  0E33  2E35               	goto	u372_21
 19236  0E34  2E36               	goto	u372_20
 19237  0E35                     u372_21:
 19238  0E35  2E2B               	goto	i1l4944
 19239  0E36                     u372_20:
 19240  0E36                     i1l1378:	
 19241                           ;main.c: 92:  do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((SSP1
      +                          CON2 & 0x1F) | (SSP1STATbits.R_W));
 19242                           
 19243  0E36  1411               	bsf	17,0	;volatile
 19244  0E37                     i1l1379:
 19245  0E37  1811               	btfsc	17,0	;volatile
 19246  0E38  2E3A               	goto	u373_21
 19247  0E39  2E3B               	goto	u373_20
 19248  0E3A                     u373_21:
 19249  0E3A  2E37               	goto	i1l1379
 19250  0E3B                     u373_20:
 19251  0E3B                     i1l4946:
 19252  0E3B  0C0F               	rrf	15,w	;volatile
 19253  0E3C  0C89               	rrf	9,f
 19254  0E3D  3901               	andlw	1
 19255  0E3E  00F2               	movwf	??i1_readTC74
 19256  0E3F  0811               	movf	17,w	;volatile
 19257  0E40  391F               	andlw	31
 19258  0E41  0472               	iorwf	??i1_readTC74,w
 19259  0E42  1D03               	btfss	3,2
 19260  0E43  2E45               	goto	u374_21
 19261  0E44  2E46               	goto	u374_20
 19262  0E45                     u374_21:
 19263  0E45  2E3B               	goto	i1l4946
 19264  0E46                     u374_20:
 19265  0E46                     i1l4948:
 19266                           
 19267                           ;main.c: 93:  WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19268  0E46  309A               	movlw	154
 19269  0E47  3195  25AC  318D   	fcall	i1_WriteI2C
 19270  0E4A                     i1l4950:
 19271  0E4A  0023               	movlb	3	; select bank3
 19272  0E4B  0C0F               	rrf	15,w	;volatile
 19273  0E4C  0C89               	rrf	9,f
 19274  0E4D  3901               	andlw	1
 19275  0E4E  00F2               	movwf	??i1_readTC74
 19276  0E4F  0811               	movf	17,w	;volatile
 19277  0E50  391F               	andlw	31
 19278  0E51  0472               	iorwf	??i1_readTC74,w
 19279  0E52  1D03               	btfss	3,2
 19280  0E53  2E55               	goto	u375_21
 19281  0E54  2E56               	goto	u375_20
 19282  0E55                     u375_21:
 19283  0E55  2E4A               	goto	i1l4950
 19284  0E56                     u375_20:
 19285  0E56                     i1l4952:
 19286                           
 19287                           ;main.c: 94:  WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19288  0E56  3000               	movlw	0
 19289  0E57  3195  25AC  318D   	fcall	i1_WriteI2C
 19290  0E5A                     i1l4954:
 19291  0E5A  0023               	movlb	3	; select bank3
 19292  0E5B  0C0F               	rrf	15,w	;volatile
 19293  0E5C  0C89               	rrf	9,f
 19294  0E5D  3901               	andlw	1
 19295  0E5E  00F2               	movwf	??i1_readTC74
 19296  0E5F  0811               	movf	17,w	;volatile
 19297  0E60  391F               	andlw	31
 19298  0E61  0472               	iorwf	??i1_readTC74,w
 19299  0E62  1D03               	btfss	3,2
 19300  0E63  2E65               	goto	u376_21
 19301  0E64  2E66               	goto	u376_20
 19302  0E65                     u376_21:
 19303  0E65  2E5A               	goto	i1l4954
 19304  0E66                     u376_20:
 19305  0E66                     i1l1392:	
 19306                           ;main.c: 95:  do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while ((SS
      +                          P1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19307                           
 19308  0E66  1491               	bsf	17,1	;volatile
 19309  0E67                     i1l1393:
 19310  0E67  1891               	btfsc	17,1	;volatile
 19311  0E68  2E6A               	goto	u377_21
 19312  0E69  2E6B               	goto	u377_20
 19313  0E6A                     u377_21:
 19314  0E6A  2E67               	goto	i1l1393
 19315  0E6B                     u377_20:
 19316  0E6B                     i1l4956:
 19317  0E6B  0C0F               	rrf	15,w	;volatile
 19318  0E6C  0C89               	rrf	9,f
 19319  0E6D  3901               	andlw	1
 19320  0E6E  00F2               	movwf	??i1_readTC74
 19321  0E6F  0811               	movf	17,w	;volatile
 19322  0E70  391F               	andlw	31
 19323  0E71  0472               	iorwf	??i1_readTC74,w
 19324  0E72  1D03               	btfss	3,2
 19325  0E73  2E75               	goto	u378_21
 19326  0E74  2E76               	goto	u378_20
 19327  0E75                     u378_21:
 19328  0E75  2E6B               	goto	i1l4956
 19329  0E76                     u378_20:
 19330  0E76                     i1l4958:
 19331                           
 19332                           ;main.c: 96:  WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19333  0E76  309B               	movlw	155
 19334  0E77  3195  25AC  318D   	fcall	i1_WriteI2C
 19335  0E7A                     i1l4960:
 19336  0E7A  0023               	movlb	3	; select bank3
 19337  0E7B  0C0F               	rrf	15,w	;volatile
 19338  0E7C  0C89               	rrf	9,f
 19339  0E7D  3901               	andlw	1
 19340  0E7E  00F2               	movwf	??i1_readTC74
 19341  0E7F  0811               	movf	17,w	;volatile
 19342  0E80  391F               	andlw	31
 19343  0E81  0472               	iorwf	??i1_readTC74,w
 19344  0E82  1D03               	btfss	3,2
 19345  0E83  2E85               	goto	u379_21
 19346  0E84  2E86               	goto	u379_20
 19347  0E85                     u379_21:
 19348  0E85  2E7A               	goto	i1l4960
 19349  0E86                     u379_20:
 19350  0E86                     i1l4962:
 19351                           
 19352                           ;main.c: 97:  value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19353  0E86  3193  235C  318D   	fcall	i1_ReadI2C
 19354  0E89  00F2               	movwf	??i1_readTC74
 19355  0E8A  0872               	movf	??i1_readTC74,w
 19356  0E8B  00F3               	movwf	i1readTC74@value
 19357  0E8C                     i1l4964:
 19358  0E8C  0023               	movlb	3	; select bank3
 19359  0E8D  0C0F               	rrf	15,w	;volatile
 19360  0E8E  0C89               	rrf	9,f
 19361  0E8F  3901               	andlw	1
 19362  0E90  00F2               	movwf	??i1_readTC74
 19363  0E91  0811               	movf	17,w	;volatile
 19364  0E92  391F               	andlw	31
 19365  0E93  0472               	iorwf	??i1_readTC74,w
 19366  0E94  1D03               	btfss	3,2
 19367  0E95  2E97               	goto	u380_21
 19368  0E96  2E98               	goto	u380_20
 19369  0E97                     u380_21:
 19370  0E97  2E8C               	goto	i1l4964
 19371  0E98                     u380_20:
 19372  0E98                     i1l1406:	
 19373                           ;main.c: 98:  do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); 
      +                          } while (0); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 19374                           
 19375  0E98  1691               	bsf	17,5	;volatile
 19376  0E99  1611               	bsf	17,4	;volatile
 19377  0E9A                     i1l1407:
 19378  0E9A  1A11               	btfsc	17,4	;volatile
 19379  0E9B  2E9D               	goto	u381_21
 19380  0E9C  2E9E               	goto	u381_20
 19381  0E9D                     u381_21:
 19382  0E9D  2E9A               	goto	i1l1407
 19383  0E9E                     u381_20:
 19384  0E9E                     i1l4966:
 19385  0E9E  0C0F               	rrf	15,w	;volatile
 19386  0E9F  0C89               	rrf	9,f
 19387  0EA0  3901               	andlw	1
 19388  0EA1  00F2               	movwf	??i1_readTC74
 19389  0EA2  0811               	movf	17,w	;volatile
 19390  0EA3  391F               	andlw	31
 19391  0EA4  0472               	iorwf	??i1_readTC74,w
 19392  0EA5  1D03               	btfss	3,2
 19393  0EA6  2EA8               	goto	u382_21
 19394  0EA7  2EA9               	goto	u382_20
 19395  0EA8                     u382_21:
 19396  0EA8  2E9E               	goto	i1l4966
 19397  0EA9                     u382_20:
 19398  0EA9                     i1l1414:	
 19399                           ;main.c: 99:  do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 19400                           
 19401  0EA9  1511               	bsf	17,2	;volatile
 19402  0EAA                     i1l1415:
 19403  0EAA  1911               	btfsc	17,2	;volatile
 19404  0EAB  2EAD               	goto	u383_21
 19405  0EAC  2EAE               	goto	u383_20
 19406  0EAD                     u383_21:
 19407  0EAD  2EAA               	goto	i1l1415
 19408  0EAE                     u383_20:
 19409  0EAE                     i1l4968:
 19410                           
 19411                           ;main.c: 101:  return value;
 19412  0EAE  0873               	movf	i1readTC74@value,w
 19413  0EAF                     i1l1419:
 19414  0EAF  0008               	return
 19415  0EB0                     __end_ofi1_readTC74:
 19416                           
 19417                           	psect	text58
 19418  15AC                     __ptext58:	
 19419 ;; *************** function i1_WriteI2C *****************
 19420 ;; Defined at:
 19421 ;;		line 59 in file "I2C/i2c.c"
 19422 ;; Parameters:    Size  Location     Type
 19423 ;;  data_out        1    wreg     unsigned char 
 19424 ;; Auto vars:     Size  Location     Type
 19425 ;;  data_out        1    1[COMMON] unsigned char 
 19426 ;; Return value:  Size  Location     Type
 19427 ;;                  1    wreg      char 
 19428 ;; Registers used:
 19429 ;;		wreg, status,2, status,0
 19430 ;; Tracked objects:
 19431 ;;		On entry : 0/0
 19432 ;;		On exit  : 0/0
 19433 ;;		Unchanged: 0/0
 19434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19436 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19437 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19438 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19439 ;;Total ram usage:        2 bytes
 19440 ;; Hardware stack levels used: 1
 19441 ;; This function calls:
 19442 ;;		Nothing
 19443 ;; This function is called by:
 19444 ;;		i1_readTC74
 19445 ;; This function uses a non-reentrant model
 19446 ;;
 19447                           
 19448                           
 19449                           ;psect for function i1_WriteI2C
 19450  15AC                     i1_WriteI2C:
 19451                           
 19452                           ;incstack = 0
 19453                           ; Regs used in i1_WriteI2C: [wreg+status,2+status,0]
 19454                           ;i1WriteI2C@data_out stored from wreg
 19455  15AC  00F1               	movwf	i1WriteI2C@data_out
 19456  15AD                     i1l4700:
 19457                           
 19458                           ;I2C/i2c.c: 59: signed char WriteI2C( unsigned char data_out );I2C/i2c.c: 60: {;I2C/i2c.
      +                          c: 61:   SSP1BUF = data_out;
 19459  15AD  0871               	movf	i1WriteI2C@data_out,w
 19460  15AE  0023               	movlb	3	; select bank3
 19461  15AF  008C               	movwf	12	;volatile
 19462  15B0                     i1l4702:
 19463                           
 19464                           ;I2C/i2c.c: 62:   if ( SSP1CON1bits.WCOL )
 19465  15B0  1F90               	btfss	16,7	;volatile
 19466  15B1  2DB3               	goto	u314_21
 19467  15B2  2DB4               	goto	u314_20
 19468  15B3                     u314_21:
 19469  15B3  2DB5               	goto	i1l4708
 19470  15B4                     u314_20:
 19471  15B4  2DF6               	goto	i1l36
 19472  15B5                     i1l4708:
 19473                           
 19474                           ;I2C/i2c.c: 65:   {;I2C/i2c.c: 66:  if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)!=0x0
      +                          B) )
 19475  15B5  300F               	movlw	15
 19476  15B6  0510               	andwf	16,w	;volatile
 19477  15B7  00F0               	movwf	??i1_WriteI2C
 19478  15B8  3008               	movlw	8
 19479  15B9  0670               	xorwf	??i1_WriteI2C,w
 19480  15BA  1903               	btfsc	3,2
 19481  15BB  2DBD               	goto	u315_21
 19482  15BC  2DBE               	goto	u315_20
 19483  15BD                     u315_21:
 19484  15BD  2DD4               	goto	i1l4720
 19485  15BE                     u315_20:
 19486  15BE                     i1l4710:
 19487  15BE  300F               	movlw	15
 19488  15BF  0510               	andwf	16,w	;volatile
 19489  15C0  00F0               	movwf	??i1_WriteI2C
 19490  15C1  300B               	movlw	11
 19491  15C2  0670               	xorwf	??i1_WriteI2C,w
 19492  15C3  1903               	btfsc	3,2
 19493  15C4  2DC6               	goto	u316_21
 19494  15C5  2DC7               	goto	u316_20
 19495  15C6                     u316_21:
 19496  15C6  2DD4               	goto	i1l4720
 19497  15C7                     u316_20:
 19498  15C7                     i1l4712:
 19499                           
 19500                           ;I2C/i2c.c: 67:  {;I2C/i2c.c: 68:        SSP1CON1bits.CKP = 1;
 19501  15C7  1610               	bsf	16,4	;volatile
 19502  15C8                     i1l39:	
 19503                           ;I2C/i2c.c: 69:        while ( !PIR3bits.SSP1IF );
 19504                           
 19505  15C8  002E               	movlb	14	; select bank14
 19506  15C9  1C0F               	btfss	15,0	;volatile
 19507  15CA  2DCC               	goto	u317_21
 19508  15CB  2DCD               	goto	u317_20
 19509  15CC                     u317_21:
 19510  15CC  2DC8               	goto	i1l39
 19511  15CD                     u317_20:
 19512  15CD                     i1l41:
 19513                           
 19514                           ;I2C/i2c.c: 71:        if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 19515  15CD  0023               	movlb	3	; select bank3
 19516  15CE  190F               	btfsc	15,2	;volatile
 19517  15CF  2DD1               	goto	u318_21
 19518  15D0  2DD2               	goto	u318_20
 19519  15D1                     u318_21:
 19520  15D1  2DF6               	goto	i1l36
 19521  15D2                     u318_20:
 19522  15D2                     i1l4714:
 19523  15D2  080F               	movf	15,w	;volatile
 19524  15D3  2DF6               	goto	i1l36
 19525  15D4                     i1l4720:
 19526  15D4  300F               	movlw	15
 19527  15D5  0510               	andwf	16,w	;volatile
 19528  15D6  00F0               	movwf	??i1_WriteI2C
 19529  15D7  3008               	movlw	8
 19530  15D8  0670               	xorwf	??i1_WriteI2C,w
 19531  15D9  1903               	btfsc	3,2
 19532  15DA  2DDC               	goto	u319_21
 19533  15DB  2DDD               	goto	u319_20
 19534  15DC                     u319_21:
 19535  15DC  2DE6               	goto	i1l48
 19536  15DD                     u319_20:
 19537  15DD                     i1l4722:
 19538  15DD  300F               	movlw	15
 19539  15DE  0510               	andwf	16,w	;volatile
 19540  15DF  00F0               	movwf	??i1_WriteI2C
 19541  15E0  300B               	movlw	11
 19542  15E1  0670               	xorwf	??i1_WriteI2C,w
 19543  15E2  1D03               	btfss	3,2
 19544  15E3  2DE5               	goto	u320_21
 19545  15E4  2DE6               	goto	u320_20
 19546  15E5                     u320_21:
 19547  15E5  2DF6               	goto	i1l36
 19548  15E6                     u320_20:
 19549  15E6                     i1l48:
 19550  15E6  180F               	btfsc	15,0	;volatile
 19551  15E7  2DE9               	goto	u321_21
 19552  15E8  2DEA               	goto	u321_20
 19553  15E9                     u321_21:
 19554  15E9  2DE6               	goto	i1l48
 19555  15EA                     u321_20:
 19556  15EA                     i1l4724:
 19557  15EA  0C0F               	rrf	15,w	;volatile
 19558  15EB  0C89               	rrf	9,f
 19559  15EC  3901               	andlw	1
 19560  15ED  00F0               	movwf	??i1_WriteI2C
 19561  15EE  0811               	movf	17,w	;volatile
 19562  15EF  391F               	andlw	31
 19563  15F0  0470               	iorwf	??i1_WriteI2C,w
 19564  15F1  1D03               	btfss	3,2
 19565  15F2  2DF4               	goto	u322_21
 19566  15F3  2DF5               	goto	u322_20
 19567  15F4                     u322_21:
 19568  15F4  2DEA               	goto	i1l4724
 19569  15F5                     u322_20:
 19570  15F5                     i1l53:
 19571                           
 19572                           ;I2C/i2c.c: 84:      if ( SSP1CON2bits.ACKSTAT )
 19573  15F5  0811               	movf	17,w	;volatile
 19574  15F6                     i1l36:
 19575  15F6  0008               	return
 19576  15F7                     __end_ofi1_WriteI2C:
 19577                           
 19578                           	psect	text59
 19579  135C                     __ptext59:	
 19580 ;; *************** function i1_ReadI2C *****************
 19581 ;; Defined at:
 19582 ;;		line 44 in file "I2C/i2c.c"
 19583 ;; Parameters:    Size  Location     Type
 19584 ;;		None
 19585 ;; Auto vars:     Size  Location     Type
 19586 ;;		None
 19587 ;; Return value:  Size  Location     Type
 19588 ;;                  1    wreg      unsigned char 
 19589 ;; Registers used:
 19590 ;;		wreg, status,2, status,0
 19591 ;; Tracked objects:
 19592 ;;		On entry : 0/0
 19593 ;;		On exit  : 0/0
 19594 ;;		Unchanged: 0/0
 19595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19596 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19597 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19598 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19599 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19600 ;;Total ram usage:        1 bytes
 19601 ;; Hardware stack levels used: 1
 19602 ;; This function calls:
 19603 ;;		Nothing
 19604 ;; This function is called by:
 19605 ;;		i1_readTC74
 19606 ;; This function uses a non-reentrant model
 19607 ;;
 19608                           
 19609                           
 19610                           ;psect for function i1_ReadI2C
 19611  135C                     i1_ReadI2C:
 19612  135C                     i1l4692:	
 19613                           ;incstack = 0
 19614                           ; Regs used in i1_ReadI2C: [wreg+status,2+status,0]
 19615                           
 19616                           
 19617                           ;I2C/i2c.c: 46: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 19618  135C  300F               	movlw	15
 19619  135D  0023               	movlb	3	; select bank3
 19620  135E  0510               	andwf	16,w	;volatile
 19621  135F  00F0               	movwf	??i1_ReadI2C
 19622  1360  3008               	movlw	8
 19623  1361  0670               	xorwf	??i1_ReadI2C,w
 19624  1362  1903               	btfsc	3,2
 19625  1363  2B65               	goto	u311_21
 19626  1364  2B66               	goto	u311_20
 19627  1365                     u311_21:
 19628  1365  2B6F               	goto	i1l28
 19629  1366                     u311_20:
 19630  1366                     i1l4694:
 19631  1366  300F               	movlw	15
 19632  1367  0510               	andwf	16,w	;volatile
 19633  1368  00F0               	movwf	??i1_ReadI2C
 19634  1369  300B               	movlw	11
 19635  136A  0670               	xorwf	??i1_ReadI2C,w
 19636  136B  1D03               	btfss	3,2
 19637  136C  2B6E               	goto	u312_21
 19638  136D  2B6F               	goto	u312_20
 19639  136E                     u312_21:
 19640  136E  2B70               	goto	i1l29
 19641  136F                     u312_20:
 19642  136F                     i1l28:
 19643                           
 19644                           ;I2C/i2c.c: 47:   SSP1CON2bits.RCEN = 1;
 19645  136F  1591               	bsf	17,3	;volatile
 19646  1370                     i1l29:
 19647  1370  1C0F               	btfss	15,0	;volatile
 19648  1371  2B73               	goto	u313_21
 19649  1372  2B74               	goto	u313_20
 19650  1373                     u313_21:
 19651  1373  2B70               	goto	i1l29
 19652  1374                     u313_20:
 19653  1374                     i1l4696:
 19654                           
 19655                           ;I2C/i2c.c: 49:   return ( SSP1BUF );
 19656  1374  080C               	movf	12,w	;volatile
 19657  1375                     i1l32:
 19658  1375  0008               	return
 19659  1376                     __end_ofi1_ReadI2C:
 19660                           
 19661                           	psect	text60
 19662  179D                     __ptext60:	
 19663 ;; *************** function _writeRingBuffer *****************
 19664 ;; Defined at:
 19665 ;;		line 118 in file "main.c"
 19666 ;; Parameters:    Size  Location     Type
 19667 ;;  temperature     1    wreg     unsigned char 
 19668 ;;  luminosity      1    4[COMMON] unsigned char 
 19669 ;; Auto vars:     Size  Location     Type
 19670 ;;  temperature     1    6[COMMON] unsigned char 
 19671 ;; Return value:  Size  Location     Type
 19672 ;;                  1    wreg      void 
 19673 ;; Registers used:
 19674 ;;		wreg, status,2, status,0, pclath, cstack
 19675 ;; Tracked objects:
 19676 ;;		On entry : 0/0
 19677 ;;		On exit  : 0/0
 19678 ;;		Unchanged: 0/0
 19679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19680 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19681 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19682 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19683 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19684 ;;Total ram usage:        3 bytes
 19685 ;; Hardware stack levels used: 1
 19686 ;; Hardware stack levels required when called: 1
 19687 ;; This function calls:
 19688 ;;		i1_DATAEE_WriteByte
 19689 ;; This function is called by:
 19690 ;;		_timerInterrupt
 19691 ;; This function uses a non-reentrant model
 19692 ;;
 19693                           
 19694                           
 19695                           ;psect for function _writeRingBuffer
 19696  179D                     _writeRingBuffer:
 19697                           
 19698                           ;incstack = 0
 19699                           ; Regs used in _writeRingBuffer: [wreg+status,2+status,0+pclath+cstack]
 19700                           ;writeRingBuffer@temperature stored from wreg
 19701  179D  00F6               	movwf	writeRingBuffer@temperature
 19702  179E                     i1l4794:
 19703                           
 19704                           ;main.c: 120:     DATAEE_WriteByte(data_address, hours);
 19705  179E  0021               	movlb	1	; select bank1
 19706  179F  086D               	movf	(_data_address+1)^(0+128),w
 19707  17A0  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 19708  17A1  086C               	movf	_data_address^(0+128),w
 19709  17A2  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 19710  17A3  087D               	movf	_hours,w
 19711  17A4  00F5               	movwf	??_writeRingBuffer
 19712  17A5  0875               	movf	??_writeRingBuffer,w
 19713  17A6  00F2               	movwf	i1DATAEE_WriteByte@bData
 19714  17A7  3193  23E4  3197   	fcall	i1_DATAEE_WriteByte
 19715                           
 19716                           ;main.c: 121:     DATAEE_WriteByte(data_address + 1, minutes);
 19717  17AA  0021               	movlb	1	; select bank1
 19718  17AB  086C               	movf	_data_address^(0+128),w
 19719  17AC  3E01               	addlw	1
 19720  17AD  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 19721  17AE  3000               	movlw	0
 19722  17AF  3D6D               	addwfc	(_data_address+1)^(0+128),w
 19723  17B0  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 19724  17B1  087C               	movf	_minutes,w
 19725  17B2  00F5               	movwf	??_writeRingBuffer
 19726  17B3  0875               	movf	??_writeRingBuffer,w
 19727  17B4  00F2               	movwf	i1DATAEE_WriteByte@bData
 19728  17B5  3193  23E4  3197   	fcall	i1_DATAEE_WriteByte
 19729                           
 19730                           ;main.c: 122:     DATAEE_WriteByte(data_address + 2, seconds);
 19731  17B8  0021               	movlb	1	; select bank1
 19732  17B9  086C               	movf	_data_address^(0+128),w
 19733  17BA  3E02               	addlw	2
 19734  17BB  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 19735  17BC  3000               	movlw	0
 19736  17BD  3D6D               	addwfc	(_data_address+1)^(0+128),w
 19737  17BE  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 19738  17BF  085E               	movf	_seconds^(0+128),w
 19739  17C0  00F5               	movwf	??_writeRingBuffer
 19740  17C1  0875               	movf	??_writeRingBuffer,w
 19741  17C2  00F2               	movwf	i1DATAEE_WriteByte@bData
 19742  17C3  3193  23E4  3197   	fcall	i1_DATAEE_WriteByte
 19743                           
 19744                           ;main.c: 123:     DATAEE_WriteByte(data_address + 3, temperature);
 19745  17C6  0021               	movlb	1	; select bank1
 19746  17C7  086C               	movf	_data_address^(0+128),w
 19747  17C8  3E03               	addlw	3
 19748  17C9  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 19749  17CA  3000               	movlw	0
 19750  17CB  3D6D               	addwfc	(_data_address+1)^(0+128),w
 19751  17CC  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 19752  17CD  0876               	movf	writeRingBuffer@temperature,w
 19753  17CE  00F5               	movwf	??_writeRingBuffer
 19754  17CF  0875               	movf	??_writeRingBuffer,w
 19755  17D0  00F2               	movwf	i1DATAEE_WriteByte@bData
 19756  17D1  3193  23E4  3197   	fcall	i1_DATAEE_WriteByte
 19757                           
 19758                           ;main.c: 124:     DATAEE_WriteByte(data_address + 4, luminosity);
 19759  17D4  0021               	movlb	1	; select bank1
 19760  17D5  086C               	movf	_data_address^(0+128),w
 19761  17D6  3E04               	addlw	4
 19762  17D7  00F0               	movwf	i1DATAEE_WriteByte@bAdd
 19763  17D8  3000               	movlw	0
 19764  17D9  3D6D               	addwfc	(_data_address+1)^(0+128),w
 19765  17DA  00F1               	movwf	i1DATAEE_WriteByte@bAdd+1
 19766  17DB  0874               	movf	writeRingBuffer@luminosity,w
 19767  17DC  00F5               	movwf	??_writeRingBuffer
 19768  17DD  0875               	movf	??_writeRingBuffer,w
 19769  17DE  00F2               	movwf	i1DATAEE_WriteByte@bData
 19770  17DF  3193  23E4  3197   	fcall	i1_DATAEE_WriteByte
 19771  17E2                     i1l4796:
 19772                           
 19773                           ;main.c: 126:     last_temperature = temperature;
 19774  17E2  0876               	movf	writeRingBuffer@temperature,w
 19775  17E3  00F5               	movwf	??_writeRingBuffer
 19776  17E4  0875               	movf	??_writeRingBuffer,w
 19777  17E5  0021               	movlb	1	; select bank1
 19778  17E6  00EE               	movwf	_last_temperature^(0+128)
 19779  17E7                     i1l4798:
 19780                           
 19781                           ;main.c: 127:     last_luminosity = luminosity;
 19782  17E7  0874               	movf	writeRingBuffer@luminosity,w
 19783  17E8  00F5               	movwf	??_writeRingBuffer
 19784  17E9  0875               	movf	??_writeRingBuffer,w
 19785  17EA  00EF               	movwf	_last_luminosity^(0+128)
 19786  17EB                     i1l4800:
 19787                           
 19788                           ;main.c: 130:     if(data_address == (0x7000 + 20)){
 19789  17EB  3014               	movlw	20
 19790  17EC  066C               	xorwf	_data_address^(0+128),w
 19791  17ED  3070               	movlw	112
 19792  17EE  1903               	skipnz
 19793  17EF  066D               	xorwf	(_data_address+1)^(0+128),w
 19794  17F0  1D03               	btfss	3,2
 19795  17F1  2FF3               	goto	u334_21
 19796  17F2  2FF4               	goto	u334_20
 19797  17F3                     u334_21:
 19798  17F3  2FF9               	goto	i1l4804
 19799  17F4                     u334_20:
 19800  17F4                     i1l4802:
 19801                           
 19802                           ;main.c: 132:         data_address = 0x7000;
 19803  17F4  3000               	movlw	0
 19804  17F5  00EC               	movwf	_data_address^(0+128)
 19805  17F6  3070               	movlw	112
 19806  17F7  00ED               	movwf	(_data_address^(0+128)+1)
 19807                           
 19808                           ;main.c: 134:     }else{
 19809  17F8  2FFF               	goto	i1l1427
 19810  17F9                     i1l4804:
 19811                           
 19812                           ;main.c: 136:         data_address = data_address + 5;
 19813  17F9  086C               	movf	_data_address^(0+128),w
 19814  17FA  3E05               	addlw	5
 19815  17FB  00EC               	movwf	_data_address^(0+128)
 19816  17FC  3000               	movlw	0
 19817  17FD  3D6D               	addwfc	(_data_address+1)^(0+128),w
 19818  17FE  00ED               	movwf	(_data_address+1)^(0+128)
 19819  17FF                     i1l1427:
 19820  17FF  0008               	return
 19821  1800                     __end_of_writeRingBuffer:
 19822                           
 19823                           	psect	text61
 19824  13E4                     __ptext61:	
 19825 ;; *************** function i1_DATAEE_WriteByte *****************
 19826 ;; Defined at:
 19827 ;;		line 180 in file "mcc_generated_files/memory.c"
 19828 ;; Parameters:    Size  Location     Type
 19829 ;;  bAdd            2    0[COMMON] unsigned short 
 19830 ;;  bData           1    2[COMMON] unsigned char 
 19831 ;; Auto vars:     Size  Location     Type
 19832 ;;  GIEBitValue     1    3[COMMON] unsigned char 
 19833 ;; Return value:  Size  Location     Type
 19834 ;;                  1    wreg      void 
 19835 ;; Registers used:
 19836 ;;		wreg, status,2, status,0
 19837 ;; Tracked objects:
 19838 ;;		On entry : 0/0
 19839 ;;		On exit  : 0/0
 19840 ;;		Unchanged: 0/0
 19841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19842 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19843 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19845 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19846 ;;Total ram usage:        4 bytes
 19847 ;; Hardware stack levels used: 1
 19848 ;; This function calls:
 19849 ;;		Nothing
 19850 ;; This function is called by:
 19851 ;;		_writeRingBuffer
 19852 ;;		_timerInterrupt
 19853 ;; This function uses a non-reentrant model
 19854 ;;
 19855                           
 19856                           
 19857                           ;psect for function i1_DATAEE_WriteByte
 19858  13E4                     i1_DATAEE_WriteByte:
 19859  13E4                     i1l4730:	
 19860                           ;incstack = 0
 19861                           ; Regs used in i1_DATAEE_WriteByte: [wreg+status,2+status,0]
 19862                           
 19863                           
 19864                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
 19865  13E4  3000               	movlw	0
 19866  13E5  1B8B               	btfsc	11,7	;volatile
 19867  13E6  3001               	movlw	1
 19868  13E7  00F3               	movwf	i1DATAEE_WriteByte@GIEBitValue
 19869                           
 19870                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
 19871  13E8  0871               	movf	i1DATAEE_WriteByte@bAdd+1,w
 19872  13E9  0030               	movlb	16	; select bank16
 19873  13EA  009B               	movwf	27	;volatile
 19874  13EB                     i1l4732:
 19875                           
 19876                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
 19877  13EB  0870               	movf	i1DATAEE_WriteByte@bAdd,w
 19878  13EC  009A               	movwf	26	;volatile
 19879  13ED                     i1l4734:
 19880                           
 19881                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
 19882  13ED  0872               	movf	i1DATAEE_WriteByte@bData,w
 19883  13EE  009C               	movwf	28	;volatile
 19884  13EF                     i1l4736:
 19885                           
 19886                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
 19887  13EF  171E               	bsf	30,6	;volsfr
 19888  13F0                     i1l4738:
 19889                           
 19890                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
 19891  13F0  151E               	bsf	30,2	;volsfr
 19892  13F1                     i1l4740:
 19893                           
 19894                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
 19895  13F1  138B               	bcf	11,7	;volatile
 19896  13F2                     i1l4742:
 19897                           
 19898                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
 19899  13F2  3055               	movlw	85
 19900  13F3  009F               	movwf	31	;volsfr
 19901  13F4                     i1l4744:
 19902                           
 19903                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
 19904  13F4  30AA               	movlw	170
 19905  13F5  009F               	movwf	31	;volsfr
 19906  13F6                     i1l4746:
 19907                           
 19908                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
 19909  13F6  149E               	bsf	30,1	;volsfr
 19910  13F7                     i1l775:	
 19911                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
 19912                           
 19913                           
 19914                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
 19915  13F7  189E               	btfsc	30,1	;volsfr
 19916  13F8  2BFA               	goto	u323_21
 19917  13F9  2BFB               	goto	u323_20
 19918  13FA                     u323_21:
 19919  13FA  2BF7               	goto	i1l775
 19920  13FB                     u323_20:
 19921  13FB                     i1l777:
 19922                           
 19923                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
 19924  13FB  111E               	bcf	30,2	;volsfr
 19925  13FC                     i1l4748:
 19926                           
 19927                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
 19928  13FC  0C73               	rrf	i1DATAEE_WriteByte@GIEBitValue,w
 19929  13FD  1C03               	skipc
 19930  13FE  138B               	bcf	11,7	;volatile
 19931  13FF  1803               	skipnc
 19932  1400  178B               	bsf	11,7	;volatile
 19933  1401                     i1l778:
 19934  1401  0008               	return
 19935  1402                     __end_ofi1_DATAEE_WriteByte:
 19936                           
 19937                           	psect	text62
 19938  11E0                     __ptext62:	
 19939 ;; *************** function _deactivatePWM *****************
 19940 ;; Defined at:
 19941 ;;		line 50 in file "alarm.c"
 19942 ;; Parameters:    Size  Location     Type
 19943 ;;		None
 19944 ;; Auto vars:     Size  Location     Type
 19945 ;;		None
 19946 ;; Return value:  Size  Location     Type
 19947 ;;                  1    wreg      void 
 19948 ;; Registers used:
 19949 ;;		wreg, status,2, status,0, pclath, cstack
 19950 ;; Tracked objects:
 19951 ;;		On entry : 0/0
 19952 ;;		On exit  : 0/0
 19953 ;;		Unchanged: 0/0
 19954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 19955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 19959 ;;Total ram usage:        0 bytes
 19960 ;; Hardware stack levels used: 1
 19961 ;; Hardware stack levels required when called: 2
 19962 ;; This function calls:
 19963 ;;		_PWMOutputDisable
 19964 ;;		_TMR2_StopTimer
 19965 ;; This function is called by:
 19966 ;;		_timerInterrupt
 19967 ;;		_deactivateAlarm
 19968 ;; This function uses a non-reentrant model
 19969 ;;
 19970                           
 19971                           
 19972                           ;psect for function _deactivatePWM
 19973  11E0                     _deactivatePWM:
 19974  11E0                     i1l4814:	
 19975                           ;incstack = 0
 19976                           ; Regs used in _deactivatePWM: [wreg+status,2+status,0+pclath+cstack]
 19977                           
 19978                           
 19979                           ;alarm.c: 51:     TMR2_StopTimer();
 19980  11E0  3187  27FC  3191   	fcall	_TMR2_StopTimer
 19981  11E3                     i1l4816:
 19982                           
 19983                           ;alarm.c: 52:     PWMOutputDisable();
 19984  11E3  3192  2267  3191   	fcall	_PWMOutputDisable
 19985  11E6                     i1l1566:
 19986  11E6  0008               	return
 19987  11E7                     __end_of_deactivatePWM:
 19988                           
 19989                           	psect	text63
 19990  07FC                     __ptext63:	
 19991 ;; *************** function _TMR2_StopTimer *****************
 19992 ;; Defined at:
 19993 ;;		line 125 in file "mcc_generated_files/tmr2.c"
 19994 ;; Parameters:    Size  Location     Type
 19995 ;;		None
 19996 ;; Auto vars:     Size  Location     Type
 19997 ;;		None
 19998 ;; Return value:  Size  Location     Type
 19999 ;;                  1    wreg      void 
 20000 ;; Registers used:
 20001 ;;		status,2, status,0, pclath, cstack
 20002 ;; Tracked objects:
 20003 ;;		On entry : 0/0
 20004 ;;		On exit  : 0/0
 20005 ;;		Unchanged: 0/0
 20006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20011 ;;Total ram usage:        0 bytes
 20012 ;; Hardware stack levels used: 1
 20013 ;; Hardware stack levels required when called: 1
 20014 ;; This function calls:
 20015 ;;		_TMR2_Stop
 20016 ;; This function is called by:
 20017 ;;		_deactivatePWM
 20018 ;; This function uses a non-reentrant model
 20019 ;;
 20020                           
 20021                           
 20022                           ;psect for function _TMR2_StopTimer
 20023  07FC                     _TMR2_StopTimer:
 20024  07FC                     i1l4548:	
 20025                           ;incstack = 0
 20026                           ; Regs used in _TMR2_StopTimer: [status,2+status,0+pclath+cstack]
 20027                           
 20028                           
 20029                           ;mcc_generated_files/tmr2.c: 127:     TMR2_Stop();
 20030  07FC  3191  21D1  3187   	fcall	_TMR2_Stop
 20031  07FF                     i1l1185:
 20032  07FF  0008               	return
 20033  0800                     __end_of_TMR2_StopTimer:
 20034                           
 20035                           	psect	text64
 20036  11D1                     __ptext64:	
 20037 ;; *************** function _TMR2_Stop *****************
 20038 ;; Defined at:
 20039 ;;		line 119 in file "mcc_generated_files/tmr2.c"
 20040 ;; Parameters:    Size  Location     Type
 20041 ;;		None
 20042 ;; Auto vars:     Size  Location     Type
 20043 ;;		None
 20044 ;; Return value:  Size  Location     Type
 20045 ;;                  1    wreg      void 
 20046 ;; Registers used:
 20047 ;;		None
 20048 ;; Tracked objects:
 20049 ;;		On entry : 0/0
 20050 ;;		On exit  : 0/0
 20051 ;;		Unchanged: 0/0
 20052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20057 ;;Total ram usage:        0 bytes
 20058 ;; Hardware stack levels used: 1
 20059 ;; This function calls:
 20060 ;;		Nothing
 20061 ;; This function is called by:
 20062 ;;		_TMR2_StopTimer
 20063 ;; This function uses a non-reentrant model
 20064 ;;
 20065                           
 20066                           
 20067                           ;psect for function _TMR2_Stop
 20068  11D1                     _TMR2_Stop:
 20069  11D1                     i1l4524:	
 20070                           ;incstack = 0
 20071                           ; Regs used in _TMR2_Stop: []
 20072                           
 20073                           
 20074                           ;mcc_generated_files/tmr2.c: 122:     T2CONbits.TMR2ON = 0;
 20075  11D1  0025               	movlb	5	; select bank5
 20076  11D2  138E               	bcf	14,7	;volatile
 20077  11D3                     i1l1182:
 20078  11D3  0008               	return
 20079  11D4                     __end_of_TMR2_Stop:
 20080                           
 20081                           	psect	text65
 20082  1267                     __ptext65:	
 20083 ;; *************** function _PWMOutputDisable *****************
 20084 ;; Defined at:
 20085 ;;		line 21 in file "alarm.c"
 20086 ;; Parameters:    Size  Location     Type
 20087 ;;		None
 20088 ;; Auto vars:     Size  Location     Type
 20089 ;;		None
 20090 ;; Return value:  Size  Location     Type
 20091 ;;                  1    wreg      void 
 20092 ;; Registers used:
 20093 ;;		wreg, status,2
 20094 ;; Tracked objects:
 20095 ;;		On entry : 0/0
 20096 ;;		On exit  : 0/0
 20097 ;;		Unchanged: 0/0
 20098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20103 ;;Total ram usage:        0 bytes
 20104 ;; Hardware stack levels used: 1
 20105 ;; This function calls:
 20106 ;;		Nothing
 20107 ;; This function is called by:
 20108 ;;		_deactivatePWM
 20109 ;; This function uses a non-reentrant model
 20110 ;;
 20111                           
 20112                           
 20113                           ;psect for function _PWMOutputDisable
 20114  1267                     _PWMOutputDisable:
 20115  1267                     i1l4556:	
 20116                           ;incstack = 0
 20117                           ; Regs used in _PWMOutputDisable: [wreg+status,2]
 20118                           
 20119                           
 20120                           ;alarm.c: 22:     PPSLOCK = 0x55;
 20121  1267  3055               	movlw	85
 20122  1268  003D               	movlb	29	; select bank29
 20123  1269  008F               	movwf	15	;volsfr
 20124                           
 20125                           ;alarm.c: 23:     PPSLOCK = 0xAA;
 20126  126A  30AA               	movlw	170
 20127  126B  008F               	movwf	15	;volsfr
 20128  126C                     i1l4558:
 20129                           
 20130                           ;alarm.c: 24:     PPSLOCKbits.PPSLOCKED = 0x00;
 20131  126C  100F               	bcf	15,0	;volsfr
 20132  126D                     i1l4560:
 20133                           
 20134                           ;alarm.c: 26:     RA6PPS = 0x00;
 20135  126D  003E               	movlb	30	; select bank30
 20136  126E  0196               	clrf	22	;volatile
 20137  126F                     i1l4562:
 20138                           
 20139                           ;alarm.c: 27:     PPSLOCK = 0x55;
 20140  126F  3055               	movlw	85
 20141  1270  003D               	movlb	29	; select bank29
 20142  1271  008F               	movwf	15	;volsfr
 20143  1272                     i1l4564:
 20144                           
 20145                           ;alarm.c: 28:     PPSLOCK = 0xAA;
 20146  1272  30AA               	movlw	170
 20147  1273  008F               	movwf	15	;volsfr
 20148  1274                     i1l4566:
 20149                           
 20150                           ;alarm.c: 29:     PPSLOCKbits.PPSLOCKED = 0x01;
 20151  1274  140F               	bsf	15,0	;volsfr
 20152  1275                     i1l1547:
 20153  1275  0008               	return
 20154  1276                     __end_of_PWMOutputDisable:
 20155                           
 20156                           	psect	text66
 20157  1342                     __ptext66:	
 20158 ;; *************** function _activateAlarm *****************
 20159 ;; Defined at:
 20160 ;;		line 32 in file "alarm.c"
 20161 ;; Parameters:    Size  Location     Type
 20162 ;;  alarm           1    wreg     unsigned char 
 20163 ;; Auto vars:     Size  Location     Type
 20164 ;;  alarm           1    4[COMMON] unsigned char 
 20165 ;; Return value:  Size  Location     Type
 20166 ;;                  1    wreg      void 
 20167 ;; Registers used:
 20168 ;;		wreg, status,2, status,0, pclath, cstack
 20169 ;; Tracked objects:
 20170 ;;		On entry : 0/0
 20171 ;;		On exit  : 0/0
 20172 ;;		Unchanged: 0/0
 20173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20175 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20177 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20178 ;;Total ram usage:        1 bytes
 20179 ;; Hardware stack levels used: 1
 20180 ;; Hardware stack levels required when called: 2
 20181 ;; This function calls:
 20182 ;;		_PWM6_LoadDutyValue
 20183 ;;		_PWMOutputEnable
 20184 ;;		_TMR2_StartTimer
 20185 ;; This function is called by:
 20186 ;;		_timerInterrupt
 20187 ;; This function uses a non-reentrant model
 20188 ;;
 20189                           
 20190                           
 20191                           ;psect for function _activateAlarm
 20192  1342                     _activateAlarm:
 20193                           
 20194                           ;incstack = 0
 20195                           ; Regs used in _activateAlarm: [wreg+status,2+status,0+pclath+cstack]
 20196                           ;activateAlarm@alarm stored from wreg
 20197  1342  00F4               	movwf	activateAlarm@alarm
 20198  1343                     i1l4806:
 20199                           
 20200                           ;alarm.c: 33:     if (alarm == 46){
 20201  1343  302E               	movlw	46
 20202  1344  0674               	xorwf	activateAlarm@alarm,w
 20203  1345  1D03               	btfss	3,2
 20204  1346  2B48               	goto	u335_21
 20205  1347  2B49               	goto	u335_20
 20206  1348                     u335_21:
 20207  1348  2B4C               	goto	i1l1554
 20208  1349                     u335_20:
 20209  1349                     i1l1551:	
 20210                           ;alarm.c: 34:         do { LATAbits.LATA5 = 1; } while(0);
 20211                           
 20212  1349  0020               	movlb	0	; select bank0
 20213  134A  1696               	bsf	22,5	;volatile
 20214  134B  2B4E               	goto	i1l4808
 20215  134C                     i1l1554:	
 20216                           ;alarm.c: 36:         do { LATAbits.LATA4 = 1; } while(0);
 20217                           
 20218  134C  0020               	movlb	0	; select bank0
 20219  134D  1616               	bsf	22,4	;volatile
 20220  134E                     i1l4808:
 20221                           
 20222                           ;alarm.c: 38:     TMR2_StartTimer();
 20223  134E  3188  2000  3193   	fcall	_TMR2_StartTimer
 20224  1351                     i1l4810:
 20225                           
 20226                           ;alarm.c: 39:     PWMOutputEnable();
 20227  1351  3192  2276  3193   	fcall	_PWMOutputEnable
 20228  1354                     i1l4812:
 20229                           
 20230                           ;alarm.c: 41:     PWM6_LoadDutyValue(0x3);
 20231  1354  3003               	movlw	3
 20232  1355  00F0               	movwf	PWM6_LoadDutyValue@dutyValue
 20233  1356  3000               	movlw	0
 20234  1357  00F1               	movwf	PWM6_LoadDutyValue@dutyValue+1
 20235  1358  3192  22CC  3193   	fcall	_PWM6_LoadDutyValue
 20236  135B                     i1l1556:
 20237  135B  0008               	return
 20238  135C                     __end_of_activateAlarm:
 20239                           
 20240                           	psect	text67
 20241  0800                     __ptext67:	
 20242 ;; *************** function _TMR2_StartTimer *****************
 20243 ;; Defined at:
 20244 ;;		line 114 in file "mcc_generated_files/tmr2.c"
 20245 ;; Parameters:    Size  Location     Type
 20246 ;;		None
 20247 ;; Auto vars:     Size  Location     Type
 20248 ;;		None
 20249 ;; Return value:  Size  Location     Type
 20250 ;;                  1    wreg      void 
 20251 ;; Registers used:
 20252 ;;		status,2, status,0, pclath, cstack
 20253 ;; Tracked objects:
 20254 ;;		On entry : 0/0
 20255 ;;		On exit  : 0/0
 20256 ;;		Unchanged: 0/0
 20257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20262 ;;Total ram usage:        0 bytes
 20263 ;; Hardware stack levels used: 1
 20264 ;; Hardware stack levels required when called: 1
 20265 ;; This function calls:
 20266 ;;		_TMR2_Start
 20267 ;; This function is called by:
 20268 ;;		_activateAlarm
 20269 ;; This function uses a non-reentrant model
 20270 ;;
 20271                           
 20272                           
 20273                           ;psect for function _TMR2_StartTimer
 20274  0800                     _TMR2_StartTimer:
 20275  0800                     i1l4546:	
 20276                           ;incstack = 0
 20277                           ; Regs used in _TMR2_StartTimer: [status,2+status,0+pclath+cstack]
 20278                           
 20279                           
 20280                           ;mcc_generated_files/tmr2.c: 116:     TMR2_Start();
 20281  0800  3191  21CE  3188   	fcall	_TMR2_Start
 20282  0803                     i1l1179:
 20283  0803  0008               	return
 20284  0804                     __end_of_TMR2_StartTimer:
 20285                           
 20286                           	psect	text68
 20287  11CE                     __ptext68:	
 20288 ;; *************** function _TMR2_Start *****************
 20289 ;; Defined at:
 20290 ;;		line 108 in file "mcc_generated_files/tmr2.c"
 20291 ;; Parameters:    Size  Location     Type
 20292 ;;		None
 20293 ;; Auto vars:     Size  Location     Type
 20294 ;;		None
 20295 ;; Return value:  Size  Location     Type
 20296 ;;                  1    wreg      void 
 20297 ;; Registers used:
 20298 ;;		None
 20299 ;; Tracked objects:
 20300 ;;		On entry : 0/0
 20301 ;;		On exit  : 0/0
 20302 ;;		Unchanged: 0/0
 20303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20308 ;;Total ram usage:        0 bytes
 20309 ;; Hardware stack levels used: 1
 20310 ;; This function calls:
 20311 ;;		Nothing
 20312 ;; This function is called by:
 20313 ;;		_TMR2_StartTimer
 20314 ;; This function uses a non-reentrant model
 20315 ;;
 20316                           
 20317                           
 20318                           ;psect for function _TMR2_Start
 20319  11CE                     _TMR2_Start:
 20320  11CE                     i1l4522:	
 20321                           ;incstack = 0
 20322                           ; Regs used in _TMR2_Start: []
 20323                           
 20324                           
 20325                           ;mcc_generated_files/tmr2.c: 111:     T2CONbits.TMR2ON = 1;
 20326  11CE  0025               	movlb	5	; select bank5
 20327  11CF  178E               	bsf	14,7	;volatile
 20328  11D0                     i1l1176:
 20329  11D0  0008               	return
 20330  11D1                     __end_of_TMR2_Start:
 20331                           
 20332                           	psect	text69
 20333  1276                     __ptext69:	
 20334 ;; *************** function _PWMOutputEnable *****************
 20335 ;; Defined at:
 20336 ;;		line 8 in file "alarm.c"
 20337 ;; Parameters:    Size  Location     Type
 20338 ;;		None
 20339 ;; Auto vars:     Size  Location     Type
 20340 ;;		None
 20341 ;; Return value:  Size  Location     Type
 20342 ;;                  1    wreg      void 
 20343 ;; Registers used:
 20344 ;;		wreg
 20345 ;; Tracked objects:
 20346 ;;		On entry : 0/0
 20347 ;;		On exit  : 0/0
 20348 ;;		Unchanged: 0/0
 20349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20354 ;;Total ram usage:        0 bytes
 20355 ;; Hardware stack levels used: 1
 20356 ;; This function calls:
 20357 ;;		Nothing
 20358 ;; This function is called by:
 20359 ;;		_activateAlarm
 20360 ;; This function uses a non-reentrant model
 20361 ;;
 20362                           
 20363                           
 20364                           ;psect for function _PWMOutputEnable
 20365  1276                     _PWMOutputEnable:
 20366  1276                     i1l4550:	
 20367                           ;incstack = 0
 20368                           ; Regs used in _PWMOutputEnable: [wreg]
 20369                           
 20370                           
 20371                           ;alarm.c: 9:     PPSLOCK = 0x55;
 20372  1276  3055               	movlw	85
 20373  1277  003D               	movlb	29	; select bank29
 20374  1278  008F               	movwf	15	;volsfr
 20375                           
 20376                           ;alarm.c: 10:     PPSLOCK = 0xAA;
 20377  1279  30AA               	movlw	170
 20378  127A  008F               	movwf	15	;volsfr
 20379  127B                     i1l4552:
 20380                           
 20381                           ;alarm.c: 11:     PPSLOCKbits.PPSLOCKED = 0x00;
 20382  127B  100F               	bcf	15,0	;volsfr
 20383                           
 20384                           ;alarm.c: 14:     RA6PPS = 0x0D;
 20385  127C  300D               	movlw	13
 20386  127D  003E               	movlb	30	; select bank30
 20387  127E  0096               	movwf	22	;volatile
 20388                           
 20389                           ;alarm.c: 16:     PPSLOCK = 0x55;
 20390  127F  3055               	movlw	85
 20391  1280  003D               	movlb	29	; select bank29
 20392  1281  008F               	movwf	15	;volsfr
 20393                           
 20394                           ;alarm.c: 17:     PPSLOCK = 0xAA;
 20395  1282  30AA               	movlw	170
 20396  1283  008F               	movwf	15	;volsfr
 20397  1284                     i1l4554:
 20398                           
 20399                           ;alarm.c: 18:     PPSLOCKbits.PPSLOCKED = 0x01;
 20400  1284  140F               	bsf	15,0	;volsfr
 20401  1285                     i1l1544:
 20402  1285  0008               	return
 20403  1286                     __end_of_PWMOutputEnable:
 20404                           
 20405                           	psect	text70
 20406  12CC                     __ptext70:	
 20407 ;; *************** function _PWM6_LoadDutyValue *****************
 20408 ;; Defined at:
 20409 ;;		line 74 in file "mcc_generated_files/pwm6.c"
 20410 ;; Parameters:    Size  Location     Type
 20411 ;;  dutyValue       2    0[COMMON] unsigned short 
 20412 ;; Auto vars:     Size  Location     Type
 20413 ;;		None
 20414 ;; Return value:  Size  Location     Type
 20415 ;;                  1    wreg      void 
 20416 ;; Registers used:
 20417 ;;		wreg, status,2, status,0
 20418 ;; Tracked objects:
 20419 ;;		On entry : 0/0
 20420 ;;		On exit  : 0/0
 20421 ;;		Unchanged: 0/0
 20422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20423 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20425 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20426 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20427 ;;Total ram usage:        4 bytes
 20428 ;; Hardware stack levels used: 1
 20429 ;; This function calls:
 20430 ;;		Nothing
 20431 ;; This function is called by:
 20432 ;;		_timerInterrupt
 20433 ;;		_activateAlarm
 20434 ;; This function uses a non-reentrant model
 20435 ;;
 20436                           
 20437                           
 20438                           ;psect for function _PWM6_LoadDutyValue
 20439  12CC                     _PWM6_LoadDutyValue:
 20440  12CC                     i1l4544:	
 20441                           ;incstack = 0
 20442                           ; Regs used in _PWM6_LoadDutyValue: [wreg+status,2+status,0]
 20443                           
 20444                           
 20445                           ;mcc_generated_files/pwm6.c: 74:  void PWM6_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm6.c: 75:  {;mcc_generated_files/pwm6.c: 77:      PWM6DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 20446  12CC  0871               	movf	PWM6_LoadDutyValue@dutyValue+1,w
 20447  12CD  00F3               	movwf	??_PWM6_LoadDutyValue+1
 20448  12CE  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
 20449  12CF  00F2               	movwf	??_PWM6_LoadDutyValue
 20450  12D0  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 20451  12D1  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 20452  12D2  36F3               	lsrf	??_PWM6_LoadDutyValue+1,f
 20453  12D3  0CF2               	rrf	??_PWM6_LoadDutyValue,f
 20454  12D4  0872               	movf	??_PWM6_LoadDutyValue,w
 20455  12D5  0027               	movlb	7	; select bank7
 20456  12D6  008D               	movwf	13	;volatile
 20457                           
 20458                           ;mcc_generated_files/pwm6.c: 80:      PWM6DCL = (dutyValue & 0x0003)<<6;
 20459  12D7  0870               	movf	PWM6_LoadDutyValue@dutyValue,w
 20460  12D8  3903               	andlw	3
 20461  12D9  00F2               	movwf	??_PWM6_LoadDutyValue
 20462  12DA  3005               	movlw	5
 20463  12DB                     u276_25:
 20464  12DB  35F2               	lslf	??_PWM6_LoadDutyValue,f
 20465  12DC  3EFF               	addlw	-1
 20466  12DD  1D03               	skipz
 20467  12DE  2ADB               	goto	u276_25
 20468  12DF  3572               	lslf	??_PWM6_LoadDutyValue,w
 20469  12E0  008C               	movwf	12	;volatile
 20470  12E1                     i1l1130:
 20471  12E1  0008               	return
 20472  12E2                     __end_of_PWM6_LoadDutyValue:
 20473                           
 20474                           	psect	text71
 20475  12A7                     __ptext71:	
 20476 ;; *************** function _ADCC_GetSingleConversion *****************
 20477 ;; Defined at:
 20478 ;;		line 132 in file "mcc_generated_files/adcc.c"
 20479 ;; Parameters:    Size  Location     Type
 20480 ;;  channel         1    wreg     enum E12206
 20481 ;; Auto vars:     Size  Location     Type
 20482 ;;  channel         1    2[COMMON] enum E12206
 20483 ;; Return value:  Size  Location     Type
 20484 ;;                  2    0[COMMON] unsigned short 
 20485 ;; Registers used:
 20486 ;;		wreg
 20487 ;; Tracked objects:
 20488 ;;		On entry : 0/0
 20489 ;;		On exit  : 0/0
 20490 ;;		Unchanged: 0/0
 20491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 20492 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20493 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20495 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 20496 ;;Total ram usage:        3 bytes
 20497 ;; Hardware stack levels used: 1
 20498 ;; This function calls:
 20499 ;;		Nothing
 20500 ;; This function is called by:
 20501 ;;		_timerInterrupt
 20502 ;; This function uses a non-reentrant model
 20503 ;;
 20504                           
 20505                           
 20506                           ;psect for function _ADCC_GetSingleConversion
 20507  12A7                     _ADCC_GetSingleConversion:
 20508                           
 20509                           ;incstack = 0
 20510                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 20511                           ;ADCC_GetSingleConversion@channel stored from wreg
 20512  12A7  00F2               	movwf	ADCC_GetSingleConversion@channel
 20513  12A8                     i1l4780:
 20514                           
 20515                           ;mcc_generated_files/adcc.c: 132: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 133: {;mcc_generated_files/adcc.c: 135:     ADPCH = 
      +                          channel;
 20516  12A8  0872               	movf	ADCC_GetSingleConversion@channel,w
 20517  12A9  0021               	movlb	1	; select bank1
 20518  12AA  009E               	movwf	30	;volatile
 20519  12AB                     i1l4782:
 20520                           
 20521                           ;mcc_generated_files/adcc.c: 138:     ADCON0bits.ADON = 1;
 20522  12AB  1793               	bsf	19,7	;volatile
 20523  12AC                     i1l4784:
 20524                           
 20525                           ;mcc_generated_files/adcc.c: 141:     ADCON0bits.ADCONT = 0;
 20526  12AC  1313               	bcf	19,6	;volatile
 20527  12AD                     i1l4786:
 20528                           
 20529                           ;mcc_generated_files/adcc.c: 144:     ADCON0bits.ADGO = 1;
 20530  12AD  1413               	bsf	19,0	;volatile
 20531  12AE                     i1l4788:
 20532                           
 20533                           ;mcc_generated_files/adcc.c: 147:     __nop();
 20534  12AE  0000               	nop
 20535  12AF                     i1l663:	
 20536                           ;mcc_generated_files/adcc.c: 151:     {;mcc_generated_files/adcc.c: 152:     }
 20537                           
 20538                           
 20539                           ;mcc_generated_files/adcc.c: 150:     while (ADCON0bits.ADGO)
 20540  12AF  0021               	movlb	1	; select bank1
 20541  12B0  1813               	btfsc	19,0	;volatile
 20542  12B1  2AB3               	goto	u333_21
 20543  12B2  2AB4               	goto	u333_20
 20544  12B3                     u333_21:
 20545  12B3  2AAF               	goto	i1l663
 20546  12B4                     u333_20:
 20547  12B4                     i1l4790:
 20548                           
 20549                           ;mcc_generated_files/adcc.c: 156:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 20550  12B4  080D               	movf	13,w	;volatile
 20551  12B5  00F1               	movwf	?_ADCC_GetSingleConversion+1
 20552  12B6  080C               	movf	12,w	;volatile
 20553  12B7  00F0               	movwf	?_ADCC_GetSingleConversion
 20554  12B8                     i1l666:
 20555  12B8  0008               	return
 20556  12B9                     __end_of_ADCC_GetSingleConversion:
 20557  007E                     btemp	set	126	;btemp
 20558  007E                     int$flags	set	126
 20559  007E                     wtemp0	set	126
 20560                           
 20561                           	psect	config
 20562                           
 20563                           ;Config register CONFIG1 @ 0x8007
 20564                           ;	External Oscillator mode selection bits
 20565                           ;	FEXTOSC = OFF, Oscillator not enabled
 20566                           ;	Power-up default value for COSC bits
 20567                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 20568                           ;	Clock Out Enable bit
 20569                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 20570                           ;	Clock Switch Enable bit
 20571                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 20572                           ;	Fail-Safe Clock Monitor Enable bit
 20573                           ;	FCMEN = ON, FSCM timer enabled
 20574  8007                     	org	32775
 20575  8007  3FEC               	dw	16364
 20576                           
 20577                           ;Config register CONFIG2 @ 0x8008
 20578                           ;	Master Clear Enable bit
 20579                           ;	MCLRE = ON, MCLR pin is Master Clear function
 20580                           ;	Power-up Timer Enable bit
 20581                           ;	PWRTE = OFF, PWRT disabled
 20582                           ;	Low-Power BOR enable bit
 20583                           ;	LPBOREN = OFF, ULPBOR disabled
 20584                           ;	Brown-out reset enable bits
 20585                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 20586                           ;	Brown-out Reset Voltage Selection
 20587                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 20588                           ;	Zero-cross detect disable
 20589                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 20590                           ;	Peripheral Pin Select one-way control
 20591                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 20592                           ;	Stack Overflow/Underflow Reset Enable bit
 20593                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 20594                           ;	Background Debugger
 20595                           ;	DEBUG = OFF, Background Debugger disabled
 20596  8008                     	org	32776
 20597  8008  3FFF               	dw	16383
 20598                           
 20599                           ;Config register CONFIG3 @ 0x8009
 20600                           ;	WDT Period Select bits
 20601                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 20602                           ;	WDT operating mode
 20603                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 20604                           ;	WDT Window Select bits
 20605                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 20606                           ;	WDT input clock selector
 20607                           ;	WDTCCS = SC, Software Control
 20608  8009                     	org	32777
 20609  8009  3F9F               	dw	16287
 20610                           
 20611                           ;Config register CONFIG4 @ 0x800A
 20612                           ;	UserNVM self-write protection bits
 20613                           ;	WRT = OFF, Write protection off
 20614                           ;	Scanner Enable bit
 20615                           ;	SCANE = available, Scanner module is available for use
 20616                           ;	Low Voltage Programming Enable bit
 20617                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 20618  800A                     	org	32778
 20619  800A  3FFF               	dw	16383
 20620                           
 20621                           ;Config register CONFIG5 @ 0x800B
 20622                           ;	UserNVM Program memory code protection bit
 20623                           ;	CP = OFF, Program Memory code protection disabled
 20624                           ;	DataNVM code protection bit
 20625                           ;	CPD = OFF, Data EEPROM code protection disabled
 20626  800B                     	org	32779
 20627  800B  3FFF               	dw	16383

Data Sizes:
    Strings     110
    Constant    32
    Data        0
    BSS         89
    Persistent  45
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     80      80
    BANK1            80     52      80
    BANK2            80      0      72
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_DO_TX$3806$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S1497$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 17
		 -> main@buf(BANK1[17]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_9(CODE[7]), STR_7(CODE[15]), STR_6(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[20]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_9(CODE[7]), STR_7(CODE[15]), STR_6(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[20]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 21
		 -> STR_9(CODE[7]), STR_7(CODE[15]), STR_6(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[20]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_9(CODE[7]), STR_7(CODE[15]), STR_6(CODE[21]), STR_4(CODE[21]), 
		 -> STR_2(CODE[20]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 17
		 -> main@buf(BANK1[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S3219_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 17
		 -> main@buf(BANK1[17]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 17
		 -> main@buf(BANK1[17]), 

    parseEPROMInitialization@checksum	PTR unsigned char  size(1) Largest target is 1
		 -> checksum(BANK1[1]), 

    parseEPROMInitialization@CLKM	PTR unsigned char  size(1) Largest target is 1
		 -> CLKM(BANK1[1]), 

    parseEPROMInitialization@CLKH	PTR unsigned char  size(1) Largest target is 1
		 -> CLKH(BANK1[1]), 

    parseEPROMInitialization@ALAF	PTR unsigned char  size(1) Largest target is 1
		 -> ALAF(BANK1[1]), 

    parseEPROMInitialization@ALAL	PTR unsigned char  size(1) Largest target is 1
		 -> ALAL(BANK1[1]), 

    parseEPROMInitialization@ALAT	PTR unsigned char  size(1) Largest target is 1
		 -> ALAT(BANK1[1]), 

    parseEPROMInitialization@TALA	PTR unsigned char  size(1) Largest target is 1
		 -> TALA(BANK1[1]), 

    parseEPROMInitialization@PMON	PTR unsigned char  size(1) Largest target is 1
		 -> PMON(BANK1[1]), 

    parseEPROMInitialization@RI	PTR unsigned char  size(1) Largest target is 1
		 -> RI(BANK1[1]), 

    parseEPROMInitialization@WI	PTR unsigned char  size(1) Largest target is 1
		 -> WI(BANK1[1]), 

    parseEPROMInitialization@NR	PTR unsigned char  size(1) Largest target is 1
		 -> NR(BANK1[1]), 

    parseEPROMInitialization@NREG	PTR unsigned char  size(1) Largest target is 1
		 -> NREG(BANK1[1]), 

    parseEPROMInitialization@magic_word	PTR unsigned char  size(1) Largest target is 1
		 -> magic_word(BANK1[1]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_DefaultInterruptHandler(), Absolute function(), 

    S1497$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S1497$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S1497$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    i2c1_fsmStateTable	const PTR FTN()enum E12595[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerInterrupt(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerInterrupt(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(1) Largest target is 0

    S679$data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0

    LCDstr@p	PTR unsigned char  size(2) Largest target is 17
		 -> STR_8(CODE[4]), STR_5(CODE[15]), STR_3(CODE[15]), main@buf(BANK1[17]), 
		 -> STR_1(CODE[13]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_CallBack->_timerInterrupt
    _timerInterrupt->_writeRingBuffer
    i1_readTC74->i1_WriteI2C
    _writeRingBuffer->i1_DATAEE_WriteByte
    _activateAlarm->_PWM6_LoadDutyValue

Critical Paths under _main in BANK0

    _storeEPROMBuild->_operADDR
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    _atoi->_isdigit
    _readTC74->_WriteI2C
    _parseEPROMInitialization->_DATAEE_ReadByte
    _initializeREG->_DATAEE_WriteByte
    _initializeEPROM->_DATAEE_WriteByte
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _LCDstr->_LCDchar
    _LCDchar->_LCDsend2x4
    _LCDpos->_LCDcmd
    _LCDcmd->_LCDsend2x4
    _LCDinit->_LCDsend2x4
    _LCDsend2x4->_WriteI2C
    _LCDsend->_WriteI2C
    _LCDbusy->_LCDrecv
    _LCDrecv->_WriteI2C

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->_vfprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0   30823
                                             22 BANK1     30    30      0
                            _LCDbusy
                             _LCDcmd
                            _LCDinit
                             _LCDpos
                             _LCDstr
                            _OpenI2C
                    _PWM6_Initialize
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                    _initializeEPROM
                      _initializeREG
           _parseEPROMInitialization
                           _readTC74
                            _sprintf
                    _storeEPROMBuild
 ---------------------------------------------------------------------------------
 (1) _storeEPROMBuild                                      9     4      5    5005
                                              7 BANK0      9     4      5
                   _DATAEE_WriteByte
                           _operADDR
 ---------------------------------------------------------------------------------
 (2) _operADDR                                             7     5      2      49
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8    9125
                                              6 BANK1     16     8      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3    8379
                                             78 BANK0      2     2      0
                                              0 BANK1      6     3      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           43    41      2    8049
                                             57 BANK0     21    19      2
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    4143
                                             27 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    2537
                                             16 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     123
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1149
                                              8 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     834
                                              0 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             19 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     448
                                              0 BANK0     19     3     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     452
                                              0 BANK0     27    11     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    1985
                                              6 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     207
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1144
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _readTC74                                             2     2      0      68
                                              2 BANK0      2     2      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _parseEPROMInitialization                            14     2     12    2929
                                              2 BANK0     14     2     12
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2    1412
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initializeREG                                        1     1      0    4333
                                              4 BANK0      1     1      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (1) _initializeEPROM                                      1     1      0    4333
                                              4 BANK0      1     1      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3    4333
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     272
                    _ADCC_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM6_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      98
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR2_SetInterruptHandler                             2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     174
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     174
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM6_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OpenI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDstr                                               6     4      2    1539
                                              9 BANK0      6     4      2
                            _LCDchar
 ---------------------------------------------------------------------------------
 (2) _LCDchar                                              1     1      0     810
                                              8 BANK0      1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (1) _LCDpos                                               4     3      1     977
                                              9 BANK0      4     3      1
                             _LCDcmd
 ---------------------------------------------------------------------------------
 (2) _LCDcmd                                               1     1      0     810
                                              8 BANK0      1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0     832
                                              8 BANK0      1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (3) _LCDsend2x4                                           6     5      1     788
                                              2 BANK0      6     5      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      44
                                              2 BANK0      2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _LCDbusy                                              2     0      2     178
                                              7 BANK0      2     0      2
                            _LCDrecv
 ---------------------------------------------------------------------------------
 (2) _LCDrecv                                              5     5      0     178
                                              2 BANK0      5     5      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _WriteI2C                                             2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadI2C                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           0     0      0    2308
                           _TMR1_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR2_ISR                                            0     0      0       0
                      _TMR2_CallBack
 ---------------------------------------------------------------------------------
 (11) _TMR2_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (12) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR1_ISR                                            0     0      0    2308
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (11) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (11) _TMR1_CallBack                                       0     0      0    2068
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                     _timerInterrupt *
 ---------------------------------------------------------------------------------
 (12) _timerInterrupt                                      5     5      0    2068
                                              7 COMMON     5     5      0
           _ADCC_GetSingleConversion
                 _PWM6_LoadDutyValue
                      _activateAlarm
                      _deactivatePWM
                    _writeRingBuffer
                 i1_DATAEE_WriteByte
                         i1_readTC74
 ---------------------------------------------------------------------------------
 (13) i1_readTC74                                          2     2      0      68
                                              2 COMMON     2     2      0
                          i1_ReadI2C
                         i1_WriteI2C
 ---------------------------------------------------------------------------------
 (14) i1_WriteI2C                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (14) i1_ReadI2C                                           1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _writeRingBuffer                                     3     2      1     721
                                              4 COMMON     3     2      1
                 i1_DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (13) i1_DATAEE_WriteByte                                  4     1      3     557
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (13) _deactivatePWM                                       0     0      0       0
                   _PWMOutputDisable
                     _TMR2_StopTimer
 ---------------------------------------------------------------------------------
 (14) _TMR2_StopTimer                                      0     0      0       0
                          _TMR2_Stop
 ---------------------------------------------------------------------------------
 (15) _TMR2_Stop                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _PWMOutputDisable                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _activateAlarm                                       1     1      0     294
                                              4 COMMON     1     1      0
                 _PWM6_LoadDutyValue
                    _PWMOutputEnable
                    _TMR2_StartTimer
 ---------------------------------------------------------------------------------
 (14) _TMR2_StartTimer                                     0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (15) _TMR2_Start                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _PWMOutputEnable                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _PWM6_LoadDutyValue                                  4     2      2     272
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (13) _ADCC_GetSingleConversion                            3     1      2      22
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (12) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCDbusy
     _LCDrecv
       _ReadI2C
       _WriteI2C
   _LCDcmd
     _LCDsend2x4
       _WriteI2C
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
   _LCDpos
     _LCDcmd
   _LCDstr
     _LCDchar
       _LCDsend2x4
   _OpenI2C
   _PWM6_Initialize
   _SYSTEM_Initialize
     _ADCC_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM6_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _initializeEPROM
     _DATAEE_WriteByte
   _initializeREG
     _DATAEE_WriteByte
   _parseEPROMInitialization
     _DATAEE_ReadByte
   _readTC74
     _ReadI2C
     _WriteI2C
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc
         _isdigit
   _storeEPROMBuild
     _DATAEE_WriteByte
     _operADDR

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _timerInterrupt *
         _ADCC_GetSingleConversion
         _PWM6_LoadDutyValue
         _activateAlarm
           _PWM6_LoadDutyValue
           _PWMOutputEnable
           _TMR2_StartTimer
             _TMR2_Start
         _deactivatePWM
           _PWMOutputDisable
           _TMR2_StopTimer
             _TMR2_Stop
         _writeRingBuffer
           i1_DATAEE_WriteByte
         i1_DATAEE_WriteByte
         i1_readTC74
           i1_ReadI2C
           i1_WriteI2C
     _TMR1_WriteTimer
   _TMR2_ISR
     _TMR2_CallBack
       Absolute function(Fake) *
       _TMR2_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     34      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      48       9       90.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      F6      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      F6      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Jan 13 16:26:02 2022

                             _pwm_control 00DA          __end_of_TMR2_SetInterruptHandler 121B  
       __size_of_parseEPROMInitialization 00B9                                i1_WriteI2C 15AC  
               ?_parseEPROMInitialization 0022                     __end_of_deactivatePWM 11E7  
                                      l23 124B                                        l32 1420  
                                      l41 1769                                        l28 1418  
                                      l36 179C                                        l29 141A  
                                      l53 179A                                        l39 1764  
                                      l48 1786                                        l73 16A8  
                                      l74 16AA                                        l92 16E9  
                                      l87 16E3                                        l88 16E5  
                                      l98 0459                                        l99 045B  
                                      _RI 00E7                                        _NR 00E9  
                                      _WI 00E8                       ___wmul@multiplicand 0022  
             __size_of_PWM6_LoadDutyValue 0016                                       l130 04EB  
                                     l114 04A9                                       l115 04AA  
                                     l211 0A5C                                       l116 04AC  
                                     l220 0A9D                                       l150 053E  
                                     l134 04EF                                       l151 053F  
                                     l135 04F0                                       l152 0541  
                                     l224 0AB4                                       l232 08AA  
                                     l129 04E8                                       l225 0AB6  
                                     l170 0584                                       l171 0585  
                                     l235 11EE                                       l244 1390  
                                     l165 057D                                       l229 0ABE  
                                     l253 13C7                                       l166 0580  
                                     l238 11FF                                       l184 05BF  
                                     l248 12CB                                       l185 05C1  
                                     l195 0A0A                                       l196 0A0C  
                                     l436 15AB                                       l540 1461  
                                     l189 05D2                                       l480 1328  
                                     l651 12F8                                       l483 1208  
                                     l573 1211                                       l486 11F6  
                                     l781 1295                                       l775 081C  
                                     l777 0820                                       l778 0827  
                                     l886 1224                                       _PR2 028D  
                         _timer1ReloadVal 0163                                       _abs 13C8  
                                     _pad 16EA                   __size_of_PMD_Initialize 0008  
                         _TMR2_Initialize 12F9                                       wreg 0009  
                    _I2C1_DO_RX_NACK_STOP 0000                           _last_luminosity 00EF  
                             ?_LCDsend2x4 0022                                i1_readTC74 0DA3  
                         __end_of_LCDchar 1200                                      ?_abs 0033  
                                    l1213 121A                                      l1127 1258  
                                    l2212 1706                                      l2220 061C  
                                    l1333 0EBF                                      l2221 0625  
                                    l1422 14FA                                      l1414 0FF7  
                                    l1406 0FE1                                      l1334 0EC1  
                                    l1510 1542                                      l1167 130F  
                                    l1415 0FF9                                      l1407 0FE4  
                                    l2215 1728                                      l1511 1547  
                                    l2320 1341                                      l2304 0976  
                                    l1512 1566                                      l1361 0F38  
                                    l1329 0EB0                                      l2217 1742  
                                    l2225 0642                                      l1370 0F50  
                                    l1362 0F3B                                      l2226 065A  
                                    l2250 02CA                                      l1506 1533  
                                    l1515 0938                                      l1419 0FFF  
                                    l1347 0EFA                                      l2243 0742  
                                    l1348 0EFC                                      l2252 02D6  
                                    l1508 1538                                      l1525 07FB  
                                    l1373 0F54                                      l2317 09E7  
                                    l2229 06CB                                      l2253 02D9  
                                    l2181 14A6                                      l1509 153D  
                                    l2254 02DC                                      l1518 1645  
                                    l2343 1696                                      l2351 14CF  
                                    l2255 02DF                                      l5000 0A5D  
                                    l1392 0FA3                                      l1720 1440  
                                    l2328 1483                                      l2360 13AB  
                                    l2272 0447                                      l1480 0179  
                                    l1393 0FA5                                      l1369 0F4E  
                                    l2257 0311                                      l1473 0114  
                                    l5010 0A8E                                      l5002 0A64  
                                    l1378 0F68                                      l2354 0003  
                                    l1466 00AF                                      l1379 0F6A  
                                    l2283 13E3                                      l5012 0A9E  
                                    l5004 0A73                                      l5014 0AA5  
                                    l5006 0A79                                      l1718 142C  
                                    l2286 13E3                                      l5110 02C6  
                                    l5102 02A4                                      l1831 0B9A  
                                    l2279 152F                                      l5200 16BD  
                                    l5016 0ABA                                      l5008 0A88  
                                    l1832 0BAB                                      l5112 02CC  
                                    l5104 02B5                                      l5210 044A  
                                    l5202 16C1                                      l5018 1209  
                                    l5026 1212                                      l1818 0D91  
                                    l5130 0316                                      l5122 02E2  
                                    l5106 02BD                                      l1819 0DA2  
                                    l5220 0486                                      l5212 045F  
                                    l5204 16D0                                      l5300 157A  
                                    l5140 0345                                      l5132 031A  
                                    l5108 02C2                                      l5230 04C3  
                                    l5222 0495                                      l5214 046E  
                                    l5206 16D4                                      l5310 158E  
                                    l5302 157C                                      l4510 1651  
                                    l5142 0346                                      l5134 032C  
                                    l5126 02E7                                      l5240 0507  
                                    l5232 04D2                                      l5224 049A  
                                    l5216 0472                                      l5208 044A  
                                    l5320 1598                                      l5312 1590  
                                    l5304 157E                                      l4600 0D15  
                                    l4512 1656                                      l5160 03BC  
                                    l5152 038B                                      l5136 0334  
                                    l5144 034C                                      l5128 030B  
                                    l5250 0545                                      l5242 0516  
                                    l5234 04D9                                      l5226 04B0  
                                    l5218 0481                                      l5330 15A3  
                                    l5322 159A                                      l5314 1592  
                                    l5306 1580                                      l4610 0D4F  
                                    l4602 0D1D                                      l4514 1660  
                                    l4506 1646                                      l4530 14BA  
                                    l5170 0408                                      l5162 03D5  
                                    l5146 035F                                      l5154 0391  
                                    l5138 0341                                      l6210 0041  
                                    l5260 0589                                      l5252 0554  
                                    l5244 051B                                      l5236 04F4  
                                    l5228 04BF                                      l5500 0831  
                                    l5340 1220                                      l5332 15A6  
                                    l5324 159C                                      l5316 1594  
                                    l5308 158C                                      l5420 0810  
                                    l4612 0D5F                                      l4604 0D21  
                                    l4620 0ABF                                      l4516 167D  
                                    l4508 164C                                      l4532 14BF  
                                    l4540 13A5                                      l5172 0413  
                                    l5156 03A3                                      l5148 0367  
                                    l6300 01AE                                      l6220 004B  
                                    l6212 0042                                      l5270 05C5  
                                    l5262 0598                                      l5254 0558  
                                    l5246 052A                                      l5238 0503  
                         __end_of_LCDbusy 12CC                                      l5510 0855  
                                    l5502 0835                                      l5342 1221  
                                    l5350 1204                                      l5334 15A8  
                                    l5326 159E                                      l5318 1596  
                                    l5430 0819                                      l5422 0814  
                                    l4614 0D60                                      l4606 0D25  
                                    l4630 0B17                                      l4622 0AC1  
                                    l4518 168E                                      l4526 14A9  
                                    l4534 1393                                      l5166 03EF  
                                    l5158 03B4                                      l5182 0424  
                                    l6310 0217                                      l6302 01B6  
                                    l6230 005E                                      l6222 004D  
                                    l6214 0043                                      l6206 003D  
                                    ?_pad 0030                                      l5264 059C  
                                    l5256 0567                                      l5248 052F  
                                    l5520 0879                                      l5512 085D  
                                    l5504 083D                                      l5360 12F5  
                                    l5344 1223                                      l5352 1207  
                                    l5328 15A0                                      l5336 11EF  
                                    l5600 1316                                      l5432 081B  
                                    l5424 0815                                      l5416 0804  
                                    l5440 128E                                      l4608 0D2D  
                                    l4616 0D6E                                      l4640 0B37  
                                    l4632 0B24                                      l4624 0ACB  
                                    l4528 14AC                                      l4536 1398  
                                    l5184 043D                                      l5168 0400  
                                    l5176 0419                                      l6320 0252  
                                    l6312 021E                                      l6304 01BF  
                                    l6240 006D                                      l6232 0060  
                                    l6224 0051                                      l6216 0044  
                                    l6208 0040                           __end_of_LCDinit 08AB  
                                    l5266 05AB                                      l5258 056E  
                                    l5194 1699                                      l5530 089B  
                                    l5522 087D                                      l5514 0861  
                                    l5506 0841                                      l5274 11E9  
                                    l5362 12F7                                      l5338 121B  
                                    l5346 1200                                      l5290 156F  
                                    l5354 124C                                      l5370 1300  
                                    l5610 1325                                      l5602 1319  
                                    l5434 0821                                      l5426 0816  
                                    l5418 080C                                      l5450 1294  
                                    l5442 128F                                      l4570 1424  
                                    l4618 0D73                                      l4642 0B59  
                                    l4634 0B27                                      l4626 0AED  
                                    l4538 139C                                      l4650 16EC  
                                    l5178 0421                                      l6330 0281  
                                    l6322 025C                                      l6314 0222  
                                    l6306 01C4                                      l6250 00A1  
                                    l6242 0070                                      l6234 0064  
                                    l6226 0054                                      l6218 0046  
                                    l5268 05B0                                      l5540 12C2  
                                    l5196 1699                                      l5524 0889  
                                    l5516 0869                                      l5508 0851  
                                    l5276 11F9                                      l5532 1376  
                                    l5348 1203                                      l5292 1571  
                                    l5356 1253                                      l5380 1441  
                                    l5372 1301                                      l5364 12F9  
                                    l5604 131C                                      l5428 0817  
                                    l5444 1290                                      l5436 1286  
                                    l5700 0FFD                                      l4572 1428  
                                    l4644 0B69                                      l4636 0B2F  
                                    l4628 0AF8                                      l4660 1709  
                                    l4652 16F1                                      l4820 05E5  
                                    l6420 1554                                      l6332 028B  
                                    l6324 0266                                      l6316 022C  
                                    l6308 01CB                                      l6260 00CF  
                                    l6252 00B3                                      l6244 0073  
                                    l6236 0067                                      l6228 0059  
                                    l4750 1745                                      l5198 16AE  
                                    l5526 088F                                      l5518 086D  
                                    l5550 13B4                                      l5534 1377  
                                    l5358 12E2                                      l5294 1573  
                                    l5286 1567                                      l5390 144C  
                                    l5382 1444                                      l5374 1303  
                                    l5366 12FC                                      l5606 131F  
                                    l5446 1291                                      l5438 128A  
                                    l4574 1431                                      l4910 09D7  
                                    l4902 09AF                                      l4590 0CD7  
                                    l4582 0C9E                                      l4638 0B33  
                                    l4646 0B77                                      l4662 1715  
                                    l4654 16FA                                      l4830 063A  
                                    l4822 05F8                                      l6422 02FA  
                                    l5462 154C                                      l5710 1602  
                                    l6334 0292                                      l6326 026D  
                                    l6318 024A                                      l6270 0106  
                                    l6262 00ED                                      l6254 00B8  
                                    l6246 0095                                      l6238 006A  
                                    l4760 1757                                      l4752 1748  
                                    l5544 12C8                                      l5528 0895  
                                    l5552 13B9                                      l5536 137B  
                                    l5296 1575                                      l5288 156D  
                                    l5392 1454                                      l5384 1446  
                                    l5376 1304                                      l5368 12FD  
                                    l5608 1322                                      l5704 14D0  
                                    l5448 1292                                      l4576 1436  
                                    l4568 1421                                      l4680 1462  
                                    l4912 09E3                                      l6424 0987  
                                    l4592 0CF6                                      l4584 0CA0  
                                    l4648 0B7C                                      l4672 13C8  
                                    l4664 171A                                      l4656 16FF  
                                    l4840 0662                                      l4832 064A  
                                    l4824 05FE                                      l5480 151D  
                                    l5720 1486                                      l5464 1562  
                                    l5712 160D                                      l6328 0271  
                                    l6280 0149                                      l6272 0118  
                                    l6256 00C1                                      l6264 00F5  
                                    l6248 0099                                      l4762 1762  
                                    l4770 1770                                      l5538 12B9  
                                    l5554 13BD                                      l5490 1245  
                                    l5298 1577                                      l5394 1456  
                                    l5386 1448                                      l5378 130C  
                                    l5706 08AB                                      l4578 143C  
                                    l4682 1465                                      l4906 09CB  
                                    l4594 0CFB                                      l4586 0CAA  
                                    l4674 13D6                                      l4666 172D  
                                    l4658 1704                                      l4850 06D9  
                                    l4842 0667                                      l4834 0650  
                                    l4826 0621                                      l4818 05D5  
                                    l5482 1527                                      l5474 14FD  
                                    l5722 148E                                      l5458 1532  
                                    l5714 161B                                      l6290 016B  
                                    l6282 0151                                      l6274 011D  
                                    l6266 00FA                                      l6258 00CB  
                                    l4772 177B                                      l4764 176E  
                                    l5556 13C3                                      l5548 13AE  
                                    l5492 1247                                      l5396 145E  
                                    l5388 144A                                      l5732 0745  
                                    l5660 0EE7                                      l5652 0EB0  
                                    l4676 1329                                      l4684 146C  
                                    l4908 09D1                                      l4596 0D06  
                                    l4588 0CCC                                      l4668 1736  
                                    l4860 070D                                      l4852 06E6  
                                    l4844 0696                                      l4836 0655  
                                    l4828 0634                                      l5476 1501  
                                    l5724 1490                                      l5716 1629  
                                    l5708 15F9                                      l6292 017D  
                                    l6276 0127                                      l6284 015A  
                                    l6268 00FE                                      l4774 178B  
                                    l4758 174D                                      l5494 1248  
                                    l5486 123F                                      l5670 0F22  
                                    l5662 0EEB                                      l5654 0EC5  
                                    l4686 147B                                      l4598 0D12  
                                    l4870 0726                                      l4862 0712  
                                    l4854 06F3                                      l4846 069A  
                                    l4838 065F                                      l5478 1505  
                                    l5726 1492                                      l5718 1637  
                                    l6294 0182                                      l6286 015F  
                                    l6278 012B                                      l5496 124A  
                                    l5488 1244                                      l5680 0F7D  
                                    l5672 0F29                                      l5664 0F00  
                                    l5656 0ED4                                      l4688 147C  
                                    l4880 0943                                      l4864 0717  
                                    l4872 072F                                      l4856 0701  
                                    l4848 069E                                      l5728 149E  
                                    l6296 018C                                      l6288 0163  
                                    l5498 0828                                      l5690 0FB8  
                                    l5682 0F81                                      l5674 0F3F  
                                    l5666 0F0F                                      l5658 0ED8  
                                    l4882 0945                                      l4866 071D  
                                    l4858 0706                                      l6298 0190  
                                    l4972 1402                                      l4980 09EA  
                                    l5596 1310                                      l5692 0FBC  
                                    l5684 0F90                                      l5676 0F59  
                                    l5668 0F13                                      l4892 096B  
                                    l4884 094F                                      l4876 0939  
                                    l4868 0722                                      l4974 140D  
                                    l4990 0A23                                      l4982 09EF  
                                    l5598 1313                                      l5694 0FCB  
                                    l5686 0F94                                      l5678 0F6E  
                                    l4894 0972                                      l4886 0963  
                                    l4878 093F                                      l4976 141F  
                                    l4992 0A32                                      l4984 09FB  
                                    l5696 0FD2                                      l5688 0FA9  
                                    l4896 097B                                      l4888 0964  
                                    l4994 0A38                                      l4986 0A10  
                                    l5698 0FE8                                      l4898 098F  
                         __end_of_LCDrecv 05D3                                      l4996 0A47  
                                    l4988 0A1F                                      l4998 0A4D  
                                    _ALAF 00E2                                      _ALAL 00E3  
                         __end_of_LCDsend 16EA                                      _ALAT 00E4  
                                    STR_1 1876                                      STR_2 1835  
                                    STR_3 1867                                      STR_4 1820  
                                    STR_5 1858                                      STR_6 1820  
                                    STR_7 1849                                      STR_8 188A  
                                    STR_9 1883                                      _CLKH 00E1  
                                    _CLKM 00E0                                      u3000 0B7C  
                                    u3001 0B7B                                      u3100 147B  
                                    u3020 16F1                                      u3101 147A  
                                    u3021 16F0                                      _LATA 0016  
                                    u3030 16FF                                      _LATB 0017  
                                    u3031 16FE                                      _LATC 0018  
                                    u3040 1728                                      _LATD 0019  
                                    u3041 1727                                      _LATE 001A  
                                    u3050 172D                                      u3051 172C  
                                    u3300 1786                                      u3060 13D6  
                                    u3301 1785                                      u3061 13D5  
                                    u3045 1724                                      u3310 178B  
                                    u3070 133A                                      u3311 178A  
                                    u3071 1338                                      u3320 179A  
                                    u3240 174C                                      u3080 133B  
                                    u3400 0621                                      u4200 0391  
                                    u3321 1799                                      u3241 174B  
                                    u3065 13D2                                      u3401 0620  
                                    u4201 0390                                      u3250 1757  
                                    u3090 146C                                      u3410 0634  
                                    u4210 03A3                                      u4130 02B5  
                                    _T2PR 028D                                      u3251 1756  
                                    u3091 146B                                      u3411 0633  
                                    u4211 03A2                                      u4131 02B4  
                                    u3260 1762                                      u4300 0459  
                                    u2700 164C                                      u3500 0712  
                                    u3420 0650                                      u4220 03B4  
                                    u4140 0311                                      u3261 1761  
                                    u4301 0458                                      u2701 164B  
                                    u3501 0711                                      u3421 064F  
                                    u4221 03B3                                      u4141 0310  
                                    u3270 1769                                      u4310 045F  
                                    u2710 1651                                      u3510 071D  
                                    u3430 0655                                      u4230 0400  
                                    u4150 0316                                      u3271 1768  
                                    u4311 045E                                      u2711 1650  
                                    u3511 071C                                      u3431 0654  
                                    u3415 0630                                      u4231 03FF  
                                    u4151 0315                                      u3280 176E  
                                    u4400 04EF                                      u4320 046E  
                                    u4240 16A8                                      u2800 143C  
                                    u3520 094F                                      u2720 1660  
                                    u3440 06D9                                      u3360 05F0  
                                    u4160 032C                                      u3281 176D  
                                    u4401 04EE                                      u4321 046D  
                                    u4241 16A7                                      u2801 143B  
                                    u3521 094E                                      u2721 165F  
                                    u3441 06D8                                      u3361 05EE  
                                    u4161 032B                                      u3290 177B  
                                    u4410 04F4                                      u4330 0481  
                                    u4250 16AE                                      u3530 0963  
                                    u2810 0CAA                                      u2730 167D  
                                    u3450 06E6                                      u3370 05F1  
                                    u4170 0345                                      u3291 177A  
                                    u4411 04F3                                      u4331 0480  
                                    u4251 16AD                                      u3531 0962  
                                    u2811 0CA9                                      u2731 167C  
                                    u3451 06E5                                      u4171 0344  
                                    u4500 0584                                      u4420 0503  
                                    u4340 0495                                      u4260 16BD  
                                    u3540 0971                                      u2900 0D73  
                                    u2740 14CF                                      u3460 06F3  
                                    u3380 05FE                                      u4180 0384  
                                    u5300 018C                                      u4501 0583  
                                    u4421 0502                                      u4341 0494  
                                    u4261 16BC                                      u3541 0970  
                                    u2901 0D72                                      u2741 14CE  
                                    u3461 06F2                                      u3445 06D5  
                                    u3381 05FD                                      u4181 0382  
                                    u5301 018B                                      u4510 0589  
                                    u4430 0516                                      u4350 04A9  
                                    u4270 16D0                                      u3550 09C4  
                                    u2830 0CD7                                      u2750 13A5  
                                    u3470 0701                                      u4190 0385  
                                    u5310 01C4                                      u5230 00B3  
                                    u4511 0588                                      u4431 0515  
                                    u4351 04A8                                      u4271 16CF  
                                    u3551 09C2                                      u2831 0CD6  
                                    u2735 1679                                      u2751 13A4  
                                    u3471 0700                                      u5311 01C3  
                                    u5231 00B2                                      u4520 0598  
                                    u4440 052A                                      u4360 04B0  
                                    u4280 16E3                                      u4600 0820  
                                    u3560 09C5                                      u2920 0ACB  
                                    u3480 0706                                      u5320 022C  
                                    u5240 00CB                                      u4521 0597  
                                    u4441 0529                                      u4361 04AF  
                                    u4281 16E2                                      u4601 081F  
                                    u2921 0ACA                                      u3481 0705  
                                    u3465 06EF                                      u5321 022B  
                                    u5241 00CA                                      u4530 05AB  
                                    u4450 053E                                      u4370 04BF  
                                    u4290 16E9                                      u2770 1428  
                                    u3570 09D1                                      u2850 0D03  
                                    u3490 070D                                      u5330 0266  
                                    u5250 00FA                                      u4531 05AA  
                                    u4451 053D                                      u4371 04BE  
                                    u4291 16E8                                      u2771 1427  
                                    u3571 09D0                                      u3491 070C  
                                    u3475 06FD                                      u5331 0265  
                                    u5251 00F9                                      u4540 05BF  
                                    u4460 0545                                      u4380 04D2  
                                    u3900 0A1F                                      u4700 0ED4  
                                    u3580 09D7                                      u2860 0D12  
                                    u2940 0AF8                                      u4620 1527  
                                    u5340 028B                                      u5260 0118  
                                    _PMD0 0796                                      u4541 05BE  
                                    u4461 0544                                      u4381 04D1  
                                    u3901 0A1E                                      u4701 0ED3  
                                    u3581 09D6                                      u2861 0D11  
                                    u2941 0AF7                                      u4621 1526  
                                    u5341 028A                                      u5261 0117  
                                    _PMD1 0797                                      u4550 05C5  
                                    u4470 0554                                      u4390 04E8  
                                    u3910 0A32                                      u4630 1390  
                                    u4710 0EE7                                      u2870 0D25  
                                    u5270 0127                                      _PMD2 0798  
                                    u4551 05C4                                      u4471 0553  
                                    u4391 04E7                                      u3911 0A31  
                                    u4631 138F                                      u4711 0EE6  
                                    u2871 0D24                                      u5407 01BA  
                                    u5271 0126                                      _PMD3 0799  
                                    i1l32 1375                                      u3840 140D  
                                    u4480 0567                                      u4640 12C2  
                                    u3920 0A47                                      u4800 0F59  
                                    u4720 0EFA                                      u2880 0D4F  
                                    u2960 0B24                                      u5280 015F  
                                    _PMD4 079A                                      i1l41 15CD  
                                    u3841 140C                                      u4481 0566  
                                    u4641 12C1                                      u3921 0A46  
                                    u4801 0F58                                      u4721 0EF9  
                                    u2785 142D                                      u2881 0D4E  
                                    u2961 0B23                                      u5417 0298  
                                    u5281 015E                                      _PMD5 079B  
                                    u3850 1418                                      u4490 057D  
                                    u3930 0A5C                                      u4650 13B4  
                                    u4810 0F68                                      u4730 0F00  
                                    u2890 0D6E                                      u2970 0B37  
                                    u5290 017D                                      u3851 1417  
                                    u4491 057C                                      u3931 0A5B  
                                    u5507 0885                                      u5427 082C  
                                    u4651 13B3                                      u4811 0F67  
                                    u4731 0EFF                                      u2795 1432  
                                    u2891 0D6D                                      u2971 0B36  
                                    u5291 017C                                      i1l28 136F  
                                    i1l36 15F6                                      u3860 141F  
                                    u3940 0A73                                      u4900 0FE8  
                                    u4820 0F6E                                      u4740 0F0F  
                                    u2980 0B59                                      i1l29 1370  
                                    i1l53 15F5                                      u3861 141E  
                                    u4565 05C9                                      u3941 0A72  
                                    u5517 08A5                                      u5437 083A  
                                    u4901 0FE7                                      u4821 0F6D  
                                    u4741 0F0E                                      u2885 0D4B  
                                    u2981 0B58                                      u5357 00A7  
                                    u3950 0A88                                      u4910 0FF7  
                                    u4830 0F7D                                      u4750 0F22  
                                    u2990 0B77                                      i1l39 15C8  
                                    u5527 0ABB                                      u3951 0A87  
                                    u5447 0845                                      u4911 0FF6  
                                    u4831 0F7C                                      u4751 0F21  
                                    u2991 0B76                                      u5367 00BC  
                                    i1l48 15E6                                      u3960 0A9D  
                                    u3880 0A0A                                      u4920 0FFD  
                                    u4840 0F90                                      u4760 0F38  
                                    u4680 0EBF                                      u3961 0A9C  
                                    u3881 0A09                                      u5457 0852  
                                    u4921 0FFC                                      u4841 0F8F  
                                    u4761 0F37                                      u4681 0EBE  
                                    u2985 0B55                                      u5377 010C  
                                    u3970 0AB4                                      u3890 0A10  
                                    u4850 0FA3                                      u4770 0F3F  
                                    u4690 0EC5                                      u3971 0AB3  
                                    u3891 0A0F                                      u3875 09F2  
                                    u5467 085A                                      u4851 0FA2  
                                    u4771 0F3E                                      u4691 0EC4  
                                    u5387 0155                                      u3980 0ABA  
                                    u4860 0FA9                                      u4780 0F4E  
                                    u3981 0AB9                                      u5477 0866  
                                    u4861 0FA8                                      u4781 0F4D  
                                    u5397 0171                                      _TALA 00E5  
                                    u4870 0FB8                                      u4790 0F54  
                                    u5487 086E                                      u4871 0FB7  
                                    u4791 0F53                                      u4880 0FCB  
                                    u5497 087A                                      u4881 0FCA  
                                    u4890 0FE1                                      u4891 0FE0  
                                    _NREG 00EA                                      _PMON 00E6  
                                    _TMR2 028C                                      _WPUA 0F39  
                                    _WPUB 0F44                                      _WPUC 0F4F  
                                    _WPUD 0F5A                                      _WPUE 0F65  
                                    abs@a 0033                                      _dbuf 013F  
                __size_of_writeRingBuffer 0063                                      _atoi 0939  
                                    _main 003D                                      _dtoa 05D3  
                                    _prec 00D6                                      _nout 013D  
                                    pad@i 0034                                      pad@p 0031  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    pad@w 0036                                      btemp 007E  
                                    start 0025                ??_TMR1_SetInterruptHandler 0022  
                        ??_timerInterrupt 0077                           __end_of_ReadI2C 1421  
                         __end_of_OpenI2C 124C                                     ??_abs 0035  
                                   ??_pad 0033                 __size_of_DATAEE_WriteByte 0024  
                        _last_temperature 00EE            __size_of_OSCILLATOR_Initialize 0009  
           __end_of_OSCILLATOR_Initialize 1209                           __end_of___aodiv 0DA3  
                                   _ADACQ 009D                                     _ADCAP 009B  
                                   _ADACT 0099                                     ?_atoi 0026  
                                   ?_main 0070                                     ?_dtoa 003B  
                                   _ADCLK 0098                           __end_of___aomod 0BAC  
                                   _ADCNT 010C                                     _ADPCH 009E  
                                   _ADREF 009A                         ??_initializeEPROM 0024  
                                   _ADPRE 009C                                     _ADRPT 010D  
                                   _T1CLK 0211                                     _T1CON 020E  
                                   _T2CON 028E                                     _T2HLT 028F  
                                   _T2TMR 028C                                     _T2RST 0291  
                                   i1l502 0017                                     i1l503 0023  
                                   i1l507 0023                                     i1l570 1231  
                                   i1l554 12A6                                     i1l566 1266  
                                   i1l663 12AF                                     i1l576 11CD  
                                   i1l666 12B8                                     i1l775 13F7  
                                   i1l777 13FB                                     i1l778 1401  
              __end_of_i2c1_fsmStateTable 1820                                     _OSCEN 0891  
                   __end_of_activateAlarm 135C                              vfpfcnvrt@fmt 0059  
                                   _TMR1H 020D                                     _TMR1L 020C  
                                   _TRISA 0011                                     _TRISB 0012  
                                   _TRISC 0013                                     _TRISD 0014  
                                   _TRISE 0015                           _PWM6_Initialize 124C  
                       ??_I2C1_Initialize 0020                          __end_of_TMR1_ISR 1267  
                        __end_of_TMR2_ISR 11DA                           _DATAEE_ReadByte 1286  
                      __size_ofi1_ReadI2C 001A                                     _flags 00D8  
                      __size_of_TMR2_Stop 0003                               ?_TMR2_Start 0070  
                                   _fputc 1646                                     _fputs 14A7  
                         __end_of_isdigit 1342                                     _hours 007D  
                  storeEPROMBuild@minutes 0027                    storeEPROMBuild@seconds 0028  
                                   atoi@n 0033                                     pad@fp 0038  
                                   atoi@s 0026                                     _width 00D4  
                                   _putch 0003                                     main@c 00D3  
                                   dtoa@d 003B                                     dtoa@i 0057  
                                   dtoa@n 004F                                     dtoa@p 0049  
                                   dtoa@s 004D                                     dtoa@w 004B  
                         __end_of_isspace 1484                   __end_of_TMR1_Initialize 1462  
                                   pclath 000A                                     status 0003  
                                   wtemp0 007E                           __end_of_sprintf 14A7  
                         _TMR2_StartTimer 0800                writeRingBuffer@temperature 0076  
                         _TMR1_WriteTimer 1296                           __initialization 0027  
                            __end_of_atoi 09E8                              __end_of_main 02A2  
                            __end_of_dtoa 0743                               ?i1_WriteI2C 0070  
                     __size_of_LCDsend2x4 00D7                   __end_of_TMR2_Initialize 1310  
             ?_INTERRUPT_InterruptManager 0070                                    ??_atoi 0028  
                _TMR2_SetInterruptHandler 1212                                    ??_main 00B6  
                                  ??_dtoa 0043                                 ??_LCDchar 0028  
                               ??_LCDbusy 0029                                 ??_LCDinit 0028  
                               ??_LCDrecv 0022                                 ??_LCDsend 0022  
              __end_ofi1_DATAEE_WriteByte 1402                                    _ADACCH 0091  
                                  _ADACCL 0090                                    _ADCON0 0093  
                                  _ADCON1 0094                                    _ADCON2 0095  
                                  _ADCON3 0096                               ?i1_readTC74 0070  
                                  _ADERRH 0117                                    _ADERRL 0116  
                                  ?_fputc 0020                                    _ADLTHH 010F  
                                  _ADLTHL 010E                                    ?_fputs 0028  
                                  _ADRESH 008D                                    _ADRESL 008C  
                                  _ADSTAT 0097                                    _ADUTHH 0111  
                                  _ADUTHL 0110                          __end_of_WriteI2C 179D  
                                  _ANSELA 0F38                                    ?_putch 0070  
                                  _ANSELB 0F43                                    _ANSELC 0F4E  
                                  _ANSELD 0F59                                    _ANSELE 0F64  
                                  _T1GATE 0210                                    _T1GCON 020F  
                 storeEPROMBuild@dataAddr 002E                                    _RA6PPS 0F16  
                                  _RC3PPS 0F23                                    i1l1130 12E1  
                                  i1l1210 123E                   TMR1_WriteTimer@timerVal 0070  
                                  _RC4PPS 0F24                                    i1l1206 11D9  
                                  i1l1216 0002                                    i1l1333 0DAF  
                                  i1l1182 11D3                                    i1l1414 0EA9  
                                  i1l1406 0E98                                    i1l1334 0DB0  
                                  i1l1415 0EAA                                    i1l1407 0E9A  
                                  i1l1176 11D0                                    i1l1185 07FF  
                                  i1l1361 0E11                                    i1l1329 0DA3  
                                  _ODCONA 0F3A                                    i1l1370 0E23  
                                  i1l1362 0E13                                    i1l1450 0C87  
                                  _ODCONB 0F45                                    i1l1179 0803  
                                  i1l1427 17FF                                    i1l1419 0EAF  
                                  i1l1347 0DDF                                    _ODCONC 0F50  
                                  i1l1348 0DE0                                    i1l1460 0C9D  
                                  _ODCOND 0F5B                                    i1l1373 0E27  
                                  _ODCONE 0F66                                    i1l1551 1349  
                                  i1l1455 0C9A                                    i1l1447 0C85  
                                  i1l1544 1285                                    i1l1392 0E66  
                                  i1l1393 0E67                                    i1l1369 0E22  
                                  i1l1554 134C                                    i1l1378 0E36  
                                  i1l1458 0C9C                                    i1l1547 1275  
                                  i1l1379 0E37                                    i1l1556 135B  
                                  i1l5100 0C91                                    i1l1566 11E6  
                                  i1l5030 0BB3                                    i1l5040 0BD7  
                                  i1l5032 0BBB                                    i1l5050 0BFD  
                                  i1l5042 0BE2                                    i1l5034 0BC7  
                                  i1l5060 0C18                                    i1l5052 0BFF  
                                  i1l5044 0BE4                                    i1l5036 0BC9  
                                  i1l5028 0BAC                                    i1l5070 0C40  
                                  i1l5062 0C1E                                    i1l5054 0C05  
                                  i1l5046 0BE9                                    i1l5038 0BD0  
                                  i1l5080 0C5D                                    i1l5064 0C26  
                                  i1l5056 0C0C                                    i1l5048 0BF1  
                                  i1l5072 0C48                                    i1l5400 129B  
                                  i1l4522 11CE                                    i1l5090 0C73  
                                  i1l5082 0C60                                    i1l5074 0C4F  
                                  i1l5066 0C2C                                    i1l5058 0C0D  
                                  i1l5410 12A4                                    i1l5402 129C  
                                  i1l4524 11D1                                    i1l4700 15AD  
                                  i1l5092 0C7A                                    i1l5084 0C63  
                                  i1l5076 0C52                                    i1l5068 0C33  
                                  i1l5412 1225                                    i1l5404 129E  
                                  i1l4550 1276                                    i1l4710 15BE  
                                  i1l4702 15B0                                    i1l5094 0C7C  
                                  i1l5086 0C68                                    i1l5078 0C56  
                                  i1l5414 122C                                    i1l5406 12A0  
                                  i1l4544 12CC                                    i1l4552 127B  
                                  i1l4560 126D                                    i1l4800 17EB  
                                  i1l4712 15C7                                    i1l4720 15D4  
                                  i1l5088 0C6F                                    i1l5096 0C80  
                                  i1l5408 12A2                                    i1l4554 1284  
                                  i1l4546 0800                                    i1l4810 1351  
                                  i1l4562 126F                                    i1l4730 13E4  
                                  i1l4802 17F4                                    i1l4722 15DD  
                                  i1l4714 15D2                                    i1l5098 0C88  
                                  i1l4812 1354                                    i1l4564 1272  
                                  i1l4556 1267                                    i1l4548 07FC  
                                  i1l4740 13F1                                    i1l4732 13EB  
                                  i1l4804 17F9                                    i1l4724 15EA  
                                  i1l4708 15B5                                    i1l5612 11D4  
                                  i1l4806 1343                                    i1l4566 1274  
                                  i1l4558 126C                                    i1l4814 11E0  
                                  i1l4742 13F2                                    i1l4734 13ED  
                                  i1l5454 1232                                    i1l5614 11D6  
                                  i1l4808 134E                                    i1l4816 11E3  
                                  i1l4744 13F4                                    i1l4736 13EF  
                                  i1l4920 0DA3                                    i1l5616 1259  
                                  i1l5456 1239                                    i1l4746 13F6  
                                  i1l4738 13F0                                    i1l4930 0DD3  
                                  i1l4922 0DB4                                    i1l5618 125B  
                                  i1l4780 12A8                                    i1l4748 13FC  
                                  i1l4692 135C                                    i1l4940 0E05  
                                  i1l4932 0DE4                                    i1l4924 0DBF  
                                  i1l5900 001F                                    i1l4790 12B4  
                                  i1l4782 12AB                                    i1l4694 1366  
                                  i1l4950 0E4A                                    i1l4942 0E17  
                                  i1l4934 0DEF                                    i1l4926 0DC3  
                                  i1l5398 1296                                    i1l4784 12AC  
                                  i1l4696 1374                                    i1l4960 0E7A  
                                  i1l4952 0E56                                    i1l4944 0E2B  
                                  i1l4936 0DF3                                    i1l4928 0DCF  
                                  i1l4786 12AD                                    i1l4794 179E  
                                  i1l4962 0E86                                    i1l4954 0E5A  
                                  i1l4946 0E3B                                    i1l4938 0DFF  
                                  i1l4788 12AE                                    i1l4796 17E2  
                                  i1l4964 0E8C                                    i1l4956 0E6B  
                                  i1l4948 0E46                                    i1l4798 17E7  
                                  i1l4966 0E9E                                    i1l4958 0E76  
                                  u311_20 1366                                    i1l4968 0EAE  
                                  u311_21 1365                                    i1l5890 0006  
                                  i1l5892 000A                                    i1l5894 000F  
                                  u312_20 136F                                    u320_20 15E6  
                                  u400_20 0BB3                                    i1l5896 0013  
                                  u312_21 136E                                    u320_21 15E5  
                                  u400_21 0BB2                                    _INLVLA 0F3C  
                                  i1l5898 001B                                    _INLVLB 0F47  
                                  _INLVLC 0F52                                    _INLVLD 0F5D  
                                  _INLVLE 0F68                                    u313_20 1374  
                                  u321_20 15EA                                    u401_20 0BBB  
                                  u313_21 1373                                    u321_21 15E9  
                                  u401_21 0BBA                                    _LCDcmd 11E7  
                                  u322_20 15F5                                    u314_20 15B4  
                                  u410_20 0C85                                    u402_20 0BD7  
                                  u322_21 15F4                                    u314_21 15B3  
                                  u410_21 0C84                                    u402_21 0BD6  
                                  u323_20 13FB                                    u315_20 15BE  
                                  u411_20 0C91                                    u403_20 0BF1  
                                  u323_21 13FA                                    u315_21 15BD  
                                  u411_21 0C90                                    u403_21 0BF0  
                                  u316_20 15C7                                    u412_20 0C9A  
                                  u404_20 0C0C                                    u316_21 15C6  
                                  u412_21 0C99                                    u404_21 0C0B  
                                  u333_20 12B4                                    u317_20 15CD  
                                  u405_20 0C33                                    u333_21 12B3  
                                  u317_21 15CC                                    u405_21 0C32  
                                  u334_20 17F4                                    u318_20 15D2  
                                  u406_20 0C40                                    u510_20 000F  
                                  u334_21 17F3                                    u318_21 15D1  
                                  u406_21 0C3F                                    u510_21 000E  
                                  u406_25 0C3C                                    u335_20 1349  
                                  u319_20 15DD                                    u407_20 0C4F  
                                  u511_20 0013                                    u335_21 1348  
                                  u319_21 15DC                                    u407_21 0C4E  
                                  u511_21 0012                                    u360_20 0DB4  
                                  u408_20 0C5D                                    u512_20 001B  
                                  u360_21 0DB3                                    u408_21 0C5C  
                                  u512_21 001A                                    u361_20 0DBF  
                                  u409_20 0C68                                    u513_20 001F  
                                  u361_21 0DBE                                    u409_21 0C67  
                                  u513_21 001E                                    u370_20 0E27  
                                  u362_20 0DCF                                    u370_21 0E26  
                                  u362_21 0DCE                                    _LCDpos 13AC  
                                  u371_20 0E2B                                    u363_20 0DDF  
                                  u371_21 0E2A                                    u363_21 0DDE  
                                  u380_20 0E98                                    u372_20 0E36  
                                  u364_20 0DE4                                    u380_21 0E97  
                                  u372_21 0E35                                    u364_21 0DE3  
                                  u276_25 12DB                                    _LCDstr 1376  
                                  u381_20 0E9E                                    u373_20 0E3B  
                                  u365_20 0DEF                                    u461_20 1239  
                                  u509_20 000A                                    u381_21 0E9D  
                                  u373_21 0E3A                                    u365_21 0DEE  
                                  u461_21 1238                                    u509_21 0009  
                                  u382_20 0EA9                                    u374_20 0E46  
                                  u366_20 0DFF                                    u382_21 0EA8  
                                  u374_21 0E45                                    u366_21 0DFE  
                                  u383_20 0EAE                                    u375_20 0E56  
                                  u367_20 0E11                                    u359_20 0DAF  
                                  u383_21 0EAD                                    u375_21 0E55  
                                  u367_21 0E10                                    u359_21 0DAE  
                                  u376_20 0E66                                    u368_20 0E17  
                                  u376_21 0E65                                    u368_21 0E16  
                                  u377_20 0E6B                                    u369_20 0E22  
                                  u377_21 0E6A                                    u369_21 0E21  
                                  u378_20 0E76                                    u458_20 129B  
                                  u378_21 0E75                                    u458_21 129A  
                                  u379_20 0E86                                    u459_20 122C  
                                  u379_21 0E85                                    u459_21 122B  
                                  _OSCFRQ 0893                                    u301lld 0B9A  
                           vfpfcnvrt@done 0069                                    u282lld 0CC9  
                                  u291lld 0D91                                    u339lld 061C  
                                  u284lld 0CF6                                    u293lld 0AEA  
                                  u295lld 0B17                                 ??_ReadI2C 0020  
                             LCDsend2x4@c 0025                               LCDrecv@mode 0026  
               __size_of_PWMOutputDisable 000F                                 ??_OpenI2C 0020  
                        _I2C1_DO_TX_EMPTY 0000                           _max_temperature 0165  
    __end_of_TMR1_DefaultInterruptHandler 11CE     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 11CD                              _CCPTMRS1bits 021F  
                            vfprintf@cfmt 00A4                         ??_writeRingBuffer 0075  
                               ??___aodiv 0030                         __end_ofi1_ReadI2C 1376  
                               ??___aomod 0030                                    ___wmul 1421  
                       __end_of_TMR2_Stop 11D4                          __end_of_readTC74 1000  
                     __size_of_TMR2_Start 0003                   __end_of_PWM6_Initialize 1259  
                        __end_of_operADDR 1567                                    pad@buf 0030  
                                  dtoa@fp 0048                   __end_of_DATAEE_ReadByte 1296  
                                  _strlen 1391                           _ADCC_Initialize 12E2  
                   _I2C1_DO_SEND_ADR_READ 0000                                    fputc@c 0020  
                          _PMD_Initialize 11EF                                    fputs@c 002C  
                                  fputs@i 002D                                    fputs@s 002F  
                               ??_isdigit 0022                                 ??_isspace 0022  
                  __size_of_initializeREG 002B             i1DATAEE_WriteByte@GIEBitValue 0073  
       __size_of_ADCC_GetSingleConversion 0012                                    putch@c 0070  
                        __end_of_vfprintf 1530                 ?_ADCC_GetSingleConversion 0070  
                 __end_of_TMR2_StartTimer 0804  TMR2_SetInterruptHandler@InterruptHandler 0020  
TMR1_SetInterruptHandler@InterruptHandler 0020                                 ??_sprintf 00AE  
                 __end_of_TMR1_WriteTimer 12A7                   _I2C1_DO_RX_NACK_RESTART 0000  
                     __size_ofi1_WriteI2C 004B                     __end_of_TMR1_CallBack 1232  
                        ?_TMR1_Initialize 0070                         _SYSTEM_Initialize 1310  
                 __end_of__initialization 0039                     __end_of_TMR2_CallBack 123F  
                      ?_SYSTEM_Initialize 0070                              _data_address 00EC  
                 _rdBlkRegCompleteHandler 0000                            __pcstackCOMMON 0070  
                     ??_SYSTEM_Initialize 0022                  __size_of_storeEPROMBuild 004F  
      parseEPROMInitialization@magic_word 002F                                 ?_TMR1_ISR 0070  
                               ?_TMR2_ISR 0070             ?_TMR1_DefaultInterruptHandler 0070  
                        _DATAEE_WriteByte 0804                      storeEPROMBuild@hours 002D  
                           __end_of_fputc 1697                             __end_of_fputs 14D0  
                     __size_ofi1_readTC74 010D                             __end_of_putch 0004  
                        ?_TMR2_Initialize 0070                    __end_of_PMD_Initialize 11F7  
                               LCDrecv@hc 0024                                 LCDrecv@lc 0025  
                __size_of_PWMOutputEnable 0010                              ??_LCDsend2x4 0023  
                                 ??_fputc 0023                 __end_of_SYSTEM_Initialize 1329  
                                 ??_fputs 0029                                   ??_putch 0020  
                              __pbssBANK1 00D4                                __pbssBANK2 0120  
                  i1DATAEE_WriteByte@bAdd 0070                                   ?_LCDcmd 0070  
                                 ?_LCDpos 0029                                   ?_LCDstr 0029  
                                 LCDcmd@c 0028                                   LCDpos@c 0029  
                                 LCDpos@l 002B                                   LCDpos@p 002C  
                   _rd1RegCompleteHandler 0000                                   LCDstr@c 002E  
                                 LCDstr@p 0029              parseEPROMInitialization@ALAF 002A  
            parseEPROMInitialization@ALAL 0029              parseEPROMInitialization@ALAT 0028  
            parseEPROMInitialization@CLKH 002B              parseEPROMInitialization@CLKM 002C  
            parseEPROMInitialization@TALA 0027              parseEPROMInitialization@NREG 0022  
            parseEPROMInitialization@PMON 0026                         _I2C1_DO_SEND_STOP 0000  
                         _initializeEPROM 08AB                     _wr1RegCompleteHandler 0000  
                           _initializeREG 14D0                                __pmaintext 003D  
                                 ?___wmul 0020                                ??_TMR1_ISR 007C  
                              ??_TMR2_ISR 0070                   __end_of_ADCC_Initialize 12F9  
              __end_of_PWM6_LoadDutyValue 12E2                                __pintentry 0004  
                         _I2C1_Initialize 121B                                   _ADFLTRH 0115  
                                 _ADFLTRL 0114                        __end_of_LCDsend2x4 0ABF  
                                 _ADPREVH 008F                                   _ADPREVL 008E  
                               ?_WriteI2C 0070                          ?_PWM6_Initialize 0070  
                                 _ADSTPTH 0113                                   _ADSTPTL 0112  
                         ?_PMD_Initialize 0070                                   ?_strlen 0020  
                        ?_DATAEE_ReadByte 0020                                   _LCDchar 11F7  
                                 _LCDbusy 12B9                                   _LCDinit 0828  
                                 _LCDrecv 0448                                   _LCDsend 1697  
                                 _OSCCON1 088D                                   _OSCCON3 088F  
                      __size_of_vfpfcnvrt 01A6                                   _NVMADRH 081B  
                                 _NVMADRL 081A                                   _NVMDATH 081D  
                                 _OSCTUNE 0892                                   _NVMDATL 081C  
                                 _NVMCON1 081E                                   _NVMCON2 081F  
                                 _PWM6DCH 038D                                   _PWM6DCL 038C  
                                 _PWM6CON 038E                                   _SSP1ADD 018D  
                                 _SLRCONA 0F3B                                   _SLRCONB 0F46  
                                 _SLRCONC 0F51                                   _SLRCOND 0F5C  
                                 _SLRCONE 0F67                                   _PPSLOCK 0E8F  
                                 _SSP1BUF 018C                              ??_TMR2_Start 0070  
                 __size_of_TMR2_StopTimer 0004                          ?_TMR2_StartTimer 0070  
                        ?_TMR1_WriteTimer 0070                                _magic_word 00EB  
                            LCDsend2x4@hc 0026                              LCDsend2x4@lc 0027  
                  __size_of_deactivatePWM 0007                                 ?_readTC74 0070  
                         __size_of_LCDcmd 0008                      DATAEE_WriteByte@bAdd 0020  
                         __size_of_LCDpos 001C                        _i2c1_fsmStateTable 1800  
                         __size_of_LCDstr 001B                                   _ReadI2C 1402  
                               ?_operADDR 0020                          _PWMOutputDisable 1267  
                                 _OpenI2C 123F                  _parseEPROMInitialization 0743  
                          ?_initializeREG 0070                ??_TMR2_SetInterruptHandler 0022  
                                 ___aodiv 0C9E                              ??i1_WriteI2C 0070  
                                 ___aomod 0ABF                           __size_of___wmul 0020  
                               ?_vfprintf 00A0                        __end_of_TMR2_Start 11D1  
                              ??_WriteI2C 0020                                   __ptext1 15F7  
                                 __ptext2 1530                                   __ptext3 1484  
                                 __ptext4 14FB                                   __ptext5 02A2  
                                 __ptext6 05D3                                   __ptext7 16EA  
                                 __ptext8 1391                                   __ptext9 14A7  
          ??_TMR1_DefaultInterruptHandler 0070                           __size_of_strlen 001B  
                       ??_storeEPROMBuild 002C                                 _T1CONbits 020E  
                                 _counter 0166                     _OSCILLATOR_Initialize 1200  
                               _T2CONbits 028E                              __size_of_abs 001C  
                            __size_of_pad 0059                                   _isdigit 1329  
       __size_of_TMR1_SetInterruptHandler 0009                                   _minutes 007C  
                ??_PIN_MANAGER_Initialize 0020                                   _seconds 00DE  
                                 _isspace 1462                 ?_TMR1_SetInterruptHandler 0020  
                               _T2HLTbits 028F                parseEPROMInitialization@RI 0025  
              parseEPROMInitialization@NR 0023                parseEPROMInitialization@WI 0024  
                                 atoi@neg 002C                              ??i1_readTC74 0072  
                storeEPROMBuild@operation 002B                                   main@buf 00C2  
              __size_of_SYSTEM_Initialize 0019                                   _sprintf 1484  
                                 clrloop0 11DB                      end_of_initialization 0039  
                               _T2RSTbits 0291                                ??_readTC74 0022  
                         _writeRingBuffer 179D                   __end_of_initializeEPROM 0939  
                      __end_ofi1_WriteI2C 15F7                                   fputc@fp 0022  
                       ??_PWMOutputEnable 0070                                   fputs@fp 0028  
                  _I2C1_DO_SEND_ADR_WRITE 0000                                ??_operADDR 0022  
                      i1_DATAEE_WriteByte 13E4                   __end_of_I2C1_Initialize 1225  
                  __size_of_activateAlarm 001A                               _I2C1_Status 0120  
                       __end_of_vfpfcnvrt 0448                       ?i1_DATAEE_WriteByte 0070  
                        ?_ADCC_Initialize 0070                                ??_vfprintf 006E  
        __end_of_ADCC_GetSingleConversion 12B9                 storeEPROMBuild@luminosity 002A  
                           _deactivatePWM 11E0                _I2C1_DO_SEND_RESTART_WRITE 0000  
                                 strlen@a 0023                        __end_ofi1_readTC74 0EB0  
                                 strlen@s 0024                                 i1_ReadI2C 135C  
                               _PORTAbits 000C                                 _PORTBbits 000D  
                               _PORTCbits 000E                                 _TMR2_Stop 11D1  
                 __size_of_timerInterrupt 00F2                                 _TRISCbits 0013  
                     timerInterrupt@value 007A                      ??i1_DATAEE_WriteByte 0073  
                __end_of_DATAEE_WriteByte 0828                             readTC74@value 0023  
                          __end_of_LCDcmd 11EF                            __end_of_LCDpos 13C8  
                         ??_initializeREG 0024                            __end_of_LCDstr 1391  
                          LCDsend2x4@mode 0022      __end_of_TMR2_DefaultInterruptHandler 0003  
   __size_of_TMR2_DefaultInterruptHandler 0001              _TMR2_DefaultInterruptHandler 0002  
                          ?_deactivatePWM 0070                               vfpfcnvrt@ap 005A  
                             vfpfcnvrt@fp 006D                               vfpfcnvrt@ll 0061  
                          __end_of___wmul 1441                            _I2C1_DO_RX_ACK 0000  
                       __size_of_TMR1_ISR 000E                         __size_of_TMR2_ISR 0006  
              storeEPROMBuild@temperature 0029                                ?i1_ReadI2C 0070  
                              ?_TMR2_Stop 0070                    ?_OSCILLATOR_Initialize 0070  
                          __end_of_strlen 13AC                             _activateAlarm 1342  
                     start_initialization 0027                   __end_of_writeRingBuffer 1800  
         __size_of_PIN_MANAGER_Initialize 0045                               __end_of_abs 13E4  
                             __end_of_pad 1743                            _TMR2_StopTimer 07FC  
                        WriteI2C@data_out 0021                                  ??_LCDcmd 0028  
                                ??_LCDpos 002A                                  ??_LCDstr 002B  
                        ?_initializeEPROM 0070                       DATAEE_ReadByte@bAdd 0020  
                        ?_I2C1_Initialize 0070                            _max_luminosity 0167  
                __size_of_TMR1_Initialize 0021                               vfprintf@fmt 00A0  
                        ??_PMD_Initialize 0020                           _min_temperature 00DB  
                                ??___wmul 0024             ?_TMR2_DefaultInterruptHandler 0070  
                  __size_of_TMR1_CallBack 000D                                  ??_strlen 0022  
                       __size_of_WriteI2C 005A                  __end_of_PWMOutputDisable 1276  
                _ADCC_GetSingleConversion 12A7                            ?_activateAlarm 0070  
                 i1DATAEE_WriteByte@bData 0072                    __size_of_TMR2_CallBack 000D  
                  __end_of_TMR2_StopTimer 0800                                  ?_LCDchar 0070  
                             __pbssCOMMON 007C                                  ?_LCDbusy 0027  
                                ?_LCDinit 0070                      _I2C1_DO_SEND_RESTART 0000  
                                ?_LCDrecv 0070                                  ?_LCDsend 0070  
                               ___latbits 0002                             __pcstackBANK0 0020  
                           __pcstackBANK1 00A0                          ___aodiv@dividend 0028  
                      _PWM6_LoadDutyValue 12CC                  __size_of_TMR2_Initialize 0017  
                      activateAlarm@alarm 0074                                  LCDchar@c 0028  
              ??_parseEPROMInitialization 002E                                  LCDsend@c 0023  
                     ?_PWM6_LoadDutyValue 0070                                  ?_ReadI2C 0070  
                               _atoi$3337 002E                                 _atoi$3338 0032  
                               _atoi$3339 0030                         __size_of_readTC74 0150  
                               __pnvBANK1 00EC                                 __pnvBANK2 015F  
                   _rd2RegCompleteHandler 0000                           i1readTC74@value 0073  
                                ?_OpenI2C 0070                    _PIN_MANAGER_Initialize 1567  
                               _dtoa$3302 0046                     _wr2RegCompleteHandler 0000  
                       __size_of_operADDR 0037                           _storeEPROMBuild 15F7  
                         ??_deactivatePWM 0070          __end_of_TMR1_SetInterruptHandler 1212  
         ADCC_GetSingleConversion@channel 0072                                  ?___aodiv 0020  
                                ?___aomod 0020                          ___aodiv@quotient 0033  
                    ??_PWM6_LoadDutyValue 0072              ??_INTERRUPT_InterruptManager 007C  
                             ??i1_ReadI2C 0070                               ??_TMR2_Stop 0070  
                       __size_of_vfprintf 0035                            _timerInterrupt 0BAC  
                                ?_isdigit 0020                           ?_TMR2_StopTimer 0070  
                         _PWMOutputEnable 1276                                  ?_isspace 0020  
                        ?_writeRingBuffer 0074                  __size_of_PWM6_Initialize 000D  
                                ?_sprintf 00A6                            __size_of_fputc 0051  
                                _T2CLKCON 0290                            __size_of_fputs 0029  
                __size_of_DATAEE_ReadByte 0010                            __size_of_putch 0001  
                           _TMR1_CallBack 1225                            ___wmul@product 0024  
                                _LATAbits 0016                                _I2C1_DO_RX 0000  
                              _I2C1_DO_TX 0000                                 clear_ram0 11DA  
                           _TMR2_CallBack 1232                                  _PIE3bits 0719  
                                _PIE4bits 071A                  __size_of_TMR2_StartTimer 0004  
                __size_of_TMR1_WriteTimer 0011       __size_of_INTERRUPT_InterruptManager 0021  
                                _PIR3bits 070F                                  _PIR4bits 0710  
               _I2C1_DO_SEND_RESTART_READ 0000                                  _SSP1CON1 0190  
                                _SSP1CON2 0191                                  _TMR1_ISR 1259  
                                _TMR2_ISR 11D4                                  _SSP1STAT 018F  
                               _vfpfcnvrt 02A2                    __end_of_timerInterrupt 0C9E  
                            _tala_counter 00DC                         ??_TMR1_Initialize 0022  
                         ??_activateAlarm 0074                                _ADCON0bits 0093  
                              _ADCON1bits 0094                                _ADCON2bits 0095  
                              _ADCON3bits 0096                         ___wmul@multiplier 0020  
                      i1WriteI2C@data_out 0071            ??_TMR2_DefaultInterruptHandler 0070  
       __size_of_TMR2_SetInterruptHandler 0009                 writeRingBuffer@luminosity 0074  
               ?_TMR2_SetInterruptHandler 0020                          __size_of_LCDchar 0009  
                   DATAEE_WriteByte@bData 0022                          __size_of_LCDbusy 0013  
                        __size_of_LCDinit 0083                          __size_of_LCDrecv 018B  
                        __size_of_LCDsend 0053                              _isspace$3355 0024  
                           _I2C1_DO_RESET 0000                            ?_TMR1_CallBack 0070  
                       ?_DATAEE_WriteByte 0020                   __end_of_storeEPROMBuild 1646  
                       ??_TMR2_Initialize 0022                            ?_TMR2_CallBack 0070  
                      ??_DATAEE_WriteByte 0023                          __size_of_ReadI2C 001F  
                              _ADSTATbits 0097                          __size_of_OpenI2C 000D  
                              vfprintf@ap 00A2                                vfprintf@fp 00A3  
                          _min_luminosity 00DD                   ??_OSCILLATOR_Initialize 0020  
                        __size_of___aodiv 0105                          __size_of___aomod 00ED  
                 __end_of_PWMOutputEnable 1286                                ?_vfpfcnvrt 0059  
                                _WriteI2C 1743                           ?_timerInterrupt 0070  
                         ___aodiv@divisor 0020                  _TMR1_SetInterruptHandler 1209  
                         ___aodiv@counter 0031                     _TMR1_InterruptHandler 0161  
                              sprintf@fmt 00A6                  __size_of_ADCC_Initialize 0017  
                                _checksum 00DF                          __size_of_isdigit 0019  
                        __size_of_isspace 0022                                  __ptext10 1646  
                                __ptext11 0003                                  __ptext20 0743  
                                __ptext12 13C8                                  __ptext21 1286  
                                __ptext13 0ABF                                _T1GCONbits 020F  
                                __ptext30 124C                                  __ptext22 14D0  
                                __ptext14 0C9E                                  __ptext31 11EF  
                                __ptext23 08AB                                  __ptext15 0939  
                                __ptext40 11E7                                  __ptext32 1567  
                                __ptext24 0804                                  __ptext16 1462  
                                __ptext41 0828                                  __ptext33 1200  
                                __ptext25 1310                                  __ptext17 1329  
                                __ptext50 1232                                  __ptext42 09E8  
                                __ptext34 121B                                  __ptext26 12F9  
                                __ptext18 1421                                  __ptext51 0002  
                                __ptext43 1697                                  __ptext35 12E2  
                                __ptext27 1212                                  __ptext19 0EB0  
                                __ptext60 179D                                  __ptext52 1259  
                                __ptext44 12B9                                  __ptext36 123F  
                                __ptext28 1441                                  __ptext61 13E4  
                                __ptext53 1296                                  __ptext45 0448  
                                __ptext37 1376                                  __ptext29 1209  
                                __ptext70 12CC                                  __ptext62 11E0  
                                __ptext54 1225                                  __ptext46 1743  
                                __ptext38 11F7                                  __ptext71 12A7  
                                __ptext63 07FC                                  __ptext55 11CD  
                                __ptext47 1402                                  __ptext39 13AC  
                                __ptext64 11D1                                  __ptext56 0BAC  
                                __ptext65 1267                                  __ptext57 0DA3  
                                __ptext49 11D4                                  __ptext66 1342  
                                __ptext58 15AC                                  __ptext67 0800  
                                __ptext59 135C                                  __ptext68 11CE  
                                __ptext69 1276          __end_of_parseEPROMInitialization 07FC  
                            _SSP1CON1bits 0190                              _SSP1CON2bits 0191  
             __size_ofi1_DATAEE_WriteByte 001E                          __size_of_sprintf 0023  
             DATAEE_WriteByte@GIEBitValue 0023                                  _readTC74 0EB0  
                _I2C1_CallbackReturnReset 0000                         ??_PWM6_Initialize 0020  
                           __size_of_atoi 00AF                             __size_of_main 0265  
                           __size_of_dtoa 0170                                  _operADDR 1530  
                       ??_DATAEE_ReadByte 0022                     __end_of_initializeREG 14FB  
              ??_ADCC_GetSingleConversion 0072                                  int$flags 007E  
               timerInterrupt@temperature 0079                                  _vfprintf 14FB  
                       ??_TMR2_StartTimer 0070        __end_of_INTERRUPT_InterruptManager 0025  
              _INTERRUPT_InterruptManager 0004                              _SSP1STATbits 018F  
                       ??_TMR1_WriteTimer 0072                              _I2C1_DO_IDLE 0000  
                            _I2C1_DO_RCEN 0000                          ___aomod@dividend 0028  
                          _vfpfcnvrt$3317 006B                                _INTCONbits 000B  
                       ?_PWMOutputDisable 0070                               _NVMCON1bits 081E  
                          __pstringtext10 0000                                  isdigit@c 0020  
                      ??_PWMOutputDisable 0070                           ??_TMR1_CallBack 007C  
                              _LCDsend2x4 09E8          parseEPROMInitialization@checksum 002D  
                                intlevel1 0000                                 sprintf@ap 00AF  
                         ??_TMR2_CallBack 0070                                  isspace@c 0020  
                        ?_storeEPROMBuild 0027                   ?_PIN_MANAGER_Initialize 0070  
                             _PPSLOCKbits 0E8F                   _I2C1_CallbackReturnStop 0000  
                    _I2C1_DO_ADDRESS_NACK 0000                  __size_of_initializeEPROM 008E  
                         ___aomod@divisor 0020                               ??_vfpfcnvrt 005B  
                        ??_TMR2_StopTimer 0070                           ___aomod@counter 0031  
                        ?_PWMOutputEnable 0070                  __size_of_I2C1_Initialize 000A  
                           __pstringtext1 1800                             __pstringtext2 1820  
                           __pstringtext3 1835                             __pstringtext4 1849  
                           __pstringtext5 1858                             __pstringtext6 1867  
                           __pstringtext7 1876                             __pstringtext8 1883  
                           __pstringtext9 188A                                  sprintf@f 00B1  
                                sprintf@s 00B0                          operADDR@dataAddr 0025  
                              _SSP1DATPPS 0EC6                                _SSP1CLKPPS 0EC5  
             PWM6_LoadDutyValue@dutyValue 0070                                _TMR2_Start 11CE  
                            ___aodiv@sign 0032            __end_of_PIN_MANAGER_Initialize 15AC  
                       ??_ADCC_Initialize 0020                     _TMR2_InterruptHandler 015F  
                            ___aomod@sign 0032                           _TMR1_Initialize 1441  
                       operADDR@operation 0024  
