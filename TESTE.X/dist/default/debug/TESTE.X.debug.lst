

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Dec 28 17:07:15 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    30                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    33                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text16,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	text41,local,class=CODE,merge=1,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	intentry,global,class=CODE,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	text48,local,class=CODE,merge=1,delta=2
    67                           	psect	text49,local,class=CODE,merge=1,delta=2
    68                           	psect	text50,local,class=CODE,merge=1,delta=2
    69                           	psect	text51,local,class=CODE,merge=1,delta=2
    70                           	psect	text52,local,class=CODE,merge=1,delta=2
    71                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    72                           	dabs	1,0x7E,2
    73  0000                     
    74                           ; Version 2.35
    75                           ; Generated 13/04/2021 GMT
    76                           ; 
    77                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution. Publication is not required when
    91                           ;        this file is used in an embedded application.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC16F18875 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001C                     	;# 
   137  001C                     	;# 
   138  001D                     	;# 
   139  001D                     	;# 
   140  001E                     	;# 
   141  001F                     	;# 
   142  008C                     	;# 
   143  008C                     	;# 
   144  008D                     	;# 
   145  008E                     	;# 
   146  008E                     	;# 
   147  008F                     	;# 
   148  0090                     	;# 
   149  0090                     	;# 
   150  0091                     	;# 
   151  0093                     	;# 
   152  0094                     	;# 
   153  0095                     	;# 
   154  0096                     	;# 
   155  0097                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009A                     	;# 
   159  009B                     	;# 
   160  009C                     	;# 
   161  009D                     	;# 
   162  009E                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010E                     	;# 
   167  010F                     	;# 
   168  0110                     	;# 
   169  0110                     	;# 
   170  0111                     	;# 
   171  0112                     	;# 
   172  0112                     	;# 
   173  0113                     	;# 
   174  0114                     	;# 
   175  0114                     	;# 
   176  0115                     	;# 
   177  0116                     	;# 
   178  0116                     	;# 
   179  0117                     	;# 
   180  0119                     	;# 
   181  0119                     	;# 
   182  0119                     	;# 
   183  011A                     	;# 
   184  011A                     	;# 
   185  011A                     	;# 
   186  011B                     	;# 
   187  011B                     	;# 
   188  011B                     	;# 
   189  011B                     	;# 
   190  011B                     	;# 
   191  011C                     	;# 
   192  011C                     	;# 
   193  011C                     	;# 
   194  011D                     	;# 
   195  011D                     	;# 
   196  011D                     	;# 
   197  011E                     	;# 
   198  011E                     	;# 
   199  011E                     	;# 
   200  011F                     	;# 
   201  011F                     	;# 
   202  011F                     	;# 
   203  011F                     	;# 
   204  011F                     	;# 
   205  018C                     	;# 
   206  018D                     	;# 
   207  018E                     	;# 
   208  018F                     	;# 
   209  0190                     	;# 
   210  0191                     	;# 
   211  0192                     	;# 
   212  0196                     	;# 
   213  0197                     	;# 
   214  0198                     	;# 
   215  0199                     	;# 
   216  019A                     	;# 
   217  019B                     	;# 
   218  019C                     	;# 
   219  020C                     	;# 
   220  020C                     	;# 
   221  020D                     	;# 
   222  020E                     	;# 
   223  020F                     	;# 
   224  020F                     	;# 
   225  0210                     	;# 
   226  0210                     	;# 
   227  0211                     	;# 
   228  0211                     	;# 
   229  0212                     	;# 
   230  0212                     	;# 
   231  0213                     	;# 
   232  0214                     	;# 
   233  0215                     	;# 
   234  0215                     	;# 
   235  0216                     	;# 
   236  0216                     	;# 
   237  0217                     	;# 
   238  0217                     	;# 
   239  0218                     	;# 
   240  0218                     	;# 
   241  0219                     	;# 
   242  021A                     	;# 
   243  021B                     	;# 
   244  021B                     	;# 
   245  021C                     	;# 
   246  021C                     	;# 
   247  021D                     	;# 
   248  021D                     	;# 
   249  021E                     	;# 
   250  021F                     	;# 
   251  028C                     	;# 
   252  028C                     	;# 
   253  028D                     	;# 
   254  028D                     	;# 
   255  028E                     	;# 
   256  028F                     	;# 
   257  0290                     	;# 
   258  0290                     	;# 
   259  0291                     	;# 
   260  0292                     	;# 
   261  0292                     	;# 
   262  0293                     	;# 
   263  0293                     	;# 
   264  0294                     	;# 
   265  0295                     	;# 
   266  0296                     	;# 
   267  0296                     	;# 
   268  0297                     	;# 
   269  0298                     	;# 
   270  0298                     	;# 
   271  0299                     	;# 
   272  0299                     	;# 
   273  029A                     	;# 
   274  029B                     	;# 
   275  029C                     	;# 
   276  029C                     	;# 
   277  029D                     	;# 
   278  030C                     	;# 
   279  030C                     	;# 
   280  030D                     	;# 
   281  030E                     	;# 
   282  030F                     	;# 
   283  0310                     	;# 
   284  0310                     	;# 
   285  0311                     	;# 
   286  0312                     	;# 
   287  0313                     	;# 
   288  0314                     	;# 
   289  0314                     	;# 
   290  0315                     	;# 
   291  0316                     	;# 
   292  0317                     	;# 
   293  0318                     	;# 
   294  0318                     	;# 
   295  0319                     	;# 
   296  031A                     	;# 
   297  031B                     	;# 
   298  031C                     	;# 
   299  031C                     	;# 
   300  031D                     	;# 
   301  031E                     	;# 
   302  031F                     	;# 
   303  038C                     	;# 
   304  038C                     	;# 
   305  038D                     	;# 
   306  038E                     	;# 
   307  0390                     	;# 
   308  0390                     	;# 
   309  0391                     	;# 
   310  0392                     	;# 
   311  040C                     	;# 
   312  040D                     	;# 
   313  040E                     	;# 
   314  040F                     	;# 
   315  0410                     	;# 
   316  0411                     	;# 
   317  0416                     	;# 
   318  0416                     	;# 
   319  0417                     	;# 
   320  0418                     	;# 
   321  0418                     	;# 
   322  0419                     	;# 
   323  041A                     	;# 
   324  041A                     	;# 
   325  041B                     	;# 
   326  041C                     	;# 
   327  041C                     	;# 
   328  041D                     	;# 
   329  041E                     	;# 
   330  041F                     	;# 
   331  048C                     	;# 
   332  048C                     	;# 
   333  048D                     	;# 
   334  048E                     	;# 
   335  048F                     	;# 
   336  048F                     	;# 
   337  0490                     	;# 
   338  0491                     	;# 
   339  0492                     	;# 
   340  0492                     	;# 
   341  0493                     	;# 
   342  0494                     	;# 
   343  0495                     	;# 
   344  0495                     	;# 
   345  0496                     	;# 
   346  0497                     	;# 
   347  0498                     	;# 
   348  0499                     	;# 
   349  049A                     	;# 
   350  049B                     	;# 
   351  049C                     	;# 
   352  049D                     	;# 
   353  050C                     	;# 
   354  050C                     	;# 
   355  050D                     	;# 
   356  050E                     	;# 
   357  050F                     	;# 
   358  050F                     	;# 
   359  0510                     	;# 
   360  0511                     	;# 
   361  0512                     	;# 
   362  0512                     	;# 
   363  0513                     	;# 
   364  0514                     	;# 
   365  0515                     	;# 
   366  0515                     	;# 
   367  0516                     	;# 
   368  0517                     	;# 
   369  0518                     	;# 
   370  0519                     	;# 
   371  051A                     	;# 
   372  051B                     	;# 
   373  051C                     	;# 
   374  051D                     	;# 
   375  058C                     	;# 
   376  058C                     	;# 
   377  058D                     	;# 
   378  058E                     	;# 
   379  058F                     	;# 
   380  058F                     	;# 
   381  0590                     	;# 
   382  0591                     	;# 
   383  0592                     	;# 
   384  0593                     	;# 
   385  060C                     	;# 
   386  060D                     	;# 
   387  060E                     	;# 
   388  060F                     	;# 
   389  0610                     	;# 
   390  0611                     	;# 
   391  0612                     	;# 
   392  0613                     	;# 
   393  0614                     	;# 
   394  0616                     	;# 
   395  0617                     	;# 
   396  0618                     	;# 
   397  0619                     	;# 
   398  061A                     	;# 
   399  061B                     	;# 
   400  061C                     	;# 
   401  061D                     	;# 
   402  061E                     	;# 
   403  068C                     	;# 
   404  068D                     	;# 
   405  068E                     	;# 
   406  068F                     	;# 
   407  0690                     	;# 
   408  0691                     	;# 
   409  0692                     	;# 
   410  0693                     	;# 
   411  0694                     	;# 
   412  070C                     	;# 
   413  070D                     	;# 
   414  070E                     	;# 
   415  070F                     	;# 
   416  0710                     	;# 
   417  0711                     	;# 
   418  0712                     	;# 
   419  0713                     	;# 
   420  0714                     	;# 
   421  0716                     	;# 
   422  0717                     	;# 
   423  0718                     	;# 
   424  0719                     	;# 
   425  071A                     	;# 
   426  071B                     	;# 
   427  071C                     	;# 
   428  071D                     	;# 
   429  071E                     	;# 
   430  0796                     	;# 
   431  0797                     	;# 
   432  0798                     	;# 
   433  0799                     	;# 
   434  079A                     	;# 
   435  079B                     	;# 
   436  080C                     	;# 
   437  080D                     	;# 
   438  080E                     	;# 
   439  080F                     	;# 
   440  0810                     	;# 
   441  0811                     	;# 
   442  0812                     	;# 
   443  0813                     	;# 
   444  0814                     	;# 
   445  081A                     	;# 
   446  081B                     	;# 
   447  081C                     	;# 
   448  081D                     	;# 
   449  081E                     	;# 
   450  081F                     	;# 
   451  088C                     	;# 
   452  088D                     	;# 
   453  088E                     	;# 
   454  088F                     	;# 
   455  0890                     	;# 
   456  0891                     	;# 
   457  0892                     	;# 
   458  0893                     	;# 
   459  0895                     	;# 
   460  0896                     	;# 
   461  0897                     	;# 
   462  0898                     	;# 
   463  0899                     	;# 
   464  089A                     	;# 
   465  089B                     	;# 
   466  090C                     	;# 
   467  090E                     	;# 
   468  090F                     	;# 
   469  091F                     	;# 
   470  091F                     	;# 
   471  098F                     	;# 
   472  098F                     	;# 
   473  0990                     	;# 
   474  0991                     	;# 
   475  0992                     	;# 
   476  0993                     	;# 
   477  0994                     	;# 
   478  0995                     	;# 
   479  0996                     	;# 
   480  0997                     	;# 
   481  0E0F                     	;# 
   482  0E10                     	;# 
   483  0E11                     	;# 
   484  0E12                     	;# 
   485  0E13                     	;# 
   486  0E14                     	;# 
   487  0E15                     	;# 
   488  0E16                     	;# 
   489  0E17                     	;# 
   490  0E18                     	;# 
   491  0E19                     	;# 
   492  0E1A                     	;# 
   493  0E1B                     	;# 
   494  0E1C                     	;# 
   495  0E1D                     	;# 
   496  0E1E                     	;# 
   497  0E1F                     	;# 
   498  0E20                     	;# 
   499  0E21                     	;# 
   500  0E22                     	;# 
   501  0E23                     	;# 
   502  0E24                     	;# 
   503  0E25                     	;# 
   504  0E26                     	;# 
   505  0E27                     	;# 
   506  0E28                     	;# 
   507  0E29                     	;# 
   508  0E2A                     	;# 
   509  0E2B                     	;# 
   510  0E2C                     	;# 
   511  0E2D                     	;# 
   512  0E2E                     	;# 
   513  0E2F                     	;# 
   514  0E30                     	;# 
   515  0E31                     	;# 
   516  0E32                     	;# 
   517  0E33                     	;# 
   518  0E34                     	;# 
   519  0E35                     	;# 
   520  0E36                     	;# 
   521  0E37                     	;# 
   522  0E8F                     	;# 
   523  0E90                     	;# 
   524  0E91                     	;# 
   525  0E92                     	;# 
   526  0E93                     	;# 
   527  0E94                     	;# 
   528  0E95                     	;# 
   529  0E96                     	;# 
   530  0E97                     	;# 
   531  0E9C                     	;# 
   532  0E9D                     	;# 
   533  0E9E                     	;# 
   534  0EA1                     	;# 
   535  0EA2                     	;# 
   536  0EA3                     	;# 
   537  0EA4                     	;# 
   538  0EA5                     	;# 
   539  0EA9                     	;# 
   540  0EAA                     	;# 
   541  0EAB                     	;# 
   542  0EAC                     	;# 
   543  0EB1                     	;# 
   544  0EB2                     	;# 
   545  0EB3                     	;# 
   546  0EB8                     	;# 
   547  0EB9                     	;# 
   548  0EBA                     	;# 
   549  0EBB                     	;# 
   550  0EBC                     	;# 
   551  0EBD                     	;# 
   552  0EBE                     	;# 
   553  0EC3                     	;# 
   554  0EC5                     	;# 
   555  0EC6                     	;# 
   556  0EC7                     	;# 
   557  0EC8                     	;# 
   558  0EC9                     	;# 
   559  0ECA                     	;# 
   560  0ECB                     	;# 
   561  0ECC                     	;# 
   562  0F10                     	;# 
   563  0F11                     	;# 
   564  0F12                     	;# 
   565  0F13                     	;# 
   566  0F14                     	;# 
   567  0F15                     	;# 
   568  0F16                     	;# 
   569  0F17                     	;# 
   570  0F18                     	;# 
   571  0F19                     	;# 
   572  0F1A                     	;# 
   573  0F1B                     	;# 
   574  0F1C                     	;# 
   575  0F1D                     	;# 
   576  0F1E                     	;# 
   577  0F1F                     	;# 
   578  0F20                     	;# 
   579  0F21                     	;# 
   580  0F22                     	;# 
   581  0F23                     	;# 
   582  0F24                     	;# 
   583  0F25                     	;# 
   584  0F26                     	;# 
   585  0F27                     	;# 
   586  0F28                     	;# 
   587  0F29                     	;# 
   588  0F2A                     	;# 
   589  0F2B                     	;# 
   590  0F2C                     	;# 
   591  0F2D                     	;# 
   592  0F2E                     	;# 
   593  0F2F                     	;# 
   594  0F30                     	;# 
   595  0F31                     	;# 
   596  0F32                     	;# 
   597  0F38                     	;# 
   598  0F39                     	;# 
   599  0F3A                     	;# 
   600  0F3B                     	;# 
   601  0F3C                     	;# 
   602  0F3D                     	;# 
   603  0F3E                     	;# 
   604  0F3F                     	;# 
   605  0F40                     	;# 
   606  0F41                     	;# 
   607  0F43                     	;# 
   608  0F44                     	;# 
   609  0F45                     	;# 
   610  0F46                     	;# 
   611  0F47                     	;# 
   612  0F48                     	;# 
   613  0F49                     	;# 
   614  0F4A                     	;# 
   615  0F4B                     	;# 
   616  0F4C                     	;# 
   617  0F4E                     	;# 
   618  0F4F                     	;# 
   619  0F50                     	;# 
   620  0F51                     	;# 
   621  0F52                     	;# 
   622  0F53                     	;# 
   623  0F54                     	;# 
   624  0F55                     	;# 
   625  0F56                     	;# 
   626  0F57                     	;# 
   627  0F59                     	;# 
   628  0F5A                     	;# 
   629  0F5B                     	;# 
   630  0F5C                     	;# 
   631  0F5D                     	;# 
   632  0F61                     	;# 
   633  0F62                     	;# 
   634  0F64                     	;# 
   635  0F65                     	;# 
   636  0F66                     	;# 
   637  0F67                     	;# 
   638  0F68                     	;# 
   639  0F69                     	;# 
   640  0F6A                     	;# 
   641  0F6B                     	;# 
   642  0F6C                     	;# 
   643  0F6D                     	;# 
   644  0FE4                     	;# 
   645  0FE5                     	;# 
   646  0FE6                     	;# 
   647  0FE7                     	;# 
   648  0FE8                     	;# 
   649  0FE9                     	;# 
   650  0FEA                     	;# 
   651  0FEB                     	;# 
   652  0FED                     	;# 
   653  0FEE                     	;# 
   654  0FEF                     	;# 
   655  0000                     	;# 
   656  0001                     	;# 
   657  0002                     	;# 
   658  0003                     	;# 
   659  0004                     	;# 
   660  0005                     	;# 
   661  0006                     	;# 
   662  0007                     	;# 
   663  0008                     	;# 
   664  0009                     	;# 
   665  000A                     	;# 
   666  000B                     	;# 
   667  000C                     	;# 
   668  000D                     	;# 
   669  000E                     	;# 
   670  000F                     	;# 
   671  0010                     	;# 
   672  0011                     	;# 
   673  0012                     	;# 
   674  0013                     	;# 
   675  0014                     	;# 
   676  0015                     	;# 
   677  0016                     	;# 
   678  0017                     	;# 
   679  0018                     	;# 
   680  0019                     	;# 
   681  001A                     	;# 
   682  001C                     	;# 
   683  001C                     	;# 
   684  001D                     	;# 
   685  001D                     	;# 
   686  001E                     	;# 
   687  001F                     	;# 
   688  008C                     	;# 
   689  008C                     	;# 
   690  008D                     	;# 
   691  008E                     	;# 
   692  008E                     	;# 
   693  008F                     	;# 
   694  0090                     	;# 
   695  0090                     	;# 
   696  0091                     	;# 
   697  0093                     	;# 
   698  0094                     	;# 
   699  0095                     	;# 
   700  0096                     	;# 
   701  0097                     	;# 
   702  0098                     	;# 
   703  0099                     	;# 
   704  009A                     	;# 
   705  009B                     	;# 
   706  009C                     	;# 
   707  009D                     	;# 
   708  009E                     	;# 
   709  010C                     	;# 
   710  010D                     	;# 
   711  010E                     	;# 
   712  010E                     	;# 
   713  010F                     	;# 
   714  0110                     	;# 
   715  0110                     	;# 
   716  0111                     	;# 
   717  0112                     	;# 
   718  0112                     	;# 
   719  0113                     	;# 
   720  0114                     	;# 
   721  0114                     	;# 
   722  0115                     	;# 
   723  0116                     	;# 
   724  0116                     	;# 
   725  0117                     	;# 
   726  0119                     	;# 
   727  0119                     	;# 
   728  0119                     	;# 
   729  011A                     	;# 
   730  011A                     	;# 
   731  011A                     	;# 
   732  011B                     	;# 
   733  011B                     	;# 
   734  011B                     	;# 
   735  011B                     	;# 
   736  011B                     	;# 
   737  011C                     	;# 
   738  011C                     	;# 
   739  011C                     	;# 
   740  011D                     	;# 
   741  011D                     	;# 
   742  011D                     	;# 
   743  011E                     	;# 
   744  011E                     	;# 
   745  011E                     	;# 
   746  011F                     	;# 
   747  011F                     	;# 
   748  011F                     	;# 
   749  011F                     	;# 
   750  011F                     	;# 
   751  018C                     	;# 
   752  018D                     	;# 
   753  018E                     	;# 
   754  018F                     	;# 
   755  0190                     	;# 
   756  0191                     	;# 
   757  0192                     	;# 
   758  0196                     	;# 
   759  0197                     	;# 
   760  0198                     	;# 
   761  0199                     	;# 
   762  019A                     	;# 
   763  019B                     	;# 
   764  019C                     	;# 
   765  020C                     	;# 
   766  020C                     	;# 
   767  020D                     	;# 
   768  020E                     	;# 
   769  020F                     	;# 
   770  020F                     	;# 
   771  0210                     	;# 
   772  0210                     	;# 
   773  0211                     	;# 
   774  0211                     	;# 
   775  0212                     	;# 
   776  0212                     	;# 
   777  0213                     	;# 
   778  0214                     	;# 
   779  0215                     	;# 
   780  0215                     	;# 
   781  0216                     	;# 
   782  0216                     	;# 
   783  0217                     	;# 
   784  0217                     	;# 
   785  0218                     	;# 
   786  0218                     	;# 
   787  0219                     	;# 
   788  021A                     	;# 
   789  021B                     	;# 
   790  021B                     	;# 
   791  021C                     	;# 
   792  021C                     	;# 
   793  021D                     	;# 
   794  021D                     	;# 
   795  021E                     	;# 
   796  021F                     	;# 
   797  028C                     	;# 
   798  028C                     	;# 
   799  028D                     	;# 
   800  028D                     	;# 
   801  028E                     	;# 
   802  028F                     	;# 
   803  0290                     	;# 
   804  0290                     	;# 
   805  0291                     	;# 
   806  0292                     	;# 
   807  0292                     	;# 
   808  0293                     	;# 
   809  0293                     	;# 
   810  0294                     	;# 
   811  0295                     	;# 
   812  0296                     	;# 
   813  0296                     	;# 
   814  0297                     	;# 
   815  0298                     	;# 
   816  0298                     	;# 
   817  0299                     	;# 
   818  0299                     	;# 
   819  029A                     	;# 
   820  029B                     	;# 
   821  029C                     	;# 
   822  029C                     	;# 
   823  029D                     	;# 
   824  030C                     	;# 
   825  030C                     	;# 
   826  030D                     	;# 
   827  030E                     	;# 
   828  030F                     	;# 
   829  0310                     	;# 
   830  0310                     	;# 
   831  0311                     	;# 
   832  0312                     	;# 
   833  0313                     	;# 
   834  0314                     	;# 
   835  0314                     	;# 
   836  0315                     	;# 
   837  0316                     	;# 
   838  0317                     	;# 
   839  0318                     	;# 
   840  0318                     	;# 
   841  0319                     	;# 
   842  031A                     	;# 
   843  031B                     	;# 
   844  031C                     	;# 
   845  031C                     	;# 
   846  031D                     	;# 
   847  031E                     	;# 
   848  031F                     	;# 
   849  038C                     	;# 
   850  038C                     	;# 
   851  038D                     	;# 
   852  038E                     	;# 
   853  0390                     	;# 
   854  0390                     	;# 
   855  0391                     	;# 
   856  0392                     	;# 
   857  040C                     	;# 
   858  040D                     	;# 
   859  040E                     	;# 
   860  040F                     	;# 
   861  0410                     	;# 
   862  0411                     	;# 
   863  0416                     	;# 
   864  0416                     	;# 
   865  0417                     	;# 
   866  0418                     	;# 
   867  0418                     	;# 
   868  0419                     	;# 
   869  041A                     	;# 
   870  041A                     	;# 
   871  041B                     	;# 
   872  041C                     	;# 
   873  041C                     	;# 
   874  041D                     	;# 
   875  041E                     	;# 
   876  041F                     	;# 
   877  048C                     	;# 
   878  048C                     	;# 
   879  048D                     	;# 
   880  048E                     	;# 
   881  048F                     	;# 
   882  048F                     	;# 
   883  0490                     	;# 
   884  0491                     	;# 
   885  0492                     	;# 
   886  0492                     	;# 
   887  0493                     	;# 
   888  0494                     	;# 
   889  0495                     	;# 
   890  0495                     	;# 
   891  0496                     	;# 
   892  0497                     	;# 
   893  0498                     	;# 
   894  0499                     	;# 
   895  049A                     	;# 
   896  049B                     	;# 
   897  049C                     	;# 
   898  049D                     	;# 
   899  050C                     	;# 
   900  050C                     	;# 
   901  050D                     	;# 
   902  050E                     	;# 
   903  050F                     	;# 
   904  050F                     	;# 
   905  0510                     	;# 
   906  0511                     	;# 
   907  0512                     	;# 
   908  0512                     	;# 
   909  0513                     	;# 
   910  0514                     	;# 
   911  0515                     	;# 
   912  0515                     	;# 
   913  0516                     	;# 
   914  0517                     	;# 
   915  0518                     	;# 
   916  0519                     	;# 
   917  051A                     	;# 
   918  051B                     	;# 
   919  051C                     	;# 
   920  051D                     	;# 
   921  058C                     	;# 
   922  058C                     	;# 
   923  058D                     	;# 
   924  058E                     	;# 
   925  058F                     	;# 
   926  058F                     	;# 
   927  0590                     	;# 
   928  0591                     	;# 
   929  0592                     	;# 
   930  0593                     	;# 
   931  060C                     	;# 
   932  060D                     	;# 
   933  060E                     	;# 
   934  060F                     	;# 
   935  0610                     	;# 
   936  0611                     	;# 
   937  0612                     	;# 
   938  0613                     	;# 
   939  0614                     	;# 
   940  0616                     	;# 
   941  0617                     	;# 
   942  0618                     	;# 
   943  0619                     	;# 
   944  061A                     	;# 
   945  061B                     	;# 
   946  061C                     	;# 
   947  061D                     	;# 
   948  061E                     	;# 
   949  068C                     	;# 
   950  068D                     	;# 
   951  068E                     	;# 
   952  068F                     	;# 
   953  0690                     	;# 
   954  0691                     	;# 
   955  0692                     	;# 
   956  0693                     	;# 
   957  0694                     	;# 
   958  070C                     	;# 
   959  070D                     	;# 
   960  070E                     	;# 
   961  070F                     	;# 
   962  0710                     	;# 
   963  0711                     	;# 
   964  0712                     	;# 
   965  0713                     	;# 
   966  0714                     	;# 
   967  0716                     	;# 
   968  0717                     	;# 
   969  0718                     	;# 
   970  0719                     	;# 
   971  071A                     	;# 
   972  071B                     	;# 
   973  071C                     	;# 
   974  071D                     	;# 
   975  071E                     	;# 
   976  0796                     	;# 
   977  0797                     	;# 
   978  0798                     	;# 
   979  0799                     	;# 
   980  079A                     	;# 
   981  079B                     	;# 
   982  080C                     	;# 
   983  080D                     	;# 
   984  080E                     	;# 
   985  080F                     	;# 
   986  0810                     	;# 
   987  0811                     	;# 
   988  0812                     	;# 
   989  0813                     	;# 
   990  0814                     	;# 
   991  081A                     	;# 
   992  081B                     	;# 
   993  081C                     	;# 
   994  081D                     	;# 
   995  081E                     	;# 
   996  081F                     	;# 
   997  088C                     	;# 
   998  088D                     	;# 
   999  088E                     	;# 
  1000  088F                     	;# 
  1001  0890                     	;# 
  1002  0891                     	;# 
  1003  0892                     	;# 
  1004  0893                     	;# 
  1005  0895                     	;# 
  1006  0896                     	;# 
  1007  0897                     	;# 
  1008  0898                     	;# 
  1009  0899                     	;# 
  1010  089A                     	;# 
  1011  089B                     	;# 
  1012  090C                     	;# 
  1013  090E                     	;# 
  1014  090F                     	;# 
  1015  091F                     	;# 
  1016  091F                     	;# 
  1017  098F                     	;# 
  1018  098F                     	;# 
  1019  0990                     	;# 
  1020  0991                     	;# 
  1021  0992                     	;# 
  1022  0993                     	;# 
  1023  0994                     	;# 
  1024  0995                     	;# 
  1025  0996                     	;# 
  1026  0997                     	;# 
  1027  0E0F                     	;# 
  1028  0E10                     	;# 
  1029  0E11                     	;# 
  1030  0E12                     	;# 
  1031  0E13                     	;# 
  1032  0E14                     	;# 
  1033  0E15                     	;# 
  1034  0E16                     	;# 
  1035  0E17                     	;# 
  1036  0E18                     	;# 
  1037  0E19                     	;# 
  1038  0E1A                     	;# 
  1039  0E1B                     	;# 
  1040  0E1C                     	;# 
  1041  0E1D                     	;# 
  1042  0E1E                     	;# 
  1043  0E1F                     	;# 
  1044  0E20                     	;# 
  1045  0E21                     	;# 
  1046  0E22                     	;# 
  1047  0E23                     	;# 
  1048  0E24                     	;# 
  1049  0E25                     	;# 
  1050  0E26                     	;# 
  1051  0E27                     	;# 
  1052  0E28                     	;# 
  1053  0E29                     	;# 
  1054  0E2A                     	;# 
  1055  0E2B                     	;# 
  1056  0E2C                     	;# 
  1057  0E2D                     	;# 
  1058  0E2E                     	;# 
  1059  0E2F                     	;# 
  1060  0E30                     	;# 
  1061  0E31                     	;# 
  1062  0E32                     	;# 
  1063  0E33                     	;# 
  1064  0E34                     	;# 
  1065  0E35                     	;# 
  1066  0E36                     	;# 
  1067  0E37                     	;# 
  1068  0E8F                     	;# 
  1069  0E90                     	;# 
  1070  0E91                     	;# 
  1071  0E92                     	;# 
  1072  0E93                     	;# 
  1073  0E94                     	;# 
  1074  0E95                     	;# 
  1075  0E96                     	;# 
  1076  0E97                     	;# 
  1077  0E9C                     	;# 
  1078  0E9D                     	;# 
  1079  0E9E                     	;# 
  1080  0EA1                     	;# 
  1081  0EA2                     	;# 
  1082  0EA3                     	;# 
  1083  0EA4                     	;# 
  1084  0EA5                     	;# 
  1085  0EA9                     	;# 
  1086  0EAA                     	;# 
  1087  0EAB                     	;# 
  1088  0EAC                     	;# 
  1089  0EB1                     	;# 
  1090  0EB2                     	;# 
  1091  0EB3                     	;# 
  1092  0EB8                     	;# 
  1093  0EB9                     	;# 
  1094  0EBA                     	;# 
  1095  0EBB                     	;# 
  1096  0EBC                     	;# 
  1097  0EBD                     	;# 
  1098  0EBE                     	;# 
  1099  0EC3                     	;# 
  1100  0EC5                     	;# 
  1101  0EC6                     	;# 
  1102  0EC7                     	;# 
  1103  0EC8                     	;# 
  1104  0EC9                     	;# 
  1105  0ECA                     	;# 
  1106  0ECB                     	;# 
  1107  0ECC                     	;# 
  1108  0F10                     	;# 
  1109  0F11                     	;# 
  1110  0F12                     	;# 
  1111  0F13                     	;# 
  1112  0F14                     	;# 
  1113  0F15                     	;# 
  1114  0F16                     	;# 
  1115  0F17                     	;# 
  1116  0F18                     	;# 
  1117  0F19                     	;# 
  1118  0F1A                     	;# 
  1119  0F1B                     	;# 
  1120  0F1C                     	;# 
  1121  0F1D                     	;# 
  1122  0F1E                     	;# 
  1123  0F1F                     	;# 
  1124  0F20                     	;# 
  1125  0F21                     	;# 
  1126  0F22                     	;# 
  1127  0F23                     	;# 
  1128  0F24                     	;# 
  1129  0F25                     	;# 
  1130  0F26                     	;# 
  1131  0F27                     	;# 
  1132  0F28                     	;# 
  1133  0F29                     	;# 
  1134  0F2A                     	;# 
  1135  0F2B                     	;# 
  1136  0F2C                     	;# 
  1137  0F2D                     	;# 
  1138  0F2E                     	;# 
  1139  0F2F                     	;# 
  1140  0F30                     	;# 
  1141  0F31                     	;# 
  1142  0F32                     	;# 
  1143  0F38                     	;# 
  1144  0F39                     	;# 
  1145  0F3A                     	;# 
  1146  0F3B                     	;# 
  1147  0F3C                     	;# 
  1148  0F3D                     	;# 
  1149  0F3E                     	;# 
  1150  0F3F                     	;# 
  1151  0F40                     	;# 
  1152  0F41                     	;# 
  1153  0F43                     	;# 
  1154  0F44                     	;# 
  1155  0F45                     	;# 
  1156  0F46                     	;# 
  1157  0F47                     	;# 
  1158  0F48                     	;# 
  1159  0F49                     	;# 
  1160  0F4A                     	;# 
  1161  0F4B                     	;# 
  1162  0F4C                     	;# 
  1163  0F4E                     	;# 
  1164  0F4F                     	;# 
  1165  0F50                     	;# 
  1166  0F51                     	;# 
  1167  0F52                     	;# 
  1168  0F53                     	;# 
  1169  0F54                     	;# 
  1170  0F55                     	;# 
  1171  0F56                     	;# 
  1172  0F57                     	;# 
  1173  0F59                     	;# 
  1174  0F5A                     	;# 
  1175  0F5B                     	;# 
  1176  0F5C                     	;# 
  1177  0F5D                     	;# 
  1178  0F61                     	;# 
  1179  0F62                     	;# 
  1180  0F64                     	;# 
  1181  0F65                     	;# 
  1182  0F66                     	;# 
  1183  0F67                     	;# 
  1184  0F68                     	;# 
  1185  0F69                     	;# 
  1186  0F6A                     	;# 
  1187  0F6B                     	;# 
  1188  0F6C                     	;# 
  1189  0F6D                     	;# 
  1190  0FE4                     	;# 
  1191  0FE5                     	;# 
  1192  0FE6                     	;# 
  1193  0FE7                     	;# 
  1194  0FE8                     	;# 
  1195  0FE9                     	;# 
  1196  0FEA                     	;# 
  1197  0FEB                     	;# 
  1198  0FED                     	;# 
  1199  0FEE                     	;# 
  1200  0FEF                     	;# 
  1201  0000                     	;# 
  1202  0001                     	;# 
  1203  0002                     	;# 
  1204  0003                     	;# 
  1205  0004                     	;# 
  1206  0005                     	;# 
  1207  0006                     	;# 
  1208  0007                     	;# 
  1209  0008                     	;# 
  1210  0009                     	;# 
  1211  000A                     	;# 
  1212  000B                     	;# 
  1213  000C                     	;# 
  1214  000D                     	;# 
  1215  000E                     	;# 
  1216  000F                     	;# 
  1217  0010                     	;# 
  1218  0011                     	;# 
  1219  0012                     	;# 
  1220  0013                     	;# 
  1221  0014                     	;# 
  1222  0015                     	;# 
  1223  0016                     	;# 
  1224  0017                     	;# 
  1225  0018                     	;# 
  1226  0019                     	;# 
  1227  001A                     	;# 
  1228  001C                     	;# 
  1229  001C                     	;# 
  1230  001D                     	;# 
  1231  001D                     	;# 
  1232  001E                     	;# 
  1233  001F                     	;# 
  1234  008C                     	;# 
  1235  008C                     	;# 
  1236  008D                     	;# 
  1237  008E                     	;# 
  1238  008E                     	;# 
  1239  008F                     	;# 
  1240  0090                     	;# 
  1241  0090                     	;# 
  1242  0091                     	;# 
  1243  0093                     	;# 
  1244  0094                     	;# 
  1245  0095                     	;# 
  1246  0096                     	;# 
  1247  0097                     	;# 
  1248  0098                     	;# 
  1249  0099                     	;# 
  1250  009A                     	;# 
  1251  009B                     	;# 
  1252  009C                     	;# 
  1253  009D                     	;# 
  1254  009E                     	;# 
  1255  010C                     	;# 
  1256  010D                     	;# 
  1257  010E                     	;# 
  1258  010E                     	;# 
  1259  010F                     	;# 
  1260  0110                     	;# 
  1261  0110                     	;# 
  1262  0111                     	;# 
  1263  0112                     	;# 
  1264  0112                     	;# 
  1265  0113                     	;# 
  1266  0114                     	;# 
  1267  0114                     	;# 
  1268  0115                     	;# 
  1269  0116                     	;# 
  1270  0116                     	;# 
  1271  0117                     	;# 
  1272  0119                     	;# 
  1273  0119                     	;# 
  1274  0119                     	;# 
  1275  011A                     	;# 
  1276  011A                     	;# 
  1277  011A                     	;# 
  1278  011B                     	;# 
  1279  011B                     	;# 
  1280  011B                     	;# 
  1281  011B                     	;# 
  1282  011B                     	;# 
  1283  011C                     	;# 
  1284  011C                     	;# 
  1285  011C                     	;# 
  1286  011D                     	;# 
  1287  011D                     	;# 
  1288  011D                     	;# 
  1289  011E                     	;# 
  1290  011E                     	;# 
  1291  011E                     	;# 
  1292  011F                     	;# 
  1293  011F                     	;# 
  1294  011F                     	;# 
  1295  011F                     	;# 
  1296  011F                     	;# 
  1297  018C                     	;# 
  1298  018D                     	;# 
  1299  018E                     	;# 
  1300  018F                     	;# 
  1301  0190                     	;# 
  1302  0191                     	;# 
  1303  0192                     	;# 
  1304  0196                     	;# 
  1305  0197                     	;# 
  1306  0198                     	;# 
  1307  0199                     	;# 
  1308  019A                     	;# 
  1309  019B                     	;# 
  1310  019C                     	;# 
  1311  020C                     	;# 
  1312  020C                     	;# 
  1313  020D                     	;# 
  1314  020E                     	;# 
  1315  020F                     	;# 
  1316  020F                     	;# 
  1317  0210                     	;# 
  1318  0210                     	;# 
  1319  0211                     	;# 
  1320  0211                     	;# 
  1321  0212                     	;# 
  1322  0212                     	;# 
  1323  0213                     	;# 
  1324  0214                     	;# 
  1325  0215                     	;# 
  1326  0215                     	;# 
  1327  0216                     	;# 
  1328  0216                     	;# 
  1329  0217                     	;# 
  1330  0217                     	;# 
  1331  0218                     	;# 
  1332  0218                     	;# 
  1333  0219                     	;# 
  1334  021A                     	;# 
  1335  021B                     	;# 
  1336  021B                     	;# 
  1337  021C                     	;# 
  1338  021C                     	;# 
  1339  021D                     	;# 
  1340  021D                     	;# 
  1341  021E                     	;# 
  1342  021F                     	;# 
  1343  028C                     	;# 
  1344  028C                     	;# 
  1345  028D                     	;# 
  1346  028D                     	;# 
  1347  028E                     	;# 
  1348  028F                     	;# 
  1349  0290                     	;# 
  1350  0290                     	;# 
  1351  0291                     	;# 
  1352  0292                     	;# 
  1353  0292                     	;# 
  1354  0293                     	;# 
  1355  0293                     	;# 
  1356  0294                     	;# 
  1357  0295                     	;# 
  1358  0296                     	;# 
  1359  0296                     	;# 
  1360  0297                     	;# 
  1361  0298                     	;# 
  1362  0298                     	;# 
  1363  0299                     	;# 
  1364  0299                     	;# 
  1365  029A                     	;# 
  1366  029B                     	;# 
  1367  029C                     	;# 
  1368  029C                     	;# 
  1369  029D                     	;# 
  1370  030C                     	;# 
  1371  030C                     	;# 
  1372  030D                     	;# 
  1373  030E                     	;# 
  1374  030F                     	;# 
  1375  0310                     	;# 
  1376  0310                     	;# 
  1377  0311                     	;# 
  1378  0312                     	;# 
  1379  0313                     	;# 
  1380  0314                     	;# 
  1381  0314                     	;# 
  1382  0315                     	;# 
  1383  0316                     	;# 
  1384  0317                     	;# 
  1385  0318                     	;# 
  1386  0318                     	;# 
  1387  0319                     	;# 
  1388  031A                     	;# 
  1389  031B                     	;# 
  1390  031C                     	;# 
  1391  031C                     	;# 
  1392  031D                     	;# 
  1393  031E                     	;# 
  1394  031F                     	;# 
  1395  038C                     	;# 
  1396  038C                     	;# 
  1397  038D                     	;# 
  1398  038E                     	;# 
  1399  0390                     	;# 
  1400  0390                     	;# 
  1401  0391                     	;# 
  1402  0392                     	;# 
  1403  040C                     	;# 
  1404  040D                     	;# 
  1405  040E                     	;# 
  1406  040F                     	;# 
  1407  0410                     	;# 
  1408  0411                     	;# 
  1409  0416                     	;# 
  1410  0416                     	;# 
  1411  0417                     	;# 
  1412  0418                     	;# 
  1413  0418                     	;# 
  1414  0419                     	;# 
  1415  041A                     	;# 
  1416  041A                     	;# 
  1417  041B                     	;# 
  1418  041C                     	;# 
  1419  041C                     	;# 
  1420  041D                     	;# 
  1421  041E                     	;# 
  1422  041F                     	;# 
  1423  048C                     	;# 
  1424  048C                     	;# 
  1425  048D                     	;# 
  1426  048E                     	;# 
  1427  048F                     	;# 
  1428  048F                     	;# 
  1429  0490                     	;# 
  1430  0491                     	;# 
  1431  0492                     	;# 
  1432  0492                     	;# 
  1433  0493                     	;# 
  1434  0494                     	;# 
  1435  0495                     	;# 
  1436  0495                     	;# 
  1437  0496                     	;# 
  1438  0497                     	;# 
  1439  0498                     	;# 
  1440  0499                     	;# 
  1441  049A                     	;# 
  1442  049B                     	;# 
  1443  049C                     	;# 
  1444  049D                     	;# 
  1445  050C                     	;# 
  1446  050C                     	;# 
  1447  050D                     	;# 
  1448  050E                     	;# 
  1449  050F                     	;# 
  1450  050F                     	;# 
  1451  0510                     	;# 
  1452  0511                     	;# 
  1453  0512                     	;# 
  1454  0512                     	;# 
  1455  0513                     	;# 
  1456  0514                     	;# 
  1457  0515                     	;# 
  1458  0515                     	;# 
  1459  0516                     	;# 
  1460  0517                     	;# 
  1461  0518                     	;# 
  1462  0519                     	;# 
  1463  051A                     	;# 
  1464  051B                     	;# 
  1465  051C                     	;# 
  1466  051D                     	;# 
  1467  058C                     	;# 
  1468  058C                     	;# 
  1469  058D                     	;# 
  1470  058E                     	;# 
  1471  058F                     	;# 
  1472  058F                     	;# 
  1473  0590                     	;# 
  1474  0591                     	;# 
  1475  0592                     	;# 
  1476  0593                     	;# 
  1477  060C                     	;# 
  1478  060D                     	;# 
  1479  060E                     	;# 
  1480  060F                     	;# 
  1481  0610                     	;# 
  1482  0611                     	;# 
  1483  0612                     	;# 
  1484  0613                     	;# 
  1485  0614                     	;# 
  1486  0616                     	;# 
  1487  0617                     	;# 
  1488  0618                     	;# 
  1489  0619                     	;# 
  1490  061A                     	;# 
  1491  061B                     	;# 
  1492  061C                     	;# 
  1493  061D                     	;# 
  1494  061E                     	;# 
  1495  068C                     	;# 
  1496  068D                     	;# 
  1497  068E                     	;# 
  1498  068F                     	;# 
  1499  0690                     	;# 
  1500  0691                     	;# 
  1501  0692                     	;# 
  1502  0693                     	;# 
  1503  0694                     	;# 
  1504  070C                     	;# 
  1505  070D                     	;# 
  1506  070E                     	;# 
  1507  070F                     	;# 
  1508  0710                     	;# 
  1509  0711                     	;# 
  1510  0712                     	;# 
  1511  0713                     	;# 
  1512  0714                     	;# 
  1513  0716                     	;# 
  1514  0717                     	;# 
  1515  0718                     	;# 
  1516  0719                     	;# 
  1517  071A                     	;# 
  1518  071B                     	;# 
  1519  071C                     	;# 
  1520  071D                     	;# 
  1521  071E                     	;# 
  1522  0796                     	;# 
  1523  0797                     	;# 
  1524  0798                     	;# 
  1525  0799                     	;# 
  1526  079A                     	;# 
  1527  079B                     	;# 
  1528  080C                     	;# 
  1529  080D                     	;# 
  1530  080E                     	;# 
  1531  080F                     	;# 
  1532  0810                     	;# 
  1533  0811                     	;# 
  1534  0812                     	;# 
  1535  0813                     	;# 
  1536  0814                     	;# 
  1537  081A                     	;# 
  1538  081B                     	;# 
  1539  081C                     	;# 
  1540  081D                     	;# 
  1541  081E                     	;# 
  1542  081F                     	;# 
  1543  088C                     	;# 
  1544  088D                     	;# 
  1545  088E                     	;# 
  1546  088F                     	;# 
  1547  0890                     	;# 
  1548  0891                     	;# 
  1549  0892                     	;# 
  1550  0893                     	;# 
  1551  0895                     	;# 
  1552  0896                     	;# 
  1553  0897                     	;# 
  1554  0898                     	;# 
  1555  0899                     	;# 
  1556  089A                     	;# 
  1557  089B                     	;# 
  1558  090C                     	;# 
  1559  090E                     	;# 
  1560  090F                     	;# 
  1561  091F                     	;# 
  1562  091F                     	;# 
  1563  098F                     	;# 
  1564  098F                     	;# 
  1565  0990                     	;# 
  1566  0991                     	;# 
  1567  0992                     	;# 
  1568  0993                     	;# 
  1569  0994                     	;# 
  1570  0995                     	;# 
  1571  0996                     	;# 
  1572  0997                     	;# 
  1573  0E0F                     	;# 
  1574  0E10                     	;# 
  1575  0E11                     	;# 
  1576  0E12                     	;# 
  1577  0E13                     	;# 
  1578  0E14                     	;# 
  1579  0E15                     	;# 
  1580  0E16                     	;# 
  1581  0E17                     	;# 
  1582  0E18                     	;# 
  1583  0E19                     	;# 
  1584  0E1A                     	;# 
  1585  0E1B                     	;# 
  1586  0E1C                     	;# 
  1587  0E1D                     	;# 
  1588  0E1E                     	;# 
  1589  0E1F                     	;# 
  1590  0E20                     	;# 
  1591  0E21                     	;# 
  1592  0E22                     	;# 
  1593  0E23                     	;# 
  1594  0E24                     	;# 
  1595  0E25                     	;# 
  1596  0E26                     	;# 
  1597  0E27                     	;# 
  1598  0E28                     	;# 
  1599  0E29                     	;# 
  1600  0E2A                     	;# 
  1601  0E2B                     	;# 
  1602  0E2C                     	;# 
  1603  0E2D                     	;# 
  1604  0E2E                     	;# 
  1605  0E2F                     	;# 
  1606  0E30                     	;# 
  1607  0E31                     	;# 
  1608  0E32                     	;# 
  1609  0E33                     	;# 
  1610  0E34                     	;# 
  1611  0E35                     	;# 
  1612  0E36                     	;# 
  1613  0E37                     	;# 
  1614  0E8F                     	;# 
  1615  0E90                     	;# 
  1616  0E91                     	;# 
  1617  0E92                     	;# 
  1618  0E93                     	;# 
  1619  0E94                     	;# 
  1620  0E95                     	;# 
  1621  0E96                     	;# 
  1622  0E97                     	;# 
  1623  0E9C                     	;# 
  1624  0E9D                     	;# 
  1625  0E9E                     	;# 
  1626  0EA1                     	;# 
  1627  0EA2                     	;# 
  1628  0EA3                     	;# 
  1629  0EA4                     	;# 
  1630  0EA5                     	;# 
  1631  0EA9                     	;# 
  1632  0EAA                     	;# 
  1633  0EAB                     	;# 
  1634  0EAC                     	;# 
  1635  0EB1                     	;# 
  1636  0EB2                     	;# 
  1637  0EB3                     	;# 
  1638  0EB8                     	;# 
  1639  0EB9                     	;# 
  1640  0EBA                     	;# 
  1641  0EBB                     	;# 
  1642  0EBC                     	;# 
  1643  0EBD                     	;# 
  1644  0EBE                     	;# 
  1645  0EC3                     	;# 
  1646  0EC5                     	;# 
  1647  0EC6                     	;# 
  1648  0EC7                     	;# 
  1649  0EC8                     	;# 
  1650  0EC9                     	;# 
  1651  0ECA                     	;# 
  1652  0ECB                     	;# 
  1653  0ECC                     	;# 
  1654  0F10                     	;# 
  1655  0F11                     	;# 
  1656  0F12                     	;# 
  1657  0F13                     	;# 
  1658  0F14                     	;# 
  1659  0F15                     	;# 
  1660  0F16                     	;# 
  1661  0F17                     	;# 
  1662  0F18                     	;# 
  1663  0F19                     	;# 
  1664  0F1A                     	;# 
  1665  0F1B                     	;# 
  1666  0F1C                     	;# 
  1667  0F1D                     	;# 
  1668  0F1E                     	;# 
  1669  0F1F                     	;# 
  1670  0F20                     	;# 
  1671  0F21                     	;# 
  1672  0F22                     	;# 
  1673  0F23                     	;# 
  1674  0F24                     	;# 
  1675  0F25                     	;# 
  1676  0F26                     	;# 
  1677  0F27                     	;# 
  1678  0F28                     	;# 
  1679  0F29                     	;# 
  1680  0F2A                     	;# 
  1681  0F2B                     	;# 
  1682  0F2C                     	;# 
  1683  0F2D                     	;# 
  1684  0F2E                     	;# 
  1685  0F2F                     	;# 
  1686  0F30                     	;# 
  1687  0F31                     	;# 
  1688  0F32                     	;# 
  1689  0F38                     	;# 
  1690  0F39                     	;# 
  1691  0F3A                     	;# 
  1692  0F3B                     	;# 
  1693  0F3C                     	;# 
  1694  0F3D                     	;# 
  1695  0F3E                     	;# 
  1696  0F3F                     	;# 
  1697  0F40                     	;# 
  1698  0F41                     	;# 
  1699  0F43                     	;# 
  1700  0F44                     	;# 
  1701  0F45                     	;# 
  1702  0F46                     	;# 
  1703  0F47                     	;# 
  1704  0F48                     	;# 
  1705  0F49                     	;# 
  1706  0F4A                     	;# 
  1707  0F4B                     	;# 
  1708  0F4C                     	;# 
  1709  0F4E                     	;# 
  1710  0F4F                     	;# 
  1711  0F50                     	;# 
  1712  0F51                     	;# 
  1713  0F52                     	;# 
  1714  0F53                     	;# 
  1715  0F54                     	;# 
  1716  0F55                     	;# 
  1717  0F56                     	;# 
  1718  0F57                     	;# 
  1719  0F59                     	;# 
  1720  0F5A                     	;# 
  1721  0F5B                     	;# 
  1722  0F5C                     	;# 
  1723  0F5D                     	;# 
  1724  0F61                     	;# 
  1725  0F62                     	;# 
  1726  0F64                     	;# 
  1727  0F65                     	;# 
  1728  0F66                     	;# 
  1729  0F67                     	;# 
  1730  0F68                     	;# 
  1731  0F69                     	;# 
  1732  0F6A                     	;# 
  1733  0F6B                     	;# 
  1734  0F6C                     	;# 
  1735  0F6D                     	;# 
  1736  0FE4                     	;# 
  1737  0FE5                     	;# 
  1738  0FE6                     	;# 
  1739  0FE7                     	;# 
  1740  0FE8                     	;# 
  1741  0FE9                     	;# 
  1742  0FEA                     	;# 
  1743  0FEB                     	;# 
  1744  0FED                     	;# 
  1745  0FEE                     	;# 
  1746  0FEF                     	;# 
  1747  0000                     	;# 
  1748  0001                     	;# 
  1749  0002                     	;# 
  1750  0003                     	;# 
  1751  0004                     	;# 
  1752  0005                     	;# 
  1753  0006                     	;# 
  1754  0007                     	;# 
  1755  0008                     	;# 
  1756  0009                     	;# 
  1757  000A                     	;# 
  1758  000B                     	;# 
  1759  000C                     	;# 
  1760  000D                     	;# 
  1761  000E                     	;# 
  1762  000F                     	;# 
  1763  0010                     	;# 
  1764  0011                     	;# 
  1765  0012                     	;# 
  1766  0013                     	;# 
  1767  0014                     	;# 
  1768  0015                     	;# 
  1769  0016                     	;# 
  1770  0017                     	;# 
  1771  0018                     	;# 
  1772  0019                     	;# 
  1773  001A                     	;# 
  1774  001C                     	;# 
  1775  001C                     	;# 
  1776  001D                     	;# 
  1777  001D                     	;# 
  1778  001E                     	;# 
  1779  001F                     	;# 
  1780  008C                     	;# 
  1781  008C                     	;# 
  1782  008D                     	;# 
  1783  008E                     	;# 
  1784  008E                     	;# 
  1785  008F                     	;# 
  1786  0090                     	;# 
  1787  0090                     	;# 
  1788  0091                     	;# 
  1789  0093                     	;# 
  1790  0094                     	;# 
  1791  0095                     	;# 
  1792  0096                     	;# 
  1793  0097                     	;# 
  1794  0098                     	;# 
  1795  0099                     	;# 
  1796  009A                     	;# 
  1797  009B                     	;# 
  1798  009C                     	;# 
  1799  009D                     	;# 
  1800  009E                     	;# 
  1801  010C                     	;# 
  1802  010D                     	;# 
  1803  010E                     	;# 
  1804  010E                     	;# 
  1805  010F                     	;# 
  1806  0110                     	;# 
  1807  0110                     	;# 
  1808  0111                     	;# 
  1809  0112                     	;# 
  1810  0112                     	;# 
  1811  0113                     	;# 
  1812  0114                     	;# 
  1813  0114                     	;# 
  1814  0115                     	;# 
  1815  0116                     	;# 
  1816  0116                     	;# 
  1817  0117                     	;# 
  1818  0119                     	;# 
  1819  0119                     	;# 
  1820  0119                     	;# 
  1821  011A                     	;# 
  1822  011A                     	;# 
  1823  011A                     	;# 
  1824  011B                     	;# 
  1825  011B                     	;# 
  1826  011B                     	;# 
  1827  011B                     	;# 
  1828  011B                     	;# 
  1829  011C                     	;# 
  1830  011C                     	;# 
  1831  011C                     	;# 
  1832  011D                     	;# 
  1833  011D                     	;# 
  1834  011D                     	;# 
  1835  011E                     	;# 
  1836  011E                     	;# 
  1837  011E                     	;# 
  1838  011F                     	;# 
  1839  011F                     	;# 
  1840  011F                     	;# 
  1841  011F                     	;# 
  1842  011F                     	;# 
  1843  018C                     	;# 
  1844  018D                     	;# 
  1845  018E                     	;# 
  1846  018F                     	;# 
  1847  0190                     	;# 
  1848  0191                     	;# 
  1849  0192                     	;# 
  1850  0196                     	;# 
  1851  0197                     	;# 
  1852  0198                     	;# 
  1853  0199                     	;# 
  1854  019A                     	;# 
  1855  019B                     	;# 
  1856  019C                     	;# 
  1857  020C                     	;# 
  1858  020C                     	;# 
  1859  020D                     	;# 
  1860  020E                     	;# 
  1861  020F                     	;# 
  1862  020F                     	;# 
  1863  0210                     	;# 
  1864  0210                     	;# 
  1865  0211                     	;# 
  1866  0211                     	;# 
  1867  0212                     	;# 
  1868  0212                     	;# 
  1869  0213                     	;# 
  1870  0214                     	;# 
  1871  0215                     	;# 
  1872  0215                     	;# 
  1873  0216                     	;# 
  1874  0216                     	;# 
  1875  0217                     	;# 
  1876  0217                     	;# 
  1877  0218                     	;# 
  1878  0218                     	;# 
  1879  0219                     	;# 
  1880  021A                     	;# 
  1881  021B                     	;# 
  1882  021B                     	;# 
  1883  021C                     	;# 
  1884  021C                     	;# 
  1885  021D                     	;# 
  1886  021D                     	;# 
  1887  021E                     	;# 
  1888  021F                     	;# 
  1889  028C                     	;# 
  1890  028C                     	;# 
  1891  028D                     	;# 
  1892  028D                     	;# 
  1893  028E                     	;# 
  1894  028F                     	;# 
  1895  0290                     	;# 
  1896  0290                     	;# 
  1897  0291                     	;# 
  1898  0292                     	;# 
  1899  0292                     	;# 
  1900  0293                     	;# 
  1901  0293                     	;# 
  1902  0294                     	;# 
  1903  0295                     	;# 
  1904  0296                     	;# 
  1905  0296                     	;# 
  1906  0297                     	;# 
  1907  0298                     	;# 
  1908  0298                     	;# 
  1909  0299                     	;# 
  1910  0299                     	;# 
  1911  029A                     	;# 
  1912  029B                     	;# 
  1913  029C                     	;# 
  1914  029C                     	;# 
  1915  029D                     	;# 
  1916  030C                     	;# 
  1917  030C                     	;# 
  1918  030D                     	;# 
  1919  030E                     	;# 
  1920  030F                     	;# 
  1921  0310                     	;# 
  1922  0310                     	;# 
  1923  0311                     	;# 
  1924  0312                     	;# 
  1925  0313                     	;# 
  1926  0314                     	;# 
  1927  0314                     	;# 
  1928  0315                     	;# 
  1929  0316                     	;# 
  1930  0317                     	;# 
  1931  0318                     	;# 
  1932  0318                     	;# 
  1933  0319                     	;# 
  1934  031A                     	;# 
  1935  031B                     	;# 
  1936  031C                     	;# 
  1937  031C                     	;# 
  1938  031D                     	;# 
  1939  031E                     	;# 
  1940  031F                     	;# 
  1941  038C                     	;# 
  1942  038C                     	;# 
  1943  038D                     	;# 
  1944  038E                     	;# 
  1945  0390                     	;# 
  1946  0390                     	;# 
  1947  0391                     	;# 
  1948  0392                     	;# 
  1949  040C                     	;# 
  1950  040D                     	;# 
  1951  040E                     	;# 
  1952  040F                     	;# 
  1953  0410                     	;# 
  1954  0411                     	;# 
  1955  0416                     	;# 
  1956  0416                     	;# 
  1957  0417                     	;# 
  1958  0418                     	;# 
  1959  0418                     	;# 
  1960  0419                     	;# 
  1961  041A                     	;# 
  1962  041A                     	;# 
  1963  041B                     	;# 
  1964  041C                     	;# 
  1965  041C                     	;# 
  1966  041D                     	;# 
  1967  041E                     	;# 
  1968  041F                     	;# 
  1969  048C                     	;# 
  1970  048C                     	;# 
  1971  048D                     	;# 
  1972  048E                     	;# 
  1973  048F                     	;# 
  1974  048F                     	;# 
  1975  0490                     	;# 
  1976  0491                     	;# 
  1977  0492                     	;# 
  1978  0492                     	;# 
  1979  0493                     	;# 
  1980  0494                     	;# 
  1981  0495                     	;# 
  1982  0495                     	;# 
  1983  0496                     	;# 
  1984  0497                     	;# 
  1985  0498                     	;# 
  1986  0499                     	;# 
  1987  049A                     	;# 
  1988  049B                     	;# 
  1989  049C                     	;# 
  1990  049D                     	;# 
  1991  050C                     	;# 
  1992  050C                     	;# 
  1993  050D                     	;# 
  1994  050E                     	;# 
  1995  050F                     	;# 
  1996  050F                     	;# 
  1997  0510                     	;# 
  1998  0511                     	;# 
  1999  0512                     	;# 
  2000  0512                     	;# 
  2001  0513                     	;# 
  2002  0514                     	;# 
  2003  0515                     	;# 
  2004  0515                     	;# 
  2005  0516                     	;# 
  2006  0517                     	;# 
  2007  0518                     	;# 
  2008  0519                     	;# 
  2009  051A                     	;# 
  2010  051B                     	;# 
  2011  051C                     	;# 
  2012  051D                     	;# 
  2013  058C                     	;# 
  2014  058C                     	;# 
  2015  058D                     	;# 
  2016  058E                     	;# 
  2017  058F                     	;# 
  2018  058F                     	;# 
  2019  0590                     	;# 
  2020  0591                     	;# 
  2021  0592                     	;# 
  2022  0593                     	;# 
  2023  060C                     	;# 
  2024  060D                     	;# 
  2025  060E                     	;# 
  2026  060F                     	;# 
  2027  0610                     	;# 
  2028  0611                     	;# 
  2029  0612                     	;# 
  2030  0613                     	;# 
  2031  0614                     	;# 
  2032  0616                     	;# 
  2033  0617                     	;# 
  2034  0618                     	;# 
  2035  0619                     	;# 
  2036  061A                     	;# 
  2037  061B                     	;# 
  2038  061C                     	;# 
  2039  061D                     	;# 
  2040  061E                     	;# 
  2041  068C                     	;# 
  2042  068D                     	;# 
  2043  068E                     	;# 
  2044  068F                     	;# 
  2045  0690                     	;# 
  2046  0691                     	;# 
  2047  0692                     	;# 
  2048  0693                     	;# 
  2049  0694                     	;# 
  2050  070C                     	;# 
  2051  070D                     	;# 
  2052  070E                     	;# 
  2053  070F                     	;# 
  2054  0710                     	;# 
  2055  0711                     	;# 
  2056  0712                     	;# 
  2057  0713                     	;# 
  2058  0714                     	;# 
  2059  0716                     	;# 
  2060  0717                     	;# 
  2061  0718                     	;# 
  2062  0719                     	;# 
  2063  071A                     	;# 
  2064  071B                     	;# 
  2065  071C                     	;# 
  2066  071D                     	;# 
  2067  071E                     	;# 
  2068  0796                     	;# 
  2069  0797                     	;# 
  2070  0798                     	;# 
  2071  0799                     	;# 
  2072  079A                     	;# 
  2073  079B                     	;# 
  2074  080C                     	;# 
  2075  080D                     	;# 
  2076  080E                     	;# 
  2077  080F                     	;# 
  2078  0810                     	;# 
  2079  0811                     	;# 
  2080  0812                     	;# 
  2081  0813                     	;# 
  2082  0814                     	;# 
  2083  081A                     	;# 
  2084  081B                     	;# 
  2085  081C                     	;# 
  2086  081D                     	;# 
  2087  081E                     	;# 
  2088  081F                     	;# 
  2089  088C                     	;# 
  2090  088D                     	;# 
  2091  088E                     	;# 
  2092  088F                     	;# 
  2093  0890                     	;# 
  2094  0891                     	;# 
  2095  0892                     	;# 
  2096  0893                     	;# 
  2097  0895                     	;# 
  2098  0896                     	;# 
  2099  0897                     	;# 
  2100  0898                     	;# 
  2101  0899                     	;# 
  2102  089A                     	;# 
  2103  089B                     	;# 
  2104  090C                     	;# 
  2105  090E                     	;# 
  2106  090F                     	;# 
  2107  091F                     	;# 
  2108  091F                     	;# 
  2109  098F                     	;# 
  2110  098F                     	;# 
  2111  0990                     	;# 
  2112  0991                     	;# 
  2113  0992                     	;# 
  2114  0993                     	;# 
  2115  0994                     	;# 
  2116  0995                     	;# 
  2117  0996                     	;# 
  2118  0997                     	;# 
  2119  0E0F                     	;# 
  2120  0E10                     	;# 
  2121  0E11                     	;# 
  2122  0E12                     	;# 
  2123  0E13                     	;# 
  2124  0E14                     	;# 
  2125  0E15                     	;# 
  2126  0E16                     	;# 
  2127  0E17                     	;# 
  2128  0E18                     	;# 
  2129  0E19                     	;# 
  2130  0E1A                     	;# 
  2131  0E1B                     	;# 
  2132  0E1C                     	;# 
  2133  0E1D                     	;# 
  2134  0E1E                     	;# 
  2135  0E1F                     	;# 
  2136  0E20                     	;# 
  2137  0E21                     	;# 
  2138  0E22                     	;# 
  2139  0E23                     	;# 
  2140  0E24                     	;# 
  2141  0E25                     	;# 
  2142  0E26                     	;# 
  2143  0E27                     	;# 
  2144  0E28                     	;# 
  2145  0E29                     	;# 
  2146  0E2A                     	;# 
  2147  0E2B                     	;# 
  2148  0E2C                     	;# 
  2149  0E2D                     	;# 
  2150  0E2E                     	;# 
  2151  0E2F                     	;# 
  2152  0E30                     	;# 
  2153  0E31                     	;# 
  2154  0E32                     	;# 
  2155  0E33                     	;# 
  2156  0E34                     	;# 
  2157  0E35                     	;# 
  2158  0E36                     	;# 
  2159  0E37                     	;# 
  2160  0E8F                     	;# 
  2161  0E90                     	;# 
  2162  0E91                     	;# 
  2163  0E92                     	;# 
  2164  0E93                     	;# 
  2165  0E94                     	;# 
  2166  0E95                     	;# 
  2167  0E96                     	;# 
  2168  0E97                     	;# 
  2169  0E9C                     	;# 
  2170  0E9D                     	;# 
  2171  0E9E                     	;# 
  2172  0EA1                     	;# 
  2173  0EA2                     	;# 
  2174  0EA3                     	;# 
  2175  0EA4                     	;# 
  2176  0EA5                     	;# 
  2177  0EA9                     	;# 
  2178  0EAA                     	;# 
  2179  0EAB                     	;# 
  2180  0EAC                     	;# 
  2181  0EB1                     	;# 
  2182  0EB2                     	;# 
  2183  0EB3                     	;# 
  2184  0EB8                     	;# 
  2185  0EB9                     	;# 
  2186  0EBA                     	;# 
  2187  0EBB                     	;# 
  2188  0EBC                     	;# 
  2189  0EBD                     	;# 
  2190  0EBE                     	;# 
  2191  0EC3                     	;# 
  2192  0EC5                     	;# 
  2193  0EC6                     	;# 
  2194  0EC7                     	;# 
  2195  0EC8                     	;# 
  2196  0EC9                     	;# 
  2197  0ECA                     	;# 
  2198  0ECB                     	;# 
  2199  0ECC                     	;# 
  2200  0F10                     	;# 
  2201  0F11                     	;# 
  2202  0F12                     	;# 
  2203  0F13                     	;# 
  2204  0F14                     	;# 
  2205  0F15                     	;# 
  2206  0F16                     	;# 
  2207  0F17                     	;# 
  2208  0F18                     	;# 
  2209  0F19                     	;# 
  2210  0F1A                     	;# 
  2211  0F1B                     	;# 
  2212  0F1C                     	;# 
  2213  0F1D                     	;# 
  2214  0F1E                     	;# 
  2215  0F1F                     	;# 
  2216  0F20                     	;# 
  2217  0F21                     	;# 
  2218  0F22                     	;# 
  2219  0F23                     	;# 
  2220  0F24                     	;# 
  2221  0F25                     	;# 
  2222  0F26                     	;# 
  2223  0F27                     	;# 
  2224  0F28                     	;# 
  2225  0F29                     	;# 
  2226  0F2A                     	;# 
  2227  0F2B                     	;# 
  2228  0F2C                     	;# 
  2229  0F2D                     	;# 
  2230  0F2E                     	;# 
  2231  0F2F                     	;# 
  2232  0F30                     	;# 
  2233  0F31                     	;# 
  2234  0F32                     	;# 
  2235  0F38                     	;# 
  2236  0F39                     	;# 
  2237  0F3A                     	;# 
  2238  0F3B                     	;# 
  2239  0F3C                     	;# 
  2240  0F3D                     	;# 
  2241  0F3E                     	;# 
  2242  0F3F                     	;# 
  2243  0F40                     	;# 
  2244  0F41                     	;# 
  2245  0F43                     	;# 
  2246  0F44                     	;# 
  2247  0F45                     	;# 
  2248  0F46                     	;# 
  2249  0F47                     	;# 
  2250  0F48                     	;# 
  2251  0F49                     	;# 
  2252  0F4A                     	;# 
  2253  0F4B                     	;# 
  2254  0F4C                     	;# 
  2255  0F4E                     	;# 
  2256  0F4F                     	;# 
  2257  0F50                     	;# 
  2258  0F51                     	;# 
  2259  0F52                     	;# 
  2260  0F53                     	;# 
  2261  0F54                     	;# 
  2262  0F55                     	;# 
  2263  0F56                     	;# 
  2264  0F57                     	;# 
  2265  0F59                     	;# 
  2266  0F5A                     	;# 
  2267  0F5B                     	;# 
  2268  0F5C                     	;# 
  2269  0F5D                     	;# 
  2270  0F61                     	;# 
  2271  0F62                     	;# 
  2272  0F64                     	;# 
  2273  0F65                     	;# 
  2274  0F66                     	;# 
  2275  0F67                     	;# 
  2276  0F68                     	;# 
  2277  0F69                     	;# 
  2278  0F6A                     	;# 
  2279  0F6B                     	;# 
  2280  0F6C                     	;# 
  2281  0F6D                     	;# 
  2282  0FE4                     	;# 
  2283  0FE5                     	;# 
  2284  0FE6                     	;# 
  2285  0FE7                     	;# 
  2286  0FE8                     	;# 
  2287  0FE9                     	;# 
  2288  0FEA                     	;# 
  2289  0FEB                     	;# 
  2290  0FED                     	;# 
  2291  0FEE                     	;# 
  2292  0FEF                     	;# 
  2293  0000                     	;# 
  2294  0001                     	;# 
  2295  0002                     	;# 
  2296  0003                     	;# 
  2297  0004                     	;# 
  2298  0005                     	;# 
  2299  0006                     	;# 
  2300  0007                     	;# 
  2301  0008                     	;# 
  2302  0009                     	;# 
  2303  000A                     	;# 
  2304  000B                     	;# 
  2305  000C                     	;# 
  2306  000D                     	;# 
  2307  000E                     	;# 
  2308  000F                     	;# 
  2309  0010                     	;# 
  2310  0011                     	;# 
  2311  0012                     	;# 
  2312  0013                     	;# 
  2313  0014                     	;# 
  2314  0015                     	;# 
  2315  0016                     	;# 
  2316  0017                     	;# 
  2317  0018                     	;# 
  2318  0019                     	;# 
  2319  001A                     	;# 
  2320  001C                     	;# 
  2321  001C                     	;# 
  2322  001D                     	;# 
  2323  001D                     	;# 
  2324  001E                     	;# 
  2325  001F                     	;# 
  2326  008C                     	;# 
  2327  008C                     	;# 
  2328  008D                     	;# 
  2329  008E                     	;# 
  2330  008E                     	;# 
  2331  008F                     	;# 
  2332  0090                     	;# 
  2333  0090                     	;# 
  2334  0091                     	;# 
  2335  0093                     	;# 
  2336  0094                     	;# 
  2337  0095                     	;# 
  2338  0096                     	;# 
  2339  0097                     	;# 
  2340  0098                     	;# 
  2341  0099                     	;# 
  2342  009A                     	;# 
  2343  009B                     	;# 
  2344  009C                     	;# 
  2345  009D                     	;# 
  2346  009E                     	;# 
  2347  010C                     	;# 
  2348  010D                     	;# 
  2349  010E                     	;# 
  2350  010E                     	;# 
  2351  010F                     	;# 
  2352  0110                     	;# 
  2353  0110                     	;# 
  2354  0111                     	;# 
  2355  0112                     	;# 
  2356  0112                     	;# 
  2357  0113                     	;# 
  2358  0114                     	;# 
  2359  0114                     	;# 
  2360  0115                     	;# 
  2361  0116                     	;# 
  2362  0116                     	;# 
  2363  0117                     	;# 
  2364  0119                     	;# 
  2365  0119                     	;# 
  2366  0119                     	;# 
  2367  011A                     	;# 
  2368  011A                     	;# 
  2369  011A                     	;# 
  2370  011B                     	;# 
  2371  011B                     	;# 
  2372  011B                     	;# 
  2373  011B                     	;# 
  2374  011B                     	;# 
  2375  011C                     	;# 
  2376  011C                     	;# 
  2377  011C                     	;# 
  2378  011D                     	;# 
  2379  011D                     	;# 
  2380  011D                     	;# 
  2381  011E                     	;# 
  2382  011E                     	;# 
  2383  011E                     	;# 
  2384  011F                     	;# 
  2385  011F                     	;# 
  2386  011F                     	;# 
  2387  011F                     	;# 
  2388  011F                     	;# 
  2389  018C                     	;# 
  2390  018D                     	;# 
  2391  018E                     	;# 
  2392  018F                     	;# 
  2393  0190                     	;# 
  2394  0191                     	;# 
  2395  0192                     	;# 
  2396  0196                     	;# 
  2397  0197                     	;# 
  2398  0198                     	;# 
  2399  0199                     	;# 
  2400  019A                     	;# 
  2401  019B                     	;# 
  2402  019C                     	;# 
  2403  020C                     	;# 
  2404  020C                     	;# 
  2405  020D                     	;# 
  2406  020E                     	;# 
  2407  020F                     	;# 
  2408  020F                     	;# 
  2409  0210                     	;# 
  2410  0210                     	;# 
  2411  0211                     	;# 
  2412  0211                     	;# 
  2413  0212                     	;# 
  2414  0212                     	;# 
  2415  0213                     	;# 
  2416  0214                     	;# 
  2417  0215                     	;# 
  2418  0215                     	;# 
  2419  0216                     	;# 
  2420  0216                     	;# 
  2421  0217                     	;# 
  2422  0217                     	;# 
  2423  0218                     	;# 
  2424  0218                     	;# 
  2425  0219                     	;# 
  2426  021A                     	;# 
  2427  021B                     	;# 
  2428  021B                     	;# 
  2429  021C                     	;# 
  2430  021C                     	;# 
  2431  021D                     	;# 
  2432  021D                     	;# 
  2433  021E                     	;# 
  2434  021F                     	;# 
  2435  028C                     	;# 
  2436  028C                     	;# 
  2437  028D                     	;# 
  2438  028D                     	;# 
  2439  028E                     	;# 
  2440  028F                     	;# 
  2441  0290                     	;# 
  2442  0290                     	;# 
  2443  0291                     	;# 
  2444  0292                     	;# 
  2445  0292                     	;# 
  2446  0293                     	;# 
  2447  0293                     	;# 
  2448  0294                     	;# 
  2449  0295                     	;# 
  2450  0296                     	;# 
  2451  0296                     	;# 
  2452  0297                     	;# 
  2453  0298                     	;# 
  2454  0298                     	;# 
  2455  0299                     	;# 
  2456  0299                     	;# 
  2457  029A                     	;# 
  2458  029B                     	;# 
  2459  029C                     	;# 
  2460  029C                     	;# 
  2461  029D                     	;# 
  2462  030C                     	;# 
  2463  030C                     	;# 
  2464  030D                     	;# 
  2465  030E                     	;# 
  2466  030F                     	;# 
  2467  0310                     	;# 
  2468  0310                     	;# 
  2469  0311                     	;# 
  2470  0312                     	;# 
  2471  0313                     	;# 
  2472  0314                     	;# 
  2473  0314                     	;# 
  2474  0315                     	;# 
  2475  0316                     	;# 
  2476  0317                     	;# 
  2477  0318                     	;# 
  2478  0318                     	;# 
  2479  0319                     	;# 
  2480  031A                     	;# 
  2481  031B                     	;# 
  2482  031C                     	;# 
  2483  031C                     	;# 
  2484  031D                     	;# 
  2485  031E                     	;# 
  2486  031F                     	;# 
  2487  038C                     	;# 
  2488  038C                     	;# 
  2489  038D                     	;# 
  2490  038E                     	;# 
  2491  0390                     	;# 
  2492  0390                     	;# 
  2493  0391                     	;# 
  2494  0392                     	;# 
  2495  040C                     	;# 
  2496  040D                     	;# 
  2497  040E                     	;# 
  2498  040F                     	;# 
  2499  0410                     	;# 
  2500  0411                     	;# 
  2501  0416                     	;# 
  2502  0416                     	;# 
  2503  0417                     	;# 
  2504  0418                     	;# 
  2505  0418                     	;# 
  2506  0419                     	;# 
  2507  041A                     	;# 
  2508  041A                     	;# 
  2509  041B                     	;# 
  2510  041C                     	;# 
  2511  041C                     	;# 
  2512  041D                     	;# 
  2513  041E                     	;# 
  2514  041F                     	;# 
  2515  048C                     	;# 
  2516  048C                     	;# 
  2517  048D                     	;# 
  2518  048E                     	;# 
  2519  048F                     	;# 
  2520  048F                     	;# 
  2521  0490                     	;# 
  2522  0491                     	;# 
  2523  0492                     	;# 
  2524  0492                     	;# 
  2525  0493                     	;# 
  2526  0494                     	;# 
  2527  0495                     	;# 
  2528  0495                     	;# 
  2529  0496                     	;# 
  2530  0497                     	;# 
  2531  0498                     	;# 
  2532  0499                     	;# 
  2533  049A                     	;# 
  2534  049B                     	;# 
  2535  049C                     	;# 
  2536  049D                     	;# 
  2537  050C                     	;# 
  2538  050C                     	;# 
  2539  050D                     	;# 
  2540  050E                     	;# 
  2541  050F                     	;# 
  2542  050F                     	;# 
  2543  0510                     	;# 
  2544  0511                     	;# 
  2545  0512                     	;# 
  2546  0512                     	;# 
  2547  0513                     	;# 
  2548  0514                     	;# 
  2549  0515                     	;# 
  2550  0515                     	;# 
  2551  0516                     	;# 
  2552  0517                     	;# 
  2553  0518                     	;# 
  2554  0519                     	;# 
  2555  051A                     	;# 
  2556  051B                     	;# 
  2557  051C                     	;# 
  2558  051D                     	;# 
  2559  058C                     	;# 
  2560  058C                     	;# 
  2561  058D                     	;# 
  2562  058E                     	;# 
  2563  058F                     	;# 
  2564  058F                     	;# 
  2565  0590                     	;# 
  2566  0591                     	;# 
  2567  0592                     	;# 
  2568  0593                     	;# 
  2569  060C                     	;# 
  2570  060D                     	;# 
  2571  060E                     	;# 
  2572  060F                     	;# 
  2573  0610                     	;# 
  2574  0611                     	;# 
  2575  0612                     	;# 
  2576  0613                     	;# 
  2577  0614                     	;# 
  2578  0616                     	;# 
  2579  0617                     	;# 
  2580  0618                     	;# 
  2581  0619                     	;# 
  2582  061A                     	;# 
  2583  061B                     	;# 
  2584  061C                     	;# 
  2585  061D                     	;# 
  2586  061E                     	;# 
  2587  068C                     	;# 
  2588  068D                     	;# 
  2589  068E                     	;# 
  2590  068F                     	;# 
  2591  0690                     	;# 
  2592  0691                     	;# 
  2593  0692                     	;# 
  2594  0693                     	;# 
  2595  0694                     	;# 
  2596  070C                     	;# 
  2597  070D                     	;# 
  2598  070E                     	;# 
  2599  070F                     	;# 
  2600  0710                     	;# 
  2601  0711                     	;# 
  2602  0712                     	;# 
  2603  0713                     	;# 
  2604  0714                     	;# 
  2605  0716                     	;# 
  2606  0717                     	;# 
  2607  0718                     	;# 
  2608  0719                     	;# 
  2609  071A                     	;# 
  2610  071B                     	;# 
  2611  071C                     	;# 
  2612  071D                     	;# 
  2613  071E                     	;# 
  2614  0796                     	;# 
  2615  0797                     	;# 
  2616  0798                     	;# 
  2617  0799                     	;# 
  2618  079A                     	;# 
  2619  079B                     	;# 
  2620  080C                     	;# 
  2621  080D                     	;# 
  2622  080E                     	;# 
  2623  080F                     	;# 
  2624  0810                     	;# 
  2625  0811                     	;# 
  2626  0812                     	;# 
  2627  0813                     	;# 
  2628  0814                     	;# 
  2629  081A                     	;# 
  2630  081B                     	;# 
  2631  081C                     	;# 
  2632  081D                     	;# 
  2633  081E                     	;# 
  2634  081F                     	;# 
  2635  088C                     	;# 
  2636  088D                     	;# 
  2637  088E                     	;# 
  2638  088F                     	;# 
  2639  0890                     	;# 
  2640  0891                     	;# 
  2641  0892                     	;# 
  2642  0893                     	;# 
  2643  0895                     	;# 
  2644  0896                     	;# 
  2645  0897                     	;# 
  2646  0898                     	;# 
  2647  0899                     	;# 
  2648  089A                     	;# 
  2649  089B                     	;# 
  2650  090C                     	;# 
  2651  090E                     	;# 
  2652  090F                     	;# 
  2653  091F                     	;# 
  2654  091F                     	;# 
  2655  098F                     	;# 
  2656  098F                     	;# 
  2657  0990                     	;# 
  2658  0991                     	;# 
  2659  0992                     	;# 
  2660  0993                     	;# 
  2661  0994                     	;# 
  2662  0995                     	;# 
  2663  0996                     	;# 
  2664  0997                     	;# 
  2665  0E0F                     	;# 
  2666  0E10                     	;# 
  2667  0E11                     	;# 
  2668  0E12                     	;# 
  2669  0E13                     	;# 
  2670  0E14                     	;# 
  2671  0E15                     	;# 
  2672  0E16                     	;# 
  2673  0E17                     	;# 
  2674  0E18                     	;# 
  2675  0E19                     	;# 
  2676  0E1A                     	;# 
  2677  0E1B                     	;# 
  2678  0E1C                     	;# 
  2679  0E1D                     	;# 
  2680  0E1E                     	;# 
  2681  0E1F                     	;# 
  2682  0E20                     	;# 
  2683  0E21                     	;# 
  2684  0E22                     	;# 
  2685  0E23                     	;# 
  2686  0E24                     	;# 
  2687  0E25                     	;# 
  2688  0E26                     	;# 
  2689  0E27                     	;# 
  2690  0E28                     	;# 
  2691  0E29                     	;# 
  2692  0E2A                     	;# 
  2693  0E2B                     	;# 
  2694  0E2C                     	;# 
  2695  0E2D                     	;# 
  2696  0E2E                     	;# 
  2697  0E2F                     	;# 
  2698  0E30                     	;# 
  2699  0E31                     	;# 
  2700  0E32                     	;# 
  2701  0E33                     	;# 
  2702  0E34                     	;# 
  2703  0E35                     	;# 
  2704  0E36                     	;# 
  2705  0E37                     	;# 
  2706  0E8F                     	;# 
  2707  0E90                     	;# 
  2708  0E91                     	;# 
  2709  0E92                     	;# 
  2710  0E93                     	;# 
  2711  0E94                     	;# 
  2712  0E95                     	;# 
  2713  0E96                     	;# 
  2714  0E97                     	;# 
  2715  0E9C                     	;# 
  2716  0E9D                     	;# 
  2717  0E9E                     	;# 
  2718  0EA1                     	;# 
  2719  0EA2                     	;# 
  2720  0EA3                     	;# 
  2721  0EA4                     	;# 
  2722  0EA5                     	;# 
  2723  0EA9                     	;# 
  2724  0EAA                     	;# 
  2725  0EAB                     	;# 
  2726  0EAC                     	;# 
  2727  0EB1                     	;# 
  2728  0EB2                     	;# 
  2729  0EB3                     	;# 
  2730  0EB8                     	;# 
  2731  0EB9                     	;# 
  2732  0EBA                     	;# 
  2733  0EBB                     	;# 
  2734  0EBC                     	;# 
  2735  0EBD                     	;# 
  2736  0EBE                     	;# 
  2737  0EC3                     	;# 
  2738  0EC5                     	;# 
  2739  0EC6                     	;# 
  2740  0EC7                     	;# 
  2741  0EC8                     	;# 
  2742  0EC9                     	;# 
  2743  0ECA                     	;# 
  2744  0ECB                     	;# 
  2745  0ECC                     	;# 
  2746  0F10                     	;# 
  2747  0F11                     	;# 
  2748  0F12                     	;# 
  2749  0F13                     	;# 
  2750  0F14                     	;# 
  2751  0F15                     	;# 
  2752  0F16                     	;# 
  2753  0F17                     	;# 
  2754  0F18                     	;# 
  2755  0F19                     	;# 
  2756  0F1A                     	;# 
  2757  0F1B                     	;# 
  2758  0F1C                     	;# 
  2759  0F1D                     	;# 
  2760  0F1E                     	;# 
  2761  0F1F                     	;# 
  2762  0F20                     	;# 
  2763  0F21                     	;# 
  2764  0F22                     	;# 
  2765  0F23                     	;# 
  2766  0F24                     	;# 
  2767  0F25                     	;# 
  2768  0F26                     	;# 
  2769  0F27                     	;# 
  2770  0F28                     	;# 
  2771  0F29                     	;# 
  2772  0F2A                     	;# 
  2773  0F2B                     	;# 
  2774  0F2C                     	;# 
  2775  0F2D                     	;# 
  2776  0F2E                     	;# 
  2777  0F2F                     	;# 
  2778  0F30                     	;# 
  2779  0F31                     	;# 
  2780  0F32                     	;# 
  2781  0F38                     	;# 
  2782  0F39                     	;# 
  2783  0F3A                     	;# 
  2784  0F3B                     	;# 
  2785  0F3C                     	;# 
  2786  0F3D                     	;# 
  2787  0F3E                     	;# 
  2788  0F3F                     	;# 
  2789  0F40                     	;# 
  2790  0F41                     	;# 
  2791  0F43                     	;# 
  2792  0F44                     	;# 
  2793  0F45                     	;# 
  2794  0F46                     	;# 
  2795  0F47                     	;# 
  2796  0F48                     	;# 
  2797  0F49                     	;# 
  2798  0F4A                     	;# 
  2799  0F4B                     	;# 
  2800  0F4C                     	;# 
  2801  0F4E                     	;# 
  2802  0F4F                     	;# 
  2803  0F50                     	;# 
  2804  0F51                     	;# 
  2805  0F52                     	;# 
  2806  0F53                     	;# 
  2807  0F54                     	;# 
  2808  0F55                     	;# 
  2809  0F56                     	;# 
  2810  0F57                     	;# 
  2811  0F59                     	;# 
  2812  0F5A                     	;# 
  2813  0F5B                     	;# 
  2814  0F5C                     	;# 
  2815  0F5D                     	;# 
  2816  0F61                     	;# 
  2817  0F62                     	;# 
  2818  0F64                     	;# 
  2819  0F65                     	;# 
  2820  0F66                     	;# 
  2821  0F67                     	;# 
  2822  0F68                     	;# 
  2823  0F69                     	;# 
  2824  0F6A                     	;# 
  2825  0F6B                     	;# 
  2826  0F6C                     	;# 
  2827  0F6D                     	;# 
  2828  0FE4                     	;# 
  2829  0FE5                     	;# 
  2830  0FE6                     	;# 
  2831  0FE7                     	;# 
  2832  0FE8                     	;# 
  2833  0FE9                     	;# 
  2834  0FEA                     	;# 
  2835  0FEB                     	;# 
  2836  0FED                     	;# 
  2837  0FEE                     	;# 
  2838  0FEF                     	;# 
  2839  0000                     	;# 
  2840  0001                     	;# 
  2841  0002                     	;# 
  2842  0003                     	;# 
  2843  0004                     	;# 
  2844  0005                     	;# 
  2845  0006                     	;# 
  2846  0007                     	;# 
  2847  0008                     	;# 
  2848  0009                     	;# 
  2849  000A                     	;# 
  2850  000B                     	;# 
  2851  000C                     	;# 
  2852  000D                     	;# 
  2853  000E                     	;# 
  2854  000F                     	;# 
  2855  0010                     	;# 
  2856  0011                     	;# 
  2857  0012                     	;# 
  2858  0013                     	;# 
  2859  0014                     	;# 
  2860  0015                     	;# 
  2861  0016                     	;# 
  2862  0017                     	;# 
  2863  0018                     	;# 
  2864  0019                     	;# 
  2865  001A                     	;# 
  2866  001C                     	;# 
  2867  001C                     	;# 
  2868  001D                     	;# 
  2869  001D                     	;# 
  2870  001E                     	;# 
  2871  001F                     	;# 
  2872  008C                     	;# 
  2873  008C                     	;# 
  2874  008D                     	;# 
  2875  008E                     	;# 
  2876  008E                     	;# 
  2877  008F                     	;# 
  2878  0090                     	;# 
  2879  0090                     	;# 
  2880  0091                     	;# 
  2881  0093                     	;# 
  2882  0094                     	;# 
  2883  0095                     	;# 
  2884  0096                     	;# 
  2885  0097                     	;# 
  2886  0098                     	;# 
  2887  0099                     	;# 
  2888  009A                     	;# 
  2889  009B                     	;# 
  2890  009C                     	;# 
  2891  009D                     	;# 
  2892  009E                     	;# 
  2893  010C                     	;# 
  2894  010D                     	;# 
  2895  010E                     	;# 
  2896  010E                     	;# 
  2897  010F                     	;# 
  2898  0110                     	;# 
  2899  0110                     	;# 
  2900  0111                     	;# 
  2901  0112                     	;# 
  2902  0112                     	;# 
  2903  0113                     	;# 
  2904  0114                     	;# 
  2905  0114                     	;# 
  2906  0115                     	;# 
  2907  0116                     	;# 
  2908  0116                     	;# 
  2909  0117                     	;# 
  2910  0119                     	;# 
  2911  0119                     	;# 
  2912  0119                     	;# 
  2913  011A                     	;# 
  2914  011A                     	;# 
  2915  011A                     	;# 
  2916  011B                     	;# 
  2917  011B                     	;# 
  2918  011B                     	;# 
  2919  011B                     	;# 
  2920  011B                     	;# 
  2921  011C                     	;# 
  2922  011C                     	;# 
  2923  011C                     	;# 
  2924  011D                     	;# 
  2925  011D                     	;# 
  2926  011D                     	;# 
  2927  011E                     	;# 
  2928  011E                     	;# 
  2929  011E                     	;# 
  2930  011F                     	;# 
  2931  011F                     	;# 
  2932  011F                     	;# 
  2933  011F                     	;# 
  2934  011F                     	;# 
  2935  018C                     	;# 
  2936  018D                     	;# 
  2937  018E                     	;# 
  2938  018F                     	;# 
  2939  0190                     	;# 
  2940  0191                     	;# 
  2941  0192                     	;# 
  2942  0196                     	;# 
  2943  0197                     	;# 
  2944  0198                     	;# 
  2945  0199                     	;# 
  2946  019A                     	;# 
  2947  019B                     	;# 
  2948  019C                     	;# 
  2949  020C                     	;# 
  2950  020C                     	;# 
  2951  020D                     	;# 
  2952  020E                     	;# 
  2953  020F                     	;# 
  2954  020F                     	;# 
  2955  0210                     	;# 
  2956  0210                     	;# 
  2957  0211                     	;# 
  2958  0211                     	;# 
  2959  0212                     	;# 
  2960  0212                     	;# 
  2961  0213                     	;# 
  2962  0214                     	;# 
  2963  0215                     	;# 
  2964  0215                     	;# 
  2965  0216                     	;# 
  2966  0216                     	;# 
  2967  0217                     	;# 
  2968  0217                     	;# 
  2969  0218                     	;# 
  2970  0218                     	;# 
  2971  0219                     	;# 
  2972  021A                     	;# 
  2973  021B                     	;# 
  2974  021B                     	;# 
  2975  021C                     	;# 
  2976  021C                     	;# 
  2977  021D                     	;# 
  2978  021D                     	;# 
  2979  021E                     	;# 
  2980  021F                     	;# 
  2981  028C                     	;# 
  2982  028C                     	;# 
  2983  028D                     	;# 
  2984  028D                     	;# 
  2985  028E                     	;# 
  2986  028F                     	;# 
  2987  0290                     	;# 
  2988  0290                     	;# 
  2989  0291                     	;# 
  2990  0292                     	;# 
  2991  0292                     	;# 
  2992  0293                     	;# 
  2993  0293                     	;# 
  2994  0294                     	;# 
  2995  0295                     	;# 
  2996  0296                     	;# 
  2997  0296                     	;# 
  2998  0297                     	;# 
  2999  0298                     	;# 
  3000  0298                     	;# 
  3001  0299                     	;# 
  3002  0299                     	;# 
  3003  029A                     	;# 
  3004  029B                     	;# 
  3005  029C                     	;# 
  3006  029C                     	;# 
  3007  029D                     	;# 
  3008  030C                     	;# 
  3009  030C                     	;# 
  3010  030D                     	;# 
  3011  030E                     	;# 
  3012  030F                     	;# 
  3013  0310                     	;# 
  3014  0310                     	;# 
  3015  0311                     	;# 
  3016  0312                     	;# 
  3017  0313                     	;# 
  3018  0314                     	;# 
  3019  0314                     	;# 
  3020  0315                     	;# 
  3021  0316                     	;# 
  3022  0317                     	;# 
  3023  0318                     	;# 
  3024  0318                     	;# 
  3025  0319                     	;# 
  3026  031A                     	;# 
  3027  031B                     	;# 
  3028  031C                     	;# 
  3029  031C                     	;# 
  3030  031D                     	;# 
  3031  031E                     	;# 
  3032  031F                     	;# 
  3033  038C                     	;# 
  3034  038C                     	;# 
  3035  038D                     	;# 
  3036  038E                     	;# 
  3037  0390                     	;# 
  3038  0390                     	;# 
  3039  0391                     	;# 
  3040  0392                     	;# 
  3041  040C                     	;# 
  3042  040D                     	;# 
  3043  040E                     	;# 
  3044  040F                     	;# 
  3045  0410                     	;# 
  3046  0411                     	;# 
  3047  0416                     	;# 
  3048  0416                     	;# 
  3049  0417                     	;# 
  3050  0418                     	;# 
  3051  0418                     	;# 
  3052  0419                     	;# 
  3053  041A                     	;# 
  3054  041A                     	;# 
  3055  041B                     	;# 
  3056  041C                     	;# 
  3057  041C                     	;# 
  3058  041D                     	;# 
  3059  041E                     	;# 
  3060  041F                     	;# 
  3061  048C                     	;# 
  3062  048C                     	;# 
  3063  048D                     	;# 
  3064  048E                     	;# 
  3065  048F                     	;# 
  3066  048F                     	;# 
  3067  0490                     	;# 
  3068  0491                     	;# 
  3069  0492                     	;# 
  3070  0492                     	;# 
  3071  0493                     	;# 
  3072  0494                     	;# 
  3073  0495                     	;# 
  3074  0495                     	;# 
  3075  0496                     	;# 
  3076  0497                     	;# 
  3077  0498                     	;# 
  3078  0499                     	;# 
  3079  049A                     	;# 
  3080  049B                     	;# 
  3081  049C                     	;# 
  3082  049D                     	;# 
  3083  050C                     	;# 
  3084  050C                     	;# 
  3085  050D                     	;# 
  3086  050E                     	;# 
  3087  050F                     	;# 
  3088  050F                     	;# 
  3089  0510                     	;# 
  3090  0511                     	;# 
  3091  0512                     	;# 
  3092  0512                     	;# 
  3093  0513                     	;# 
  3094  0514                     	;# 
  3095  0515                     	;# 
  3096  0515                     	;# 
  3097  0516                     	;# 
  3098  0517                     	;# 
  3099  0518                     	;# 
  3100  0519                     	;# 
  3101  051A                     	;# 
  3102  051B                     	;# 
  3103  051C                     	;# 
  3104  051D                     	;# 
  3105  058C                     	;# 
  3106  058C                     	;# 
  3107  058D                     	;# 
  3108  058E                     	;# 
  3109  058F                     	;# 
  3110  058F                     	;# 
  3111  0590                     	;# 
  3112  0591                     	;# 
  3113  0592                     	;# 
  3114  0593                     	;# 
  3115  060C                     	;# 
  3116  060D                     	;# 
  3117  060E                     	;# 
  3118  060F                     	;# 
  3119  0610                     	;# 
  3120  0611                     	;# 
  3121  0612                     	;# 
  3122  0613                     	;# 
  3123  0614                     	;# 
  3124  0616                     	;# 
  3125  0617                     	;# 
  3126  0618                     	;# 
  3127  0619                     	;# 
  3128  061A                     	;# 
  3129  061B                     	;# 
  3130  061C                     	;# 
  3131  061D                     	;# 
  3132  061E                     	;# 
  3133  068C                     	;# 
  3134  068D                     	;# 
  3135  068E                     	;# 
  3136  068F                     	;# 
  3137  0690                     	;# 
  3138  0691                     	;# 
  3139  0692                     	;# 
  3140  0693                     	;# 
  3141  0694                     	;# 
  3142  070C                     	;# 
  3143  070D                     	;# 
  3144  070E                     	;# 
  3145  070F                     	;# 
  3146  0710                     	;# 
  3147  0711                     	;# 
  3148  0712                     	;# 
  3149  0713                     	;# 
  3150  0714                     	;# 
  3151  0716                     	;# 
  3152  0717                     	;# 
  3153  0718                     	;# 
  3154  0719                     	;# 
  3155  071A                     	;# 
  3156  071B                     	;# 
  3157  071C                     	;# 
  3158  071D                     	;# 
  3159  071E                     	;# 
  3160  0796                     	;# 
  3161  0797                     	;# 
  3162  0798                     	;# 
  3163  0799                     	;# 
  3164  079A                     	;# 
  3165  079B                     	;# 
  3166  080C                     	;# 
  3167  080D                     	;# 
  3168  080E                     	;# 
  3169  080F                     	;# 
  3170  0810                     	;# 
  3171  0811                     	;# 
  3172  0812                     	;# 
  3173  0813                     	;# 
  3174  0814                     	;# 
  3175  081A                     	;# 
  3176  081B                     	;# 
  3177  081C                     	;# 
  3178  081D                     	;# 
  3179  081E                     	;# 
  3180  081F                     	;# 
  3181  088C                     	;# 
  3182  088D                     	;# 
  3183  088E                     	;# 
  3184  088F                     	;# 
  3185  0890                     	;# 
  3186  0891                     	;# 
  3187  0892                     	;# 
  3188  0893                     	;# 
  3189  0895                     	;# 
  3190  0896                     	;# 
  3191  0897                     	;# 
  3192  0898                     	;# 
  3193  0899                     	;# 
  3194  089A                     	;# 
  3195  089B                     	;# 
  3196  090C                     	;# 
  3197  090E                     	;# 
  3198  090F                     	;# 
  3199  091F                     	;# 
  3200  091F                     	;# 
  3201  098F                     	;# 
  3202  098F                     	;# 
  3203  0990                     	;# 
  3204  0991                     	;# 
  3205  0992                     	;# 
  3206  0993                     	;# 
  3207  0994                     	;# 
  3208  0995                     	;# 
  3209  0996                     	;# 
  3210  0997                     	;# 
  3211  0E0F                     	;# 
  3212  0E10                     	;# 
  3213  0E11                     	;# 
  3214  0E12                     	;# 
  3215  0E13                     	;# 
  3216  0E14                     	;# 
  3217  0E15                     	;# 
  3218  0E16                     	;# 
  3219  0E17                     	;# 
  3220  0E18                     	;# 
  3221  0E19                     	;# 
  3222  0E1A                     	;# 
  3223  0E1B                     	;# 
  3224  0E1C                     	;# 
  3225  0E1D                     	;# 
  3226  0E1E                     	;# 
  3227  0E1F                     	;# 
  3228  0E20                     	;# 
  3229  0E21                     	;# 
  3230  0E22                     	;# 
  3231  0E23                     	;# 
  3232  0E24                     	;# 
  3233  0E25                     	;# 
  3234  0E26                     	;# 
  3235  0E27                     	;# 
  3236  0E28                     	;# 
  3237  0E29                     	;# 
  3238  0E2A                     	;# 
  3239  0E2B                     	;# 
  3240  0E2C                     	;# 
  3241  0E2D                     	;# 
  3242  0E2E                     	;# 
  3243  0E2F                     	;# 
  3244  0E30                     	;# 
  3245  0E31                     	;# 
  3246  0E32                     	;# 
  3247  0E33                     	;# 
  3248  0E34                     	;# 
  3249  0E35                     	;# 
  3250  0E36                     	;# 
  3251  0E37                     	;# 
  3252  0E8F                     	;# 
  3253  0E90                     	;# 
  3254  0E91                     	;# 
  3255  0E92                     	;# 
  3256  0E93                     	;# 
  3257  0E94                     	;# 
  3258  0E95                     	;# 
  3259  0E96                     	;# 
  3260  0E97                     	;# 
  3261  0E9C                     	;# 
  3262  0E9D                     	;# 
  3263  0E9E                     	;# 
  3264  0EA1                     	;# 
  3265  0EA2                     	;# 
  3266  0EA3                     	;# 
  3267  0EA4                     	;# 
  3268  0EA5                     	;# 
  3269  0EA9                     	;# 
  3270  0EAA                     	;# 
  3271  0EAB                     	;# 
  3272  0EAC                     	;# 
  3273  0EB1                     	;# 
  3274  0EB2                     	;# 
  3275  0EB3                     	;# 
  3276  0EB8                     	;# 
  3277  0EB9                     	;# 
  3278  0EBA                     	;# 
  3279  0EBB                     	;# 
  3280  0EBC                     	;# 
  3281  0EBD                     	;# 
  3282  0EBE                     	;# 
  3283  0EC3                     	;# 
  3284  0EC5                     	;# 
  3285  0EC6                     	;# 
  3286  0EC7                     	;# 
  3287  0EC8                     	;# 
  3288  0EC9                     	;# 
  3289  0ECA                     	;# 
  3290  0ECB                     	;# 
  3291  0ECC                     	;# 
  3292  0F10                     	;# 
  3293  0F11                     	;# 
  3294  0F12                     	;# 
  3295  0F13                     	;# 
  3296  0F14                     	;# 
  3297  0F15                     	;# 
  3298  0F16                     	;# 
  3299  0F17                     	;# 
  3300  0F18                     	;# 
  3301  0F19                     	;# 
  3302  0F1A                     	;# 
  3303  0F1B                     	;# 
  3304  0F1C                     	;# 
  3305  0F1D                     	;# 
  3306  0F1E                     	;# 
  3307  0F1F                     	;# 
  3308  0F20                     	;# 
  3309  0F21                     	;# 
  3310  0F22                     	;# 
  3311  0F23                     	;# 
  3312  0F24                     	;# 
  3313  0F25                     	;# 
  3314  0F26                     	;# 
  3315  0F27                     	;# 
  3316  0F28                     	;# 
  3317  0F29                     	;# 
  3318  0F2A                     	;# 
  3319  0F2B                     	;# 
  3320  0F2C                     	;# 
  3321  0F2D                     	;# 
  3322  0F2E                     	;# 
  3323  0F2F                     	;# 
  3324  0F30                     	;# 
  3325  0F31                     	;# 
  3326  0F32                     	;# 
  3327  0F38                     	;# 
  3328  0F39                     	;# 
  3329  0F3A                     	;# 
  3330  0F3B                     	;# 
  3331  0F3C                     	;# 
  3332  0F3D                     	;# 
  3333  0F3E                     	;# 
  3334  0F3F                     	;# 
  3335  0F40                     	;# 
  3336  0F41                     	;# 
  3337  0F43                     	;# 
  3338  0F44                     	;# 
  3339  0F45                     	;# 
  3340  0F46                     	;# 
  3341  0F47                     	;# 
  3342  0F48                     	;# 
  3343  0F49                     	;# 
  3344  0F4A                     	;# 
  3345  0F4B                     	;# 
  3346  0F4C                     	;# 
  3347  0F4E                     	;# 
  3348  0F4F                     	;# 
  3349  0F50                     	;# 
  3350  0F51                     	;# 
  3351  0F52                     	;# 
  3352  0F53                     	;# 
  3353  0F54                     	;# 
  3354  0F55                     	;# 
  3355  0F56                     	;# 
  3356  0F57                     	;# 
  3357  0F59                     	;# 
  3358  0F5A                     	;# 
  3359  0F5B                     	;# 
  3360  0F5C                     	;# 
  3361  0F5D                     	;# 
  3362  0F61                     	;# 
  3363  0F62                     	;# 
  3364  0F64                     	;# 
  3365  0F65                     	;# 
  3366  0F66                     	;# 
  3367  0F67                     	;# 
  3368  0F68                     	;# 
  3369  0F69                     	;# 
  3370  0F6A                     	;# 
  3371  0F6B                     	;# 
  3372  0F6C                     	;# 
  3373  0F6D                     	;# 
  3374  0FE4                     	;# 
  3375  0FE5                     	;# 
  3376  0FE6                     	;# 
  3377  0FE7                     	;# 
  3378  0FE8                     	;# 
  3379  0FE9                     	;# 
  3380  0FEA                     	;# 
  3381  0FEB                     	;# 
  3382  0FED                     	;# 
  3383  0FEE                     	;# 
  3384  0FEF                     	;# 
  3385  0000                     	;# 
  3386  0001                     	;# 
  3387  0002                     	;# 
  3388  0003                     	;# 
  3389  0004                     	;# 
  3390  0005                     	;# 
  3391  0006                     	;# 
  3392  0007                     	;# 
  3393  0008                     	;# 
  3394  0009                     	;# 
  3395  000A                     	;# 
  3396  000B                     	;# 
  3397  000C                     	;# 
  3398  000D                     	;# 
  3399  000E                     	;# 
  3400  000F                     	;# 
  3401  0010                     	;# 
  3402  0011                     	;# 
  3403  0012                     	;# 
  3404  0013                     	;# 
  3405  0014                     	;# 
  3406  0015                     	;# 
  3407  0016                     	;# 
  3408  0017                     	;# 
  3409  0018                     	;# 
  3410  0019                     	;# 
  3411  001A                     	;# 
  3412  001C                     	;# 
  3413  001C                     	;# 
  3414  001D                     	;# 
  3415  001D                     	;# 
  3416  001E                     	;# 
  3417  001F                     	;# 
  3418  008C                     	;# 
  3419  008C                     	;# 
  3420  008D                     	;# 
  3421  008E                     	;# 
  3422  008E                     	;# 
  3423  008F                     	;# 
  3424  0090                     	;# 
  3425  0090                     	;# 
  3426  0091                     	;# 
  3427  0093                     	;# 
  3428  0094                     	;# 
  3429  0095                     	;# 
  3430  0096                     	;# 
  3431  0097                     	;# 
  3432  0098                     	;# 
  3433  0099                     	;# 
  3434  009A                     	;# 
  3435  009B                     	;# 
  3436  009C                     	;# 
  3437  009D                     	;# 
  3438  009E                     	;# 
  3439  010C                     	;# 
  3440  010D                     	;# 
  3441  010E                     	;# 
  3442  010E                     	;# 
  3443  010F                     	;# 
  3444  0110                     	;# 
  3445  0110                     	;# 
  3446  0111                     	;# 
  3447  0112                     	;# 
  3448  0112                     	;# 
  3449  0113                     	;# 
  3450  0114                     	;# 
  3451  0114                     	;# 
  3452  0115                     	;# 
  3453  0116                     	;# 
  3454  0116                     	;# 
  3455  0117                     	;# 
  3456  0119                     	;# 
  3457  0119                     	;# 
  3458  0119                     	;# 
  3459  011A                     	;# 
  3460  011A                     	;# 
  3461  011A                     	;# 
  3462  011B                     	;# 
  3463  011B                     	;# 
  3464  011B                     	;# 
  3465  011B                     	;# 
  3466  011B                     	;# 
  3467  011C                     	;# 
  3468  011C                     	;# 
  3469  011C                     	;# 
  3470  011D                     	;# 
  3471  011D                     	;# 
  3472  011D                     	;# 
  3473  011E                     	;# 
  3474  011E                     	;# 
  3475  011E                     	;# 
  3476  011F                     	;# 
  3477  011F                     	;# 
  3478  011F                     	;# 
  3479  011F                     	;# 
  3480  011F                     	;# 
  3481  018C                     	;# 
  3482  018D                     	;# 
  3483  018E                     	;# 
  3484  018F                     	;# 
  3485  0190                     	;# 
  3486  0191                     	;# 
  3487  0192                     	;# 
  3488  0196                     	;# 
  3489  0197                     	;# 
  3490  0198                     	;# 
  3491  0199                     	;# 
  3492  019A                     	;# 
  3493  019B                     	;# 
  3494  019C                     	;# 
  3495  020C                     	;# 
  3496  020C                     	;# 
  3497  020D                     	;# 
  3498  020E                     	;# 
  3499  020F                     	;# 
  3500  020F                     	;# 
  3501  0210                     	;# 
  3502  0210                     	;# 
  3503  0211                     	;# 
  3504  0211                     	;# 
  3505  0212                     	;# 
  3506  0212                     	;# 
  3507  0213                     	;# 
  3508  0214                     	;# 
  3509  0215                     	;# 
  3510  0215                     	;# 
  3511  0216                     	;# 
  3512  0216                     	;# 
  3513  0217                     	;# 
  3514  0217                     	;# 
  3515  0218                     	;# 
  3516  0218                     	;# 
  3517  0219                     	;# 
  3518  021A                     	;# 
  3519  021B                     	;# 
  3520  021B                     	;# 
  3521  021C                     	;# 
  3522  021C                     	;# 
  3523  021D                     	;# 
  3524  021D                     	;# 
  3525  021E                     	;# 
  3526  021F                     	;# 
  3527  028C                     	;# 
  3528  028C                     	;# 
  3529  028D                     	;# 
  3530  028D                     	;# 
  3531  028E                     	;# 
  3532  028F                     	;# 
  3533  0290                     	;# 
  3534  0290                     	;# 
  3535  0291                     	;# 
  3536  0292                     	;# 
  3537  0292                     	;# 
  3538  0293                     	;# 
  3539  0293                     	;# 
  3540  0294                     	;# 
  3541  0295                     	;# 
  3542  0296                     	;# 
  3543  0296                     	;# 
  3544  0297                     	;# 
  3545  0298                     	;# 
  3546  0298                     	;# 
  3547  0299                     	;# 
  3548  0299                     	;# 
  3549  029A                     	;# 
  3550  029B                     	;# 
  3551  029C                     	;# 
  3552  029C                     	;# 
  3553  029D                     	;# 
  3554  030C                     	;# 
  3555  030C                     	;# 
  3556  030D                     	;# 
  3557  030E                     	;# 
  3558  030F                     	;# 
  3559  0310                     	;# 
  3560  0310                     	;# 
  3561  0311                     	;# 
  3562  0312                     	;# 
  3563  0313                     	;# 
  3564  0314                     	;# 
  3565  0314                     	;# 
  3566  0315                     	;# 
  3567  0316                     	;# 
  3568  0317                     	;# 
  3569  0318                     	;# 
  3570  0318                     	;# 
  3571  0319                     	;# 
  3572  031A                     	;# 
  3573  031B                     	;# 
  3574  031C                     	;# 
  3575  031C                     	;# 
  3576  031D                     	;# 
  3577  031E                     	;# 
  3578  031F                     	;# 
  3579  038C                     	;# 
  3580  038C                     	;# 
  3581  038D                     	;# 
  3582  038E                     	;# 
  3583  0390                     	;# 
  3584  0390                     	;# 
  3585  0391                     	;# 
  3586  0392                     	;# 
  3587  040C                     	;# 
  3588  040D                     	;# 
  3589  040E                     	;# 
  3590  040F                     	;# 
  3591  0410                     	;# 
  3592  0411                     	;# 
  3593  0416                     	;# 
  3594  0416                     	;# 
  3595  0417                     	;# 
  3596  0418                     	;# 
  3597  0418                     	;# 
  3598  0419                     	;# 
  3599  041A                     	;# 
  3600  041A                     	;# 
  3601  041B                     	;# 
  3602  041C                     	;# 
  3603  041C                     	;# 
  3604  041D                     	;# 
  3605  041E                     	;# 
  3606  041F                     	;# 
  3607  048C                     	;# 
  3608  048C                     	;# 
  3609  048D                     	;# 
  3610  048E                     	;# 
  3611  048F                     	;# 
  3612  048F                     	;# 
  3613  0490                     	;# 
  3614  0491                     	;# 
  3615  0492                     	;# 
  3616  0492                     	;# 
  3617  0493                     	;# 
  3618  0494                     	;# 
  3619  0495                     	;# 
  3620  0495                     	;# 
  3621  0496                     	;# 
  3622  0497                     	;# 
  3623  0498                     	;# 
  3624  0499                     	;# 
  3625  049A                     	;# 
  3626  049B                     	;# 
  3627  049C                     	;# 
  3628  049D                     	;# 
  3629  050C                     	;# 
  3630  050C                     	;# 
  3631  050D                     	;# 
  3632  050E                     	;# 
  3633  050F                     	;# 
  3634  050F                     	;# 
  3635  0510                     	;# 
  3636  0511                     	;# 
  3637  0512                     	;# 
  3638  0512                     	;# 
  3639  0513                     	;# 
  3640  0514                     	;# 
  3641  0515                     	;# 
  3642  0515                     	;# 
  3643  0516                     	;# 
  3644  0517                     	;# 
  3645  0518                     	;# 
  3646  0519                     	;# 
  3647  051A                     	;# 
  3648  051B                     	;# 
  3649  051C                     	;# 
  3650  051D                     	;# 
  3651  058C                     	;# 
  3652  058C                     	;# 
  3653  058D                     	;# 
  3654  058E                     	;# 
  3655  058F                     	;# 
  3656  058F                     	;# 
  3657  0590                     	;# 
  3658  0591                     	;# 
  3659  0592                     	;# 
  3660  0593                     	;# 
  3661  060C                     	;# 
  3662  060D                     	;# 
  3663  060E                     	;# 
  3664  060F                     	;# 
  3665  0610                     	;# 
  3666  0611                     	;# 
  3667  0612                     	;# 
  3668  0613                     	;# 
  3669  0614                     	;# 
  3670  0616                     	;# 
  3671  0617                     	;# 
  3672  0618                     	;# 
  3673  0619                     	;# 
  3674  061A                     	;# 
  3675  061B                     	;# 
  3676  061C                     	;# 
  3677  061D                     	;# 
  3678  061E                     	;# 
  3679  068C                     	;# 
  3680  068D                     	;# 
  3681  068E                     	;# 
  3682  068F                     	;# 
  3683  0690                     	;# 
  3684  0691                     	;# 
  3685  0692                     	;# 
  3686  0693                     	;# 
  3687  0694                     	;# 
  3688  070C                     	;# 
  3689  070D                     	;# 
  3690  070E                     	;# 
  3691  070F                     	;# 
  3692  0710                     	;# 
  3693  0711                     	;# 
  3694  0712                     	;# 
  3695  0713                     	;# 
  3696  0714                     	;# 
  3697  0716                     	;# 
  3698  0717                     	;# 
  3699  0718                     	;# 
  3700  0719                     	;# 
  3701  071A                     	;# 
  3702  071B                     	;# 
  3703  071C                     	;# 
  3704  071D                     	;# 
  3705  071E                     	;# 
  3706  0796                     	;# 
  3707  0797                     	;# 
  3708  0798                     	;# 
  3709  0799                     	;# 
  3710  079A                     	;# 
  3711  079B                     	;# 
  3712  080C                     	;# 
  3713  080D                     	;# 
  3714  080E                     	;# 
  3715  080F                     	;# 
  3716  0810                     	;# 
  3717  0811                     	;# 
  3718  0812                     	;# 
  3719  0813                     	;# 
  3720  0814                     	;# 
  3721  081A                     	;# 
  3722  081B                     	;# 
  3723  081C                     	;# 
  3724  081D                     	;# 
  3725  081E                     	;# 
  3726  081F                     	;# 
  3727  088C                     	;# 
  3728  088D                     	;# 
  3729  088E                     	;# 
  3730  088F                     	;# 
  3731  0890                     	;# 
  3732  0891                     	;# 
  3733  0892                     	;# 
  3734  0893                     	;# 
  3735  0895                     	;# 
  3736  0896                     	;# 
  3737  0897                     	;# 
  3738  0898                     	;# 
  3739  0899                     	;# 
  3740  089A                     	;# 
  3741  089B                     	;# 
  3742  090C                     	;# 
  3743  090E                     	;# 
  3744  090F                     	;# 
  3745  091F                     	;# 
  3746  091F                     	;# 
  3747  098F                     	;# 
  3748  098F                     	;# 
  3749  0990                     	;# 
  3750  0991                     	;# 
  3751  0992                     	;# 
  3752  0993                     	;# 
  3753  0994                     	;# 
  3754  0995                     	;# 
  3755  0996                     	;# 
  3756  0997                     	;# 
  3757  0E0F                     	;# 
  3758  0E10                     	;# 
  3759  0E11                     	;# 
  3760  0E12                     	;# 
  3761  0E13                     	;# 
  3762  0E14                     	;# 
  3763  0E15                     	;# 
  3764  0E16                     	;# 
  3765  0E17                     	;# 
  3766  0E18                     	;# 
  3767  0E19                     	;# 
  3768  0E1A                     	;# 
  3769  0E1B                     	;# 
  3770  0E1C                     	;# 
  3771  0E1D                     	;# 
  3772  0E1E                     	;# 
  3773  0E1F                     	;# 
  3774  0E20                     	;# 
  3775  0E21                     	;# 
  3776  0E22                     	;# 
  3777  0E23                     	;# 
  3778  0E24                     	;# 
  3779  0E25                     	;# 
  3780  0E26                     	;# 
  3781  0E27                     	;# 
  3782  0E28                     	;# 
  3783  0E29                     	;# 
  3784  0E2A                     	;# 
  3785  0E2B                     	;# 
  3786  0E2C                     	;# 
  3787  0E2D                     	;# 
  3788  0E2E                     	;# 
  3789  0E2F                     	;# 
  3790  0E30                     	;# 
  3791  0E31                     	;# 
  3792  0E32                     	;# 
  3793  0E33                     	;# 
  3794  0E34                     	;# 
  3795  0E35                     	;# 
  3796  0E36                     	;# 
  3797  0E37                     	;# 
  3798  0E8F                     	;# 
  3799  0E90                     	;# 
  3800  0E91                     	;# 
  3801  0E92                     	;# 
  3802  0E93                     	;# 
  3803  0E94                     	;# 
  3804  0E95                     	;# 
  3805  0E96                     	;# 
  3806  0E97                     	;# 
  3807  0E9C                     	;# 
  3808  0E9D                     	;# 
  3809  0E9E                     	;# 
  3810  0EA1                     	;# 
  3811  0EA2                     	;# 
  3812  0EA3                     	;# 
  3813  0EA4                     	;# 
  3814  0EA5                     	;# 
  3815  0EA9                     	;# 
  3816  0EAA                     	;# 
  3817  0EAB                     	;# 
  3818  0EAC                     	;# 
  3819  0EB1                     	;# 
  3820  0EB2                     	;# 
  3821  0EB3                     	;# 
  3822  0EB8                     	;# 
  3823  0EB9                     	;# 
  3824  0EBA                     	;# 
  3825  0EBB                     	;# 
  3826  0EBC                     	;# 
  3827  0EBD                     	;# 
  3828  0EBE                     	;# 
  3829  0EC3                     	;# 
  3830  0EC5                     	;# 
  3831  0EC6                     	;# 
  3832  0EC7                     	;# 
  3833  0EC8                     	;# 
  3834  0EC9                     	;# 
  3835  0ECA                     	;# 
  3836  0ECB                     	;# 
  3837  0ECC                     	;# 
  3838  0F10                     	;# 
  3839  0F11                     	;# 
  3840  0F12                     	;# 
  3841  0F13                     	;# 
  3842  0F14                     	;# 
  3843  0F15                     	;# 
  3844  0F16                     	;# 
  3845  0F17                     	;# 
  3846  0F18                     	;# 
  3847  0F19                     	;# 
  3848  0F1A                     	;# 
  3849  0F1B                     	;# 
  3850  0F1C                     	;# 
  3851  0F1D                     	;# 
  3852  0F1E                     	;# 
  3853  0F1F                     	;# 
  3854  0F20                     	;# 
  3855  0F21                     	;# 
  3856  0F22                     	;# 
  3857  0F23                     	;# 
  3858  0F24                     	;# 
  3859  0F25                     	;# 
  3860  0F26                     	;# 
  3861  0F27                     	;# 
  3862  0F28                     	;# 
  3863  0F29                     	;# 
  3864  0F2A                     	;# 
  3865  0F2B                     	;# 
  3866  0F2C                     	;# 
  3867  0F2D                     	;# 
  3868  0F2E                     	;# 
  3869  0F2F                     	;# 
  3870  0F30                     	;# 
  3871  0F31                     	;# 
  3872  0F32                     	;# 
  3873  0F38                     	;# 
  3874  0F39                     	;# 
  3875  0F3A                     	;# 
  3876  0F3B                     	;# 
  3877  0F3C                     	;# 
  3878  0F3D                     	;# 
  3879  0F3E                     	;# 
  3880  0F3F                     	;# 
  3881  0F40                     	;# 
  3882  0F41                     	;# 
  3883  0F43                     	;# 
  3884  0F44                     	;# 
  3885  0F45                     	;# 
  3886  0F46                     	;# 
  3887  0F47                     	;# 
  3888  0F48                     	;# 
  3889  0F49                     	;# 
  3890  0F4A                     	;# 
  3891  0F4B                     	;# 
  3892  0F4C                     	;# 
  3893  0F4E                     	;# 
  3894  0F4F                     	;# 
  3895  0F50                     	;# 
  3896  0F51                     	;# 
  3897  0F52                     	;# 
  3898  0F53                     	;# 
  3899  0F54                     	;# 
  3900  0F55                     	;# 
  3901  0F56                     	;# 
  3902  0F57                     	;# 
  3903  0F59                     	;# 
  3904  0F5A                     	;# 
  3905  0F5B                     	;# 
  3906  0F5C                     	;# 
  3907  0F5D                     	;# 
  3908  0F61                     	;# 
  3909  0F62                     	;# 
  3910  0F64                     	;# 
  3911  0F65                     	;# 
  3912  0F66                     	;# 
  3913  0F67                     	;# 
  3914  0F68                     	;# 
  3915  0F69                     	;# 
  3916  0F6A                     	;# 
  3917  0F6B                     	;# 
  3918  0F6C                     	;# 
  3919  0F6D                     	;# 
  3920  0FE4                     	;# 
  3921  0FE5                     	;# 
  3922  0FE6                     	;# 
  3923  0FE7                     	;# 
  3924  0FE8                     	;# 
  3925  0FE9                     	;# 
  3926  0FEA                     	;# 
  3927  0FEB                     	;# 
  3928  0FED                     	;# 
  3929  0FEE                     	;# 
  3930  0FEF                     	;# 
  3931  0000                     	;# 
  3932  0001                     	;# 
  3933  0002                     	;# 
  3934  0003                     	;# 
  3935  0004                     	;# 
  3936  0005                     	;# 
  3937  0006                     	;# 
  3938  0007                     	;# 
  3939  0008                     	;# 
  3940  0009                     	;# 
  3941  000A                     	;# 
  3942  000B                     	;# 
  3943  000C                     	;# 
  3944  000D                     	;# 
  3945  000E                     	;# 
  3946  000F                     	;# 
  3947  0010                     	;# 
  3948  0011                     	;# 
  3949  0012                     	;# 
  3950  0013                     	;# 
  3951  0014                     	;# 
  3952  0015                     	;# 
  3953  0016                     	;# 
  3954  0017                     	;# 
  3955  0018                     	;# 
  3956  0019                     	;# 
  3957  001A                     	;# 
  3958  001C                     	;# 
  3959  001C                     	;# 
  3960  001D                     	;# 
  3961  001D                     	;# 
  3962  001E                     	;# 
  3963  001F                     	;# 
  3964  008C                     	;# 
  3965  008C                     	;# 
  3966  008D                     	;# 
  3967  008E                     	;# 
  3968  008E                     	;# 
  3969  008F                     	;# 
  3970  0090                     	;# 
  3971  0090                     	;# 
  3972  0091                     	;# 
  3973  0093                     	;# 
  3974  0094                     	;# 
  3975  0095                     	;# 
  3976  0096                     	;# 
  3977  0097                     	;# 
  3978  0098                     	;# 
  3979  0099                     	;# 
  3980  009A                     	;# 
  3981  009B                     	;# 
  3982  009C                     	;# 
  3983  009D                     	;# 
  3984  009E                     	;# 
  3985  010C                     	;# 
  3986  010D                     	;# 
  3987  010E                     	;# 
  3988  010E                     	;# 
  3989  010F                     	;# 
  3990  0110                     	;# 
  3991  0110                     	;# 
  3992  0111                     	;# 
  3993  0112                     	;# 
  3994  0112                     	;# 
  3995  0113                     	;# 
  3996  0114                     	;# 
  3997  0114                     	;# 
  3998  0115                     	;# 
  3999  0116                     	;# 
  4000  0116                     	;# 
  4001  0117                     	;# 
  4002  0119                     	;# 
  4003  0119                     	;# 
  4004  0119                     	;# 
  4005  011A                     	;# 
  4006  011A                     	;# 
  4007  011A                     	;# 
  4008  011B                     	;# 
  4009  011B                     	;# 
  4010  011B                     	;# 
  4011  011B                     	;# 
  4012  011B                     	;# 
  4013  011C                     	;# 
  4014  011C                     	;# 
  4015  011C                     	;# 
  4016  011D                     	;# 
  4017  011D                     	;# 
  4018  011D                     	;# 
  4019  011E                     	;# 
  4020  011E                     	;# 
  4021  011E                     	;# 
  4022  011F                     	;# 
  4023  011F                     	;# 
  4024  011F                     	;# 
  4025  011F                     	;# 
  4026  011F                     	;# 
  4027  018C                     	;# 
  4028  018D                     	;# 
  4029  018E                     	;# 
  4030  018F                     	;# 
  4031  0190                     	;# 
  4032  0191                     	;# 
  4033  0192                     	;# 
  4034  0196                     	;# 
  4035  0197                     	;# 
  4036  0198                     	;# 
  4037  0199                     	;# 
  4038  019A                     	;# 
  4039  019B                     	;# 
  4040  019C                     	;# 
  4041  020C                     	;# 
  4042  020C                     	;# 
  4043  020D                     	;# 
  4044  020E                     	;# 
  4045  020F                     	;# 
  4046  020F                     	;# 
  4047  0210                     	;# 
  4048  0210                     	;# 
  4049  0211                     	;# 
  4050  0211                     	;# 
  4051  0212                     	;# 
  4052  0212                     	;# 
  4053  0213                     	;# 
  4054  0214                     	;# 
  4055  0215                     	;# 
  4056  0215                     	;# 
  4057  0216                     	;# 
  4058  0216                     	;# 
  4059  0217                     	;# 
  4060  0217                     	;# 
  4061  0218                     	;# 
  4062  0218                     	;# 
  4063  0219                     	;# 
  4064  021A                     	;# 
  4065  021B                     	;# 
  4066  021B                     	;# 
  4067  021C                     	;# 
  4068  021C                     	;# 
  4069  021D                     	;# 
  4070  021D                     	;# 
  4071  021E                     	;# 
  4072  021F                     	;# 
  4073  028C                     	;# 
  4074  028C                     	;# 
  4075  028D                     	;# 
  4076  028D                     	;# 
  4077  028E                     	;# 
  4078  028F                     	;# 
  4079  0290                     	;# 
  4080  0290                     	;# 
  4081  0291                     	;# 
  4082  0292                     	;# 
  4083  0292                     	;# 
  4084  0293                     	;# 
  4085  0293                     	;# 
  4086  0294                     	;# 
  4087  0295                     	;# 
  4088  0296                     	;# 
  4089  0296                     	;# 
  4090  0297                     	;# 
  4091  0298                     	;# 
  4092  0298                     	;# 
  4093  0299                     	;# 
  4094  0299                     	;# 
  4095  029A                     	;# 
  4096  029B                     	;# 
  4097  029C                     	;# 
  4098  029C                     	;# 
  4099  029D                     	;# 
  4100  030C                     	;# 
  4101  030C                     	;# 
  4102  030D                     	;# 
  4103  030E                     	;# 
  4104  030F                     	;# 
  4105  0310                     	;# 
  4106  0310                     	;# 
  4107  0311                     	;# 
  4108  0312                     	;# 
  4109  0313                     	;# 
  4110  0314                     	;# 
  4111  0314                     	;# 
  4112  0315                     	;# 
  4113  0316                     	;# 
  4114  0317                     	;# 
  4115  0318                     	;# 
  4116  0318                     	;# 
  4117  0319                     	;# 
  4118  031A                     	;# 
  4119  031B                     	;# 
  4120  031C                     	;# 
  4121  031C                     	;# 
  4122  031D                     	;# 
  4123  031E                     	;# 
  4124  031F                     	;# 
  4125  038C                     	;# 
  4126  038C                     	;# 
  4127  038D                     	;# 
  4128  038E                     	;# 
  4129  0390                     	;# 
  4130  0390                     	;# 
  4131  0391                     	;# 
  4132  0392                     	;# 
  4133  040C                     	;# 
  4134  040D                     	;# 
  4135  040E                     	;# 
  4136  040F                     	;# 
  4137  0410                     	;# 
  4138  0411                     	;# 
  4139  0416                     	;# 
  4140  0416                     	;# 
  4141  0417                     	;# 
  4142  0418                     	;# 
  4143  0418                     	;# 
  4144  0419                     	;# 
  4145  041A                     	;# 
  4146  041A                     	;# 
  4147  041B                     	;# 
  4148  041C                     	;# 
  4149  041C                     	;# 
  4150  041D                     	;# 
  4151  041E                     	;# 
  4152  041F                     	;# 
  4153  048C                     	;# 
  4154  048C                     	;# 
  4155  048D                     	;# 
  4156  048E                     	;# 
  4157  048F                     	;# 
  4158  048F                     	;# 
  4159  0490                     	;# 
  4160  0491                     	;# 
  4161  0492                     	;# 
  4162  0492                     	;# 
  4163  0493                     	;# 
  4164  0494                     	;# 
  4165  0495                     	;# 
  4166  0495                     	;# 
  4167  0496                     	;# 
  4168  0497                     	;# 
  4169  0498                     	;# 
  4170  0499                     	;# 
  4171  049A                     	;# 
  4172  049B                     	;# 
  4173  049C                     	;# 
  4174  049D                     	;# 
  4175  050C                     	;# 
  4176  050C                     	;# 
  4177  050D                     	;# 
  4178  050E                     	;# 
  4179  050F                     	;# 
  4180  050F                     	;# 
  4181  0510                     	;# 
  4182  0511                     	;# 
  4183  0512                     	;# 
  4184  0512                     	;# 
  4185  0513                     	;# 
  4186  0514                     	;# 
  4187  0515                     	;# 
  4188  0515                     	;# 
  4189  0516                     	;# 
  4190  0517                     	;# 
  4191  0518                     	;# 
  4192  0519                     	;# 
  4193  051A                     	;# 
  4194  051B                     	;# 
  4195  051C                     	;# 
  4196  051D                     	;# 
  4197  058C                     	;# 
  4198  058C                     	;# 
  4199  058D                     	;# 
  4200  058E                     	;# 
  4201  058F                     	;# 
  4202  058F                     	;# 
  4203  0590                     	;# 
  4204  0591                     	;# 
  4205  0592                     	;# 
  4206  0593                     	;# 
  4207  060C                     	;# 
  4208  060D                     	;# 
  4209  060E                     	;# 
  4210  060F                     	;# 
  4211  0610                     	;# 
  4212  0611                     	;# 
  4213  0612                     	;# 
  4214  0613                     	;# 
  4215  0614                     	;# 
  4216  0616                     	;# 
  4217  0617                     	;# 
  4218  0618                     	;# 
  4219  0619                     	;# 
  4220  061A                     	;# 
  4221  061B                     	;# 
  4222  061C                     	;# 
  4223  061D                     	;# 
  4224  061E                     	;# 
  4225  068C                     	;# 
  4226  068D                     	;# 
  4227  068E                     	;# 
  4228  068F                     	;# 
  4229  0690                     	;# 
  4230  0691                     	;# 
  4231  0692                     	;# 
  4232  0693                     	;# 
  4233  0694                     	;# 
  4234  070C                     	;# 
  4235  070D                     	;# 
  4236  070E                     	;# 
  4237  070F                     	;# 
  4238  0710                     	;# 
  4239  0711                     	;# 
  4240  0712                     	;# 
  4241  0713                     	;# 
  4242  0714                     	;# 
  4243  0716                     	;# 
  4244  0717                     	;# 
  4245  0718                     	;# 
  4246  0719                     	;# 
  4247  071A                     	;# 
  4248  071B                     	;# 
  4249  071C                     	;# 
  4250  071D                     	;# 
  4251  071E                     	;# 
  4252  0796                     	;# 
  4253  0797                     	;# 
  4254  0798                     	;# 
  4255  0799                     	;# 
  4256  079A                     	;# 
  4257  079B                     	;# 
  4258  080C                     	;# 
  4259  080D                     	;# 
  4260  080E                     	;# 
  4261  080F                     	;# 
  4262  0810                     	;# 
  4263  0811                     	;# 
  4264  0812                     	;# 
  4265  0813                     	;# 
  4266  0814                     	;# 
  4267  081A                     	;# 
  4268  081B                     	;# 
  4269  081C                     	;# 
  4270  081D                     	;# 
  4271  081E                     	;# 
  4272  081F                     	;# 
  4273  088C                     	;# 
  4274  088D                     	;# 
  4275  088E                     	;# 
  4276  088F                     	;# 
  4277  0890                     	;# 
  4278  0891                     	;# 
  4279  0892                     	;# 
  4280  0893                     	;# 
  4281  0895                     	;# 
  4282  0896                     	;# 
  4283  0897                     	;# 
  4284  0898                     	;# 
  4285  0899                     	;# 
  4286  089A                     	;# 
  4287  089B                     	;# 
  4288  090C                     	;# 
  4289  090E                     	;# 
  4290  090F                     	;# 
  4291  091F                     	;# 
  4292  091F                     	;# 
  4293  098F                     	;# 
  4294  098F                     	;# 
  4295  0990                     	;# 
  4296  0991                     	;# 
  4297  0992                     	;# 
  4298  0993                     	;# 
  4299  0994                     	;# 
  4300  0995                     	;# 
  4301  0996                     	;# 
  4302  0997                     	;# 
  4303  0E0F                     	;# 
  4304  0E10                     	;# 
  4305  0E11                     	;# 
  4306  0E12                     	;# 
  4307  0E13                     	;# 
  4308  0E14                     	;# 
  4309  0E15                     	;# 
  4310  0E16                     	;# 
  4311  0E17                     	;# 
  4312  0E18                     	;# 
  4313  0E19                     	;# 
  4314  0E1A                     	;# 
  4315  0E1B                     	;# 
  4316  0E1C                     	;# 
  4317  0E1D                     	;# 
  4318  0E1E                     	;# 
  4319  0E1F                     	;# 
  4320  0E20                     	;# 
  4321  0E21                     	;# 
  4322  0E22                     	;# 
  4323  0E23                     	;# 
  4324  0E24                     	;# 
  4325  0E25                     	;# 
  4326  0E26                     	;# 
  4327  0E27                     	;# 
  4328  0E28                     	;# 
  4329  0E29                     	;# 
  4330  0E2A                     	;# 
  4331  0E2B                     	;# 
  4332  0E2C                     	;# 
  4333  0E2D                     	;# 
  4334  0E2E                     	;# 
  4335  0E2F                     	;# 
  4336  0E30                     	;# 
  4337  0E31                     	;# 
  4338  0E32                     	;# 
  4339  0E33                     	;# 
  4340  0E34                     	;# 
  4341  0E35                     	;# 
  4342  0E36                     	;# 
  4343  0E37                     	;# 
  4344  0E8F                     	;# 
  4345  0E90                     	;# 
  4346  0E91                     	;# 
  4347  0E92                     	;# 
  4348  0E93                     	;# 
  4349  0E94                     	;# 
  4350  0E95                     	;# 
  4351  0E96                     	;# 
  4352  0E97                     	;# 
  4353  0E9C                     	;# 
  4354  0E9D                     	;# 
  4355  0E9E                     	;# 
  4356  0EA1                     	;# 
  4357  0EA2                     	;# 
  4358  0EA3                     	;# 
  4359  0EA4                     	;# 
  4360  0EA5                     	;# 
  4361  0EA9                     	;# 
  4362  0EAA                     	;# 
  4363  0EAB                     	;# 
  4364  0EAC                     	;# 
  4365  0EB1                     	;# 
  4366  0EB2                     	;# 
  4367  0EB3                     	;# 
  4368  0EB8                     	;# 
  4369  0EB9                     	;# 
  4370  0EBA                     	;# 
  4371  0EBB                     	;# 
  4372  0EBC                     	;# 
  4373  0EBD                     	;# 
  4374  0EBE                     	;# 
  4375  0EC3                     	;# 
  4376  0EC5                     	;# 
  4377  0EC6                     	;# 
  4378  0EC7                     	;# 
  4379  0EC8                     	;# 
  4380  0EC9                     	;# 
  4381  0ECA                     	;# 
  4382  0ECB                     	;# 
  4383  0ECC                     	;# 
  4384  0F10                     	;# 
  4385  0F11                     	;# 
  4386  0F12                     	;# 
  4387  0F13                     	;# 
  4388  0F14                     	;# 
  4389  0F15                     	;# 
  4390  0F16                     	;# 
  4391  0F17                     	;# 
  4392  0F18                     	;# 
  4393  0F19                     	;# 
  4394  0F1A                     	;# 
  4395  0F1B                     	;# 
  4396  0F1C                     	;# 
  4397  0F1D                     	;# 
  4398  0F1E                     	;# 
  4399  0F1F                     	;# 
  4400  0F20                     	;# 
  4401  0F21                     	;# 
  4402  0F22                     	;# 
  4403  0F23                     	;# 
  4404  0F24                     	;# 
  4405  0F25                     	;# 
  4406  0F26                     	;# 
  4407  0F27                     	;# 
  4408  0F28                     	;# 
  4409  0F29                     	;# 
  4410  0F2A                     	;# 
  4411  0F2B                     	;# 
  4412  0F2C                     	;# 
  4413  0F2D                     	;# 
  4414  0F2E                     	;# 
  4415  0F2F                     	;# 
  4416  0F30                     	;# 
  4417  0F31                     	;# 
  4418  0F32                     	;# 
  4419  0F38                     	;# 
  4420  0F39                     	;# 
  4421  0F3A                     	;# 
  4422  0F3B                     	;# 
  4423  0F3C                     	;# 
  4424  0F3D                     	;# 
  4425  0F3E                     	;# 
  4426  0F3F                     	;# 
  4427  0F40                     	;# 
  4428  0F41                     	;# 
  4429  0F43                     	;# 
  4430  0F44                     	;# 
  4431  0F45                     	;# 
  4432  0F46                     	;# 
  4433  0F47                     	;# 
  4434  0F48                     	;# 
  4435  0F49                     	;# 
  4436  0F4A                     	;# 
  4437  0F4B                     	;# 
  4438  0F4C                     	;# 
  4439  0F4E                     	;# 
  4440  0F4F                     	;# 
  4441  0F50                     	;# 
  4442  0F51                     	;# 
  4443  0F52                     	;# 
  4444  0F53                     	;# 
  4445  0F54                     	;# 
  4446  0F55                     	;# 
  4447  0F56                     	;# 
  4448  0F57                     	;# 
  4449  0F59                     	;# 
  4450  0F5A                     	;# 
  4451  0F5B                     	;# 
  4452  0F5C                     	;# 
  4453  0F5D                     	;# 
  4454  0F61                     	;# 
  4455  0F62                     	;# 
  4456  0F64                     	;# 
  4457  0F65                     	;# 
  4458  0F66                     	;# 
  4459  0F67                     	;# 
  4460  0F68                     	;# 
  4461  0F69                     	;# 
  4462  0F6A                     	;# 
  4463  0F6B                     	;# 
  4464  0F6C                     	;# 
  4465  0F6D                     	;# 
  4466  0FE4                     	;# 
  4467  0FE5                     	;# 
  4468  0FE6                     	;# 
  4469  0FE7                     	;# 
  4470  0FE8                     	;# 
  4471  0FE9                     	;# 
  4472  0FEA                     	;# 
  4473  0FEB                     	;# 
  4474  0FED                     	;# 
  4475  0FEE                     	;# 
  4476  0FEF                     	;# 
  4477  0000                     	;# 
  4478  0001                     	;# 
  4479  0002                     	;# 
  4480  0003                     	;# 
  4481  0004                     	;# 
  4482  0005                     	;# 
  4483  0006                     	;# 
  4484  0007                     	;# 
  4485  0008                     	;# 
  4486  0009                     	;# 
  4487  000A                     	;# 
  4488  000B                     	;# 
  4489  000C                     	;# 
  4490  000D                     	;# 
  4491  000E                     	;# 
  4492  000F                     	;# 
  4493  0010                     	;# 
  4494  0011                     	;# 
  4495  0012                     	;# 
  4496  0013                     	;# 
  4497  0014                     	;# 
  4498  0015                     	;# 
  4499  0016                     	;# 
  4500  0017                     	;# 
  4501  0018                     	;# 
  4502  0019                     	;# 
  4503  001A                     	;# 
  4504  001C                     	;# 
  4505  001C                     	;# 
  4506  001D                     	;# 
  4507  001D                     	;# 
  4508  001E                     	;# 
  4509  001F                     	;# 
  4510  008C                     	;# 
  4511  008C                     	;# 
  4512  008D                     	;# 
  4513  008E                     	;# 
  4514  008E                     	;# 
  4515  008F                     	;# 
  4516  0090                     	;# 
  4517  0090                     	;# 
  4518  0091                     	;# 
  4519  0093                     	;# 
  4520  0094                     	;# 
  4521  0095                     	;# 
  4522  0096                     	;# 
  4523  0097                     	;# 
  4524  0098                     	;# 
  4525  0099                     	;# 
  4526  009A                     	;# 
  4527  009B                     	;# 
  4528  009C                     	;# 
  4529  009D                     	;# 
  4530  009E                     	;# 
  4531  010C                     	;# 
  4532  010D                     	;# 
  4533  010E                     	;# 
  4534  010E                     	;# 
  4535  010F                     	;# 
  4536  0110                     	;# 
  4537  0110                     	;# 
  4538  0111                     	;# 
  4539  0112                     	;# 
  4540  0112                     	;# 
  4541  0113                     	;# 
  4542  0114                     	;# 
  4543  0114                     	;# 
  4544  0115                     	;# 
  4545  0116                     	;# 
  4546  0116                     	;# 
  4547  0117                     	;# 
  4548  0119                     	;# 
  4549  0119                     	;# 
  4550  0119                     	;# 
  4551  011A                     	;# 
  4552  011A                     	;# 
  4553  011A                     	;# 
  4554  011B                     	;# 
  4555  011B                     	;# 
  4556  011B                     	;# 
  4557  011B                     	;# 
  4558  011B                     	;# 
  4559  011C                     	;# 
  4560  011C                     	;# 
  4561  011C                     	;# 
  4562  011D                     	;# 
  4563  011D                     	;# 
  4564  011D                     	;# 
  4565  011E                     	;# 
  4566  011E                     	;# 
  4567  011E                     	;# 
  4568  011F                     	;# 
  4569  011F                     	;# 
  4570  011F                     	;# 
  4571  011F                     	;# 
  4572  011F                     	;# 
  4573  018C                     	;# 
  4574  018D                     	;# 
  4575  018E                     	;# 
  4576  018F                     	;# 
  4577  0190                     	;# 
  4578  0191                     	;# 
  4579  0192                     	;# 
  4580  0196                     	;# 
  4581  0197                     	;# 
  4582  0198                     	;# 
  4583  0199                     	;# 
  4584  019A                     	;# 
  4585  019B                     	;# 
  4586  019C                     	;# 
  4587  020C                     	;# 
  4588  020C                     	;# 
  4589  020D                     	;# 
  4590  020E                     	;# 
  4591  020F                     	;# 
  4592  020F                     	;# 
  4593  0210                     	;# 
  4594  0210                     	;# 
  4595  0211                     	;# 
  4596  0211                     	;# 
  4597  0212                     	;# 
  4598  0212                     	;# 
  4599  0213                     	;# 
  4600  0214                     	;# 
  4601  0215                     	;# 
  4602  0215                     	;# 
  4603  0216                     	;# 
  4604  0216                     	;# 
  4605  0217                     	;# 
  4606  0217                     	;# 
  4607  0218                     	;# 
  4608  0218                     	;# 
  4609  0219                     	;# 
  4610  021A                     	;# 
  4611  021B                     	;# 
  4612  021B                     	;# 
  4613  021C                     	;# 
  4614  021C                     	;# 
  4615  021D                     	;# 
  4616  021D                     	;# 
  4617  021E                     	;# 
  4618  021F                     	;# 
  4619  028C                     	;# 
  4620  028C                     	;# 
  4621  028D                     	;# 
  4622  028D                     	;# 
  4623  028E                     	;# 
  4624  028F                     	;# 
  4625  0290                     	;# 
  4626  0290                     	;# 
  4627  0291                     	;# 
  4628  0292                     	;# 
  4629  0292                     	;# 
  4630  0293                     	;# 
  4631  0293                     	;# 
  4632  0294                     	;# 
  4633  0295                     	;# 
  4634  0296                     	;# 
  4635  0296                     	;# 
  4636  0297                     	;# 
  4637  0298                     	;# 
  4638  0298                     	;# 
  4639  0299                     	;# 
  4640  0299                     	;# 
  4641  029A                     	;# 
  4642  029B                     	;# 
  4643  029C                     	;# 
  4644  029C                     	;# 
  4645  029D                     	;# 
  4646  030C                     	;# 
  4647  030C                     	;# 
  4648  030D                     	;# 
  4649  030E                     	;# 
  4650  030F                     	;# 
  4651  0310                     	;# 
  4652  0310                     	;# 
  4653  0311                     	;# 
  4654  0312                     	;# 
  4655  0313                     	;# 
  4656  0314                     	;# 
  4657  0314                     	;# 
  4658  0315                     	;# 
  4659  0316                     	;# 
  4660  0317                     	;# 
  4661  0318                     	;# 
  4662  0318                     	;# 
  4663  0319                     	;# 
  4664  031A                     	;# 
  4665  031B                     	;# 
  4666  031C                     	;# 
  4667  031C                     	;# 
  4668  031D                     	;# 
  4669  031E                     	;# 
  4670  031F                     	;# 
  4671  038C                     	;# 
  4672  038C                     	;# 
  4673  038D                     	;# 
  4674  038E                     	;# 
  4675  0390                     	;# 
  4676  0390                     	;# 
  4677  0391                     	;# 
  4678  0392                     	;# 
  4679  040C                     	;# 
  4680  040D                     	;# 
  4681  040E                     	;# 
  4682  040F                     	;# 
  4683  0410                     	;# 
  4684  0411                     	;# 
  4685  0416                     	;# 
  4686  0416                     	;# 
  4687  0417                     	;# 
  4688  0418                     	;# 
  4689  0418                     	;# 
  4690  0419                     	;# 
  4691  041A                     	;# 
  4692  041A                     	;# 
  4693  041B                     	;# 
  4694  041C                     	;# 
  4695  041C                     	;# 
  4696  041D                     	;# 
  4697  041E                     	;# 
  4698  041F                     	;# 
  4699  048C                     	;# 
  4700  048C                     	;# 
  4701  048D                     	;# 
  4702  048E                     	;# 
  4703  048F                     	;# 
  4704  048F                     	;# 
  4705  0490                     	;# 
  4706  0491                     	;# 
  4707  0492                     	;# 
  4708  0492                     	;# 
  4709  0493                     	;# 
  4710  0494                     	;# 
  4711  0495                     	;# 
  4712  0495                     	;# 
  4713  0496                     	;# 
  4714  0497                     	;# 
  4715  0498                     	;# 
  4716  0499                     	;# 
  4717  049A                     	;# 
  4718  049B                     	;# 
  4719  049C                     	;# 
  4720  049D                     	;# 
  4721  050C                     	;# 
  4722  050C                     	;# 
  4723  050D                     	;# 
  4724  050E                     	;# 
  4725  050F                     	;# 
  4726  050F                     	;# 
  4727  0510                     	;# 
  4728  0511                     	;# 
  4729  0512                     	;# 
  4730  0512                     	;# 
  4731  0513                     	;# 
  4732  0514                     	;# 
  4733  0515                     	;# 
  4734  0515                     	;# 
  4735  0516                     	;# 
  4736  0517                     	;# 
  4737  0518                     	;# 
  4738  0519                     	;# 
  4739  051A                     	;# 
  4740  051B                     	;# 
  4741  051C                     	;# 
  4742  051D                     	;# 
  4743  058C                     	;# 
  4744  058C                     	;# 
  4745  058D                     	;# 
  4746  058E                     	;# 
  4747  058F                     	;# 
  4748  058F                     	;# 
  4749  0590                     	;# 
  4750  0591                     	;# 
  4751  0592                     	;# 
  4752  0593                     	;# 
  4753  060C                     	;# 
  4754  060D                     	;# 
  4755  060E                     	;# 
  4756  060F                     	;# 
  4757  0610                     	;# 
  4758  0611                     	;# 
  4759  0612                     	;# 
  4760  0613                     	;# 
  4761  0614                     	;# 
  4762  0616                     	;# 
  4763  0617                     	;# 
  4764  0618                     	;# 
  4765  0619                     	;# 
  4766  061A                     	;# 
  4767  061B                     	;# 
  4768  061C                     	;# 
  4769  061D                     	;# 
  4770  061E                     	;# 
  4771  068C                     	;# 
  4772  068D                     	;# 
  4773  068E                     	;# 
  4774  068F                     	;# 
  4775  0690                     	;# 
  4776  0691                     	;# 
  4777  0692                     	;# 
  4778  0693                     	;# 
  4779  0694                     	;# 
  4780  070C                     	;# 
  4781  070D                     	;# 
  4782  070E                     	;# 
  4783  070F                     	;# 
  4784  0710                     	;# 
  4785  0711                     	;# 
  4786  0712                     	;# 
  4787  0713                     	;# 
  4788  0714                     	;# 
  4789  0716                     	;# 
  4790  0717                     	;# 
  4791  0718                     	;# 
  4792  0719                     	;# 
  4793  071A                     	;# 
  4794  071B                     	;# 
  4795  071C                     	;# 
  4796  071D                     	;# 
  4797  071E                     	;# 
  4798  0796                     	;# 
  4799  0797                     	;# 
  4800  0798                     	;# 
  4801  0799                     	;# 
  4802  079A                     	;# 
  4803  079B                     	;# 
  4804  080C                     	;# 
  4805  080D                     	;# 
  4806  080E                     	;# 
  4807  080F                     	;# 
  4808  0810                     	;# 
  4809  0811                     	;# 
  4810  0812                     	;# 
  4811  0813                     	;# 
  4812  0814                     	;# 
  4813  081A                     	;# 
  4814  081B                     	;# 
  4815  081C                     	;# 
  4816  081D                     	;# 
  4817  081E                     	;# 
  4818  081F                     	;# 
  4819  088C                     	;# 
  4820  088D                     	;# 
  4821  088E                     	;# 
  4822  088F                     	;# 
  4823  0890                     	;# 
  4824  0891                     	;# 
  4825  0892                     	;# 
  4826  0893                     	;# 
  4827  0895                     	;# 
  4828  0896                     	;# 
  4829  0897                     	;# 
  4830  0898                     	;# 
  4831  0899                     	;# 
  4832  089A                     	;# 
  4833  089B                     	;# 
  4834  090C                     	;# 
  4835  090E                     	;# 
  4836  090F                     	;# 
  4837  091F                     	;# 
  4838  091F                     	;# 
  4839  098F                     	;# 
  4840  098F                     	;# 
  4841  0990                     	;# 
  4842  0991                     	;# 
  4843  0992                     	;# 
  4844  0993                     	;# 
  4845  0994                     	;# 
  4846  0995                     	;# 
  4847  0996                     	;# 
  4848  0997                     	;# 
  4849  0E0F                     	;# 
  4850  0E10                     	;# 
  4851  0E11                     	;# 
  4852  0E12                     	;# 
  4853  0E13                     	;# 
  4854  0E14                     	;# 
  4855  0E15                     	;# 
  4856  0E16                     	;# 
  4857  0E17                     	;# 
  4858  0E18                     	;# 
  4859  0E19                     	;# 
  4860  0E1A                     	;# 
  4861  0E1B                     	;# 
  4862  0E1C                     	;# 
  4863  0E1D                     	;# 
  4864  0E1E                     	;# 
  4865  0E1F                     	;# 
  4866  0E20                     	;# 
  4867  0E21                     	;# 
  4868  0E22                     	;# 
  4869  0E23                     	;# 
  4870  0E24                     	;# 
  4871  0E25                     	;# 
  4872  0E26                     	;# 
  4873  0E27                     	;# 
  4874  0E28                     	;# 
  4875  0E29                     	;# 
  4876  0E2A                     	;# 
  4877  0E2B                     	;# 
  4878  0E2C                     	;# 
  4879  0E2D                     	;# 
  4880  0E2E                     	;# 
  4881  0E2F                     	;# 
  4882  0E30                     	;# 
  4883  0E31                     	;# 
  4884  0E32                     	;# 
  4885  0E33                     	;# 
  4886  0E34                     	;# 
  4887  0E35                     	;# 
  4888  0E36                     	;# 
  4889  0E37                     	;# 
  4890  0E8F                     	;# 
  4891  0E90                     	;# 
  4892  0E91                     	;# 
  4893  0E92                     	;# 
  4894  0E93                     	;# 
  4895  0E94                     	;# 
  4896  0E95                     	;# 
  4897  0E96                     	;# 
  4898  0E97                     	;# 
  4899  0E9C                     	;# 
  4900  0E9D                     	;# 
  4901  0E9E                     	;# 
  4902  0EA1                     	;# 
  4903  0EA2                     	;# 
  4904  0EA3                     	;# 
  4905  0EA4                     	;# 
  4906  0EA5                     	;# 
  4907  0EA9                     	;# 
  4908  0EAA                     	;# 
  4909  0EAB                     	;# 
  4910  0EAC                     	;# 
  4911  0EB1                     	;# 
  4912  0EB2                     	;# 
  4913  0EB3                     	;# 
  4914  0EB8                     	;# 
  4915  0EB9                     	;# 
  4916  0EBA                     	;# 
  4917  0EBB                     	;# 
  4918  0EBC                     	;# 
  4919  0EBD                     	;# 
  4920  0EBE                     	;# 
  4921  0EC3                     	;# 
  4922  0EC5                     	;# 
  4923  0EC6                     	;# 
  4924  0EC7                     	;# 
  4925  0EC8                     	;# 
  4926  0EC9                     	;# 
  4927  0ECA                     	;# 
  4928  0ECB                     	;# 
  4929  0ECC                     	;# 
  4930  0F10                     	;# 
  4931  0F11                     	;# 
  4932  0F12                     	;# 
  4933  0F13                     	;# 
  4934  0F14                     	;# 
  4935  0F15                     	;# 
  4936  0F16                     	;# 
  4937  0F17                     	;# 
  4938  0F18                     	;# 
  4939  0F19                     	;# 
  4940  0F1A                     	;# 
  4941  0F1B                     	;# 
  4942  0F1C                     	;# 
  4943  0F1D                     	;# 
  4944  0F1E                     	;# 
  4945  0F1F                     	;# 
  4946  0F20                     	;# 
  4947  0F21                     	;# 
  4948  0F22                     	;# 
  4949  0F23                     	;# 
  4950  0F24                     	;# 
  4951  0F25                     	;# 
  4952  0F26                     	;# 
  4953  0F27                     	;# 
  4954  0F28                     	;# 
  4955  0F29                     	;# 
  4956  0F2A                     	;# 
  4957  0F2B                     	;# 
  4958  0F2C                     	;# 
  4959  0F2D                     	;# 
  4960  0F2E                     	;# 
  4961  0F2F                     	;# 
  4962  0F30                     	;# 
  4963  0F31                     	;# 
  4964  0F32                     	;# 
  4965  0F38                     	;# 
  4966  0F39                     	;# 
  4967  0F3A                     	;# 
  4968  0F3B                     	;# 
  4969  0F3C                     	;# 
  4970  0F3D                     	;# 
  4971  0F3E                     	;# 
  4972  0F3F                     	;# 
  4973  0F40                     	;# 
  4974  0F41                     	;# 
  4975  0F43                     	;# 
  4976  0F44                     	;# 
  4977  0F45                     	;# 
  4978  0F46                     	;# 
  4979  0F47                     	;# 
  4980  0F48                     	;# 
  4981  0F49                     	;# 
  4982  0F4A                     	;# 
  4983  0F4B                     	;# 
  4984  0F4C                     	;# 
  4985  0F4E                     	;# 
  4986  0F4F                     	;# 
  4987  0F50                     	;# 
  4988  0F51                     	;# 
  4989  0F52                     	;# 
  4990  0F53                     	;# 
  4991  0F54                     	;# 
  4992  0F55                     	;# 
  4993  0F56                     	;# 
  4994  0F57                     	;# 
  4995  0F59                     	;# 
  4996  0F5A                     	;# 
  4997  0F5B                     	;# 
  4998  0F5C                     	;# 
  4999  0F5D                     	;# 
  5000  0F61                     	;# 
  5001  0F62                     	;# 
  5002  0F64                     	;# 
  5003  0F65                     	;# 
  5004  0F66                     	;# 
  5005  0F67                     	;# 
  5006  0F68                     	;# 
  5007  0F69                     	;# 
  5008  0F6A                     	;# 
  5009  0F6B                     	;# 
  5010  0F6C                     	;# 
  5011  0F6D                     	;# 
  5012  0FE4                     	;# 
  5013  0FE5                     	;# 
  5014  0FE6                     	;# 
  5015  0FE7                     	;# 
  5016  0FE8                     	;# 
  5017  0FE9                     	;# 
  5018  0FEA                     	;# 
  5019  0FEB                     	;# 
  5020  0FED                     	;# 
  5021  0FEE                     	;# 
  5022  0FEF                     	;# 
  5023  0000                     	;# 
  5024  0001                     	;# 
  5025  0002                     	;# 
  5026  0003                     	;# 
  5027  0004                     	;# 
  5028  0005                     	;# 
  5029  0006                     	;# 
  5030  0007                     	;# 
  5031  0008                     	;# 
  5032  0009                     	;# 
  5033  000A                     	;# 
  5034  000B                     	;# 
  5035  000C                     	;# 
  5036  000D                     	;# 
  5037  000E                     	;# 
  5038  000F                     	;# 
  5039  0010                     	;# 
  5040  0011                     	;# 
  5041  0012                     	;# 
  5042  0013                     	;# 
  5043  0014                     	;# 
  5044  0015                     	;# 
  5045  0016                     	;# 
  5046  0017                     	;# 
  5047  0018                     	;# 
  5048  0019                     	;# 
  5049  001A                     	;# 
  5050  001C                     	;# 
  5051  001C                     	;# 
  5052  001D                     	;# 
  5053  001D                     	;# 
  5054  001E                     	;# 
  5055  001F                     	;# 
  5056  008C                     	;# 
  5057  008C                     	;# 
  5058  008D                     	;# 
  5059  008E                     	;# 
  5060  008E                     	;# 
  5061  008F                     	;# 
  5062  0090                     	;# 
  5063  0090                     	;# 
  5064  0091                     	;# 
  5065  0093                     	;# 
  5066  0094                     	;# 
  5067  0095                     	;# 
  5068  0096                     	;# 
  5069  0097                     	;# 
  5070  0098                     	;# 
  5071  0099                     	;# 
  5072  009A                     	;# 
  5073  009B                     	;# 
  5074  009C                     	;# 
  5075  009D                     	;# 
  5076  009E                     	;# 
  5077  010C                     	;# 
  5078  010D                     	;# 
  5079  010E                     	;# 
  5080  010E                     	;# 
  5081  010F                     	;# 
  5082  0110                     	;# 
  5083  0110                     	;# 
  5084  0111                     	;# 
  5085  0112                     	;# 
  5086  0112                     	;# 
  5087  0113                     	;# 
  5088  0114                     	;# 
  5089  0114                     	;# 
  5090  0115                     	;# 
  5091  0116                     	;# 
  5092  0116                     	;# 
  5093  0117                     	;# 
  5094  0119                     	;# 
  5095  0119                     	;# 
  5096  0119                     	;# 
  5097  011A                     	;# 
  5098  011A                     	;# 
  5099  011A                     	;# 
  5100  011B                     	;# 
  5101  011B                     	;# 
  5102  011B                     	;# 
  5103  011B                     	;# 
  5104  011B                     	;# 
  5105  011C                     	;# 
  5106  011C                     	;# 
  5107  011C                     	;# 
  5108  011D                     	;# 
  5109  011D                     	;# 
  5110  011D                     	;# 
  5111  011E                     	;# 
  5112  011E                     	;# 
  5113  011E                     	;# 
  5114  011F                     	;# 
  5115  011F                     	;# 
  5116  011F                     	;# 
  5117  011F                     	;# 
  5118  011F                     	;# 
  5119  018C                     	;# 
  5120  018D                     	;# 
  5121  018E                     	;# 
  5122  018F                     	;# 
  5123  0190                     	;# 
  5124  0191                     	;# 
  5125  0192                     	;# 
  5126  0196                     	;# 
  5127  0197                     	;# 
  5128  0198                     	;# 
  5129  0199                     	;# 
  5130  019A                     	;# 
  5131  019B                     	;# 
  5132  019C                     	;# 
  5133  020C                     	;# 
  5134  020C                     	;# 
  5135  020D                     	;# 
  5136  020E                     	;# 
  5137  020F                     	;# 
  5138  020F                     	;# 
  5139  0210                     	;# 
  5140  0210                     	;# 
  5141  0211                     	;# 
  5142  0211                     	;# 
  5143  0212                     	;# 
  5144  0212                     	;# 
  5145  0213                     	;# 
  5146  0214                     	;# 
  5147  0215                     	;# 
  5148  0215                     	;# 
  5149  0216                     	;# 
  5150  0216                     	;# 
  5151  0217                     	;# 
  5152  0217                     	;# 
  5153  0218                     	;# 
  5154  0218                     	;# 
  5155  0219                     	;# 
  5156  021A                     	;# 
  5157  021B                     	;# 
  5158  021B                     	;# 
  5159  021C                     	;# 
  5160  021C                     	;# 
  5161  021D                     	;# 
  5162  021D                     	;# 
  5163  021E                     	;# 
  5164  021F                     	;# 
  5165  028C                     	;# 
  5166  028C                     	;# 
  5167  028D                     	;# 
  5168  028D                     	;# 
  5169  028E                     	;# 
  5170  028F                     	;# 
  5171  0290                     	;# 
  5172  0290                     	;# 
  5173  0291                     	;# 
  5174  0292                     	;# 
  5175  0292                     	;# 
  5176  0293                     	;# 
  5177  0293                     	;# 
  5178  0294                     	;# 
  5179  0295                     	;# 
  5180  0296                     	;# 
  5181  0296                     	;# 
  5182  0297                     	;# 
  5183  0298                     	;# 
  5184  0298                     	;# 
  5185  0299                     	;# 
  5186  0299                     	;# 
  5187  029A                     	;# 
  5188  029B                     	;# 
  5189  029C                     	;# 
  5190  029C                     	;# 
  5191  029D                     	;# 
  5192  030C                     	;# 
  5193  030C                     	;# 
  5194  030D                     	;# 
  5195  030E                     	;# 
  5196  030F                     	;# 
  5197  0310                     	;# 
  5198  0310                     	;# 
  5199  0311                     	;# 
  5200  0312                     	;# 
  5201  0313                     	;# 
  5202  0314                     	;# 
  5203  0314                     	;# 
  5204  0315                     	;# 
  5205  0316                     	;# 
  5206  0317                     	;# 
  5207  0318                     	;# 
  5208  0318                     	;# 
  5209  0319                     	;# 
  5210  031A                     	;# 
  5211  031B                     	;# 
  5212  031C                     	;# 
  5213  031C                     	;# 
  5214  031D                     	;# 
  5215  031E                     	;# 
  5216  031F                     	;# 
  5217  038C                     	;# 
  5218  038C                     	;# 
  5219  038D                     	;# 
  5220  038E                     	;# 
  5221  0390                     	;# 
  5222  0390                     	;# 
  5223  0391                     	;# 
  5224  0392                     	;# 
  5225  040C                     	;# 
  5226  040D                     	;# 
  5227  040E                     	;# 
  5228  040F                     	;# 
  5229  0410                     	;# 
  5230  0411                     	;# 
  5231  0416                     	;# 
  5232  0416                     	;# 
  5233  0417                     	;# 
  5234  0418                     	;# 
  5235  0418                     	;# 
  5236  0419                     	;# 
  5237  041A                     	;# 
  5238  041A                     	;# 
  5239  041B                     	;# 
  5240  041C                     	;# 
  5241  041C                     	;# 
  5242  041D                     	;# 
  5243  041E                     	;# 
  5244  041F                     	;# 
  5245  048C                     	;# 
  5246  048C                     	;# 
  5247  048D                     	;# 
  5248  048E                     	;# 
  5249  048F                     	;# 
  5250  048F                     	;# 
  5251  0490                     	;# 
  5252  0491                     	;# 
  5253  0492                     	;# 
  5254  0492                     	;# 
  5255  0493                     	;# 
  5256  0494                     	;# 
  5257  0495                     	;# 
  5258  0495                     	;# 
  5259  0496                     	;# 
  5260  0497                     	;# 
  5261  0498                     	;# 
  5262  0499                     	;# 
  5263  049A                     	;# 
  5264  049B                     	;# 
  5265  049C                     	;# 
  5266  049D                     	;# 
  5267  050C                     	;# 
  5268  050C                     	;# 
  5269  050D                     	;# 
  5270  050E                     	;# 
  5271  050F                     	;# 
  5272  050F                     	;# 
  5273  0510                     	;# 
  5274  0511                     	;# 
  5275  0512                     	;# 
  5276  0512                     	;# 
  5277  0513                     	;# 
  5278  0514                     	;# 
  5279  0515                     	;# 
  5280  0515                     	;# 
  5281  0516                     	;# 
  5282  0517                     	;# 
  5283  0518                     	;# 
  5284  0519                     	;# 
  5285  051A                     	;# 
  5286  051B                     	;# 
  5287  051C                     	;# 
  5288  051D                     	;# 
  5289  058C                     	;# 
  5290  058C                     	;# 
  5291  058D                     	;# 
  5292  058E                     	;# 
  5293  058F                     	;# 
  5294  058F                     	;# 
  5295  0590                     	;# 
  5296  0591                     	;# 
  5297  0592                     	;# 
  5298  0593                     	;# 
  5299  060C                     	;# 
  5300  060D                     	;# 
  5301  060E                     	;# 
  5302  060F                     	;# 
  5303  0610                     	;# 
  5304  0611                     	;# 
  5305  0612                     	;# 
  5306  0613                     	;# 
  5307  0614                     	;# 
  5308  0616                     	;# 
  5309  0617                     	;# 
  5310  0618                     	;# 
  5311  0619                     	;# 
  5312  061A                     	;# 
  5313  061B                     	;# 
  5314  061C                     	;# 
  5315  061D                     	;# 
  5316  061E                     	;# 
  5317  068C                     	;# 
  5318  068D                     	;# 
  5319  068E                     	;# 
  5320  068F                     	;# 
  5321  0690                     	;# 
  5322  0691                     	;# 
  5323  0692                     	;# 
  5324  0693                     	;# 
  5325  0694                     	;# 
  5326  070C                     	;# 
  5327  070D                     	;# 
  5328  070E                     	;# 
  5329  070F                     	;# 
  5330  0710                     	;# 
  5331  0711                     	;# 
  5332  0712                     	;# 
  5333  0713                     	;# 
  5334  0714                     	;# 
  5335  0716                     	;# 
  5336  0717                     	;# 
  5337  0718                     	;# 
  5338  0719                     	;# 
  5339  071A                     	;# 
  5340  071B                     	;# 
  5341  071C                     	;# 
  5342  071D                     	;# 
  5343  071E                     	;# 
  5344  0796                     	;# 
  5345  0797                     	;# 
  5346  0798                     	;# 
  5347  0799                     	;# 
  5348  079A                     	;# 
  5349  079B                     	;# 
  5350  080C                     	;# 
  5351  080D                     	;# 
  5352  080E                     	;# 
  5353  080F                     	;# 
  5354  0810                     	;# 
  5355  0811                     	;# 
  5356  0812                     	;# 
  5357  0813                     	;# 
  5358  0814                     	;# 
  5359  081A                     	;# 
  5360  081B                     	;# 
  5361  081C                     	;# 
  5362  081D                     	;# 
  5363  081E                     	;# 
  5364  081F                     	;# 
  5365  088C                     	;# 
  5366  088D                     	;# 
  5367  088E                     	;# 
  5368  088F                     	;# 
  5369  0890                     	;# 
  5370  0891                     	;# 
  5371  0892                     	;# 
  5372  0893                     	;# 
  5373  0895                     	;# 
  5374  0896                     	;# 
  5375  0897                     	;# 
  5376  0898                     	;# 
  5377  0899                     	;# 
  5378  089A                     	;# 
  5379  089B                     	;# 
  5380  090C                     	;# 
  5381  090E                     	;# 
  5382  090F                     	;# 
  5383  091F                     	;# 
  5384  091F                     	;# 
  5385  098F                     	;# 
  5386  098F                     	;# 
  5387  0990                     	;# 
  5388  0991                     	;# 
  5389  0992                     	;# 
  5390  0993                     	;# 
  5391  0994                     	;# 
  5392  0995                     	;# 
  5393  0996                     	;# 
  5394  0997                     	;# 
  5395  0E0F                     	;# 
  5396  0E10                     	;# 
  5397  0E11                     	;# 
  5398  0E12                     	;# 
  5399  0E13                     	;# 
  5400  0E14                     	;# 
  5401  0E15                     	;# 
  5402  0E16                     	;# 
  5403  0E17                     	;# 
  5404  0E18                     	;# 
  5405  0E19                     	;# 
  5406  0E1A                     	;# 
  5407  0E1B                     	;# 
  5408  0E1C                     	;# 
  5409  0E1D                     	;# 
  5410  0E1E                     	;# 
  5411  0E1F                     	;# 
  5412  0E20                     	;# 
  5413  0E21                     	;# 
  5414  0E22                     	;# 
  5415  0E23                     	;# 
  5416  0E24                     	;# 
  5417  0E25                     	;# 
  5418  0E26                     	;# 
  5419  0E27                     	;# 
  5420  0E28                     	;# 
  5421  0E29                     	;# 
  5422  0E2A                     	;# 
  5423  0E2B                     	;# 
  5424  0E2C                     	;# 
  5425  0E2D                     	;# 
  5426  0E2E                     	;# 
  5427  0E2F                     	;# 
  5428  0E30                     	;# 
  5429  0E31                     	;# 
  5430  0E32                     	;# 
  5431  0E33                     	;# 
  5432  0E34                     	;# 
  5433  0E35                     	;# 
  5434  0E36                     	;# 
  5435  0E37                     	;# 
  5436  0E8F                     	;# 
  5437  0E90                     	;# 
  5438  0E91                     	;# 
  5439  0E92                     	;# 
  5440  0E93                     	;# 
  5441  0E94                     	;# 
  5442  0E95                     	;# 
  5443  0E96                     	;# 
  5444  0E97                     	;# 
  5445  0E9C                     	;# 
  5446  0E9D                     	;# 
  5447  0E9E                     	;# 
  5448  0EA1                     	;# 
  5449  0EA2                     	;# 
  5450  0EA3                     	;# 
  5451  0EA4                     	;# 
  5452  0EA5                     	;# 
  5453  0EA9                     	;# 
  5454  0EAA                     	;# 
  5455  0EAB                     	;# 
  5456  0EAC                     	;# 
  5457  0EB1                     	;# 
  5458  0EB2                     	;# 
  5459  0EB3                     	;# 
  5460  0EB8                     	;# 
  5461  0EB9                     	;# 
  5462  0EBA                     	;# 
  5463  0EBB                     	;# 
  5464  0EBC                     	;# 
  5465  0EBD                     	;# 
  5466  0EBE                     	;# 
  5467  0EC3                     	;# 
  5468  0EC5                     	;# 
  5469  0EC6                     	;# 
  5470  0EC7                     	;# 
  5471  0EC8                     	;# 
  5472  0EC9                     	;# 
  5473  0ECA                     	;# 
  5474  0ECB                     	;# 
  5475  0ECC                     	;# 
  5476  0F10                     	;# 
  5477  0F11                     	;# 
  5478  0F12                     	;# 
  5479  0F13                     	;# 
  5480  0F14                     	;# 
  5481  0F15                     	;# 
  5482  0F16                     	;# 
  5483  0F17                     	;# 
  5484  0F18                     	;# 
  5485  0F19                     	;# 
  5486  0F1A                     	;# 
  5487  0F1B                     	;# 
  5488  0F1C                     	;# 
  5489  0F1D                     	;# 
  5490  0F1E                     	;# 
  5491  0F1F                     	;# 
  5492  0F20                     	;# 
  5493  0F21                     	;# 
  5494  0F22                     	;# 
  5495  0F23                     	;# 
  5496  0F24                     	;# 
  5497  0F25                     	;# 
  5498  0F26                     	;# 
  5499  0F27                     	;# 
  5500  0F28                     	;# 
  5501  0F29                     	;# 
  5502  0F2A                     	;# 
  5503  0F2B                     	;# 
  5504  0F2C                     	;# 
  5505  0F2D                     	;# 
  5506  0F2E                     	;# 
  5507  0F2F                     	;# 
  5508  0F30                     	;# 
  5509  0F31                     	;# 
  5510  0F32                     	;# 
  5511  0F38                     	;# 
  5512  0F39                     	;# 
  5513  0F3A                     	;# 
  5514  0F3B                     	;# 
  5515  0F3C                     	;# 
  5516  0F3D                     	;# 
  5517  0F3E                     	;# 
  5518  0F3F                     	;# 
  5519  0F40                     	;# 
  5520  0F41                     	;# 
  5521  0F43                     	;# 
  5522  0F44                     	;# 
  5523  0F45                     	;# 
  5524  0F46                     	;# 
  5525  0F47                     	;# 
  5526  0F48                     	;# 
  5527  0F49                     	;# 
  5528  0F4A                     	;# 
  5529  0F4B                     	;# 
  5530  0F4C                     	;# 
  5531  0F4E                     	;# 
  5532  0F4F                     	;# 
  5533  0F50                     	;# 
  5534  0F51                     	;# 
  5535  0F52                     	;# 
  5536  0F53                     	;# 
  5537  0F54                     	;# 
  5538  0F55                     	;# 
  5539  0F56                     	;# 
  5540  0F57                     	;# 
  5541  0F59                     	;# 
  5542  0F5A                     	;# 
  5543  0F5B                     	;# 
  5544  0F5C                     	;# 
  5545  0F5D                     	;# 
  5546  0F61                     	;# 
  5547  0F62                     	;# 
  5548  0F64                     	;# 
  5549  0F65                     	;# 
  5550  0F66                     	;# 
  5551  0F67                     	;# 
  5552  0F68                     	;# 
  5553  0F69                     	;# 
  5554  0F6A                     	;# 
  5555  0F6B                     	;# 
  5556  0F6C                     	;# 
  5557  0F6D                     	;# 
  5558  0FE4                     	;# 
  5559  0FE5                     	;# 
  5560  0FE6                     	;# 
  5561  0FE7                     	;# 
  5562  0FE8                     	;# 
  5563  0FE9                     	;# 
  5564  0FEA                     	;# 
  5565  0FEB                     	;# 
  5566  0FED                     	;# 
  5567  0FEE                     	;# 
  5568  0FEF                     	;# 
  5569  0000                     	;# 
  5570  0001                     	;# 
  5571  0002                     	;# 
  5572  0003                     	;# 
  5573  0004                     	;# 
  5574  0005                     	;# 
  5575  0006                     	;# 
  5576  0007                     	;# 
  5577  0008                     	;# 
  5578  0009                     	;# 
  5579  000A                     	;# 
  5580  000B                     	;# 
  5581  000C                     	;# 
  5582  000D                     	;# 
  5583  000E                     	;# 
  5584  000F                     	;# 
  5585  0010                     	;# 
  5586  0011                     	;# 
  5587  0012                     	;# 
  5588  0013                     	;# 
  5589  0014                     	;# 
  5590  0015                     	;# 
  5591  0016                     	;# 
  5592  0017                     	;# 
  5593  0018                     	;# 
  5594  0019                     	;# 
  5595  001A                     	;# 
  5596  001C                     	;# 
  5597  001C                     	;# 
  5598  001D                     	;# 
  5599  001D                     	;# 
  5600  001E                     	;# 
  5601  001F                     	;# 
  5602  008C                     	;# 
  5603  008C                     	;# 
  5604  008D                     	;# 
  5605  008E                     	;# 
  5606  008E                     	;# 
  5607  008F                     	;# 
  5608  0090                     	;# 
  5609  0090                     	;# 
  5610  0091                     	;# 
  5611  0093                     	;# 
  5612  0094                     	;# 
  5613  0095                     	;# 
  5614  0096                     	;# 
  5615  0097                     	;# 
  5616  0098                     	;# 
  5617  0099                     	;# 
  5618  009A                     	;# 
  5619  009B                     	;# 
  5620  009C                     	;# 
  5621  009D                     	;# 
  5622  009E                     	;# 
  5623  010C                     	;# 
  5624  010D                     	;# 
  5625  010E                     	;# 
  5626  010E                     	;# 
  5627  010F                     	;# 
  5628  0110                     	;# 
  5629  0110                     	;# 
  5630  0111                     	;# 
  5631  0112                     	;# 
  5632  0112                     	;# 
  5633  0113                     	;# 
  5634  0114                     	;# 
  5635  0114                     	;# 
  5636  0115                     	;# 
  5637  0116                     	;# 
  5638  0116                     	;# 
  5639  0117                     	;# 
  5640  0119                     	;# 
  5641  0119                     	;# 
  5642  0119                     	;# 
  5643  011A                     	;# 
  5644  011A                     	;# 
  5645  011A                     	;# 
  5646  011B                     	;# 
  5647  011B                     	;# 
  5648  011B                     	;# 
  5649  011B                     	;# 
  5650  011B                     	;# 
  5651  011C                     	;# 
  5652  011C                     	;# 
  5653  011C                     	;# 
  5654  011D                     	;# 
  5655  011D                     	;# 
  5656  011D                     	;# 
  5657  011E                     	;# 
  5658  011E                     	;# 
  5659  011E                     	;# 
  5660  011F                     	;# 
  5661  011F                     	;# 
  5662  011F                     	;# 
  5663  011F                     	;# 
  5664  011F                     	;# 
  5665  018C                     	;# 
  5666  018D                     	;# 
  5667  018E                     	;# 
  5668  018F                     	;# 
  5669  0190                     	;# 
  5670  0191                     	;# 
  5671  0192                     	;# 
  5672  0196                     	;# 
  5673  0197                     	;# 
  5674  0198                     	;# 
  5675  0199                     	;# 
  5676  019A                     	;# 
  5677  019B                     	;# 
  5678  019C                     	;# 
  5679  020C                     	;# 
  5680  020C                     	;# 
  5681  020D                     	;# 
  5682  020E                     	;# 
  5683  020F                     	;# 
  5684  020F                     	;# 
  5685  0210                     	;# 
  5686  0210                     	;# 
  5687  0211                     	;# 
  5688  0211                     	;# 
  5689  0212                     	;# 
  5690  0212                     	;# 
  5691  0213                     	;# 
  5692  0214                     	;# 
  5693  0215                     	;# 
  5694  0215                     	;# 
  5695  0216                     	;# 
  5696  0216                     	;# 
  5697  0217                     	;# 
  5698  0217                     	;# 
  5699  0218                     	;# 
  5700  0218                     	;# 
  5701  0219                     	;# 
  5702  021A                     	;# 
  5703  021B                     	;# 
  5704  021B                     	;# 
  5705  021C                     	;# 
  5706  021C                     	;# 
  5707  021D                     	;# 
  5708  021D                     	;# 
  5709  021E                     	;# 
  5710  021F                     	;# 
  5711  028C                     	;# 
  5712  028C                     	;# 
  5713  028D                     	;# 
  5714  028D                     	;# 
  5715  028E                     	;# 
  5716  028F                     	;# 
  5717  0290                     	;# 
  5718  0290                     	;# 
  5719  0291                     	;# 
  5720  0292                     	;# 
  5721  0292                     	;# 
  5722  0293                     	;# 
  5723  0293                     	;# 
  5724  0294                     	;# 
  5725  0295                     	;# 
  5726  0296                     	;# 
  5727  0296                     	;# 
  5728  0297                     	;# 
  5729  0298                     	;# 
  5730  0298                     	;# 
  5731  0299                     	;# 
  5732  0299                     	;# 
  5733  029A                     	;# 
  5734  029B                     	;# 
  5735  029C                     	;# 
  5736  029C                     	;# 
  5737  029D                     	;# 
  5738  030C                     	;# 
  5739  030C                     	;# 
  5740  030D                     	;# 
  5741  030E                     	;# 
  5742  030F                     	;# 
  5743  0310                     	;# 
  5744  0310                     	;# 
  5745  0311                     	;# 
  5746  0312                     	;# 
  5747  0313                     	;# 
  5748  0314                     	;# 
  5749  0314                     	;# 
  5750  0315                     	;# 
  5751  0316                     	;# 
  5752  0317                     	;# 
  5753  0318                     	;# 
  5754  0318                     	;# 
  5755  0319                     	;# 
  5756  031A                     	;# 
  5757  031B                     	;# 
  5758  031C                     	;# 
  5759  031C                     	;# 
  5760  031D                     	;# 
  5761  031E                     	;# 
  5762  031F                     	;# 
  5763  038C                     	;# 
  5764  038C                     	;# 
  5765  038D                     	;# 
  5766  038E                     	;# 
  5767  0390                     	;# 
  5768  0390                     	;# 
  5769  0391                     	;# 
  5770  0392                     	;# 
  5771  040C                     	;# 
  5772  040D                     	;# 
  5773  040E                     	;# 
  5774  040F                     	;# 
  5775  0410                     	;# 
  5776  0411                     	;# 
  5777  0416                     	;# 
  5778  0416                     	;# 
  5779  0417                     	;# 
  5780  0418                     	;# 
  5781  0418                     	;# 
  5782  0419                     	;# 
  5783  041A                     	;# 
  5784  041A                     	;# 
  5785  041B                     	;# 
  5786  041C                     	;# 
  5787  041C                     	;# 
  5788  041D                     	;# 
  5789  041E                     	;# 
  5790  041F                     	;# 
  5791  048C                     	;# 
  5792  048C                     	;# 
  5793  048D                     	;# 
  5794  048E                     	;# 
  5795  048F                     	;# 
  5796  048F                     	;# 
  5797  0490                     	;# 
  5798  0491                     	;# 
  5799  0492                     	;# 
  5800  0492                     	;# 
  5801  0493                     	;# 
  5802  0494                     	;# 
  5803  0495                     	;# 
  5804  0495                     	;# 
  5805  0496                     	;# 
  5806  0497                     	;# 
  5807  0498                     	;# 
  5808  0499                     	;# 
  5809  049A                     	;# 
  5810  049B                     	;# 
  5811  049C                     	;# 
  5812  049D                     	;# 
  5813  050C                     	;# 
  5814  050C                     	;# 
  5815  050D                     	;# 
  5816  050E                     	;# 
  5817  050F                     	;# 
  5818  050F                     	;# 
  5819  0510                     	;# 
  5820  0511                     	;# 
  5821  0512                     	;# 
  5822  0512                     	;# 
  5823  0513                     	;# 
  5824  0514                     	;# 
  5825  0515                     	;# 
  5826  0515                     	;# 
  5827  0516                     	;# 
  5828  0517                     	;# 
  5829  0518                     	;# 
  5830  0519                     	;# 
  5831  051A                     	;# 
  5832  051B                     	;# 
  5833  051C                     	;# 
  5834  051D                     	;# 
  5835  058C                     	;# 
  5836  058C                     	;# 
  5837  058D                     	;# 
  5838  058E                     	;# 
  5839  058F                     	;# 
  5840  058F                     	;# 
  5841  0590                     	;# 
  5842  0591                     	;# 
  5843  0592                     	;# 
  5844  0593                     	;# 
  5845  060C                     	;# 
  5846  060D                     	;# 
  5847  060E                     	;# 
  5848  060F                     	;# 
  5849  0610                     	;# 
  5850  0611                     	;# 
  5851  0612                     	;# 
  5852  0613                     	;# 
  5853  0614                     	;# 
  5854  0616                     	;# 
  5855  0617                     	;# 
  5856  0618                     	;# 
  5857  0619                     	;# 
  5858  061A                     	;# 
  5859  061B                     	;# 
  5860  061C                     	;# 
  5861  061D                     	;# 
  5862  061E                     	;# 
  5863  068C                     	;# 
  5864  068D                     	;# 
  5865  068E                     	;# 
  5866  068F                     	;# 
  5867  0690                     	;# 
  5868  0691                     	;# 
  5869  0692                     	;# 
  5870  0693                     	;# 
  5871  0694                     	;# 
  5872  070C                     	;# 
  5873  070D                     	;# 
  5874  070E                     	;# 
  5875  070F                     	;# 
  5876  0710                     	;# 
  5877  0711                     	;# 
  5878  0712                     	;# 
  5879  0713                     	;# 
  5880  0714                     	;# 
  5881  0716                     	;# 
  5882  0717                     	;# 
  5883  0718                     	;# 
  5884  0719                     	;# 
  5885  071A                     	;# 
  5886  071B                     	;# 
  5887  071C                     	;# 
  5888  071D                     	;# 
  5889  071E                     	;# 
  5890  0796                     	;# 
  5891  0797                     	;# 
  5892  0798                     	;# 
  5893  0799                     	;# 
  5894  079A                     	;# 
  5895  079B                     	;# 
  5896  080C                     	;# 
  5897  080D                     	;# 
  5898  080E                     	;# 
  5899  080F                     	;# 
  5900  0810                     	;# 
  5901  0811                     	;# 
  5902  0812                     	;# 
  5903  0813                     	;# 
  5904  0814                     	;# 
  5905  081A                     	;# 
  5906  081B                     	;# 
  5907  081C                     	;# 
  5908  081D                     	;# 
  5909  081E                     	;# 
  5910  081F                     	;# 
  5911  088C                     	;# 
  5912  088D                     	;# 
  5913  088E                     	;# 
  5914  088F                     	;# 
  5915  0890                     	;# 
  5916  0891                     	;# 
  5917  0892                     	;# 
  5918  0893                     	;# 
  5919  0895                     	;# 
  5920  0896                     	;# 
  5921  0897                     	;# 
  5922  0898                     	;# 
  5923  0899                     	;# 
  5924  089A                     	;# 
  5925  089B                     	;# 
  5926  090C                     	;# 
  5927  090E                     	;# 
  5928  090F                     	;# 
  5929  091F                     	;# 
  5930  091F                     	;# 
  5931  098F                     	;# 
  5932  098F                     	;# 
  5933  0990                     	;# 
  5934  0991                     	;# 
  5935  0992                     	;# 
  5936  0993                     	;# 
  5937  0994                     	;# 
  5938  0995                     	;# 
  5939  0996                     	;# 
  5940  0997                     	;# 
  5941  0E0F                     	;# 
  5942  0E10                     	;# 
  5943  0E11                     	;# 
  5944  0E12                     	;# 
  5945  0E13                     	;# 
  5946  0E14                     	;# 
  5947  0E15                     	;# 
  5948  0E16                     	;# 
  5949  0E17                     	;# 
  5950  0E18                     	;# 
  5951  0E19                     	;# 
  5952  0E1A                     	;# 
  5953  0E1B                     	;# 
  5954  0E1C                     	;# 
  5955  0E1D                     	;# 
  5956  0E1E                     	;# 
  5957  0E1F                     	;# 
  5958  0E20                     	;# 
  5959  0E21                     	;# 
  5960  0E22                     	;# 
  5961  0E23                     	;# 
  5962  0E24                     	;# 
  5963  0E25                     	;# 
  5964  0E26                     	;# 
  5965  0E27                     	;# 
  5966  0E28                     	;# 
  5967  0E29                     	;# 
  5968  0E2A                     	;# 
  5969  0E2B                     	;# 
  5970  0E2C                     	;# 
  5971  0E2D                     	;# 
  5972  0E2E                     	;# 
  5973  0E2F                     	;# 
  5974  0E30                     	;# 
  5975  0E31                     	;# 
  5976  0E32                     	;# 
  5977  0E33                     	;# 
  5978  0E34                     	;# 
  5979  0E35                     	;# 
  5980  0E36                     	;# 
  5981  0E37                     	;# 
  5982  0E8F                     	;# 
  5983  0E90                     	;# 
  5984  0E91                     	;# 
  5985  0E92                     	;# 
  5986  0E93                     	;# 
  5987  0E94                     	;# 
  5988  0E95                     	;# 
  5989  0E96                     	;# 
  5990  0E97                     	;# 
  5991  0E9C                     	;# 
  5992  0E9D                     	;# 
  5993  0E9E                     	;# 
  5994  0EA1                     	;# 
  5995  0EA2                     	;# 
  5996  0EA3                     	;# 
  5997  0EA4                     	;# 
  5998  0EA5                     	;# 
  5999  0EA9                     	;# 
  6000  0EAA                     	;# 
  6001  0EAB                     	;# 
  6002  0EAC                     	;# 
  6003  0EB1                     	;# 
  6004  0EB2                     	;# 
  6005  0EB3                     	;# 
  6006  0EB8                     	;# 
  6007  0EB9                     	;# 
  6008  0EBA                     	;# 
  6009  0EBB                     	;# 
  6010  0EBC                     	;# 
  6011  0EBD                     	;# 
  6012  0EBE                     	;# 
  6013  0EC3                     	;# 
  6014  0EC5                     	;# 
  6015  0EC6                     	;# 
  6016  0EC7                     	;# 
  6017  0EC8                     	;# 
  6018  0EC9                     	;# 
  6019  0ECA                     	;# 
  6020  0ECB                     	;# 
  6021  0ECC                     	;# 
  6022  0F10                     	;# 
  6023  0F11                     	;# 
  6024  0F12                     	;# 
  6025  0F13                     	;# 
  6026  0F14                     	;# 
  6027  0F15                     	;# 
  6028  0F16                     	;# 
  6029  0F17                     	;# 
  6030  0F18                     	;# 
  6031  0F19                     	;# 
  6032  0F1A                     	;# 
  6033  0F1B                     	;# 
  6034  0F1C                     	;# 
  6035  0F1D                     	;# 
  6036  0F1E                     	;# 
  6037  0F1F                     	;# 
  6038  0F20                     	;# 
  6039  0F21                     	;# 
  6040  0F22                     	;# 
  6041  0F23                     	;# 
  6042  0F24                     	;# 
  6043  0F25                     	;# 
  6044  0F26                     	;# 
  6045  0F27                     	;# 
  6046  0F28                     	;# 
  6047  0F29                     	;# 
  6048  0F2A                     	;# 
  6049  0F2B                     	;# 
  6050  0F2C                     	;# 
  6051  0F2D                     	;# 
  6052  0F2E                     	;# 
  6053  0F2F                     	;# 
  6054  0F30                     	;# 
  6055  0F31                     	;# 
  6056  0F32                     	;# 
  6057  0F38                     	;# 
  6058  0F39                     	;# 
  6059  0F3A                     	;# 
  6060  0F3B                     	;# 
  6061  0F3C                     	;# 
  6062  0F3D                     	;# 
  6063  0F3E                     	;# 
  6064  0F3F                     	;# 
  6065  0F40                     	;# 
  6066  0F41                     	;# 
  6067  0F43                     	;# 
  6068  0F44                     	;# 
  6069  0F45                     	;# 
  6070  0F46                     	;# 
  6071  0F47                     	;# 
  6072  0F48                     	;# 
  6073  0F49                     	;# 
  6074  0F4A                     	;# 
  6075  0F4B                     	;# 
  6076  0F4C                     	;# 
  6077  0F4E                     	;# 
  6078  0F4F                     	;# 
  6079  0F50                     	;# 
  6080  0F51                     	;# 
  6081  0F52                     	;# 
  6082  0F53                     	;# 
  6083  0F54                     	;# 
  6084  0F55                     	;# 
  6085  0F56                     	;# 
  6086  0F57                     	;# 
  6087  0F59                     	;# 
  6088  0F5A                     	;# 
  6089  0F5B                     	;# 
  6090  0F5C                     	;# 
  6091  0F5D                     	;# 
  6092  0F61                     	;# 
  6093  0F62                     	;# 
  6094  0F64                     	;# 
  6095  0F65                     	;# 
  6096  0F66                     	;# 
  6097  0F67                     	;# 
  6098  0F68                     	;# 
  6099  0F69                     	;# 
  6100  0F6A                     	;# 
  6101  0F6B                     	;# 
  6102  0F6C                     	;# 
  6103  0F6D                     	;# 
  6104  0FE4                     	;# 
  6105  0FE5                     	;# 
  6106  0FE6                     	;# 
  6107  0FE7                     	;# 
  6108  0FE8                     	;# 
  6109  0FE9                     	;# 
  6110  0FEA                     	;# 
  6111  0FEB                     	;# 
  6112  0FED                     	;# 
  6113  0FEE                     	;# 
  6114  0FEF                     	;# 
  6115  0000                     	;# 
  6116  0001                     	;# 
  6117  0002                     	;# 
  6118  0003                     	;# 
  6119  0004                     	;# 
  6120  0005                     	;# 
  6121  0006                     	;# 
  6122  0007                     	;# 
  6123  0008                     	;# 
  6124  0009                     	;# 
  6125  000A                     	;# 
  6126  000B                     	;# 
  6127  000C                     	;# 
  6128  000D                     	;# 
  6129  000E                     	;# 
  6130  000F                     	;# 
  6131  0010                     	;# 
  6132  0011                     	;# 
  6133  0012                     	;# 
  6134  0013                     	;# 
  6135  0014                     	;# 
  6136  0015                     	;# 
  6137  0016                     	;# 
  6138  0017                     	;# 
  6139  0018                     	;# 
  6140  0019                     	;# 
  6141  001A                     	;# 
  6142  001C                     	;# 
  6143  001C                     	;# 
  6144  001D                     	;# 
  6145  001D                     	;# 
  6146  001E                     	;# 
  6147  001F                     	;# 
  6148  008C                     	;# 
  6149  008C                     	;# 
  6150  008D                     	;# 
  6151  008E                     	;# 
  6152  008E                     	;# 
  6153  008F                     	;# 
  6154  0090                     	;# 
  6155  0090                     	;# 
  6156  0091                     	;# 
  6157  0093                     	;# 
  6158  0094                     	;# 
  6159  0095                     	;# 
  6160  0096                     	;# 
  6161  0097                     	;# 
  6162  0098                     	;# 
  6163  0099                     	;# 
  6164  009A                     	;# 
  6165  009B                     	;# 
  6166  009C                     	;# 
  6167  009D                     	;# 
  6168  009E                     	;# 
  6169  010C                     	;# 
  6170  010D                     	;# 
  6171  010E                     	;# 
  6172  010E                     	;# 
  6173  010F                     	;# 
  6174  0110                     	;# 
  6175  0110                     	;# 
  6176  0111                     	;# 
  6177  0112                     	;# 
  6178  0112                     	;# 
  6179  0113                     	;# 
  6180  0114                     	;# 
  6181  0114                     	;# 
  6182  0115                     	;# 
  6183  0116                     	;# 
  6184  0116                     	;# 
  6185  0117                     	;# 
  6186  0119                     	;# 
  6187  0119                     	;# 
  6188  0119                     	;# 
  6189  011A                     	;# 
  6190  011A                     	;# 
  6191  011A                     	;# 
  6192  011B                     	;# 
  6193  011B                     	;# 
  6194  011B                     	;# 
  6195  011B                     	;# 
  6196  011B                     	;# 
  6197  011C                     	;# 
  6198  011C                     	;# 
  6199  011C                     	;# 
  6200  011D                     	;# 
  6201  011D                     	;# 
  6202  011D                     	;# 
  6203  011E                     	;# 
  6204  011E                     	;# 
  6205  011E                     	;# 
  6206  011F                     	;# 
  6207  011F                     	;# 
  6208  011F                     	;# 
  6209  011F                     	;# 
  6210  011F                     	;# 
  6211  018C                     	;# 
  6212  018D                     	;# 
  6213  018E                     	;# 
  6214  018F                     	;# 
  6215  0190                     	;# 
  6216  0191                     	;# 
  6217  0192                     	;# 
  6218  0196                     	;# 
  6219  0197                     	;# 
  6220  0198                     	;# 
  6221  0199                     	;# 
  6222  019A                     	;# 
  6223  019B                     	;# 
  6224  019C                     	;# 
  6225  020C                     	;# 
  6226  020C                     	;# 
  6227  020D                     	;# 
  6228  020E                     	;# 
  6229  020F                     	;# 
  6230  020F                     	;# 
  6231  0210                     	;# 
  6232  0210                     	;# 
  6233  0211                     	;# 
  6234  0211                     	;# 
  6235  0212                     	;# 
  6236  0212                     	;# 
  6237  0213                     	;# 
  6238  0214                     	;# 
  6239  0215                     	;# 
  6240  0215                     	;# 
  6241  0216                     	;# 
  6242  0216                     	;# 
  6243  0217                     	;# 
  6244  0217                     	;# 
  6245  0218                     	;# 
  6246  0218                     	;# 
  6247  0219                     	;# 
  6248  021A                     	;# 
  6249  021B                     	;# 
  6250  021B                     	;# 
  6251  021C                     	;# 
  6252  021C                     	;# 
  6253  021D                     	;# 
  6254  021D                     	;# 
  6255  021E                     	;# 
  6256  021F                     	;# 
  6257  028C                     	;# 
  6258  028C                     	;# 
  6259  028D                     	;# 
  6260  028D                     	;# 
  6261  028E                     	;# 
  6262  028F                     	;# 
  6263  0290                     	;# 
  6264  0290                     	;# 
  6265  0291                     	;# 
  6266  0292                     	;# 
  6267  0292                     	;# 
  6268  0293                     	;# 
  6269  0293                     	;# 
  6270  0294                     	;# 
  6271  0295                     	;# 
  6272  0296                     	;# 
  6273  0296                     	;# 
  6274  0297                     	;# 
  6275  0298                     	;# 
  6276  0298                     	;# 
  6277  0299                     	;# 
  6278  0299                     	;# 
  6279  029A                     	;# 
  6280  029B                     	;# 
  6281  029C                     	;# 
  6282  029C                     	;# 
  6283  029D                     	;# 
  6284  030C                     	;# 
  6285  030C                     	;# 
  6286  030D                     	;# 
  6287  030E                     	;# 
  6288  030F                     	;# 
  6289  0310                     	;# 
  6290  0310                     	;# 
  6291  0311                     	;# 
  6292  0312                     	;# 
  6293  0313                     	;# 
  6294  0314                     	;# 
  6295  0314                     	;# 
  6296  0315                     	;# 
  6297  0316                     	;# 
  6298  0317                     	;# 
  6299  0318                     	;# 
  6300  0318                     	;# 
  6301  0319                     	;# 
  6302  031A                     	;# 
  6303  031B                     	;# 
  6304  031C                     	;# 
  6305  031C                     	;# 
  6306  031D                     	;# 
  6307  031E                     	;# 
  6308  031F                     	;# 
  6309  038C                     	;# 
  6310  038C                     	;# 
  6311  038D                     	;# 
  6312  038E                     	;# 
  6313  0390                     	;# 
  6314  0390                     	;# 
  6315  0391                     	;# 
  6316  0392                     	;# 
  6317  040C                     	;# 
  6318  040D                     	;# 
  6319  040E                     	;# 
  6320  040F                     	;# 
  6321  0410                     	;# 
  6322  0411                     	;# 
  6323  0416                     	;# 
  6324  0416                     	;# 
  6325  0417                     	;# 
  6326  0418                     	;# 
  6327  0418                     	;# 
  6328  0419                     	;# 
  6329  041A                     	;# 
  6330  041A                     	;# 
  6331  041B                     	;# 
  6332  041C                     	;# 
  6333  041C                     	;# 
  6334  041D                     	;# 
  6335  041E                     	;# 
  6336  041F                     	;# 
  6337  048C                     	;# 
  6338  048C                     	;# 
  6339  048D                     	;# 
  6340  048E                     	;# 
  6341  048F                     	;# 
  6342  048F                     	;# 
  6343  0490                     	;# 
  6344  0491                     	;# 
  6345  0492                     	;# 
  6346  0492                     	;# 
  6347  0493                     	;# 
  6348  0494                     	;# 
  6349  0495                     	;# 
  6350  0495                     	;# 
  6351  0496                     	;# 
  6352  0497                     	;# 
  6353  0498                     	;# 
  6354  0499                     	;# 
  6355  049A                     	;# 
  6356  049B                     	;# 
  6357  049C                     	;# 
  6358  049D                     	;# 
  6359  050C                     	;# 
  6360  050C                     	;# 
  6361  050D                     	;# 
  6362  050E                     	;# 
  6363  050F                     	;# 
  6364  050F                     	;# 
  6365  0510                     	;# 
  6366  0511                     	;# 
  6367  0512                     	;# 
  6368  0512                     	;# 
  6369  0513                     	;# 
  6370  0514                     	;# 
  6371  0515                     	;# 
  6372  0515                     	;# 
  6373  0516                     	;# 
  6374  0517                     	;# 
  6375  0518                     	;# 
  6376  0519                     	;# 
  6377  051A                     	;# 
  6378  051B                     	;# 
  6379  051C                     	;# 
  6380  051D                     	;# 
  6381  058C                     	;# 
  6382  058C                     	;# 
  6383  058D                     	;# 
  6384  058E                     	;# 
  6385  058F                     	;# 
  6386  058F                     	;# 
  6387  0590                     	;# 
  6388  0591                     	;# 
  6389  0592                     	;# 
  6390  0593                     	;# 
  6391  060C                     	;# 
  6392  060D                     	;# 
  6393  060E                     	;# 
  6394  060F                     	;# 
  6395  0610                     	;# 
  6396  0611                     	;# 
  6397  0612                     	;# 
  6398  0613                     	;# 
  6399  0614                     	;# 
  6400  0616                     	;# 
  6401  0617                     	;# 
  6402  0618                     	;# 
  6403  0619                     	;# 
  6404  061A                     	;# 
  6405  061B                     	;# 
  6406  061C                     	;# 
  6407  061D                     	;# 
  6408  061E                     	;# 
  6409  068C                     	;# 
  6410  068D                     	;# 
  6411  068E                     	;# 
  6412  068F                     	;# 
  6413  0690                     	;# 
  6414  0691                     	;# 
  6415  0692                     	;# 
  6416  0693                     	;# 
  6417  0694                     	;# 
  6418  070C                     	;# 
  6419  070D                     	;# 
  6420  070E                     	;# 
  6421  070F                     	;# 
  6422  0710                     	;# 
  6423  0711                     	;# 
  6424  0712                     	;# 
  6425  0713                     	;# 
  6426  0714                     	;# 
  6427  0716                     	;# 
  6428  0717                     	;# 
  6429  0718                     	;# 
  6430  0719                     	;# 
  6431  071A                     	;# 
  6432  071B                     	;# 
  6433  071C                     	;# 
  6434  071D                     	;# 
  6435  071E                     	;# 
  6436  0796                     	;# 
  6437  0797                     	;# 
  6438  0798                     	;# 
  6439  0799                     	;# 
  6440  079A                     	;# 
  6441  079B                     	;# 
  6442  080C                     	;# 
  6443  080D                     	;# 
  6444  080E                     	;# 
  6445  080F                     	;# 
  6446  0810                     	;# 
  6447  0811                     	;# 
  6448  0812                     	;# 
  6449  0813                     	;# 
  6450  0814                     	;# 
  6451  081A                     	;# 
  6452  081B                     	;# 
  6453  081C                     	;# 
  6454  081D                     	;# 
  6455  081E                     	;# 
  6456  081F                     	;# 
  6457  088C                     	;# 
  6458  088D                     	;# 
  6459  088E                     	;# 
  6460  088F                     	;# 
  6461  0890                     	;# 
  6462  0891                     	;# 
  6463  0892                     	;# 
  6464  0893                     	;# 
  6465  0895                     	;# 
  6466  0896                     	;# 
  6467  0897                     	;# 
  6468  0898                     	;# 
  6469  0899                     	;# 
  6470  089A                     	;# 
  6471  089B                     	;# 
  6472  090C                     	;# 
  6473  090E                     	;# 
  6474  090F                     	;# 
  6475  091F                     	;# 
  6476  091F                     	;# 
  6477  098F                     	;# 
  6478  098F                     	;# 
  6479  0990                     	;# 
  6480  0991                     	;# 
  6481  0992                     	;# 
  6482  0993                     	;# 
  6483  0994                     	;# 
  6484  0995                     	;# 
  6485  0996                     	;# 
  6486  0997                     	;# 
  6487  0E0F                     	;# 
  6488  0E10                     	;# 
  6489  0E11                     	;# 
  6490  0E12                     	;# 
  6491  0E13                     	;# 
  6492  0E14                     	;# 
  6493  0E15                     	;# 
  6494  0E16                     	;# 
  6495  0E17                     	;# 
  6496  0E18                     	;# 
  6497  0E19                     	;# 
  6498  0E1A                     	;# 
  6499  0E1B                     	;# 
  6500  0E1C                     	;# 
  6501  0E1D                     	;# 
  6502  0E1E                     	;# 
  6503  0E1F                     	;# 
  6504  0E20                     	;# 
  6505  0E21                     	;# 
  6506  0E22                     	;# 
  6507  0E23                     	;# 
  6508  0E24                     	;# 
  6509  0E25                     	;# 
  6510  0E26                     	;# 
  6511  0E27                     	;# 
  6512  0E28                     	;# 
  6513  0E29                     	;# 
  6514  0E2A                     	;# 
  6515  0E2B                     	;# 
  6516  0E2C                     	;# 
  6517  0E2D                     	;# 
  6518  0E2E                     	;# 
  6519  0E2F                     	;# 
  6520  0E30                     	;# 
  6521  0E31                     	;# 
  6522  0E32                     	;# 
  6523  0E33                     	;# 
  6524  0E34                     	;# 
  6525  0E35                     	;# 
  6526  0E36                     	;# 
  6527  0E37                     	;# 
  6528  0E8F                     	;# 
  6529  0E90                     	;# 
  6530  0E91                     	;# 
  6531  0E92                     	;# 
  6532  0E93                     	;# 
  6533  0E94                     	;# 
  6534  0E95                     	;# 
  6535  0E96                     	;# 
  6536  0E97                     	;# 
  6537  0E9C                     	;# 
  6538  0E9D                     	;# 
  6539  0E9E                     	;# 
  6540  0EA1                     	;# 
  6541  0EA2                     	;# 
  6542  0EA3                     	;# 
  6543  0EA4                     	;# 
  6544  0EA5                     	;# 
  6545  0EA9                     	;# 
  6546  0EAA                     	;# 
  6547  0EAB                     	;# 
  6548  0EAC                     	;# 
  6549  0EB1                     	;# 
  6550  0EB2                     	;# 
  6551  0EB3                     	;# 
  6552  0EB8                     	;# 
  6553  0EB9                     	;# 
  6554  0EBA                     	;# 
  6555  0EBB                     	;# 
  6556  0EBC                     	;# 
  6557  0EBD                     	;# 
  6558  0EBE                     	;# 
  6559  0EC3                     	;# 
  6560  0EC5                     	;# 
  6561  0EC6                     	;# 
  6562  0EC7                     	;# 
  6563  0EC8                     	;# 
  6564  0EC9                     	;# 
  6565  0ECA                     	;# 
  6566  0ECB                     	;# 
  6567  0ECC                     	;# 
  6568  0F10                     	;# 
  6569  0F11                     	;# 
  6570  0F12                     	;# 
  6571  0F13                     	;# 
  6572  0F14                     	;# 
  6573  0F15                     	;# 
  6574  0F16                     	;# 
  6575  0F17                     	;# 
  6576  0F18                     	;# 
  6577  0F19                     	;# 
  6578  0F1A                     	;# 
  6579  0F1B                     	;# 
  6580  0F1C                     	;# 
  6581  0F1D                     	;# 
  6582  0F1E                     	;# 
  6583  0F1F                     	;# 
  6584  0F20                     	;# 
  6585  0F21                     	;# 
  6586  0F22                     	;# 
  6587  0F23                     	;# 
  6588  0F24                     	;# 
  6589  0F25                     	;# 
  6590  0F26                     	;# 
  6591  0F27                     	;# 
  6592  0F28                     	;# 
  6593  0F29                     	;# 
  6594  0F2A                     	;# 
  6595  0F2B                     	;# 
  6596  0F2C                     	;# 
  6597  0F2D                     	;# 
  6598  0F2E                     	;# 
  6599  0F2F                     	;# 
  6600  0F30                     	;# 
  6601  0F31                     	;# 
  6602  0F32                     	;# 
  6603  0F38                     	;# 
  6604  0F39                     	;# 
  6605  0F3A                     	;# 
  6606  0F3B                     	;# 
  6607  0F3C                     	;# 
  6608  0F3D                     	;# 
  6609  0F3E                     	;# 
  6610  0F3F                     	;# 
  6611  0F40                     	;# 
  6612  0F41                     	;# 
  6613  0F43                     	;# 
  6614  0F44                     	;# 
  6615  0F45                     	;# 
  6616  0F46                     	;# 
  6617  0F47                     	;# 
  6618  0F48                     	;# 
  6619  0F49                     	;# 
  6620  0F4A                     	;# 
  6621  0F4B                     	;# 
  6622  0F4C                     	;# 
  6623  0F4E                     	;# 
  6624  0F4F                     	;# 
  6625  0F50                     	;# 
  6626  0F51                     	;# 
  6627  0F52                     	;# 
  6628  0F53                     	;# 
  6629  0F54                     	;# 
  6630  0F55                     	;# 
  6631  0F56                     	;# 
  6632  0F57                     	;# 
  6633  0F59                     	;# 
  6634  0F5A                     	;# 
  6635  0F5B                     	;# 
  6636  0F5C                     	;# 
  6637  0F5D                     	;# 
  6638  0F61                     	;# 
  6639  0F62                     	;# 
  6640  0F64                     	;# 
  6641  0F65                     	;# 
  6642  0F66                     	;# 
  6643  0F67                     	;# 
  6644  0F68                     	;# 
  6645  0F69                     	;# 
  6646  0F6A                     	;# 
  6647  0F6B                     	;# 
  6648  0F6C                     	;# 
  6649  0F6D                     	;# 
  6650  0FE4                     	;# 
  6651  0FE5                     	;# 
  6652  0FE6                     	;# 
  6653  0FE7                     	;# 
  6654  0FE8                     	;# 
  6655  0FE9                     	;# 
  6656  0FEA                     	;# 
  6657  0FEB                     	;# 
  6658  0FED                     	;# 
  6659  0FEE                     	;# 
  6660  0FEF                     	;# 
  6661                           
  6662 ;; Function _rd1RegCompleteHandler is unused but had its address taken
  6663  0000                     
  6664 ;; Function _rd2RegCompleteHandler is unused but had its address taken
  6665  0000                     
  6666 ;; Function _wr1RegCompleteHandler is unused but had its address taken
  6667  0000                     
  6668 ;; Function _wr2RegCompleteHandler is unused but had its address taken
  6669  0000                     
  6670 ;; Function _rdBlkRegCompleteHandler is unused but had its address taken
  6671  0000                     
  6672 ;; Function _I2C1_DO_IDLE is unused but had its address taken
  6673  0000                     
  6674 ;; Function _I2C1_DO_SEND_ADR_READ is unused but had its address taken
  6675  0000                     
  6676 ;; Function _I2C1_DO_SEND_ADR_WRITE is unused but had its address taken
  6677  0000                     
  6678 ;; Function _I2C1_DO_TX is unused but had its address taken
  6679  0000                     
  6680 ;; Function _I2C1_DO_RX is unused but had its address taken
  6681  0000                     
  6682 ;; Function _I2C1_DO_RCEN is unused but had its address taken
  6683  0000                     
  6684 ;; Function _I2C1_DO_TX_EMPTY is unused but had its address taken
  6685  0000                     
  6686 ;; Function _I2C1_DO_SEND_RESTART_READ is unused but had its address taken
  6687  0000                     
  6688 ;; Function _I2C1_DO_SEND_RESTART_WRITE is unused but had its address taken
  6689  0000                     
  6690 ;; Function _I2C1_DO_SEND_RESTART is unused but had its address taken
  6691  0000                     
  6692 ;; Function _I2C1_DO_SEND_STOP is unused but had its address taken
  6693  0000                     
  6694 ;; Function _I2C1_DO_RX_ACK is unused but had its address taken
  6695  0000                     
  6696 ;; Function _I2C1_DO_RX_NACK_STOP is unused but had its address taken
  6697  0000                     
  6698 ;; Function _I2C1_DO_RX_NACK_RESTART is unused but had its address taken
  6699  0000                     
  6700 ;; Function _I2C1_DO_RESET is unused but had its address taken
  6701  0000                     
  6702 ;; Function _I2C1_DO_ADDRESS_NACK is unused but had its address taken
  6703  0000                     
  6704 ;; Function _I2C1_CallbackReturnStop is unused but had its address taken
  6705  0000                     
  6706 ;; Function _I2C1_CallbackReturnReset is unused but had its address taken
  6707  0000                     
  6708                           	psect	stringtext1
  6709  1800                     __pstringtext1:
  6710  1800                     _i2c1_fsmStateTable:
  6711  1800  3400               	retlw	0
  6712  1801  3400               	retlw	0
  6713  1802  3400               	retlw	0
  6714  1803  3400               	retlw	0
  6715  1804  3400               	retlw	0
  6716  1805  3400               	retlw	0
  6717  1806  3400               	retlw	0
  6718  1807  3400               	retlw	0
  6719  1808  3400               	retlw	0
  6720  1809  3400               	retlw	0
  6721  180A  3400               	retlw	0
  6722  180B  3400               	retlw	0
  6723  180C  3400               	retlw	0
  6724  180D  3400               	retlw	0
  6725  180E  3400               	retlw	0
  6726  180F  3400               	retlw	0
  6727  1810  3400               	retlw	0
  6728  1811  3400               	retlw	0
  6729  1812  3400               	retlw	0
  6730  1813  3400               	retlw	0
  6731  1814  3400               	retlw	0
  6732  1815  3400               	retlw	0
  6733  1816  3400               	retlw	0
  6734  1817  3400               	retlw	0
  6735  1818  3400               	retlw	0
  6736  1819  3400               	retlw	0
  6737  181A  3400               	retlw	0
  6738  181B  3400               	retlw	0
  6739  181C  3400               	retlw	0
  6740  181D  3400               	retlw	0
  6741  181E  3400               	retlw	0
  6742  181F  3400               	retlw	0
  6743  1820                     __end_of_i2c1_fsmStateTable:
  6744                           
  6745                           	psect	nvBANK1
  6746  00E5                     __pnvBANK1:
  6747  00E5                     _TMR1_InterruptHandler:
  6748  00E5                     	ds	2
  6749  00E7                     _timer1ReloadVal:
  6750  00E7                     	ds	2
  6751  0016                     _LATAbits	set	22
  6752  000C                     _PORTAbits	set	12
  6753  000D                     _PORTBbits	set	13
  6754  000B                     _INTCONbits	set	11
  6755  0014                     _TRISD	set	20
  6756  0013                     _TRISC	set	19
  6757  0012                     _TRISB	set	18
  6758  0011                     _TRISA	set	17
  6759  0015                     _TRISE	set	21
  6760  0018                     _LATC	set	24
  6761  0017                     _LATB	set	23
  6762  0016                     _LATA	set	22
  6763  0019                     _LATD	set	25
  6764  001A                     _LATE	set	26
  6765  0013                     _TRISCbits	set	19
  6766  0094                     _ADCON1bits	set	148
  6767  008E                     _ADPREVL	set	142
  6768  008F                     _ADPREVH	set	143
  6769  0097                     _ADSTATbits	set	151
  6770  0090                     _ADACCL	set	144
  6771  0091                     _ADACCH	set	145
  6772  0095                     _ADCON2bits	set	149
  6773  0096                     _ADCON3bits	set	150
  6774  008C                     _ADRESL	set	140
  6775  008D                     _ADRESH	set	141
  6776  0093                     _ADCON0bits	set	147
  6777  009D                     _ADACQ	set	157
  6778  0093                     _ADCON0	set	147
  6779  0098                     _ADCLK	set	152
  6780  0099                     _ADACT	set	153
  6781  009A                     _ADREF	set	154
  6782  0097                     _ADSTAT	set	151
  6783  0096                     _ADCON3	set	150
  6784  0095                     _ADCON2	set	149
  6785  0094                     _ADCON1	set	148
  6786  009C                     _ADPRE	set	156
  6787  009B                     _ADCAP	set	155
  6788  009E                     _ADPCH	set	158
  6789  0116                     _ADERRL	set	278
  6790  0117                     _ADERRH	set	279
  6791  0114                     _ADFLTRL	set	276
  6792  0115                     _ADFLTRH	set	277
  6793  010C                     _ADCNT	set	268
  6794  010D                     _ADRPT	set	269
  6795  0113                     _ADSTPTH	set	275
  6796  0112                     _ADSTPTL	set	274
  6797  0111                     _ADUTHH	set	273
  6798  0110                     _ADUTHL	set	272
  6799  010F                     _ADLTHH	set	271
  6800  010E                     _ADLTHL	set	270
  6801  018C                     _SSP1BUF	set	396
  6802  018F                     _SSP1STATbits	set	399
  6803  0191                     _SSP1CON2bits	set	401
  6804  0190                     _SSP1CON1bits	set	400
  6805  018D                     _SSP1ADD	set	397
  6806  0191                     _SSP1CON2	set	401
  6807  0190                     _SSP1CON1	set	400
  6808  018F                     _SSP1STAT	set	399
  6809  020F                     _T1GCONbits	set	527
  6810  020E                     _T1CONbits	set	526
  6811  020E                     _T1CON	set	526
  6812  020C                     _TMR1L	set	524
  6813  020D                     _TMR1H	set	525
  6814  0211                     _T1CLK	set	529
  6815  0210                     _T1GATE	set	528
  6816  020F                     _T1GCON	set	527
  6817  0719                     _PIE3bits	set	1817
  6818  0710                     _PIR4bits	set	1808
  6819  071A                     _PIE4bits	set	1818
  6820  070F                     _PIR3bits	set	1807
  6821  079B                     _PMD5	set	1947
  6822  079A                     _PMD4	set	1946
  6823  0799                     _PMD3	set	1945
  6824  0798                     _PMD2	set	1944
  6825  0797                     _PMD1	set	1943
  6826  0796                     _PMD0	set	1942
  6827  081F                     _NVMCON2	set	2079
  6828  081C                     _NVMDATL	set	2076
  6829  081D                     _NVMDATH	set	2077
  6830  081E                     _NVMCON1bits	set	2078
  6831  081B                     _NVMADRH	set	2075
  6832  081A                     _NVMADRL	set	2074
  6833  0892                     _OSCTUNE	set	2194
  6834  0893                     _OSCFRQ	set	2195
  6835  0891                     _OSCEN	set	2193
  6836  088F                     _OSCCON3	set	2191
  6837  088D                     _OSCCON1	set	2189
  6838  0EC6                     _SSP1DATPPS	set	3782
  6839  0EC5                     _SSP1CLKPPS	set	3781
  6840  0F24                     _RC4PPS	set	3876
  6841  0F23                     _RC3PPS	set	3875
  6842  0F68                     _INLVLE	set	3944
  6843  0F5D                     _INLVLD	set	3933
  6844  0F52                     _INLVLC	set	3922
  6845  0F47                     _INLVLB	set	3911
  6846  0F3C                     _INLVLA	set	3900
  6847  0F67                     _SLRCONE	set	3943
  6848  0F5C                     _SLRCOND	set	3932
  6849  0F51                     _SLRCONC	set	3921
  6850  0F46                     _SLRCONB	set	3910
  6851  0F3B                     _SLRCONA	set	3899
  6852  0F5B                     _ODCOND	set	3931
  6853  0F50                     _ODCONC	set	3920
  6854  0F45                     _ODCONB	set	3909
  6855  0F3A                     _ODCONA	set	3898
  6856  0F66                     _ODCONE	set	3942
  6857  0F4F                     _WPUC	set	3919
  6858  0F39                     _WPUA	set	3897
  6859  0F44                     _WPUB	set	3908
  6860  0F65                     _WPUE	set	3941
  6861  0F5A                     _WPUD	set	3930
  6862  0F38                     _ANSELA	set	3896
  6863  0F64                     _ANSELE	set	3940
  6864  0F43                     _ANSELB	set	3907
  6865  0F4E                     _ANSELC	set	3918
  6866  0F59                     _ANSELD	set	3929
  6867                           
  6868                           	psect	stringtext2
  6869  1820                     __pstringtext2:
  6870  1820                     STR_2:
  6871  1820  3453               	retlw	83	;'S'
  6872  1821  3454               	retlw	84	;'T'
  6873  1822  3452               	retlw	82	;'R'
  6874  1823  342D               	retlw	45	;'-'
  6875  1824  3452               	retlw	82	;'R'
  6876  1825  3454               	retlw	84	;'T'
  6877  1826  3453               	retlw	83	;'S'
  6878  1827  3400               	retlw	0
  6879                           
  6880                           	psect	stringtext3
  6881  1828                     __pstringtext3:
  6882  1828                     STR_3:
  6883  1828  3425               	retlw	37	;'%'
  6884  1829  3430               	retlw	48	;'0'
  6885  182A  3432               	retlw	50	;'2'
  6886  182B  3464               	retlw	100	;'d'
  6887  182C  3420               	retlw	32	;' '
  6888  182D  3443               	retlw	67	;'C'
  6889  182E  3400               	retlw	0
  6890                           
  6891                           	psect	stringtext4
  6892  182F                     __pstringtext4:
  6893  182F                     STR_1:
  6894  182F  3454               	retlw	84	;'T'
  6895  1830  3465               	retlw	101	;'e'
  6896  1831  346D               	retlw	109	;'m'
  6897  1832  3470               	retlw	112	;'p'
  6898  1833  3400               	retlw	0
  6899                           
  6900                           	psect	stringtext5
  6901  0000                     __pstringtext5:
  6902                           
  6903                           	psect	cinit
  6904  001A                     start_initialization:	
  6905                           ; #config settings
  6906                           
  6907  001A                     __initialization:
  6908                           
  6909                           ; Clear objects allocated to COMMON
  6910  001A  01F5               	clrf	__pbssCOMMON& (0+127)
  6911  001B  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
  6912  001C  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
  6913  001D  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
  6914                           
  6915                           ; Clear objects allocated to BANK1
  6916  001E  0021               	movlb	1	; select bank1
  6917  001F  01E9               	clrf	__pbssBANK1& (0+127)
  6918  0020  01EA               	clrf	(__pbssBANK1+1)& (0+127)
  6919  0021  01EB               	clrf	(__pbssBANK1+2)& (0+127)
  6920  0022  01EC               	clrf	(__pbssBANK1+3)& (0+127)
  6921                           
  6922                           ; Clear objects allocated to BANK2
  6923  0023  3020               	movlw	low __pbssBANK2
  6924  0024  0084               	movwf	4
  6925  0025  3001               	movlw	high __pbssBANK2
  6926  0026  0085               	movwf	5
  6927  0027  303D               	movlw	61
  6928  0028  3196  264F  3180   	fcall	clear_ram0
  6929  002B                     end_of_initialization:	
  6930                           ;End of C runtime variable initialization code
  6931                           
  6932  002B                     __end_of__initialization:
  6933  002B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6934  002C  0020               	movlb	0
  6935  002D  3186  2E0C         	ljmp	_main	;jump to C main() function
  6936                           
  6937                           	psect	bssCOMMON
  6938  0075                     __pbssCOMMON:
  6939  0075                     _prec:
  6940  0075                     	ds	2
  6941  0077                     _flags:
  6942  0077                     	ds	2
  6943                           
  6944                           	psect	bssBANK1
  6945  00E9                     __pbssBANK1:
  6946  00E9                     _nout:
  6947  00E9                     	ds	2
  6948  00EB                     _width:
  6949  00EB                     	ds	2
  6950                           
  6951                           	psect	bssBANK2
  6952  0120                     __pbssBANK2:
  6953  0120                     _I2C1_Status:
  6954  0120                     	ds	29
  6955  013D                     _dbuf:
  6956  013D                     	ds	32
  6957                           
  6958                           	psect	clrtext
  6959  164F                     clear_ram0:	
  6960                           ;	Called with FSR0 containing the base address, and
  6961                           ;	WREG with the size to clear
  6962                           
  6963  164F  0064               	clrwdt	;clear the watchdog before getting into this loop
  6964  1650                     clrloop0:
  6965  1650  0180               	clrf	0	;clear RAM location pointed to by FSR
  6966  1651  3101               	addfsr 0,1
  6967  1652  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  6968  1653  2E50               	goto	clrloop0	;have we reached the end yet?
  6969  1654  3400               	retlw	0	;all done for this memory range, return
  6970                           
  6971                           	psect	cstackBANK1
  6972  00A0                     __pcstackBANK1:
  6973  00A0                     ?_vfprintf:
  6974  00A0                     vfprintf@fmt:	
  6975                           ; 2 bytes @ 0x0
  6976                           
  6977                           
  6978                           ; 2 bytes @ 0x0
  6979  00A0                     	ds	2
  6980  00A2                     vfprintf@ap:
  6981                           
  6982                           ; 1 bytes @ 0x2
  6983  00A2                     	ds	1
  6984  00A3                     vfprintf@fp:
  6985                           
  6986                           ; 1 bytes @ 0x3
  6987  00A3                     	ds	1
  6988  00A4                     vfprintf@cfmt:
  6989                           
  6990                           ; 2 bytes @ 0x4
  6991  00A4                     	ds	2
  6992  00A6                     ?_sprintf:
  6993  00A6                     sprintf@fmt:	
  6994                           ; 2 bytes @ 0x6
  6995                           
  6996                           
  6997                           ; 2 bytes @ 0x6
  6998  00A6                     	ds	4
  6999  00AA                     ??_sprintf:
  7000                           
  7001                           ; 1 bytes @ 0xA
  7002  00AA                     	ds	1
  7003  00AB                     sprintf@s:
  7004                           
  7005                           ; 1 bytes @ 0xB
  7006  00AB                     	ds	1
  7007  00AC                     sprintf@ap:
  7008                           
  7009                           ; 1 bytes @ 0xC
  7010  00AC                     	ds	1
  7011  00AD                     sprintf@f:
  7012                           
  7013                           ; 5 bytes @ 0xD
  7014  00AD                     	ds	5
  7015  00B2                     ??_main:
  7016                           
  7017                           ; 1 bytes @ 0x12
  7018  00B2                     	ds	12
  7019  00BE                     main@buf:
  7020                           
  7021                           ; 17 bytes @ 0x1E
  7022  00BE                     	ds	17
  7023  00CF                     main@readRingBufferAddr:
  7024                           
  7025                           ; 2 bytes @ 0x2F
  7026  00CF                     	ds	2
  7027  00D1                     main@c:
  7028                           
  7029                           ; 1 bytes @ 0x31
  7030  00D1                     	ds	1
  7031  00D2                     main@dataeeData:
  7032                           
  7033                           ; 1 bytes @ 0x32
  7034  00D2                     	ds	1
  7035  00D3                     main@hours:
  7036                           
  7037                           ; 1 bytes @ 0x33
  7038  00D3                     	ds	1
  7039  00D4                     main@minutes:
  7040                           
  7041                           ; 1 bytes @ 0x34
  7042  00D4                     	ds	1
  7043  00D5                     main@seconds:
  7044                           
  7045                           ; 1 bytes @ 0x35
  7046  00D5                     	ds	1
  7047  00D6                     main@temperature:
  7048                           
  7049                           ; 1 bytes @ 0x36
  7050  00D6                     	ds	1
  7051  00D7                     main@luminosity:
  7052                           
  7053                           ; 1 bytes @ 0x37
  7054  00D7                     	ds	1
  7055  00D8                     main@magic_word:
  7056                           
  7057                           ; 1 bytes @ 0x38
  7058  00D8                     	ds	1
  7059  00D9                     main@NREG:
  7060                           
  7061                           ; 1 bytes @ 0x39
  7062  00D9                     	ds	1
  7063  00DA                     main@NR:
  7064                           
  7065                           ; 1 bytes @ 0x3A
  7066  00DA                     	ds	1
  7067  00DB                     main@WI:
  7068                           
  7069                           ; 1 bytes @ 0x3B
  7070  00DB                     	ds	1
  7071  00DC                     main@RI:
  7072                           
  7073                           ; 1 bytes @ 0x3C
  7074  00DC                     	ds	1
  7075  00DD                     main@PMON:
  7076                           
  7077                           ; 1 bytes @ 0x3D
  7078  00DD                     	ds	1
  7079  00DE                     main@TALA:
  7080                           
  7081                           ; 1 bytes @ 0x3E
  7082  00DE                     	ds	1
  7083  00DF                     main@ALAT:
  7084                           
  7085                           ; 1 bytes @ 0x3F
  7086  00DF                     	ds	1
  7087  00E0                     main@ALAL:
  7088                           
  7089                           ; 1 bytes @ 0x40
  7090  00E0                     	ds	1
  7091  00E1                     main@ALAF:
  7092                           
  7093                           ; 1 bytes @ 0x41
  7094  00E1                     	ds	1
  7095  00E2                     main@CLKH:
  7096                           
  7097                           ; 1 bytes @ 0x42
  7098  00E2                     	ds	1
  7099  00E3                     main@CLKM:
  7100                           
  7101                           ; 1 bytes @ 0x43
  7102  00E3                     	ds	1
  7103  00E4                     main@checksum:
  7104                           
  7105                           ; 1 bytes @ 0x44
  7106  00E4                     	ds	1
  7107                           
  7108                           	psect	cstackCOMMON
  7109  0070                     __pcstackCOMMON:
  7110  0070                     ?_PMD_Initialize:
  7111  0070                     ?_I2C1_Initialize:	
  7112                           ; 1 bytes @ 0x0
  7113                           
  7114  0070                     ?_OSCILLATOR_Initialize:	
  7115                           ; 1 bytes @ 0x0
  7116                           
  7117  0070                     ?_ADCC_Initialize:	
  7118                           ; 1 bytes @ 0x0
  7119                           
  7120  0070                     ?_TMR1_Initialize:	
  7121                           ; 1 bytes @ 0x0
  7122                           
  7123  0070                     ?_TMR1_ISR:	
  7124                           ; 1 bytes @ 0x0
  7125                           
  7126  0070                     ?_TMR1_DefaultInterruptHandler:	
  7127                           ; 1 bytes @ 0x0
  7128                           
  7129  0070                     ??_TMR1_DefaultInterruptHandler:	
  7130                           ; 1 bytes @ 0x0
  7131                           
  7132  0070                     ?_TMR1_CallBack:	
  7133                           ; 1 bytes @ 0x0
  7134                           
  7135  0070                     ?_initializeEPROM:	
  7136                           ; 1 bytes @ 0x0
  7137                           
  7138  0070                     ?_putch:	
  7139                           ; 1 bytes @ 0x0
  7140                           
  7141  0070                     ?_OpenI2C:	
  7142                           ; 1 bytes @ 0x0
  7143                           
  7144  0070                     ?_ReadI2C:	
  7145                           ; 1 bytes @ 0x0
  7146                           
  7147  0070                     ?_WriteI2C:	
  7148                           ; 1 bytes @ 0x0
  7149                           
  7150  0070                     ?_LCDsend:	
  7151                           ; 1 bytes @ 0x0
  7152                           
  7153  0070                     ?_LCDrecv:	
  7154                           ; 1 bytes @ 0x0
  7155                           
  7156  0070                     ?_LCDinit:	
  7157                           ; 1 bytes @ 0x0
  7158                           
  7159  0070                     ?_LCDcmd:	
  7160                           ; 1 bytes @ 0x0
  7161                           
  7162  0070                     ?_LCDchar:	
  7163                           ; 1 bytes @ 0x0
  7164                           
  7165  0070                     ?_PIN_MANAGER_Initialize:	
  7166                           ; 1 bytes @ 0x0
  7167                           
  7168  0070                     ?_SYSTEM_Initialize:	
  7169                           ; 1 bytes @ 0x0
  7170                           
  7171  0070                     ?_INTERRUPT_InterruptManager:	
  7172                           ; 1 bytes @ 0x0
  7173                           
  7174  0070                     ?_TMR1_WriteTimer:	
  7175                           ; 1 bytes @ 0x0
  7176                           
  7177  0070                     ?_S1:	
  7178                           ; 1 bytes @ 0x0
  7179                           
  7180  0070                     ?_timerInterrupt:	
  7181                           ; 1 bytes @ 0x0
  7182                           
  7183  0070                     ?_readTC74:	
  7184                           ; 1 bytes @ 0x0
  7185                           
  7186  0070                     ?_main:	
  7187                           ; 1 bytes @ 0x0
  7188                           
  7189  0070                     ?_ADCC_GetSingleConversion:	
  7190                           ; 1 bytes @ 0x0
  7191                           
  7192  0070                     putch@c:	
  7193                           ; 2 bytes @ 0x0
  7194                           
  7195  0070                     TMR1_WriteTimer@timerVal:	
  7196                           ; 1 bytes @ 0x0
  7197                           
  7198                           
  7199                           ; 2 bytes @ 0x0
  7200  0070                     	ds	2
  7201  0072                     ??_TMR1_WriteTimer:
  7202  0072                     ??_ADCC_GetSingleConversion:	
  7203                           ; 1 bytes @ 0x2
  7204                           
  7205  0072                     ADCC_GetSingleConversion@channel:	
  7206                           ; 1 bytes @ 0x2
  7207                           
  7208                           
  7209                           ; 1 bytes @ 0x2
  7210  0072                     	ds	1
  7211  0073                     ??_timerInterrupt:
  7212  0073                     timerInterrupt@value:	
  7213                           ; 1 bytes @ 0x3
  7214                           
  7215                           
  7216                           ; 2 bytes @ 0x3
  7217  0073                     	ds	2
  7218  0075                     ??_PMD_Initialize:
  7219  0075                     ??_I2C1_Initialize:	
  7220                           ; 1 bytes @ 0x5
  7221                           
  7222  0075                     ??_OSCILLATOR_Initialize:	
  7223                           ; 1 bytes @ 0x5
  7224                           
  7225  0075                     ??_ADCC_Initialize:	
  7226                           ; 1 bytes @ 0x5
  7227                           
  7228  0075                     ??_TMR1_Initialize:	
  7229                           ; 1 bytes @ 0x5
  7230                           
  7231  0075                     ??_TMR1_ISR:	
  7232                           ; 1 bytes @ 0x5
  7233                           
  7234  0075                     ??_TMR1_SetInterruptHandler:	
  7235                           ; 1 bytes @ 0x5
  7236                           
  7237  0075                     ??_TMR1_CallBack:	
  7238                           ; 1 bytes @ 0x5
  7239                           
  7240  0075                     ??_putch:	
  7241                           ; 1 bytes @ 0x5
  7242                           
  7243  0075                     ??_OpenI2C:	
  7244                           ; 1 bytes @ 0x5
  7245                           
  7246  0075                     ??_LCDcmd:	
  7247                           ; 1 bytes @ 0x5
  7248                           
  7249  0075                     ??_LCDchar:	
  7250                           ; 1 bytes @ 0x5
  7251                           
  7252  0075                     ??_LCDbusy:	
  7253                           ; 1 bytes @ 0x5
  7254                           
  7255  0075                     ??_PIN_MANAGER_Initialize:	
  7256                           ; 1 bytes @ 0x5
  7257                           
  7258  0075                     ??_SYSTEM_Initialize:	
  7259                           ; 1 bytes @ 0x5
  7260                           
  7261  0075                     ??_INTERRUPT_InterruptManager:	
  7262                           ; 1 bytes @ 0x5
  7263                           
  7264  0075                     ??_DATAEE_WriteByte:	
  7265                           ; 1 bytes @ 0x5
  7266                           
  7267  0075                     ??_DATAEE_ReadByte:	
  7268                           ; 1 bytes @ 0x5
  7269                           
  7270  0075                     ??_S1:	
  7271                           ; 1 bytes @ 0x5
  7272                           
  7273  0075                     ??___wmul:	
  7274                           ; 1 bytes @ 0x5
  7275                           
  7276                           
  7277                           	psect	cstackBANK0
  7278  0020                     __pcstackBANK0:	
  7279                           ; 1 bytes @ 0x5
  7280                           
  7281  0020                     ?_TMR1_SetInterruptHandler:
  7282  0020                     ??_ReadI2C:	
  7283                           ; 1 bytes @ 0x0
  7284                           
  7285  0020                     ??_WriteI2C:	
  7286                           ; 1 bytes @ 0x0
  7287                           
  7288  0020                     ?_DATAEE_WriteByte:	
  7289                           ; 1 bytes @ 0x0
  7290                           
  7291  0020                     ?_DATAEE_ReadByte:	
  7292                           ; 1 bytes @ 0x0
  7293                           
  7294  0020                     ?_fputc:	
  7295                           ; 1 bytes @ 0x0
  7296                           
  7297  0020                     ?_strlen:	
  7298                           ; 2 bytes @ 0x0
  7299                           
  7300  0020                     ?_isdigit:	
  7301                           ; 2 bytes @ 0x0
  7302                           
  7303  0020                     ?_isspace:	
  7304                           ; 2 bytes @ 0x0
  7305                           
  7306  0020                     ?_operADDR:	
  7307                           ; 2 bytes @ 0x0
  7308                           
  7309  0020                     ?___wmul:	
  7310                           ; 2 bytes @ 0x0
  7311                           
  7312  0020                     ?___aodiv:	
  7313                           ; 2 bytes @ 0x0
  7314                           
  7315  0020                     ?___aomod:	
  7316                           ; 8 bytes @ 0x0
  7317                           
  7318  0020                     TMR1_SetInterruptHandler@InterruptHandler:	
  7319                           ; 8 bytes @ 0x0
  7320                           
  7321  0020                     DATAEE_WriteByte@bAdd:	
  7322                           ; 2 bytes @ 0x0
  7323                           
  7324  0020                     DATAEE_ReadByte@bAdd:	
  7325                           ; 2 bytes @ 0x0
  7326                           
  7327  0020                     ___wmul@multiplier:	
  7328                           ; 2 bytes @ 0x0
  7329                           
  7330  0020                     isdigit@c:	
  7331                           ; 2 bytes @ 0x0
  7332                           
  7333  0020                     isspace@c:	
  7334                           ; 2 bytes @ 0x0
  7335                           
  7336  0020                     fputc@c:	
  7337                           ; 2 bytes @ 0x0
  7338                           
  7339  0020                     ___aodiv@divisor:	
  7340                           ; 2 bytes @ 0x0
  7341                           
  7342  0020                     ___aomod@divisor:	
  7343                           ; 8 bytes @ 0x0
  7344                           
  7345                           
  7346                           ; 8 bytes @ 0x0
  7347  0020                     	ds	1
  7348  0021                     WriteI2C@data_out:
  7349                           
  7350                           ; 1 bytes @ 0x1
  7351  0021                     	ds	1
  7352  0022                     ?_parseEPROMInitialization:
  7353  0022                     ??_strlen:	
  7354                           ; 1 bytes @ 0x2
  7355                           
  7356  0022                     ??_isdigit:	
  7357                           ; 1 bytes @ 0x2
  7358                           
  7359  0022                     ??_isspace:	
  7360                           ; 1 bytes @ 0x2
  7361                           
  7362  0022                     ??_LCDsend:	
  7363                           ; 1 bytes @ 0x2
  7364                           
  7365  0022                     ??_LCDrecv:	
  7366                           ; 1 bytes @ 0x2
  7367                           
  7368  0022                     ?_LCDsend2x4:	
  7369                           ; 1 bytes @ 0x2
  7370                           
  7371  0022                     ??_readTC74:	
  7372                           ; 1 bytes @ 0x2
  7373                           
  7374  0022                     ??_operADDR:	
  7375                           ; 1 bytes @ 0x2
  7376                           
  7377  0022                     LCDsend2x4@mode:	
  7378                           ; 1 bytes @ 0x2
  7379                           
  7380  0022                     DATAEE_WriteByte@bData:	
  7381                           ; 1 bytes @ 0x2
  7382                           
  7383  0022                     parseEPROMInitialization@NREG:	
  7384                           ; 1 bytes @ 0x2
  7385                           
  7386  0022                     fputc@fp:	
  7387                           ; 1 bytes @ 0x2
  7388                           
  7389  0022                     ___wmul@multiplicand:	
  7390                           ; 1 bytes @ 0x2
  7391                           
  7392                           
  7393                           ; 2 bytes @ 0x2
  7394  0022                     	ds	1
  7395  0023                     ??_fputc:
  7396  0023                     ??_LCDsend2x4:	
  7397                           ; 1 bytes @ 0x3
  7398                           
  7399  0023                     LCDsend@c:	
  7400                           ; 1 bytes @ 0x3
  7401                           
  7402  0023                     DATAEE_WriteByte@GIEBitValue:	
  7403                           ; 1 bytes @ 0x3
  7404                           
  7405  0023                     readTC74@value:	
  7406                           ; 1 bytes @ 0x3
  7407                           
  7408  0023                     parseEPROMInitialization@NR:	
  7409                           ; 1 bytes @ 0x3
  7410                           
  7411  0023                     strlen@a:	
  7412                           ; 1 bytes @ 0x3
  7413                           
  7414                           
  7415                           ; 1 bytes @ 0x3
  7416  0023                     	ds	1
  7417  0024                     ??_initializeEPROM:
  7418  0024                     LCDrecv@hc:	
  7419                           ; 1 bytes @ 0x4
  7420                           
  7421  0024                     operADDR@operation:	
  7422                           ; 1 bytes @ 0x4
  7423                           
  7424  0024                     parseEPROMInitialization@WI:	
  7425                           ; 1 bytes @ 0x4
  7426                           
  7427  0024                     _isspace$2956:	
  7428                           ; 1 bytes @ 0x4
  7429                           
  7430  0024                     strlen@s:	
  7431                           ; 1 bytes @ 0x4
  7432                           
  7433  0024                     ___wmul@product:	
  7434                           ; 1 bytes @ 0x4
  7435                           
  7436                           
  7437                           ; 2 bytes @ 0x4
  7438  0024                     	ds	1
  7439  0025                     LCDrecv@lc:
  7440  0025                     LCDsend2x4@c:	
  7441                           ; 1 bytes @ 0x5
  7442                           
  7443  0025                     parseEPROMInitialization@RI:	
  7444                           ; 1 bytes @ 0x5
  7445                           
  7446  0025                     operADDR@dataAddr:	
  7447                           ; 1 bytes @ 0x5
  7448                           
  7449                           
  7450                           ; 2 bytes @ 0x5
  7451  0025                     	ds	1
  7452  0026                     ?_atoi:
  7453  0026                     LCDrecv@mode:	
  7454                           ; 2 bytes @ 0x6
  7455                           
  7456  0026                     LCDsend2x4@hc:	
  7457                           ; 1 bytes @ 0x6
  7458                           
  7459  0026                     parseEPROMInitialization@PMON:	
  7460                           ; 1 bytes @ 0x6
  7461                           
  7462  0026                     atoi@s:	
  7463                           ; 1 bytes @ 0x6
  7464                           
  7465                           
  7466                           ; 2 bytes @ 0x6
  7467  0026                     	ds	1
  7468  0027                     ?_storeEPROMBuild:
  7469  0027                     ?_parseEPROMReading:	
  7470                           ; 1 bytes @ 0x7
  7471                           
  7472  0027                     ?_LCDbusy:	
  7473                           ; 1 bytes @ 0x7
  7474                           
  7475  0027                     LCDsend2x4@lc:	
  7476                           ; 2 bytes @ 0x7
  7477                           
  7478  0027                     storeEPROMBuild@minutes:	
  7479                           ; 1 bytes @ 0x7
  7480                           
  7481  0027                     parseEPROMReading@minutes:	
  7482                           ; 1 bytes @ 0x7
  7483                           
  7484  0027                     parseEPROMInitialization@TALA:	
  7485                           ; 1 bytes @ 0x7
  7486                           
  7487                           
  7488                           ; 1 bytes @ 0x7
  7489  0027                     	ds	1
  7490  0028                     ??_atoi:
  7491  0028                     ??_LCDinit:	
  7492                           ; 1 bytes @ 0x8
  7493                           
  7494  0028                     ?_fputs:	
  7495                           ; 1 bytes @ 0x8
  7496                           
  7497  0028                     LCDcmd@c:	
  7498                           ; 2 bytes @ 0x8
  7499                           
  7500  0028                     LCDchar@c:	
  7501                           ; 1 bytes @ 0x8
  7502                           
  7503  0028                     storeEPROMBuild@seconds:	
  7504                           ; 1 bytes @ 0x8
  7505                           
  7506  0028                     parseEPROMReading@seconds:	
  7507                           ; 1 bytes @ 0x8
  7508                           
  7509  0028                     parseEPROMInitialization@ALAT:	
  7510                           ; 1 bytes @ 0x8
  7511                           
  7512  0028                     fputs@fp:	
  7513                           ; 1 bytes @ 0x8
  7514                           
  7515  0028                     ___aodiv@dividend:	
  7516                           ; 1 bytes @ 0x8
  7517                           
  7518  0028                     ___aomod@dividend:	
  7519                           ; 8 bytes @ 0x8
  7520                           
  7521                           
  7522                           ; 8 bytes @ 0x8
  7523  0028                     	ds	1
  7524  0029                     ??_fputs:
  7525  0029                     ?_LCDstr:	
  7526                           ; 1 bytes @ 0x9
  7527                           
  7528  0029                     ?_LCDpos:	
  7529                           ; 1 bytes @ 0x9
  7530                           
  7531  0029                     LCDpos@c:	
  7532                           ; 1 bytes @ 0x9
  7533                           
  7534  0029                     storeEPROMBuild@temperature:	
  7535                           ; 1 bytes @ 0x9
  7536                           
  7537  0029                     parseEPROMReading@temperature:	
  7538                           ; 1 bytes @ 0x9
  7539                           
  7540  0029                     parseEPROMInitialization@ALAL:	
  7541                           ; 1 bytes @ 0x9
  7542                           
  7543  0029                     LCDstr@p:	
  7544                           ; 1 bytes @ 0x9
  7545                           
  7546                           
  7547                           ; 2 bytes @ 0x9
  7548  0029                     	ds	1
  7549  002A                     ??_LCDpos:
  7550  002A                     storeEPROMBuild@luminosity:	
  7551                           ; 1 bytes @ 0xA
  7552                           
  7553  002A                     parseEPROMReading@luminosity:	
  7554                           ; 1 bytes @ 0xA
  7555                           
  7556  002A                     parseEPROMInitialization@ALAF:	
  7557                           ; 1 bytes @ 0xA
  7558                           
  7559                           
  7560                           ; 1 bytes @ 0xA
  7561  002A                     	ds	1
  7562  002B                     ??_LCDstr:
  7563  002B                     LCDpos@l:	
  7564                           ; 1 bytes @ 0xB
  7565                           
  7566  002B                     storeEPROMBuild@operation:	
  7567                           ; 1 bytes @ 0xB
  7568                           
  7569  002B                     parseEPROMReading@operation:	
  7570                           ; 1 bytes @ 0xB
  7571                           
  7572  002B                     parseEPROMInitialization@CLKH:	
  7573                           ; 1 bytes @ 0xB
  7574                           
  7575                           
  7576                           ; 1 bytes @ 0xB
  7577  002B                     	ds	1
  7578  002C                     ??_storeEPROMBuild:
  7579  002C                     ??_parseEPROMReading:	
  7580                           ; 1 bytes @ 0xC
  7581                           
  7582  002C                     LCDpos@p:	
  7583                           ; 1 bytes @ 0xC
  7584                           
  7585  002C                     parseEPROMInitialization@CLKM:	
  7586                           ; 1 bytes @ 0xC
  7587                           
  7588  002C                     fputs@c:	
  7589                           ; 1 bytes @ 0xC
  7590                           
  7591  002C                     atoi@neg:	
  7592                           ; 1 bytes @ 0xC
  7593                           
  7594                           
  7595                           ; 2 bytes @ 0xC
  7596  002C                     	ds	1
  7597  002D                     storeEPROMBuild@hours:
  7598  002D                     parseEPROMReading@hours:	
  7599                           ; 1 bytes @ 0xD
  7600                           
  7601  002D                     parseEPROMInitialization@checksum:	
  7602                           ; 1 bytes @ 0xD
  7603                           
  7604  002D                     fputs@i:	
  7605                           ; 1 bytes @ 0xD
  7606                           
  7607                           
  7608                           ; 2 bytes @ 0xD
  7609  002D                     	ds	1
  7610  002E                     ??_parseEPROMInitialization:
  7611  002E                     LCDstr@c:	
  7612                           ; 1 bytes @ 0xE
  7613                           
  7614  002E                     storeEPROMBuild@dataAddr:	
  7615                           ; 1 bytes @ 0xE
  7616                           
  7617  002E                     parseEPROMReading@dataAddr:	
  7618                           ; 2 bytes @ 0xE
  7619                           
  7620  002E                     _atoi$2938:	
  7621                           ; 2 bytes @ 0xE
  7622                           
  7623                           
  7624                           ; 2 bytes @ 0xE
  7625  002E                     	ds	1
  7626  002F                     parseEPROMInitialization@magic_word:
  7627  002F                     fputs@s:	
  7628                           ; 1 bytes @ 0xF
  7629                           
  7630                           
  7631                           ; 1 bytes @ 0xF
  7632  002F                     	ds	1
  7633  0030                     ??___aodiv:
  7634  0030                     ??___aomod:	
  7635                           ; 1 bytes @ 0x10
  7636                           
  7637  0030                     ?_pad:	
  7638                           ; 1 bytes @ 0x10
  7639                           
  7640  0030                     pad@buf:	
  7641                           ; 2 bytes @ 0x10
  7642                           
  7643  0030                     _atoi$2940:	
  7644                           ; 1 bytes @ 0x10
  7645                           
  7646                           
  7647                           ; 2 bytes @ 0x10
  7648  0030                     	ds	1
  7649  0031                     ___aodiv@counter:
  7650  0031                     ___aomod@counter:	
  7651                           ; 1 bytes @ 0x11
  7652                           
  7653  0031                     pad@p:	
  7654                           ; 1 bytes @ 0x11
  7655                           
  7656                           
  7657                           ; 2 bytes @ 0x11
  7658  0031                     	ds	1
  7659  0032                     ___aodiv@sign:
  7660  0032                     ___aomod@sign:	
  7661                           ; 1 bytes @ 0x12
  7662                           
  7663  0032                     _atoi$2939:	
  7664                           ; 1 bytes @ 0x12
  7665                           
  7666                           
  7667                           ; 1 bytes @ 0x12
  7668  0032                     	ds	1
  7669  0033                     ??_pad:
  7670  0033                     ?_abs:	
  7671                           ; 1 bytes @ 0x13
  7672                           
  7673  0033                     abs@a:	
  7674                           ; 2 bytes @ 0x13
  7675                           
  7676  0033                     atoi@n:	
  7677                           ; 2 bytes @ 0x13
  7678                           
  7679  0033                     ___aodiv@quotient:	
  7680                           ; 2 bytes @ 0x13
  7681                           
  7682                           
  7683                           ; 8 bytes @ 0x13
  7684  0033                     	ds	1
  7685  0034                     pad@i:
  7686                           
  7687                           ; 2 bytes @ 0x14
  7688  0034                     	ds	1
  7689  0035                     ??_abs:
  7690                           
  7691                           ; 1 bytes @ 0x15
  7692  0035                     	ds	1
  7693  0036                     pad@w:
  7694                           
  7695                           ; 2 bytes @ 0x16
  7696  0036                     	ds	2
  7697  0038                     pad@fp:
  7698                           
  7699                           ; 1 bytes @ 0x18
  7700  0038                     	ds	3
  7701  003B                     ?_dtoa:
  7702  003B                     dtoa@d:	
  7703                           ; 2 bytes @ 0x1B
  7704                           
  7705                           
  7706                           ; 8 bytes @ 0x1B
  7707  003B                     	ds	8
  7708  0043                     ??_dtoa:
  7709                           
  7710                           ; 1 bytes @ 0x23
  7711  0043                     	ds	3
  7712  0046                     dtoa@fp:
  7713                           
  7714                           ; 1 bytes @ 0x26
  7715  0046                     	ds	1
  7716  0047                     _dtoa$2903:
  7717                           
  7718                           ; 2 bytes @ 0x27
  7719  0047                     	ds	2
  7720  0049                     dtoa@p:
  7721                           
  7722                           ; 2 bytes @ 0x29
  7723  0049                     	ds	2
  7724  004B                     dtoa@w:
  7725                           
  7726                           ; 2 bytes @ 0x2B
  7727  004B                     	ds	2
  7728  004D                     dtoa@s:
  7729                           
  7730                           ; 2 bytes @ 0x2D
  7731  004D                     	ds	2
  7732  004F                     dtoa@n:
  7733                           
  7734                           ; 8 bytes @ 0x2F
  7735  004F                     	ds	8
  7736  0057                     dtoa@i:
  7737                           
  7738                           ; 2 bytes @ 0x37
  7739  0057                     	ds	2
  7740  0059                     ?_vfpfcnvrt:
  7741  0059                     vfpfcnvrt@fmt:	
  7742                           ; 2 bytes @ 0x39
  7743                           
  7744                           
  7745                           ; 1 bytes @ 0x39
  7746  0059                     	ds	1
  7747  005A                     vfpfcnvrt@ap:
  7748                           
  7749                           ; 1 bytes @ 0x3A
  7750  005A                     	ds	1
  7751  005B                     ??_vfpfcnvrt:
  7752                           
  7753                           ; 1 bytes @ 0x3B
  7754  005B                     	ds	6
  7755  0061                     vfpfcnvrt@ll:
  7756                           
  7757                           ; 8 bytes @ 0x41
  7758  0061                     	ds	8
  7759  0069                     vfpfcnvrt@done:
  7760                           
  7761                           ; 2 bytes @ 0x49
  7762  0069                     	ds	2
  7763  006B                     _vfpfcnvrt$2918:
  7764                           
  7765                           ; 2 bytes @ 0x4B
  7766  006B                     	ds	2
  7767  006D                     vfpfcnvrt@fp:
  7768                           
  7769                           ; 1 bytes @ 0x4D
  7770  006D                     	ds	1
  7771  006E                     ??_vfprintf:
  7772                           
  7773                           ; 1 bytes @ 0x4E
  7774  006E                     	ds	2
  7775                           
  7776                           	psect	maintext
  7777  060C                     __pmaintext:	
  7778 ;;
  7779 ;;Main: autosize = 0, tempsize = 12, incstack = 0, save=0
  7780 ;;
  7781 ;; *************** function _main *****************
  7782 ;; Defined at:
  7783 ;;		line 118 in file "main.c"
  7784 ;; Parameters:    Size  Location     Type
  7785 ;;		None
  7786 ;; Auto vars:     Size  Location     Type
  7787 ;;  buf            17   30[BANK1 ] unsigned char [17]
  7788 ;;  dataeeAddr      2    0        unsigned short 
  7789 ;;  readRingBuff    2   47[BANK1 ] unsigned short 
  7790 ;;  writeRingBuf    2    0        unsigned short 
  7791 ;;  checksum        1   68[BANK1 ] unsigned char 
  7792 ;;  CLKM            1   67[BANK1 ] unsigned char 
  7793 ;;  CLKH            1   66[BANK1 ] unsigned char 
  7794 ;;  ALAF            1   65[BANK1 ] unsigned char 
  7795 ;;  ALAL            1   64[BANK1 ] unsigned char 
  7796 ;;  ALAT            1   63[BANK1 ] unsigned char 
  7797 ;;  TALA            1   62[BANK1 ] unsigned char 
  7798 ;;  PMON            1   61[BANK1 ] unsigned char 
  7799 ;;  RI              1   60[BANK1 ] unsigned char 
  7800 ;;  WI              1   59[BANK1 ] unsigned char 
  7801 ;;  NR              1   58[BANK1 ] unsigned char 
  7802 ;;  NREG            1   57[BANK1 ] unsigned char 
  7803 ;;  magic_word      1   56[BANK1 ] unsigned char 
  7804 ;;  luminosity      1   55[BANK1 ] unsigned char 
  7805 ;;  temperature     1   54[BANK1 ] unsigned char 
  7806 ;;  seconds         1   53[BANK1 ] unsigned char 
  7807 ;;  minutes         1   52[BANK1 ] unsigned char 
  7808 ;;  hours           1   51[BANK1 ] unsigned char 
  7809 ;;  dataeeData      1   50[BANK1 ] unsigned char 
  7810 ;;  c               1   49[BANK1 ] unsigned char 
  7811 ;;  FILIPE          1    0        unsigned char 
  7812 ;; Return value:  Size  Location     Type
  7813 ;;                  1    wreg      void 
  7814 ;; Registers used:
  7815 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7816 ;; Tracked objects:
  7817 ;;		On entry : B1F/0
  7818 ;;		On exit  : 0/0
  7819 ;;		Unchanged: 0/0
  7820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7822 ;;      Locals:         0       0      39       0       0       0       0       0       0       0       0       0       
      +0       0
  7823 ;;      Temps:          0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  7824 ;;      Totals:         0       0      51       0       0       0       0       0       0       0       0       0       
      +0       0
  7825 ;;Total ram usage:       51 bytes
  7826 ;; Hardware stack levels required when called: 13
  7827 ;; This function calls:
  7828 ;;		_DATAEE_ReadByte
  7829 ;;		_DATAEE_WriteByte
  7830 ;;		_LCDbusy
  7831 ;;		_LCDcmd
  7832 ;;		_LCDinit
  7833 ;;		_LCDpos
  7834 ;;		_LCDstr
  7835 ;;		_OpenI2C
  7836 ;;		_S1
  7837 ;;		_SYSTEM_Initialize
  7838 ;;		_TMR1_SetInterruptHandler
  7839 ;;		_initializeEPROM
  7840 ;;		_parseEPROMInitialization
  7841 ;;		_parseEPROMReading
  7842 ;;		_readTC74
  7843 ;;		_sprintf
  7844 ;;		_storeEPROMBuild
  7845 ;; This function is called by:
  7846 ;;		Startup code after reset
  7847 ;; This function uses a non-reentrant model
  7848 ;;
  7849                           
  7850                           
  7851                           ;psect for function _main
  7852  060C                     _main:
  7853  060C                     l6233:	
  7854                           ;incstack = 0
  7855                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7856                           
  7857                           
  7858                           ;main.c: 123:     uint16_t readRingBufferAddr = 0xFF;
  7859  060C  30FF               	movlw	255
  7860  060D  0021               	movlb	1	; select bank1
  7861  060E  00CF               	movwf	main@readRingBufferAddr^(0+128)
  7862  060F  3000               	movlw	0
  7863  0610  00D0               	movwf	(main@readRingBufferAddr^(0+128)+1)
  7864  0611                     l6235:
  7865                           
  7866                           ;main.c: 125:     SYSTEM_Initialize();
  7867  0611  3188  2002  3186   	fcall	_SYSTEM_Initialize
  7868  0614                     l6237:
  7869                           
  7870                           ;main.c: 131:     (INTCONbits.GIE = 1);
  7871  0614  178B               	bsf	11,7	;volatile
  7872  0615                     l6239:
  7873                           
  7874                           ;main.c: 134:     (INTCONbits.PEIE = 1);
  7875  0615  170B               	bsf	11,6	;volatile
  7876  0616                     l6241:
  7877                           
  7878                           ;main.c: 142:     TMR1_SetInterruptHandler(timerInterrupt);
  7879  0616  307E               	movlw	low _timerInterrupt
  7880  0617  0020               	movlb	0	; select bank0
  7881  0618  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  7882  0619  3008               	movlw	high _timerInterrupt
  7883  061A  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  7884  061B  3196  2677  3186   	fcall	_TMR1_SetInterruptHandler
  7885  061E                     l6243:
  7886  061E  0020               	movlb	0	; select bank0
  7887  061F  1716               	bsf	22,6	;volatile
  7888  0620                     l6245:
  7889                           
  7890                           ;main.c: 146:     OpenI2C();
  7891  0620  3196  26A2  3186   	fcall	_OpenI2C
  7892  0623                     l6247:
  7893                           
  7894                           ;main.c: 151:     LCDinit();
  7895  0623  318B  2377  3186   	fcall	_LCDinit
  7896                           
  7897                           ;main.c: 154:     uint8_t dataeeData = 0x55;
  7898  0626  3055               	movlw	85
  7899  0627  0021               	movlb	1	; select bank1
  7900  0628  00B2               	movwf	??_main^(0+128)
  7901  0629  0832               	movf	??_main^(0+128),w
  7902  062A  00D2               	movwf	main@dataeeData^(0+128)
  7903  062B                     l6249:
  7904                           
  7905                           ;main.c: 155:     DATAEE_WriteByte(dataeeAddr,dataeeData);
  7906  062B  3010               	movlw	16
  7907  062C  0020               	movlb	0	; select bank0
  7908  062D  00A0               	movwf	DATAEE_WriteByte@bAdd
  7909  062E  30F0               	movlw	240
  7910  062F  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  7911  0630  3055               	movlw	85
  7912  0631  0021               	movlb	1	; select bank1
  7913  0632  00B2               	movwf	??_main^(0+128)
  7914  0633  0832               	movf	??_main^(0+128),w
  7915  0634  0020               	movlb	0	; select bank0
  7916  0635  00A2               	movwf	DATAEE_WriteByte@bData
  7917  0636  3188  205A  3186   	fcall	_DATAEE_WriteByte
  7918  0639                     l6251:
  7919                           
  7920                           ;main.c: 157:     __nop();
  7921  0639  0000               	nop
  7922  063A                     l6253:
  7923  063A  3010               	movlw	16
  7924  063B  0020               	movlb	0	; select bank0
  7925  063C  00A0               	movwf	DATAEE_ReadByte@bAdd
  7926  063D  30F0               	movlw	240
  7927  063E  00A1               	movwf	DATAEE_ReadByte@bAdd+1
  7928  063F  3196  26BD  3186   	fcall	_DATAEE_ReadByte
  7929  0642                     l6255:
  7930                           
  7931                           ;main.c: 159:     __nop();
  7932  0642  0000               	nop
  7933  0643                     l6257:
  7934                           
  7935                           ;main.c: 161:     initializeEPROM();
  7936  0643  318B  23FA  3186   	fcall	_initializeEPROM
  7937  0646                     l6259:
  7938                           
  7939                           ;main.c: 163:     storeEPROMBuild(11,59,17,25,2,101);
  7940  0646  303B               	movlw	59
  7941  0647  0021               	movlb	1	; select bank1
  7942  0648  00B2               	movwf	??_main^(0+128)
  7943  0649  0832               	movf	??_main^(0+128),w
  7944  064A  0020               	movlb	0	; select bank0
  7945  064B  00A7               	movwf	storeEPROMBuild@minutes
  7946  064C  3011               	movlw	17
  7947  064D  0021               	movlb	1	; select bank1
  7948  064E  00B3               	movwf	(??_main+1)^(0+128)
  7949  064F  0833               	movf	(??_main+1)^(0+128),w
  7950  0650  0020               	movlb	0	; select bank0
  7951  0651  00A8               	movwf	storeEPROMBuild@seconds
  7952  0652  3019               	movlw	25
  7953  0653  0021               	movlb	1	; select bank1
  7954  0654  00B4               	movwf	(??_main+2)^(0+128)
  7955  0655  0834               	movf	(??_main+2)^(0+128),w
  7956  0656  0020               	movlb	0	; select bank0
  7957  0657  00A9               	movwf	storeEPROMBuild@temperature
  7958  0658  3002               	movlw	2
  7959  0659  0021               	movlb	1	; select bank1
  7960  065A  00B5               	movwf	(??_main+3)^(0+128)
  7961  065B  0835               	movf	(??_main+3)^(0+128),w
  7962  065C  0020               	movlb	0	; select bank0
  7963  065D  00AA               	movwf	storeEPROMBuild@luminosity
  7964  065E  3065               	movlw	101
  7965  065F  0021               	movlb	1	; select bank1
  7966  0660  00B6               	movwf	(??_main+4)^(0+128)
  7967  0661  0836               	movf	(??_main+4)^(0+128),w
  7968  0662  0020               	movlb	0	; select bank0
  7969  0663  00AB               	movwf	storeEPROMBuild@operation
  7970  0664  300B               	movlw	11
  7971  0665  3189  217A  3186   	fcall	_storeEPROMBuild
  7972  0668                     l6261:
  7973                           
  7974                           ;main.c: 169:     {;main.c: 170:         S1();
  7975  0668  3196  268A  3186   	fcall	_S1
  7976  066B                     l6263:
  7977                           
  7978                           ;main.c: 171:         parseEPROMReading(&hours,&minutes,&seconds,&temperature,&luminosit
      +                          y,101);
  7979  066B  30D4               	movlw	(low (main@minutes| 0))& (0+255)
  7980  066C  0021               	movlb	1	; select bank1
  7981  066D  00B2               	movwf	??_main^(0+128)
  7982  066E  0832               	movf	??_main^(0+128),w
  7983  066F  0020               	movlb	0	; select bank0
  7984  0670  00A7               	movwf	parseEPROMReading@minutes
  7985  0671  30D5               	movlw	(low (main@seconds| 0))& (0+255)
  7986  0672  0021               	movlb	1	; select bank1
  7987  0673  00B3               	movwf	(??_main+1)^(0+128)
  7988  0674  0833               	movf	(??_main+1)^(0+128),w
  7989  0675  0020               	movlb	0	; select bank0
  7990  0676  00A8               	movwf	parseEPROMReading@seconds
  7991  0677  30D6               	movlw	(low (main@temperature| 0))& (0+255)
  7992  0678  0021               	movlb	1	; select bank1
  7993  0679  00B4               	movwf	(??_main+2)^(0+128)
  7994  067A  0834               	movf	(??_main+2)^(0+128),w
  7995  067B  0020               	movlb	0	; select bank0
  7996  067C  00A9               	movwf	parseEPROMReading@temperature
  7997  067D  30D7               	movlw	(low (main@luminosity| 0))& (0+255)
  7998  067E  0021               	movlb	1	; select bank1
  7999  067F  00B5               	movwf	(??_main+3)^(0+128)
  8000  0680  0835               	movf	(??_main+3)^(0+128),w
  8001  0681  0020               	movlb	0	; select bank0
  8002  0682  00AA               	movwf	parseEPROMReading@luminosity
  8003  0683  3065               	movlw	101
  8004  0684  0021               	movlb	1	; select bank1
  8005  0685  00B6               	movwf	(??_main+4)^(0+128)
  8006  0686  0836               	movf	(??_main+4)^(0+128),w
  8007  0687  0020               	movlb	0	; select bank0
  8008  0688  00AB               	movwf	parseEPROMReading@operation
  8009  0689  30D3               	movlw	(low (main@hours| 0))& (0+255)
  8010  068A  318B  231D  3186   	fcall	_parseEPROMReading
  8011  068D                     l6265:
  8012                           
  8013                           ;main.c: 172:         parseEPROMInitialization(&magic_word,&NREG,&NR,&WI,&RI,&PMON,&TALA
      +                          ,&ALAT,&ALAL,&ALAF,&CLKH,&CLKM,&checksum);
  8014  068D  30D9               	movlw	(low (main@NREG| 0))& (0+255)
  8015  068E  0021               	movlb	1	; select bank1
  8016  068F  00B2               	movwf	??_main^(0+128)
  8017  0690  0832               	movf	??_main^(0+128),w
  8018  0691  0020               	movlb	0	; select bank0
  8019  0692  00A2               	movwf	parseEPROMInitialization@NREG
  8020  0693  30DA               	movlw	(low (main@NR| 0))& (0+255)
  8021  0694  0021               	movlb	1	; select bank1
  8022  0695  00B3               	movwf	(??_main+1)^(0+128)
  8023  0696  0833               	movf	(??_main+1)^(0+128),w
  8024  0697  0020               	movlb	0	; select bank0
  8025  0698  00A3               	movwf	parseEPROMInitialization@NR
  8026  0699  30DB               	movlw	(low (main@WI| 0))& (0+255)
  8027  069A  0021               	movlb	1	; select bank1
  8028  069B  00B4               	movwf	(??_main+2)^(0+128)
  8029  069C  0834               	movf	(??_main+2)^(0+128),w
  8030  069D  0020               	movlb	0	; select bank0
  8031  069E  00A4               	movwf	parseEPROMInitialization@WI
  8032  069F  30DC               	movlw	(low (main@RI| 0))& (0+255)
  8033  06A0  0021               	movlb	1	; select bank1
  8034  06A1  00B5               	movwf	(??_main+3)^(0+128)
  8035  06A2  0835               	movf	(??_main+3)^(0+128),w
  8036  06A3  0020               	movlb	0	; select bank0
  8037  06A4  00A5               	movwf	parseEPROMInitialization@RI
  8038  06A5  30DD               	movlw	(low (main@PMON| 0))& (0+255)
  8039  06A6  0021               	movlb	1	; select bank1
  8040  06A7  00B6               	movwf	(??_main+4)^(0+128)
  8041  06A8  0836               	movf	(??_main+4)^(0+128),w
  8042  06A9  0020               	movlb	0	; select bank0
  8043  06AA  00A6               	movwf	parseEPROMInitialization@PMON
  8044  06AB  30DE               	movlw	(low (main@TALA| 0))& (0+255)
  8045  06AC  0021               	movlb	1	; select bank1
  8046  06AD  00B7               	movwf	(??_main+5)^(0+128)
  8047  06AE  0837               	movf	(??_main+5)^(0+128),w
  8048  06AF  0020               	movlb	0	; select bank0
  8049  06B0  00A7               	movwf	parseEPROMInitialization@TALA
  8050  06B1  30DF               	movlw	(low (main@ALAT| 0))& (0+255)
  8051  06B2  0021               	movlb	1	; select bank1
  8052  06B3  00B8               	movwf	(??_main+6)^(0+128)
  8053  06B4  0838               	movf	(??_main+6)^(0+128),w
  8054  06B5  0020               	movlb	0	; select bank0
  8055  06B6  00A8               	movwf	parseEPROMInitialization@ALAT
  8056  06B7  30E0               	movlw	(low (main@ALAL| 0))& (0+255)
  8057  06B8  0021               	movlb	1	; select bank1
  8058  06B9  00B9               	movwf	(??_main+7)^(0+128)
  8059  06BA  0839               	movf	(??_main+7)^(0+128),w
  8060  06BB  0020               	movlb	0	; select bank0
  8061  06BC  00A9               	movwf	parseEPROMInitialization@ALAL
  8062  06BD  30E1               	movlw	(low (main@ALAF| 0))& (0+255)
  8063  06BE  0021               	movlb	1	; select bank1
  8064  06BF  00BA               	movwf	(??_main+8)^(0+128)
  8065  06C0  083A               	movf	(??_main+8)^(0+128),w
  8066  06C1  0020               	movlb	0	; select bank0
  8067  06C2  00AA               	movwf	parseEPROMInitialization@ALAF
  8068  06C3  30E2               	movlw	(low (main@CLKH| 0))& (0+255)
  8069  06C4  0021               	movlb	1	; select bank1
  8070  06C5  00BB               	movwf	(??_main+9)^(0+128)
  8071  06C6  083B               	movf	(??_main+9)^(0+128),w
  8072  06C7  0020               	movlb	0	; select bank0
  8073  06C8  00AB               	movwf	parseEPROMInitialization@CLKH
  8074  06C9  30E3               	movlw	(low (main@CLKM| 0))& (0+255)
  8075  06CA  0021               	movlb	1	; select bank1
  8076  06CB  00BC               	movwf	(??_main+10)^(0+128)
  8077  06CC  083C               	movf	(??_main+10)^(0+128),w
  8078  06CD  0020               	movlb	0	; select bank0
  8079  06CE  00AC               	movwf	parseEPROMInitialization@CLKM
  8080  06CF  30E4               	movlw	(low (main@checksum| 0))& (0+255)
  8081  06D0  0021               	movlb	1	; select bank1
  8082  06D1  00BD               	movwf	(??_main+11)^(0+128)
  8083  06D2  083D               	movf	(??_main+11)^(0+128),w
  8084  06D3  0020               	movlb	0	; select bank0
  8085  06D4  00AD               	movwf	parseEPROMInitialization@checksum
  8086  06D5  30D8               	movlw	(low (main@magic_word| 0))& (0+255)
  8087  06D6  3187  2745  3186   	fcall	_parseEPROMInitialization
  8088  06D9                     l6267:
  8089                           
  8090                           ;main.c: 174:         c = readTC74();
  8091  06D9  3184  24BC  3186   	fcall	_readTC74
  8092  06DC  0021               	movlb	1	; select bank1
  8093  06DD  00B2               	movwf	??_main^(0+128)
  8094  06DE  0832               	movf	??_main^(0+128),w
  8095  06DF  00D1               	movwf	main@c^(0+128)
  8096  06E0                     l6269:
  8097                           
  8098                           ;main.c: 175:         LCDcmd(0x80);
  8099  06E0  3080               	movlw	128
  8100  06E1  3196  2655  3186   	fcall	_LCDcmd
  8101  06E4                     l6271:	
  8102                           ;main.c: 176:         while (LCDbusy());
  8103                           
  8104  06E4  3196  26EF  3186   	fcall	_LCDbusy
  8105  06E7  0020               	movlb	0	; select bank0
  8106  06E8  0827               	movf	?_LCDbusy,w
  8107  06E9  0428               	iorwf	?_LCDbusy+1,w
  8108  06EA  1D03               	btfss	3,2
  8109  06EB  2EED               	goto	u5731
  8110  06EC  2EEE               	goto	u5730
  8111  06ED                     u5731:
  8112  06ED  2EE4               	goto	l6271
  8113  06EE                     u5730:
  8114  06EE                     l6273:
  8115                           
  8116                           ;main.c: 177:         LCDstr("Temp");
  8117  06EE  302F               	movlw	low (STR_1| (0+32768))
  8118  06EF  00A9               	movwf	LCDstr@p
  8119  06F0  3098               	movlw	high (STR_1| (0+32768))
  8120  06F1  00AA               	movwf	LCDstr@p+1
  8121  06F2  3197  2732  3186   	fcall	_LCDstr
  8122  06F5                     l6275:
  8123                           
  8124                           ;main.c: 178:         LCDpos(0,8);
  8125  06F5  3008               	movlw	8
  8126  06F6  0021               	movlb	1	; select bank1
  8127  06F7  00B2               	movwf	??_main^(0+128)
  8128  06F8  0832               	movf	??_main^(0+128),w
  8129  06F9  0020               	movlb	0	; select bank0
  8130  06FA  00A9               	movwf	LCDpos@c
  8131  06FB  3000               	movlw	0
  8132  06FC  3197  2768  3186   	fcall	_LCDpos
  8133  06FF                     l6277:	
  8134                           ;main.c: 179:         while (LCDbusy());
  8135                           
  8136  06FF  3196  26EF  3186   	fcall	_LCDbusy
  8137  0702  0020               	movlb	0	; select bank0
  8138  0703  0827               	movf	?_LCDbusy,w
  8139  0704  0428               	iorwf	?_LCDbusy+1,w
  8140  0705  1D03               	btfss	3,2
  8141  0706  2F08               	goto	u5741
  8142  0707  2F09               	goto	u5740
  8143  0708                     u5741:
  8144  0708  2EFF               	goto	l6277
  8145  0709                     u5740:
  8146  0709                     l6279:
  8147                           
  8148                           ;main.c: 180:         LCDstr("STR-RTS");
  8149  0709  3020               	movlw	low (STR_2| (0+32768))
  8150  070A  00A9               	movwf	LCDstr@p
  8151  070B  3098               	movlw	high (STR_2| (0+32768))
  8152  070C  00AA               	movwf	LCDstr@p+1
  8153  070D  3197  2732  3186   	fcall	_LCDstr
  8154  0710                     l6281:
  8155                           
  8156                           ;main.c: 181:         LCDcmd(0xc0);
  8157  0710  30C0               	movlw	192
  8158  0711  3196  2655  3186   	fcall	_LCDcmd
  8159  0714                     l6283:
  8160                           
  8161                           ;main.c: 182:         sprintf(buf, "%02d C", c);
  8162  0714  3028               	movlw	low (STR_3| (0+32768))
  8163  0715  0021               	movlb	1	; select bank1
  8164  0716  00A6               	movwf	sprintf@fmt^(0+128)
  8165  0717  3098               	movlw	high (STR_3| (0+32768))
  8166  0718  00A7               	movwf	(sprintf@fmt^(0+128)+1)
  8167  0719  0851               	movf	main@c^(0+128),w
  8168  071A  00B2               	movwf	??_main^(0+128)
  8169  071B  01B3               	clrf	(??_main^(0+128)+1)
  8170  071C  0832               	movf	??_main^(0+128),w
  8171  071D  00A8               	movwf	(?_sprintf^(0+128)+2)
  8172  071E  0833               	movf	(??_main+1)^(0+128),w
  8173  071F  00A9               	movwf	((?_sprintf+1)^(0+128)+2)
  8174  0720  30BE               	movlw	(low (main@buf| 0))& (0+255)
  8175  0721  3188  2037  3186   	fcall	_sprintf
  8176  0724                     l6285:	
  8177                           ;main.c: 183:         while (LCDbusy());
  8178                           
  8179  0724  3196  26EF  3186   	fcall	_LCDbusy
  8180  0727  0020               	movlb	0	; select bank0
  8181  0728  0827               	movf	?_LCDbusy,w
  8182  0729  0428               	iorwf	?_LCDbusy+1,w
  8183  072A  1D03               	btfss	3,2
  8184  072B  2F2D               	goto	u5751
  8185  072C  2F2E               	goto	u5750
  8186  072D                     u5751:
  8187  072D  2F24               	goto	l6285
  8188  072E                     u5750:
  8189  072E                     l6287:
  8190                           
  8191                           ;main.c: 184:         LCDstr(buf);
  8192  072E  30BE               	movlw	low main@buf
  8193  072F  00A9               	movwf	LCDstr@p
  8194  0730  3000               	movlw	high main@buf
  8195  0731  00AA               	movwf	LCDstr@p+1
  8196  0732  3197  2732  3186   	fcall	_LCDstr
  8197  0735                     l6289:
  8198                           
  8199                           ;main.c: 185:         _delay((unsigned long)((2000)*(1000000/4000.0)));
  8200  0735  3003               	movlw	3
  8201  0736  0021               	movlb	1	; select bank1
  8202  0737  00B3               	movwf	(??_main^(0+128)+1)
  8203  0738  308A               	movlw	138
  8204  0739  00B2               	movwf	??_main^(0+128)
  8205  073A  3055               	movlw	85
  8206  073B                     u5767:
  8207  073B  0B89               	decfsz	9,f
  8208  073C  2F3B               	goto	u5767
  8209  073D  0BB2               	decfsz	??_main^(0+128),f
  8210  073E  2F3B               	goto	u5767
  8211  073F  0BB3               	decfsz	(??_main^(0+128)+1),f
  8212  0740  2F3B               	goto	u5767
  8213  0741  3200               	nop2
  8214  0742  2E68               	goto	l6261
  8215  0743  3180  2818         	ljmp	start
  8216  0745                     __end_of_main:
  8217                           
  8218                           	psect	text1
  8219  097A                     __ptext1:	
  8220 ;; *************** function _storeEPROMBuild *****************
  8221 ;; Defined at:
  8222 ;;		line 50 in file "EPROMlib.c"
  8223 ;; Parameters:    Size  Location     Type
  8224 ;;  hours           1    wreg     unsigned char 
  8225 ;;  minutes         1    7[BANK0 ] unsigned char 
  8226 ;;  seconds         1    8[BANK0 ] unsigned char 
  8227 ;;  temperature     1    9[BANK0 ] unsigned char 
  8228 ;;  luminosity      1   10[BANK0 ] unsigned char 
  8229 ;;  operation       1   11[BANK0 ] unsigned char 
  8230 ;; Auto vars:     Size  Location     Type
  8231 ;;  hours           1   13[BANK0 ] unsigned char 
  8232 ;;  dataAddr        2   14[BANK0 ] unsigned short 
  8233 ;; Return value:  Size  Location     Type
  8234 ;;                  1    wreg      void 
  8235 ;; Registers used:
  8236 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8237 ;; Tracked objects:
  8238 ;;		On entry : 0/0
  8239 ;;		On exit  : 0/0
  8240 ;;		Unchanged: 0/0
  8241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8242 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8243 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8244 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8245 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8246 ;;Total ram usage:        9 bytes
  8247 ;; Hardware stack levels used: 1
  8248 ;; Hardware stack levels required when called: 6
  8249 ;; This function calls:
  8250 ;;		_DATAEE_WriteByte
  8251 ;;		_operADDR
  8252 ;; This function is called by:
  8253 ;;		_main
  8254 ;; This function uses a non-reentrant model
  8255 ;;
  8256                           
  8257                           
  8258                           ;psect for function _storeEPROMBuild
  8259  097A                     _storeEPROMBuild:
  8260                           
  8261                           ;incstack = 0
  8262                           ; Regs used in _storeEPROMBuild: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8263                           ;storeEPROMBuild@hours stored from wreg
  8264  097A  0020               	movlb	0	; select bank0
  8265  097B  00AD               	movwf	storeEPROMBuild@hours
  8266  097C                     l6195:
  8267                           
  8268                           ;EPROMlib.c: 51:     uint16_t dataAddr;;EPROMlib.c: 53:     dataAddr = operADDR(operatio
      +                          n);
  8269  097C  082B               	movf	storeEPROMBuild@operation,w
  8270  097D  3188  20FE  3189   	fcall	_operADDR
  8271  0980  0020               	movlb	0	; select bank0
  8272  0981  0821               	movf	?_operADDR+1,w
  8273  0982  00AF               	movwf	storeEPROMBuild@dataAddr+1
  8274  0983  0820               	movf	?_operADDR,w
  8275  0984  00AE               	movwf	storeEPROMBuild@dataAddr
  8276  0985                     l6197:
  8277                           
  8278                           ;EPROMlib.c: 54:     DATAEE_WriteByte(dataAddr, hours);
  8279  0985  082F               	movf	storeEPROMBuild@dataAddr+1,w
  8280  0986  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  8281  0987  082E               	movf	storeEPROMBuild@dataAddr,w
  8282  0988  00A0               	movwf	DATAEE_WriteByte@bAdd
  8283  0989  082D               	movf	storeEPROMBuild@hours,w
  8284  098A  00AC               	movwf	??_storeEPROMBuild
  8285  098B  082C               	movf	??_storeEPROMBuild,w
  8286  098C  00A2               	movwf	DATAEE_WriteByte@bData
  8287  098D  3188  205A  3189   	fcall	_DATAEE_WriteByte
  8288  0990                     l6199:
  8289                           
  8290                           ;EPROMlib.c: 55:     DATAEE_WriteByte(dataAddr + 1, minutes);
  8291  0990  0020               	movlb	0	; select bank0
  8292  0991  082E               	movf	storeEPROMBuild@dataAddr,w
  8293  0992  3E01               	addlw	1
  8294  0993  00A0               	movwf	DATAEE_WriteByte@bAdd
  8295  0994  3000               	movlw	0
  8296  0995  3D2F               	addwfc	storeEPROMBuild@dataAddr+1,w
  8297  0996  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  8298  0997  0827               	movf	storeEPROMBuild@minutes,w
  8299  0998  00AC               	movwf	??_storeEPROMBuild
  8300  0999  082C               	movf	??_storeEPROMBuild,w
  8301  099A  00A2               	movwf	DATAEE_WriteByte@bData
  8302  099B  3188  205A  3189   	fcall	_DATAEE_WriteByte
  8303  099E                     l6201:
  8304                           
  8305                           ;EPROMlib.c: 56:     DATAEE_WriteByte(dataAddr + 2, seconds);
  8306  099E  0020               	movlb	0	; select bank0
  8307  099F  082E               	movf	storeEPROMBuild@dataAddr,w
  8308  09A0  3E02               	addlw	2
  8309  09A1  00A0               	movwf	DATAEE_WriteByte@bAdd
  8310  09A2  3000               	movlw	0
  8311  09A3  3D2F               	addwfc	storeEPROMBuild@dataAddr+1,w
  8312  09A4  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  8313  09A5  0828               	movf	storeEPROMBuild@seconds,w
  8314  09A6  00AC               	movwf	??_storeEPROMBuild
  8315  09A7  082C               	movf	??_storeEPROMBuild,w
  8316  09A8  00A2               	movwf	DATAEE_WriteByte@bData
  8317  09A9  3188  205A  3189   	fcall	_DATAEE_WriteByte
  8318  09AC                     l6203:
  8319                           
  8320                           ;EPROMlib.c: 57:     DATAEE_WriteByte(dataAddr + 3, temperature);
  8321  09AC  0020               	movlb	0	; select bank0
  8322  09AD  082E               	movf	storeEPROMBuild@dataAddr,w
  8323  09AE  3E03               	addlw	3
  8324  09AF  00A0               	movwf	DATAEE_WriteByte@bAdd
  8325  09B0  3000               	movlw	0
  8326  09B1  3D2F               	addwfc	storeEPROMBuild@dataAddr+1,w
  8327  09B2  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  8328  09B3  0829               	movf	storeEPROMBuild@temperature,w
  8329  09B4  00AC               	movwf	??_storeEPROMBuild
  8330  09B5  082C               	movf	??_storeEPROMBuild,w
  8331  09B6  00A2               	movwf	DATAEE_WriteByte@bData
  8332  09B7  3188  205A  3189   	fcall	_DATAEE_WriteByte
  8333  09BA                     l6205:
  8334                           
  8335                           ;EPROMlib.c: 58:     DATAEE_WriteByte(dataAddr + 4, luminosity);
  8336  09BA  0020               	movlb	0	; select bank0
  8337  09BB  082E               	movf	storeEPROMBuild@dataAddr,w
  8338  09BC  3E04               	addlw	4
  8339  09BD  00A0               	movwf	DATAEE_WriteByte@bAdd
  8340  09BE  3000               	movlw	0
  8341  09BF  3D2F               	addwfc	storeEPROMBuild@dataAddr+1,w
  8342  09C0  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  8343  09C1  082A               	movf	storeEPROMBuild@luminosity,w
  8344  09C2  00AC               	movwf	??_storeEPROMBuild
  8345  09C3  082C               	movf	??_storeEPROMBuild,w
  8346  09C4  00A2               	movwf	DATAEE_WriteByte@bData
  8347  09C5  3188  205A  3189   	fcall	_DATAEE_WriteByte
  8348  09C8                     l1321:
  8349  09C8  0008               	return
  8350  09C9                     __end_of_storeEPROMBuild:
  8351                           
  8352                           	psect	text2
  8353  0837                     __ptext2:	
  8354 ;; *************** function _sprintf *****************
  8355 ;; Defined at:
  8356 ;;		line 9 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  8357 ;; Parameters:    Size  Location     Type
  8358 ;;  s               1    wreg     PTR unsigned char 
  8359 ;;		 -> main@buf(17), 
  8360 ;;  fmt             2    6[BANK1 ] PTR const unsigned char 
  8361 ;;		 -> STR_3(7), 
  8362 ;; Auto vars:     Size  Location     Type
  8363 ;;  s               1   11[BANK1 ] PTR unsigned char 
  8364 ;;		 -> main@buf(17), 
  8365 ;;  f               5   13[BANK1 ] struct _IO_FILE
  8366 ;;  ret             2    0        int 
  8367 ;;  ap              1   12[BANK1 ] PTR void [1]
  8368 ;;		 -> ?_sprintf(2), 
  8369 ;; Return value:  Size  Location     Type
  8370 ;;                  2    6[BANK1 ] int 
  8371 ;; Registers used:
  8372 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8373 ;; Tracked objects:
  8374 ;;		On entry : 0/0
  8375 ;;		On exit  : 0/0
  8376 ;;		Unchanged: 0/0
  8377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8378 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  8379 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  8380 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  8381 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  8382 ;;Total ram usage:       12 bytes
  8383 ;; Hardware stack levels used: 1
  8384 ;; Hardware stack levels required when called: 12
  8385 ;; This function calls:
  8386 ;;		_vfprintf
  8387 ;; This function is called by:
  8388 ;;		_main
  8389 ;; This function uses a non-reentrant model
  8390 ;;
  8391                           
  8392                           
  8393                           ;psect for function _sprintf
  8394  0837                     _sprintf:
  8395                           
  8396                           ;incstack = 0
  8397                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8398                           ;sprintf@s stored from wreg
  8399  0837  0021               	movlb	1	; select bank1
  8400  0838  00AB               	movwf	sprintf@s^(0+128)
  8401  0839                     l6221:
  8402  0839  30A8               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  8403  083A  00AA               	movwf	??_sprintf^(0+128)
  8404  083B  082A               	movf	??_sprintf^(0+128),w
  8405  083C  00AC               	movwf	sprintf@ap^(0+128)
  8406  083D  082B               	movf	sprintf@s^(0+128),w
  8407  083E  00AA               	movwf	??_sprintf^(0+128)
  8408  083F  082A               	movf	??_sprintf^(0+128),w
  8409  0840  00AD               	movwf	sprintf@f^(0+128)
  8410  0841                     l6223:
  8411  0841  01AE               	clrf	(sprintf@f^(0+128)+1)
  8412  0842  01AF               	clrf	((sprintf@f+1)^(0+128)+1)
  8413  0843                     l6225:
  8414  0843  01B0               	clrf	(sprintf@f^(0+128)+3)
  8415  0844  01B1               	clrf	((sprintf@f+1)^(0+128)+3)
  8416  0845                     l6227:
  8417  0845  0827               	movf	(sprintf@fmt+1)^(0+128),w
  8418  0846  00A1               	movwf	(vfprintf@fmt+1)^(0+128)
  8419  0847  0826               	movf	sprintf@fmt^(0+128),w
  8420  0848  00A0               	movwf	vfprintf@fmt^(0+128)
  8421  0849  30AC               	movlw	(low (sprintf@ap| 0))& (0+255)
  8422  084A  00AA               	movwf	??_sprintf^(0+128)
  8423  084B  082A               	movf	??_sprintf^(0+128),w
  8424  084C  00A2               	movwf	vfprintf@ap^(0+128)
  8425  084D  30AD               	movlw	(low (sprintf@f| 0))& (0+255)
  8426  084E  3188  20CF  3188   	fcall	_vfprintf
  8427  0851                     l6229:
  8428  0851  0021               	movlb	1	; select bank1
  8429  0852  082E               	movf	(sprintf@f^(0+128)+1),w
  8430  0853  072B               	addwf	sprintf@s^(0+128),w
  8431  0854  00AA               	movwf	??_sprintf^(0+128)
  8432  0855  082A               	movf	??_sprintf^(0+128),w
  8433  0856  0086               	movwf	6
  8434  0857  0187               	clrf	7
  8435  0858  0181               	clrf	1
  8436  0859                     l1942:
  8437  0859  0008               	return
  8438  085A                     __end_of_sprintf:
  8439                           
  8440                           	psect	text3
  8441  08CF                     __ptext3:	
  8442 ;; *************** function _vfprintf *****************
  8443 ;; Defined at:
  8444 ;;		line 1390 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  8445 ;; Parameters:    Size  Location     Type
  8446 ;;  fp              1    wreg     PTR struct _IO_FILE
  8447 ;;		 -> sprintf@f(5), 
  8448 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
  8449 ;;		 -> STR_3(7), 
  8450 ;;  ap              1    2[BANK1 ] PTR PTR void 
  8451 ;;		 -> sprintf@ap(1), 
  8452 ;; Auto vars:     Size  Location     Type
  8453 ;;  fp              1    3[BANK1 ] PTR struct _IO_FILE
  8454 ;;		 -> sprintf@f(5), 
  8455 ;;  cfmt            2    4[BANK1 ] PTR unsigned char 
  8456 ;;		 -> STR_3(7), 
  8457 ;; Return value:  Size  Location     Type
  8458 ;;                  2    0[BANK1 ] int 
  8459 ;; Registers used:
  8460 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8461 ;; Tracked objects:
  8462 ;;		On entry : 0/0
  8463 ;;		On exit  : 0/0
  8464 ;;		Unchanged: 0/0
  8465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8466 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8467 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  8468 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8469 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0
  8470 ;;Total ram usage:        8 bytes
  8471 ;; Hardware stack levels used: 1
  8472 ;; Hardware stack levels required when called: 11
  8473 ;; This function calls:
  8474 ;;		_vfpfcnvrt
  8475 ;; This function is called by:
  8476 ;;		_sprintf
  8477 ;; This function uses a non-reentrant model
  8478 ;;
  8479                           
  8480                           
  8481                           ;psect for function _vfprintf
  8482  08CF                     _vfprintf:
  8483                           
  8484                           ;incstack = 0
  8485                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8486                           ;vfprintf@fp stored from wreg
  8487  08CF  0021               	movlb	1	; select bank1
  8488  08D0  00A3               	movwf	vfprintf@fp^(0+128)
  8489  08D1                     l6057:
  8490                           
  8491                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);D:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  8492  08D1  0821               	movf	(vfprintf@fmt+1)^(0+128),w
  8493  08D2  00A5               	movwf	(vfprintf@cfmt+1)^(0+128)
  8494  08D3  0820               	movf	vfprintf@fmt^(0+128),w
  8495  08D4  00A4               	movwf	vfprintf@cfmt^(0+128)
  8496  08D5                     l6059:
  8497                           
  8498                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  8499  08D5  01E9               	clrf	_nout^(0+128)
  8500  08D6  01EA               	clrf	(_nout+1)^(0+128)
  8501                           
  8502                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  8503  08D7  28F0               	goto	l6063
  8504  08D8                     l6061:
  8505                           
  8506                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  8507  08D8  30A4               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  8508  08D9  0020               	movlb	0	; select bank0
  8509  08DA  00EE               	movwf	??_vfprintf
  8510  08DB  086E               	movf	??_vfprintf,w
  8511  08DC  00D9               	movwf	vfpfcnvrt@fmt
  8512  08DD  0021               	movlb	1	; select bank1
  8513  08DE  0822               	movf	vfprintf@ap^(0+128),w
  8514  08DF  0020               	movlb	0	; select bank0
  8515  08E0  00EF               	movwf	??_vfprintf+1
  8516  08E1  086F               	movf	??_vfprintf+1,w
  8517  08E2  00DA               	movwf	vfpfcnvrt@ap
  8518  08E3  0021               	movlb	1	; select bank1
  8519  08E4  0823               	movf	vfprintf@fp^(0+128),w
  8520  08E5  3180  202F  3188   	fcall	_vfpfcnvrt
  8521  08E8  0020               	movlb	0	; select bank0
  8522  08E9  0859               	movf	?_vfpfcnvrt,w
  8523  08EA  0021               	movlb	1	; select bank1
  8524  08EB  07E9               	addwf	_nout^(0+128),f
  8525  08EC  0020               	movlb	0	; select bank0
  8526  08ED  085A               	movf	?_vfpfcnvrt+1,w
  8527  08EE  0021               	movlb	1	; select bank1
  8528  08EF  3DEA               	addwfc	(_nout+1)^(0+128),f
  8529  08F0                     l6063:
  8530                           
  8531                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  8532  08F0  0824               	movf	vfprintf@cfmt^(0+128),w
  8533  08F1  0084               	movwf	4
  8534  08F2  0825               	movf	(vfprintf@cfmt+1)^(0+128),w
  8535  08F3  0085               	movwf	5
  8536  08F4  0012               	moviw fsr0++
  8537  08F5  1D03               	btfss	3,2
  8538  08F6  28F8               	goto	u5441
  8539  08F7  28F9               	goto	u5440
  8540  08F8                     u5441:
  8541  08F8  28D8               	goto	l6061
  8542  08F9                     u5440:
  8543  08F9                     l6065:
  8544                           
  8545                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  8546  08F9  086A               	movf	(_nout+1)^(0+128),w
  8547  08FA  00A1               	movwf	(?_vfprintf+1)^(0+128)
  8548  08FB  0869               	movf	_nout^(0+128),w
  8549  08FC  00A0               	movwf	?_vfprintf^(0+128)
  8550  08FD                     l2040:
  8551  08FD  0008               	return
  8552  08FE                     __end_of_vfprintf:
  8553                           
  8554                           	psect	text4
  8555  002F                     __ptext4:	
  8556 ;; *************** function _vfpfcnvrt *****************
  8557 ;; Defined at:
  8558 ;;		line 692 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  8559 ;; Parameters:    Size  Location     Type
  8560 ;;  fp              1    wreg     PTR struct _IO_FILE
  8561 ;;		 -> sprintf@f(5), 
  8562 ;;  fmt             1   57[BANK0 ] PTR PTR unsigned char 
  8563 ;;		 -> vfprintf@cfmt(2), 
  8564 ;;  ap              1   58[BANK0 ] PTR PTR void 
  8565 ;;		 -> sprintf@ap(1), 
  8566 ;; Auto vars:     Size  Location     Type
  8567 ;;  fp              1   77[BANK0 ] PTR struct _IO_FILE
  8568 ;;		 -> sprintf@f(5), 
  8569 ;;  ll              8   65[BANK0 ] long long 
  8570 ;;  llu             8    0        unsigned long long 
  8571 ;;  f               4    0        unsigned long long 
  8572 ;;  ct              3    0        unsigned char [3]
  8573 ;;  done            2   73[BANK0 ] int 
  8574 ;;  vp              2    0        PTR void 
  8575 ;;  i               2    0        int 
  8576 ;;  cp              2    0        PTR unsigned char 
  8577 ;;  c               1    0        unsigned char 
  8578 ;; Return value:  Size  Location     Type
  8579 ;;                  2   57[BANK0 ] int 
  8580 ;; Registers used:
  8581 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8582 ;; Tracked objects:
  8583 ;;		On entry : 0/0
  8584 ;;		On exit  : 0/0
  8585 ;;		Unchanged: 0/0
  8586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8587 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8588 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8589 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8590 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8591 ;;Total ram usage:       21 bytes
  8592 ;; Hardware stack levels used: 1
  8593 ;; Hardware stack levels required when called: 10
  8594 ;; This function calls:
  8595 ;;		_atoi
  8596 ;;		_dtoa
  8597 ;;		_fputc
  8598 ;;		_isdigit
  8599 ;; This function is called by:
  8600 ;;		_vfprintf
  8601 ;; This function uses a non-reentrant model
  8602 ;;
  8603                           
  8604                           
  8605                           ;psect for function _vfpfcnvrt
  8606  002F                     _vfpfcnvrt:
  8607                           
  8608                           ;incstack = 0
  8609                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8610                           ;vfpfcnvrt@fp stored from wreg
  8611  002F  0020               	movlb	0	; select bank0
  8612  0030  00ED               	movwf	vfpfcnvrt@fp
  8613  0031                     l5811:
  8614                           
  8615                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);D:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;D:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;D:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;D:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  8616  0031  0859               	movf	vfpfcnvrt@fmt,w
  8617  0032  0086               	movwf	6
  8618  0033  0187               	clrf	7
  8619  0034  3F40               	moviw [0]fsr1
  8620  0035  00DB               	movwf	??_vfpfcnvrt
  8621  0036  3F41               	moviw [1]fsr1
  8622  0037  00DC               	movwf	??_vfpfcnvrt+1
  8623  0038  085B               	movf	??_vfpfcnvrt,w
  8624  0039  0084               	movwf	4
  8625  003A  085C               	movf	??_vfpfcnvrt+1,w
  8626  003B  0085               	movwf	5
  8627  003C  0012               	moviw fsr0++
  8628  003D  3A25               	xorlw	37
  8629  003E  1D03               	btfss	3,2
  8630  003F  2841               	goto	u4991
  8631  0040  2842               	goto	u4990
  8632  0041                     u4991:
  8633  0041  29A9               	goto	l5891
  8634  0042                     u4990:
  8635  0042                     l5813:
  8636                           
  8637                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  8638  0042  0859               	movf	vfpfcnvrt@fmt,w
  8639  0043  0086               	movwf	6
  8640  0044  0187               	clrf	7
  8641  0045  3001               	movlw	1
  8642  0046  0781               	addwf	1,f
  8643  0047  3141               	addfsr 1,1
  8644  0048  1803               	skipnc
  8645  0049  0A81               	incf	1,f
  8646  004A                     l5815:
  8647                           
  8648                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  8649  004A  0021               	movlb	1	; select bank1
  8650  004B  01EB               	clrf	_width^(0+128)
  8651  004C  01EC               	clrf	(_width+1)^(0+128)
  8652  004D  01F7               	clrf	_flags
  8653  004E  01F8               	clrf	_flags+1
  8654  004F                     l5817:
  8655                           
  8656                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  8657  004F  30FF               	movlw	255
  8658  0050  00F5               	movwf	_prec
  8659  0051  30FF               	movlw	255
  8660  0052  00F6               	movwf	_prec+1
  8661  0053                     l5819:
  8662                           
  8663                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  8664  0053  0020               	movlb	0	; select bank0
  8665  0054  01E9               	clrf	vfpfcnvrt@done
  8666  0055  01EA               	clrf	vfpfcnvrt@done+1
  8667                           
  8668                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  8669  0056  2892               	goto	l5837
  8670  0057                     l2011:	
  8671                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 713:             
      +                              case '-' :
  8672                           
  8673                           
  8674                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  8675  0057  1477               	bsf	_flags,0
  8676  0058                     l5821:
  8677                           
  8678                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  8679  0058  0859               	movf	vfpfcnvrt@fmt,w
  8680  0059  0086               	movwf	6
  8681  005A  0187               	clrf	7
  8682  005B  3001               	movlw	1
  8683  005C  0781               	addwf	1,f
  8684  005D  3141               	addfsr 1,1
  8685  005E  1803               	skipnc
  8686  005F  0A81               	incf	1,f
  8687                           
  8688                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  8689  0060  2892               	goto	l5837
  8690  0061                     l2013:	
  8691                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 717:             
      +                              case '0' :
  8692                           
  8693                           
  8694                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  8695  0061  14F7               	bsf	_flags,1
  8696  0062  2858               	goto	l5821
  8697  0063                     l2014:	
  8698                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 721:             
      +                              case '+' :
  8699                           
  8700                           
  8701                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  8702  0063  1577               	bsf	_flags,2
  8703  0064  2858               	goto	l5821
  8704  0065                     l2015:	
  8705                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 725:             
      +                              case ' ' :
  8706                           
  8707                           
  8708                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  8709  0065  15F7               	bsf	_flags,3
  8710  0066  2858               	goto	l5821
  8711  0067                     l2016:	
  8712                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 729:             
      +                              case '#' :
  8713                           
  8714                           
  8715                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  8716  0067  1677               	bsf	_flags,4
  8717  0068  2858               	goto	l5821
  8718  0069                     l5831:
  8719                           
  8720                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  8721  0069  3001               	movlw	1
  8722  006A  00E9               	movwf	vfpfcnvrt@done
  8723  006B  3000               	movlw	0
  8724  006C  00EA               	movwf	vfpfcnvrt@done+1
  8725                           
  8726                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  8727  006D  2892               	goto	l5837
  8728  006E                     l5835:
  8729  006E  0859               	movf	vfpfcnvrt@fmt,w
  8730  006F  0086               	movwf	6
  8731  0070  0187               	clrf	7
  8732  0071  3F40               	moviw [0]fsr1
  8733  0072  00DB               	movwf	??_vfpfcnvrt
  8734  0073  3F41               	moviw [1]fsr1
  8735  0074  00DC               	movwf	??_vfpfcnvrt+1
  8736  0075  085B               	movf	??_vfpfcnvrt,w
  8737  0076  0084               	movwf	4
  8738  0077  085C               	movf	??_vfpfcnvrt+1,w
  8739  0078  0085               	movwf	5
  8740  0079  0800               	movf	0,w	;code access
  8741  007A  00DD               	movwf	??_vfpfcnvrt+2
  8742  007B  01DE               	clrf	??_vfpfcnvrt+3
  8743                           
  8744                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8745                           ; Switch size 1, requested type "simple"
  8746                           ; Number of cases is 1, Range of values is 0 to 0
  8747                           ; switch strategies available:
  8748                           ; Name         Instructions Cycles
  8749                           ; simple_byte            4     3 (average)
  8750                           ; direct_byte            8     6 (fixed)
  8751                           ; jumptable            260     6 (fixed)
  8752                           ;	Chosen strategy is simple_byte
  8753  007C  085E               	movf	??_vfpfcnvrt+3,w
  8754  007D  3A00               	xorlw	0	; case 0
  8755  007E  1903               	skipnz
  8756  007F  2881               	goto	l6361
  8757  0080  2869               	goto	l5831
  8758  0081                     l6361:
  8759                           
  8760                           ; Switch size 1, requested type "simple"
  8761                           ; Number of cases is 5, Range of values is 32 to 48
  8762                           ; switch strategies available:
  8763                           ; Name         Instructions Cycles
  8764                           ; simple_byte           16     9 (average)
  8765                           ; direct_byte           43     9 (fixed)
  8766                           ; jumptable            263     9 (fixed)
  8767                           ;	Chosen strategy is simple_byte
  8768  0081  085D               	movf	??_vfpfcnvrt+2,w
  8769  0082  3A20               	xorlw	32	; case 32
  8770  0083  1903               	skipnz
  8771  0084  2865               	goto	l2015
  8772  0085  3A03               	xorlw	3	; case 35
  8773  0086  1903               	skipnz
  8774  0087  2867               	goto	l2016
  8775  0088  3A08               	xorlw	8	; case 43
  8776  0089  1903               	skipnz
  8777  008A  2863               	goto	l2014
  8778  008B  3A06               	xorlw	6	; case 45
  8779  008C  1903               	skipnz
  8780  008D  2857               	goto	l2011
  8781  008E  3A1D               	xorlw	29	; case 48
  8782  008F  1903               	skipnz
  8783  0090  2861               	goto	l2013
  8784  0091  2869               	goto	l5831
  8785  0092                     l5837:
  8786                           
  8787                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  8788  0092  0869               	movf	vfpfcnvrt@done,w
  8789  0093  046A               	iorwf	vfpfcnvrt@done+1,w
  8790  0094  1903               	btfsc	3,2
  8791  0095  2897               	goto	u5001
  8792  0096  2898               	goto	u5000
  8793  0097                     u5001:
  8794  0097  286E               	goto	l5835
  8795  0098                     u5000:
  8796  0098                     l2018:
  8797                           
  8798                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  8799  0098  1C77               	btfss	_flags,0
  8800  0099  289B               	goto	u5011
  8801  009A  289C               	goto	u5010
  8802  009B                     u5011:
  8803  009B  28A0               	goto	l5841
  8804  009C                     u5010:
  8805  009C                     l5839:
  8806                           
  8807                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  8808  009C  30FD               	movlw	253
  8809  009D  05F7               	andwf	_flags,f
  8810  009E  30FF               	movlw	255
  8811  009F  05F8               	andwf	_flags+1,f
  8812  00A0                     l5841:
  8813                           
  8814                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  8815  00A0  0859               	movf	vfpfcnvrt@fmt,w
  8816  00A1  0086               	movwf	6
  8817  00A2  0187               	clrf	7
  8818  00A3  3F40               	moviw [0]fsr1
  8819  00A4  00DB               	movwf	??_vfpfcnvrt
  8820  00A5  3F41               	moviw [1]fsr1
  8821  00A6  00DC               	movwf	??_vfpfcnvrt+1
  8822  00A7  085B               	movf	??_vfpfcnvrt,w
  8823  00A8  0084               	movwf	4
  8824  00A9  085C               	movf	??_vfpfcnvrt+1,w
  8825  00AA  0085               	movwf	5
  8826  00AB  0012               	moviw fsr0++
  8827  00AC  3A2A               	xorlw	42
  8828  00AD  1D03               	btfss	3,2
  8829  00AE  28B0               	goto	u5021
  8830  00AF  28B1               	goto	u5020
  8831  00B0                     u5021:
  8832  00B0  28D1               	goto	l5853
  8833  00B1                     u5020:
  8834  00B1                     l5843:
  8835                           
  8836                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  8837  00B1  0859               	movf	vfpfcnvrt@fmt,w
  8838  00B2  0086               	movwf	6
  8839  00B3  0187               	clrf	7
  8840  00B4  3001               	movlw	1
  8841  00B5  0781               	addwf	1,f
  8842  00B6  3141               	addfsr 1,1
  8843  00B7  1803               	skipnc
  8844  00B8  0A81               	incf	1,f
  8845  00B9                     l5845:
  8846                           
  8847                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  8848  00B9  085A               	movf	vfpfcnvrt@ap,w
  8849  00BA  0086               	movwf	6
  8850  00BB  0187               	clrf	7
  8851  00BC  0801               	movf	1,w
  8852  00BD  0084               	movwf	4
  8853  00BE  0185               	clrf	5
  8854  00BF  3002               	movlw	2
  8855  00C0  0781               	addwf	1,f
  8856  00C1  3F00               	moviw [0]fsr0
  8857  00C2  0021               	movlb	1	; select bank1
  8858  00C3  00EB               	movwf	_width^(0+128)
  8859  00C4  3F01               	moviw [1]fsr0
  8860  00C5  00EC               	movwf	(_width+1)^(0+128)
  8861  00C6                     l5847:
  8862                           
  8863                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  8864  00C6  1FEC               	btfss	(_width+1)^(0+128),7
  8865  00C7  28C9               	goto	u5031
  8866  00C8  28CA               	goto	u5030
  8867  00C9                     u5031:
  8868  00C9  2916               	goto	l5863
  8869  00CA                     u5030:
  8870  00CA                     l5849:
  8871                           
  8872                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  8873  00CA  1477               	bsf	_flags,0
  8874  00CB                     l5851:
  8875                           
  8876                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  8877  00CB  09EB               	comf	_width^(0+128),f
  8878  00CC  09EC               	comf	(_width+1)^(0+128),f
  8879  00CD  0AEB               	incf	_width^(0+128),f
  8880  00CE  1903               	skipnz
  8881  00CF  0AEC               	incf	(_width+1)^(0+128),f
  8882  00D0  2916               	goto	l5863
  8883  00D1                     l5853:
  8884                           
  8885                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  8886  00D1  0859               	movf	vfpfcnvrt@fmt,w
  8887  00D2  0086               	movwf	6
  8888  00D3  0187               	clrf	7
  8889  00D4  3F40               	moviw [0]fsr1
  8890  00D5  00A6               	movwf	atoi@s
  8891  00D6  3F41               	moviw [1]fsr1
  8892  00D7  00A7               	movwf	atoi@s+1
  8893  00D8  318C  2488  3180   	fcall	_atoi
  8894  00DB  0020               	movlb	0	; select bank0
  8895  00DC  0827               	movf	?_atoi+1,w
  8896  00DD  0021               	movlb	1	; select bank1
  8897  00DE  00EC               	movwf	(_width+1)^(0+128)
  8898  00DF  0020               	movlb	0	; select bank0
  8899  00E0  0826               	movf	?_atoi,w
  8900  00E1  0021               	movlb	1	; select bank1
  8901  00E2  00EB               	movwf	_width^(0+128)
  8902                           
  8903                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  8904  00E3  28EC               	goto	l5857
  8905  00E4                     l5855:
  8906                           
  8907                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  8908  00E4  0859               	movf	vfpfcnvrt@fmt,w
  8909  00E5  0086               	movwf	6
  8910  00E6  0187               	clrf	7
  8911  00E7  3001               	movlw	1
  8912  00E8  0781               	addwf	1,f
  8913  00E9  3141               	addfsr 1,1
  8914  00EA  1803               	skipnc
  8915  00EB  0A81               	incf	1,f
  8916  00EC                     l5857:
  8917  00EC  0020               	movlb	0	; select bank0
  8918  00ED  0859               	movf	vfpfcnvrt@fmt,w
  8919  00EE  0086               	movwf	6
  8920  00EF  0187               	clrf	7
  8921  00F0  3F40               	moviw [0]fsr1
  8922  00F1  00DB               	movwf	??_vfpfcnvrt
  8923  00F2  3F41               	moviw [1]fsr1
  8924  00F3  00DC               	movwf	??_vfpfcnvrt+1
  8925  00F4  085B               	movf	??_vfpfcnvrt,w
  8926  00F5  0084               	movwf	4
  8927  00F6  085C               	movf	??_vfpfcnvrt+1,w
  8928  00F7  0085               	movwf	5
  8929  00F8  0800               	movf	0,w	;code access
  8930  00F9  3ED0               	addlw	208
  8931  00FA  00DD               	movwf	??_vfpfcnvrt+2
  8932  00FB  30FF               	movlw	255
  8933  00FC  1803               	skipnc
  8934  00FD  3000               	movlw	0
  8935  00FE  00DE               	movwf	??_vfpfcnvrt+3
  8936  00FF  3000               	movlw	0
  8937  0100  025E               	subwf	??_vfpfcnvrt+3,w
  8938  0101  300A               	movlw	10
  8939  0102  1903               	skipnz
  8940  0103  025D               	subwf	??_vfpfcnvrt+2,w
  8941  0104  1C03               	skipc
  8942  0105  2907               	goto	u5041
  8943  0106  2909               	goto	u5040
  8944  0107                     u5041:
  8945  0107  3001               	movlw	1
  8946  0108  290A               	goto	u5050
  8947  0109                     u5040:
  8948  0109  3000               	movlw	0
  8949  010A                     u5050:
  8950  010A  00DF               	movwf	??_vfpfcnvrt+4
  8951  010B  01E0               	clrf	??_vfpfcnvrt+5
  8952  010C  085F               	movf	??_vfpfcnvrt+4,w
  8953  010D  00EB               	movwf	_vfpfcnvrt$2918
  8954  010E  0860               	movf	??_vfpfcnvrt+5,w
  8955  010F  00EC               	movwf	_vfpfcnvrt$2918+1
  8956  0110                     l5861:
  8957  0110  086B               	movf	_vfpfcnvrt$2918,w
  8958  0111  046C               	iorwf	_vfpfcnvrt$2918+1,w
  8959  0112  1D03               	btfss	3,2
  8960  0113  2915               	goto	u5061
  8961  0114  2916               	goto	u5060
  8962  0115                     u5061:
  8963  0115  28E4               	goto	l5855
  8964  0116                     u5060:
  8965  0116                     l5863:
  8966                           
  8967                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  8968  0116  0020               	movlb	0	; select bank0
  8969  0117  0859               	movf	vfpfcnvrt@fmt,w
  8970  0118  0086               	movwf	6
  8971  0119  0187               	clrf	7
  8972  011A  3F40               	moviw [0]fsr1
  8973  011B  00DB               	movwf	??_vfpfcnvrt
  8974  011C  3F41               	moviw [1]fsr1
  8975  011D  00DC               	movwf	??_vfpfcnvrt+1
  8976  011E  085B               	movf	??_vfpfcnvrt,w
  8977  011F  0084               	movwf	4
  8978  0120  085C               	movf	??_vfpfcnvrt+1,w
  8979  0121  0085               	movwf	5
  8980  0122  0012               	moviw fsr0++
  8981  0123  3A64               	xorlw	100
  8982  0124  1903               	btfsc	3,2
  8983  0125  2927               	goto	u5071
  8984  0126  2928               	goto	u5070
  8985  0127                     u5071:
  8986  0127  2939               	goto	l5867
  8987  0128                     u5070:
  8988  0128                     l5865:
  8989  0128  0859               	movf	vfpfcnvrt@fmt,w
  8990  0129  0086               	movwf	6
  8991  012A  0187               	clrf	7
  8992  012B  3F40               	moviw [0]fsr1
  8993  012C  00DB               	movwf	??_vfpfcnvrt
  8994  012D  3F41               	moviw [1]fsr1
  8995  012E  00DC               	movwf	??_vfpfcnvrt+1
  8996  012F  085B               	movf	??_vfpfcnvrt,w
  8997  0130  0084               	movwf	4
  8998  0131  085C               	movf	??_vfpfcnvrt+1,w
  8999  0132  0085               	movwf	5
  9000  0133  0012               	moviw fsr0++
  9001  0134  3A69               	xorlw	105
  9002  0135  1D03               	btfss	3,2
  9003  0136  2938               	goto	u5081
  9004  0137  2939               	goto	u5080
  9005  0138                     u5081:
  9006  0138  2974               	goto	l5875
  9007  0139                     u5080:
  9008  0139                     l5867:
  9009                           
  9010                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  9011  0139  0859               	movf	vfpfcnvrt@fmt,w
  9012  013A  0086               	movwf	6
  9013  013B  0187               	clrf	7
  9014  013C  3001               	movlw	1
  9015  013D  0781               	addwf	1,f
  9016  013E  3141               	addfsr 1,1
  9017  013F  1803               	skipnc
  9018  0140  0A81               	incf	1,f
  9019  0141                     l5869:
  9020                           
  9021                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  9022  0141  085A               	movf	vfpfcnvrt@ap,w
  9023  0142  0086               	movwf	6
  9024  0143  0187               	clrf	7
  9025  0144  0801               	movf	1,w
  9026  0145  0084               	movwf	4
  9027  0146  0185               	clrf	5
  9028  0147  3002               	movlw	2
  9029  0148  0781               	addwf	1,f
  9030  0149  3F00               	moviw [0]fsr0
  9031  014A  00DB               	movwf	??_vfpfcnvrt
  9032  014B  3F01               	moviw [1]fsr0
  9033  014C  00DC               	movwf	??_vfpfcnvrt+1
  9034  014D  085B               	movf	??_vfpfcnvrt,w
  9035  014E  00E1               	movwf	vfpfcnvrt@ll
  9036  014F  085C               	movf	??_vfpfcnvrt+1,w
  9037  0150  00E2               	movwf	vfpfcnvrt@ll+1
  9038  0151  0D89               	rlf	9,f
  9039  0152  3B89               	subwfb	9,f
  9040  0153  0989               	comf	9,f
  9041  0154  00E3               	movwf	vfpfcnvrt@ll+2
  9042  0155  00E4               	movwf	vfpfcnvrt@ll+3
  9043  0156  00E5               	movwf	vfpfcnvrt@ll+4
  9044  0157  00E6               	movwf	vfpfcnvrt@ll+5
  9045  0158  00E7               	movwf	vfpfcnvrt@ll+6
  9046  0159  00E8               	movwf	vfpfcnvrt@ll+7
  9047  015A                     l5871:
  9048                           
  9049                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  9050  015A  0861               	movf	vfpfcnvrt@ll,w
  9051  015B  00BB               	movwf	dtoa@d
  9052  015C  0862               	movf	vfpfcnvrt@ll+1,w
  9053  015D  00BC               	movwf	dtoa@d+1
  9054  015E  0863               	movf	vfpfcnvrt@ll+2,w
  9055  015F  00BD               	movwf	dtoa@d+2
  9056  0160  0864               	movf	vfpfcnvrt@ll+3,w
  9057  0161  00BE               	movwf	dtoa@d+3
  9058  0162  0865               	movf	vfpfcnvrt@ll+4,w
  9059  0163  00BF               	movwf	dtoa@d+4
  9060  0164  0866               	movf	vfpfcnvrt@ll+5,w
  9061  0165  00C0               	movwf	dtoa@d+5
  9062  0166  0867               	movf	vfpfcnvrt@ll+6,w
  9063  0167  00C1               	movwf	dtoa@d+6
  9064  0168  0868               	movf	vfpfcnvrt@ll+7,w
  9065  0169  00C2               	movwf	dtoa@d+7
  9066  016A  086D               	movf	vfpfcnvrt@fp,w
  9067  016B  3183  2358  3180   	fcall	_dtoa
  9068  016E  0020               	movlb	0	; select bank0
  9069  016F  083C               	movf	?_dtoa+1,w
  9070  0170  00DA               	movwf	?_vfpfcnvrt+1
  9071  0171  083B               	movf	?_dtoa,w
  9072  0172  00D9               	movwf	?_vfpfcnvrt
  9073  0173  29CC               	goto	l2033
  9074  0174                     l5875:
  9075                           
  9076                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  9077  0174  0859               	movf	vfpfcnvrt@fmt,w
  9078  0175  0086               	movwf	6
  9079  0176  0187               	clrf	7
  9080  0177  3F40               	moviw [0]fsr1
  9081  0178  00DB               	movwf	??_vfpfcnvrt
  9082  0179  3F41               	moviw [1]fsr1
  9083  017A  00DC               	movwf	??_vfpfcnvrt+1
  9084  017B  085B               	movf	??_vfpfcnvrt,w
  9085  017C  0084               	movwf	4
  9086  017D  085C               	movf	??_vfpfcnvrt+1,w
  9087  017E  0085               	movwf	5
  9088  017F  0012               	moviw fsr0++
  9089  0180  3A25               	xorlw	37
  9090  0181  1D03               	btfss	3,2
  9091  0182  2984               	goto	u5091
  9092  0183  2985               	goto	u5090
  9093  0184                     u5091:
  9094  0184  299E               	goto	l5885
  9095  0185                     u5090:
  9096  0185                     l5877:
  9097                           
  9098                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  9099  0185  0859               	movf	vfpfcnvrt@fmt,w
  9100  0186  0086               	movwf	6
  9101  0187  0187               	clrf	7
  9102  0188  3001               	movlw	1
  9103  0189  0781               	addwf	1,f
  9104  018A  3141               	addfsr 1,1
  9105  018B  1803               	skipnc
  9106  018C  0A81               	incf	1,f
  9107  018D                     l5879:
  9108                           
  9109                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  9110  018D  3025               	movlw	37
  9111  018E  00A0               	movwf	fputc@c
  9112  018F  3000               	movlw	0
  9113  0190  00A1               	movwf	fputc@c+1
  9114  0191  086D               	movf	vfpfcnvrt@fp,w
  9115  0192  00DB               	movwf	??_vfpfcnvrt
  9116  0193  085B               	movf	??_vfpfcnvrt,w
  9117  0194  00A2               	movwf	fputc@fp
  9118  0195  3189  21C9  3180   	fcall	_fputc
  9119  0198                     l5881:
  9120                           
  9121                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  9122  0198  3001               	movlw	1
  9123  0199  0020               	movlb	0	; select bank0
  9124  019A  00D9               	movwf	?_vfpfcnvrt
  9125  019B  3000               	movlw	0
  9126  019C  00DA               	movwf	?_vfpfcnvrt+1
  9127  019D  29CC               	goto	l2033
  9128  019E                     l5885:
  9129                           
  9130                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  9131  019E  0859               	movf	vfpfcnvrt@fmt,w
  9132  019F  0086               	movwf	6
  9133  01A0  0187               	clrf	7
  9134  01A1  3001               	movlw	1
  9135  01A2  0781               	addwf	1,f
  9136  01A3  3141               	addfsr 1,1
  9137  01A4  1803               	skipnc
  9138  01A5  0A81               	incf	1,f
  9139  01A6                     l5887:
  9140                           
  9141                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  9142  01A6  01D9               	clrf	?_vfpfcnvrt
  9143  01A7  01DA               	clrf	?_vfpfcnvrt+1
  9144  01A8  29CC               	goto	l2033
  9145  01A9                     l5891:
  9146                           
  9147                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  9148  01A9  0859               	movf	vfpfcnvrt@fmt,w
  9149  01AA  0086               	movwf	6
  9150  01AB  0187               	clrf	7
  9151  01AC  3F40               	moviw [0]fsr1
  9152  01AD  00DB               	movwf	??_vfpfcnvrt
  9153  01AE  3F41               	moviw [1]fsr1
  9154  01AF  00DC               	movwf	??_vfpfcnvrt+1
  9155  01B0  085B               	movf	??_vfpfcnvrt,w
  9156  01B1  0084               	movwf	4
  9157  01B2  085C               	movf	??_vfpfcnvrt+1,w
  9158  01B3  0085               	movwf	5
  9159  01B4  0800               	movf	0,w	;code access
  9160  01B5  00DD               	movwf	??_vfpfcnvrt+2
  9161  01B6  01DE               	clrf	??_vfpfcnvrt+3
  9162  01B7  085D               	movf	??_vfpfcnvrt+2,w
  9163  01B8  00A0               	movwf	fputc@c
  9164  01B9  085E               	movf	??_vfpfcnvrt+3,w
  9165  01BA  00A1               	movwf	fputc@c+1
  9166  01BB  086D               	movf	vfpfcnvrt@fp,w
  9167  01BC  00DF               	movwf	??_vfpfcnvrt+4
  9168  01BD  085F               	movf	??_vfpfcnvrt+4,w
  9169  01BE  00A2               	movwf	fputc@fp
  9170  01BF  3189  21C9  3180   	fcall	_fputc
  9171  01C2                     l5893:
  9172                           
  9173                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  9174  01C2  0020               	movlb	0	; select bank0
  9175  01C3  0859               	movf	vfpfcnvrt@fmt,w
  9176  01C4  0086               	movwf	6
  9177  01C5  0187               	clrf	7
  9178  01C6  3001               	movlw	1
  9179  01C7  0781               	addwf	1,f
  9180  01C8  3141               	addfsr 1,1
  9181  01C9  1803               	skipnc
  9182  01CA  0A81               	incf	1,f
  9183  01CB  2998               	goto	l5881
  9184  01CC                     l2033:
  9185  01CC  0008               	return
  9186  01CD                     __end_of_vfpfcnvrt:
  9187                           
  9188                           	psect	text5
  9189  0358                     __ptext5:	
  9190 ;; *************** function _dtoa *****************
  9191 ;; Defined at:
  9192 ;;		line 287 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  9193 ;; Parameters:    Size  Location     Type
  9194 ;;  fp              1    wreg     PTR struct _IO_FILE
  9195 ;;		 -> sprintf@f(5), 
  9196 ;;  d               8   27[BANK0 ] long long 
  9197 ;; Auto vars:     Size  Location     Type
  9198 ;;  fp              1   38[BANK0 ] PTR struct _IO_FILE
  9199 ;;		 -> sprintf@f(5), 
  9200 ;;  n               8   47[BANK0 ] long long 
  9201 ;;  i               2   55[BANK0 ] int 
  9202 ;;  s               2   45[BANK0 ] int 
  9203 ;;  w               2   43[BANK0 ] int 
  9204 ;;  p               2   41[BANK0 ] int 
  9205 ;; Return value:  Size  Location     Type
  9206 ;;                  2   27[BANK0 ] int 
  9207 ;; Registers used:
  9208 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9209 ;; Tracked objects:
  9210 ;;		On entry : 0/0
  9211 ;;		On exit  : 0/0
  9212 ;;		Unchanged: 0/0
  9213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9214 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9215 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9216 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9217 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9218 ;;Total ram usage:       30 bytes
  9219 ;; Hardware stack levels used: 1
  9220 ;; Hardware stack levels required when called: 9
  9221 ;; This function calls:
  9222 ;;		___aodiv
  9223 ;;		___aomod
  9224 ;;		_abs
  9225 ;;		_pad
  9226 ;; This function is called by:
  9227 ;;		_vfpfcnvrt
  9228 ;; This function uses a non-reentrant model
  9229 ;;
  9230                           
  9231                           
  9232                           ;psect for function _dtoa
  9233  0358                     _dtoa:
  9234                           
  9235                           ;incstack = 0
  9236                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9237                           ;dtoa@fp stored from wreg
  9238  0358  0020               	movlb	0	; select bank0
  9239  0359  00C6               	movwf	dtoa@fp
  9240  035A                     l5661:
  9241                           
  9242                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  9243  035A  083B               	movf	dtoa@d,w
  9244  035B  00CF               	movwf	dtoa@n
  9245  035C  083C               	movf	dtoa@d+1,w
  9246  035D  00D0               	movwf	dtoa@n+1
  9247  035E  083D               	movf	dtoa@d+2,w
  9248  035F  00D1               	movwf	dtoa@n+2
  9249  0360  083E               	movf	dtoa@d+3,w
  9250  0361  00D2               	movwf	dtoa@n+3
  9251  0362  083F               	movf	dtoa@d+4,w
  9252  0363  00D3               	movwf	dtoa@n+4
  9253  0364  0840               	movf	dtoa@d+5,w
  9254  0365  00D4               	movwf	dtoa@n+5
  9255  0366  0841               	movf	dtoa@d+6,w
  9256  0367  00D5               	movwf	dtoa@n+6
  9257  0368  0842               	movf	dtoa@d+7,w
  9258  0369  00D6               	movwf	dtoa@n+7
  9259  036A                     l5663:
  9260                           
  9261                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  9262  036A  304F               	movlw	low dtoa@n
  9263  036B  0086               	movwf	6
  9264  036C  3000               	movlw	high dtoa@n
  9265  036D  0087               	movwf	7
  9266  036E  3F47               	moviw [7]fsr1
  9267  036F  00C3               	movwf	??_dtoa
  9268  0370  1BC3               	btfsc	??_dtoa,7
  9269  0371  2B73               	goto	u4611
  9270  0372  2B75               	goto	u4610
  9271  0373                     u4611:
  9272  0373  3001               	movlw	1
  9273  0374  2B76               	goto	u4620
  9274  0375                     u4610:
  9275  0375  3000               	movlw	0
  9276  0376                     u4620:
  9277  0376  0020               	movlb	0	; select bank0
  9278  0377  00C4               	movwf	??_dtoa+1
  9279  0378  01C5               	clrf	??_dtoa+2
  9280  0379  0844               	movf	??_dtoa+1,w
  9281  037A  00CD               	movwf	dtoa@s
  9282  037B  0845               	movf	??_dtoa+2,w
  9283  037C  00CE               	movwf	dtoa@s+1
  9284  037D                     l5665:
  9285                           
  9286                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  9287  037D  084D               	movf	dtoa@s,w
  9288  037E  044E               	iorwf	dtoa@s+1,w
  9289  037F  1903               	btfsc	3,2
  9290  0380  2B82               	goto	u4631
  9291  0381  2B83               	goto	u4630
  9292  0382                     u4631:
  9293  0382  2BA1               	goto	l1981
  9294  0383                     u4630:
  9295  0383                     l5667:
  9296                           
  9297                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  9298  0383  09CF               	comf	dtoa@n,f
  9299  0384  09D0               	comf	dtoa@n+1,f
  9300  0385  09D1               	comf	dtoa@n+2,f
  9301  0386  09D2               	comf	dtoa@n+3,f
  9302  0387  09D3               	comf	dtoa@n+4,f
  9303  0388  09D4               	comf	dtoa@n+5,f
  9304  0389  09D5               	comf	dtoa@n+6,f
  9305  038A  09D6               	comf	dtoa@n+7,f
  9306  038B  0ACF               	incf	dtoa@n,f
  9307  038C  1D03               	skipz
  9308  038D  2BA1               	goto	u464lld
  9309  038E  0AD0               	incf	dtoa@n+1,f
  9310  038F  1D03               	skipz
  9311  0390  2BA1               	goto	u464lld
  9312  0391  0AD1               	incf	dtoa@n+2,f
  9313  0392  1D03               	skipz
  9314  0393  2BA1               	goto	u464lld
  9315  0394  0AD2               	incf	dtoa@n+3,f
  9316  0395  1D03               	skipz
  9317  0396  2BA1               	goto	u464lld
  9318  0397  0AD3               	incf	dtoa@n+4,f
  9319  0398  1D03               	skipz
  9320  0399  2BA1               	goto	u464lld
  9321  039A  0AD4               	incf	dtoa@n+5,f
  9322  039B  1D03               	skipz
  9323  039C  2BA1               	goto	u464lld
  9324  039D  0AD5               	incf	dtoa@n+6,f
  9325  039E  1D03               	skipz
  9326  039F  2BA1               	goto	u464lld
  9327  03A0  0AD6               	incf	dtoa@n+7,f
  9328  03A1                     u464lld:
  9329  03A1                     l1981:	
  9330                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 297:     }
  9331                           
  9332                           
  9333                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  9334  03A1  1BF6               	btfsc	_prec+1,7
  9335  03A2  2BA4               	goto	u4651
  9336  03A3  2BA5               	goto	u4650
  9337  03A4                     u4651:
  9338  03A4  2BA9               	goto	l1982
  9339  03A5                     u4650:
  9340  03A5                     l5669:
  9341                           
  9342                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  9343  03A5  30FD               	movlw	253
  9344  03A6  05F7               	andwf	_flags,f
  9345  03A7  30FF               	movlw	255
  9346  03A8  05F8               	andwf	_flags+1,f
  9347  03A9                     l1982:	
  9348                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 302:     }
  9349                           
  9350                           
  9351                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  9352  03A9  0876               	movf	_prec+1,w
  9353  03AA  3A80               	xorlw	128
  9354  03AB  0020               	movlb	0	; select bank0
  9355  03AC  00C3               	movwf	??_dtoa
  9356  03AD  3080               	movlw	128
  9357  03AE  0243               	subwf	??_dtoa,w
  9358  03AF  1D03               	skipz
  9359  03B0  2BB3               	goto	u4665
  9360  03B1  3001               	movlw	1
  9361  03B2  0275               	subwf	_prec,w
  9362  03B3                     u4665:
  9363  03B3  1803               	skipnc
  9364  03B4  2BB6               	goto	u4661
  9365  03B5  2BB7               	goto	u4660
  9366  03B6                     u4661:
  9367  03B6  2BBD               	goto	l5673
  9368  03B7                     u4660:
  9369  03B7                     l5671:
  9370  03B7  3001               	movlw	1
  9371  03B8  0020               	movlb	0	; select bank0
  9372  03B9  00C9               	movwf	dtoa@p
  9373  03BA  3000               	movlw	0
  9374  03BB  00CA               	movwf	dtoa@p+1
  9375  03BC  2BC2               	goto	l1986
  9376  03BD                     l5673:
  9377  03BD  0876               	movf	_prec+1,w
  9378  03BE  0020               	movlb	0	; select bank0
  9379  03BF  00CA               	movwf	dtoa@p+1
  9380  03C0  0875               	movf	_prec,w
  9381  03C1  00C9               	movwf	dtoa@p
  9382  03C2                     l1986:
  9383                           
  9384                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  9385  03C2  0021               	movlb	1	; select bank1
  9386  03C3  086C               	movf	(_width+1)^(0+128),w
  9387  03C4  0020               	movlb	0	; select bank0
  9388  03C5  00CC               	movwf	dtoa@w+1
  9389  03C6  0021               	movlb	1	; select bank1
  9390  03C7  086B               	movf	_width^(0+128),w
  9391  03C8  0020               	movlb	0	; select bank0
  9392  03C9  00CB               	movwf	dtoa@w
  9393  03CA                     l5675:
  9394                           
  9395                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  9396  03CA  084D               	movf	dtoa@s,w
  9397  03CB  044E               	iorwf	dtoa@s+1,w
  9398  03CC  1D03               	btfss	3,2
  9399  03CD  2BCF               	goto	u4671
  9400  03CE  2BD0               	goto	u4670
  9401  03CF                     u4671:
  9402  03CF  2BD4               	goto	l5679
  9403  03D0                     u4670:
  9404  03D0                     l5677:
  9405  03D0  1D77               	btfss	_flags,2
  9406  03D1  2BD3               	goto	u4681
  9407  03D2  2BD4               	goto	u4680
  9408  03D3                     u4681:
  9409  03D3  2BD8               	goto	l1987
  9410  03D4                     u4680:
  9411  03D4                     l5679:
  9412                           
  9413                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  9414  03D4  30FF               	movlw	255
  9415  03D5  07CB               	addwf	dtoa@w,f
  9416  03D6  30FF               	movlw	255
  9417  03D7  3DCC               	addwfc	dtoa@w+1,f
  9418  03D8                     l1987:	
  9419                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 307:     }
  9420                           
  9421                           
  9422                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  9423  03D8  301F               	movlw	31
  9424  03D9  00D7               	movwf	dtoa@i
  9425  03DA  3000               	movlw	0
  9426  03DB  00D8               	movwf	dtoa@i+1
  9427  03DC                     l5681:
  9428                           
  9429                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  9430  03DC  0022               	movlb	2	; select bank2
  9431  03DD  01DC               	clrf	(_dbuf^(0+256)+31)
  9432                           
  9433                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9434  03DE  2C48               	goto	l1990
  9435  03DF                     l5683:
  9436                           
  9437                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  9438  03DF  30FF               	movlw	255
  9439  03E0  0020               	movlb	0	; select bank0
  9440  03E1  07D7               	addwf	dtoa@i,f
  9441  03E2  30FF               	movlw	255
  9442  03E3  3DD8               	addwfc	dtoa@i+1,f
  9443  03E4                     l5685:
  9444                           
  9445                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  9446  03E4  300A               	movlw	10
  9447  03E5  00A0               	movwf	___aomod@divisor
  9448  03E6  01A1               	clrf	___aomod@divisor+1
  9449  03E7  01A2               	clrf	___aomod@divisor+2
  9450  03E8  01A3               	clrf	___aomod@divisor+3
  9451  03E9  01A4               	clrf	___aomod@divisor+4
  9452  03EA  01A5               	clrf	___aomod@divisor+5
  9453  03EB  01A6               	clrf	___aomod@divisor+6
  9454  03EC  01A7               	clrf	___aomod@divisor+7
  9455  03ED  084F               	movf	dtoa@n,w
  9456  03EE  00A8               	movwf	___aomod@dividend
  9457  03EF  0850               	movf	dtoa@n+1,w
  9458  03F0  00A9               	movwf	___aomod@dividend+1
  9459  03F1  0851               	movf	dtoa@n+2,w
  9460  03F2  00AA               	movwf	___aomod@dividend+2
  9461  03F3  0852               	movf	dtoa@n+3,w
  9462  03F4  00AB               	movwf	___aomod@dividend+3
  9463  03F5  0853               	movf	dtoa@n+4,w
  9464  03F6  00AC               	movwf	___aomod@dividend+4
  9465  03F7  0854               	movf	dtoa@n+5,w
  9466  03F8  00AD               	movwf	___aomod@dividend+5
  9467  03F9  0855               	movf	dtoa@n+6,w
  9468  03FA  00AE               	movwf	___aomod@dividend+6
  9469  03FB  0856               	movf	dtoa@n+7,w
  9470  03FC  00AF               	movwf	___aomod@dividend+7
  9471  03FD  318E  260E  3183   	fcall	___aomod
  9472  0400  0020               	movlb	0	; select bank0
  9473  0401  0821               	movf	?___aomod+1,w
  9474  0402  00B4               	movwf	abs@a+1
  9475  0403  0820               	movf	?___aomod,w
  9476  0404  00B3               	movwf	abs@a
  9477  0405  3197  2784  3183   	fcall	_abs
  9478  0408  0020               	movlb	0	; select bank0
  9479  0409  0833               	movf	?_abs,w
  9480  040A  3E30               	addlw	48
  9481  040B  00C3               	movwf	??_dtoa
  9482  040C  0857               	movf	dtoa@i,w
  9483  040D  3E3D               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9484  040E  0086               	movwf	6
  9485  040F  3001               	movlw	1	; select bank2/3
  9486  0410  0087               	movwf	7
  9487  0411  0843               	movf	??_dtoa,w
  9488  0412  0081               	movwf	1
  9489  0413                     l5687:
  9490                           
  9491                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  9492  0413  30FF               	movlw	255
  9493  0414  07C9               	addwf	dtoa@p,f
  9494  0415  30FF               	movlw	255
  9495  0416  3DCA               	addwfc	dtoa@p+1,f
  9496  0417                     l5689:
  9497                           
  9498                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  9499  0417  30FF               	movlw	255
  9500  0418  07CB               	addwf	dtoa@w,f
  9501  0419  30FF               	movlw	255
  9502  041A  3DCC               	addwfc	dtoa@w+1,f
  9503  041B                     l5691:
  9504                           
  9505                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  9506  041B  300A               	movlw	10
  9507  041C  00A0               	movwf	___aodiv@divisor
  9508  041D  01A1               	clrf	___aodiv@divisor+1
  9509  041E  01A2               	clrf	___aodiv@divisor+2
  9510  041F  01A3               	clrf	___aodiv@divisor+3
  9511  0420  01A4               	clrf	___aodiv@divisor+4
  9512  0421  01A5               	clrf	___aodiv@divisor+5
  9513  0422  01A6               	clrf	___aodiv@divisor+6
  9514  0423  01A7               	clrf	___aodiv@divisor+7
  9515  0424  084F               	movf	dtoa@n,w
  9516  0425  00A8               	movwf	___aodiv@dividend
  9517  0426  0850               	movf	dtoa@n+1,w
  9518  0427  00A9               	movwf	___aodiv@dividend+1
  9519  0428  0851               	movf	dtoa@n+2,w
  9520  0429  00AA               	movwf	___aodiv@dividend+2
  9521  042A  0852               	movf	dtoa@n+3,w
  9522  042B  00AB               	movwf	___aodiv@dividend+3
  9523  042C  0853               	movf	dtoa@n+4,w
  9524  042D  00AC               	movwf	___aodiv@dividend+4
  9525  042E  0854               	movf	dtoa@n+5,w
  9526  042F  00AD               	movwf	___aodiv@dividend+5
  9527  0430  0855               	movf	dtoa@n+6,w
  9528  0431  00AE               	movwf	___aodiv@dividend+6
  9529  0432  0856               	movf	dtoa@n+7,w
  9530  0433  00AF               	movwf	___aodiv@dividend+7
  9531  0434  318E  26FB  3183   	fcall	___aodiv
  9532  0437  0020               	movlb	0	; select bank0
  9533  0438  0820               	movf	?___aodiv,w
  9534  0439  00CF               	movwf	dtoa@n
  9535  043A  0821               	movf	?___aodiv+1,w
  9536  043B  00D0               	movwf	dtoa@n+1
  9537  043C  0822               	movf	?___aodiv+2,w
  9538  043D  00D1               	movwf	dtoa@n+2
  9539  043E  0823               	movf	?___aodiv+3,w
  9540  043F  00D2               	movwf	dtoa@n+3
  9541  0440  0824               	movf	?___aodiv+4,w
  9542  0441  00D3               	movwf	dtoa@n+4
  9543  0442  0825               	movf	?___aodiv+5,w
  9544  0443  00D4               	movwf	dtoa@n+5
  9545  0444  0826               	movf	?___aodiv+6,w
  9546  0445  00D5               	movwf	dtoa@n+6
  9547  0446  0827               	movf	?___aodiv+7,w
  9548  0447  00D6               	movwf	dtoa@n+7
  9549  0448                     l1990:	
  9550                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 318:     }
  9551                           
  9552                           
  9553                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9554  0448  0020               	movlb	0	; select bank0
  9555  0449  0858               	movf	dtoa@i+1,w
  9556  044A  3A80               	xorlw	128
  9557  044B  00C3               	movwf	??_dtoa
  9558  044C  3080               	movlw	128
  9559  044D  0243               	subwf	??_dtoa,w
  9560  044E  1D03               	skipz
  9561  044F  2C52               	goto	u4695
  9562  0450  3001               	movlw	1
  9563  0451  0257               	subwf	dtoa@i,w
  9564  0452                     u4695:
  9565  0452  1C03               	skipc
  9566  0453  2C55               	goto	u4691
  9567  0454  2C56               	goto	u4690
  9568  0455                     u4691:
  9569  0455  2C82               	goto	l5701
  9570  0456                     u4690:
  9571  0456                     l5693:
  9572  0456  0020               	movlb	0	; select bank0
  9573  0457  084F               	movf	dtoa@n,w
  9574  0458  0450               	iorwf	dtoa@n+1,w
  9575  0459  0451               	iorwf	dtoa@n+2,w
  9576  045A  0452               	iorwf	dtoa@n+3,w
  9577  045B  0453               	iorwf	dtoa@n+4,w
  9578  045C  0454               	iorwf	dtoa@n+5,w
  9579  045D  0455               	iorwf	dtoa@n+6,w
  9580  045E  0456               	iorwf	dtoa@n+7,w
  9581  045F  1D03               	skipz
  9582  0460  2C62               	goto	u4701
  9583  0461  2C63               	goto	u4700
  9584  0462                     u4701:
  9585  0462  2BDF               	goto	l5683
  9586  0463                     u4700:
  9587  0463                     l5695:
  9588  0463  084A               	movf	dtoa@p+1,w
  9589  0464  3A80               	xorlw	128
  9590  0465  00C3               	movwf	??_dtoa
  9591  0466  3080               	movlw	128
  9592  0467  0243               	subwf	??_dtoa,w
  9593  0468  1D03               	skipz
  9594  0469  2C6C               	goto	u4715
  9595  046A  3001               	movlw	1
  9596  046B  0249               	subwf	dtoa@p,w
  9597  046C                     u4715:
  9598  046C  1803               	skipnc
  9599  046D  2C6F               	goto	u4711
  9600  046E  2C70               	goto	u4710
  9601  046F                     u4711:
  9602  046F  2BDF               	goto	l5683
  9603  0470                     u4710:
  9604  0470                     l5697:
  9605  0470  0020               	movlb	0	; select bank0
  9606  0471  084C               	movf	dtoa@w+1,w
  9607  0472  3A80               	xorlw	128
  9608  0473  00C3               	movwf	??_dtoa
  9609  0474  3080               	movlw	128
  9610  0475  0243               	subwf	??_dtoa,w
  9611  0476  1D03               	skipz
  9612  0477  2C7A               	goto	u4725
  9613  0478  3001               	movlw	1
  9614  0479  024B               	subwf	dtoa@w,w
  9615  047A                     u4725:
  9616  047A  1C03               	skipc
  9617  047B  2C7D               	goto	u4721
  9618  047C  2C7E               	goto	u4720
  9619  047D                     u4721:
  9620  047D  2C82               	goto	l5701
  9621  047E                     u4720:
  9622  047E                     l5699:
  9623  047E  18F7               	btfsc	_flags,1
  9624  047F  2C81               	goto	u4731
  9625  0480  2C82               	goto	u4730
  9626  0481                     u4731:
  9627  0481  2BDF               	goto	l5683
  9628  0482                     u4730:
  9629  0482                     l5701:
  9630                           
  9631                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  9632  0482  0020               	movlb	0	; select bank0
  9633  0483  084D               	movf	dtoa@s,w
  9634  0484  044E               	iorwf	dtoa@s+1,w
  9635  0485  1D03               	btfss	3,2
  9636  0486  2C88               	goto	u4741
  9637  0487  2C89               	goto	u4740
  9638  0488                     u4741:
  9639  0488  2C8D               	goto	l5705
  9640  0489                     u4740:
  9641  0489                     l5703:
  9642  0489  1D77               	btfss	_flags,2
  9643  048A  2C8C               	goto	u4751
  9644  048B  2C8D               	goto	u4750
  9645  048C                     u4751:
  9646  048C  2CA9               	goto	l5715
  9647  048D                     u4750:
  9648  048D                     l5705:
  9649                           
  9650                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  9651  048D  30FF               	movlw	255
  9652  048E  07D7               	addwf	dtoa@i,f
  9653  048F  30FF               	movlw	255
  9654  0490  3DD8               	addwfc	dtoa@i+1,f
  9655  0491                     l5707:
  9656                           
  9657                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  9658  0491  084D               	movf	dtoa@s,w
  9659  0492  044E               	iorwf	dtoa@s+1,w
  9660  0493  1D03               	btfss	3,2
  9661  0494  2C96               	goto	u4761
  9662  0495  2C97               	goto	u4760
  9663  0496                     u4761:
  9664  0496  2C9C               	goto	l5711
  9665  0497                     u4760:
  9666  0497                     l5709:
  9667  0497  302B               	movlw	43
  9668  0498  00C7               	movwf	_dtoa$2903
  9669  0499  3000               	movlw	0
  9670  049A  00C8               	movwf	_dtoa$2903+1
  9671  049B  2CA0               	goto	l5713
  9672  049C                     l5711:
  9673  049C  302D               	movlw	45
  9674  049D  00C7               	movwf	_dtoa$2903
  9675  049E  3000               	movlw	0
  9676  049F  00C8               	movwf	_dtoa$2903+1
  9677  04A0                     l5713:
  9678  04A0  0847               	movf	_dtoa$2903,w
  9679  04A1  00C3               	movwf	??_dtoa
  9680  04A2  0857               	movf	dtoa@i,w
  9681  04A3  3E3D               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9682  04A4  0086               	movwf	6
  9683  04A5  3001               	movlw	1	; select bank2/3
  9684  04A6  0087               	movwf	7
  9685  04A7  0843               	movf	??_dtoa,w
  9686  04A8  0081               	movwf	1
  9687  04A9                     l5715:
  9688                           
  9689                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  9690  04A9  0857               	movf	dtoa@i,w
  9691  04AA  3E3D               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9692  04AB  00C3               	movwf	??_dtoa
  9693  04AC  0843               	movf	??_dtoa,w
  9694  04AD  00B0               	movwf	pad@buf
  9695  04AE  084C               	movf	dtoa@w+1,w
  9696  04AF  00B2               	movwf	pad@p+1
  9697  04B0  084B               	movf	dtoa@w,w
  9698  04B1  00B1               	movwf	pad@p
  9699  04B2  0846               	movf	dtoa@fp,w
  9700  04B3  318A  226D  3183   	fcall	_pad
  9701  04B6  0020               	movlb	0	; select bank0
  9702  04B7  0831               	movf	?_pad+1,w
  9703  04B8  00BC               	movwf	?_dtoa+1
  9704  04B9  0830               	movf	?_pad,w
  9705  04BA  00BB               	movwf	?_dtoa
  9706  04BB                     l2004:
  9707  04BB  0008               	return
  9708  04BC                     __end_of_dtoa:
  9709                           
  9710                           	psect	text6
  9711  0A6D                     __ptext6:	
  9712 ;; *************** function _pad *****************
  9713 ;; Defined at:
  9714 ;;		line 72 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  9715 ;; Parameters:    Size  Location     Type
  9716 ;;  fp              1    wreg     PTR struct _IO_FILE
  9717 ;;		 -> sprintf@f(5), 
  9718 ;;  buf             1   16[BANK0 ] PTR unsigned char 
  9719 ;;		 -> dbuf(32), 
  9720 ;;  p               2   17[BANK0 ] int 
  9721 ;; Auto vars:     Size  Location     Type
  9722 ;;  fp              1   24[BANK0 ] PTR struct _IO_FILE
  9723 ;;		 -> sprintf@f(5), 
  9724 ;;  w               2   22[BANK0 ] int 
  9725 ;;  i               2   20[BANK0 ] int 
  9726 ;; Return value:  Size  Location     Type
  9727 ;;                  2   16[BANK0 ] int 
  9728 ;; Registers used:
  9729 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9730 ;; Tracked objects:
  9731 ;;		On entry : 0/0
  9732 ;;		On exit  : 0/0
  9733 ;;		Unchanged: 0/0
  9734 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9735 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9736 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9737 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9738 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9739 ;;Total ram usage:        9 bytes
  9740 ;; Hardware stack levels used: 1
  9741 ;; Hardware stack levels required when called: 8
  9742 ;; This function calls:
  9743 ;;		_fputc
  9744 ;;		_fputs
  9745 ;;		_strlen
  9746 ;; This function is called by:
  9747 ;;		_dtoa
  9748 ;; This function uses a non-reentrant model
  9749 ;;
  9750                           
  9751                           
  9752                           ;psect for function _pad
  9753  0A6D                     _pad:
  9754                           
  9755                           ;incstack = 0
  9756                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9757                           ;pad@fp stored from wreg
  9758  0A6D  0020               	movlb	0	; select bank0
  9759  0A6E  00B8               	movwf	pad@fp
  9760  0A6F                     l5593:
  9761                           
  9762                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  9763  0A6F  1C77               	btfss	_flags,0
  9764  0A70  2A72               	goto	u4441
  9765  0A71  2A73               	goto	u4440
  9766  0A72                     u4441:
  9767  0A72  2A7B               	goto	l5597
  9768  0A73                     u4440:
  9769  0A73                     l5595:
  9770                           
  9771                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  9772  0A73  0838               	movf	pad@fp,w
  9773  0A74  00B3               	movwf	??_pad
  9774  0A75  0833               	movf	??_pad,w
  9775  0A76  00A8               	movwf	fputs@fp
  9776  0A77  0830               	movf	pad@buf,w
  9777  0A78  3188  20A6  318A   	fcall	_fputs
  9778  0A7B                     l5597:
  9779                           
  9780                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  9781  0A7B  0020               	movlb	0	; select bank0
  9782  0A7C  1BB2               	btfsc	pad@p+1,7
  9783  0A7D  2A7F               	goto	u4451
  9784  0A7E  2A80               	goto	u4450
  9785  0A7F                     u4451:
  9786  0A7F  2A85               	goto	l5601
  9787  0A80                     u4450:
  9788  0A80                     l5599:
  9789  0A80  0832               	movf	pad@p+1,w
  9790  0A81  00B7               	movwf	pad@w+1
  9791  0A82  0831               	movf	pad@p,w
  9792  0A83  00B6               	movwf	pad@w
  9793  0A84  2A87               	goto	l1973
  9794  0A85                     l5601:
  9795  0A85  01B6               	clrf	pad@w
  9796  0A86  01B7               	clrf	pad@w+1
  9797  0A87                     l1973:
  9798                           
  9799                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  9800  0A87  01B4               	clrf	pad@i
  9801  0A88  01B5               	clrf	pad@i+1
  9802                           
  9803                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9804  0A89  2A9B               	goto	l5607
  9805  0A8A                     l5603:
  9806                           
  9807                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  9808  0A8A  3020               	movlw	32
  9809  0A8B  0020               	movlb	0	; select bank0
  9810  0A8C  00A0               	movwf	fputc@c
  9811  0A8D  3000               	movlw	0
  9812  0A8E  00A1               	movwf	fputc@c+1
  9813  0A8F  0838               	movf	pad@fp,w
  9814  0A90  00B3               	movwf	??_pad
  9815  0A91  0833               	movf	??_pad,w
  9816  0A92  00A2               	movwf	fputc@fp
  9817  0A93  3189  21C9  318A   	fcall	_fputc
  9818  0A96                     l5605:
  9819                           
  9820                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  9821  0A96  3001               	movlw	1
  9822  0A97  0020               	movlb	0	; select bank0
  9823  0A98  07B4               	addwf	pad@i,f
  9824  0A99  3000               	movlw	0
  9825  0A9A  3DB5               	addwfc	pad@i+1,f
  9826  0A9B                     l5607:
  9827                           
  9828                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9829  0A9B  0835               	movf	pad@i+1,w
  9830  0A9C  3A80               	xorlw	128
  9831  0A9D  00B3               	movwf	??_pad
  9832  0A9E  0837               	movf	pad@w+1,w
  9833  0A9F  3A80               	xorlw	128
  9834  0AA0  0233               	subwf	??_pad,w
  9835  0AA1  1D03               	skipz
  9836  0AA2  2AA5               	goto	u4465
  9837  0AA3  0836               	movf	pad@w,w
  9838  0AA4  0234               	subwf	pad@i,w
  9839  0AA5                     u4465:
  9840  0AA5  1C03               	skipc
  9841  0AA6  2AA8               	goto	u4461
  9842  0AA7  2AA9               	goto	u4460
  9843  0AA8                     u4461:
  9844  0AA8  2A8A               	goto	l5603
  9845  0AA9                     u4460:
  9846  0AA9                     l1976:
  9847                           
  9848                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  9849  0AA9  1877               	btfsc	_flags,0
  9850  0AAA  2AAC               	goto	u4471
  9851  0AAB  2AAD               	goto	u4470
  9852  0AAC                     u4471:
  9853  0AAC  2AB6               	goto	l5611
  9854  0AAD                     u4470:
  9855  0AAD                     l5609:
  9856                           
  9857                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  9858  0AAD  0020               	movlb	0	; select bank0
  9859  0AAE  0838               	movf	pad@fp,w
  9860  0AAF  00B3               	movwf	??_pad
  9861  0AB0  0833               	movf	??_pad,w
  9862  0AB1  00A8               	movwf	fputs@fp
  9863  0AB2  0830               	movf	pad@buf,w
  9864  0AB3  3188  20A6  318A   	fcall	_fputs
  9865  0AB6                     l5611:
  9866                           
  9867                           ;D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  9868  0AB6  0020               	movlb	0	; select bank0
  9869  0AB7  0830               	movf	pad@buf,w
  9870  0AB8  3197  274D  318A   	fcall	_strlen
  9871  0ABB  0020               	movlb	0	; select bank0
  9872  0ABC  0836               	movf	pad@w,w
  9873  0ABD  0720               	addwf	?_strlen,w
  9874  0ABE  00B0               	movwf	?_pad
  9875  0ABF  0837               	movf	pad@w+1,w
  9876  0AC0  3D21               	addwfc	?_strlen+1,w
  9877  0AC1  00B1               	movwf	?_pad+1
  9878  0AC2                     l1978:
  9879  0AC2  0008               	return
  9880  0AC3                     __end_of_pad:
  9881                           
  9882                           	psect	text7
  9883  174D                     __ptext7:	
  9884 ;; *************** function _strlen *****************
  9885 ;; Defined at:
  9886 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  9887 ;; Parameters:    Size  Location     Type
  9888 ;;  s               1    wreg     PTR const unsigned char 
  9889 ;;		 -> dbuf(32), 
  9890 ;; Auto vars:     Size  Location     Type
  9891 ;;  s               1    4[BANK0 ] PTR const unsigned char 
  9892 ;;		 -> dbuf(32), 
  9893 ;;  a               1    3[BANK0 ] PTR const unsigned char 
  9894 ;;		 -> dbuf(32), 
  9895 ;; Return value:  Size  Location     Type
  9896 ;;                  2    0[BANK0 ] unsigned int 
  9897 ;; Registers used:
  9898 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9899 ;; Tracked objects:
  9900 ;;		On entry : 0/0
  9901 ;;		On exit  : 0/0
  9902 ;;		Unchanged: 0/0
  9903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9904 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9905 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9906 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9907 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9908 ;;Total ram usage:        5 bytes
  9909 ;; Hardware stack levels used: 1
  9910 ;; Hardware stack levels required when called: 5
  9911 ;; This function calls:
  9912 ;;		Nothing
  9913 ;; This function is called by:
  9914 ;;		_pad
  9915 ;; This function uses a non-reentrant model
  9916 ;;
  9917                           
  9918                           
  9919                           ;psect for function _strlen
  9920  174D                     _strlen:
  9921                           
  9922                           ;incstack = 0
  9923                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  9924                           ;strlen@s stored from wreg
  9925  174D  0020               	movlb	0	; select bank0
  9926  174E  00A4               	movwf	strlen@s
  9927  174F                     l5501:
  9928  174F  0824               	movf	strlen@s,w
  9929  1750  00A2               	movwf	??_strlen
  9930  1751  0822               	movf	??_strlen,w
  9931  1752  00A3               	movwf	strlen@a
  9932  1753  2F58               	goto	l5505
  9933  1754                     l5503:
  9934  1754  3001               	movlw	1
  9935  1755  00A2               	movwf	??_strlen
  9936  1756  0822               	movf	??_strlen,w
  9937  1757  07A4               	addwf	strlen@s,f
  9938  1758                     l5505:
  9939  1758  0824               	movf	strlen@s,w
  9940  1759  0086               	movwf	6
  9941  175A  3001               	movlw	1	; select bank2/3
  9942  175B  0087               	movwf	7
  9943  175C  0801               	movf	1,w
  9944  175D  1D03               	btfss	3,2
  9945  175E  2F60               	goto	u4181
  9946  175F  2F61               	goto	u4180
  9947  1760                     u4181:
  9948  1760  2F54               	goto	l5503
  9949  1761                     u4180:
  9950  1761                     l5507:
  9951  1761  0823               	movf	strlen@a,w
  9952  1762  0224               	subwf	strlen@s,w
  9953  1763  00A0               	movwf	?_strlen
  9954  1764  01A1               	clrf	?_strlen+1
  9955  1765  1BA0               	btfsc	?_strlen,7
  9956  1766  03A1               	decf	?_strlen+1,f
  9957  1767                     l2121:
  9958  1767  0008               	return
  9959  1768                     __end_of_strlen:
  9960                           
  9961                           	psect	text8
  9962  08A6                     __ptext8:	
  9963 ;; *************** function _fputs *****************
  9964 ;; Defined at:
  9965 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  9966 ;; Parameters:    Size  Location     Type
  9967 ;;  s               1    wreg     PTR const unsigned char 
  9968 ;;		 -> dbuf(32), 
  9969 ;;  fp              1    8[BANK0 ] PTR struct _IO_FILE
  9970 ;;		 -> sprintf@f(5), 
  9971 ;; Auto vars:     Size  Location     Type
  9972 ;;  s               1   15[BANK0 ] PTR const unsigned char 
  9973 ;;		 -> dbuf(32), 
  9974 ;;  i               2   13[BANK0 ] int 
  9975 ;;  c               1   12[BANK0 ] unsigned char 
  9976 ;; Return value:  Size  Location     Type
  9977 ;;                  2    8[BANK0 ] int 
  9978 ;; Registers used:
  9979 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9980 ;; Tracked objects:
  9981 ;;		On entry : 0/0
  9982 ;;		On exit  : 0/0
  9983 ;;		Unchanged: 0/0
  9984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9985 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9986 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9987 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9988 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9989 ;;Total ram usage:        8 bytes
  9990 ;; Hardware stack levels used: 1
  9991 ;; Hardware stack levels required when called: 7
  9992 ;; This function calls:
  9993 ;;		_fputc
  9994 ;; This function is called by:
  9995 ;;		_pad
  9996 ;; This function uses a non-reentrant model
  9997 ;;
  9998                           
  9999                           
 10000                           ;psect for function _fputs
 10001  08A6                     _fputs:
 10002                           
 10003                           ;incstack = 0
 10004                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10005                           ;fputs@s stored from wreg
 10006  08A6  0020               	movlb	0	; select bank0
 10007  08A7  00AF               	movwf	fputs@s
 10008  08A8                     l5493:
 10009  08A8  01AD               	clrf	fputs@i
 10010  08A9  01AE               	clrf	fputs@i+1
 10011  08AA  28BE               	goto	l5499
 10012  08AB                     l5495:
 10013  08AB  082C               	movf	fputs@c,w
 10014  08AC  00A9               	movwf	??_fputs
 10015  08AD  01AA               	clrf	??_fputs+1
 10016  08AE  0829               	movf	??_fputs,w
 10017  08AF  00A0               	movwf	fputc@c
 10018  08B0  082A               	movf	??_fputs+1,w
 10019  08B1  00A1               	movwf	fputc@c+1
 10020  08B2  0828               	movf	fputs@fp,w
 10021  08B3  00AB               	movwf	??_fputs+2
 10022  08B4  082B               	movf	??_fputs+2,w
 10023  08B5  00A2               	movwf	fputc@fp
 10024  08B6  3189  21C9  3188   	fcall	_fputc
 10025  08B9                     l5497:
 10026  08B9  3001               	movlw	1
 10027  08BA  0020               	movlb	0	; select bank0
 10028  08BB  07AD               	addwf	fputs@i,f
 10029  08BC  3000               	movlw	0
 10030  08BD  3DAE               	addwfc	fputs@i+1,f
 10031  08BE                     l5499:
 10032  08BE  082D               	movf	fputs@i,w
 10033  08BF  072F               	addwf	fputs@s,w
 10034  08C0  00A9               	movwf	??_fputs
 10035  08C1  0829               	movf	??_fputs,w
 10036  08C2  0086               	movwf	6
 10037  08C3  3001               	movlw	1	; select bank2/3
 10038  08C4  0087               	movwf	7
 10039  08C5  0801               	movf	1,w
 10040  08C6  00AA               	movwf	??_fputs+1
 10041  08C7  082A               	movf	??_fputs+1,w
 10042  08C8  00AC               	movwf	fputs@c
 10043  08C9  082C               	movf	fputs@c,w
 10044  08CA  1D03               	btfss	3,2
 10045  08CB  28CD               	goto	u4171
 10046  08CC  28CE               	goto	u4170
 10047  08CD                     u4171:
 10048  08CD  28AB               	goto	l5495
 10049  08CE                     u4170:
 10050  08CE                     l2112:
 10051  08CE  0008               	return
 10052  08CF                     __end_of_fputs:
 10053                           
 10054                           	psect	text9
 10055  09C9                     __ptext9:	
 10056 ;; *************** function _fputc *****************
 10057 ;; Defined at:
 10058 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
 10059 ;; Parameters:    Size  Location     Type
 10060 ;;  c               2    0[BANK0 ] int 
 10061 ;;  fp              1    2[BANK0 ] PTR struct _IO_FILE
 10062 ;;		 -> sprintf@f(5), 
 10063 ;; Auto vars:     Size  Location     Type
 10064 ;;		None
 10065 ;; Return value:  Size  Location     Type
 10066 ;;                  2    0[BANK0 ] int 
 10067 ;; Registers used:
 10068 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10069 ;; Tracked objects:
 10070 ;;		On entry : 0/0
 10071 ;;		On exit  : 0/0
 10072 ;;		Unchanged: 0/0
 10073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10074 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10076 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10077 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10078 ;;Total ram usage:        8 bytes
 10079 ;; Hardware stack levels used: 1
 10080 ;; Hardware stack levels required when called: 6
 10081 ;; This function calls:
 10082 ;;		_putch
 10083 ;; This function is called by:
 10084 ;;		_pad
 10085 ;;		_vfpfcnvrt
 10086 ;;		_fputs
 10087 ;; This function uses a non-reentrant model
 10088 ;;
 10089                           
 10090                           
 10091                           ;psect for function _fputc
 10092  09C9                     _fputc:
 10093  09C9                     l5477:	
 10094                           ;incstack = 0
 10095                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10096                           
 10097  09C9  0020               	movlb	0	; select bank0
 10098  09CA  0822               	movf	fputc@fp,w
 10099  09CB  1903               	btfsc	3,2
 10100  09CC  29CE               	goto	u4131
 10101  09CD  29CF               	goto	u4130
 10102  09CE                     u4131:
 10103  09CE  29D4               	goto	l5481
 10104  09CF                     u4130:
 10105  09CF                     l5479:
 10106  09CF  0822               	movf	fputc@fp,w
 10107  09D0  1D03               	btfss	3,2
 10108  09D1  29D3               	goto	u4141
 10109  09D2  29D4               	goto	u4140
 10110  09D3                     u4141:
 10111  09D3  29D9               	goto	l5483
 10112  09D4                     u4140:
 10113  09D4                     l5481:
 10114  09D4  0820               	movf	fputc@c,w
 10115  09D5  3187  27FE  3189   	fcall	_putch
 10116  09D8  2A19               	goto	l2104
 10117  09D9                     l5483:
 10118  09D9  0822               	movf	fputc@fp,w
 10119  09DA  3E03               	addlw	3
 10120  09DB  0086               	movwf	6
 10121  09DC  0187               	clrf	7
 10122  09DD  0016               	moviw fsr1++
 10123  09DE  0401               	iorwf	1,w
 10124  09DF  1903               	btfsc	3,2
 10125  09E0  29E2               	goto	u4151
 10126  09E1  29E3               	goto	u4150
 10127  09E2                     u4151:
 10128  09E2  2A00               	goto	l5487
 10129  09E3                     u4150:
 10130  09E3                     l5485:
 10131  09E3  0822               	movf	fputc@fp,w
 10132  09E4  3E03               	addlw	3
 10133  09E5  0086               	movwf	6
 10134  09E6  0187               	clrf	7
 10135  09E7  3F40               	moviw [0]fsr1
 10136  09E8  00A3               	movwf	??_fputc
 10137  09E9  3F41               	moviw [1]fsr1
 10138  09EA  00A4               	movwf	??_fputc+1
 10139  09EB  0A22               	incf	fputc@fp,w
 10140  09EC  0086               	movwf	6
 10141  09ED  0187               	clrf	7
 10142  09EE  3F40               	moviw [0]fsr1
 10143  09EF  00A5               	movwf	??_fputc+2
 10144  09F0  3F41               	moviw [1]fsr1
 10145  09F1  00A6               	movwf	??_fputc+3
 10146  09F2  0826               	movf	??_fputc+3,w
 10147  09F3  3A80               	xorlw	128
 10148  09F4  00A7               	movwf	??_fputc+4
 10149  09F5  0824               	movf	??_fputc+1,w
 10150  09F6  3A80               	xorlw	128
 10151  09F7  0227               	subwf	??_fputc+4,w
 10152  09F8  1D03               	skipz
 10153  09F9  29FC               	goto	u4165
 10154  09FA  0823               	movf	??_fputc,w
 10155  09FB  0225               	subwf	??_fputc+2,w
 10156  09FC                     u4165:
 10157  09FC  1803               	skipnc
 10158  09FD  29FF               	goto	u4161
 10159  09FE  2A00               	goto	u4160
 10160  09FF                     u4161:
 10161  09FF  2A19               	goto	l2104
 10162  0A00                     u4160:
 10163  0A00                     l5487:
 10164  0A00  0020               	movlb	0	; select bank0
 10165  0A01  0820               	movf	fputc@c,w
 10166  0A02  00A3               	movwf	??_fputc
 10167  0A03  0822               	movf	fputc@fp,w
 10168  0A04  0086               	movwf	6
 10169  0A05  0187               	clrf	7
 10170  0A06  0A22               	incf	fputc@fp,w
 10171  0A07  0084               	movwf	4
 10172  0A08  0185               	clrf	5
 10173  0A09  0800               	movf	0,w
 10174  0A0A  0701               	addwf	1,w
 10175  0A0B  00A4               	movwf	??_fputc+1
 10176  0A0C  0824               	movf	??_fputc+1,w
 10177  0A0D  0086               	movwf	6
 10178  0A0E  0187               	clrf	7
 10179  0A0F  0823               	movf	??_fputc,w
 10180  0A10  0081               	movwf	1
 10181  0A11                     l5489:
 10182  0A11  0A22               	incf	fputc@fp,w
 10183  0A12  0086               	movwf	6
 10184  0A13  0187               	clrf	7
 10185  0A14  3001               	movlw	1
 10186  0A15  0781               	addwf	1,f
 10187  0A16  3141               	addfsr 1,1
 10188  0A17  1803               	skipnc
 10189  0A18  0A81               	incf	1,f
 10190  0A19                     l2104:
 10191  0A19  0008               	return
 10192  0A1A                     __end_of_fputc:
 10193                           
 10194                           	psect	text10
 10195  07FE                     __ptext10:	
 10196 ;; *************** function _putch *****************
 10197 ;; Defined at:
 10198 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
 10199 ;; Parameters:    Size  Location     Type
 10200 ;;  c               1    wreg     unsigned char 
 10201 ;; Auto vars:     Size  Location     Type
 10202 ;;  c               1    0[COMMON] unsigned char 
 10203 ;; Return value:  Size  Location     Type
 10204 ;;                  1    wreg      void 
 10205 ;; Registers used:
 10206 ;;		wreg
 10207 ;; Tracked objects:
 10208 ;;		On entry : 0/0
 10209 ;;		On exit  : 0/0
 10210 ;;		Unchanged: 0/0
 10211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10216 ;;Total ram usage:        0 bytes
 10217 ;; Hardware stack levels used: 1
 10218 ;; Hardware stack levels required when called: 5
 10219 ;; This function calls:
 10220 ;;		Nothing
 10221 ;; This function is called by:
 10222 ;;		_fputc
 10223 ;; This function uses a non-reentrant model
 10224 ;;
 10225                           
 10226                           
 10227                           ;psect for function _putch
 10228  07FE                     _putch:
 10229  07FE                     l2115:	
 10230                           ;incstack = 0
 10231                           ; Regs used in _putch: [wreg]
 10232                           
 10233  07FE  0008               	return
 10234  07FF                     __end_of_putch:
 10235                           
 10236                           	psect	text11
 10237  1784                     __ptext11:	
 10238 ;; *************** function _abs *****************
 10239 ;; Defined at:
 10240 ;;		line 1 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
 10241 ;; Parameters:    Size  Location     Type
 10242 ;;  a               2   19[BANK0 ] int 
 10243 ;; Auto vars:     Size  Location     Type
 10244 ;;		None
 10245 ;; Return value:  Size  Location     Type
 10246 ;;                  2   19[BANK0 ] int 
 10247 ;; Registers used:
 10248 ;;		wreg, status,2, status,0
 10249 ;; Tracked objects:
 10250 ;;		On entry : 0/0
 10251 ;;		On exit  : 0/0
 10252 ;;		Unchanged: 0/0
 10253 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10254 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10256 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10257 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10258 ;;Total ram usage:        4 bytes
 10259 ;; Hardware stack levels used: 1
 10260 ;; Hardware stack levels required when called: 5
 10261 ;; This function calls:
 10262 ;;		Nothing
 10263 ;; This function is called by:
 10264 ;;		_dtoa
 10265 ;; This function uses a non-reentrant model
 10266 ;;
 10267                           
 10268                           
 10269                           ;psect for function _abs
 10270  1784                     _abs:
 10271  1784                     l4045:	
 10272                           ;incstack = 0
 10273                           ; Regs used in _abs: [wreg+status,2+status,0]
 10274                           
 10275  1784  0020               	movlb	0	; select bank0
 10276  1785  0834               	movf	abs@a+1,w
 10277  1786  3A80               	xorlw	128
 10278  1787  00B5               	movwf	??_abs
 10279  1788  3080               	movlw	128
 10280  1789  0235               	subwf	??_abs,w
 10281  178A  1D03               	skipz
 10282  178B  2F8E               	goto	u2445
 10283  178C  3001               	movlw	1
 10284  178D  0233               	subwf	abs@a,w
 10285  178E                     u2445:
 10286  178E  1803               	skipnc
 10287  178F  2F91               	goto	u2441
 10288  1790  2F92               	goto	u2440
 10289  1791                     u2441:
 10290  1791  2F9F               	goto	l2044
 10291  1792                     u2440:
 10292  1792                     l4047:
 10293  1792  0020               	movlb	0	; select bank0
 10294  1793  0933               	comf	abs@a,w
 10295  1794  00B5               	movwf	??_abs
 10296  1795  0934               	comf	abs@a+1,w
 10297  1796  00B6               	movwf	??_abs+1
 10298  1797  0AB5               	incf	??_abs,f
 10299  1798  1903               	skipnz
 10300  1799  0AB6               	incf	??_abs+1,f
 10301  179A  0835               	movf	??_abs,w
 10302  179B  00B3               	movwf	?_abs
 10303  179C  0836               	movf	??_abs+1,w
 10304  179D  00B4               	movwf	?_abs+1
 10305  179E  2F9F               	goto	l2047
 10306  179F                     l2044:
 10307  179F                     l2047:
 10308  179F  0008               	return
 10309  17A0                     __end_of_abs:
 10310                           
 10311                           	psect	text12
 10312  0E0E                     __ptext12:	
 10313 ;; *************** function ___aomod *****************
 10314 ;; Defined at:
 10315 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
 10316 ;; Parameters:    Size  Location     Type
 10317 ;;  divisor         8    0[BANK0 ] long long 
 10318 ;;  dividend        8    8[BANK0 ] long long 
 10319 ;; Auto vars:     Size  Location     Type
 10320 ;;  sign            1   18[BANK0 ] unsigned char 
 10321 ;;  counter         1   17[BANK0 ] unsigned char 
 10322 ;; Return value:  Size  Location     Type
 10323 ;;                  8    0[BANK0 ] long long 
 10324 ;; Registers used:
 10325 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10326 ;; Tracked objects:
 10327 ;;		On entry : 0/0
 10328 ;;		On exit  : 0/0
 10329 ;;		Unchanged: 0/0
 10330 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10331 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10332 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10333 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10334 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10335 ;;Total ram usage:       19 bytes
 10336 ;; Hardware stack levels used: 1
 10337 ;; Hardware stack levels required when called: 5
 10338 ;; This function calls:
 10339 ;;		Nothing
 10340 ;; This function is called by:
 10341 ;;		_dtoa
 10342 ;; This function uses a non-reentrant model
 10343 ;;
 10344                           
 10345                           
 10346                           ;psect for function ___aomod
 10347  0E0E                     ___aomod:
 10348  0E0E                     l5563:	
 10349                           ;incstack = 0
 10350                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
 10351                           
 10352  0E0E  0020               	movlb	0	; select bank0
 10353  0E0F  01B2               	clrf	___aomod@sign
 10354  0E10                     l5565:
 10355  0E10  3028               	movlw	low ___aomod@dividend
 10356  0E11  0086               	movwf	6
 10357  0E12  3000               	movlw	high ___aomod@dividend
 10358  0E13  0087               	movwf	7
 10359  0E14  3F47               	moviw [7]fsr1
 10360  0E15  00B0               	movwf	??___aomod
 10361  0E16  1FB0               	btfss	??___aomod,7
 10362  0E17  2E19               	goto	u4341
 10363  0E18  2E1A               	goto	u4340
 10364  0E19                     u4341:
 10365  0E19  2E3C               	goto	l5569
 10366  0E1A                     u4340:
 10367  0E1A                     l5567:
 10368  0E1A  0020               	movlb	0	; select bank0
 10369  0E1B  09A8               	comf	___aomod@dividend,f
 10370  0E1C  09A9               	comf	___aomod@dividend+1,f
 10371  0E1D  09AA               	comf	___aomod@dividend+2,f
 10372  0E1E  09AB               	comf	___aomod@dividend+3,f
 10373  0E1F  09AC               	comf	___aomod@dividend+4,f
 10374  0E20  09AD               	comf	___aomod@dividend+5,f
 10375  0E21  09AE               	comf	___aomod@dividend+6,f
 10376  0E22  09AF               	comf	___aomod@dividend+7,f
 10377  0E23  0AA8               	incf	___aomod@dividend,f
 10378  0E24  1D03               	skipz
 10379  0E25  2E39               	goto	u435lld
 10380  0E26  0AA9               	incf	___aomod@dividend+1,f
 10381  0E27  1D03               	skipz
 10382  0E28  2E39               	goto	u435lld
 10383  0E29  0AAA               	incf	___aomod@dividend+2,f
 10384  0E2A  1D03               	skipz
 10385  0E2B  2E39               	goto	u435lld
 10386  0E2C  0AAB               	incf	___aomod@dividend+3,f
 10387  0E2D  1D03               	skipz
 10388  0E2E  2E39               	goto	u435lld
 10389  0E2F  0AAC               	incf	___aomod@dividend+4,f
 10390  0E30  1D03               	skipz
 10391  0E31  2E39               	goto	u435lld
 10392  0E32  0AAD               	incf	___aomod@dividend+5,f
 10393  0E33  1D03               	skipz
 10394  0E34  2E39               	goto	u435lld
 10395  0E35  0AAE               	incf	___aomod@dividend+6,f
 10396  0E36  1D03               	skipz
 10397  0E37  2E39               	goto	u435lld
 10398  0E38  0AAF               	incf	___aomod@dividend+7,f
 10399  0E39                     u435lld:
 10400  0E39  0020               	movlb	0	; select bank0
 10401  0E3A  01B2               	clrf	___aomod@sign
 10402  0E3B  0AB2               	incf	___aomod@sign,f
 10403  0E3C                     l5569:
 10404  0E3C  3020               	movlw	low ___aomod@divisor
 10405  0E3D  0086               	movwf	6
 10406  0E3E  3000               	movlw	high ___aomod@divisor
 10407  0E3F  0087               	movwf	7
 10408  0E40  3F47               	moviw [7]fsr1
 10409  0E41  0020               	movlb	0	; select bank0
 10410  0E42  00B0               	movwf	??___aomod
 10411  0E43  1FB0               	btfss	??___aomod,7
 10412  0E44  2E46               	goto	u4361
 10413  0E45  2E47               	goto	u4360
 10414  0E46                     u4361:
 10415  0E46  2E66               	goto	l5573
 10416  0E47                     u4360:
 10417  0E47                     l5571:
 10418  0E47  0020               	movlb	0	; select bank0
 10419  0E48  09A0               	comf	___aomod@divisor,f
 10420  0E49  09A1               	comf	___aomod@divisor+1,f
 10421  0E4A  09A2               	comf	___aomod@divisor+2,f
 10422  0E4B  09A3               	comf	___aomod@divisor+3,f
 10423  0E4C  09A4               	comf	___aomod@divisor+4,f
 10424  0E4D  09A5               	comf	___aomod@divisor+5,f
 10425  0E4E  09A6               	comf	___aomod@divisor+6,f
 10426  0E4F  09A7               	comf	___aomod@divisor+7,f
 10427  0E50  0AA0               	incf	___aomod@divisor,f
 10428  0E51  1D03               	skipz
 10429  0E52  2E66               	goto	u437lld
 10430  0E53  0AA1               	incf	___aomod@divisor+1,f
 10431  0E54  1D03               	skipz
 10432  0E55  2E66               	goto	u437lld
 10433  0E56  0AA2               	incf	___aomod@divisor+2,f
 10434  0E57  1D03               	skipz
 10435  0E58  2E66               	goto	u437lld
 10436  0E59  0AA3               	incf	___aomod@divisor+3,f
 10437  0E5A  1D03               	skipz
 10438  0E5B  2E66               	goto	u437lld
 10439  0E5C  0AA4               	incf	___aomod@divisor+4,f
 10440  0E5D  1D03               	skipz
 10441  0E5E  2E66               	goto	u437lld
 10442  0E5F  0AA5               	incf	___aomod@divisor+5,f
 10443  0E60  1D03               	skipz
 10444  0E61  2E66               	goto	u437lld
 10445  0E62  0AA6               	incf	___aomod@divisor+6,f
 10446  0E63  1D03               	skipz
 10447  0E64  2E66               	goto	u437lld
 10448  0E65  0AA7               	incf	___aomod@divisor+7,f
 10449  0E66                     u437lld:
 10450  0E66                     l5573:
 10451  0E66  0020               	movlb	0	; select bank0
 10452  0E67  0820               	movf	___aomod@divisor,w
 10453  0E68  0421               	iorwf	___aomod@divisor+1,w
 10454  0E69  0422               	iorwf	___aomod@divisor+2,w
 10455  0E6A  0423               	iorwf	___aomod@divisor+3,w
 10456  0E6B  0424               	iorwf	___aomod@divisor+4,w
 10457  0E6C  0425               	iorwf	___aomod@divisor+5,w
 10458  0E6D  0426               	iorwf	___aomod@divisor+6,w
 10459  0E6E  0427               	iorwf	___aomod@divisor+7,w
 10460  0E6F  1903               	skipnz
 10461  0E70  2E72               	goto	u4381
 10462  0E71  2E73               	goto	u4380
 10463  0E72                     u4381:
 10464  0E72  2EC6               	goto	l5589
 10465  0E73                     u4380:
 10466  0E73                     l5575:
 10467  0E73  01B1               	clrf	___aomod@counter
 10468  0E74  0AB1               	incf	___aomod@counter,f
 10469  0E75  2E82               	goto	l5581
 10470  0E76                     l5577:
 10471  0E76  35A0               	lslf	___aomod@divisor,f
 10472  0E77  0DA1               	rlf	___aomod@divisor+1,f
 10473  0E78  0DA2               	rlf	___aomod@divisor+2,f
 10474  0E79  0DA3               	rlf	___aomod@divisor+3,f
 10475  0E7A  0DA4               	rlf	___aomod@divisor+4,f
 10476  0E7B  0DA5               	rlf	___aomod@divisor+5,f
 10477  0E7C  0DA6               	rlf	___aomod@divisor+6,f
 10478  0E7D  0DA7               	rlf	___aomod@divisor+7,f
 10479  0E7E                     l5579:
 10480  0E7E  3001               	movlw	1
 10481  0E7F  00B0               	movwf	??___aomod
 10482  0E80  0830               	movf	??___aomod,w
 10483  0E81  07B1               	addwf	___aomod@counter,f
 10484  0E82                     l5581:
 10485  0E82  1FA7               	btfss	___aomod@divisor+7,7
 10486  0E83  2E85               	goto	u4391
 10487  0E84  2E86               	goto	u4390
 10488  0E85                     u4391:
 10489  0E85  2E76               	goto	l5577
 10490  0E86                     u4390:
 10491  0E86                     l5583:
 10492  0E86  0827               	movf	___aomod@divisor+7,w
 10493  0E87  022F               	subwf	___aomod@dividend+7,w
 10494  0E88  1D03               	skipz
 10495  0E89  2EA4               	goto	u4405
 10496  0E8A  0826               	movf	___aomod@divisor+6,w
 10497  0E8B  022E               	subwf	___aomod@dividend+6,w
 10498  0E8C  1D03               	skipz
 10499  0E8D  2EA4               	goto	u4405
 10500  0E8E  0825               	movf	___aomod@divisor+5,w
 10501  0E8F  022D               	subwf	___aomod@dividend+5,w
 10502  0E90  1D03               	skipz
 10503  0E91  2EA4               	goto	u4405
 10504  0E92  0824               	movf	___aomod@divisor+4,w
 10505  0E93  022C               	subwf	___aomod@dividend+4,w
 10506  0E94  1D03               	skipz
 10507  0E95  2EA4               	goto	u4405
 10508  0E96  0823               	movf	___aomod@divisor+3,w
 10509  0E97  022B               	subwf	___aomod@dividend+3,w
 10510  0E98  1D03               	skipz
 10511  0E99  2EA4               	goto	u4405
 10512  0E9A  0822               	movf	___aomod@divisor+2,w
 10513  0E9B  022A               	subwf	___aomod@dividend+2,w
 10514  0E9C  1D03               	skipz
 10515  0E9D  2EA4               	goto	u4405
 10516  0E9E  0821               	movf	___aomod@divisor+1,w
 10517  0E9F  0229               	subwf	___aomod@dividend+1,w
 10518  0EA0  1D03               	skipz
 10519  0EA1  2EA4               	goto	u4405
 10520  0EA2  0820               	movf	___aomod@divisor,w
 10521  0EA3  0228               	subwf	___aomod@dividend,w
 10522  0EA4                     u4405:
 10523  0EA4  1C03               	skipc
 10524  0EA5  2EA7               	goto	u4401
 10525  0EA6  2EA8               	goto	u4400
 10526  0EA7                     u4401:
 10527  0EA7  2EB8               	goto	l5587
 10528  0EA8                     u4400:
 10529  0EA8                     l5585:
 10530  0EA8  0820               	movf	___aomod@divisor,w
 10531  0EA9  02A8               	subwf	___aomod@dividend,f
 10532  0EAA  0821               	movf	___aomod@divisor+1,w
 10533  0EAB  3BA9               	subwfb	___aomod@dividend+1,f
 10534  0EAC  0822               	movf	___aomod@divisor+2,w
 10535  0EAD  3BAA               	subwfb	___aomod@dividend+2,f
 10536  0EAE  0823               	movf	___aomod@divisor+3,w
 10537  0EAF  3BAB               	subwfb	___aomod@dividend+3,f
 10538  0EB0  0824               	movf	___aomod@divisor+4,w
 10539  0EB1  3BAC               	subwfb	___aomod@dividend+4,f
 10540  0EB2  0825               	movf	___aomod@divisor+5,w
 10541  0EB3  3BAD               	subwfb	___aomod@dividend+5,f
 10542  0EB4  0826               	movf	___aomod@divisor+6,w
 10543  0EB5  3BAE               	subwfb	___aomod@dividend+6,f
 10544  0EB6  0827               	movf	___aomod@divisor+7,w
 10545  0EB7  3BAF               	subwfb	___aomod@dividend+7,f
 10546  0EB8                     l5587:
 10547  0EB8  36A7               	lsrf	___aomod@divisor+7,f
 10548  0EB9  0CA6               	rrf	___aomod@divisor+6,f
 10549  0EBA  0CA5               	rrf	___aomod@divisor+5,f
 10550  0EBB  0CA4               	rrf	___aomod@divisor+4,f
 10551  0EBC  0CA3               	rrf	___aomod@divisor+3,f
 10552  0EBD  0CA2               	rrf	___aomod@divisor+2,f
 10553  0EBE  0CA1               	rrf	___aomod@divisor+1,f
 10554  0EBF  0CA0               	rrf	___aomod@divisor,f
 10555  0EC0  3001               	movlw	1
 10556  0EC1  02B1               	subwf	___aomod@counter,f
 10557  0EC2  1D03               	btfss	3,2
 10558  0EC3  2EC5               	goto	u4411
 10559  0EC4  2EC6               	goto	u4410
 10560  0EC5                     u4411:
 10561  0EC5  2E86               	goto	l5583
 10562  0EC6                     u4410:
 10563  0EC6                     l5589:
 10564  0EC6  0832               	movf	___aomod@sign,w
 10565  0EC7  1903               	btfsc	3,2
 10566  0EC8  2ECA               	goto	u4421
 10567  0EC9  2ECB               	goto	u4420
 10568  0ECA                     u4421:
 10569  0ECA  2EE9               	goto	l1592
 10570  0ECB                     u4420:
 10571  0ECB                     l5591:
 10572  0ECB  09A8               	comf	___aomod@dividend,f
 10573  0ECC  09A9               	comf	___aomod@dividend+1,f
 10574  0ECD  09AA               	comf	___aomod@dividend+2,f
 10575  0ECE  09AB               	comf	___aomod@dividend+3,f
 10576  0ECF  09AC               	comf	___aomod@dividend+4,f
 10577  0ED0  09AD               	comf	___aomod@dividend+5,f
 10578  0ED1  09AE               	comf	___aomod@dividend+6,f
 10579  0ED2  09AF               	comf	___aomod@dividend+7,f
 10580  0ED3  0AA8               	incf	___aomod@dividend,f
 10581  0ED4  1D03               	skipz
 10582  0ED5  2EE9               	goto	u443lld
 10583  0ED6  0AA9               	incf	___aomod@dividend+1,f
 10584  0ED7  1D03               	skipz
 10585  0ED8  2EE9               	goto	u443lld
 10586  0ED9  0AAA               	incf	___aomod@dividend+2,f
 10587  0EDA  1D03               	skipz
 10588  0EDB  2EE9               	goto	u443lld
 10589  0EDC  0AAB               	incf	___aomod@dividend+3,f
 10590  0EDD  1D03               	skipz
 10591  0EDE  2EE9               	goto	u443lld
 10592  0EDF  0AAC               	incf	___aomod@dividend+4,f
 10593  0EE0  1D03               	skipz
 10594  0EE1  2EE9               	goto	u443lld
 10595  0EE2  0AAD               	incf	___aomod@dividend+5,f
 10596  0EE3  1D03               	skipz
 10597  0EE4  2EE9               	goto	u443lld
 10598  0EE5  0AAE               	incf	___aomod@dividend+6,f
 10599  0EE6  1D03               	skipz
 10600  0EE7  2EE9               	goto	u443lld
 10601  0EE8  0AAF               	incf	___aomod@dividend+7,f
 10602  0EE9                     u443lld:
 10603  0EE9                     l1592:
 10604  0EE9  0020               	movlb	0	; select bank0
 10605  0EEA  0828               	movf	___aomod@dividend,w
 10606  0EEB  00A0               	movwf	?___aomod
 10607  0EEC  0829               	movf	___aomod@dividend+1,w
 10608  0EED  00A1               	movwf	?___aomod+1
 10609  0EEE  082A               	movf	___aomod@dividend+2,w
 10610  0EEF  00A2               	movwf	?___aomod+2
 10611  0EF0  082B               	movf	___aomod@dividend+3,w
 10612  0EF1  00A3               	movwf	?___aomod+3
 10613  0EF2  082C               	movf	___aomod@dividend+4,w
 10614  0EF3  00A4               	movwf	?___aomod+4
 10615  0EF4  082D               	movf	___aomod@dividend+5,w
 10616  0EF5  00A5               	movwf	?___aomod+5
 10617  0EF6  082E               	movf	___aomod@dividend+6,w
 10618  0EF7  00A6               	movwf	?___aomod+6
 10619  0EF8  082F               	movf	___aomod@dividend+7,w
 10620  0EF9  00A7               	movwf	?___aomod+7
 10621  0EFA                     l1593:
 10622  0EFA  0008               	return
 10623  0EFB                     __end_of___aomod:
 10624                           
 10625                           	psect	text13
 10626  0EFB                     __ptext13:	
 10627 ;; *************** function ___aodiv *****************
 10628 ;; Defined at:
 10629 ;;		line 7 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
 10630 ;; Parameters:    Size  Location     Type
 10631 ;;  divisor         8    0[BANK0 ] long long 
 10632 ;;  dividend        8    8[BANK0 ] long long 
 10633 ;; Auto vars:     Size  Location     Type
 10634 ;;  quotient        8   19[BANK0 ] long long 
 10635 ;;  sign            1   18[BANK0 ] unsigned char 
 10636 ;;  counter         1   17[BANK0 ] unsigned char 
 10637 ;; Return value:  Size  Location     Type
 10638 ;;                  8    0[BANK0 ] long long 
 10639 ;; Registers used:
 10640 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10641 ;; Tracked objects:
 10642 ;;		On entry : 0/0
 10643 ;;		On exit  : 0/0
 10644 ;;		Unchanged: 0/0
 10645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10646 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10647 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10648 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10649 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10650 ;;Total ram usage:       27 bytes
 10651 ;; Hardware stack levels used: 1
 10652 ;; Hardware stack levels required when called: 5
 10653 ;; This function calls:
 10654 ;;		Nothing
 10655 ;; This function is called by:
 10656 ;;		_dtoa
 10657 ;; This function uses a non-reentrant model
 10658 ;;
 10659                           
 10660                           
 10661                           ;psect for function ___aodiv
 10662  0EFB                     ___aodiv:
 10663  0EFB                     l5525:	
 10664                           ;incstack = 0
 10665                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
 10666                           
 10667  0EFB  0020               	movlb	0	; select bank0
 10668  0EFC  01B2               	clrf	___aodiv@sign
 10669  0EFD                     l5527:
 10670  0EFD  3020               	movlw	low ___aodiv@divisor
 10671  0EFE  0086               	movwf	6
 10672  0EFF  3000               	movlw	high ___aodiv@divisor
 10673  0F00  0087               	movwf	7
 10674  0F01  3F47               	moviw [7]fsr1
 10675  0F02  00B0               	movwf	??___aodiv
 10676  0F03  1FB0               	btfss	??___aodiv,7
 10677  0F04  2F06               	goto	u4231
 10678  0F05  2F07               	goto	u4230
 10679  0F06                     u4231:
 10680  0F06  2F29               	goto	l5531
 10681  0F07                     u4230:
 10682  0F07                     l5529:
 10683  0F07  0020               	movlb	0	; select bank0
 10684  0F08  09A0               	comf	___aodiv@divisor,f
 10685  0F09  09A1               	comf	___aodiv@divisor+1,f
 10686  0F0A  09A2               	comf	___aodiv@divisor+2,f
 10687  0F0B  09A3               	comf	___aodiv@divisor+3,f
 10688  0F0C  09A4               	comf	___aodiv@divisor+4,f
 10689  0F0D  09A5               	comf	___aodiv@divisor+5,f
 10690  0F0E  09A6               	comf	___aodiv@divisor+6,f
 10691  0F0F  09A7               	comf	___aodiv@divisor+7,f
 10692  0F10  0AA0               	incf	___aodiv@divisor,f
 10693  0F11  1D03               	skipz
 10694  0F12  2F26               	goto	u424lld
 10695  0F13  0AA1               	incf	___aodiv@divisor+1,f
 10696  0F14  1D03               	skipz
 10697  0F15  2F26               	goto	u424lld
 10698  0F16  0AA2               	incf	___aodiv@divisor+2,f
 10699  0F17  1D03               	skipz
 10700  0F18  2F26               	goto	u424lld
 10701  0F19  0AA3               	incf	___aodiv@divisor+3,f
 10702  0F1A  1D03               	skipz
 10703  0F1B  2F26               	goto	u424lld
 10704  0F1C  0AA4               	incf	___aodiv@divisor+4,f
 10705  0F1D  1D03               	skipz
 10706  0F1E  2F26               	goto	u424lld
 10707  0F1F  0AA5               	incf	___aodiv@divisor+5,f
 10708  0F20  1D03               	skipz
 10709  0F21  2F26               	goto	u424lld
 10710  0F22  0AA6               	incf	___aodiv@divisor+6,f
 10711  0F23  1D03               	skipz
 10712  0F24  2F26               	goto	u424lld
 10713  0F25  0AA7               	incf	___aodiv@divisor+7,f
 10714  0F26                     u424lld:
 10715  0F26  0020               	movlb	0	; select bank0
 10716  0F27  01B2               	clrf	___aodiv@sign
 10717  0F28  0AB2               	incf	___aodiv@sign,f
 10718  0F29                     l5531:
 10719  0F29  3028               	movlw	low ___aodiv@dividend
 10720  0F2A  0086               	movwf	6
 10721  0F2B  3000               	movlw	high ___aodiv@dividend
 10722  0F2C  0087               	movwf	7
 10723  0F2D  3F47               	moviw [7]fsr1
 10724  0F2E  0020               	movlb	0	; select bank0
 10725  0F2F  00B0               	movwf	??___aodiv
 10726  0F30  1FB0               	btfss	??___aodiv,7
 10727  0F31  2F33               	goto	u4251
 10728  0F32  2F34               	goto	u4250
 10729  0F33                     u4251:
 10730  0F33  2F58               	goto	l5537
 10731  0F34                     u4250:
 10732  0F34                     l5533:
 10733  0F34  0020               	movlb	0	; select bank0
 10734  0F35  09A8               	comf	___aodiv@dividend,f
 10735  0F36  09A9               	comf	___aodiv@dividend+1,f
 10736  0F37  09AA               	comf	___aodiv@dividend+2,f
 10737  0F38  09AB               	comf	___aodiv@dividend+3,f
 10738  0F39  09AC               	comf	___aodiv@dividend+4,f
 10739  0F3A  09AD               	comf	___aodiv@dividend+5,f
 10740  0F3B  09AE               	comf	___aodiv@dividend+6,f
 10741  0F3C  09AF               	comf	___aodiv@dividend+7,f
 10742  0F3D  0AA8               	incf	___aodiv@dividend,f
 10743  0F3E  1D03               	skipz
 10744  0F3F  2F53               	goto	u426lld
 10745  0F40  0AA9               	incf	___aodiv@dividend+1,f
 10746  0F41  1D03               	skipz
 10747  0F42  2F53               	goto	u426lld
 10748  0F43  0AAA               	incf	___aodiv@dividend+2,f
 10749  0F44  1D03               	skipz
 10750  0F45  2F53               	goto	u426lld
 10751  0F46  0AAB               	incf	___aodiv@dividend+3,f
 10752  0F47  1D03               	skipz
 10753  0F48  2F53               	goto	u426lld
 10754  0F49  0AAC               	incf	___aodiv@dividend+4,f
 10755  0F4A  1D03               	skipz
 10756  0F4B  2F53               	goto	u426lld
 10757  0F4C  0AAD               	incf	___aodiv@dividend+5,f
 10758  0F4D  1D03               	skipz
 10759  0F4E  2F53               	goto	u426lld
 10760  0F4F  0AAE               	incf	___aodiv@dividend+6,f
 10761  0F50  1D03               	skipz
 10762  0F51  2F53               	goto	u426lld
 10763  0F52  0AAF               	incf	___aodiv@dividend+7,f
 10764  0F53                     u426lld:
 10765  0F53                     l5535:
 10766  0F53  3001               	movlw	1
 10767  0F54  0020               	movlb	0	; select bank0
 10768  0F55  00B0               	movwf	??___aodiv
 10769  0F56  0830               	movf	??___aodiv,w
 10770  0F57  06B2               	xorwf	___aodiv@sign,f
 10771  0F58                     l5537:
 10772  0F58  3033               	movlw	low ___aodiv@quotient
 10773  0F59  0086               	movwf	6
 10774  0F5A  3000               	movlw	high ___aodiv@quotient
 10775  0F5B  0087               	movwf	7
 10776  0F5C  3008               	movlw	8
 10777  0F5D  0020               	movlb	0	; select bank0
 10778  0F5E  00B0               	movwf	??___aodiv
 10779  0F5F  3000               	movlw	0
 10780  0F60                     u4270:
 10781  0F60  001E               	movwi fsr1++
 10782  0F61  0BB0               	decfsz	??___aodiv,f
 10783  0F62  2F60               	goto	u4270
 10784  0F63                     l5539:
 10785  0F63  0820               	movf	___aodiv@divisor,w
 10786  0F64  0421               	iorwf	___aodiv@divisor+1,w
 10787  0F65  0422               	iorwf	___aodiv@divisor+2,w
 10788  0F66  0423               	iorwf	___aodiv@divisor+3,w
 10789  0F67  0424               	iorwf	___aodiv@divisor+4,w
 10790  0F68  0425               	iorwf	___aodiv@divisor+5,w
 10791  0F69  0426               	iorwf	___aodiv@divisor+6,w
 10792  0F6A  0427               	iorwf	___aodiv@divisor+7,w
 10793  0F6B  1903               	skipnz
 10794  0F6C  2F6E               	goto	u4281
 10795  0F6D  2F6F               	goto	u4280
 10796  0F6E                     u4281:
 10797  0F6E  2FCB               	goto	l5559
 10798  0F6F                     u4280:
 10799  0F6F                     l5541:
 10800  0F6F  01B1               	clrf	___aodiv@counter
 10801  0F70  0AB1               	incf	___aodiv@counter,f
 10802  0F71  2F7E               	goto	l5547
 10803  0F72                     l5543:
 10804  0F72  35A0               	lslf	___aodiv@divisor,f
 10805  0F73  0DA1               	rlf	___aodiv@divisor+1,f
 10806  0F74  0DA2               	rlf	___aodiv@divisor+2,f
 10807  0F75  0DA3               	rlf	___aodiv@divisor+3,f
 10808  0F76  0DA4               	rlf	___aodiv@divisor+4,f
 10809  0F77  0DA5               	rlf	___aodiv@divisor+5,f
 10810  0F78  0DA6               	rlf	___aodiv@divisor+6,f
 10811  0F79  0DA7               	rlf	___aodiv@divisor+7,f
 10812  0F7A                     l5545:
 10813  0F7A  3001               	movlw	1
 10814  0F7B  00B0               	movwf	??___aodiv
 10815  0F7C  0830               	movf	??___aodiv,w
 10816  0F7D  07B1               	addwf	___aodiv@counter,f
 10817  0F7E                     l5547:
 10818  0F7E  1FA7               	btfss	___aodiv@divisor+7,7
 10819  0F7F  2F81               	goto	u4291
 10820  0F80  2F82               	goto	u4290
 10821  0F81                     u4291:
 10822  0F81  2F72               	goto	l5543
 10823  0F82                     u4290:
 10824  0F82                     l5549:
 10825  0F82  35B3               	lslf	___aodiv@quotient,f
 10826  0F83  0DB4               	rlf	___aodiv@quotient+1,f
 10827  0F84  0DB5               	rlf	___aodiv@quotient+2,f
 10828  0F85  0DB6               	rlf	___aodiv@quotient+3,f
 10829  0F86  0DB7               	rlf	___aodiv@quotient+4,f
 10830  0F87  0DB8               	rlf	___aodiv@quotient+5,f
 10831  0F88  0DB9               	rlf	___aodiv@quotient+6,f
 10832  0F89  0DBA               	rlf	___aodiv@quotient+7,f
 10833  0F8A                     l5551:
 10834  0F8A  0827               	movf	___aodiv@divisor+7,w
 10835  0F8B  022F               	subwf	___aodiv@dividend+7,w
 10836  0F8C  1D03               	skipz
 10837  0F8D  2FA8               	goto	u4305
 10838  0F8E  0826               	movf	___aodiv@divisor+6,w
 10839  0F8F  022E               	subwf	___aodiv@dividend+6,w
 10840  0F90  1D03               	skipz
 10841  0F91  2FA8               	goto	u4305
 10842  0F92  0825               	movf	___aodiv@divisor+5,w
 10843  0F93  022D               	subwf	___aodiv@dividend+5,w
 10844  0F94  1D03               	skipz
 10845  0F95  2FA8               	goto	u4305
 10846  0F96  0824               	movf	___aodiv@divisor+4,w
 10847  0F97  022C               	subwf	___aodiv@dividend+4,w
 10848  0F98  1D03               	skipz
 10849  0F99  2FA8               	goto	u4305
 10850  0F9A  0823               	movf	___aodiv@divisor+3,w
 10851  0F9B  022B               	subwf	___aodiv@dividend+3,w
 10852  0F9C  1D03               	skipz
 10853  0F9D  2FA8               	goto	u4305
 10854  0F9E  0822               	movf	___aodiv@divisor+2,w
 10855  0F9F  022A               	subwf	___aodiv@dividend+2,w
 10856  0FA0  1D03               	skipz
 10857  0FA1  2FA8               	goto	u4305
 10858  0FA2  0821               	movf	___aodiv@divisor+1,w
 10859  0FA3  0229               	subwf	___aodiv@dividend+1,w
 10860  0FA4  1D03               	skipz
 10861  0FA5  2FA8               	goto	u4305
 10862  0FA6  0820               	movf	___aodiv@divisor,w
 10863  0FA7  0228               	subwf	___aodiv@dividend,w
 10864  0FA8                     u4305:
 10865  0FA8  1C03               	skipc
 10866  0FA9  2FAB               	goto	u4301
 10867  0FAA  2FAC               	goto	u4300
 10868  0FAB                     u4301:
 10869  0FAB  2FBD               	goto	l5557
 10870  0FAC                     u4300:
 10871  0FAC                     l5553:
 10872  0FAC  0820               	movf	___aodiv@divisor,w
 10873  0FAD  02A8               	subwf	___aodiv@dividend,f
 10874  0FAE  0821               	movf	___aodiv@divisor+1,w
 10875  0FAF  3BA9               	subwfb	___aodiv@dividend+1,f
 10876  0FB0  0822               	movf	___aodiv@divisor+2,w
 10877  0FB1  3BAA               	subwfb	___aodiv@dividend+2,f
 10878  0FB2  0823               	movf	___aodiv@divisor+3,w
 10879  0FB3  3BAB               	subwfb	___aodiv@dividend+3,f
 10880  0FB4  0824               	movf	___aodiv@divisor+4,w
 10881  0FB5  3BAC               	subwfb	___aodiv@dividend+4,f
 10882  0FB6  0825               	movf	___aodiv@divisor+5,w
 10883  0FB7  3BAD               	subwfb	___aodiv@dividend+5,f
 10884  0FB8  0826               	movf	___aodiv@divisor+6,w
 10885  0FB9  3BAE               	subwfb	___aodiv@dividend+6,f
 10886  0FBA  0827               	movf	___aodiv@divisor+7,w
 10887  0FBB  3BAF               	subwfb	___aodiv@dividend+7,f
 10888  0FBC                     l5555:
 10889  0FBC  1433               	bsf	___aodiv@quotient,0
 10890  0FBD                     l5557:
 10891  0FBD  36A7               	lsrf	___aodiv@divisor+7,f
 10892  0FBE  0CA6               	rrf	___aodiv@divisor+6,f
 10893  0FBF  0CA5               	rrf	___aodiv@divisor+5,f
 10894  0FC0  0CA4               	rrf	___aodiv@divisor+4,f
 10895  0FC1  0CA3               	rrf	___aodiv@divisor+3,f
 10896  0FC2  0CA2               	rrf	___aodiv@divisor+2,f
 10897  0FC3  0CA1               	rrf	___aodiv@divisor+1,f
 10898  0FC4  0CA0               	rrf	___aodiv@divisor,f
 10899  0FC5  3001               	movlw	1
 10900  0FC6  02B1               	subwf	___aodiv@counter,f
 10901  0FC7  1D03               	btfss	3,2
 10902  0FC8  2FCA               	goto	u4311
 10903  0FC9  2FCB               	goto	u4310
 10904  0FCA                     u4311:
 10905  0FCA  2F82               	goto	l5549
 10906  0FCB                     u4310:
 10907  0FCB                     l5559:
 10908  0FCB  0832               	movf	___aodiv@sign,w
 10909  0FCC  1903               	btfsc	3,2
 10910  0FCD  2FCF               	goto	u4321
 10911  0FCE  2FD0               	goto	u4320
 10912  0FCF                     u4321:
 10913  0FCF  2FEE               	goto	l1579
 10914  0FD0                     u4320:
 10915  0FD0                     l5561:
 10916  0FD0  09B3               	comf	___aodiv@quotient,f
 10917  0FD1  09B4               	comf	___aodiv@quotient+1,f
 10918  0FD2  09B5               	comf	___aodiv@quotient+2,f
 10919  0FD3  09B6               	comf	___aodiv@quotient+3,f
 10920  0FD4  09B7               	comf	___aodiv@quotient+4,f
 10921  0FD5  09B8               	comf	___aodiv@quotient+5,f
 10922  0FD6  09B9               	comf	___aodiv@quotient+6,f
 10923  0FD7  09BA               	comf	___aodiv@quotient+7,f
 10924  0FD8  0AB3               	incf	___aodiv@quotient,f
 10925  0FD9  1D03               	skipz
 10926  0FDA  2FEE               	goto	u433lld
 10927  0FDB  0AB4               	incf	___aodiv@quotient+1,f
 10928  0FDC  1D03               	skipz
 10929  0FDD  2FEE               	goto	u433lld
 10930  0FDE  0AB5               	incf	___aodiv@quotient+2,f
 10931  0FDF  1D03               	skipz
 10932  0FE0  2FEE               	goto	u433lld
 10933  0FE1  0AB6               	incf	___aodiv@quotient+3,f
 10934  0FE2  1D03               	skipz
 10935  0FE3  2FEE               	goto	u433lld
 10936  0FE4  0AB7               	incf	___aodiv@quotient+4,f
 10937  0FE5  1D03               	skipz
 10938  0FE6  2FEE               	goto	u433lld
 10939  0FE7  0AB8               	incf	___aodiv@quotient+5,f
 10940  0FE8  1D03               	skipz
 10941  0FE9  2FEE               	goto	u433lld
 10942  0FEA  0AB9               	incf	___aodiv@quotient+6,f
 10943  0FEB  1D03               	skipz
 10944  0FEC  2FEE               	goto	u433lld
 10945  0FED  0ABA               	incf	___aodiv@quotient+7,f
 10946  0FEE                     u433lld:
 10947  0FEE                     l1579:
 10948  0FEE  0020               	movlb	0	; select bank0
 10949  0FEF  0833               	movf	___aodiv@quotient,w
 10950  0FF0  00A0               	movwf	?___aodiv
 10951  0FF1  0834               	movf	___aodiv@quotient+1,w
 10952  0FF2  00A1               	movwf	?___aodiv+1
 10953  0FF3  0835               	movf	___aodiv@quotient+2,w
 10954  0FF4  00A2               	movwf	?___aodiv+2
 10955  0FF5  0836               	movf	___aodiv@quotient+3,w
 10956  0FF6  00A3               	movwf	?___aodiv+3
 10957  0FF7  0837               	movf	___aodiv@quotient+4,w
 10958  0FF8  00A4               	movwf	?___aodiv+4
 10959  0FF9  0838               	movf	___aodiv@quotient+5,w
 10960  0FFA  00A5               	movwf	?___aodiv+5
 10961  0FFB  0839               	movf	___aodiv@quotient+6,w
 10962  0FFC  00A6               	movwf	?___aodiv+6
 10963  0FFD  083A               	movf	___aodiv@quotient+7,w
 10964  0FFE  00A7               	movwf	?___aodiv+7
 10965  0FFF                     l1580:
 10966  0FFF  0008               	return
 10967  1000                     __end_of___aodiv:
 10968                           
 10969                           	psect	text14
 10970  0C88                     __ptext14:	
 10971 ;; *************** function _atoi *****************
 10972 ;; Defined at:
 10973 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
 10974 ;; Parameters:    Size  Location     Type
 10975 ;;  s               2    6[BANK0 ] PTR const unsigned char 
 10976 ;;		 -> STR_3(7), 
 10977 ;; Auto vars:     Size  Location     Type
 10978 ;;  n               2   19[BANK0 ] int 
 10979 ;;  neg             2   12[BANK0 ] int 
 10980 ;; Return value:  Size  Location     Type
 10981 ;;                  2    6[BANK0 ] int 
 10982 ;; Registers used:
 10983 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10984 ;; Tracked objects:
 10985 ;;		On entry : 0/0
 10986 ;;		On exit  : 0/0
 10987 ;;		Unchanged: 0/0
 10988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10989 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10990 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10991 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10992 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10993 ;;Total ram usage:       15 bytes
 10994 ;; Hardware stack levels used: 1
 10995 ;; Hardware stack levels required when called: 6
 10996 ;; This function calls:
 10997 ;;		___wmul
 10998 ;;		_isdigit
 10999 ;;		_isspace
 11000 ;; This function is called by:
 11001 ;;		_vfpfcnvrt
 11002 ;; This function uses a non-reentrant model
 11003 ;;
 11004                           
 11005                           
 11006                           ;psect for function _atoi
 11007  0C88                     _atoi:
 11008  0C88                     l5719:	
 11009                           ;incstack = 0
 11010                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11011                           
 11012  0C88  0020               	movlb	0	; select bank0
 11013  0C89  01B3               	clrf	atoi@n
 11014  0C8A  01B4               	clrf	atoi@n+1
 11015  0C8B  01AC               	clrf	atoi@neg
 11016  0C8C  01AD               	clrf	atoi@neg+1
 11017  0C8D  2C92               	goto	l5723
 11018  0C8E                     l5721:
 11019  0C8E  3001               	movlw	1
 11020  0C8F  07A6               	addwf	atoi@s,f
 11021  0C90  3000               	movlw	0
 11022  0C91  3DA7               	addwfc	atoi@s+1,f
 11023  0C92                     l5723:
 11024  0C92  01B2               	clrf	_atoi$2939
 11025  0C93  0AB2               	incf	_atoi$2939,f
 11026  0C94                     l5725:
 11027  0C94  0826               	movf	atoi@s,w
 11028  0C95  0084               	movwf	4
 11029  0C96  0827               	movf	atoi@s+1,w
 11030  0C97  0085               	movwf	5
 11031  0C98  0012               	moviw fsr0++
 11032  0C99  3A20               	xorlw	32
 11033  0C9A  1903               	btfsc	3,2
 11034  0C9B  2C9D               	goto	u4771
 11035  0C9C  2C9E               	goto	u4770
 11036  0C9D                     u4771:
 11037  0C9D  2CB3               	goto	l5731
 11038  0C9E                     u4770:
 11039  0C9E                     l5727:
 11040  0C9E  0826               	movf	atoi@s,w
 11041  0C9F  0084               	movwf	4
 11042  0CA0  0827               	movf	atoi@s+1,w
 11043  0CA1  0085               	movwf	5
 11044  0CA2  0800               	movf	0,w	;code access
 11045  0CA3  3EF7               	addlw	247
 11046  0CA4  00A8               	movwf	??_atoi
 11047  0CA5  30FF               	movlw	255
 11048  0CA6  1803               	skipnc
 11049  0CA7  3000               	movlw	0
 11050  0CA8  00A9               	movwf	??_atoi+1
 11051  0CA9  3000               	movlw	0
 11052  0CAA  0229               	subwf	??_atoi+1,w
 11053  0CAB  3005               	movlw	5
 11054  0CAC  1903               	skipnz
 11055  0CAD  0228               	subwf	??_atoi,w
 11056  0CAE  1C03               	skipc
 11057  0CAF  2CB1               	goto	u4781
 11058  0CB0  2CB2               	goto	u4780
 11059  0CB1                     u4781:
 11060  0CB1  2CB3               	goto	l5731
 11061  0CB2                     u4780:
 11062  0CB2                     l5729:
 11063  0CB2  01B2               	clrf	_atoi$2939
 11064  0CB3                     l5731:
 11065  0CB3  0832               	movf	_atoi$2939,w
 11066  0CB4  00A8               	movwf	??_atoi
 11067  0CB5  01A9               	clrf	??_atoi+1
 11068  0CB6  0828               	movf	??_atoi,w
 11069  0CB7  00AE               	movwf	_atoi$2938
 11070  0CB8  0829               	movf	??_atoi+1,w
 11071  0CB9  00AF               	movwf	_atoi$2938+1
 11072  0CBA                     l5735:
 11073  0CBA  082E               	movf	_atoi$2938,w
 11074  0CBB  042F               	iorwf	_atoi$2938+1,w
 11075  0CBC  1D03               	btfss	3,2
 11076  0CBD  2CBF               	goto	u4791
 11077  0CBE  2CC0               	goto	u4790
 11078  0CBF                     u4791:
 11079  0CBF  2C8E               	goto	l5721
 11080  0CC0                     u4790:
 11081  0CC0  2CCA               	goto	l5739
 11082  0CC1                     l5737:
 11083  0CC1  3001               	movlw	1
 11084  0CC2  00AC               	movwf	atoi@neg
 11085  0CC3  3000               	movlw	0
 11086  0CC4  00AD               	movwf	atoi@neg+1
 11087  0CC5                     l2065:
 11088  0CC5  3001               	movlw	1
 11089  0CC6  07A6               	addwf	atoi@s,f
 11090  0CC7  3000               	movlw	0
 11091  0CC8  3DA7               	addwfc	atoi@s+1,f
 11092  0CC9  2CFE               	goto	l5745
 11093  0CCA                     l5739:
 11094  0CCA  0826               	movf	atoi@s,w
 11095  0CCB  0084               	movwf	4
 11096  0CCC  0827               	movf	atoi@s+1,w
 11097  0CCD  0085               	movwf	5
 11098  0CCE  0800               	movf	0,w	;code access
 11099  0CCF  00A8               	movwf	??_atoi
 11100  0CD0  01A9               	clrf	??_atoi+1
 11101                           
 11102                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11103                           ; Switch size 1, requested type "simple"
 11104                           ; Number of cases is 1, Range of values is 0 to 0
 11105                           ; switch strategies available:
 11106                           ; Name         Instructions Cycles
 11107                           ; simple_byte            4     3 (average)
 11108                           ; direct_byte            8     6 (fixed)
 11109                           ; jumptable            260     6 (fixed)
 11110                           ;	Chosen strategy is simple_byte
 11111  0CD1  0829               	movf	??_atoi+1,w
 11112  0CD2  3A00               	xorlw	0	; case 0
 11113  0CD3  1903               	skipnz
 11114  0CD4  2CD6               	goto	l6363
 11115  0CD5  2CFE               	goto	l5745
 11116  0CD6                     l6363:
 11117                           
 11118                           ; Switch size 1, requested type "simple"
 11119                           ; Number of cases is 2, Range of values is 43 to 45
 11120                           ; switch strategies available:
 11121                           ; Name         Instructions Cycles
 11122                           ; simple_byte            7     4 (average)
 11123                           ; direct_byte           15     9 (fixed)
 11124                           ; jumptable            263     9 (fixed)
 11125                           ;	Chosen strategy is simple_byte
 11126  0CD6  0828               	movf	??_atoi,w
 11127  0CD7  3A2B               	xorlw	43	; case 43
 11128  0CD8  1903               	skipnz
 11129  0CD9  2CC5               	goto	l2065
 11130  0CDA  3A06               	xorlw	6	; case 45
 11131  0CDB  1903               	skipnz
 11132  0CDC  2CC1               	goto	l5737
 11133  0CDD  2CFE               	goto	l5745
 11134  0CDE                     l5741:
 11135  0CDE  0826               	movf	atoi@s,w
 11136  0CDF  0084               	movwf	4
 11137  0CE0  0827               	movf	atoi@s+1,w
 11138  0CE1  0085               	movwf	5
 11139  0CE2  0800               	movf	0,w	;code access
 11140  0CE3  00A8               	movwf	??_atoi
 11141  0CE4  0834               	movf	atoi@n+1,w
 11142  0CE5  00A1               	movwf	___wmul@multiplier+1
 11143  0CE6  0833               	movf	atoi@n,w
 11144  0CE7  00A0               	movwf	___wmul@multiplier
 11145  0CE8  300A               	movlw	10
 11146  0CE9  00A2               	movwf	___wmul@multiplicand
 11147  0CEA  3000               	movlw	0
 11148  0CEB  00A3               	movwf	___wmul@multiplicand+1
 11149  0CEC  3197  27BF  318C   	fcall	___wmul
 11150  0CEF  0020               	movlb	0	; select bank0
 11151  0CF0  0821               	movf	?___wmul+1,w
 11152  0CF1  00AA               	movwf	??_atoi+2
 11153  0CF2  0828               	movf	??_atoi,w
 11154  0CF3  0220               	subwf	?___wmul,w
 11155  0CF4  00A9               	movwf	??_atoi+1
 11156  0CF5  1C03               	skipc
 11157  0CF6  03AA               	decf	??_atoi+2,f
 11158  0CF7  0829               	movf	??_atoi+1,w
 11159  0CF8  3E30               	addlw	48
 11160  0CF9  00B3               	movwf	atoi@n
 11161  0CFA  3000               	movlw	0
 11162  0CFB  3D2A               	addwfc	??_atoi+2,w
 11163  0CFC  00B4               	movwf	atoi@n+1
 11164  0CFD  2CC5               	goto	l2065
 11165  0CFE                     l5745:
 11166  0CFE  0826               	movf	atoi@s,w
 11167  0CFF  0084               	movwf	4
 11168  0D00  0827               	movf	atoi@s+1,w
 11169  0D01  0085               	movwf	5
 11170  0D02  0800               	movf	0,w	;code access
 11171  0D03  3ED0               	addlw	208
 11172  0D04  00A8               	movwf	??_atoi
 11173  0D05  30FF               	movlw	255
 11174  0D06  1803               	skipnc
 11175  0D07  3000               	movlw	0
 11176  0D08  00A9               	movwf	??_atoi+1
 11177  0D09  3000               	movlw	0
 11178  0D0A  0229               	subwf	??_atoi+1,w
 11179  0D0B  300A               	movlw	10
 11180  0D0C  1903               	skipnz
 11181  0D0D  0228               	subwf	??_atoi,w
 11182  0D0E  1C03               	skipc
 11183  0D0F  2D11               	goto	u4801
 11184  0D10  2D13               	goto	u4800
 11185  0D11                     u4801:
 11186  0D11  3001               	movlw	1
 11187  0D12  2D14               	goto	u4810
 11188  0D13                     u4800:
 11189  0D13  3000               	movlw	0
 11190  0D14                     u4810:
 11191  0D14  00AA               	movwf	??_atoi+2
 11192  0D15  01AB               	clrf	??_atoi+3
 11193  0D16  082A               	movf	??_atoi+2,w
 11194  0D17  00B0               	movwf	_atoi$2940
 11195  0D18  082B               	movf	??_atoi+3,w
 11196  0D19  00B1               	movwf	_atoi$2940+1
 11197  0D1A                     l5749:
 11198  0D1A  0830               	movf	_atoi$2940,w
 11199  0D1B  0431               	iorwf	_atoi$2940+1,w
 11200  0D1C  1D03               	btfss	3,2
 11201  0D1D  2D1F               	goto	u4821
 11202  0D1E  2D20               	goto	u4820
 11203  0D1F                     u4821:
 11204  0D1F  2CDE               	goto	l5741
 11205  0D20                     u4820:
 11206  0D20                     l5751:
 11207  0D20  082C               	movf	atoi@neg,w
 11208  0D21  042D               	iorwf	atoi@neg+1,w
 11209  0D22  1D03               	btfss	3,2
 11210  0D23  2D25               	goto	u4831
 11211  0D24  2D26               	goto	u4830
 11212  0D25                     u4831:
 11213  0D25  2D32               	goto	l5755
 11214  0D26                     u4830:
 11215  0D26                     l5753:
 11216  0D26  0933               	comf	atoi@n,w
 11217  0D27  00A8               	movwf	??_atoi
 11218  0D28  0934               	comf	atoi@n+1,w
 11219  0D29  00A9               	movwf	??_atoi+1
 11220  0D2A  0AA8               	incf	??_atoi,f
 11221  0D2B  1903               	skipnz
 11222  0D2C  0AA9               	incf	??_atoi+1,f
 11223  0D2D  0828               	movf	??_atoi,w
 11224  0D2E  00A6               	movwf	?_atoi
 11225  0D2F  0829               	movf	??_atoi+1,w
 11226  0D30  00A7               	movwf	?_atoi+1
 11227  0D31  2D36               	goto	l2078
 11228  0D32                     l5755:
 11229  0D32  0834               	movf	atoi@n+1,w
 11230  0D33  00A7               	movwf	?_atoi+1
 11231  0D34  0833               	movf	atoi@n,w
 11232  0D35  00A6               	movwf	?_atoi
 11233  0D36                     l2078:
 11234  0D36  0008               	return
 11235  0D37                     __end_of_atoi:
 11236                           
 11237                           	psect	text15
 11238  0815                     __ptext15:	
 11239 ;; *************** function _isspace *****************
 11240 ;; Defined at:
 11241 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
 11242 ;; Parameters:    Size  Location     Type
 11243 ;;  c               2    0[BANK0 ] int 
 11244 ;; Auto vars:     Size  Location     Type
 11245 ;;		None
 11246 ;; Return value:  Size  Location     Type
 11247 ;;                  2    0[BANK0 ] int 
 11248 ;; Registers used:
 11249 ;;		wreg, status,2, status,0
 11250 ;; Tracked objects:
 11251 ;;		On entry : 0/0
 11252 ;;		On exit  : 0/0
 11253 ;;		Unchanged: 0/0
 11254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11255 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11256 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11257 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11258 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11259 ;;Total ram usage:        5 bytes
 11260 ;; Hardware stack levels used: 1
 11261 ;; Hardware stack levels required when called: 5
 11262 ;; This function calls:
 11263 ;;		Nothing
 11264 ;; This function is called by:
 11265 ;;		_atoi
 11266 ;; This function uses a non-reentrant model
 11267 ;;
 11268                           
 11269                           
 11270                           ;psect for function _isspace
 11271  0815                     _isspace:
 11272  0815                     l5619:	
 11273                           ;incstack = 0
 11274                           ; Regs used in _isspace: [wreg+status,2+status,0]
 11275                           
 11276  0815  0020               	movlb	0	; select bank0
 11277  0816  01A4               	clrf	_isspace$2956
 11278  0817  0AA4               	incf	_isspace$2956,f
 11279  0818                     l5621:
 11280  0818  3020               	movlw	32
 11281  0819  0620               	xorwf	isspace@c,w
 11282  081A  0421               	iorwf	isspace@c+1,w
 11283  081B  1903               	btfsc	3,2
 11284  081C  281E               	goto	u4501
 11285  081D  281F               	goto	u4500
 11286  081E                     u4501:
 11287  081E  282F               	goto	l5627
 11288  081F                     u4500:
 11289  081F                     l5623:
 11290  081F  0820               	movf	isspace@c,w
 11291  0820  3EF7               	addlw	247
 11292  0821  00A2               	movwf	??_isspace
 11293  0822  30FF               	movlw	255
 11294  0823  3D21               	addwfc	isspace@c+1,w
 11295  0824  00A3               	movwf	??_isspace+1
 11296  0825  3000               	movlw	0
 11297  0826  0223               	subwf	??_isspace+1,w
 11298  0827  3005               	movlw	5
 11299  0828  1903               	skipnz
 11300  0829  0222               	subwf	??_isspace,w
 11301  082A  1C03               	skipc
 11302  082B  282D               	goto	u4511
 11303  082C  282E               	goto	u4510
 11304  082D                     u4511:
 11305  082D  282F               	goto	l5627
 11306  082E                     u4510:
 11307  082E                     l5625:
 11308  082E  01A4               	clrf	_isspace$2956
 11309  082F                     l5627:
 11310  082F  0824               	movf	_isspace$2956,w
 11311  0830  00A2               	movwf	??_isspace
 11312  0831  01A3               	clrf	??_isspace+1
 11313  0832  0822               	movf	??_isspace,w
 11314  0833  00A0               	movwf	?_isspace
 11315  0834  0823               	movf	??_isspace+1,w
 11316  0835  00A1               	movwf	?_isspace+1
 11317  0836                     l2089:
 11318  0836  0008               	return
 11319  0837                     __end_of_isspace:
 11320                           
 11321                           	psect	text16
 11322  1719                     __ptext16:	
 11323 ;; *************** function _isdigit *****************
 11324 ;; Defined at:
 11325 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
 11326 ;; Parameters:    Size  Location     Type
 11327 ;;  c               2    0[BANK0 ] int 
 11328 ;; Auto vars:     Size  Location     Type
 11329 ;;		None
 11330 ;; Return value:  Size  Location     Type
 11331 ;;                  2    0[BANK0 ] int 
 11332 ;; Registers used:
 11333 ;;		wreg, status,2, status,0
 11334 ;; Tracked objects:
 11335 ;;		On entry : 0/0
 11336 ;;		On exit  : 0/0
 11337 ;;		Unchanged: 0/0
 11338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11339 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11340 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11341 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11342 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11343 ;;Total ram usage:        6 bytes
 11344 ;; Hardware stack levels used: 1
 11345 ;; Hardware stack levels required when called: 5
 11346 ;; This function calls:
 11347 ;;		Nothing
 11348 ;; This function is called by:
 11349 ;;		_vfpfcnvrt
 11350 ;;		_atoi
 11351 ;; This function uses a non-reentrant model
 11352 ;;
 11353                           
 11354                           
 11355                           ;psect for function _isdigit
 11356  1719                     _isdigit:
 11357  1719                     l5615:	
 11358                           ;incstack = 0
 11359                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 11360                           
 11361  1719  0020               	movlb	0	; select bank0
 11362  171A  0820               	movf	isdigit@c,w
 11363  171B  3ED0               	addlw	208
 11364  171C  00A2               	movwf	??_isdigit
 11365  171D  30FF               	movlw	255
 11366  171E  3D21               	addwfc	isdigit@c+1,w
 11367  171F  00A3               	movwf	??_isdigit+1
 11368  1720  3000               	movlw	0
 11369  1721  0223               	subwf	??_isdigit+1,w
 11370  1722  300A               	movlw	10
 11371  1723  1903               	skipnz
 11372  1724  0222               	subwf	??_isdigit,w
 11373  1725  1C03               	skipc
 11374  1726  2F28               	goto	u4481
 11375  1727  2F2A               	goto	u4480
 11376  1728                     u4481:
 11377  1728  3001               	movlw	1
 11378  1729  2F2B               	goto	u4490
 11379  172A                     u4480:
 11380  172A  3000               	movlw	0
 11381  172B                     u4490:
 11382  172B  00A4               	movwf	??_isdigit+2
 11383  172C  01A5               	clrf	??_isdigit+3
 11384  172D  0824               	movf	??_isdigit+2,w
 11385  172E  00A0               	movwf	?_isdigit
 11386  172F  0825               	movf	??_isdigit+3,w
 11387  1730  00A1               	movwf	?_isdigit+1
 11388  1731                     l2081:
 11389  1731  0008               	return
 11390  1732                     __end_of_isdigit:
 11391                           
 11392                           	psect	text17
 11393  17BF                     __ptext17:	
 11394 ;; *************** function ___wmul *****************
 11395 ;; Defined at:
 11396 ;;		line 15 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 11397 ;; Parameters:    Size  Location     Type
 11398 ;;  multiplier      2    0[BANK0 ] unsigned int 
 11399 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 11400 ;; Auto vars:     Size  Location     Type
 11401 ;;  product         2    4[BANK0 ] unsigned int 
 11402 ;; Return value:  Size  Location     Type
 11403 ;;                  2    0[BANK0 ] unsigned int 
 11404 ;; Registers used:
 11405 ;;		wreg, status,2, status,0
 11406 ;; Tracked objects:
 11407 ;;		On entry : 0/0
 11408 ;;		On exit  : 0/0
 11409 ;;		Unchanged: 0/0
 11410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11411 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11412 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11414 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11415 ;;Total ram usage:        6 bytes
 11416 ;; Hardware stack levels used: 1
 11417 ;; Hardware stack levels required when called: 5
 11418 ;; This function calls:
 11419 ;;		Nothing
 11420 ;; This function is called by:
 11421 ;;		_atoi
 11422 ;; This function uses a non-reentrant model
 11423 ;;
 11424                           
 11425                           
 11426                           ;psect for function ___wmul
 11427  17BF                     ___wmul:
 11428  17BF                     l5511:	
 11429                           ;incstack = 0
 11430                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 11431                           
 11432  17BF  0020               	movlb	0	; select bank0
 11433  17C0  01A4               	clrf	___wmul@product
 11434  17C1  01A5               	clrf	___wmul@product+1
 11435  17C2                     l5513:
 11436  17C2  1C20               	btfss	___wmul@multiplier,0
 11437  17C3  2FC5               	goto	u4191
 11438  17C4  2FC6               	goto	u4190
 11439  17C5                     u4191:
 11440  17C5  2FCA               	goto	l1479
 11441  17C6                     u4190:
 11442  17C6                     l5515:
 11443  17C6  0822               	movf	___wmul@multiplicand,w
 11444  17C7  07A4               	addwf	___wmul@product,f
 11445  17C8  0823               	movf	___wmul@multiplicand+1,w
 11446  17C9  3DA5               	addwfc	___wmul@product+1,f
 11447  17CA                     l1479:
 11448  17CA  3001               	movlw	1
 11449  17CB                     u4205:
 11450  17CB  35A2               	lslf	___wmul@multiplicand,f
 11451  17CC  0DA3               	rlf	___wmul@multiplicand+1,f
 11452  17CD  0B89               	decfsz	9,f
 11453  17CE  2FCB               	goto	u4205
 11454  17CF                     l5517:
 11455  17CF  3001               	movlw	1
 11456  17D0                     u4215:
 11457  17D0  36A1               	lsrf	___wmul@multiplier+1,f
 11458  17D1  0CA0               	rrf	___wmul@multiplier,f
 11459  17D2  0B89               	decfsz	9,f
 11460  17D3  2FD0               	goto	u4215
 11461  17D4                     l5519:
 11462  17D4  0820               	movf	___wmul@multiplier,w
 11463  17D5  0421               	iorwf	___wmul@multiplier+1,w
 11464  17D6  1D03               	btfss	3,2
 11465  17D7  2FD9               	goto	u4221
 11466  17D8  2FDA               	goto	u4220
 11467  17D9                     u4221:
 11468  17D9  2FC2               	goto	l5513
 11469  17DA                     u4220:
 11470  17DA                     l5521:
 11471  17DA  0825               	movf	___wmul@product+1,w
 11472  17DB  00A1               	movwf	?___wmul+1
 11473  17DC  0824               	movf	___wmul@product,w
 11474  17DD  00A0               	movwf	?___wmul
 11475  17DE                     l1481:
 11476  17DE  0008               	return
 11477  17DF                     __end_of___wmul:
 11478                           
 11479                           	psect	text18
 11480  04BC                     __ptext18:	
 11481 ;; *************** function _readTC74 *****************
 11482 ;; Defined at:
 11483 ;;		line 81 in file "main.c"
 11484 ;; Parameters:    Size  Location     Type
 11485 ;;		None
 11486 ;; Auto vars:     Size  Location     Type
 11487 ;;  value           1    3[BANK0 ] unsigned char 
 11488 ;; Return value:  Size  Location     Type
 11489 ;;                  1    wreg      unsigned char 
 11490 ;; Registers used:
 11491 ;;		wreg, status,2, status,0, pclath, cstack
 11492 ;; Tracked objects:
 11493 ;;		On entry : 0/0
 11494 ;;		On exit  : 0/0
 11495 ;;		Unchanged: 0/0
 11496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11498 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11499 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11500 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11501 ;;Total ram usage:        2 bytes
 11502 ;; Hardware stack levels used: 1
 11503 ;; Hardware stack levels required when called: 6
 11504 ;; This function calls:
 11505 ;;		_ReadI2C
 11506 ;;		_WriteI2C
 11507 ;; This function is called by:
 11508 ;;		_main
 11509 ;; This function uses a non-reentrant model
 11510 ;;
 11511                           
 11512                           
 11513                           ;psect for function _readTC74
 11514  04BC                     _readTC74:
 11515  04BC                     l1186:	
 11516                           ;incstack = 0
 11517                           ; Regs used in _readTC74: [wreg+status,2+status,0+pclath+cstack]
 11518                           ;main.c: 83:  unsigned char value;;main.c: 84: do{
 11519                           
 11520  04BC                     l6141:	
 11521                           ;main.c: 85:  while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11522                           
 11523  04BC  0023               	movlb	3	; select bank3
 11524  04BD  0C0F               	rrf	15,w	;volatile
 11525  04BE  0C89               	rrf	9,f
 11526  04BF  3901               	andlw	1
 11527  04C0  0020               	movlb	0	; select bank0
 11528  04C1  00A2               	movwf	??_readTC74
 11529  04C2  0023               	movlb	3	; select bank3
 11530  04C3  0811               	movf	17,w	;volatile
 11531  04C4  391F               	andlw	31
 11532  04C5  0020               	movlb	0	; select bank0
 11533  04C6  0422               	iorwf	??_readTC74,w
 11534  04C7  1D03               	btfss	3,2
 11535  04C8  2CCA               	goto	u5481
 11536  04C9  2CCB               	goto	u5480
 11537  04CA                     u5481:
 11538  04CA  2CBC               	goto	l6141
 11539  04CB                     u5480:
 11540  04CB                     l1190:	
 11541                           ;main.c: 86:  do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((SSP1
      +                          CON2 & 0x1F) | (SSP1STATbits.R_W));
 11542                           
 11543  04CB  0023               	movlb	3	; select bank3
 11544  04CC  1411               	bsf	17,0	;volatile
 11545  04CD                     l1191:
 11546  04CD  1811               	btfsc	17,0	;volatile
 11547  04CE  2CD0               	goto	u5491
 11548  04CF  2CD1               	goto	u5490
 11549  04D0                     u5491:
 11550  04D0  2CCD               	goto	l1191
 11551  04D1                     u5490:
 11552  04D1                     l6143:
 11553  04D1  0023               	movlb	3	; select bank3
 11554  04D2  0C0F               	rrf	15,w	;volatile
 11555  04D3  0C89               	rrf	9,f
 11556  04D4  3901               	andlw	1
 11557  04D5  0020               	movlb	0	; select bank0
 11558  04D6  00A2               	movwf	??_readTC74
 11559  04D7  0023               	movlb	3	; select bank3
 11560  04D8  0811               	movf	17,w	;volatile
 11561  04D9  391F               	andlw	31
 11562  04DA  0020               	movlb	0	; select bank0
 11563  04DB  0422               	iorwf	??_readTC74,w
 11564  04DC  1D03               	btfss	3,2
 11565  04DD  2CDF               	goto	u5501
 11566  04DE  2CE0               	goto	u5500
 11567  04DF                     u5501:
 11568  04DF  2CD1               	goto	l6143
 11569  04E0                     u5500:
 11570  04E0                     l6145:
 11571                           
 11572                           ;main.c: 88:  WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11573  04E0  309A               	movlw	154
 11574  04E1  318A  22C3  3184   	fcall	_WriteI2C
 11575  04E4                     l6147:
 11576  04E4  0023               	movlb	3	; select bank3
 11577  04E5  0C0F               	rrf	15,w	;volatile
 11578  04E6  0C89               	rrf	9,f
 11579  04E7  3901               	andlw	1
 11580  04E8  0020               	movlb	0	; select bank0
 11581  04E9  00A2               	movwf	??_readTC74
 11582  04EA  0023               	movlb	3	; select bank3
 11583  04EB  0811               	movf	17,w	;volatile
 11584  04EC  391F               	andlw	31
 11585  04ED  0020               	movlb	0	; select bank0
 11586  04EE  0422               	iorwf	??_readTC74,w
 11587  04EF  1D03               	btfss	3,2
 11588  04F0  2CF2               	goto	u5511
 11589  04F1  2CF3               	goto	u5510
 11590  04F2                     u5511:
 11591  04F2  2CE4               	goto	l6147
 11592  04F3                     u5510:
 11593  04F3                     l6149:
 11594                           
 11595                           ;main.c: 89:  WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11596  04F3  3001               	movlw	1
 11597  04F4  318A  22C3  3184   	fcall	_WriteI2C
 11598  04F7                     l6151:
 11599  04F7  0023               	movlb	3	; select bank3
 11600  04F8  0C0F               	rrf	15,w	;volatile
 11601  04F9  0C89               	rrf	9,f
 11602  04FA  3901               	andlw	1
 11603  04FB  0020               	movlb	0	; select bank0
 11604  04FC  00A2               	movwf	??_readTC74
 11605  04FD  0023               	movlb	3	; select bank3
 11606  04FE  0811               	movf	17,w	;volatile
 11607  04FF  391F               	andlw	31
 11608  0500  0020               	movlb	0	; select bank0
 11609  0501  0422               	iorwf	??_readTC74,w
 11610  0502  1D03               	btfss	3,2
 11611  0503  2D05               	goto	u5521
 11612  0504  2D06               	goto	u5520
 11613  0505                     u5521:
 11614  0505  2CF7               	goto	l6151
 11615  0506                     u5520:
 11616  0506                     l1204:	
 11617                           ;main.c: 90:  do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while ((SS
      +                          P1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11618                           
 11619  0506  0023               	movlb	3	; select bank3
 11620  0507  1491               	bsf	17,1	;volatile
 11621  0508                     l1205:
 11622  0508  1891               	btfsc	17,1	;volatile
 11623  0509  2D0B               	goto	u5531
 11624  050A  2D0C               	goto	u5530
 11625  050B                     u5531:
 11626  050B  2D08               	goto	l1205
 11627  050C                     u5530:
 11628  050C                     l6153:
 11629  050C  0023               	movlb	3	; select bank3
 11630  050D  0C0F               	rrf	15,w	;volatile
 11631  050E  0C89               	rrf	9,f
 11632  050F  3901               	andlw	1
 11633  0510  0020               	movlb	0	; select bank0
 11634  0511  00A2               	movwf	??_readTC74
 11635  0512  0023               	movlb	3	; select bank3
 11636  0513  0811               	movf	17,w	;volatile
 11637  0514  391F               	andlw	31
 11638  0515  0020               	movlb	0	; select bank0
 11639  0516  0422               	iorwf	??_readTC74,w
 11640  0517  1D03               	btfss	3,2
 11641  0518  2D1A               	goto	u5541
 11642  0519  2D1B               	goto	u5540
 11643  051A                     u5541:
 11644  051A  2D0C               	goto	l6153
 11645  051B                     u5540:
 11646  051B                     l6155:
 11647                           
 11648                           ;main.c: 91:  WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11649  051B  309B               	movlw	155
 11650  051C  318A  22C3  3184   	fcall	_WriteI2C
 11651  051F                     l6157:
 11652  051F  0023               	movlb	3	; select bank3
 11653  0520  0C0F               	rrf	15,w	;volatile
 11654  0521  0C89               	rrf	9,f
 11655  0522  3901               	andlw	1
 11656  0523  0020               	movlb	0	; select bank0
 11657  0524  00A2               	movwf	??_readTC74
 11658  0525  0023               	movlb	3	; select bank3
 11659  0526  0811               	movf	17,w	;volatile
 11660  0527  391F               	andlw	31
 11661  0528  0020               	movlb	0	; select bank0
 11662  0529  0422               	iorwf	??_readTC74,w
 11663  052A  1D03               	btfss	3,2
 11664  052B  2D2D               	goto	u5551
 11665  052C  2D2E               	goto	u5550
 11666  052D                     u5551:
 11667  052D  2D1F               	goto	l6157
 11668  052E                     u5550:
 11669  052E                     l6159:
 11670                           
 11671                           ;main.c: 92:  value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11672  052E  3197  27A0  3184   	fcall	_ReadI2C
 11673  0531  0020               	movlb	0	; select bank0
 11674  0532  00A2               	movwf	??_readTC74
 11675  0533  0822               	movf	??_readTC74,w
 11676  0534  00A3               	movwf	readTC74@value
 11677  0535                     l6161:
 11678  0535  0023               	movlb	3	; select bank3
 11679  0536  0C0F               	rrf	15,w	;volatile
 11680  0537  0C89               	rrf	9,f
 11681  0538  3901               	andlw	1
 11682  0539  0020               	movlb	0	; select bank0
 11683  053A  00A2               	movwf	??_readTC74
 11684  053B  0023               	movlb	3	; select bank3
 11685  053C  0811               	movf	17,w	;volatile
 11686  053D  391F               	andlw	31
 11687  053E  0020               	movlb	0	; select bank0
 11688  053F  0422               	iorwf	??_readTC74,w
 11689  0540  1D03               	btfss	3,2
 11690  0541  2D43               	goto	u5561
 11691  0542  2D44               	goto	u5560
 11692  0543                     u5561:
 11693  0543  2D35               	goto	l6161
 11694  0544                     u5560:
 11695  0544                     l1218:	
 11696                           ;main.c: 93:  do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); 
      +                          } while (0); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11697                           
 11698  0544  0023               	movlb	3	; select bank3
 11699  0545  1691               	bsf	17,5	;volatile
 11700  0546  1611               	bsf	17,4	;volatile
 11701  0547                     l1219:
 11702  0547  1A11               	btfsc	17,4	;volatile
 11703  0548  2D4A               	goto	u5571
 11704  0549  2D4B               	goto	u5570
 11705  054A                     u5571:
 11706  054A  2D47               	goto	l1219
 11707  054B                     u5570:
 11708  054B                     l6163:
 11709  054B  0023               	movlb	3	; select bank3
 11710  054C  0C0F               	rrf	15,w	;volatile
 11711  054D  0C89               	rrf	9,f
 11712  054E  3901               	andlw	1
 11713  054F  0020               	movlb	0	; select bank0
 11714  0550  00A2               	movwf	??_readTC74
 11715  0551  0023               	movlb	3	; select bank3
 11716  0552  0811               	movf	17,w	;volatile
 11717  0553  391F               	andlw	31
 11718  0554  0020               	movlb	0	; select bank0
 11719  0555  0422               	iorwf	??_readTC74,w
 11720  0556  1D03               	btfss	3,2
 11721  0557  2D59               	goto	u5581
 11722  0558  2D5A               	goto	u5580
 11723  0559                     u5581:
 11724  0559  2D4B               	goto	l6163
 11725  055A                     u5580:
 11726  055A                     l1226:	
 11727                           ;main.c: 94:  do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 11728                           
 11729  055A  0023               	movlb	3	; select bank3
 11730  055B  1511               	bsf	17,2	;volatile
 11731  055C                     l1227:
 11732  055C  1911               	btfsc	17,2	;volatile
 11733  055D  2D5F               	goto	u5591
 11734  055E  2D60               	goto	u5590
 11735  055F                     u5591:
 11736  055F  2D5C               	goto	l1227
 11737  0560                     u5590:
 11738  0560                     l1230:
 11739                           
 11740                           ;main.c: 95: } while (!(value & 0x40));
 11741  0560  0020               	movlb	0	; select bank0
 11742  0561  1F23               	btfss	readTC74@value,6
 11743  0562  2D64               	goto	u5601
 11744  0563  2D65               	goto	u5600
 11745  0564                     u5601:
 11746  0564  2CBC               	goto	l1186
 11747  0565                     u5600:
 11748  0565                     l6165:
 11749  0565  0023               	movlb	3	; select bank3
 11750  0566  0C0F               	rrf	15,w	;volatile
 11751  0567  0C89               	rrf	9,f
 11752  0568  3901               	andlw	1
 11753  0569  0020               	movlb	0	; select bank0
 11754  056A  00A2               	movwf	??_readTC74
 11755  056B  0023               	movlb	3	; select bank3
 11756  056C  0811               	movf	17,w	;volatile
 11757  056D  391F               	andlw	31
 11758  056E  0020               	movlb	0	; select bank0
 11759  056F  0422               	iorwf	??_readTC74,w
 11760  0570  1D03               	btfss	3,2
 11761  0571  2D73               	goto	u5611
 11762  0572  2D74               	goto	u5610
 11763  0573                     u5611:
 11764  0573  2D65               	goto	l6165
 11765  0574                     u5610:
 11766  0574                     l1235:	
 11767                           ;main.c: 98:  do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((SSP1
      +                          CON2 & 0x1F) | (SSP1STATbits.R_W));
 11768                           
 11769  0574  0023               	movlb	3	; select bank3
 11770  0575  1411               	bsf	17,0	;volatile
 11771  0576                     l1236:
 11772  0576  1811               	btfsc	17,0	;volatile
 11773  0577  2D79               	goto	u5621
 11774  0578  2D7A               	goto	u5620
 11775  0579                     u5621:
 11776  0579  2D76               	goto	l1236
 11777  057A                     u5620:
 11778  057A                     l6167:
 11779  057A  0023               	movlb	3	; select bank3
 11780  057B  0C0F               	rrf	15,w	;volatile
 11781  057C  0C89               	rrf	9,f
 11782  057D  3901               	andlw	1
 11783  057E  0020               	movlb	0	; select bank0
 11784  057F  00A2               	movwf	??_readTC74
 11785  0580  0023               	movlb	3	; select bank3
 11786  0581  0811               	movf	17,w	;volatile
 11787  0582  391F               	andlw	31
 11788  0583  0020               	movlb	0	; select bank0
 11789  0584  0422               	iorwf	??_readTC74,w
 11790  0585  1D03               	btfss	3,2
 11791  0586  2D88               	goto	u5631
 11792  0587  2D89               	goto	u5630
 11793  0588                     u5631:
 11794  0588  2D7A               	goto	l6167
 11795  0589                     u5630:
 11796  0589                     l6169:
 11797                           
 11798                           ;main.c: 99:  WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11799  0589  309A               	movlw	154
 11800  058A  318A  22C3  3184   	fcall	_WriteI2C
 11801  058D                     l6171:
 11802  058D  0023               	movlb	3	; select bank3
 11803  058E  0C0F               	rrf	15,w	;volatile
 11804  058F  0C89               	rrf	9,f
 11805  0590  3901               	andlw	1
 11806  0591  0020               	movlb	0	; select bank0
 11807  0592  00A2               	movwf	??_readTC74
 11808  0593  0023               	movlb	3	; select bank3
 11809  0594  0811               	movf	17,w	;volatile
 11810  0595  391F               	andlw	31
 11811  0596  0020               	movlb	0	; select bank0
 11812  0597  0422               	iorwf	??_readTC74,w
 11813  0598  1D03               	btfss	3,2
 11814  0599  2D9B               	goto	u5641
 11815  059A  2D9C               	goto	u5640
 11816  059B                     u5641:
 11817  059B  2D8D               	goto	l6171
 11818  059C                     u5640:
 11819  059C                     l6173:
 11820                           
 11821                           ;main.c: 100:  WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11822  059C  3000               	movlw	0
 11823  059D  318A  22C3  3184   	fcall	_WriteI2C
 11824  05A0                     l6175:
 11825  05A0  0023               	movlb	3	; select bank3
 11826  05A1  0C0F               	rrf	15,w	;volatile
 11827  05A2  0C89               	rrf	9,f
 11828  05A3  3901               	andlw	1
 11829  05A4  0020               	movlb	0	; select bank0
 11830  05A5  00A2               	movwf	??_readTC74
 11831  05A6  0023               	movlb	3	; select bank3
 11832  05A7  0811               	movf	17,w	;volatile
 11833  05A8  391F               	andlw	31
 11834  05A9  0020               	movlb	0	; select bank0
 11835  05AA  0422               	iorwf	??_readTC74,w
 11836  05AB  1D03               	btfss	3,2
 11837  05AC  2DAE               	goto	u5651
 11838  05AD  2DAF               	goto	u5650
 11839  05AE                     u5651:
 11840  05AE  2DA0               	goto	l6175
 11841  05AF                     u5650:
 11842  05AF                     l1249:	
 11843                           ;main.c: 101:  do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while ((S
      +                          SP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11844                           
 11845  05AF  0023               	movlb	3	; select bank3
 11846  05B0  1491               	bsf	17,1	;volatile
 11847  05B1                     l1250:
 11848  05B1  1891               	btfsc	17,1	;volatile
 11849  05B2  2DB4               	goto	u5661
 11850  05B3  2DB5               	goto	u5660
 11851  05B4                     u5661:
 11852  05B4  2DB1               	goto	l1250
 11853  05B5                     u5660:
 11854  05B5                     l6177:
 11855  05B5  0023               	movlb	3	; select bank3
 11856  05B6  0C0F               	rrf	15,w	;volatile
 11857  05B7  0C89               	rrf	9,f
 11858  05B8  3901               	andlw	1
 11859  05B9  0020               	movlb	0	; select bank0
 11860  05BA  00A2               	movwf	??_readTC74
 11861  05BB  0023               	movlb	3	; select bank3
 11862  05BC  0811               	movf	17,w	;volatile
 11863  05BD  391F               	andlw	31
 11864  05BE  0020               	movlb	0	; select bank0
 11865  05BF  0422               	iorwf	??_readTC74,w
 11866  05C0  1D03               	btfss	3,2
 11867  05C1  2DC3               	goto	u5671
 11868  05C2  2DC4               	goto	u5670
 11869  05C3                     u5671:
 11870  05C3  2DB5               	goto	l6177
 11871  05C4                     u5670:
 11872  05C4                     l6179:
 11873                           
 11874                           ;main.c: 102:  WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11875  05C4  309B               	movlw	155
 11876  05C5  318A  22C3  3184   	fcall	_WriteI2C
 11877  05C8                     l6181:
 11878  05C8  0023               	movlb	3	; select bank3
 11879  05C9  0C0F               	rrf	15,w	;volatile
 11880  05CA  0C89               	rrf	9,f
 11881  05CB  3901               	andlw	1
 11882  05CC  0020               	movlb	0	; select bank0
 11883  05CD  00A2               	movwf	??_readTC74
 11884  05CE  0023               	movlb	3	; select bank3
 11885  05CF  0811               	movf	17,w	;volatile
 11886  05D0  391F               	andlw	31
 11887  05D1  0020               	movlb	0	; select bank0
 11888  05D2  0422               	iorwf	??_readTC74,w
 11889  05D3  1D03               	btfss	3,2
 11890  05D4  2DD6               	goto	u5681
 11891  05D5  2DD7               	goto	u5680
 11892  05D6                     u5681:
 11893  05D6  2DC8               	goto	l6181
 11894  05D7                     u5680:
 11895  05D7                     l6183:
 11896                           
 11897                           ;main.c: 103:  value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11898  05D7  3197  27A0  3184   	fcall	_ReadI2C
 11899  05DA  0020               	movlb	0	; select bank0
 11900  05DB  00A2               	movwf	??_readTC74
 11901  05DC  0822               	movf	??_readTC74,w
 11902  05DD  00A3               	movwf	readTC74@value
 11903  05DE                     l6185:
 11904  05DE  0023               	movlb	3	; select bank3
 11905  05DF  0C0F               	rrf	15,w	;volatile
 11906  05E0  0C89               	rrf	9,f
 11907  05E1  3901               	andlw	1
 11908  05E2  0020               	movlb	0	; select bank0
 11909  05E3  00A2               	movwf	??_readTC74
 11910  05E4  0023               	movlb	3	; select bank3
 11911  05E5  0811               	movf	17,w	;volatile
 11912  05E6  391F               	andlw	31
 11913  05E7  0020               	movlb	0	; select bank0
 11914  05E8  0422               	iorwf	??_readTC74,w
 11915  05E9  1D03               	btfss	3,2
 11916  05EA  2DEC               	goto	u5691
 11917  05EB  2DED               	goto	u5690
 11918  05EC                     u5691:
 11919  05EC  2DDE               	goto	l6185
 11920  05ED                     u5690:
 11921  05ED                     l1263:	
 11922                           ;main.c: 104:  do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN);
      +                           } while (0); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 11923                           
 11924  05ED  0023               	movlb	3	; select bank3
 11925  05EE  1691               	bsf	17,5	;volatile
 11926  05EF  1611               	bsf	17,4	;volatile
 11927  05F0                     l1264:
 11928  05F0  1A11               	btfsc	17,4	;volatile
 11929  05F1  2DF3               	goto	u5701
 11930  05F2  2DF4               	goto	u5700
 11931  05F3                     u5701:
 11932  05F3  2DF0               	goto	l1264
 11933  05F4                     u5700:
 11934  05F4                     l6187:
 11935  05F4  0023               	movlb	3	; select bank3
 11936  05F5  0C0F               	rrf	15,w	;volatile
 11937  05F6  0C89               	rrf	9,f
 11938  05F7  3901               	andlw	1
 11939  05F8  0020               	movlb	0	; select bank0
 11940  05F9  00A2               	movwf	??_readTC74
 11941  05FA  0023               	movlb	3	; select bank3
 11942  05FB  0811               	movf	17,w	;volatile
 11943  05FC  391F               	andlw	31
 11944  05FD  0020               	movlb	0	; select bank0
 11945  05FE  0422               	iorwf	??_readTC74,w
 11946  05FF  1D03               	btfss	3,2
 11947  0600  2E02               	goto	u5711
 11948  0601  2E03               	goto	u5710
 11949  0602                     u5711:
 11950  0602  2DF4               	goto	l6187
 11951  0603                     u5710:
 11952  0603                     l1271:	
 11953                           ;main.c: 105:  do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 11954                           
 11955  0603  0023               	movlb	3	; select bank3
 11956  0604  1511               	bsf	17,2	;volatile
 11957  0605                     l1272:
 11958  0605  1911               	btfsc	17,2	;volatile
 11959  0606  2E08               	goto	u5721
 11960  0607  2E09               	goto	u5720
 11961  0608                     u5721:
 11962  0608  2E05               	goto	l1272
 11963  0609                     u5720:
 11964  0609                     l6189:
 11965                           
 11966                           ;main.c: 107:  return value;
 11967  0609  0020               	movlb	0	; select bank0
 11968  060A  0823               	movf	readTC74@value,w
 11969  060B                     l1276:
 11970  060B  0008               	return
 11971  060C                     __end_of_readTC74:
 11972                           
 11973                           	psect	text19
 11974  0B1D                     __ptext19:	
 11975 ;; *************** function _parseEPROMReading *****************
 11976 ;; Defined at:
 11977 ;;		line 61 in file "EPROMlib.c"
 11978 ;; Parameters:    Size  Location     Type
 11979 ;;  hours           1    wreg     PTR unsigned char 
 11980 ;;		 -> main@hours(1), 
 11981 ;;  minutes         1    7[BANK0 ] PTR unsigned char 
 11982 ;;		 -> main@minutes(1), 
 11983 ;;  seconds         1    8[BANK0 ] PTR unsigned char 
 11984 ;;		 -> main@seconds(1), 
 11985 ;;  temperature     1    9[BANK0 ] PTR unsigned char 
 11986 ;;		 -> main@temperature(1), 
 11987 ;;  luminosity      1   10[BANK0 ] PTR unsigned char 
 11988 ;;		 -> main@luminosity(1), 
 11989 ;;  operation       1   11[BANK0 ] unsigned char 
 11990 ;; Auto vars:     Size  Location     Type
 11991 ;;  hours           1   13[BANK0 ] PTR unsigned char 
 11992 ;;		 -> main@hours(1), 
 11993 ;;  dataAddr        2   14[BANK0 ] unsigned short 
 11994 ;; Return value:  Size  Location     Type
 11995 ;;                  1    wreg      void 
 11996 ;; Registers used:
 11997 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11998 ;; Tracked objects:
 11999 ;;		On entry : 0/0
 12000 ;;		On exit  : 0/0
 12001 ;;		Unchanged: 0/0
 12002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12003 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12004 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12005 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12006 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12007 ;;Total ram usage:        9 bytes
 12008 ;; Hardware stack levels used: 1
 12009 ;; Hardware stack levels required when called: 6
 12010 ;; This function calls:
 12011 ;;		_DATAEE_ReadByte
 12012 ;;		_operADDR
 12013 ;; This function is called by:
 12014 ;;		_main
 12015 ;; This function uses a non-reentrant model
 12016 ;;
 12017                           
 12018                           
 12019                           ;psect for function _parseEPROMReading
 12020  0B1D                     _parseEPROMReading:
 12021                           
 12022                           ;incstack = 0
 12023                           ; Regs used in _parseEPROMReading: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 12024                           ;parseEPROMReading@hours stored from wreg
 12025  0B1D  0020               	movlb	0	; select bank0
 12026  0B1E  00AD               	movwf	parseEPROMReading@hours
 12027  0B1F                     l6207:
 12028                           
 12029                           ;EPROMlib.c: 62:     uint16_t dataAddr;;EPROMlib.c: 64:     dataAddr = operADDR(operatio
      +                          n);
 12030  0B1F  082B               	movf	parseEPROMReading@operation,w
 12031  0B20  3188  20FE  318B   	fcall	_operADDR
 12032  0B23  0020               	movlb	0	; select bank0
 12033  0B24  0821               	movf	?_operADDR+1,w
 12034  0B25  00AF               	movwf	parseEPROMReading@dataAddr+1
 12035  0B26  0820               	movf	?_operADDR,w
 12036  0B27  00AE               	movwf	parseEPROMReading@dataAddr
 12037  0B28                     l6209:
 12038                           
 12039                           ;EPROMlib.c: 65:     *hours = DATAEE_ReadByte(dataAddr);
 12040  0B28  082F               	movf	parseEPROMReading@dataAddr+1,w
 12041  0B29  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12042  0B2A  082E               	movf	parseEPROMReading@dataAddr,w
 12043  0B2B  00A0               	movwf	DATAEE_ReadByte@bAdd
 12044  0B2C  3196  26BD  318B   	fcall	_DATAEE_ReadByte
 12045  0B2F  0020               	movlb	0	; select bank0
 12046  0B30  00AC               	movwf	??_parseEPROMReading
 12047  0B31  082D               	movf	parseEPROMReading@hours,w
 12048  0B32  0086               	movwf	6
 12049  0B33  0187               	clrf	7
 12050  0B34  082C               	movf	??_parseEPROMReading,w
 12051  0B35  0081               	movwf	1
 12052  0B36                     l6211:
 12053                           
 12054                           ;EPROMlib.c: 66:     *minutes = DATAEE_ReadByte(dataAddr + 1);
 12055  0B36  082E               	movf	parseEPROMReading@dataAddr,w
 12056  0B37  3E01               	addlw	1
 12057  0B38  00A0               	movwf	DATAEE_ReadByte@bAdd
 12058  0B39  3000               	movlw	0
 12059  0B3A  3D2F               	addwfc	parseEPROMReading@dataAddr+1,w
 12060  0B3B  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12061  0B3C  3196  26BD  318B   	fcall	_DATAEE_ReadByte
 12062  0B3F  0020               	movlb	0	; select bank0
 12063  0B40  00AC               	movwf	??_parseEPROMReading
 12064  0B41  0827               	movf	parseEPROMReading@minutes,w
 12065  0B42  0086               	movwf	6
 12066  0B43  0187               	clrf	7
 12067  0B44  082C               	movf	??_parseEPROMReading,w
 12068  0B45  0081               	movwf	1
 12069  0B46                     l6213:
 12070                           
 12071                           ;EPROMlib.c: 67:     *seconds = DATAEE_ReadByte(dataAddr + 2);
 12072  0B46  082E               	movf	parseEPROMReading@dataAddr,w
 12073  0B47  3E02               	addlw	2
 12074  0B48  00A0               	movwf	DATAEE_ReadByte@bAdd
 12075  0B49  3000               	movlw	0
 12076  0B4A  3D2F               	addwfc	parseEPROMReading@dataAddr+1,w
 12077  0B4B  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12078  0B4C  3196  26BD  318B   	fcall	_DATAEE_ReadByte
 12079  0B4F  0020               	movlb	0	; select bank0
 12080  0B50  00AC               	movwf	??_parseEPROMReading
 12081  0B51  0828               	movf	parseEPROMReading@seconds,w
 12082  0B52  0086               	movwf	6
 12083  0B53  0187               	clrf	7
 12084  0B54  082C               	movf	??_parseEPROMReading,w
 12085  0B55  0081               	movwf	1
 12086  0B56                     l6215:
 12087                           
 12088                           ;EPROMlib.c: 68:     *temperature = DATAEE_ReadByte(dataAddr + 3);
 12089  0B56  082E               	movf	parseEPROMReading@dataAddr,w
 12090  0B57  3E03               	addlw	3
 12091  0B58  00A0               	movwf	DATAEE_ReadByte@bAdd
 12092  0B59  3000               	movlw	0
 12093  0B5A  3D2F               	addwfc	parseEPROMReading@dataAddr+1,w
 12094  0B5B  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12095  0B5C  3196  26BD  318B   	fcall	_DATAEE_ReadByte
 12096  0B5F  0020               	movlb	0	; select bank0
 12097  0B60  00AC               	movwf	??_parseEPROMReading
 12098  0B61  0829               	movf	parseEPROMReading@temperature,w
 12099  0B62  0086               	movwf	6
 12100  0B63  0187               	clrf	7
 12101  0B64  082C               	movf	??_parseEPROMReading,w
 12102  0B65  0081               	movwf	1
 12103  0B66                     l6217:
 12104                           
 12105                           ;EPROMlib.c: 69:     *luminosity = DATAEE_ReadByte(dataAddr + 4);
 12106  0B66  082E               	movf	parseEPROMReading@dataAddr,w
 12107  0B67  3E04               	addlw	4
 12108  0B68  00A0               	movwf	DATAEE_ReadByte@bAdd
 12109  0B69  3000               	movlw	0
 12110  0B6A  3D2F               	addwfc	parseEPROMReading@dataAddr+1,w
 12111  0B6B  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12112  0B6C  3196  26BD  318B   	fcall	_DATAEE_ReadByte
 12113  0B6F  0020               	movlb	0	; select bank0
 12114  0B70  00AC               	movwf	??_parseEPROMReading
 12115  0B71  082A               	movf	parseEPROMReading@luminosity,w
 12116  0B72  0086               	movwf	6
 12117  0B73  0187               	clrf	7
 12118  0B74  082C               	movf	??_parseEPROMReading,w
 12119  0B75  0081               	movwf	1
 12120  0B76                     l1324:
 12121  0B76  0008               	return
 12122  0B77                     __end_of_parseEPROMReading:
 12123                           
 12124                           	psect	text20
 12125  08FE                     __ptext20:	
 12126 ;; *************** function _operADDR *****************
 12127 ;; Defined at:
 12128 ;;		line 7 in file "EPROMlib.c"
 12129 ;; Parameters:    Size  Location     Type
 12130 ;;  operation       1    wreg     unsigned char 
 12131 ;; Auto vars:     Size  Location     Type
 12132 ;;  operation       1    4[BANK0 ] unsigned char 
 12133 ;;  dataAddr        2    5[BANK0 ] unsigned short 
 12134 ;; Return value:  Size  Location     Type
 12135 ;;                  2    0[BANK0 ] unsigned short 
 12136 ;; Registers used:
 12137 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 12138 ;; Tracked objects:
 12139 ;;		On entry : 0/0
 12140 ;;		On exit  : 0/0
 12141 ;;		Unchanged: 0/0
 12142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12143 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12144 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12145 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12146 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12147 ;;Total ram usage:        7 bytes
 12148 ;; Hardware stack levels used: 1
 12149 ;; Hardware stack levels required when called: 5
 12150 ;; This function calls:
 12151 ;;		Nothing
 12152 ;; This function is called by:
 12153 ;;		_storeEPROMBuild
 12154 ;;		_parseEPROMReading
 12155 ;; This function uses a non-reentrant model
 12156 ;;
 12157                           
 12158                           
 12159                           ;psect for function _operADDR
 12160  08FE                     _operADDR:
 12161                           
 12162                           ;incstack = 0
 12163                           ; Regs used in _operADDR: [wreg-fsr0h+status,2+status,0]
 12164                           ;operADDR@operation stored from wreg
 12165  08FE  0020               	movlb	0	; select bank0
 12166  08FF  00A4               	movwf	operADDR@operation
 12167  0900                     l6041:
 12168                           
 12169                           ;EPROMlib.c: 8:     uint16_t dataAddr;;EPROMlib.c: 9:     switch (operation){
 12170  0900  291A               	goto	l6045
 12171  0901                     l1309:	
 12172                           ;EPROMlib.c: 10:         case 100:
 12173                           
 12174                           
 12175                           ;EPROMlib.c: 11:             dataAddr = 0xAB01;
 12176  0901  3001               	movlw	1
 12177  0902  00A5               	movwf	operADDR@dataAddr
 12178  0903  30AB               	movlw	171
 12179  0904  00A6               	movwf	operADDR@dataAddr+1
 12180                           
 12181                           ;EPROMlib.c: 12:             break;
 12182  0905  2930               	goto	l6047
 12183  0906                     l1311:	
 12184                           ;EPROMlib.c: 14:         case 101:
 12185                           
 12186                           
 12187                           ;EPROMlib.c: 15:             dataAddr = 0xAB07;
 12188  0906  3007               	movlw	7
 12189  0907  00A5               	movwf	operADDR@dataAddr
 12190  0908  30AB               	movlw	171
 12191  0909  00A6               	movwf	operADDR@dataAddr+1
 12192                           
 12193                           ;EPROMlib.c: 16:             break;
 12194  090A  2930               	goto	l6047
 12195  090B                     l1312:	
 12196                           ;EPROMlib.c: 18:         case 102:
 12197                           
 12198                           
 12199                           ;EPROMlib.c: 19:             dataAddr = 0xAB0D;
 12200  090B  300D               	movlw	13
 12201  090C  00A5               	movwf	operADDR@dataAddr
 12202  090D  30AB               	movlw	171
 12203  090E  00A6               	movwf	operADDR@dataAddr+1
 12204                           
 12205                           ;EPROMlib.c: 20:             break;
 12206  090F  2930               	goto	l6047
 12207  0910                     l1313:	
 12208                           ;EPROMlib.c: 22:         case 103:
 12209                           
 12210                           
 12211                           ;EPROMlib.c: 23:             dataAddr = 0xAB13;
 12212  0910  3013               	movlw	19
 12213  0911  00A5               	movwf	operADDR@dataAddr
 12214  0912  30AB               	movlw	171
 12215  0913  00A6               	movwf	operADDR@dataAddr+1
 12216                           
 12217                           ;EPROMlib.c: 24:             break;
 12218  0914  2930               	goto	l6047
 12219  0915                     l1314:	
 12220                           ;EPROMlib.c: 26:         default:
 12221                           
 12222                           
 12223                           ;EPROMlib.c: 27:             dataAddr = 0xBB13;
 12224  0915  3013               	movlw	19
 12225  0916  00A5               	movwf	operADDR@dataAddr
 12226  0917  30BB               	movlw	187
 12227  0918  00A6               	movwf	operADDR@dataAddr+1
 12228                           
 12229                           ;EPROMlib.c: 28:             break;
 12230  0919  2930               	goto	l6047
 12231  091A                     l6045:
 12232  091A  0824               	movf	operADDR@operation,w
 12233  091B  00A2               	movwf	??_operADDR
 12234  091C  01A3               	clrf	??_operADDR+1
 12235                           
 12236                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12237                           ; Switch size 1, requested type "simple"
 12238                           ; Number of cases is 1, Range of values is 0 to 0
 12239                           ; switch strategies available:
 12240                           ; Name         Instructions Cycles
 12241                           ; simple_byte            4     3 (average)
 12242                           ; direct_byte            8     6 (fixed)
 12243                           ; jumptable            260     6 (fixed)
 12244                           ;	Chosen strategy is simple_byte
 12245  091D  0823               	movf	??_operADDR+1,w
 12246  091E  3A00               	xorlw	0	; case 0
 12247  091F  1903               	skipnz
 12248  0920  2922               	goto	l6365
 12249  0921  2915               	goto	l1314
 12250  0922                     l6365:
 12251                           
 12252                           ; Switch size 1, requested type "simple"
 12253                           ; Number of cases is 4, Range of values is 100 to 103
 12254                           ; switch strategies available:
 12255                           ; Name         Instructions Cycles
 12256                           ; simple_byte           13     7 (average)
 12257                           ; direct_byte           17     9 (fixed)
 12258                           ; jumptable            263     9 (fixed)
 12259                           ;	Chosen strategy is simple_byte
 12260  0922  0822               	movf	??_operADDR,w
 12261  0923  3A64               	xorlw	100	; case 100
 12262  0924  1903               	skipnz
 12263  0925  2901               	goto	l1309
 12264  0926  3A01               	xorlw	1	; case 101
 12265  0927  1903               	skipnz
 12266  0928  2906               	goto	l1311
 12267  0929  3A03               	xorlw	3	; case 102
 12268  092A  1903               	skipnz
 12269  092B  290B               	goto	l1312
 12270  092C  3A01               	xorlw	1	; case 103
 12271  092D  1903               	skipnz
 12272  092E  2910               	goto	l1313
 12273  092F  2915               	goto	l1314
 12274  0930                     l6047:
 12275                           
 12276                           ;EPROMlib.c: 31:     return dataAddr;
 12277  0930  0826               	movf	operADDR@dataAddr+1,w
 12278  0931  00A1               	movwf	?_operADDR+1
 12279  0932  0825               	movf	operADDR@dataAddr,w
 12280  0933  00A0               	movwf	?_operADDR
 12281  0934                     l1315:
 12282  0934  0008               	return
 12283  0935                     __end_of_operADDR:
 12284                           
 12285                           	psect	text21
 12286  0745                     __ptext21:	
 12287 ;; *************** function _parseEPROMInitialization *****************
 12288 ;; Defined at:
 12289 ;;		line 72 in file "EPROMlib.c"
 12290 ;; Parameters:    Size  Location     Type
 12291 ;;  magic_word      1    wreg     PTR unsigned char 
 12292 ;;		 -> main@magic_word(1), 
 12293 ;;  NREG            1    2[BANK0 ] PTR unsigned char 
 12294 ;;		 -> main@NREG(1), 
 12295 ;;  NR              1    3[BANK0 ] PTR unsigned char 
 12296 ;;		 -> main@NR(1), 
 12297 ;;  WI              1    4[BANK0 ] PTR unsigned char 
 12298 ;;		 -> main@WI(1), 
 12299 ;;  RI              1    5[BANK0 ] PTR unsigned char 
 12300 ;;		 -> main@RI(1), 
 12301 ;;  PMON            1    6[BANK0 ] PTR unsigned char 
 12302 ;;		 -> main@PMON(1), 
 12303 ;;  TALA            1    7[BANK0 ] PTR unsigned char 
 12304 ;;		 -> main@TALA(1), 
 12305 ;;  ALAT            1    8[BANK0 ] PTR unsigned char 
 12306 ;;		 -> main@ALAT(1), 
 12307 ;;  ALAL            1    9[BANK0 ] PTR unsigned char 
 12308 ;;		 -> main@ALAL(1), 
 12309 ;;  ALAF            1   10[BANK0 ] PTR unsigned char 
 12310 ;;		 -> main@ALAF(1), 
 12311 ;;  CLKH            1   11[BANK0 ] PTR unsigned char 
 12312 ;;		 -> main@CLKH(1), 
 12313 ;;  CLKM            1   12[BANK0 ] PTR unsigned char 
 12314 ;;		 -> main@CLKM(1), 
 12315 ;;  checksum        1   13[BANK0 ] PTR unsigned char 
 12316 ;;		 -> main@checksum(1), 
 12317 ;; Auto vars:     Size  Location     Type
 12318 ;;  magic_word      1   15[BANK0 ] PTR unsigned char 
 12319 ;;		 -> main@magic_word(1), 
 12320 ;; Return value:  Size  Location     Type
 12321 ;;                  1    wreg      void 
 12322 ;; Registers used:
 12323 ;;		wreg, fsr1l, fsr1h, status,2, pclath, cstack
 12324 ;; Tracked objects:
 12325 ;;		On entry : 0/0
 12326 ;;		On exit  : 0/0
 12327 ;;		Unchanged: 0/0
 12328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12329 ;;      Params:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12330 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12331 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12332 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12333 ;;Total ram usage:       14 bytes
 12334 ;; Hardware stack levels used: 1
 12335 ;; Hardware stack levels required when called: 6
 12336 ;; This function calls:
 12337 ;;		_DATAEE_ReadByte
 12338 ;; This function is called by:
 12339 ;;		_main
 12340 ;; This function uses a non-reentrant model
 12341 ;;
 12342                           
 12343                           
 12344                           ;psect for function _parseEPROMInitialization
 12345  0745                     _parseEPROMInitialization:
 12346                           
 12347                           ;incstack = 0
 12348                           ; Regs used in _parseEPROMInitialization: [wreg+fsr1l+fsr1h+status,2+pclath+cstack]
 12349                           ;parseEPROMInitialization@magic_word stored from wreg
 12350  0745  0020               	movlb	0	; select bank0
 12351  0746  00AF               	movwf	parseEPROMInitialization@magic_word
 12352  0747                     l6219:
 12353                           
 12354                           ;EPROMlib.c: 73:     *magic_word = DATAEE_ReadByte(0xAA01);
 12355  0747  3001               	movlw	1
 12356  0748  00A0               	movwf	DATAEE_ReadByte@bAdd
 12357  0749  30AA               	movlw	170
 12358  074A  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12359  074B  3196  26BD  3187   	fcall	_DATAEE_ReadByte
 12360  074E  0020               	movlb	0	; select bank0
 12361  074F  00AE               	movwf	??_parseEPROMInitialization
 12362  0750  082F               	movf	parseEPROMInitialization@magic_word,w
 12363  0751  0086               	movwf	6
 12364  0752  0187               	clrf	7
 12365  0753  082E               	movf	??_parseEPROMInitialization,w
 12366  0754  0081               	movwf	1
 12367                           
 12368                           ;EPROMlib.c: 74:     *NREG = DATAEE_ReadByte(0xAA01 + 1);
 12369  0755  3002               	movlw	2
 12370  0756  00A0               	movwf	DATAEE_ReadByte@bAdd
 12371  0757  30AA               	movlw	170
 12372  0758  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12373  0759  3196  26BD  3187   	fcall	_DATAEE_ReadByte
 12374  075C  0020               	movlb	0	; select bank0
 12375  075D  00AE               	movwf	??_parseEPROMInitialization
 12376  075E  0822               	movf	parseEPROMInitialization@NREG,w
 12377  075F  0086               	movwf	6
 12378  0760  0187               	clrf	7
 12379  0761  082E               	movf	??_parseEPROMInitialization,w
 12380  0762  0081               	movwf	1
 12381                           
 12382                           ;EPROMlib.c: 75:     *NR = DATAEE_ReadByte(0xAA01 + 2);
 12383  0763  3003               	movlw	3
 12384  0764  00A0               	movwf	DATAEE_ReadByte@bAdd
 12385  0765  30AA               	movlw	170
 12386  0766  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12387  0767  3196  26BD  3187   	fcall	_DATAEE_ReadByte
 12388  076A  0020               	movlb	0	; select bank0
 12389  076B  00AE               	movwf	??_parseEPROMInitialization
 12390  076C  0823               	movf	parseEPROMInitialization@NR,w
 12391  076D  0086               	movwf	6
 12392  076E  0187               	clrf	7
 12393  076F  082E               	movf	??_parseEPROMInitialization,w
 12394  0770  0081               	movwf	1
 12395                           
 12396                           ;EPROMlib.c: 76:     *WI = DATAEE_ReadByte(0xAA01 + 3);
 12397  0771  3004               	movlw	4
 12398  0772  00A0               	movwf	DATAEE_ReadByte@bAdd
 12399  0773  30AA               	movlw	170
 12400  0774  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12401  0775  3196  26BD  3187   	fcall	_DATAEE_ReadByte
 12402  0778  0020               	movlb	0	; select bank0
 12403  0779  00AE               	movwf	??_parseEPROMInitialization
 12404  077A  0824               	movf	parseEPROMInitialization@WI,w
 12405  077B  0086               	movwf	6
 12406  077C  0187               	clrf	7
 12407  077D  082E               	movf	??_parseEPROMInitialization,w
 12408  077E  0081               	movwf	1
 12409                           
 12410                           ;EPROMlib.c: 77:     *RI = DATAEE_ReadByte(0xAA01 + 4);
 12411  077F  3005               	movlw	5
 12412  0780  00A0               	movwf	DATAEE_ReadByte@bAdd
 12413  0781  30AA               	movlw	170
 12414  0782  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12415  0783  3196  26BD  3187   	fcall	_DATAEE_ReadByte
 12416  0786  0020               	movlb	0	; select bank0
 12417  0787  00AE               	movwf	??_parseEPROMInitialization
 12418  0788  0825               	movf	parseEPROMInitialization@RI,w
 12419  0789  0086               	movwf	6
 12420  078A  0187               	clrf	7
 12421  078B  082E               	movf	??_parseEPROMInitialization,w
 12422  078C  0081               	movwf	1
 12423                           
 12424                           ;EPROMlib.c: 78:     *PMON = DATAEE_ReadByte(0xAA01 + 5);
 12425  078D  3006               	movlw	6
 12426  078E  00A0               	movwf	DATAEE_ReadByte@bAdd
 12427  078F  30AA               	movlw	170
 12428  0790  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12429  0791  3196  26BD  3187   	fcall	_DATAEE_ReadByte
 12430  0794  0020               	movlb	0	; select bank0
 12431  0795  00AE               	movwf	??_parseEPROMInitialization
 12432  0796  0826               	movf	parseEPROMInitialization@PMON,w
 12433  0797  0086               	movwf	6
 12434  0798  0187               	clrf	7
 12435  0799  082E               	movf	??_parseEPROMInitialization,w
 12436  079A  0081               	movwf	1
 12437                           
 12438                           ;EPROMlib.c: 79:     *TALA = DATAEE_ReadByte(0xAA01 + 6);
 12439  079B  3007               	movlw	7
 12440  079C  00A0               	movwf	DATAEE_ReadByte@bAdd
 12441  079D  30AA               	movlw	170
 12442  079E  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12443  079F  3196  26BD  3187   	fcall	_DATAEE_ReadByte
 12444  07A2  0020               	movlb	0	; select bank0
 12445  07A3  00AE               	movwf	??_parseEPROMInitialization
 12446  07A4  0827               	movf	parseEPROMInitialization@TALA,w
 12447  07A5  0086               	movwf	6
 12448  07A6  0187               	clrf	7
 12449  07A7  082E               	movf	??_parseEPROMInitialization,w
 12450  07A8  0081               	movwf	1
 12451                           
 12452                           ;EPROMlib.c: 80:     *ALAT = DATAEE_ReadByte(0xAA01 + 7);
 12453  07A9  3008               	movlw	8
 12454  07AA  00A0               	movwf	DATAEE_ReadByte@bAdd
 12455  07AB  30AA               	movlw	170
 12456  07AC  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12457  07AD  3196  26BD  3187   	fcall	_DATAEE_ReadByte
 12458  07B0  0020               	movlb	0	; select bank0
 12459  07B1  00AE               	movwf	??_parseEPROMInitialization
 12460  07B2  0828               	movf	parseEPROMInitialization@ALAT,w
 12461  07B3  0086               	movwf	6
 12462  07B4  0187               	clrf	7
 12463  07B5  082E               	movf	??_parseEPROMInitialization,w
 12464  07B6  0081               	movwf	1
 12465                           
 12466                           ;EPROMlib.c: 81:     *ALAL = DATAEE_ReadByte(0xAA01 + 8);
 12467  07B7  3009               	movlw	9
 12468  07B8  00A0               	movwf	DATAEE_ReadByte@bAdd
 12469  07B9  30AA               	movlw	170
 12470  07BA  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12471  07BB  3196  26BD  3187   	fcall	_DATAEE_ReadByte
 12472  07BE  0020               	movlb	0	; select bank0
 12473  07BF  00AE               	movwf	??_parseEPROMInitialization
 12474  07C0  0829               	movf	parseEPROMInitialization@ALAL,w
 12475  07C1  0086               	movwf	6
 12476  07C2  0187               	clrf	7
 12477  07C3  082E               	movf	??_parseEPROMInitialization,w
 12478  07C4  0081               	movwf	1
 12479                           
 12480                           ;EPROMlib.c: 82:     *ALAF = DATAEE_ReadByte(0xAA01 + 9);
 12481  07C5  300A               	movlw	10
 12482  07C6  00A0               	movwf	DATAEE_ReadByte@bAdd
 12483  07C7  30AA               	movlw	170
 12484  07C8  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12485  07C9  3196  26BD  3187   	fcall	_DATAEE_ReadByte
 12486  07CC  0020               	movlb	0	; select bank0
 12487  07CD  00AE               	movwf	??_parseEPROMInitialization
 12488  07CE  082A               	movf	parseEPROMInitialization@ALAF,w
 12489  07CF  0086               	movwf	6
 12490  07D0  0187               	clrf	7
 12491  07D1  082E               	movf	??_parseEPROMInitialization,w
 12492  07D2  0081               	movwf	1
 12493                           
 12494                           ;EPROMlib.c: 83:     *CLKH = DATAEE_ReadByte(0xAA01 + 10);
 12495  07D3  300B               	movlw	11
 12496  07D4  00A0               	movwf	DATAEE_ReadByte@bAdd
 12497  07D5  30AA               	movlw	170
 12498  07D6  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12499  07D7  3196  26BD  3187   	fcall	_DATAEE_ReadByte
 12500  07DA  0020               	movlb	0	; select bank0
 12501  07DB  00AE               	movwf	??_parseEPROMInitialization
 12502  07DC  082B               	movf	parseEPROMInitialization@CLKH,w
 12503  07DD  0086               	movwf	6
 12504  07DE  0187               	clrf	7
 12505  07DF  082E               	movf	??_parseEPROMInitialization,w
 12506  07E0  0081               	movwf	1
 12507                           
 12508                           ;EPROMlib.c: 84:     *CLKM = DATAEE_ReadByte(0xAA01 + 11);
 12509  07E1  300C               	movlw	12
 12510  07E2  00A0               	movwf	DATAEE_ReadByte@bAdd
 12511  07E3  30AA               	movlw	170
 12512  07E4  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12513  07E5  3196  26BD  3187   	fcall	_DATAEE_ReadByte
 12514  07E8  0020               	movlb	0	; select bank0
 12515  07E9  00AE               	movwf	??_parseEPROMInitialization
 12516  07EA  082C               	movf	parseEPROMInitialization@CLKM,w
 12517  07EB  0086               	movwf	6
 12518  07EC  0187               	clrf	7
 12519  07ED  082E               	movf	??_parseEPROMInitialization,w
 12520  07EE  0081               	movwf	1
 12521                           
 12522                           ;EPROMlib.c: 85:     *checksum = DATAEE_ReadByte(0xAA01 + 12);
 12523  07EF  300D               	movlw	13
 12524  07F0  00A0               	movwf	DATAEE_ReadByte@bAdd
 12525  07F1  30AA               	movlw	170
 12526  07F2  00A1               	movwf	DATAEE_ReadByte@bAdd+1
 12527  07F3  3196  26BD  3187   	fcall	_DATAEE_ReadByte
 12528  07F6  0020               	movlb	0	; select bank0
 12529  07F7  00AE               	movwf	??_parseEPROMInitialization
 12530  07F8  082D               	movf	parseEPROMInitialization@checksum,w
 12531  07F9  0086               	movwf	6
 12532  07FA  0187               	clrf	7
 12533  07FB  082E               	movf	??_parseEPROMInitialization,w
 12534  07FC  0081               	movwf	1
 12535  07FD                     l1327:
 12536  07FD  0008               	return
 12537  07FE                     __end_of_parseEPROMInitialization:
 12538                           
 12539                           	psect	text22
 12540  16BD                     __ptext22:	
 12541 ;; *************** function _DATAEE_ReadByte *****************
 12542 ;; Defined at:
 12543 ;;		line 202 in file "mcc_generated_files/memory.c"
 12544 ;; Parameters:    Size  Location     Type
 12545 ;;  bAdd            2    0[BANK0 ] unsigned short 
 12546 ;; Auto vars:     Size  Location     Type
 12547 ;;		None
 12548 ;; Return value:  Size  Location     Type
 12549 ;;                  1    wreg      unsigned char 
 12550 ;; Registers used:
 12551 ;;		wreg, status,2
 12552 ;; Tracked objects:
 12553 ;;		On entry : 0/0
 12554 ;;		On exit  : 0/0
 12555 ;;		Unchanged: 0/0
 12556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12557 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12560 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12561 ;;Total ram usage:        2 bytes
 12562 ;; Hardware stack levels used: 1
 12563 ;; Hardware stack levels required when called: 5
 12564 ;; This function calls:
 12565 ;;		Nothing
 12566 ;; This function is called by:
 12567 ;;		_main
 12568 ;;		_parseEPROMReading
 12569 ;;		_parseEPROMInitialization
 12570 ;; This function uses a non-reentrant model
 12571 ;;
 12572                           
 12573                           
 12574                           ;psect for function _DATAEE_ReadByte
 12575  16BD                     _DATAEE_ReadByte:
 12576  16BD                     l6025:	
 12577                           ;incstack = 0
 12578                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 12579                           
 12580                           
 12581                           ;mcc_generated_files/memory.c: 202: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 203: {;mcc_generated_files/memory.c: 204:     NVMADRH = ((bAdd >> 8) & 
      +                          0xFF);
 12582  16BD  0020               	movlb	0	; select bank0
 12583  16BE  0821               	movf	DATAEE_ReadByte@bAdd+1,w
 12584  16BF  0030               	movlb	16	; select bank16
 12585  16C0  009B               	movwf	27	;volatile
 12586  16C1                     l6027:
 12587                           
 12588                           ;mcc_generated_files/memory.c: 205:     NVMADRL = (bAdd & 0xFF);
 12589  16C1  0020               	movlb	0	; select bank0
 12590  16C2  0820               	movf	DATAEE_ReadByte@bAdd,w
 12591  16C3  0030               	movlb	16	; select bank16
 12592  16C4  009A               	movwf	26	;volatile
 12593  16C5                     l6029:
 12594                           
 12595                           ;mcc_generated_files/memory.c: 206:     NVMCON1bits.NVMREGS = 1;
 12596  16C5  171E               	bsf	30,6	;volsfr
 12597  16C6                     l6031:
 12598                           
 12599                           ;mcc_generated_files/memory.c: 207:     NVMCON1bits.RD = 1;
 12600  16C6  141E               	bsf	30,0	;volsfr
 12601  16C7                     l6033:
 12602                           
 12603                           ;mcc_generated_files/memory.c: 208:     __nop();
 12604  16C7  0000               	nop
 12605  16C8                     l6035:
 12606                           
 12607                           ;mcc_generated_files/memory.c: 209:     __nop();
 12608  16C8  0000               	nop
 12609  16C9                     l6037:
 12610                           
 12611                           ;mcc_generated_files/memory.c: 211:     return (NVMDATL);
 12612  16C9  0030               	movlb	16	; select bank16
 12613  16CA  081C               	movf	28,w	;volatile
 12614  16CB                     l771:
 12615  16CB  0008               	return
 12616  16CC                     __end_of_DATAEE_ReadByte:
 12617                           
 12618                           	psect	text23
 12619  0BFA                     __ptext23:	
 12620 ;; *************** function _initializeEPROM *****************
 12621 ;; Defined at:
 12622 ;;		line 34 in file "EPROMlib.c"
 12623 ;; Parameters:    Size  Location     Type
 12624 ;;		None
 12625 ;; Auto vars:     Size  Location     Type
 12626 ;;		None
 12627 ;; Return value:  Size  Location     Type
 12628 ;;                  1    wreg      void 
 12629 ;; Registers used:
 12630 ;;		wreg, status,2, status,0, pclath, cstack
 12631 ;; Tracked objects:
 12632 ;;		On entry : 0/0
 12633 ;;		On exit  : 0/0
 12634 ;;		Unchanged: 0/0
 12635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12638 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12639 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12640 ;;Total ram usage:        1 bytes
 12641 ;; Hardware stack levels used: 1
 12642 ;; Hardware stack levels required when called: 6
 12643 ;; This function calls:
 12644 ;;		_DATAEE_WriteByte
 12645 ;; This function is called by:
 12646 ;;		_main
 12647 ;; This function uses a non-reentrant model
 12648 ;;
 12649                           
 12650                           
 12651                           ;psect for function _initializeEPROM
 12652  0BFA                     _initializeEPROM:
 12653  0BFA                     l6193:	
 12654                           ;incstack = 0
 12655                           ; Regs used in _initializeEPROM: [wreg+status,2+status,0+pclath+cstack]
 12656                           
 12657                           
 12658                           ;EPROMlib.c: 35:     DATAEE_WriteByte(0xAA01, 0xAA);
 12659  0BFA  3001               	movlw	1
 12660  0BFB  0020               	movlb	0	; select bank0
 12661  0BFC  00A0               	movwf	DATAEE_WriteByte@bAdd
 12662  0BFD  30AA               	movlw	170
 12663  0BFE  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12664  0BFF  30AA               	movlw	170
 12665  0C00  00A4               	movwf	??_initializeEPROM
 12666  0C01  0824               	movf	??_initializeEPROM,w
 12667  0C02  00A2               	movwf	DATAEE_WriteByte@bData
 12668  0C03  3188  205A  318B   	fcall	_DATAEE_WriteByte
 12669                           
 12670                           ;EPROMlib.c: 36:     DATAEE_WriteByte(0xAA01 + 1, 10);
 12671  0C06  3002               	movlw	2
 12672  0C07  0020               	movlb	0	; select bank0
 12673  0C08  00A0               	movwf	DATAEE_WriteByte@bAdd
 12674  0C09  30AA               	movlw	170
 12675  0C0A  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12676  0C0B  300A               	movlw	10
 12677  0C0C  00A4               	movwf	??_initializeEPROM
 12678  0C0D  0824               	movf	??_initializeEPROM,w
 12679  0C0E  00A2               	movwf	DATAEE_WriteByte@bData
 12680  0C0F  3188  205A  318B   	fcall	_DATAEE_WriteByte
 12681                           
 12682                           ;EPROMlib.c: 37:     DATAEE_WriteByte(0xAA01 + 2, 0);
 12683  0C12  3003               	movlw	3
 12684  0C13  0020               	movlb	0	; select bank0
 12685  0C14  00A0               	movwf	DATAEE_WriteByte@bAdd
 12686  0C15  30AA               	movlw	170
 12687  0C16  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12688  0C17  01A2               	clrf	DATAEE_WriteByte@bData
 12689  0C18  3188  205A  318B   	fcall	_DATAEE_WriteByte
 12690                           
 12691                           ;EPROMlib.c: 38:     DATAEE_WriteByte(0xAA01 + 3, 0);
 12692  0C1B  3004               	movlw	4
 12693  0C1C  0020               	movlb	0	; select bank0
 12694  0C1D  00A0               	movwf	DATAEE_WriteByte@bAdd
 12695  0C1E  30AA               	movlw	170
 12696  0C1F  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12697  0C20  01A2               	clrf	DATAEE_WriteByte@bData
 12698  0C21  3188  205A  318B   	fcall	_DATAEE_WriteByte
 12699                           
 12700                           ;EPROMlib.c: 39:     DATAEE_WriteByte(0xAA01 + 4, 0);
 12701  0C24  3005               	movlw	5
 12702  0C25  0020               	movlb	0	; select bank0
 12703  0C26  00A0               	movwf	DATAEE_WriteByte@bAdd
 12704  0C27  30AA               	movlw	170
 12705  0C28  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12706  0C29  01A2               	clrf	DATAEE_WriteByte@bData
 12707  0C2A  3188  205A  318B   	fcall	_DATAEE_WriteByte
 12708                           
 12709                           ;EPROMlib.c: 40:     DATAEE_WriteByte(0xAA01 + 5, 5);
 12710  0C2D  3006               	movlw	6
 12711  0C2E  0020               	movlb	0	; select bank0
 12712  0C2F  00A0               	movwf	DATAEE_WriteByte@bAdd
 12713  0C30  30AA               	movlw	170
 12714  0C31  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12715  0C32  3005               	movlw	5
 12716  0C33  00A4               	movwf	??_initializeEPROM
 12717  0C34  0824               	movf	??_initializeEPROM,w
 12718  0C35  00A2               	movwf	DATAEE_WriteByte@bData
 12719  0C36  3188  205A  318B   	fcall	_DATAEE_WriteByte
 12720                           
 12721                           ;EPROMlib.c: 41:     DATAEE_WriteByte(0xAA01 + 6, 3);
 12722  0C39  3007               	movlw	7
 12723  0C3A  0020               	movlb	0	; select bank0
 12724  0C3B  00A0               	movwf	DATAEE_WriteByte@bAdd
 12725  0C3C  30AA               	movlw	170
 12726  0C3D  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12727  0C3E  3003               	movlw	3
 12728  0C3F  00A4               	movwf	??_initializeEPROM
 12729  0C40  0824               	movf	??_initializeEPROM,w
 12730  0C41  00A2               	movwf	DATAEE_WriteByte@bData
 12731  0C42  3188  205A  318B   	fcall	_DATAEE_WriteByte
 12732                           
 12733                           ;EPROMlib.c: 42:     DATAEE_WriteByte(0xAA01 + 7, 25);
 12734  0C45  3008               	movlw	8
 12735  0C46  0020               	movlb	0	; select bank0
 12736  0C47  00A0               	movwf	DATAEE_WriteByte@bAdd
 12737  0C48  30AA               	movlw	170
 12738  0C49  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12739  0C4A  3019               	movlw	25
 12740  0C4B  00A4               	movwf	??_initializeEPROM
 12741  0C4C  0824               	movf	??_initializeEPROM,w
 12742  0C4D  00A2               	movwf	DATAEE_WriteByte@bData
 12743  0C4E  3188  205A  318B   	fcall	_DATAEE_WriteByte
 12744                           
 12745                           ;EPROMlib.c: 43:     DATAEE_WriteByte(0xAA01 + 8, 2);
 12746  0C51  3009               	movlw	9
 12747  0C52  0020               	movlb	0	; select bank0
 12748  0C53  00A0               	movwf	DATAEE_WriteByte@bAdd
 12749  0C54  30AA               	movlw	170
 12750  0C55  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12751  0C56  3002               	movlw	2
 12752  0C57  00A4               	movwf	??_initializeEPROM
 12753  0C58  0824               	movf	??_initializeEPROM,w
 12754  0C59  00A2               	movwf	DATAEE_WriteByte@bData
 12755  0C5A  3188  205A  318B   	fcall	_DATAEE_WriteByte
 12756                           
 12757                           ;EPROMlib.c: 44:     DATAEE_WriteByte(0xAA01 + 9, 0);
 12758  0C5D  300A               	movlw	10
 12759  0C5E  0020               	movlb	0	; select bank0
 12760  0C5F  00A0               	movwf	DATAEE_WriteByte@bAdd
 12761  0C60  30AA               	movlw	170
 12762  0C61  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12763  0C62  01A2               	clrf	DATAEE_WriteByte@bData
 12764  0C63  3188  205A  318B   	fcall	_DATAEE_WriteByte
 12765                           
 12766                           ;EPROMlib.c: 45:     DATAEE_WriteByte(0xAA01 + 10, 12);
 12767  0C66  300B               	movlw	11
 12768  0C67  0020               	movlb	0	; select bank0
 12769  0C68  00A0               	movwf	DATAEE_WriteByte@bAdd
 12770  0C69  30AA               	movlw	170
 12771  0C6A  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12772  0C6B  300C               	movlw	12
 12773  0C6C  00A4               	movwf	??_initializeEPROM
 12774  0C6D  0824               	movf	??_initializeEPROM,w
 12775  0C6E  00A2               	movwf	DATAEE_WriteByte@bData
 12776  0C6F  3188  205A  318B   	fcall	_DATAEE_WriteByte
 12777                           
 12778                           ;EPROMlib.c: 46:     DATAEE_WriteByte(0xAA01 + 11, 0);
 12779  0C72  300C               	movlw	12
 12780  0C73  0020               	movlb	0	; select bank0
 12781  0C74  00A0               	movwf	DATAEE_WriteByte@bAdd
 12782  0C75  30AA               	movlw	170
 12783  0C76  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12784  0C77  01A2               	clrf	DATAEE_WriteByte@bData
 12785  0C78  3188  205A  318B   	fcall	_DATAEE_WriteByte
 12786                           
 12787                           ;EPROMlib.c: 47:     DATAEE_WriteByte(0xAA01 + 12, 0XE3);
 12788  0C7B  300D               	movlw	13
 12789  0C7C  0020               	movlb	0	; select bank0
 12790  0C7D  00A0               	movwf	DATAEE_WriteByte@bAdd
 12791  0C7E  30AA               	movlw	170
 12792  0C7F  00A1               	movwf	DATAEE_WriteByte@bAdd+1
 12793  0C80  30E3               	movlw	227
 12794  0C81  00A4               	movwf	??_initializeEPROM
 12795  0C82  0824               	movf	??_initializeEPROM,w
 12796  0C83  00A2               	movwf	DATAEE_WriteByte@bData
 12797  0C84  3188  205A  318B   	fcall	_DATAEE_WriteByte
 12798  0C87                     l1318:
 12799  0C87  0008               	return
 12800  0C88                     __end_of_initializeEPROM:
 12801                           
 12802                           	psect	text24
 12803  085A                     __ptext24:	
 12804 ;; *************** function _DATAEE_WriteByte *****************
 12805 ;; Defined at:
 12806 ;;		line 180 in file "mcc_generated_files/memory.c"
 12807 ;; Parameters:    Size  Location     Type
 12808 ;;  bAdd            2    0[BANK0 ] unsigned short 
 12809 ;;  bData           1    2[BANK0 ] unsigned char 
 12810 ;; Auto vars:     Size  Location     Type
 12811 ;;  GIEBitValue     1    3[BANK0 ] unsigned char 
 12812 ;; Return value:  Size  Location     Type
 12813 ;;                  1    wreg      void 
 12814 ;; Registers used:
 12815 ;;		wreg, status,2, status,0
 12816 ;; Tracked objects:
 12817 ;;		On entry : 0/0
 12818 ;;		On exit  : 0/0
 12819 ;;		Unchanged: 0/0
 12820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12821 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12822 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12824 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12825 ;;Total ram usage:        4 bytes
 12826 ;; Hardware stack levels used: 1
 12827 ;; Hardware stack levels required when called: 5
 12828 ;; This function calls:
 12829 ;;		Nothing
 12830 ;; This function is called by:
 12831 ;;		_main
 12832 ;;		_initializeEPROM
 12833 ;;		_storeEPROMBuild
 12834 ;; This function uses a non-reentrant model
 12835 ;;
 12836                           
 12837                           
 12838                           ;psect for function _DATAEE_WriteByte
 12839  085A                     _DATAEE_WriteByte:
 12840  085A                     l6005:	
 12841                           ;incstack = 0
 12842                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 12843                           
 12844                           
 12845                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
 12846  085A  3000               	movlw	0
 12847  085B  1B8B               	btfsc	11,7	;volatile
 12848  085C  3001               	movlw	1
 12849  085D  0020               	movlb	0	; select bank0
 12850  085E  00A3               	movwf	DATAEE_WriteByte@GIEBitValue
 12851                           
 12852                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
 12853  085F  0821               	movf	DATAEE_WriteByte@bAdd+1,w
 12854  0860  0030               	movlb	16	; select bank16
 12855  0861  009B               	movwf	27	;volatile
 12856  0862                     l6007:
 12857                           
 12858                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
 12859  0862  0020               	movlb	0	; select bank0
 12860  0863  0820               	movf	DATAEE_WriteByte@bAdd,w
 12861  0864  0030               	movlb	16	; select bank16
 12862  0865  009A               	movwf	26	;volatile
 12863  0866                     l6009:
 12864                           
 12865                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
 12866  0866  0020               	movlb	0	; select bank0
 12867  0867  0822               	movf	DATAEE_WriteByte@bData,w
 12868  0868  0030               	movlb	16	; select bank16
 12869  0869  009C               	movwf	28	;volatile
 12870  086A                     l6011:
 12871                           
 12872                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
 12873  086A  171E               	bsf	30,6	;volsfr
 12874  086B                     l6013:
 12875                           
 12876                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
 12877  086B  151E               	bsf	30,2	;volsfr
 12878  086C                     l6015:
 12879                           
 12880                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
 12881  086C  138B               	bcf	11,7	;volatile
 12882  086D                     l6017:
 12883                           
 12884                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
 12885  086D  3055               	movlw	85
 12886  086E  009F               	movwf	31	;volsfr
 12887  086F                     l6019:
 12888                           
 12889                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
 12890  086F  30AA               	movlw	170
 12891  0870  009F               	movwf	31	;volsfr
 12892  0871                     l6021:
 12893                           
 12894                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
 12895  0871  149E               	bsf	30,1	;volsfr
 12896  0872                     l765:	
 12897                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
 12898                           
 12899                           
 12900                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
 12901  0872  189E               	btfsc	30,1	;volsfr
 12902  0873  2875               	goto	u5431
 12903  0874  2876               	goto	u5430
 12904  0875                     u5431:
 12905  0875  2872               	goto	l765
 12906  0876                     u5430:
 12907  0876                     l767:
 12908                           
 12909                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
 12910  0876  111E               	bcf	30,2	;volsfr
 12911  0877                     l6023:
 12912                           
 12913                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
 12914  0877  0020               	movlb	0	; select bank0
 12915  0878  0C23               	rrf	DATAEE_WriteByte@GIEBitValue,w
 12916  0879  1C03               	skipc
 12917  087A  138B               	bcf	11,7	;volatile
 12918  087B  1803               	skipnc
 12919  087C  178B               	bsf	11,7	;volatile
 12920  087D                     l768:
 12921  087D  0008               	return
 12922  087E                     __end_of_DATAEE_WriteByte:
 12923                           
 12924                           	psect	text25
 12925  0802                     __ptext25:	
 12926 ;; *************** function _SYSTEM_Initialize *****************
 12927 ;; Defined at:
 12928 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12929 ;; Parameters:    Size  Location     Type
 12930 ;;		None
 12931 ;; Auto vars:     Size  Location     Type
 12932 ;;		None
 12933 ;; Return value:  Size  Location     Type
 12934 ;;                  1    wreg      void 
 12935 ;; Registers used:
 12936 ;;		wreg, status,2, status,0, pclath, cstack
 12937 ;; Tracked objects:
 12938 ;;		On entry : 0/0
 12939 ;;		On exit  : 0/0
 12940 ;;		Unchanged: 0/0
 12941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12946 ;;Total ram usage:        0 bytes
 12947 ;; Hardware stack levels used: 1
 12948 ;; Hardware stack levels required when called: 7
 12949 ;; This function calls:
 12950 ;;		_ADCC_Initialize
 12951 ;;		_I2C1_Initialize
 12952 ;;		_OSCILLATOR_Initialize
 12953 ;;		_PIN_MANAGER_Initialize
 12954 ;;		_PMD_Initialize
 12955 ;;		_TMR1_Initialize
 12956 ;; This function is called by:
 12957 ;;		_main
 12958 ;; This function uses a non-reentrant model
 12959 ;;
 12960                           
 12961                           
 12962                           ;psect for function _SYSTEM_Initialize
 12963  0802                     _SYSTEM_Initialize:
 12964  0802                     l6129:	
 12965                           ;incstack = 0
 12966                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12967                           
 12968                           
 12969                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 12970  0802  3196  265D  3188   	fcall	_PMD_Initialize
 12971  0805                     l6131:
 12972                           
 12973                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
 12974  0805  3196  2680  3188   	fcall	_I2C1_Initialize
 12975  0808                     l6133:
 12976                           
 12977                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 12978  0808  3189  2135  3188   	fcall	_PIN_MANAGER_Initialize
 12979  080B                     l6135:
 12980                           
 12981                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 12982  080B  3196  266E  3188   	fcall	_OSCILLATOR_Initialize
 12983  080E                     l6137:
 12984                           
 12985                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 12986  080E  3197  2702  3188   	fcall	_ADCC_Initialize
 12987  0811                     l6139:
 12988                           
 12989                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
 12990  0811  3197  27DF  3188   	fcall	_TMR1_Initialize
 12991  0814                     l476:
 12992  0814  0008               	return
 12993  0815                     __end_of_SYSTEM_Initialize:
 12994                           
 12995                           	psect	text26
 12996  17DF                     __ptext26:	
 12997 ;; *************** function _TMR1_Initialize *****************
 12998 ;; Defined at:
 12999 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 13000 ;; Parameters:    Size  Location     Type
 13001 ;;		None
 13002 ;; Auto vars:     Size  Location     Type
 13003 ;;		None
 13004 ;; Return value:  Size  Location     Type
 13005 ;;                  1    wreg      void 
 13006 ;; Registers used:
 13007 ;;		wreg, status,2, status,0, pclath, cstack
 13008 ;; Tracked objects:
 13009 ;;		On entry : 0/0
 13010 ;;		On exit  : 0/0
 13011 ;;		Unchanged: 0/0
 13012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13017 ;;Total ram usage:        0 bytes
 13018 ;; Hardware stack levels used: 1
 13019 ;; Hardware stack levels required when called: 6
 13020 ;; This function calls:
 13021 ;;		_TMR1_SetInterruptHandler
 13022 ;; This function is called by:
 13023 ;;		_SYSTEM_Initialize
 13024 ;; This function uses a non-reentrant model
 13025 ;;
 13026                           
 13027                           
 13028                           ;psect for function _TMR1_Initialize
 13029  17DF                     _TMR1_Initialize:
 13030  17DF                     l5987:	
 13031                           ;incstack = 0
 13032                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13033                           
 13034                           
 13035                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
 13036  17DF  0024               	movlb	4	; select bank4
 13037  17E0  018F               	clrf	15	;volatile
 13038                           
 13039                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
 13040  17E1  0190               	clrf	16	;volatile
 13041  17E2                     l5989:
 13042                           
 13043                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
 13044  17E2  3004               	movlw	4
 13045  17E3  0091               	movwf	17	;volatile
 13046  17E4                     l5991:
 13047                           
 13048                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0x86;
 13049  17E4  3086               	movlw	134
 13050  17E5  008D               	movwf	13	;volatile
 13051  17E6                     l5993:
 13052                           
 13053                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xE8;
 13054  17E6  30E8               	movlw	232
 13055  17E7  008C               	movwf	12	;volatile
 13056  17E8                     l5995:
 13057                           
 13058                           ;mcc_generated_files/tmr1.c: 84:     PIR4bits.TMR1IF = 0;
 13059  17E8  002E               	movlb	14	; select bank14
 13060  17E9  1010               	bcf	16,0	;volatile
 13061  17EA                     l5997:
 13062                           
 13063                           ;mcc_generated_files/tmr1.c: 87:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 13064  17EA  0024               	movlb	4	; select bank4
 13065  17EB  080D               	movf	13,w	;volatile
 13066  17EC  0021               	movlb	1	; select bank1
 13067  17ED  00E8               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
 13068  17EE  0024               	movlb	4	; select bank4
 13069  17EF  080C               	movf	12,w	;volatile
 13070  17F0  0021               	movlb	1	; select bank1
 13071  17F1  00E7               	movwf	_timer1ReloadVal^(0+128)	;volatile
 13072  17F2                     l5999:
 13073                           
 13074                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
 13075  17F2  002E               	movlb	14	; select bank14
 13076  17F3  141A               	bsf	26,0	;volatile
 13077  17F4                     l6001:
 13078                           
 13079                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 13080  17F4  30FF               	movlw	low _TMR1_DefaultInterruptHandler
 13081  17F5  0020               	movlb	0	; select bank0
 13082  17F6  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 13083  17F7  3007               	movlw	high _TMR1_DefaultInterruptHandler
 13084  17F8  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 13085  17F9  3196  2677  3197   	fcall	_TMR1_SetInterruptHandler
 13086  17FC                     l6003:
 13087                           
 13088                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x01;
 13089  17FC  3001               	movlw	1
 13090  17FD  0024               	movlb	4	; select bank4
 13091  17FE  008E               	movwf	14	;volatile
 13092  17FF                     l532:
 13093  17FF  0008               	return
 13094  1800                     __end_of_TMR1_Initialize:
 13095                           
 13096                           	psect	text27
 13097  1677                     __ptext27:	
 13098 ;; *************** function _TMR1_SetInterruptHandler *****************
 13099 ;; Defined at:
 13100 ;;		line 185 in file "mcc_generated_files/tmr1.c"
 13101 ;; Parameters:    Size  Location     Type
 13102 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 13103 ;;		 -> timerInterrupt(1), TMR1_DefaultInterruptHandler(1), 
 13104 ;; Auto vars:     Size  Location     Type
 13105 ;;		None
 13106 ;; Return value:  Size  Location     Type
 13107 ;;                  1    wreg      void 
 13108 ;; Registers used:
 13109 ;;		wreg
 13110 ;; Tracked objects:
 13111 ;;		On entry : 0/0
 13112 ;;		On exit  : 0/0
 13113 ;;		Unchanged: 0/0
 13114 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13115 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13118 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13119 ;;Total ram usage:        2 bytes
 13120 ;; Hardware stack levels used: 1
 13121 ;; Hardware stack levels required when called: 5
 13122 ;; This function calls:
 13123 ;;		Nothing
 13124 ;; This function is called by:
 13125 ;;		_TMR1_Initialize
 13126 ;;		_main
 13127 ;; This function uses a non-reentrant model
 13128 ;;
 13129                           
 13130                           
 13131                           ;psect for function _TMR1_SetInterruptHandler
 13132  1677                     _TMR1_SetInterruptHandler:
 13133  1677                     l5809:	
 13134                           ;incstack = 0
 13135                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 13136                           
 13137                           
 13138                           ;mcc_generated_files/tmr1.c: 186:     TMR1_InterruptHandler = InterruptHandler;
 13139  1677  0020               	movlb	0	; select bank0
 13140  1678  0821               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 13141  1679  0021               	movlb	1	; select bank1
 13142  167A  00E6               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
 13143  167B  0020               	movlb	0	; select bank0
 13144  167C  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 13145  167D  0021               	movlb	1	; select bank1
 13146  167E  00E5               	movwf	_TMR1_InterruptHandler^(0+128)
 13147  167F                     l565:
 13148  167F  0008               	return
 13149  1680                     __end_of_TMR1_SetInterruptHandler:
 13150                           
 13151                           	psect	text28
 13152  165D                     __ptext28:	
 13153 ;; *************** function _PMD_Initialize *****************
 13154 ;; Defined at:
 13155 ;;		line 74 in file "mcc_generated_files/mcc.c"
 13156 ;; Parameters:    Size  Location     Type
 13157 ;;		None
 13158 ;; Auto vars:     Size  Location     Type
 13159 ;;		None
 13160 ;; Return value:  Size  Location     Type
 13161 ;;                  1    wreg      void 
 13162 ;; Registers used:
 13163 ;;		status,2
 13164 ;; Tracked objects:
 13165 ;;		On entry : 0/0
 13166 ;;		On exit  : 0/0
 13167 ;;		Unchanged: 0/0
 13168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13173 ;;Total ram usage:        0 bytes
 13174 ;; Hardware stack levels used: 1
 13175 ;; Hardware stack levels required when called: 5
 13176 ;; This function calls:
 13177 ;;		Nothing
 13178 ;; This function is called by:
 13179 ;;		_SYSTEM_Initialize
 13180 ;; This function uses a non-reentrant model
 13181 ;;
 13182                           
 13183                           
 13184                           ;psect for function _PMD_Initialize
 13185  165D                     _PMD_Initialize:
 13186  165D                     l4507:	
 13187                           ;incstack = 0
 13188                           ; Regs used in _PMD_Initialize: [status,2]
 13189                           
 13190                           
 13191                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
 13192  165D  002F               	movlb	15	; select bank15
 13193  165E  0196               	clrf	22	;volatile
 13194                           
 13195                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
 13196  165F  0197               	clrf	23	;volatile
 13197                           
 13198                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
 13199  1660  0198               	clrf	24	;volatile
 13200                           
 13201                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
 13202  1661  0199               	clrf	25	;volatile
 13203                           
 13204                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
 13205  1662  019A               	clrf	26	;volatile
 13206                           
 13207                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
 13208  1663  019B               	clrf	27	;volatile
 13209  1664                     l482:
 13210  1664  0008               	return
 13211  1665                     __end_of_PMD_Initialize:
 13212                           
 13213                           	psect	text29
 13214  0935                     __ptext29:	
 13215 ;; *************** function _PIN_MANAGER_Initialize *****************
 13216 ;; Defined at:
 13217 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 13218 ;; Parameters:    Size  Location     Type
 13219 ;;		None
 13220 ;; Auto vars:     Size  Location     Type
 13221 ;;		None
 13222 ;; Return value:  Size  Location     Type
 13223 ;;                  1    wreg      void 
 13224 ;; Registers used:
 13225 ;;		wreg, status,2
 13226 ;; Tracked objects:
 13227 ;;		On entry : 0/0
 13228 ;;		On exit  : 0/0
 13229 ;;		Unchanged: 0/0
 13230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13235 ;;Total ram usage:        0 bytes
 13236 ;; Hardware stack levels used: 1
 13237 ;; Hardware stack levels required when called: 5
 13238 ;; This function calls:
 13239 ;;		Nothing
 13240 ;; This function is called by:
 13241 ;;		_SYSTEM_Initialize
 13242 ;; This function uses a non-reentrant model
 13243 ;;
 13244                           
 13245                           
 13246                           ;psect for function _PIN_MANAGER_Initialize
 13247  0935                     _PIN_MANAGER_Initialize:
 13248  0935                     l4457:	
 13249                           ;incstack = 0
 13250                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 13251                           
 13252                           
 13253                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 13254  0935  0020               	movlb	0	; select bank0
 13255  0936  019A               	clrf	26	;volatile
 13256                           
 13257                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 13258  0937  0199               	clrf	25	;volatile
 13259                           
 13260                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 13261  0938  0196               	clrf	22	;volatile
 13262                           
 13263                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 13264  0939  0197               	clrf	23	;volatile
 13265                           
 13266                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 13267  093A  0198               	clrf	24	;volatile
 13268  093B                     l4459:
 13269                           
 13270                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 13271  093B  3007               	movlw	7
 13272  093C  0095               	movwf	21	;volatile
 13273  093D                     l4461:
 13274                           
 13275                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x0F;
 13276  093D  300F               	movlw	15
 13277  093E  0091               	movwf	17	;volatile
 13278  093F                     l4463:
 13279                           
 13280                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 13281  093F  30FF               	movlw	255
 13282  0940  0092               	movwf	18	;volatile
 13283  0941                     l4465:
 13284                           
 13285                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 13286  0941  30FF               	movlw	255
 13287  0942  0093               	movwf	19	;volatile
 13288  0943                     l4467:
 13289                           
 13290                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 13291  0943  30FF               	movlw	255
 13292  0944  0094               	movwf	20	;volatile
 13293  0945                     l4469:
 13294                           
 13295                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
 13296  0945  30FF               	movlw	255
 13297  0946  003E               	movlb	30	; select bank30
 13298  0947  00D9               	movwf	89	;volatile
 13299  0948                     l4471:
 13300                           
 13301                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xC7;
 13302  0948  30C7               	movlw	199
 13303  0949  00CE               	movwf	78	;volatile
 13304  094A                     l4473:
 13305                           
 13306                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xEF;
 13307  094A  30EF               	movlw	239
 13308  094B  00C3               	movwf	67	;volatile
 13309  094C                     l4475:
 13310                           
 13311                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 13312  094C  3007               	movlw	7
 13313  094D  00E4               	movwf	100	;volatile
 13314  094E                     l4477:
 13315                           
 13316                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x0F;
 13317  094E  300F               	movlw	15
 13318  094F  00B8               	movwf	56	;volatile
 13319                           
 13320                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 13321  0950  01DA               	clrf	90	;volatile
 13322                           
 13323                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 13324  0951  01E5               	clrf	101	;volatile
 13325                           
 13326                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 13327  0952  01C4               	clrf	68	;volatile
 13328                           
 13329                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 13330  0953  01B9               	clrf	57	;volatile
 13331                           
 13332                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 13333  0954  01CF               	clrf	79	;volatile
 13334                           
 13335                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 13336  0955  01E6               	clrf	102	;volatile
 13337                           
 13338                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 13339  0956  01BA               	clrf	58	;volatile
 13340                           
 13341                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 13342  0957  01C5               	clrf	69	;volatile
 13343                           
 13344                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 13345  0958  01D0               	clrf	80	;volatile
 13346                           
 13347                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 13348  0959  01DB               	clrf	91	;volatile
 13349  095A                     l4479:
 13350                           
 13351                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 13352  095A  30FF               	movlw	255
 13353  095B  00BB               	movwf	59	;volatile
 13354  095C                     l4481:
 13355                           
 13356                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 13357  095C  30FF               	movlw	255
 13358  095D  00C6               	movwf	70	;volatile
 13359  095E                     l4483:
 13360                           
 13361                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 13362  095E  30FF               	movlw	255
 13363  095F  00D1               	movwf	81	;volatile
 13364  0960                     l4485:
 13365                           
 13366                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 13367  0960  30FF               	movlw	255
 13368  0961  00DC               	movwf	92	;volatile
 13369  0962                     l4487:
 13370                           
 13371                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 13372  0962  3007               	movlw	7
 13373  0963  00E7               	movwf	103	;volatile
 13374  0964                     l4489:
 13375                           
 13376                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 13377  0964  30FF               	movlw	255
 13378  0965  00BC               	movwf	60	;volatile
 13379  0966                     l4491:
 13380                           
 13381                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 13382  0966  30FF               	movlw	255
 13383  0967  00C7               	movwf	71	;volatile
 13384  0968                     l4493:
 13385                           
 13386                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 13387  0968  30FF               	movlw	255
 13388  0969  00D2               	movwf	82	;volatile
 13389  096A                     l4495:
 13390                           
 13391                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 13392  096A  30FF               	movlw	255
 13393  096B  00DD               	movwf	93	;volatile
 13394  096C                     l4497:
 13395                           
 13396                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
 13397  096C  3007               	movlw	7
 13398  096D  00E8               	movwf	104	;volatile
 13399  096E                     l4499:
 13400                           
 13401                           ;mcc_generated_files/pin_manager.c: 127:     SSP1CLKPPS = 0x13;
 13402  096E  3013               	movlw	19
 13403  096F  003D               	movlb	29	; select bank29
 13404  0970  00C5               	movwf	69	;volatile
 13405  0971                     l4501:
 13406                           
 13407                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x14;
 13408  0971  3014               	movlw	20
 13409  0972  003E               	movlb	30	; select bank30
 13410  0973  00A3               	movwf	35	;volatile
 13411  0974                     l4503:
 13412                           
 13413                           ;mcc_generated_files/pin_manager.c: 129:     RC4PPS = 0x15;
 13414  0974  3015               	movlw	21
 13415  0975  00A4               	movwf	36	;volatile
 13416  0976                     l4505:
 13417                           
 13418                           ;mcc_generated_files/pin_manager.c: 130:     SSP1DATPPS = 0x14;
 13419  0976  3014               	movlw	20
 13420  0977  003D               	movlb	29	; select bank29
 13421  0978  00C6               	movwf	70	;volatile
 13422  0979                     l436:
 13423  0979  0008               	return
 13424  097A                     __end_of_PIN_MANAGER_Initialize:
 13425                           
 13426                           	psect	text30
 13427  166E                     __ptext30:	
 13428 ;; *************** function _OSCILLATOR_Initialize *****************
 13429 ;; Defined at:
 13430 ;;		line 60 in file "mcc_generated_files/mcc.c"
 13431 ;; Parameters:    Size  Location     Type
 13432 ;;		None
 13433 ;; Auto vars:     Size  Location     Type
 13434 ;;		None
 13435 ;; Return value:  Size  Location     Type
 13436 ;;                  1    wreg      void 
 13437 ;; Registers used:
 13438 ;;		wreg, status,2
 13439 ;; Tracked objects:
 13440 ;;		On entry : 0/0
 13441 ;;		On exit  : 0/0
 13442 ;;		Unchanged: 0/0
 13443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13448 ;;Total ram usage:        0 bytes
 13449 ;; Hardware stack levels used: 1
 13450 ;; Hardware stack levels required when called: 5
 13451 ;; This function calls:
 13452 ;;		Nothing
 13453 ;; This function is called by:
 13454 ;;		_SYSTEM_Initialize
 13455 ;; This function uses a non-reentrant model
 13456 ;;
 13457                           
 13458                           
 13459                           ;psect for function _OSCILLATOR_Initialize
 13460  166E                     _OSCILLATOR_Initialize:
 13461  166E                     l4517:	
 13462                           ;incstack = 0
 13463                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 13464                           
 13465                           
 13466                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x62;
 13467  166E  3062               	movlw	98
 13468  166F  0031               	movlb	17	; select bank17
 13469  1670  008D               	movwf	13	;volatile
 13470  1671                     l4519:
 13471                           
 13472                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
 13473  1671  018F               	clrf	15	;volatile
 13474  1672                     l4521:
 13475                           
 13476                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
 13477  1672  0191               	clrf	17	;volatile
 13478                           
 13479                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x02;
 13480  1673  3002               	movlw	2
 13481  1674  0093               	movwf	19	;volatile
 13482  1675                     l4523:
 13483                           
 13484                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
 13485  1675  0192               	clrf	18	;volatile
 13486  1676                     l479:
 13487  1676  0008               	return
 13488  1677                     __end_of_OSCILLATOR_Initialize:
 13489                           
 13490                           	psect	text31
 13491  1680                     __ptext31:	
 13492 ;; *************** function _I2C1_Initialize *****************
 13493 ;; Defined at:
 13494 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 13495 ;; Parameters:    Size  Location     Type
 13496 ;;		None
 13497 ;; Auto vars:     Size  Location     Type
 13498 ;;		None
 13499 ;; Return value:  Size  Location     Type
 13500 ;;                  1    wreg      void 
 13501 ;; Registers used:
 13502 ;;		wreg, status,2
 13503 ;; Tracked objects:
 13504 ;;		On entry : 0/0
 13505 ;;		On exit  : 0/0
 13506 ;;		Unchanged: 0/0
 13507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13512 ;;Total ram usage:        0 bytes
 13513 ;; Hardware stack levels used: 1
 13514 ;; Hardware stack levels required when called: 5
 13515 ;; This function calls:
 13516 ;;		Nothing
 13517 ;; This function is called by:
 13518 ;;		_SYSTEM_Initialize
 13519 ;; This function uses a non-reentrant model
 13520 ;;
 13521                           
 13522                           
 13523                           ;psect for function _I2C1_Initialize
 13524  1680                     _I2C1_Initialize:
 13525  1680                     l4509:	
 13526                           ;incstack = 0
 13527                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 13528                           
 13529                           
 13530                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x80;
 13531  1680  3080               	movlw	128
 13532  1681  0023               	movlb	3	; select bank3
 13533  1682  008F               	movwf	15	;volatile
 13534                           
 13535                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 13536  1683  3008               	movlw	8
 13537  1684  0090               	movwf	16	;volatile
 13538  1685                     l4511:
 13539                           
 13540                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 13541  1685  0191               	clrf	17	;volatile
 13542  1686                     l4513:
 13543                           
 13544                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x03;
 13545  1686  3003               	movlw	3
 13546  1687  008D               	movwf	13	;volatile
 13547  1688                     l4515:
 13548                           
 13549                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 13550  1688  1290               	bcf	16,5	;volatile
 13551  1689                     l876:
 13552  1689  0008               	return
 13553  168A                     __end_of_I2C1_Initialize:
 13554                           
 13555                           	psect	text32
 13556  1702                     __ptext32:	
 13557 ;; *************** function _ADCC_Initialize *****************
 13558 ;; Defined at:
 13559 ;;		line 63 in file "mcc_generated_files/adcc.c"
 13560 ;; Parameters:    Size  Location     Type
 13561 ;;		None
 13562 ;; Auto vars:     Size  Location     Type
 13563 ;;		None
 13564 ;; Return value:  Size  Location     Type
 13565 ;;                  1    wreg      void 
 13566 ;; Registers used:
 13567 ;;		wreg, status,2
 13568 ;; Tracked objects:
 13569 ;;		On entry : 0/0
 13570 ;;		On exit  : 0/0
 13571 ;;		Unchanged: 0/0
 13572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13577 ;;Total ram usage:        0 bytes
 13578 ;; Hardware stack levels used: 1
 13579 ;; Hardware stack levels required when called: 5
 13580 ;; This function calls:
 13581 ;;		Nothing
 13582 ;; This function is called by:
 13583 ;;		_SYSTEM_Initialize
 13584 ;; This function uses a non-reentrant model
 13585 ;;
 13586                           
 13587                           
 13588                           ;psect for function _ADCC_Initialize
 13589  1702                     _ADCC_Initialize:
 13590  1702                     l4525:	
 13591                           ;incstack = 0
 13592                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 13593                           
 13594                           
 13595                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
 13596  1702  0022               	movlb	2	; select bank2
 13597  1703  018E               	clrf	14	;volatile
 13598                           
 13599                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
 13600  1704  018F               	clrf	15	;volatile
 13601                           
 13602                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 13603  1705  0190               	clrf	16	;volatile
 13604                           
 13605                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
 13606  1706  0191               	clrf	17	;volatile
 13607                           
 13608                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 13609  1707  0192               	clrf	18	;volatile
 13610                           
 13611                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 13612  1708  0193               	clrf	19	;volatile
 13613                           
 13614                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
 13615  1709  018D               	clrf	13	;volatile
 13616                           
 13617                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
 13618  170A  0021               	movlb	1	; select bank1
 13619  170B  019E               	clrf	30	;volatile
 13620                           
 13621                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
 13622  170C  019B               	clrf	27	;volatile
 13623                           
 13624                           ;mcc_generated_files/adcc.c: 85:     ADPRE = 0x00;
 13625  170D  019C               	clrf	28	;volatile
 13626                           
 13627                           ;mcc_generated_files/adcc.c: 87:     ADCON1 = 0x00;
 13628  170E  0194               	clrf	20	;volatile
 13629                           
 13630                           ;mcc_generated_files/adcc.c: 89:     ADCON2 = 0x00;
 13631  170F  0195               	clrf	21	;volatile
 13632                           
 13633                           ;mcc_generated_files/adcc.c: 91:     ADCON3 = 0x00;
 13634  1710  0196               	clrf	22	;volatile
 13635                           
 13636                           ;mcc_generated_files/adcc.c: 93:     ADSTAT = 0x00;
 13637  1711  0197               	clrf	23	;volatile
 13638                           
 13639                           ;mcc_generated_files/adcc.c: 95:     ADREF = 0x00;
 13640  1712  019A               	clrf	26	;volatile
 13641                           
 13642                           ;mcc_generated_files/adcc.c: 97:     ADACT = 0x00;
 13643  1713  0199               	clrf	25	;volatile
 13644                           
 13645                           ;mcc_generated_files/adcc.c: 99:     ADCLK = 0x00;
 13646  1714  0198               	clrf	24	;volatile
 13647  1715                     l4527:
 13648                           
 13649                           ;mcc_generated_files/adcc.c: 101:     ADCON0 = 0x84;
 13650  1715  3084               	movlw	132
 13651  1716  0093               	movwf	19	;volatile
 13652  1717                     l4529:
 13653                           
 13654                           ;mcc_generated_files/adcc.c: 103:     ADACQ = 0x00;
 13655  1717  019D               	clrf	29	;volatile
 13656  1718                     l643:
 13657  1718  0008               	return
 13658  1719                     __end_of_ADCC_Initialize:
 13659                           
 13660                           	psect	text33
 13661  168A                     __ptext33:	
 13662 ;; *************** function _S1 *****************
 13663 ;; Defined at:
 13664 ;;		line 61 in file "main.c"
 13665 ;; Parameters:    Size  Location     Type
 13666 ;;		None
 13667 ;; Auto vars:     Size  Location     Type
 13668 ;;		None
 13669 ;; Return value:  Size  Location     Type
 13670 ;;                  1    wreg      void 
 13671 ;; Registers used:
 13672 ;;		None
 13673 ;; Tracked objects:
 13674 ;;		On entry : 0/0
 13675 ;;		On exit  : 0/0
 13676 ;;		Unchanged: 0/0
 13677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13681 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13682 ;;Total ram usage:        0 bytes
 13683 ;; Hardware stack levels used: 1
 13684 ;; Hardware stack levels required when called: 5
 13685 ;; This function calls:
 13686 ;;		Nothing
 13687 ;; This function is called by:
 13688 ;;		_main
 13689 ;; This function uses a non-reentrant model
 13690 ;;
 13691                           
 13692                           
 13693                           ;psect for function _S1
 13694  168A                     _S1:
 13695  168A                     l4789:	
 13696                           ;incstack = 0
 13697                           ; Regs used in _S1: []
 13698                           
 13699                           
 13700                           ;main.c: 62:     if(PORTBbits.RB4==0 && PORTAbits.RA6==1){
 13701  168A  0020               	movlb	0	; select bank0
 13702  168B  1A0D               	btfsc	13,4	;volatile
 13703  168C  2E8E               	goto	u3551
 13704  168D  2E8F               	goto	u3550
 13705  168E                     u3551:
 13706  168E  2E94               	goto	l1166
 13707  168F                     u3550:
 13708  168F                     l4791:
 13709  168F  1F0C               	btfss	12,6	;volatile
 13710  1690  2E92               	goto	u3561
 13711  1691  2E93               	goto	u3560
 13712  1692                     u3561:
 13713  1692  2E94               	goto	l1166
 13714  1693                     u3560:
 13715  1693                     l1164:	
 13716                           ;main.c: 63:         do { LATAbits.LATA6 = 0; } while(0);
 13717                           
 13718  1693  1316               	bcf	22,6	;volatile
 13719  1694                     l1166:
 13720  1694  0008               	return
 13721  1695                     __end_of_S1:
 13722                           
 13723                           	psect	text34
 13724  16A2                     __ptext34:	
 13725 ;; *************** function _OpenI2C *****************
 13726 ;; Defined at:
 13727 ;;		line 26 in file "I2C/i2c.c"
 13728 ;; Parameters:    Size  Location     Type
 13729 ;;		None
 13730 ;; Auto vars:     Size  Location     Type
 13731 ;;		None
 13732 ;; Return value:  Size  Location     Type
 13733 ;;                  1    wreg      void 
 13734 ;; Registers used:
 13735 ;;		wreg, status,2
 13736 ;; Tracked objects:
 13737 ;;		On entry : 0/0
 13738 ;;		On exit  : 0/0
 13739 ;;		Unchanged: 0/0
 13740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13745 ;;Total ram usage:        0 bytes
 13746 ;; Hardware stack levels used: 1
 13747 ;; Hardware stack levels required when called: 5
 13748 ;; This function calls:
 13749 ;;		Nothing
 13750 ;; This function is called by:
 13751 ;;		_main
 13752 ;; This function uses a non-reentrant model
 13753 ;;
 13754                           
 13755                           
 13756                           ;psect for function _OpenI2C
 13757  16A2                     _OpenI2C:
 13758  16A2                     l4631:	
 13759                           ;incstack = 0
 13760                           ; Regs used in _OpenI2C: [wreg+status,2]
 13761                           
 13762                           
 13763                           ;I2C/i2c.c: 28:   SSP1STAT = 0x80;
 13764  16A2  3080               	movlw	128
 13765  16A3  0023               	movlb	3	; select bank3
 13766  16A4  008F               	movwf	15	;volatile
 13767                           
 13768                           ;I2C/i2c.c: 29:   SSP1CON1 = 0x08;
 13769  16A5  3008               	movlw	8
 13770  16A6  0090               	movwf	16	;volatile
 13771  16A7                     l4633:
 13772                           
 13773                           ;I2C/i2c.c: 30:   SSP1CON2 = 0x00;
 13774  16A7  0191               	clrf	17	;volatile
 13775  16A8                     l4635:
 13776                           
 13777                           ;I2C/i2c.c: 31:   SSP1ADD = 0x03;
 13778  16A8  3003               	movlw	3
 13779  16A9  008D               	movwf	13	;volatile
 13780  16AA                     l4637:
 13781                           
 13782                           ;I2C/i2c.c: 32:   SSP1CON1bits.SSPEN = 1;
 13783  16AA  1690               	bsf	16,5	;volatile
 13784  16AB                     l4639:
 13785                           
 13786                           ;I2C/i2c.c: 34:   TRISCbits.TRISC3 = 1;
 13787  16AB  0020               	movlb	0	; select bank0
 13788  16AC  1593               	bsf	19,3	;volatile
 13789  16AD                     l4641:
 13790                           
 13791                           ;I2C/i2c.c: 35:   TRISCbits.TRISC4 = 1;
 13792  16AD  1613               	bsf	19,4	;volatile
 13793  16AE                     l23:
 13794  16AE  0008               	return
 13795  16AF                     __end_of_OpenI2C:
 13796                           
 13797                           	psect	text35
 13798  1732                     __ptext35:	
 13799 ;; *************** function _LCDstr *****************
 13800 ;; Defined at:
 13801 ;;		line 112 in file "LCD/lcd.c"
 13802 ;; Parameters:    Size  Location     Type
 13803 ;;  p               2    9[BANK0 ] PTR unsigned char 
 13804 ;;		 -> main@buf(17), STR_2(8), STR_1(5), 
 13805 ;; Auto vars:     Size  Location     Type
 13806 ;;  c               1   14[BANK0 ] unsigned char 
 13807 ;; Return value:  Size  Location     Type
 13808 ;;                  1    wreg      void 
 13809 ;; Registers used:
 13810 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 13811 ;; Tracked objects:
 13812 ;;		On entry : 0/0
 13813 ;;		On exit  : 0/0
 13814 ;;		Unchanged: 0/0
 13815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13816 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13817 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13818 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13819 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13820 ;;Total ram usage:        6 bytes
 13821 ;; Hardware stack levels used: 1
 13822 ;; Hardware stack levels required when called: 8
 13823 ;; This function calls:
 13824 ;;		_LCDchar
 13825 ;; This function is called by:
 13826 ;;		_main
 13827 ;; This function uses a non-reentrant model
 13828 ;;
 13829                           
 13830                           
 13831                           ;psect for function _LCDstr
 13832  1732                     _LCDstr:
 13833  1732                     l6103:	
 13834                           ;incstack = 0
 13835                           ; Regs used in _LCDstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 13836                           
 13837                           
 13838                           ;LCD/lcd.c: 112: void LCDstr(char *p);LCD/lcd.c: 113: {;LCD/lcd.c: 114:   unsigned char 
      +                          c;;LCD/lcd.c: 116:   while((c = *p++)) LCDchar(c);
 13839  1732  2F37               	goto	l6107
 13840  1733                     l6105:
 13841  1733  082E               	movf	LCDstr@c,w
 13842  1734  3196  2665  3197   	fcall	_LCDchar
 13843  1737                     l6107:
 13844  1737  0020               	movlb	0	; select bank0
 13845  1738  082A               	movf	LCDstr@p+1,w
 13846  1739  00AC               	movwf	??_LCDstr+1
 13847  173A  0829               	movf	LCDstr@p,w
 13848  173B  00AB               	movwf	??_LCDstr
 13849  173C  0AA9               	incf	LCDstr@p,f
 13850  173D  1903               	skipnz
 13851  173E  0AAA               	incf	LCDstr@p+1,f
 13852  173F  082B               	movf	??_LCDstr,w
 13853  1740  0084               	movwf	4
 13854  1741  082C               	movf	??_LCDstr+1,w
 13855  1742  0085               	movwf	5
 13856  1743  0800               	movf	0,w	;code access
 13857  1744  00AD               	movwf	??_LCDstr+2
 13858  1745  082D               	movf	??_LCDstr+2,w
 13859  1746  00AE               	movwf	LCDstr@c
 13860  1747  082E               	movf	LCDstr@c,w
 13861  1748  1D03               	btfss	3,2
 13862  1749  2F4B               	goto	u5451
 13863  174A  2F4C               	goto	u5450
 13864  174B                     u5451:
 13865  174B  2F33               	goto	l6105
 13866  174C                     u5450:
 13867  174C                     l244:
 13868  174C  0008               	return
 13869  174D                     __end_of_LCDstr:
 13870                           
 13871                           	psect	text36
 13872  1665                     __ptext36:	
 13873 ;; *************** function _LCDchar *****************
 13874 ;; Defined at:
 13875 ;;		line 107 in file "LCD/lcd.c"
 13876 ;; Parameters:    Size  Location     Type
 13877 ;;  c               1    wreg     unsigned char 
 13878 ;; Auto vars:     Size  Location     Type
 13879 ;;  c               1    8[BANK0 ] unsigned char 
 13880 ;; Return value:  Size  Location     Type
 13881 ;;                  1    wreg      void 
 13882 ;; Registers used:
 13883 ;;		wreg, status,2, status,0, pclath, cstack
 13884 ;; Tracked objects:
 13885 ;;		On entry : 0/0
 13886 ;;		On exit  : 0/0
 13887 ;;		Unchanged: 0/0
 13888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13890 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13892 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13893 ;;Total ram usage:        1 bytes
 13894 ;; Hardware stack levels used: 1
 13895 ;; Hardware stack levels required when called: 7
 13896 ;; This function calls:
 13897 ;;		_LCDsend2x4
 13898 ;; This function is called by:
 13899 ;;		_LCDstr
 13900 ;; This function uses a non-reentrant model
 13901 ;;
 13902                           
 13903                           
 13904                           ;psect for function _LCDchar
 13905  1665                     _LCDchar:
 13906                           
 13907                           ;incstack = 0
 13908                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
 13909                           ;LCDchar@c stored from wreg
 13910  1665  0020               	movlb	0	; select bank0
 13911  1666  00A8               	movwf	LCDchar@c
 13912  1667                     l5985:
 13913                           
 13914                           ;LCD/lcd.c: 107: void LCDchar(unsigned char c);LCD/lcd.c: 108: {;LCD/lcd.c: 109:   LCDse
      +                          nd2x4(c, 0x01);
 13915  1667  01A2               	clrf	LCDsend2x4@mode
 13916  1668  0AA2               	incf	LCDsend2x4@mode,f
 13917  1669  0828               	movf	LCDchar@c,w
 13918  166A  318D  2537  3196   	fcall	_LCDsend2x4
 13919  166D                     l238:
 13920  166D  0008               	return
 13921  166E                     __end_of_LCDchar:
 13922                           
 13923                           	psect	text37
 13924  1768                     __ptext37:	
 13925 ;; *************** function _LCDpos *****************
 13926 ;; Defined at:
 13927 ;;		line 125 in file "LCD/lcd.c"
 13928 ;; Parameters:    Size  Location     Type
 13929 ;;  l               1    wreg     unsigned char 
 13930 ;;  c               1    9[BANK0 ] unsigned char 
 13931 ;; Auto vars:     Size  Location     Type
 13932 ;;  l               1   11[BANK0 ] unsigned char 
 13933 ;;  p               1   12[BANK0 ] unsigned char 
 13934 ;; Return value:  Size  Location     Type
 13935 ;;                  1    wreg      void 
 13936 ;; Registers used:
 13937 ;;		wreg, status,2, status,0, pclath, cstack
 13938 ;; Tracked objects:
 13939 ;;		On entry : 0/0
 13940 ;;		On exit  : 0/0
 13941 ;;		Unchanged: 0/0
 13942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13943 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13944 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13945 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13946 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13947 ;;Total ram usage:        4 bytes
 13948 ;; Hardware stack levels used: 1
 13949 ;; Hardware stack levels required when called: 8
 13950 ;; This function calls:
 13951 ;;		_LCDcmd
 13952 ;; This function is called by:
 13953 ;;		_main
 13954 ;; This function uses a non-reentrant model
 13955 ;;
 13956                           
 13957                           
 13958                           ;psect for function _LCDpos
 13959  1768                     _LCDpos:
 13960                           
 13961                           ;incstack = 0
 13962                           ; Regs used in _LCDpos: [wreg+status,2+status,0+pclath+cstack]
 13963                           ;LCDpos@l stored from wreg
 13964  1768  0020               	movlb	0	; select bank0
 13965  1769  00AB               	movwf	LCDpos@l
 13966  176A                     l6119:
 13967                           
 13968                           ;LCD/lcd.c: 125: void LCDpos(unsigned char l, unsigned char c);LCD/lcd.c: 126: {;LCD/lcd
      +                          .c: 127:   unsigned char p;;LCD/lcd.c: 131:   if (l>1) p = 0xc0; else p=0x80;
 13969  176A  3002               	movlw	2
 13970  176B  022B               	subwf	LCDpos@l,w
 13971  176C  1C03               	skipc
 13972  176D  2F6F               	goto	u5471
 13973  176E  2F70               	goto	u5470
 13974  176F                     u5471:
 13975  176F  2F75               	goto	l6123
 13976  1770                     u5470:
 13977  1770                     l6121:
 13978  1770  30C0               	movlw	192
 13979  1771  00AA               	movwf	??_LCDpos
 13980  1772  082A               	movf	??_LCDpos,w
 13981  1773  00AC               	movwf	LCDpos@p
 13982  1774  2F79               	goto	l6125
 13983  1775                     l6123:
 13984  1775  3080               	movlw	128
 13985  1776  00AA               	movwf	??_LCDpos
 13986  1777  082A               	movf	??_LCDpos,w
 13987  1778  00AC               	movwf	LCDpos@p
 13988  1779                     l6125:
 13989                           
 13990                           ;LCD/lcd.c: 132:   p = p | (c&0x0f);
 13991  1779  0829               	movf	LCDpos@c,w
 13992  177A  390F               	andlw	15
 13993  177B  042C               	iorwf	LCDpos@p,w
 13994  177C  00AA               	movwf	??_LCDpos
 13995  177D  082A               	movf	??_LCDpos,w
 13996  177E  00AC               	movwf	LCDpos@p
 13997  177F                     l6127:
 13998                           
 13999                           ;LCD/lcd.c: 133:   LCDcmd(p);
 14000  177F  082C               	movf	LCDpos@p,w
 14001  1780  3196  2655  3197   	fcall	_LCDcmd
 14002  1783                     l253:
 14003  1783  0008               	return
 14004  1784                     __end_of_LCDpos:
 14005                           
 14006                           	psect	text38
 14007  1655                     __ptext38:	
 14008 ;; *************** function _LCDcmd *****************
 14009 ;; Defined at:
 14010 ;;		line 102 in file "LCD/lcd.c"
 14011 ;; Parameters:    Size  Location     Type
 14012 ;;  c               1    wreg     unsigned char 
 14013 ;; Auto vars:     Size  Location     Type
 14014 ;;  c               1    8[BANK0 ] unsigned char 
 14015 ;; Return value:  Size  Location     Type
 14016 ;;                  1    wreg      void 
 14017 ;; Registers used:
 14018 ;;		wreg, status,2, status,0, pclath, cstack
 14019 ;; Tracked objects:
 14020 ;;		On entry : 0/0
 14021 ;;		On exit  : 0/0
 14022 ;;		Unchanged: 0/0
 14023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14024 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14025 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14027 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14028 ;;Total ram usage:        1 bytes
 14029 ;; Hardware stack levels used: 1
 14030 ;; Hardware stack levels required when called: 7
 14031 ;; This function calls:
 14032 ;;		_LCDsend2x4
 14033 ;; This function is called by:
 14034 ;;		_LCDpos
 14035 ;;		_main
 14036 ;; This function uses a non-reentrant model
 14037 ;;
 14038                           
 14039                           
 14040                           ;psect for function _LCDcmd
 14041  1655                     _LCDcmd:
 14042                           
 14043                           ;incstack = 0
 14044                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
 14045                           ;LCDcmd@c stored from wreg
 14046  1655  0020               	movlb	0	; select bank0
 14047  1656  00A8               	movwf	LCDcmd@c
 14048  1657                     l5983:
 14049                           
 14050                           ;LCD/lcd.c: 102: void LCDcmd(unsigned char c);LCD/lcd.c: 103: {;LCD/lcd.c: 104:   LCDsen
      +                          d2x4(c, 0);
 14051  1657  01A2               	clrf	LCDsend2x4@mode
 14052  1658  0828               	movf	LCDcmd@c,w
 14053  1659  318D  2537  3196   	fcall	_LCDsend2x4
 14054  165C                     l235:
 14055  165C  0008               	return
 14056  165D                     __end_of_LCDcmd:
 14057                           
 14058                           	psect	text39
 14059  0B77                     __ptext39:	
 14060 ;; *************** function _LCDinit *****************
 14061 ;; Defined at:
 14062 ;;		line 79 in file "LCD/lcd.c"
 14063 ;; Parameters:    Size  Location     Type
 14064 ;;		None
 14065 ;; Auto vars:     Size  Location     Type
 14066 ;;		None
 14067 ;; Return value:  Size  Location     Type
 14068 ;;                  1    wreg      void 
 14069 ;; Registers used:
 14070 ;;		wreg, status,2, status,0, pclath, cstack
 14071 ;; Tracked objects:
 14072 ;;		On entry : 0/0
 14073 ;;		On exit  : 0/0
 14074 ;;		Unchanged: 0/0
 14075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14078 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14079 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14080 ;;Total ram usage:        1 bytes
 14081 ;; Hardware stack levels used: 1
 14082 ;; Hardware stack levels required when called: 7
 14083 ;; This function calls:
 14084 ;;		_LCDsend
 14085 ;;		_LCDsend2x4
 14086 ;; This function is called by:
 14087 ;;		_main
 14088 ;; This function uses a non-reentrant model
 14089 ;;
 14090                           
 14091                           
 14092                           ;psect for function _LCDinit
 14093  0B77                     _LCDinit:
 14094  0B77                     l6069:	
 14095                           ;incstack = 0
 14096                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
 14097                           
 14098                           
 14099                           ;LCD/lcd.c: 81:   _delay((unsigned long)((50)*(4000000/4000.0)));
 14100  0B77  3041               	movlw	65
 14101  0B78  0020               	movlb	0	; select bank0
 14102  0B79  00A8               	movwf	??_LCDinit
 14103  0B7A  30EE               	movlw	238
 14104  0B7B                     u5777:
 14105  0B7B  0B89               	decfsz	9,f
 14106  0B7C  2B7B               	goto	u5777
 14107  0B7D  0BA8               	decfsz	??_LCDinit,f
 14108  0B7E  2B7B               	goto	u5777
 14109  0B7F  0000               	nop
 14110  0B80                     l6071:
 14111                           
 14112                           ;LCD/lcd.c: 82:   LCDsend(0x30);
 14113  0B80  3030               	movlw	48
 14114  0B81  318A  221A  318B   	fcall	_LCDsend
 14115  0B84                     l6073:
 14116                           
 14117                           ;LCD/lcd.c: 83:   LCDsend(0x34); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x30);
 14118  0B84  3034               	movlw	52
 14119  0B85  318A  221A  318B   	fcall	_LCDsend
 14120  0B88  30A6               	movlw	166
 14121  0B89                     u5787:
 14122  0B89  0B89               	decfsz	9,f
 14123  0B8A  2B89               	goto	u5787
 14124  0B8B  3200               	nop2
 14125  0B8C                     l6075:
 14126  0B8C  3030               	movlw	48
 14127  0B8D  318A  221A  318B   	fcall	_LCDsend
 14128  0B90                     l6077:
 14129                           
 14130                           ;LCD/lcd.c: 84:   _delay((unsigned long)((5)*(4000000/4000.0)));
 14131  0B90  3007               	movlw	7
 14132  0B91  0020               	movlb	0	; select bank0
 14133  0B92  00A8               	movwf	??_LCDinit
 14134  0B93  307D               	movlw	125
 14135  0B94                     u5797:
 14136  0B94  0B89               	decfsz	9,f
 14137  0B95  2B94               	goto	u5797
 14138  0B96  0BA8               	decfsz	??_LCDinit,f
 14139  0B97  2B94               	goto	u5797
 14140                           
 14141                           ;LCD/lcd.c: 85:   LCDsend(0x30);
 14142  0B98  3030               	movlw	48
 14143  0B99  318A  221A  318B   	fcall	_LCDsend
 14144                           
 14145                           ;LCD/lcd.c: 86:   LCDsend(0x34); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x30);
 14146  0B9C  3034               	movlw	52
 14147  0B9D  318A  221A  318B   	fcall	_LCDsend
 14148  0BA0                     l6079:
 14149  0BA0  30A6               	movlw	166
 14150  0BA1                     u5807:
 14151  0BA1  0B89               	decfsz	9,f
 14152  0BA2  2BA1               	goto	u5807
 14153  0BA3  3200               	nop2
 14154  0BA4                     l6081:
 14155  0BA4  3030               	movlw	48
 14156  0BA5  318A  221A  318B   	fcall	_LCDsend
 14157                           
 14158                           ;LCD/lcd.c: 87:   _delay((unsigned long)((100)*(4000000/4000000.0)));
 14159  0BA8  3021               	movlw	33
 14160  0BA9                     u5817:
 14161  0BA9  0B89               	decfsz	9,f
 14162  0BAA  2BA9               	goto	u5817
 14163  0BAB  0000               	nop
 14164  0BAC                     l6083:
 14165                           
 14166                           ;LCD/lcd.c: 88:   LCDsend(0x30);
 14167  0BAC  3030               	movlw	48
 14168  0BAD  318A  221A  318B   	fcall	_LCDsend
 14169  0BB0                     l6085:
 14170                           
 14171                           ;LCD/lcd.c: 89:   LCDsend(0x34); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x30);
 14172  0BB0  3034               	movlw	52
 14173  0BB1  318A  221A  318B   	fcall	_LCDsend
 14174  0BB4  30A6               	movlw	166
 14175  0BB5                     u5827:
 14176  0BB5  0B89               	decfsz	9,f
 14177  0BB6  2BB5               	goto	u5827
 14178  0BB7  3200               	nop2
 14179  0BB8                     l6087:
 14180  0BB8  3030               	movlw	48
 14181  0BB9  318A  221A  318B   	fcall	_LCDsend
 14182  0BBC                     l6089:
 14183                           
 14184                           ;LCD/lcd.c: 90:   _delay((unsigned long)((100)*(4000000/4000000.0)));
 14185  0BBC  3021               	movlw	33
 14186  0BBD                     u5837:
 14187  0BBD  0B89               	decfsz	9,f
 14188  0BBE  2BBD               	goto	u5837
 14189  0BBF  0000               	nop
 14190                           
 14191                           ;LCD/lcd.c: 91:   LCDsend(0x20);
 14192  0BC0  3020               	movlw	32
 14193  0BC1  318A  221A  318B   	fcall	_LCDsend
 14194                           
 14195                           ;LCD/lcd.c: 92:   LCDsend(0x24); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x20);
 14196  0BC4  3024               	movlw	36
 14197  0BC5  318A  221A  318B   	fcall	_LCDsend
 14198  0BC8                     l6091:
 14199  0BC8  30A6               	movlw	166
 14200  0BC9                     u5847:
 14201  0BC9  0B89               	decfsz	9,f
 14202  0BCA  2BC9               	goto	u5847
 14203  0BCB  3200               	nop2
 14204  0BCC                     l6093:
 14205  0BCC  3020               	movlw	32
 14206  0BCD  318A  221A  318B   	fcall	_LCDsend
 14207                           
 14208                           ;LCD/lcd.c: 93:   _delay((unsigned long)((5)*(4000000/4000.0)));
 14209  0BD0  3007               	movlw	7
 14210  0BD1  0020               	movlb	0	; select bank0
 14211  0BD2  00A8               	movwf	??_LCDinit
 14212  0BD3  307D               	movlw	125
 14213  0BD4                     u5857:
 14214  0BD4  0B89               	decfsz	9,f
 14215  0BD5  2BD4               	goto	u5857
 14216  0BD6  0BA8               	decfsz	??_LCDinit,f
 14217  0BD7  2BD4               	goto	u5857
 14218  0BD8                     l6095:
 14219                           
 14220                           ;LCD/lcd.c: 95:   LCDsend2x4(0x28, 0);
 14221  0BD8  0020               	movlb	0	; select bank0
 14222  0BD9  01A2               	clrf	LCDsend2x4@mode
 14223  0BDA  3028               	movlw	40
 14224  0BDB  318D  2537  318B   	fcall	_LCDsend2x4
 14225  0BDE                     l6097:
 14226                           
 14227                           ;LCD/lcd.c: 96:   LCDsend2x4(0x06, 0);
 14228  0BDE  0020               	movlb	0	; select bank0
 14229  0BDF  01A2               	clrf	LCDsend2x4@mode
 14230  0BE0  3006               	movlw	6
 14231  0BE1  318D  2537  318B   	fcall	_LCDsend2x4
 14232  0BE4                     l6099:
 14233                           
 14234                           ;LCD/lcd.c: 97:   LCDsend2x4(0x0f, 0);
 14235  0BE4  0020               	movlb	0	; select bank0
 14236  0BE5  01A2               	clrf	LCDsend2x4@mode
 14237  0BE6  300F               	movlw	15
 14238  0BE7  318D  2537  318B   	fcall	_LCDsend2x4
 14239  0BEA                     l6101:
 14240                           
 14241                           ;LCD/lcd.c: 98:   LCDsend2x4(0x01, 0);
 14242  0BEA  0020               	movlb	0	; select bank0
 14243  0BEB  01A2               	clrf	LCDsend2x4@mode
 14244  0BEC  3001               	movlw	1
 14245  0BED  318D  2537  318B   	fcall	_LCDsend2x4
 14246                           
 14247                           ;LCD/lcd.c: 99:   _delay((unsigned long)((2)*(4000000/4000.0)));
 14248  0BF0  3003               	movlw	3
 14249  0BF1  0020               	movlb	0	; select bank0
 14250  0BF2  00A8               	movwf	??_LCDinit
 14251  0BF3  3097               	movlw	151
 14252  0BF4                     u5867:
 14253  0BF4  0B89               	decfsz	9,f
 14254  0BF5  2BF4               	goto	u5867
 14255  0BF6  0BA8               	decfsz	??_LCDinit,f
 14256  0BF7  2BF4               	goto	u5867
 14257  0BF8  3200               	nop2
 14258  0BF9                     l232:
 14259  0BF9  0008               	return
 14260  0BFA                     __end_of_LCDinit:
 14261                           
 14262                           	psect	text40
 14263  0D37                     __ptext40:	
 14264 ;; *************** function _LCDsend2x4 *****************
 14265 ;; Defined at:
 14266 ;;		line 56 in file "LCD/lcd.c"
 14267 ;; Parameters:    Size  Location     Type
 14268 ;;  c               1    wreg     unsigned char 
 14269 ;;  mode            1    2[BANK0 ] unsigned char 
 14270 ;; Auto vars:     Size  Location     Type
 14271 ;;  c               1    5[BANK0 ] unsigned char 
 14272 ;;  lc              1    7[BANK0 ] unsigned char 
 14273 ;;  hc              1    6[BANK0 ] unsigned char 
 14274 ;; Return value:  Size  Location     Type
 14275 ;;                  1    wreg      void 
 14276 ;; Registers used:
 14277 ;;		wreg, status,2, status,0, pclath, cstack
 14278 ;; Tracked objects:
 14279 ;;		On entry : 0/0
 14280 ;;		On exit  : 0/0
 14281 ;;		Unchanged: 0/0
 14282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14283 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14284 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14285 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14286 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14287 ;;Total ram usage:        6 bytes
 14288 ;; Hardware stack levels used: 1
 14289 ;; Hardware stack levels required when called: 6
 14290 ;; This function calls:
 14291 ;;		_WriteI2C
 14292 ;; This function is called by:
 14293 ;;		_LCDinit
 14294 ;;		_LCDcmd
 14295 ;;		_LCDchar
 14296 ;; This function uses a non-reentrant model
 14297 ;;
 14298                           
 14299                           
 14300                           ;psect for function _LCDsend2x4
 14301  0D37                     _LCDsend2x4:
 14302                           
 14303                           ;incstack = 0
 14304                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 14305                           ;LCDsend2x4@c stored from wreg
 14306  0D37  0020               	movlb	0	; select bank0
 14307  0D38  00A5               	movwf	LCDsend2x4@c
 14308  0D39                     l5771:
 14309                           
 14310                           ;LCD/lcd.c: 56: void LCDsend2x4(unsigned char c, unsigned char mode);LCD/lcd.c: 57: {;LC
      +                          D/lcd.c: 58:   unsigned char hc;;LCD/lcd.c: 59:   unsigned char lc;;LCD/lcd.c: 61:   hc 
      +                          = c & 0xf0;
 14311  0D39  0825               	movf	LCDsend2x4@c,w
 14312  0D3A  39F0               	andlw	240
 14313  0D3B  00A3               	movwf	??_LCDsend2x4
 14314  0D3C  0823               	movf	??_LCDsend2x4,w
 14315  0D3D  00A6               	movwf	LCDsend2x4@hc
 14316  0D3E                     l5773:
 14317                           
 14318                           ;LCD/lcd.c: 62:   lc = (c << 4) & 0xf0;
 14319  0D3E  0825               	movf	LCDsend2x4@c,w
 14320  0D3F  00A3               	movwf	??_LCDsend2x4
 14321  0D40  3003               	movlw	3
 14322  0D41                     u4875:
 14323  0D41  35A3               	lslf	??_LCDsend2x4,f
 14324  0D42  3EFF               	addlw	-1
 14325  0D43  1D03               	skipz
 14326  0D44  2D41               	goto	u4875
 14327  0D45  3523               	lslf	??_LCDsend2x4,w
 14328  0D46  39F0               	andlw	240
 14329  0D47  00A4               	movwf	??_LCDsend2x4+1
 14330  0D48  0824               	movf	??_LCDsend2x4+1,w
 14331  0D49  00A7               	movwf	LCDsend2x4@lc
 14332  0D4A                     l5775:	
 14333                           ;LCD/lcd.c: 64:   while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14334                           
 14335  0D4A  0023               	movlb	3	; select bank3
 14336  0D4B  0C0F               	rrf	15,w	;volatile
 14337  0D4C  0C89               	rrf	9,f
 14338  0D4D  3901               	andlw	1
 14339  0D4E  0020               	movlb	0	; select bank0
 14340  0D4F  00A3               	movwf	??_LCDsend2x4
 14341  0D50  0023               	movlb	3	; select bank3
 14342  0D51  0811               	movf	17,w	;volatile
 14343  0D52  391F               	andlw	31
 14344  0D53  0020               	movlb	0	; select bank0
 14345  0D54  0423               	iorwf	??_LCDsend2x4,w
 14346  0D55  1D03               	btfss	3,2
 14347  0D56  2D58               	goto	u4881
 14348  0D57  2D59               	goto	u4880
 14349  0D58                     u4881:
 14350  0D58  2D4A               	goto	l5775
 14351  0D59                     u4880:
 14352  0D59                     l195:	
 14353                           ;LCD/lcd.c: 65:   do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14354                           
 14355  0D59  0023               	movlb	3	; select bank3
 14356  0D5A  1411               	bsf	17,0	;volatile
 14357  0D5B                     l196:
 14358  0D5B  1811               	btfsc	17,0	;volatile
 14359  0D5C  2D5E               	goto	u4891
 14360  0D5D  2D5F               	goto	u4890
 14361  0D5E                     u4891:
 14362  0D5E  2D5B               	goto	l196
 14363  0D5F                     u4890:
 14364  0D5F                     l5777:
 14365  0D5F  0023               	movlb	3	; select bank3
 14366  0D60  0C0F               	rrf	15,w	;volatile
 14367  0D61  0C89               	rrf	9,f
 14368  0D62  3901               	andlw	1
 14369  0D63  0020               	movlb	0	; select bank0
 14370  0D64  00A3               	movwf	??_LCDsend2x4
 14371  0D65  0023               	movlb	3	; select bank3
 14372  0D66  0811               	movf	17,w	;volatile
 14373  0D67  391F               	andlw	31
 14374  0D68  0020               	movlb	0	; select bank0
 14375  0D69  0423               	iorwf	??_LCDsend2x4,w
 14376  0D6A  1D03               	btfss	3,2
 14377  0D6B  2D6D               	goto	u4901
 14378  0D6C  2D6E               	goto	u4900
 14379  0D6D                     u4901:
 14380  0D6D  2D5F               	goto	l5777
 14381  0D6E                     u4900:
 14382  0D6E                     l5779:
 14383                           
 14384                           ;LCD/lcd.c: 66:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14385  0D6E  304E               	movlw	78
 14386  0D6F  318A  22C3  318D   	fcall	_WriteI2C
 14387  0D72                     l5781:
 14388  0D72  0023               	movlb	3	; select bank3
 14389  0D73  0C0F               	rrf	15,w	;volatile
 14390  0D74  0C89               	rrf	9,f
 14391  0D75  3901               	andlw	1
 14392  0D76  0020               	movlb	0	; select bank0
 14393  0D77  00A3               	movwf	??_LCDsend2x4
 14394  0D78  0023               	movlb	3	; select bank3
 14395  0D79  0811               	movf	17,w	;volatile
 14396  0D7A  391F               	andlw	31
 14397  0D7B  0020               	movlb	0	; select bank0
 14398  0D7C  0423               	iorwf	??_LCDsend2x4,w
 14399  0D7D  1D03               	btfss	3,2
 14400  0D7E  2D80               	goto	u4911
 14401  0D7F  2D81               	goto	u4910
 14402  0D80                     u4911:
 14403  0D80  2D72               	goto	l5781
 14404  0D81                     u4910:
 14405  0D81                     l5783:
 14406                           
 14407                           ;LCD/lcd.c: 67:   WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 14408  0D81  0826               	movf	LCDsend2x4@hc,w
 14409  0D82  0422               	iorwf	LCDsend2x4@mode,w
 14410  0D83  3808               	iorlw	8
 14411  0D84  318A  22C3  318D   	fcall	_WriteI2C
 14412  0D87                     l5785:
 14413  0D87  0023               	movlb	3	; select bank3
 14414  0D88  0C0F               	rrf	15,w	;volatile
 14415  0D89  0C89               	rrf	9,f
 14416  0D8A  3901               	andlw	1
 14417  0D8B  0020               	movlb	0	; select bank0
 14418  0D8C  00A3               	movwf	??_LCDsend2x4
 14419  0D8D  0023               	movlb	3	; select bank3
 14420  0D8E  0811               	movf	17,w	;volatile
 14421  0D8F  391F               	andlw	31
 14422  0D90  0020               	movlb	0	; select bank0
 14423  0D91  0423               	iorwf	??_LCDsend2x4,w
 14424  0D92  1D03               	btfss	3,2
 14425  0D93  2D95               	goto	u4921
 14426  0D94  2D96               	goto	u4920
 14427  0D95                     u4921:
 14428  0D95  2D87               	goto	l5785
 14429  0D96                     u4920:
 14430  0D96                     l5787:
 14431                           
 14432                           ;LCD/lcd.c: 68:   WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STA
      +                          Tbits.R_W));
 14433  0D96  0826               	movf	LCDsend2x4@hc,w
 14434  0D97  0422               	iorwf	LCDsend2x4@mode,w
 14435  0D98  380C               	iorlw	12
 14436  0D99  318A  22C3  318D   	fcall	_WriteI2C
 14437  0D9C                     l5789:
 14438  0D9C  0023               	movlb	3	; select bank3
 14439  0D9D  0C0F               	rrf	15,w	;volatile
 14440  0D9E  0C89               	rrf	9,f
 14441  0D9F  3901               	andlw	1
 14442  0DA0  0020               	movlb	0	; select bank0
 14443  0DA1  00A3               	movwf	??_LCDsend2x4
 14444  0DA2  0023               	movlb	3	; select bank3
 14445  0DA3  0811               	movf	17,w	;volatile
 14446  0DA4  391F               	andlw	31
 14447  0DA5  0020               	movlb	0	; select bank0
 14448  0DA6  0423               	iorwf	??_LCDsend2x4,w
 14449  0DA7  1D03               	btfss	3,2
 14450  0DA8  2DAA               	goto	u4931
 14451  0DA9  2DAB               	goto	u4930
 14452  0DAA                     u4931:
 14453  0DAA  2D9C               	goto	l5789
 14454  0DAB                     u4930:
 14455  0DAB                     l211:
 14456                           
 14457                           ;LCD/lcd.c: 69:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 14458  0DAB  0000               	nop
 14459  0DAC                     l5791:
 14460                           
 14461                           ;LCD/lcd.c: 70:   WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 14462  0DAC  0020               	movlb	0	; select bank0
 14463  0DAD  0826               	movf	LCDsend2x4@hc,w
 14464  0DAE  0422               	iorwf	LCDsend2x4@mode,w
 14465  0DAF  3808               	iorlw	8
 14466  0DB0  318A  22C3  318D   	fcall	_WriteI2C
 14467  0DB3                     l5793:
 14468  0DB3  0023               	movlb	3	; select bank3
 14469  0DB4  0C0F               	rrf	15,w	;volatile
 14470  0DB5  0C89               	rrf	9,f
 14471  0DB6  3901               	andlw	1
 14472  0DB7  0020               	movlb	0	; select bank0
 14473  0DB8  00A3               	movwf	??_LCDsend2x4
 14474  0DB9  0023               	movlb	3	; select bank3
 14475  0DBA  0811               	movf	17,w	;volatile
 14476  0DBB  391F               	andlw	31
 14477  0DBC  0020               	movlb	0	; select bank0
 14478  0DBD  0423               	iorwf	??_LCDsend2x4,w
 14479  0DBE  1D03               	btfss	3,2
 14480  0DBF  2DC1               	goto	u4941
 14481  0DC0  2DC2               	goto	u4940
 14482  0DC1                     u4941:
 14483  0DC1  2DB3               	goto	l5793
 14484  0DC2                     u4940:
 14485  0DC2                     l5795:
 14486                           
 14487                           ;LCD/lcd.c: 71:   WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 14488  0DC2  0827               	movf	LCDsend2x4@lc,w
 14489  0DC3  0422               	iorwf	LCDsend2x4@mode,w
 14490  0DC4  3808               	iorlw	8
 14491  0DC5  318A  22C3  318D   	fcall	_WriteI2C
 14492  0DC8                     l5797:
 14493  0DC8  0023               	movlb	3	; select bank3
 14494  0DC9  0C0F               	rrf	15,w	;volatile
 14495  0DCA  0C89               	rrf	9,f
 14496  0DCB  3901               	andlw	1
 14497  0DCC  0020               	movlb	0	; select bank0
 14498  0DCD  00A3               	movwf	??_LCDsend2x4
 14499  0DCE  0023               	movlb	3	; select bank3
 14500  0DCF  0811               	movf	17,w	;volatile
 14501  0DD0  391F               	andlw	31
 14502  0DD1  0020               	movlb	0	; select bank0
 14503  0DD2  0423               	iorwf	??_LCDsend2x4,w
 14504  0DD3  1D03               	btfss	3,2
 14505  0DD4  2DD6               	goto	u4951
 14506  0DD5  2DD7               	goto	u4950
 14507  0DD6                     u4951:
 14508  0DD6  2DC8               	goto	l5797
 14509  0DD7                     u4950:
 14510  0DD7                     l5799:
 14511                           
 14512                           ;LCD/lcd.c: 72:   WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STA
      +                          Tbits.R_W));
 14513  0DD7  0827               	movf	LCDsend2x4@lc,w
 14514  0DD8  0422               	iorwf	LCDsend2x4@mode,w
 14515  0DD9  380C               	iorlw	12
 14516  0DDA  318A  22C3  318D   	fcall	_WriteI2C
 14517  0DDD                     l5801:
 14518  0DDD  0023               	movlb	3	; select bank3
 14519  0DDE  0C0F               	rrf	15,w	;volatile
 14520  0DDF  0C89               	rrf	9,f
 14521  0DE0  3901               	andlw	1
 14522  0DE1  0020               	movlb	0	; select bank0
 14523  0DE2  00A3               	movwf	??_LCDsend2x4
 14524  0DE3  0023               	movlb	3	; select bank3
 14525  0DE4  0811               	movf	17,w	;volatile
 14526  0DE5  391F               	andlw	31
 14527  0DE6  0020               	movlb	0	; select bank0
 14528  0DE7  0423               	iorwf	??_LCDsend2x4,w
 14529  0DE8  1D03               	btfss	3,2
 14530  0DE9  2DEB               	goto	u4961
 14531  0DEA  2DEC               	goto	u4960
 14532  0DEB                     u4961:
 14533  0DEB  2DDD               	goto	l5801
 14534  0DEC                     u4960:
 14535  0DEC                     l220:
 14536                           
 14537                           ;LCD/lcd.c: 73:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 14538  0DEC  0000               	nop
 14539  0DED                     l5803:
 14540                           
 14541                           ;LCD/lcd.c: 74:   WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 14542  0DED  0020               	movlb	0	; select bank0
 14543  0DEE  0827               	movf	LCDsend2x4@lc,w
 14544  0DEF  0422               	iorwf	LCDsend2x4@mode,w
 14545  0DF0  3808               	iorlw	8
 14546  0DF1  318A  22C3  318D   	fcall	_WriteI2C
 14547  0DF4                     l5805:
 14548  0DF4  0023               	movlb	3	; select bank3
 14549  0DF5  0C0F               	rrf	15,w	;volatile
 14550  0DF6  0C89               	rrf	9,f
 14551  0DF7  3901               	andlw	1
 14552  0DF8  0020               	movlb	0	; select bank0
 14553  0DF9  00A3               	movwf	??_LCDsend2x4
 14554  0DFA  0023               	movlb	3	; select bank3
 14555  0DFB  0811               	movf	17,w	;volatile
 14556  0DFC  391F               	andlw	31
 14557  0DFD  0020               	movlb	0	; select bank0
 14558  0DFE  0423               	iorwf	??_LCDsend2x4,w
 14559  0DFF  1D03               	btfss	3,2
 14560  0E00  2E02               	goto	u4971
 14561  0E01  2E03               	goto	u4970
 14562  0E02                     u4971:
 14563  0E02  2DF4               	goto	l5805
 14564  0E03                     u4970:
 14565  0E03                     l224:	
 14566                           ;LCD/lcd.c: 75:   do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 14567                           
 14568  0E03  0023               	movlb	3	; select bank3
 14569  0E04  1511               	bsf	17,2	;volatile
 14570  0E05                     l225:
 14571  0E05  1911               	btfsc	17,2	;volatile
 14572  0E06  2E08               	goto	u4981
 14573  0E07  2E09               	goto	u4980
 14574  0E08                     u4981:
 14575  0E08  2E05               	goto	l225
 14576  0E09                     u4980:
 14577  0E09                     l5807:
 14578                           
 14579                           ;LCD/lcd.c: 76:   _delay((unsigned long)((50)*(4000000/4000000.0)));
 14580  0E09  3010               	movlw	16
 14581  0E0A                     u5877:
 14582  0E0A  0B89               	decfsz	9,f
 14583  0E0B  2E0A               	goto	u5877
 14584  0E0C  3200               	nop2
 14585  0E0D                     l229:
 14586  0E0D  0008               	return
 14587  0E0E                     __end_of_LCDsend2x4:
 14588                           
 14589                           	psect	text41
 14590  0A1A                     __ptext41:	
 14591 ;; *************** function _LCDsend *****************
 14592 ;; Defined at:
 14593 ;;		line 17 in file "LCD/lcd.c"
 14594 ;; Parameters:    Size  Location     Type
 14595 ;;  c               1    wreg     unsigned char 
 14596 ;; Auto vars:     Size  Location     Type
 14597 ;;  c               1    3[BANK0 ] unsigned char 
 14598 ;; Return value:  Size  Location     Type
 14599 ;;                  1    wreg      void 
 14600 ;; Registers used:
 14601 ;;		wreg, status,2, status,0, pclath, cstack
 14602 ;; Tracked objects:
 14603 ;;		On entry : 0/0
 14604 ;;		On exit  : 0/0
 14605 ;;		Unchanged: 0/0
 14606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14608 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14609 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14610 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14611 ;;Total ram usage:        2 bytes
 14612 ;; Hardware stack levels used: 1
 14613 ;; Hardware stack levels required when called: 6
 14614 ;; This function calls:
 14615 ;;		_WriteI2C
 14616 ;; This function is called by:
 14617 ;;		_LCDinit
 14618 ;; This function uses a non-reentrant model
 14619 ;;
 14620                           
 14621                           
 14622                           ;psect for function _LCDsend
 14623  0A1A                     _LCDsend:
 14624                           
 14625                           ;incstack = 0
 14626                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
 14627                           ;LCDsend@c stored from wreg
 14628  0A1A  0020               	movlb	0	; select bank0
 14629  0A1B  00A3               	movwf	LCDsend@c
 14630  0A1C                     l5903:
 14631  0A1C                     l5905:	
 14632                           ;LCD/lcd.c: 17: void LCDsend(unsigned char c);LCD/lcd.c: 18: {;LCD/lcd.c: 19:   while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14633                           
 14634  0A1C  0023               	movlb	3	; select bank3
 14635  0A1D  0C0F               	rrf	15,w	;volatile
 14636  0A1E  0C89               	rrf	9,f
 14637  0A1F  3901               	andlw	1
 14638  0A20  0020               	movlb	0	; select bank0
 14639  0A21  00A2               	movwf	??_LCDsend
 14640  0A22  0023               	movlb	3	; select bank3
 14641  0A23  0811               	movf	17,w	;volatile
 14642  0A24  391F               	andlw	31
 14643  0A25  0020               	movlb	0	; select bank0
 14644  0A26  0422               	iorwf	??_LCDsend,w
 14645  0A27  1D03               	btfss	3,2
 14646  0A28  2A2A               	goto	u5101
 14647  0A29  2A2B               	goto	u5100
 14648  0A2A                     u5101:
 14649  0A2A  2A1C               	goto	l5905
 14650  0A2B                     u5100:
 14651  0A2B                     l73:	
 14652                           ;LCD/lcd.c: 20:   do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14653                           
 14654  0A2B  0023               	movlb	3	; select bank3
 14655  0A2C  1411               	bsf	17,0	;volatile
 14656  0A2D                     l74:
 14657  0A2D  1811               	btfsc	17,0	;volatile
 14658  0A2E  2A30               	goto	u5111
 14659  0A2F  2A31               	goto	u5110
 14660  0A30                     u5111:
 14661  0A30  2A2D               	goto	l74
 14662  0A31                     u5110:
 14663  0A31                     l5907:
 14664  0A31  0023               	movlb	3	; select bank3
 14665  0A32  0C0F               	rrf	15,w	;volatile
 14666  0A33  0C89               	rrf	9,f
 14667  0A34  3901               	andlw	1
 14668  0A35  0020               	movlb	0	; select bank0
 14669  0A36  00A2               	movwf	??_LCDsend
 14670  0A37  0023               	movlb	3	; select bank3
 14671  0A38  0811               	movf	17,w	;volatile
 14672  0A39  391F               	andlw	31
 14673  0A3A  0020               	movlb	0	; select bank0
 14674  0A3B  0422               	iorwf	??_LCDsend,w
 14675  0A3C  1D03               	btfss	3,2
 14676  0A3D  2A3F               	goto	u5121
 14677  0A3E  2A40               	goto	u5120
 14678  0A3F                     u5121:
 14679  0A3F  2A31               	goto	l5907
 14680  0A40                     u5120:
 14681  0A40                     l5909:
 14682                           
 14683                           ;LCD/lcd.c: 21:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14684  0A40  304E               	movlw	78
 14685  0A41  318A  22C3  318A   	fcall	_WriteI2C
 14686  0A44                     l5911:
 14687  0A44  0023               	movlb	3	; select bank3
 14688  0A45  0C0F               	rrf	15,w	;volatile
 14689  0A46  0C89               	rrf	9,f
 14690  0A47  3901               	andlw	1
 14691  0A48  0020               	movlb	0	; select bank0
 14692  0A49  00A2               	movwf	??_LCDsend
 14693  0A4A  0023               	movlb	3	; select bank3
 14694  0A4B  0811               	movf	17,w	;volatile
 14695  0A4C  391F               	andlw	31
 14696  0A4D  0020               	movlb	0	; select bank0
 14697  0A4E  0422               	iorwf	??_LCDsend,w
 14698  0A4F  1D03               	btfss	3,2
 14699  0A50  2A52               	goto	u5131
 14700  0A51  2A53               	goto	u5130
 14701  0A52                     u5131:
 14702  0A52  2A44               	goto	l5911
 14703  0A53                     u5130:
 14704  0A53                     l5913:
 14705                           
 14706                           ;LCD/lcd.c: 22:   WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14707  0A53  0823               	movf	LCDsend@c,w
 14708  0A54  318A  22C3  318A   	fcall	_WriteI2C
 14709  0A57                     l5915:
 14710  0A57  0023               	movlb	3	; select bank3
 14711  0A58  0C0F               	rrf	15,w	;volatile
 14712  0A59  0C89               	rrf	9,f
 14713  0A5A  3901               	andlw	1
 14714  0A5B  0020               	movlb	0	; select bank0
 14715  0A5C  00A2               	movwf	??_LCDsend
 14716  0A5D  0023               	movlb	3	; select bank3
 14717  0A5E  0811               	movf	17,w	;volatile
 14718  0A5F  391F               	andlw	31
 14719  0A60  0020               	movlb	0	; select bank0
 14720  0A61  0422               	iorwf	??_LCDsend,w
 14721  0A62  1D03               	btfss	3,2
 14722  0A63  2A65               	goto	u5141
 14723  0A64  2A66               	goto	u5140
 14724  0A65                     u5141:
 14725  0A65  2A57               	goto	l5915
 14726  0A66                     u5140:
 14727  0A66                     l87:	
 14728                           ;LCD/lcd.c: 23:   do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 14729                           
 14730  0A66  0023               	movlb	3	; select bank3
 14731  0A67  1511               	bsf	17,2	;volatile
 14732  0A68                     l88:
 14733  0A68  1911               	btfsc	17,2	;volatile
 14734  0A69  2A6B               	goto	u5151
 14735  0A6A  2A6C               	goto	u5150
 14736  0A6B                     u5151:
 14737  0A6B  2A68               	goto	l88
 14738  0A6C                     u5150:
 14739  0A6C                     l92:
 14740  0A6C  0008               	return
 14741  0A6D                     __end_of_LCDsend:
 14742                           
 14743                           	psect	text42
 14744  16EF                     __ptext42:	
 14745 ;; *************** function _LCDbusy *****************
 14746 ;; Defined at:
 14747 ;;		line 119 in file "LCD/lcd.c"
 14748 ;; Parameters:    Size  Location     Type
 14749 ;;		None
 14750 ;; Auto vars:     Size  Location     Type
 14751 ;;		None
 14752 ;; Return value:  Size  Location     Type
 14753 ;;                  2    7[BANK0 ] int 
 14754 ;; Registers used:
 14755 ;;		wreg, status,2, status,0, pclath, cstack
 14756 ;; Tracked objects:
 14757 ;;		On entry : 0/0
 14758 ;;		On exit  : 0/0
 14759 ;;		Unchanged: 0/0
 14760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14761 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14764 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14765 ;;Total ram usage:        2 bytes
 14766 ;; Hardware stack levels used: 1
 14767 ;; Hardware stack levels required when called: 7
 14768 ;; This function calls:
 14769 ;;		_LCDrecv
 14770 ;; This function is called by:
 14771 ;;		_main
 14772 ;; This function uses a non-reentrant model
 14773 ;;
 14774                           
 14775                           
 14776                           ;psect for function _LCDbusy
 14777  16EF                     _LCDbusy:
 14778  16EF                     l6109:	
 14779                           ;incstack = 0
 14780                           ; Regs used in _LCDbusy: [wreg+status,2+status,0+pclath+cstack]
 14781                           
 14782                           
 14783                           ;LCD/lcd.c: 121:   if(LCDrecv(0) & 0x80) return 1;
 14784  16EF  3000               	movlw	0
 14785  16F0  3181  21CD  3196   	fcall	_LCDrecv
 14786  16F3  3980               	andlw	128
 14787  16F4  1903               	btfsc	3,2
 14788  16F5  2EF7               	goto	u5461
 14789  16F6  2EF8               	goto	u5460
 14790  16F7                     u5461:
 14791  16F7  2EFE               	goto	l6115
 14792  16F8                     u5460:
 14793  16F8                     l6111:
 14794  16F8  3001               	movlw	1
 14795  16F9  0020               	movlb	0	; select bank0
 14796  16FA  00A7               	movwf	?_LCDbusy
 14797  16FB  3000               	movlw	0
 14798  16FC  00A8               	movwf	?_LCDbusy+1
 14799  16FD  2F01               	goto	l248
 14800  16FE                     l6115:
 14801                           
 14802                           ;LCD/lcd.c: 122:   return 0;
 14803  16FE  0020               	movlb	0	; select bank0
 14804  16FF  01A7               	clrf	?_LCDbusy
 14805  1700  01A8               	clrf	?_LCDbusy+1
 14806  1701                     l248:
 14807  1701  0008               	return
 14808  1702                     __end_of_LCDbusy:
 14809                           
 14810                           	psect	text43
 14811  01CD                     __ptext43:	
 14812 ;; *************** function _LCDrecv *****************
 14813 ;; Defined at:
 14814 ;;		line 25 in file "LCD/lcd.c"
 14815 ;; Parameters:    Size  Location     Type
 14816 ;;  mode            1    wreg     unsigned char 
 14817 ;; Auto vars:     Size  Location     Type
 14818 ;;  mode            1    6[BANK0 ] unsigned char 
 14819 ;;  lc              1    5[BANK0 ] unsigned char 
 14820 ;;  hc              1    4[BANK0 ] unsigned char 
 14821 ;; Return value:  Size  Location     Type
 14822 ;;                  1    wreg      unsigned char 
 14823 ;; Registers used:
 14824 ;;		wreg, status,2, status,0, pclath, cstack
 14825 ;; Tracked objects:
 14826 ;;		On entry : 0/0
 14827 ;;		On exit  : 0/0
 14828 ;;		Unchanged: 0/0
 14829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14831 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14832 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14833 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14834 ;;Total ram usage:        5 bytes
 14835 ;; Hardware stack levels used: 1
 14836 ;; Hardware stack levels required when called: 6
 14837 ;; This function calls:
 14838 ;;		_ReadI2C
 14839 ;;		_WriteI2C
 14840 ;; This function is called by:
 14841 ;;		_LCDbusy
 14842 ;; This function uses a non-reentrant model
 14843 ;;
 14844                           
 14845                           
 14846                           ;psect for function _LCDrecv
 14847  01CD                     _LCDrecv:
 14848                           
 14849                           ;incstack = 0
 14850                           ; Regs used in _LCDrecv: [wreg+status,2+status,0+pclath+cstack]
 14851                           ;LCDrecv@mode stored from wreg
 14852  01CD  0020               	movlb	0	; select bank0
 14853  01CE  00A6               	movwf	LCDrecv@mode
 14854  01CF                     l5917:
 14855  01CF                     l5919:	
 14856                           ;LCD/lcd.c: 25: unsigned char LCDrecv(unsigned char mode);LCD/lcd.c: 26: {;LCD/lcd.c: 27
      +                          :   unsigned char hc;;LCD/lcd.c: 28:   unsigned char lc;;LCD/lcd.c: 30:   while ((SSP1CO
      +                          N2 & 0x1F) | (SSP1STATbits.R_W));
 14857                           
 14858  01CF  0023               	movlb	3	; select bank3
 14859  01D0  0C0F               	rrf	15,w	;volatile
 14860  01D1  0C89               	rrf	9,f
 14861  01D2  3901               	andlw	1
 14862  01D3  0020               	movlb	0	; select bank0
 14863  01D4  00A2               	movwf	??_LCDrecv
 14864  01D5  0023               	movlb	3	; select bank3
 14865  01D6  0811               	movf	17,w	;volatile
 14866  01D7  391F               	andlw	31
 14867  01D8  0020               	movlb	0	; select bank0
 14868  01D9  0422               	iorwf	??_LCDrecv,w
 14869  01DA  1D03               	btfss	3,2
 14870  01DB  29DD               	goto	u5161
 14871  01DC  29DE               	goto	u5160
 14872  01DD                     u5161:
 14873  01DD  29CF               	goto	l5919
 14874  01DE                     u5160:
 14875  01DE                     l98:	
 14876                           ;LCD/lcd.c: 31:   do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14877                           
 14878  01DE  0023               	movlb	3	; select bank3
 14879  01DF  1411               	bsf	17,0	;volatile
 14880  01E0                     l99:
 14881  01E0  1811               	btfsc	17,0	;volatile
 14882  01E1  29E3               	goto	u5171
 14883  01E2  29E4               	goto	u5170
 14884  01E3                     u5171:
 14885  01E3  29E0               	goto	l99
 14886  01E4                     u5170:
 14887  01E4                     l5921:
 14888  01E4  0023               	movlb	3	; select bank3
 14889  01E5  0C0F               	rrf	15,w	;volatile
 14890  01E6  0C89               	rrf	9,f
 14891  01E7  3901               	andlw	1
 14892  01E8  0020               	movlb	0	; select bank0
 14893  01E9  00A2               	movwf	??_LCDrecv
 14894  01EA  0023               	movlb	3	; select bank3
 14895  01EB  0811               	movf	17,w	;volatile
 14896  01EC  391F               	andlw	31
 14897  01ED  0020               	movlb	0	; select bank0
 14898  01EE  0422               	iorwf	??_LCDrecv,w
 14899  01EF  1D03               	btfss	3,2
 14900  01F0  29F2               	goto	u5181
 14901  01F1  29F3               	goto	u5180
 14902  01F2                     u5181:
 14903  01F2  29E4               	goto	l5921
 14904  01F3                     u5180:
 14905  01F3                     l5923:
 14906                           
 14907                           ;LCD/lcd.c: 32:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14908  01F3  304E               	movlw	78
 14909  01F4  318A  22C3  3181   	fcall	_WriteI2C
 14910  01F7                     l5925:
 14911  01F7  0023               	movlb	3	; select bank3
 14912  01F8  0C0F               	rrf	15,w	;volatile
 14913  01F9  0C89               	rrf	9,f
 14914  01FA  3901               	andlw	1
 14915  01FB  0020               	movlb	0	; select bank0
 14916  01FC  00A2               	movwf	??_LCDrecv
 14917  01FD  0023               	movlb	3	; select bank3
 14918  01FE  0811               	movf	17,w	;volatile
 14919  01FF  391F               	andlw	31
 14920  0200  0020               	movlb	0	; select bank0
 14921  0201  0422               	iorwf	??_LCDrecv,w
 14922  0202  1D03               	btfss	3,2
 14923  0203  2A05               	goto	u5191
 14924  0204  2A06               	goto	u5190
 14925  0205                     u5191:
 14926  0205  29F7               	goto	l5925
 14927  0206                     u5190:
 14928  0206                     l5927:
 14929                           
 14930                           ;LCD/lcd.c: 33:   WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1S
      +                          TATbits.R_W));
 14931  0206  0826               	movf	LCDrecv@mode,w
 14932  0207  38FA               	iorlw	250
 14933  0208  318A  22C3  3181   	fcall	_WriteI2C
 14934  020B                     l5929:
 14935  020B  0023               	movlb	3	; select bank3
 14936  020C  0C0F               	rrf	15,w	;volatile
 14937  020D  0C89               	rrf	9,f
 14938  020E  3901               	andlw	1
 14939  020F  0020               	movlb	0	; select bank0
 14940  0210  00A2               	movwf	??_LCDrecv
 14941  0211  0023               	movlb	3	; select bank3
 14942  0212  0811               	movf	17,w	;volatile
 14943  0213  391F               	andlw	31
 14944  0214  0020               	movlb	0	; select bank0
 14945  0215  0422               	iorwf	??_LCDrecv,w
 14946  0216  1D03               	btfss	3,2
 14947  0217  2A19               	goto	u5201
 14948  0218  2A1A               	goto	u5200
 14949  0219                     u5201:
 14950  0219  2A0B               	goto	l5929
 14951  021A                     u5200:
 14952  021A                     l5931:
 14953                           
 14954                           ;LCD/lcd.c: 34:   WriteI2C(0xf0 | 0x08 | 0x04 | 0x02 | mode); while ((SSP1CON2 & 0x1F) |
      +                           (SSP1STATbits.R_W));
 14955  021A  0826               	movf	LCDrecv@mode,w
 14956  021B  38FE               	iorlw	254
 14957  021C  318A  22C3  3181   	fcall	_WriteI2C
 14958  021F                     l5933:
 14959  021F  0023               	movlb	3	; select bank3
 14960  0220  0C0F               	rrf	15,w	;volatile
 14961  0221  0C89               	rrf	9,f
 14962  0222  3901               	andlw	1
 14963  0223  0020               	movlb	0	; select bank0
 14964  0224  00A2               	movwf	??_LCDrecv
 14965  0225  0023               	movlb	3	; select bank3
 14966  0226  0811               	movf	17,w	;volatile
 14967  0227  391F               	andlw	31
 14968  0228  0020               	movlb	0	; select bank0
 14969  0229  0422               	iorwf	??_LCDrecv,w
 14970  022A  1D03               	btfss	3,2
 14971  022B  2A2D               	goto	u5211
 14972  022C  2A2E               	goto	u5210
 14973  022D                     u5211:
 14974  022D  2A1F               	goto	l5933
 14975  022E                     u5210:
 14976  022E                     l114:
 14977                           
 14978                           ;LCD/lcd.c: 35:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 14979  022E  0000               	nop
 14980  022F                     l115:	
 14981                           ;LCD/lcd.c: 36:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 14982                           
 14983  022F  0023               	movlb	3	; select bank3
 14984  0230  1491               	bsf	17,1	;volatile
 14985  0231                     l116:
 14986  0231  1891               	btfsc	17,1	;volatile
 14987  0232  2A34               	goto	u5221
 14988  0233  2A35               	goto	u5220
 14989  0234                     u5221:
 14990  0234  2A31               	goto	l116
 14991  0235                     u5220:
 14992  0235                     l5935:
 14993  0235  0023               	movlb	3	; select bank3
 14994  0236  0C0F               	rrf	15,w	;volatile
 14995  0237  0C89               	rrf	9,f
 14996  0238  3901               	andlw	1
 14997  0239  0020               	movlb	0	; select bank0
 14998  023A  00A2               	movwf	??_LCDrecv
 14999  023B  0023               	movlb	3	; select bank3
 15000  023C  0811               	movf	17,w	;volatile
 15001  023D  391F               	andlw	31
 15002  023E  0020               	movlb	0	; select bank0
 15003  023F  0422               	iorwf	??_LCDrecv,w
 15004  0240  1D03               	btfss	3,2
 15005  0241  2A43               	goto	u5231
 15006  0242  2A44               	goto	u5230
 15007  0243                     u5231:
 15008  0243  2A35               	goto	l5935
 15009  0244                     u5230:
 15010  0244                     l5937:
 15011                           
 15012                           ;LCD/lcd.c: 37:   WriteI2C(0x4e | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15013  0244  304F               	movlw	79
 15014  0245  318A  22C3  3181   	fcall	_WriteI2C
 15015  0248                     l5939:
 15016  0248  0023               	movlb	3	; select bank3
 15017  0249  0C0F               	rrf	15,w	;volatile
 15018  024A  0C89               	rrf	9,f
 15019  024B  3901               	andlw	1
 15020  024C  0020               	movlb	0	; select bank0
 15021  024D  00A2               	movwf	??_LCDrecv
 15022  024E  0023               	movlb	3	; select bank3
 15023  024F  0811               	movf	17,w	;volatile
 15024  0250  391F               	andlw	31
 15025  0251  0020               	movlb	0	; select bank0
 15026  0252  0422               	iorwf	??_LCDrecv,w
 15027  0253  1D03               	btfss	3,2
 15028  0254  2A56               	goto	u5241
 15029  0255  2A57               	goto	u5240
 15030  0256                     u5241:
 15031  0256  2A48               	goto	l5939
 15032  0257                     u5240:
 15033  0257                     l5941:
 15034                           
 15035                           ;LCD/lcd.c: 38:   hc = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15036  0257  3197  27A0  3181   	fcall	_ReadI2C
 15037  025A  0020               	movlb	0	; select bank0
 15038  025B  00A2               	movwf	??_LCDrecv
 15039  025C  0822               	movf	??_LCDrecv,w
 15040  025D  00A4               	movwf	LCDrecv@hc
 15041  025E                     l5943:
 15042  025E  0023               	movlb	3	; select bank3
 15043  025F  0C0F               	rrf	15,w	;volatile
 15044  0260  0C89               	rrf	9,f
 15045  0261  3901               	andlw	1
 15046  0262  0020               	movlb	0	; select bank0
 15047  0263  00A2               	movwf	??_LCDrecv
 15048  0264  0023               	movlb	3	; select bank3
 15049  0265  0811               	movf	17,w	;volatile
 15050  0266  391F               	andlw	31
 15051  0267  0020               	movlb	0	; select bank0
 15052  0268  0422               	iorwf	??_LCDrecv,w
 15053  0269  1D03               	btfss	3,2
 15054  026A  2A6C               	goto	u5251
 15055  026B  2A6D               	goto	u5250
 15056  026C                     u5251:
 15057  026C  2A5E               	goto	l5943
 15058  026D                     u5250:
 15059  026D                     l129:	
 15060                           ;LCD/lcd.c: 39:   do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKE
      +                          N); } while (0);
 15061                           
 15062  026D  0023               	movlb	3	; select bank3
 15063  026E  1691               	bsf	17,5	;volatile
 15064  026F  1611               	bsf	17,4	;volatile
 15065  0270                     l130:
 15066  0270  1A11               	btfsc	17,4	;volatile
 15067  0271  2A73               	goto	u5261
 15068  0272  2A74               	goto	u5260
 15069  0273                     u5261:
 15070  0273  2A70               	goto	l130
 15071  0274                     u5260:
 15072  0274                     l134:	
 15073                           ;LCD/lcd.c: 40:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15074                           
 15075  0274  1491               	bsf	17,1	;volatile
 15076  0275                     l135:
 15077  0275  1891               	btfsc	17,1	;volatile
 15078  0276  2A78               	goto	u5271
 15079  0277  2A79               	goto	u5270
 15080  0278                     u5271:
 15081  0278  2A75               	goto	l135
 15082  0279                     u5270:
 15083  0279                     l5945:
 15084  0279  0023               	movlb	3	; select bank3
 15085  027A  0C0F               	rrf	15,w	;volatile
 15086  027B  0C89               	rrf	9,f
 15087  027C  3901               	andlw	1
 15088  027D  0020               	movlb	0	; select bank0
 15089  027E  00A2               	movwf	??_LCDrecv
 15090  027F  0023               	movlb	3	; select bank3
 15091  0280  0811               	movf	17,w	;volatile
 15092  0281  391F               	andlw	31
 15093  0282  0020               	movlb	0	; select bank0
 15094  0283  0422               	iorwf	??_LCDrecv,w
 15095  0284  1D03               	btfss	3,2
 15096  0285  2A87               	goto	u5281
 15097  0286  2A88               	goto	u5280
 15098  0287                     u5281:
 15099  0287  2A79               	goto	l5945
 15100  0288                     u5280:
 15101  0288                     l5947:
 15102                           
 15103                           ;LCD/lcd.c: 41:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15104  0288  304E               	movlw	78
 15105  0289  318A  22C3  3181   	fcall	_WriteI2C
 15106  028C                     l5949:
 15107  028C  0023               	movlb	3	; select bank3
 15108  028D  0C0F               	rrf	15,w	;volatile
 15109  028E  0C89               	rrf	9,f
 15110  028F  3901               	andlw	1
 15111  0290  0020               	movlb	0	; select bank0
 15112  0291  00A2               	movwf	??_LCDrecv
 15113  0292  0023               	movlb	3	; select bank3
 15114  0293  0811               	movf	17,w	;volatile
 15115  0294  391F               	andlw	31
 15116  0295  0020               	movlb	0	; select bank0
 15117  0296  0422               	iorwf	??_LCDrecv,w
 15118  0297  1D03               	btfss	3,2
 15119  0298  2A9A               	goto	u5291
 15120  0299  2A9B               	goto	u5290
 15121  029A                     u5291:
 15122  029A  2A8C               	goto	l5949
 15123  029B                     u5290:
 15124  029B                     l5951:
 15125                           
 15126                           ;LCD/lcd.c: 42:   WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1S
      +                          TATbits.R_W));
 15127  029B  0826               	movf	LCDrecv@mode,w
 15128  029C  38FA               	iorlw	250
 15129  029D  318A  22C3  3181   	fcall	_WriteI2C
 15130  02A0                     l5953:
 15131  02A0  0023               	movlb	3	; select bank3
 15132  02A1  0C0F               	rrf	15,w	;volatile
 15133  02A2  0C89               	rrf	9,f
 15134  02A3  3901               	andlw	1
 15135  02A4  0020               	movlb	0	; select bank0
 15136  02A5  00A2               	movwf	??_LCDrecv
 15137  02A6  0023               	movlb	3	; select bank3
 15138  02A7  0811               	movf	17,w	;volatile
 15139  02A8  391F               	andlw	31
 15140  02A9  0020               	movlb	0	; select bank0
 15141  02AA  0422               	iorwf	??_LCDrecv,w
 15142  02AB  1D03               	btfss	3,2
 15143  02AC  2AAE               	goto	u5301
 15144  02AD  2AAF               	goto	u5300
 15145  02AE                     u5301:
 15146  02AE  2AA0               	goto	l5953
 15147  02AF                     u5300:
 15148  02AF                     l5955:
 15149                           
 15150                           ;LCD/lcd.c: 43:   WriteI2C(0xf0 | 0x08 | 0x04 | 0x02 | mode); while ((SSP1CON2 & 0x1F) |
      +                           (SSP1STATbits.R_W));
 15151  02AF  0826               	movf	LCDrecv@mode,w
 15152  02B0  38FE               	iorlw	254
 15153  02B1  318A  22C3  3181   	fcall	_WriteI2C
 15154  02B4                     l5957:
 15155  02B4  0023               	movlb	3	; select bank3
 15156  02B5  0C0F               	rrf	15,w	;volatile
 15157  02B6  0C89               	rrf	9,f
 15158  02B7  3901               	andlw	1
 15159  02B8  0020               	movlb	0	; select bank0
 15160  02B9  00A2               	movwf	??_LCDrecv
 15161  02BA  0023               	movlb	3	; select bank3
 15162  02BB  0811               	movf	17,w	;volatile
 15163  02BC  391F               	andlw	31
 15164  02BD  0020               	movlb	0	; select bank0
 15165  02BE  0422               	iorwf	??_LCDrecv,w
 15166  02BF  1D03               	btfss	3,2
 15167  02C0  2AC2               	goto	u5311
 15168  02C1  2AC3               	goto	u5310
 15169  02C2                     u5311:
 15170  02C2  2AB4               	goto	l5957
 15171  02C3                     u5310:
 15172  02C3                     l150:
 15173                           
 15174                           ;LCD/lcd.c: 44:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 15175  02C3  0000               	nop
 15176  02C4                     l151:	
 15177                           ;LCD/lcd.c: 45:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15178                           
 15179  02C4  0023               	movlb	3	; select bank3
 15180  02C5  1491               	bsf	17,1	;volatile
 15181  02C6                     l152:
 15182  02C6  1891               	btfsc	17,1	;volatile
 15183  02C7  2AC9               	goto	u5321
 15184  02C8  2ACA               	goto	u5320
 15185  02C9                     u5321:
 15186  02C9  2AC6               	goto	l152
 15187  02CA                     u5320:
 15188  02CA                     l5959:
 15189  02CA  0023               	movlb	3	; select bank3
 15190  02CB  0C0F               	rrf	15,w	;volatile
 15191  02CC  0C89               	rrf	9,f
 15192  02CD  3901               	andlw	1
 15193  02CE  0020               	movlb	0	; select bank0
 15194  02CF  00A2               	movwf	??_LCDrecv
 15195  02D0  0023               	movlb	3	; select bank3
 15196  02D1  0811               	movf	17,w	;volatile
 15197  02D2  391F               	andlw	31
 15198  02D3  0020               	movlb	0	; select bank0
 15199  02D4  0422               	iorwf	??_LCDrecv,w
 15200  02D5  1D03               	btfss	3,2
 15201  02D6  2AD8               	goto	u5331
 15202  02D7  2AD9               	goto	u5330
 15203  02D8                     u5331:
 15204  02D8  2ACA               	goto	l5959
 15205  02D9                     u5330:
 15206  02D9                     l5961:
 15207                           
 15208                           ;LCD/lcd.c: 46:   WriteI2C(0x4e | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15209  02D9  304F               	movlw	79
 15210  02DA  318A  22C3  3181   	fcall	_WriteI2C
 15211  02DD                     l5963:
 15212  02DD  0023               	movlb	3	; select bank3
 15213  02DE  0C0F               	rrf	15,w	;volatile
 15214  02DF  0C89               	rrf	9,f
 15215  02E0  3901               	andlw	1
 15216  02E1  0020               	movlb	0	; select bank0
 15217  02E2  00A2               	movwf	??_LCDrecv
 15218  02E3  0023               	movlb	3	; select bank3
 15219  02E4  0811               	movf	17,w	;volatile
 15220  02E5  391F               	andlw	31
 15221  02E6  0020               	movlb	0	; select bank0
 15222  02E7  0422               	iorwf	??_LCDrecv,w
 15223  02E8  1D03               	btfss	3,2
 15224  02E9  2AEB               	goto	u5341
 15225  02EA  2AEC               	goto	u5340
 15226  02EB                     u5341:
 15227  02EB  2ADD               	goto	l5963
 15228  02EC                     u5340:
 15229  02EC                     l5965:
 15230                           
 15231                           ;LCD/lcd.c: 47:   lc = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15232  02EC  3197  27A0  3181   	fcall	_ReadI2C
 15233  02EF  0020               	movlb	0	; select bank0
 15234  02F0  00A2               	movwf	??_LCDrecv
 15235  02F1  0822               	movf	??_LCDrecv,w
 15236  02F2  00A5               	movwf	LCDrecv@lc
 15237  02F3                     l5967:
 15238  02F3  0023               	movlb	3	; select bank3
 15239  02F4  0C0F               	rrf	15,w	;volatile
 15240  02F5  0C89               	rrf	9,f
 15241  02F6  3901               	andlw	1
 15242  02F7  0020               	movlb	0	; select bank0
 15243  02F8  00A2               	movwf	??_LCDrecv
 15244  02F9  0023               	movlb	3	; select bank3
 15245  02FA  0811               	movf	17,w	;volatile
 15246  02FB  391F               	andlw	31
 15247  02FC  0020               	movlb	0	; select bank0
 15248  02FD  0422               	iorwf	??_LCDrecv,w
 15249  02FE  1D03               	btfss	3,2
 15250  02FF  2B01               	goto	u5351
 15251  0300  2B02               	goto	u5350
 15252  0301                     u5351:
 15253  0301  2AF3               	goto	l5967
 15254  0302                     u5350:
 15255  0302                     l165:	
 15256                           ;LCD/lcd.c: 48:   do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKE
      +                          N); } while (0);
 15257                           
 15258  0302  0023               	movlb	3	; select bank3
 15259  0303  1691               	bsf	17,5	;volatile
 15260  0304  1611               	bsf	17,4	;volatile
 15261  0305                     l166:
 15262  0305  1A11               	btfsc	17,4	;volatile
 15263  0306  2B08               	goto	u5361
 15264  0307  2B09               	goto	u5360
 15265  0308                     u5361:
 15266  0308  2B05               	goto	l166
 15267  0309                     u5360:
 15268  0309                     l170:	
 15269                           ;LCD/lcd.c: 49:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15270                           
 15271  0309  1491               	bsf	17,1	;volatile
 15272  030A                     l171:
 15273  030A  1891               	btfsc	17,1	;volatile
 15274  030B  2B0D               	goto	u5371
 15275  030C  2B0E               	goto	u5370
 15276  030D                     u5371:
 15277  030D  2B0A               	goto	l171
 15278  030E                     u5370:
 15279  030E                     l5969:
 15280  030E  0023               	movlb	3	; select bank3
 15281  030F  0C0F               	rrf	15,w	;volatile
 15282  0310  0C89               	rrf	9,f
 15283  0311  3901               	andlw	1
 15284  0312  0020               	movlb	0	; select bank0
 15285  0313  00A2               	movwf	??_LCDrecv
 15286  0314  0023               	movlb	3	; select bank3
 15287  0315  0811               	movf	17,w	;volatile
 15288  0316  391F               	andlw	31
 15289  0317  0020               	movlb	0	; select bank0
 15290  0318  0422               	iorwf	??_LCDrecv,w
 15291  0319  1D03               	btfss	3,2
 15292  031A  2B1C               	goto	u5381
 15293  031B  2B1D               	goto	u5380
 15294  031C                     u5381:
 15295  031C  2B0E               	goto	l5969
 15296  031D                     u5380:
 15297  031D                     l5971:
 15298                           
 15299                           ;LCD/lcd.c: 50:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 15300  031D  304E               	movlw	78
 15301  031E  318A  22C3  3181   	fcall	_WriteI2C
 15302  0321                     l5973:
 15303  0321  0023               	movlb	3	; select bank3
 15304  0322  0C0F               	rrf	15,w	;volatile
 15305  0323  0C89               	rrf	9,f
 15306  0324  3901               	andlw	1
 15307  0325  0020               	movlb	0	; select bank0
 15308  0326  00A2               	movwf	??_LCDrecv
 15309  0327  0023               	movlb	3	; select bank3
 15310  0328  0811               	movf	17,w	;volatile
 15311  0329  391F               	andlw	31
 15312  032A  0020               	movlb	0	; select bank0
 15313  032B  0422               	iorwf	??_LCDrecv,w
 15314  032C  1D03               	btfss	3,2
 15315  032D  2B2F               	goto	u5391
 15316  032E  2B30               	goto	u5390
 15317  032F                     u5391:
 15318  032F  2B21               	goto	l5973
 15319  0330                     u5390:
 15320  0330                     l5975:
 15321                           
 15322                           ;LCD/lcd.c: 51:   WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1S
      +                          TATbits.R_W));
 15323  0330  0826               	movf	LCDrecv@mode,w
 15324  0331  38FA               	iorlw	250
 15325  0332  318A  22C3  3181   	fcall	_WriteI2C
 15326  0335                     l5977:
 15327  0335  0023               	movlb	3	; select bank3
 15328  0336  0C0F               	rrf	15,w	;volatile
 15329  0337  0C89               	rrf	9,f
 15330  0338  3901               	andlw	1
 15331  0339  0020               	movlb	0	; select bank0
 15332  033A  00A2               	movwf	??_LCDrecv
 15333  033B  0023               	movlb	3	; select bank3
 15334  033C  0811               	movf	17,w	;volatile
 15335  033D  391F               	andlw	31
 15336  033E  0020               	movlb	0	; select bank0
 15337  033F  0422               	iorwf	??_LCDrecv,w
 15338  0340  1D03               	btfss	3,2
 15339  0341  2B43               	goto	u5401
 15340  0342  2B44               	goto	u5400
 15341  0343                     u5401:
 15342  0343  2B35               	goto	l5977
 15343  0344                     u5400:
 15344  0344                     l184:	
 15345                           ;LCD/lcd.c: 52:   do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 15346                           
 15347  0344  0023               	movlb	3	; select bank3
 15348  0345  1511               	bsf	17,2	;volatile
 15349  0346                     l185:
 15350  0346  1911               	btfsc	17,2	;volatile
 15351  0347  2B49               	goto	u5411
 15352  0348  2B4A               	goto	u5410
 15353  0349                     u5411:
 15354  0349  2B46               	goto	l185
 15355  034A                     u5410:
 15356  034A                     l5979:
 15357                           
 15358                           ;LCD/lcd.c: 53:   return ((hc&0xf0) | ((lc>>4)&0x0f));
 15359  034A  0020               	movlb	0	; select bank0
 15360  034B  0825               	movf	LCDrecv@lc,w
 15361  034C  00A2               	movwf	??_LCDrecv
 15362  034D  3004               	movlw	4
 15363  034E                     u5425:
 15364  034E  36A2               	lsrf	??_LCDrecv,f
 15365  034F  0B89               	decfsz	9,f
 15366  0350  2B4E               	goto	u5425
 15367  0351  300F               	movlw	15
 15368  0352  0522               	andwf	??_LCDrecv,w
 15369  0353  00A3               	movwf	??_LCDrecv+1
 15370  0354  0824               	movf	LCDrecv@hc,w
 15371  0355  39F0               	andlw	240
 15372  0356  0423               	iorwf	??_LCDrecv+1,w
 15373  0357                     l189:
 15374  0357  0008               	return
 15375  0358                     __end_of_LCDrecv:
 15376                           
 15377                           	psect	text44
 15378  0AC3                     __ptext44:	
 15379 ;; *************** function _WriteI2C *****************
 15380 ;; Defined at:
 15381 ;;		line 59 in file "I2C/i2c.c"
 15382 ;; Parameters:    Size  Location     Type
 15383 ;;  data_out        1    wreg     unsigned char 
 15384 ;; Auto vars:     Size  Location     Type
 15385 ;;  data_out        1    1[BANK0 ] unsigned char 
 15386 ;; Return value:  Size  Location     Type
 15387 ;;                  1    wreg      char 
 15388 ;; Registers used:
 15389 ;;		wreg, status,2, status,0
 15390 ;; Tracked objects:
 15391 ;;		On entry : 0/0
 15392 ;;		On exit  : 0/0
 15393 ;;		Unchanged: 0/0
 15394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15396 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15397 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15398 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15399 ;;Total ram usage:        2 bytes
 15400 ;; Hardware stack levels used: 1
 15401 ;; Hardware stack levels required when called: 5
 15402 ;; This function calls:
 15403 ;;		Nothing
 15404 ;; This function is called by:
 15405 ;;		_LCDsend
 15406 ;;		_LCDrecv
 15407 ;;		_LCDsend2x4
 15408 ;;		_readTC74
 15409 ;; This function uses a non-reentrant model
 15410 ;;
 15411                           
 15412                           
 15413                           ;psect for function _WriteI2C
 15414  0AC3                     _WriteI2C:
 15415                           
 15416                           ;incstack = 0
 15417                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 15418                           ;WriteI2C@data_out stored from wreg
 15419  0AC3  0020               	movlb	0	; select bank0
 15420  0AC4  00A1               	movwf	WriteI2C@data_out
 15421  0AC5                     l5631:
 15422                           
 15423                           ;I2C/i2c.c: 59: signed char WriteI2C( unsigned char data_out );I2C/i2c.c: 60: {;I2C/i2c.
      +                          c: 61:   SSP1BUF = data_out;
 15424  0AC5  0821               	movf	WriteI2C@data_out,w
 15425  0AC6  0023               	movlb	3	; select bank3
 15426  0AC7  008C               	movwf	12	;volatile
 15427  0AC8                     l5633:
 15428                           
 15429                           ;I2C/i2c.c: 62:   if ( SSP1CON1bits.WCOL )
 15430  0AC8  1F90               	btfss	16,7	;volatile
 15431  0AC9  2ACB               	goto	u4521
 15432  0ACA  2ACC               	goto	u4520
 15433  0ACB                     u4521:
 15434  0ACB  2ACD               	goto	l5639
 15435  0ACC                     u4520:
 15436  0ACC  2B1C               	goto	l36
 15437  0ACD                     l5639:
 15438                           
 15439                           ;I2C/i2c.c: 65:   {;I2C/i2c.c: 66:  if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)!=0x0
      +                          B) )
 15440  0ACD  300F               	movlw	15
 15441  0ACE  0510               	andwf	16,w	;volatile
 15442  0ACF  0020               	movlb	0	; select bank0
 15443  0AD0  00A0               	movwf	??_WriteI2C
 15444  0AD1  3008               	movlw	8
 15445  0AD2  0620               	xorwf	??_WriteI2C,w
 15446  0AD3  1903               	btfsc	3,2
 15447  0AD4  2AD6               	goto	u4531
 15448  0AD5  2AD7               	goto	u4530
 15449  0AD6                     u4531:
 15450  0AD6  2AF0               	goto	l5651
 15451  0AD7                     u4530:
 15452  0AD7                     l5641:
 15453  0AD7  300F               	movlw	15
 15454  0AD8  0023               	movlb	3	; select bank3
 15455  0AD9  0510               	andwf	16,w	;volatile
 15456  0ADA  0020               	movlb	0	; select bank0
 15457  0ADB  00A0               	movwf	??_WriteI2C
 15458  0ADC  300B               	movlw	11
 15459  0ADD  0620               	xorwf	??_WriteI2C,w
 15460  0ADE  1903               	btfsc	3,2
 15461  0ADF  2AE1               	goto	u4541
 15462  0AE0  2AE2               	goto	u4540
 15463  0AE1                     u4541:
 15464  0AE1  2AF0               	goto	l5651
 15465  0AE2                     u4540:
 15466  0AE2                     l5643:
 15467                           
 15468                           ;I2C/i2c.c: 67:  {;I2C/i2c.c: 68:        SSP1CON1bits.CKP = 1;
 15469  0AE2  0023               	movlb	3	; select bank3
 15470  0AE3  1610               	bsf	16,4	;volatile
 15471  0AE4                     l39:	
 15472                           ;I2C/i2c.c: 69:        while ( !PIR3bits.SSP1IF );
 15473                           
 15474  0AE4  002E               	movlb	14	; select bank14
 15475  0AE5  1C0F               	btfss	15,0	;volatile
 15476  0AE6  2AE8               	goto	u4551
 15477  0AE7  2AE9               	goto	u4550
 15478  0AE8                     u4551:
 15479  0AE8  2AE4               	goto	l39
 15480  0AE9                     u4550:
 15481  0AE9                     l41:
 15482                           
 15483                           ;I2C/i2c.c: 71:        if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 15484  0AE9  0023               	movlb	3	; select bank3
 15485  0AEA  190F               	btfsc	15,2	;volatile
 15486  0AEB  2AED               	goto	u4561
 15487  0AEC  2AEE               	goto	u4560
 15488  0AED                     u4561:
 15489  0AED  2B1C               	goto	l36
 15490  0AEE                     u4560:
 15491  0AEE                     l5645:
 15492  0AEE  080F               	movf	15,w	;volatile
 15493  0AEF  2B1C               	goto	l36
 15494  0AF0                     l5651:
 15495  0AF0  300F               	movlw	15
 15496  0AF1  0023               	movlb	3	; select bank3
 15497  0AF2  0510               	andwf	16,w	;volatile
 15498  0AF3  0020               	movlb	0	; select bank0
 15499  0AF4  00A0               	movwf	??_WriteI2C
 15500  0AF5  3008               	movlw	8
 15501  0AF6  0620               	xorwf	??_WriteI2C,w
 15502  0AF7  1903               	btfsc	3,2
 15503  0AF8  2AFA               	goto	u4571
 15504  0AF9  2AFB               	goto	u4570
 15505  0AFA                     u4571:
 15506  0AFA  2B06               	goto	l48
 15507  0AFB                     u4570:
 15508  0AFB                     l5653:
 15509  0AFB  300F               	movlw	15
 15510  0AFC  0023               	movlb	3	; select bank3
 15511  0AFD  0510               	andwf	16,w	;volatile
 15512  0AFE  0020               	movlb	0	; select bank0
 15513  0AFF  00A0               	movwf	??_WriteI2C
 15514  0B00  300B               	movlw	11
 15515  0B01  0620               	xorwf	??_WriteI2C,w
 15516  0B02  1D03               	btfss	3,2
 15517  0B03  2B05               	goto	u4581
 15518  0B04  2B06               	goto	u4580
 15519  0B05                     u4581:
 15520  0B05  2B1C               	goto	l36
 15521  0B06                     u4580:
 15522  0B06                     l48:
 15523  0B06  0023               	movlb	3	; select bank3
 15524  0B07  180F               	btfsc	15,0	;volatile
 15525  0B08  2B0A               	goto	u4591
 15526  0B09  2B0B               	goto	u4590
 15527  0B0A                     u4591:
 15528  0B0A  2B06               	goto	l48
 15529  0B0B                     u4590:
 15530  0B0B                     l5655:
 15531  0B0B  0023               	movlb	3	; select bank3
 15532  0B0C  0C0F               	rrf	15,w	;volatile
 15533  0B0D  0C89               	rrf	9,f
 15534  0B0E  3901               	andlw	1
 15535  0B0F  0020               	movlb	0	; select bank0
 15536  0B10  00A0               	movwf	??_WriteI2C
 15537  0B11  0023               	movlb	3	; select bank3
 15538  0B12  0811               	movf	17,w	;volatile
 15539  0B13  391F               	andlw	31
 15540  0B14  0020               	movlb	0	; select bank0
 15541  0B15  0420               	iorwf	??_WriteI2C,w
 15542  0B16  1D03               	btfss	3,2
 15543  0B17  2B19               	goto	u4601
 15544  0B18  2B1A               	goto	u4600
 15545  0B19                     u4601:
 15546  0B19  2B0B               	goto	l5655
 15547  0B1A                     u4600:
 15548  0B1A                     l53:
 15549                           
 15550                           ;I2C/i2c.c: 84:      if ( SSP1CON2bits.ACKSTAT )
 15551  0B1A  0023               	movlb	3	; select bank3
 15552  0B1B  0811               	movf	17,w	;volatile
 15553  0B1C                     l36:
 15554  0B1C  0008               	return
 15555  0B1D                     __end_of_WriteI2C:
 15556                           
 15557                           	psect	text45
 15558  17A0                     __ptext45:	
 15559 ;; *************** function _ReadI2C *****************
 15560 ;; Defined at:
 15561 ;;		line 44 in file "I2C/i2c.c"
 15562 ;; Parameters:    Size  Location     Type
 15563 ;;		None
 15564 ;; Auto vars:     Size  Location     Type
 15565 ;;		None
 15566 ;; Return value:  Size  Location     Type
 15567 ;;                  1    wreg      unsigned char 
 15568 ;; Registers used:
 15569 ;;		wreg, status,2, status,0
 15570 ;; Tracked objects:
 15571 ;;		On entry : 0/0
 15572 ;;		On exit  : 0/0
 15573 ;;		Unchanged: 0/0
 15574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15577 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15578 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15579 ;;Total ram usage:        1 bytes
 15580 ;; Hardware stack levels used: 1
 15581 ;; Hardware stack levels required when called: 5
 15582 ;; This function calls:
 15583 ;;		Nothing
 15584 ;; This function is called by:
 15585 ;;		_LCDrecv
 15586 ;;		_readTC74
 15587 ;; This function uses a non-reentrant model
 15588 ;;
 15589                           
 15590                           
 15591                           ;psect for function _ReadI2C
 15592  17A0                     _ReadI2C:
 15593  17A0                     l5763:	
 15594                           ;incstack = 0
 15595                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 15596                           
 15597                           
 15598                           ;I2C/i2c.c: 46: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 15599  17A0  300F               	movlw	15
 15600  17A1  0023               	movlb	3	; select bank3
 15601  17A2  0510               	andwf	16,w	;volatile
 15602  17A3  0020               	movlb	0	; select bank0
 15603  17A4  00A0               	movwf	??_ReadI2C
 15604  17A5  3008               	movlw	8
 15605  17A6  0620               	xorwf	??_ReadI2C,w
 15606  17A7  1903               	btfsc	3,2
 15607  17A8  2FAA               	goto	u4841
 15608  17A9  2FAB               	goto	u4840
 15609  17AA                     u4841:
 15610  17AA  2FB6               	goto	l28
 15611  17AB                     u4840:
 15612  17AB                     l5765:
 15613  17AB  300F               	movlw	15
 15614  17AC  0023               	movlb	3	; select bank3
 15615  17AD  0510               	andwf	16,w	;volatile
 15616  17AE  0020               	movlb	0	; select bank0
 15617  17AF  00A0               	movwf	??_ReadI2C
 15618  17B0  300B               	movlw	11
 15619  17B1  0620               	xorwf	??_ReadI2C,w
 15620  17B2  1D03               	btfss	3,2
 15621  17B3  2FB5               	goto	u4851
 15622  17B4  2FB6               	goto	u4850
 15623  17B5                     u4851:
 15624  17B5  2FB8               	goto	l29
 15625  17B6                     u4850:
 15626  17B6                     l28:
 15627                           
 15628                           ;I2C/i2c.c: 47:   SSP1CON2bits.RCEN = 1;
 15629  17B6  0023               	movlb	3	; select bank3
 15630  17B7  1591               	bsf	17,3	;volatile
 15631  17B8                     l29:
 15632  17B8  0023               	movlb	3	; select bank3
 15633  17B9  1C0F               	btfss	15,0	;volatile
 15634  17BA  2FBC               	goto	u4861
 15635  17BB  2FBD               	goto	u4860
 15636  17BC                     u4861:
 15637  17BC  2FB8               	goto	l29
 15638  17BD                     u4860:
 15639  17BD                     l5767:
 15640                           
 15641                           ;I2C/i2c.c: 49:   return ( SSP1BUF );
 15642  17BD  080C               	movf	12,w	;volatile
 15643  17BE                     l32:
 15644  17BE  0008               	return
 15645  17BF                     __end_of_ReadI2C:
 15646                           
 15647                           	psect	intentry
 15648  0004                     __pintentry:	
 15649 ;; *************** function _INTERRUPT_InterruptManager *****************
 15650 ;; Defined at:
 15651 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 15652 ;; Parameters:    Size  Location     Type
 15653 ;;		None
 15654 ;; Auto vars:     Size  Location     Type
 15655 ;;		None
 15656 ;; Return value:  Size  Location     Type
 15657 ;;                  1    wreg      void 
 15658 ;; Registers used:
 15659 ;;		wreg, status,2, status,0, pclath, cstack
 15660 ;; Tracked objects:
 15661 ;;		On entry : 0/0
 15662 ;;		On exit  : 0/0
 15663 ;;		Unchanged: 0/0
 15664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15669 ;;Total ram usage:        0 bytes
 15670 ;; Hardware stack levels used: 1
 15671 ;; Hardware stack levels required when called: 4
 15672 ;; This function calls:
 15673 ;;		_TMR1_ISR
 15674 ;; This function is called by:
 15675 ;;		Interrupt level 1
 15676 ;; This function uses a non-reentrant model
 15677 ;;
 15678                           
 15679  0004                     _INTERRUPT_InterruptManager:
 15680                           
 15681                           ;incstack = 0
 15682  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 15683                           
 15684                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 15685  0005  3180               	pagesel	$
 15686  0006                     i1l5037:
 15687                           
 15688                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
 15689  0006  1F0B               	btfss	11,6	;volatile
 15690  0007  2809               	goto	u398_21
 15691  0008  280A               	goto	u398_20
 15692  0009                     u398_21:
 15693  0009  2816               	goto	i1l499
 15694  000A                     u398_20:
 15695  000A                     i1l5039:
 15696                           
 15697                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
 15698  000A  002E               	movlb	14	; select bank14
 15699  000B  1C1A               	btfss	26,0	;volatile
 15700  000C  280E               	goto	u399_21
 15701  000D  280F               	goto	u399_20
 15702  000E                     u399_21:
 15703  000E  2816               	goto	i1l499
 15704  000F                     u399_20:
 15705  000F                     i1l5041:
 15706  000F  1C10               	btfss	16,0	;volatile
 15707  0010  2812               	goto	u400_21
 15708  0011  2813               	goto	u400_20
 15709  0012                     u400_21:
 15710  0012  2816               	goto	i1l499
 15711  0013                     u400_20:
 15712  0013                     i1l5043:
 15713                           
 15714                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
 15715  0013  3196  26AF  3180   	fcall	_TMR1_ISR
 15716  0016                     i1l499:	
 15717                           ;mcc_generated_files/interrupt_manager.c: 60:         }
 15718                           
 15719  0016  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 15720  0017  0009               	retfie
 15721  0018                     __end_of_INTERRUPT_InterruptManager:
 15722                           
 15723                           	psect	text47
 15724  16AF                     __ptext47:	
 15725 ;; *************** function _TMR1_ISR *****************
 15726 ;; Defined at:
 15727 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 15728 ;; Parameters:    Size  Location     Type
 15729 ;;		None
 15730 ;; Auto vars:     Size  Location     Type
 15731 ;;		None
 15732 ;; Return value:  Size  Location     Type
 15733 ;;                  1    wreg      void 
 15734 ;; Registers used:
 15735 ;;		wreg, status,2, status,0, pclath, cstack
 15736 ;; Tracked objects:
 15737 ;;		On entry : 0/0
 15738 ;;		On exit  : 0/0
 15739 ;;		Unchanged: 0/0
 15740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15741 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15744 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15745 ;;Total ram usage:        0 bytes
 15746 ;; Hardware stack levels used: 1
 15747 ;; Hardware stack levels required when called: 3
 15748 ;; This function calls:
 15749 ;;		_TMR1_CallBack
 15750 ;;		_TMR1_WriteTimer
 15751 ;; This function is called by:
 15752 ;;		_INTERRUPT_InterruptManager
 15753 ;; This function uses a non-reentrant model
 15754 ;;
 15755                           
 15756                           
 15757                           ;psect for function _TMR1_ISR
 15758  16AF                     _TMR1_ISR:
 15759  16AF                     i1l4753:	
 15760                           ;incstack = 0
 15761                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 15762                           
 15763                           
 15764                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 15765  16AF  002E               	movlb	14	; select bank14
 15766  16B0  1010               	bcf	16,0	;volatile
 15767  16B1                     i1l4755:
 15768                           
 15769                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 15770  16B1  0021               	movlb	1	; select bank1
 15771  16B2  0868               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 15772  16B3  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 15773  16B4  0867               	movf	_timer1ReloadVal^(0+128),w	;volatile
 15774  16B5  00F0               	movwf	TMR1_WriteTimer@timerVal
 15775  16B6  3196  26CC  3196   	fcall	_TMR1_WriteTimer
 15776                           
 15777                           ;mcc_generated_files/tmr1.c: 173:     TMR1_CallBack();
 15778  16B9  3196  2695  3196   	fcall	_TMR1_CallBack
 15779  16BC                     i1l558:
 15780  16BC  0008               	return
 15781  16BD                     __end_of_TMR1_ISR:
 15782                           
 15783                           	psect	text48
 15784  16CC                     __ptext48:	
 15785 ;; *************** function _TMR1_WriteTimer *****************
 15786 ;; Defined at:
 15787 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 15788 ;; Parameters:    Size  Location     Type
 15789 ;;  timerVal        2    0[COMMON] unsigned short 
 15790 ;; Auto vars:     Size  Location     Type
 15791 ;;		None
 15792 ;; Return value:  Size  Location     Type
 15793 ;;                  1    wreg      void 
 15794 ;; Registers used:
 15795 ;;		wreg, status,2
 15796 ;; Tracked objects:
 15797 ;;		On entry : 0/0
 15798 ;;		On exit  : 0/0
 15799 ;;		Unchanged: 0/0
 15800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15801 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15804 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15805 ;;Total ram usage:        2 bytes
 15806 ;; Hardware stack levels used: 1
 15807 ;; This function calls:
 15808 ;;		Nothing
 15809 ;; This function is called by:
 15810 ;;		_TMR1_ISR
 15811 ;;		_TMR1_Reload
 15812 ;; This function uses a non-reentrant model
 15813 ;;
 15814                           
 15815                           
 15816                           ;psect for function _TMR1_WriteTimer
 15817  16CC                     _TMR1_WriteTimer:
 15818  16CC                     i1l4549:	
 15819                           ;incstack = 0
 15820                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 15821                           
 15822                           
 15823                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 15824  16CC  0024               	movlb	4	; select bank4
 15825  16CD  1D0E               	btfss	14,2	;volatile
 15826  16CE  2ED0               	goto	u346_21
 15827  16CF  2ED1               	goto	u346_20
 15828  16D0                     u346_21:
 15829  16D0  2ED8               	goto	i1l4559
 15830  16D1                     u346_20:
 15831  16D1                     i1l4551:
 15832                           
 15833                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 15834  16D1  100E               	bcf	14,0	;volatile
 15835  16D2                     i1l4553:
 15836                           
 15837                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (uint8_t)(timerVal >> 8);
 15838  16D2  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 15839  16D3  008D               	movwf	13	;volatile
 15840  16D4                     i1l4555:
 15841                           
 15842                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = (uint8_t)timerVal;
 15843  16D4  0870               	movf	TMR1_WriteTimer@timerVal,w
 15844  16D5  008C               	movwf	12	;volatile
 15845  16D6                     i1l4557:
 15846                           
 15847                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 15848  16D6  140E               	bsf	14,0	;volatile
 15849                           
 15850                           ;mcc_generated_files/tmr1.c: 140:     }
 15851  16D7  2EDC               	goto	i1l546
 15852  16D8                     i1l4559:
 15853                           
 15854                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 15855  16D8  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 15856  16D9  008D               	movwf	13	;volatile
 15857  16DA                     i1l4561:
 15858                           
 15859                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = (uint8_t)timerVal;
 15860  16DA  0870               	movf	TMR1_WriteTimer@timerVal,w
 15861  16DB  008C               	movwf	12	;volatile
 15862  16DC                     i1l546:
 15863  16DC  0008               	return
 15864  16DD                     __end_of_TMR1_WriteTimer:
 15865                           
 15866                           	psect	text49
 15867  1695                     __ptext49:	
 15868 ;; *************** function _TMR1_CallBack *****************
 15869 ;; Defined at:
 15870 ;;		line 176 in file "mcc_generated_files/tmr1.c"
 15871 ;; Parameters:    Size  Location     Type
 15872 ;;		None
 15873 ;; Auto vars:     Size  Location     Type
 15874 ;;		None
 15875 ;; Return value:  Size  Location     Type
 15876 ;;                  1    wreg      void 
 15877 ;; Registers used:
 15878 ;;		wreg, status,2, status,0, pclath, cstack
 15879 ;; Tracked objects:
 15880 ;;		On entry : 0/0
 15881 ;;		On exit  : 0/0
 15882 ;;		Unchanged: 0/0
 15883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15888 ;;Total ram usage:        0 bytes
 15889 ;; Hardware stack levels used: 1
 15890 ;; Hardware stack levels required when called: 2
 15891 ;; This function calls:
 15892 ;;		Absolute function
 15893 ;;		_TMR1_DefaultInterruptHandler
 15894 ;;		_timerInterrupt
 15895 ;; This function is called by:
 15896 ;;		_TMR1_ISR
 15897 ;; This function uses a non-reentrant model
 15898 ;;
 15899                           
 15900                           
 15901                           ;psect for function _TMR1_CallBack
 15902  1695                     _TMR1_CallBack:
 15903  1695                     i1l4563:	
 15904                           ;incstack = 0
 15905                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
 15906                           
 15907                           
 15908                           ;mcc_generated_files/tmr1.c: 179:     if(TMR1_InterruptHandler)
 15909  1695  0021               	movlb	1	; select bank1
 15910  1696  0865               	movf	_TMR1_InterruptHandler^(0+128),w
 15911  1697  0466               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 15912  1698  1903               	btfsc	3,2
 15913  1699  2E9B               	goto	u347_21
 15914  169A  2E9C               	goto	u347_20
 15915  169B                     u347_21:
 15916  169B  2EA1               	goto	i1l562
 15917  169C                     u347_20:
 15918  169C                     i1l4565:
 15919                           
 15920                           ;mcc_generated_files/tmr1.c: 180:     {;mcc_generated_files/tmr1.c: 181:         TMR1_In
      +                          terruptHandler();
 15921  169C  0866               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 15922  169D  008A               	movwf	10
 15923  169E  0865               	movf	_TMR1_InterruptHandler^(0+128),w
 15924  169F  000A               	callw
 15925  16A0  3196               	pagesel	$
 15926  16A1                     i1l562:
 15927  16A1  0008               	return
 15928  16A2                     __end_of_TMR1_CallBack:
 15929                           
 15930                           	psect	text50
 15931  07FF                     __ptext50:	
 15932 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 15933 ;; Defined at:
 15934 ;;		line 189 in file "mcc_generated_files/tmr1.c"
 15935 ;; Parameters:    Size  Location     Type
 15936 ;;		None
 15937 ;; Auto vars:     Size  Location     Type
 15938 ;;		None
 15939 ;; Return value:  Size  Location     Type
 15940 ;;                  1    wreg      void 
 15941 ;; Registers used:
 15942 ;;		None
 15943 ;; Tracked objects:
 15944 ;;		On entry : 0/0
 15945 ;;		On exit  : 0/0
 15946 ;;		Unchanged: 0/0
 15947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15949 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15951 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15952 ;;Total ram usage:        0 bytes
 15953 ;; Hardware stack levels used: 1
 15954 ;; This function calls:
 15955 ;;		Nothing
 15956 ;; This function is called by:
 15957 ;;		_TMR1_Initialize
 15958 ;;		_TMR1_CallBack
 15959 ;; This function uses a non-reentrant model
 15960 ;;
 15961                           
 15962                           
 15963                           ;psect for function _TMR1_DefaultInterruptHandler
 15964  07FF                     _TMR1_DefaultInterruptHandler:
 15965  07FF                     i1l568:	
 15966                           ;incstack = 0
 15967                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 15968                           
 15969  07FF  0008               	return
 15970  0800                     __end_of_TMR1_DefaultInterruptHandler:
 15971                           
 15972                           	psect	text51
 15973  087E                     __ptext51:	
 15974 ;; *************** function _timerInterrupt *****************
 15975 ;; Defined at:
 15976 ;;		line 67 in file "main.c"
 15977 ;; Parameters:    Size  Location     Type
 15978 ;;		None
 15979 ;; Auto vars:     Size  Location     Type
 15980 ;;  value           2    3[COMMON] unsigned short 
 15981 ;; Return value:  Size  Location     Type
 15982 ;;                  1    wreg      void 
 15983 ;; Registers used:
 15984 ;;		wreg, pclath, cstack
 15985 ;; Tracked objects:
 15986 ;;		On entry : 0/0
 15987 ;;		On exit  : 0/0
 15988 ;;		Unchanged: 0/0
 15989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15991 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15993 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15994 ;;Total ram usage:        2 bytes
 15995 ;; Hardware stack levels used: 1
 15996 ;; Hardware stack levels required when called: 1
 15997 ;; This function calls:
 15998 ;;		_ADCC_GetSingleConversion
 15999 ;; This function is called by:
 16000 ;;		_main
 16001 ;;		_TMR1_CallBack
 16002 ;; This function uses a non-reentrant model
 16003 ;;
 16004                           
 16005                           
 16006                           ;psect for function _timerInterrupt
 16007  087E                     _timerInterrupt:
 16008  087E                     i1l4265:	
 16009                           ;incstack = 0
 16010                           ; Regs used in _timerInterrupt: [wreg+pclath+cstack]
 16011                           
 16012                           
 16013                           ;main.c: 68:     if(PORTAbits.RA7==0){
 16014  087E  0020               	movlb	0	; select bank0
 16015  087F  1B8C               	btfsc	12,7	;volatile
 16016  0880  2882               	goto	u298_21
 16017  0881  2883               	goto	u298_20
 16018  0882                     u298_21:
 16019  0882  2885               	goto	i1l1173
 16020  0883                     u298_20:
 16021  0883                     i1l1170:	
 16022                           ;main.c: 69:         do { LATAbits.LATA7 = 1; } while(0);
 16023                           
 16024  0883  1796               	bsf	22,7	;volatile
 16025  0884  2886               	goto	i1l4267
 16026  0885                     i1l1173:	
 16027                           ;main.c: 71:         do { LATAbits.LATA7 = 0; } while(0);
 16028                           
 16029  0885  1396               	bcf	22,7	;volatile
 16030  0886                     i1l4267:
 16031                           
 16032                           ;main.c: 73:     adc_result_t value = ADCC_GetSingleConversion(channel_ANA0);
 16033  0886  3000               	movlw	0
 16034  0887  3196  26DD  3188   	fcall	_ADCC_GetSingleConversion
 16035  088A  0871               	movf	?_ADCC_GetSingleConversion+1,w
 16036  088B  00F4               	movwf	timerInterrupt@value+1
 16037  088C  0870               	movf	?_ADCC_GetSingleConversion,w
 16038  088D  00F3               	movwf	timerInterrupt@value
 16039  088E                     i1l4269:
 16040                           
 16041                           ;main.c: 74:     if(value > 0x2FD || value < 0xFF){
 16042  088E  3002               	movlw	2
 16043  088F  0274               	subwf	timerInterrupt@value+1,w
 16044  0890  30FE               	movlw	254
 16045  0891  1903               	skipnz
 16046  0892  0273               	subwf	timerInterrupt@value,w
 16047  0893  1803               	skipnc
 16048  0894  2896               	goto	u299_21
 16049  0895  2897               	goto	u299_20
 16050  0896                     u299_21:
 16051  0896  28A0               	goto	i1l1178
 16052  0897                     u299_20:
 16053  0897                     i1l4271:
 16054  0897  3000               	movlw	0
 16055  0898  0274               	subwf	timerInterrupt@value+1,w
 16056  0899  30FF               	movlw	255
 16057  089A  1903               	skipnz
 16058  089B  0273               	subwf	timerInterrupt@value,w
 16059  089C  1803               	skipnc
 16060  089D  289F               	goto	u300_21
 16061  089E  28A0               	goto	u300_20
 16062  089F                     u300_21:
 16063  089F  28A3               	goto	i1l1181
 16064  08A0                     u300_20:
 16065  08A0                     i1l1178:	
 16066                           ;main.c: 75:         do { LATAbits.LATA4 = 1; } while(0);
 16067                           
 16068  08A0  0020               	movlb	0	; select bank0
 16069  08A1  1616               	bsf	22,4	;volatile
 16070  08A2  28A5               	goto	i1l1183
 16071  08A3                     i1l1181:	
 16072                           ;main.c: 77:         do { LATAbits.LATA4 = 0; } while(0);
 16073                           
 16074  08A3  0020               	movlb	0	; select bank0
 16075  08A4  1216               	bcf	22,4	;volatile
 16076  08A5                     i1l1183:
 16077  08A5  0008               	return
 16078  08A6                     __end_of_timerInterrupt:
 16079                           
 16080                           	psect	text52
 16081  16DD                     __ptext52:	
 16082 ;; *************** function _ADCC_GetSingleConversion *****************
 16083 ;; Defined at:
 16084 ;;		line 132 in file "mcc_generated_files/adcc.c"
 16085 ;; Parameters:    Size  Location     Type
 16086 ;;  channel         1    wreg     enum E12206
 16087 ;; Auto vars:     Size  Location     Type
 16088 ;;  channel         1    2[COMMON] enum E12206
 16089 ;; Return value:  Size  Location     Type
 16090 ;;                  2    0[COMMON] unsigned short 
 16091 ;; Registers used:
 16092 ;;		wreg
 16093 ;; Tracked objects:
 16094 ;;		On entry : 0/0
 16095 ;;		On exit  : 0/0
 16096 ;;		Unchanged: 0/0
 16097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 16098 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16099 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16101 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 16102 ;;Total ram usage:        3 bytes
 16103 ;; Hardware stack levels used: 1
 16104 ;; This function calls:
 16105 ;;		Nothing
 16106 ;; This function is called by:
 16107 ;;		_timerInterrupt
 16108 ;; This function uses a non-reentrant model
 16109 ;;
 16110                           
 16111                           
 16112                           ;psect for function _ADCC_GetSingleConversion
 16113  16DD                     _ADCC_GetSingleConversion:
 16114                           
 16115                           ;incstack = 0
 16116                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 16117                           ;ADCC_GetSingleConversion@channel stored from wreg
 16118  16DD  00F2               	movwf	ADCC_GetSingleConversion@channel
 16119  16DE                     i1l4095:
 16120                           
 16121                           ;mcc_generated_files/adcc.c: 132: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 133: {;mcc_generated_files/adcc.c: 135:     ADPCH = 
      +                          channel;
 16122  16DE  0872               	movf	ADCC_GetSingleConversion@channel,w
 16123  16DF  0021               	movlb	1	; select bank1
 16124  16E0  009E               	movwf	30	;volatile
 16125  16E1                     i1l4097:
 16126                           
 16127                           ;mcc_generated_files/adcc.c: 138:     ADCON0bits.ADON = 1;
 16128  16E1  1793               	bsf	19,7	;volatile
 16129  16E2                     i1l4099:
 16130                           
 16131                           ;mcc_generated_files/adcc.c: 141:     ADCON0bits.ADCONT = 0;
 16132  16E2  1313               	bcf	19,6	;volatile
 16133  16E3                     i1l4101:
 16134                           
 16135                           ;mcc_generated_files/adcc.c: 144:     ADCON0bits.ADGO = 1;
 16136  16E3  1413               	bsf	19,0	;volatile
 16137  16E4                     i1l4103:
 16138                           
 16139                           ;mcc_generated_files/adcc.c: 147:     __nop();
 16140  16E4  0000               	nop
 16141  16E5                     i1l655:	
 16142                           ;mcc_generated_files/adcc.c: 151:     {;mcc_generated_files/adcc.c: 152:     }
 16143                           
 16144                           
 16145                           ;mcc_generated_files/adcc.c: 150:     while (ADCON0bits.ADGO)
 16146  16E5  0021               	movlb	1	; select bank1
 16147  16E6  1813               	btfsc	19,0	;volatile
 16148  16E7  2EE9               	goto	u258_21
 16149  16E8  2EEA               	goto	u258_20
 16150  16E9                     u258_21:
 16151  16E9  2EE5               	goto	i1l655
 16152  16EA                     u258_20:
 16153  16EA                     i1l4105:
 16154                           
 16155                           ;mcc_generated_files/adcc.c: 156:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 16156  16EA  080D               	movf	13,w	;volatile
 16157  16EB  00F1               	movwf	?_ADCC_GetSingleConversion+1
 16158  16EC  080C               	movf	12,w	;volatile
 16159  16ED  00F0               	movwf	?_ADCC_GetSingleConversion
 16160  16EE                     i1l658:
 16161  16EE  0008               	return
 16162  16EF                     __end_of_ADCC_GetSingleConversion:
 16163  007E                     btemp	set	126	;btemp
 16164  007E                     int$flags	set	126
 16165  007E                     wtemp0	set	126
 16166                           
 16167                           	psect	config
 16168                           
 16169                           ;Config register CONFIG1 @ 0x8007
 16170                           ;	External Oscillator mode selection bits
 16171                           ;	FEXTOSC = OFF, Oscillator not enabled
 16172                           ;	Power-up default value for COSC bits
 16173                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 16174                           ;	Clock Out Enable bit
 16175                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 16176                           ;	Clock Switch Enable bit
 16177                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 16178                           ;	Fail-Safe Clock Monitor Enable bit
 16179                           ;	FCMEN = ON, FSCM timer enabled
 16180  8007                     	org	32775
 16181  8007  3FEC               	dw	16364
 16182                           
 16183                           ;Config register CONFIG2 @ 0x8008
 16184                           ;	Master Clear Enable bit
 16185                           ;	MCLRE = ON, MCLR pin is Master Clear function
 16186                           ;	Power-up Timer Enable bit
 16187                           ;	PWRTE = OFF, PWRT disabled
 16188                           ;	Low-Power BOR enable bit
 16189                           ;	LPBOREN = OFF, ULPBOR disabled
 16190                           ;	Brown-out reset enable bits
 16191                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 16192                           ;	Brown-out Reset Voltage Selection
 16193                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 16194                           ;	Zero-cross detect disable
 16195                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 16196                           ;	Peripheral Pin Select one-way control
 16197                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 16198                           ;	Stack Overflow/Underflow Reset Enable bit
 16199                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 16200                           ;	Background Debugger
 16201                           ;	DEBUG = OFF, Background Debugger disabled
 16202  8008                     	org	32776
 16203  8008  3FFF               	dw	16383
 16204                           
 16205                           ;Config register CONFIG3 @ 0x8009
 16206                           ;	WDT Period Select bits
 16207                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 16208                           ;	WDT operating mode
 16209                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 16210                           ;	WDT Window Select bits
 16211                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 16212                           ;	WDT input clock selector
 16213                           ;	WDTCCS = SC, Software Control
 16214  8009                     	org	32777
 16215  8009  3F9F               	dw	16287
 16216                           
 16217                           ;Config register CONFIG4 @ 0x800A
 16218                           ;	UserNVM self-write protection bits
 16219                           ;	WRT = OFF, Write protection off
 16220                           ;	Scanner Enable bit
 16221                           ;	SCANE = available, Scanner module is available for use
 16222                           ;	Low Voltage Programming Enable bit
 16223                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 16224  800A                     	org	32778
 16225  800A  3FFF               	dw	16383
 16226                           
 16227                           ;Config register CONFIG5 @ 0x800B
 16228                           ;	UserNVM Program memory code protection bit
 16229                           ;	CP = OFF, Program Memory code protection disabled
 16230                           ;	DataNVM code protection bit
 16231                           ;	CPD = OFF, Data EEPROM code protection disabled
 16232  800B                     	org	32779
 16233  800B  3FFF               	dw	16383

Data Sizes:
    Strings     20
    Constant    32
    Data        0
    BSS         69
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80     80      80
    BANK1            80     69      77
    BANK2            80      0      61
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_DO_TX$3370$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S1484$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 17
		 -> main@buf(BANK1[17]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 17
		 -> main@buf(BANK1[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S2820_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 17
		 -> main@buf(BANK1[17]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 17
		 -> main@buf(BANK1[17]), 

    parseEPROMInitialization@checksum	PTR unsigned char  size(1) Largest target is 1
		 -> main@checksum(BANK1[1]), 

    parseEPROMInitialization@CLKM	PTR unsigned char  size(1) Largest target is 1
		 -> main@CLKM(BANK1[1]), 

    parseEPROMInitialization@CLKH	PTR unsigned char  size(1) Largest target is 1
		 -> main@CLKH(BANK1[1]), 

    parseEPROMInitialization@ALAF	PTR unsigned char  size(1) Largest target is 1
		 -> main@ALAF(BANK1[1]), 

    parseEPROMInitialization@ALAL	PTR unsigned char  size(1) Largest target is 1
		 -> main@ALAL(BANK1[1]), 

    parseEPROMInitialization@ALAT	PTR unsigned char  size(1) Largest target is 1
		 -> main@ALAT(BANK1[1]), 

    parseEPROMInitialization@TALA	PTR unsigned char  size(1) Largest target is 1
		 -> main@TALA(BANK1[1]), 

    parseEPROMInitialization@PMON	PTR unsigned char  size(1) Largest target is 1
		 -> main@PMON(BANK1[1]), 

    parseEPROMInitialization@RI	PTR unsigned char  size(1) Largest target is 1
		 -> main@RI(BANK1[1]), 

    parseEPROMInitialization@WI	PTR unsigned char  size(1) Largest target is 1
		 -> main@WI(BANK1[1]), 

    parseEPROMInitialization@NR	PTR unsigned char  size(1) Largest target is 1
		 -> main@NR(BANK1[1]), 

    parseEPROMInitialization@NREG	PTR unsigned char  size(1) Largest target is 1
		 -> main@NREG(BANK1[1]), 

    parseEPROMInitialization@magic_word	PTR unsigned char  size(1) Largest target is 1
		 -> main@magic_word(BANK1[1]), 

    parseEPROMReading@luminosity	PTR unsigned char  size(1) Largest target is 1
		 -> main@luminosity(BANK1[1]), 

    parseEPROMReading@temperature	PTR unsigned char  size(1) Largest target is 1
		 -> main@temperature(BANK1[1]), 

    parseEPROMReading@seconds	PTR unsigned char  size(1) Largest target is 1
		 -> main@seconds(BANK1[1]), 

    parseEPROMReading@minutes	PTR unsigned char  size(1) Largest target is 1
		 -> main@minutes(BANK1[1]), 

    parseEPROMReading@hours	PTR unsigned char  size(1) Largest target is 1
		 -> main@hours(BANK1[1]), 

    S1484$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S1484$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S1484$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    i2c1_fsmStateTable	const PTR FTN()enum E12595[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerInterrupt(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerInterrupt(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(1) Largest target is 0

    S679$data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0

    LCDstr@p	PTR unsigned char  size(2) Largest target is 17
		 -> main@buf(BANK1[17]), STR_2(CODE[8]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_CallBack->_timerInterrupt
    _timerInterrupt->_ADCC_GetSingleConversion

Critical Paths under _main in BANK0

    _storeEPROMBuild->_operADDR
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    _atoi->_isdigit
    _readTC74->_WriteI2C
    _parseEPROMReading->_operADDR
    _parseEPROMInitialization->_DATAEE_ReadByte
    _initializeEPROM->_DATAEE_WriteByte
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _LCDstr->_LCDchar
    _LCDchar->_LCDsend2x4
    _LCDpos->_LCDcmd
    _LCDcmd->_LCDsend2x4
    _LCDinit->_LCDsend2x4
    _LCDsend2x4->_WriteI2C
    _LCDsend->_WriteI2C
    _LCDbusy->_LCDrecv
    _LCDrecv->_WriteI2C

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->_vfprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                56    56      0   36845
                                             18 BANK1     51    51      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                            _LCDbusy
                             _LCDcmd
                            _LCDinit
                             _LCDpos
                             _LCDstr
                            _OpenI2C
                                 _S1
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                    _initializeEPROM
           _parseEPROMInitialization
                  _parseEPROMReading
                           _readTC74
                            _sprintf
                    _storeEPROMBuild
 ---------------------------------------------------------------------------------
 (1) _storeEPROMBuild                                      9     4      5    4418
                                              7 BANK0      9     4      5
                   _DATAEE_WriteByte
                           _operADDR
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             14    10      4   11174
                                              6 BANK1     12     8      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3   10736
                                             78 BANK0      2     2      0
                                              0 BANK1      6     3      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           43    41      2   10260
                                             57 BANK0     21    19      2
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    5372
                                             27 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3201
                                             16 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     166
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1429
                                              8 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3    1037
                                              0 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             19 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     613
                                              0 BANK0     19     3     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     625
                                              0 BANK0     27    11     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    2409
                                              6 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     259
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1306
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _readTC74                                             2     2      0      99
                                              2 BANK0      2     2      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _parseEPROMReading                                    9     4      5    2679
                                              7 BANK0      9     4      5
                    _DATAEE_ReadByte
                           _operADDR
 ---------------------------------------------------------------------------------
 (2) _operADDR                                             7     5      2      77
                                              0 BANK0      7     5      2
 ---------------------------------------------------------------------------------
 (1) _parseEPROMInitialization                            14     2     12    3291
                                              2 BANK0     14     2     12
                    _DATAEE_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2    1772
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _initializeEPROM                                      1     1      0    3547
                                              4 BANK0      1     1      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3    3547
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     211
                    _ADCC_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _S1                                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OpenI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDstr                                               6     4      2    1377
                                              9 BANK0      6     4      2
                            _LCDchar
 ---------------------------------------------------------------------------------
 (2) _LCDchar                                              1     1      0    1042
                                              8 BANK0      1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (1) _LCDpos                                               4     3      1    1265
                                              9 BANK0      4     3      1
                             _LCDcmd
 ---------------------------------------------------------------------------------
 (2) _LCDcmd                                               1     1      0    1042
                                              8 BANK0      1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0    1073
                                              8 BANK0      1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (3) _LCDsend2x4                                           6     5      1    1011
                                              2 BANK0      6     5      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      62
                                              2 BANK0      2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _LCDbusy                                              2     0      2     254
                                              7 BANK0      2     0      2
                            _LCDrecv
 ---------------------------------------------------------------------------------
 (2) _LCDrecv                                              5     5      0     254
                                              2 BANK0      5     5      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _WriteI2C                                             2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadI2C                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           0     0      0     307
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR1_ISR                                            0     0      0     307
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (11) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (11) _TMR1_CallBack                                       0     0      0      67
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                     _timerInterrupt *
 ---------------------------------------------------------------------------------
 (12) _timerInterrupt                                      2     2      0      67
                                              3 COMMON     2     2      0
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (13) _ADCC_GetSingleConversion                            3     1      2      22
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (12) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _LCDbusy
     _LCDrecv
       _ReadI2C
       _WriteI2C
   _LCDcmd
     _LCDsend2x4
       _WriteI2C
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
   _LCDpos
     _LCDcmd
   _LCDstr
     _LCDchar
       _LCDsend2x4
   _OpenI2C
   _S1
   _SYSTEM_Initialize
     _ADCC_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _initializeEPROM
     _DATAEE_WriteByte
   _parseEPROMInitialization
     _DATAEE_ReadByte
   _parseEPROMReading
     _DATAEE_ReadByte
     _operADDR
   _readTC74
     _ReadI2C
     _WriteI2C
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc
         _isdigit
   _storeEPROMBuild
     _DATAEE_WriteByte
     _operADDR

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _timerInterrupt *
         _ADCC_GetSingleConversion
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       9       2       64.3%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     45      4D       7       96.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      3D       9       76.2%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      E3      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      E3      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Dec 28 17:07:15 2021

       __size_of_parseEPROMInitialization 00B9                 ?_parseEPROMInitialization 0022  
                                      l23 16AE                                        l32 17BE  
                                      l41 0AE9                                        l28 17B6  
                                      l36 0B1C                                        l29 17B8  
                                      l53 0B1A                                        l39 0AE4  
                                      l48 0B06                                        l73 0A2B  
                                      l74 0A2D                                        _S1 168A  
                                      l92 0A6C                                        l87 0A66  
                                      l88 0A68                                        l98 01DE  
                                      l99 01E0                       ___wmul@multiplicand 0022  
                                     ?_S1 0070                                       l130 0270  
                                     l114 022E                                       l115 022F  
                                     l211 0DAB                                       l116 0231  
                                     l220 0DEC                                       l150 02C3  
                                     l134 0274                                       l151 02C4  
                                     l135 0275                                       l152 02C6  
                                     l224 0E03                                       l232 0BF9  
                                     l129 026D                                       l225 0E05  
                                     l170 0309                                       l171 030A  
                                     l235 165C                                       l244 174C  
                                     l165 0302                                       l229 0E0D  
                                     l253 1783                                       l166 0305  
                                     l238 166D                                       l184 0344  
                                     l248 1701                                       l185 0346  
                                     l195 0D59                                       l196 0D5B  
                                     l436 0979                                       l532 17FF  
                                     l189 0357                                       l482 1664  
                                     l643 1718                                       l476 0814  
                                     l565 167F                                       l479 1676  
                                     l771 16CB                                       l765 0872  
                                     l767 0876                                       l768 087D  
                                     l876 1689                           _timer1ReloadVal 00E7  
                                     _abs 1784                                       _pad 0A6D  
                 __size_of_PMD_Initialize 0008                                       wreg 0009  
                    _I2C1_DO_RX_NACK_STOP 0000                                      ??_S1 0075  
                             ?_LCDsend2x4 0022                           __end_of_LCDchar 166E  
                                    l2011 0057                                      ?_abs 0033  
                                    l1204 0506                                      l2004 04BB  
                                    l1205 0508                                      l2013 0061  
                                    l1230 0560                                      l2014 0063  
                                    l1311 0906                                      l2015 0065  
                                    l1312 090B                                      l2104 0A19  
                                    l2112 08CE                                      l2016 0067  
                                    l2040 08FD                                      l1313 0910  
                                    l2121 1767                                      l2033 01CC  
                                    l1321 09C8                                      l1314 0915  
                                    l1250 05B1                                      l1226 055A  
                                    l1218 0544                                      l2018 0098  
                                    l1315 0934                                      l1235 0574  
                                    l1227 055C                                      l1219 0547  
                                    l2115 07FE                                      l1164 1693  
                                    l1324 0B76                                      l1236 0576  
                                    l2044 179F                                      l1309 0901  
                                    l1166 1694                                      l1318 0C87  
                                    l1190 04CB                                      l1327 07FD  
                                    l1271 0603                                      l1263 05ED  
                                    l1191 04CD                                      l2047 179F  
                                    l1272 0605                                      l1264 05F0  
                                    l1249 05AF                                      l2081 1731  
                                    l2065 0CC5                                      l1186 04BC  
                                    l1276 060B                                      l2078 0D36  
                                    l1481 17DE                                      l2089 0836  
                                    l1580 0FFF                                      l4045 1784  
                                    l1479 17CA                                      l4047 1792  
                                    l1592 0EE9                                      l6001 17F4  
                                    l1593 0EFA                                      l6003 17FC  
                                    l6011 086A                                      l1579 0FEE  
                                    l6101 0BEA                                      l4501 0971  
                                    l6021 0871                                      l6013 086B  
                                    l6005 085A                                      l1942 0859  
                                    l6111 16F8                                      l6103 1732  
                                    l4511 1685                                      l4503 0974  
                                    l6023 0877                                      l6015 086C  
                                    l6007 0862                                      l6031 16C6  
                                    l6121 1770                                      l6105 1733  
                                    l4513 1686                                      l4521 1672  
                                    l4505 0976                                      l6017 086D  
                                    l6009 0866                                      l6033 16C7  
                                    l6025 16BD                                      l6041 0900  
                                    l6201 099E                                      l6115 16FE  
                                    l6123 1775                                      l6107 1737  
                                    l4515 1688                                      l4523 1675  
                                    l4507 165D                                      l6131 0805  
                                    l6019 086F                                      l6035 16C8  
                                    l6027 16C1                                      l6211 0B36  
                                    l6203 09AC                                      l6109 16EF  
                                    l6125 1779                                      l4525 1702  
                                    l4509 1680                                      l4517 166E  
                                    l4461 093D                                      l6133 0808  
                                    l6037 16C9                                      l6029 16C5  
                                    l6045 091A                                      l6213 0B46  
                                    l6141 04BC                                      l5501 174F  
                                    l1973 0A87                                      l1981 03A1  
                                    l6061 08D8                                      l6221 0839  
                                    l6205 09BA                           __end_of_LCDbusy 1702  
                                    l1990 0448                                      l1982 03A9  
                                    ?_pad 0030                                      l6071 0B80  
                                    l6127 177F                                      l6119 176A  
                                    l4631 16A2                                      l4527 1715  
                                    l4519 1671                                      l4471 0948  
                                    l4463 093F                                      l6135 080B  
                                    l6047 0930                                      l6215 0B56  
                                    l6207 0B1F                                      l6151 04F7  
                                    l6143 04D1                                      l5511 17BF  
                                    l5503 1754                                      l6063 08F0  
                                    l6223 0841                                      l1976 0AA9  
                                    l6081 0BA4                                      l6073 0B84  
                         __end_of_LCDinit 0BFA                                      l4641 16AD  
                                    l4633 16A7                                      l4529 1717  
                                    l4481 095C                                      l4473 094A  
                                    l4465 0941                                      l4457 0935  
                                    l6137 080E                                      l6129 0802  
                                    l6217 0B66                                      l6209 0B28  
                                    l6161 0535                                      l6153 050C  
                                    l6145 04E0                                      l5521 17DA  
                                    l5513 17C2                                      l5505 1758  
                                    l5601 0A85                                      l6065 08F9  
                                    l6057 08D1                                      l6225 0843  
                                    l6241 0616                                      l6233 060C  
                                    l1978 0AC2                                      l1986 03C2  
                                    l6091 0BC8                                      l6083 0BAC  
                                    l6075 0B8C                                      l4635 16A8  
                                    l4491 0966                                      l4483 095E  
                                    l4475 094C                                      l4467 0943  
                                    l4459 093B                                      l6139 0811  
                                    l6219 0747                                      l6171 058D  
                                    l6163 054B                                      l6155 051B  
                                    l6147 04E4                                      l5515 17C6  
                                    l5531 0F29                                      l5507 1761  
                                    l5611 0AB6                                      l5603 0A8A  
                                    l1987 03D8                                      l6059 08D5  
                                    l6227 0845                                      l6251 0639  
                                    l6243 061E                                      l6235 0611  
                                    l6093 0BCC                                      l6085 0BB0  
                                    l6077 0B90                                      l6069 0B77  
                                    l4637 16AA                                      l4493 0968  
                                    l4485 0960                                      l4477 094E  
                                    l4469 0945                                      l6181 05C8  
                                    l6173 059C                                      l6165 0565  
                                    l6157 051F                                      l6149 04F3  
                                    l5517 17CF                                      l5621 0818  
                                    l5541 0F6F                                      l5533 0F34  
                                    l5525 0EFB                                      l5605 0A96  
                                    l5701 0482                                      l6229 0851  
                                    l6261 0668                                      l6253 063A  
                                    l6245 0620                                      l6237 0614  
                                    l5631 0AC5                                      l6095 0BD8  
                                    l6087 0BB8                                      l6079 0BA0  
                                    l4639 16AB                                      l4495 096A  
                                    l4487 0962                                      l4479 095A  
                                    l6183 05D7                                      l6175 05A0  
                                    l6167 057A                                      l6159 052E  
                                    l5519 17D4                                      l5615 1719  
                                    l5623 081F                                      l5551 0F8A  
                                    l5543 0F72                                      l5535 0F53  
                                    l5527 0EFD                                      l5607 0A9B  
                                    l5711 049C                                      l5703 0489  
                                    l6271 06E4                                      l6263 066B  
                                    l6255 0642                                      l6247 0623  
                                    l6239 0615                                      l5641 0AD7  
                                    l5633 0AC8                                      l5801 0DDD  
                                    l6097 0BDE                                      l6089 0BBC  
                                    l4497 096C                                      l4489 0964  
                                    l6193 0BFA                                      l6185 05DE  
                                    l6177 05B5                                      l6169 0589  
                                    l5625 082E                                      l5721 0C8E  
                                    l5561 0FD0                                      l5553 0FAC  
                                    l5545 0F7A                                      l5537 0F58  
                                    l5529 0F07                                      l5481 09D4  
                                    l5609 0AAD                                      l5713 04A0  
                                    l5705 048D                                      l6361 0081  
                                    l6281 0710                                      l6273 06EE  
                                    l6265 068D                                      l6257 0643  
                                    l6249 062B                                      l5643 0AE2  
                                    l5651 0AF0                                      l5803 0DED  
                                    l6099 0BE4                                      l4499 096E  
                                    l6187 05F4                                      l6179 05C4  
                                    l5627 082F                                      l5619 0815  
                                    l6363 0CD6                                      l5731 0CB3  
                                    l5723 0C92                                      l5555 0FBC  
                                    l5547 0F7E                                      l5539 0F63  
                                    l5571 0E47                                      l5563 0E0E  
                                    l5483 09D9                                      l5707 0491  
                                    l5715 04A9                                      l5811 0031  
                                    l6195 097C                                      l6283 0714  
                                    l6275 06F5                                      l6267 06D9  
                                    l6259 0646                                      l5653 0AFB  
                                    l5645 0AEE                                      l5805 0DF4  
                                    l6365 0922                                      l6189 0609  
                                    l5741 0CDE                                      l5725 0C94  
                                    l5557 0FBD                                      l5549 0F82  
                                    l5581 0E82                                      l5573 0E66  
                                    l5565 0E10                                      l5485 09E3  
                                    l5477 09C9                                      l5493 08A8  
                                    l5709 0497                                      l5661 035A  
                                    l5821 0058                                      l5813 0042  
                                    l6197 0985                                      l6285 0724  
                                    l6277 06FF                                      l6269 06E0  
                                    l5655 0B0B                                      l5639 0ACD  
                                    l5911 0A44                                      l5903 0A1C  
                                    l5807 0E09                                      l4791 168F  
                                    l5751 0D20                                      l5735 0CBA  
                                    l5727 0C9E                                      l5719 0C88  
                                    l5559 0FCB                                      l5591 0ECB  
                                    l5583 0E86                                      l5575 0E73  
                                    l5567 0E1A                                      l5487 0A00  
                                    l5479 09CF                                      l5495 08AB  
                                    l5671 03B7                                      l5663 036A  
                                    l5831 0069                                      l5815 004A  
                                    l6199 0990                                      l6287 072E  
                                    l6279 0709                                      l5921 01E4  
                                    l5913 0A53                                      l5905 0A1C  
                                    l5809 1677                                      l5753 0D26  
                                    l5745 0CFE                                      l5737 0CC1  
                                    l5729 0CB2                                      l5585 0EA8  
                                    l5577 0E76                                      l5569 0E3C  
                                    l5489 0A11                                      l5497 08B9  
                                    l5593 0A6F                                      l5681 03DC  
                                    l5673 03BD                                      l5665 037D  
                                    l5841 00A0                                      l5817 004F  
                                    l6289 0735                                      l5763 17A0  
                                    l5931 021A                                      l5923 01F3  
                                    l5915 0A57                                      l5907 0A31  
                                    l5771 0D39                                      l5755 0D32  
                                    l5739 0CCA                                      l5587 0EB8  
                                    l5579 0E7E                                      l5499 08BE  
                                    l5595 0A73                                      l5691 041B  
                                    l5683 03DF                                      l5675 03CA  
                                    l5667 0383                                      l5851 00CB  
                                    l5843 00B1                                      l5835 006E  
                                    l5819 0053                                      l5765 17AB  
                                    l5941 0257                                      l5933 021F  
                                    l5925 01F7                                      l5917 01CF  
                                    l5909 0A40                                      l5781 0D72  
                                    l5773 0D3E                                      l4789 168A  
                                    l5749 0D1A                                      l5589 0EC6  
                                    l5597 0A7B                                      l5693 0456  
                                    l5685 03E4                                      l5677 03D0  
                                    l5669 03A5                                      l5861 0110  
                                    l5845 00B9                                      l5853 00D1  
                                    l5837 0092                                      l5767 17BD  
                                    l5951 029B                                      l5943 025E  
                                    l5935 0235                                      l5927 0206  
                                    l5919 01CF                                      l5791 0DAC  
                                    l5783 0D81                                      l5775 0D4A  
                                    l5599 0A80                                      l5695 0463  
                                    l5687 0413                                      l5679 03D4  
                                    l5871 015A                                      l5855 00E4  
                                    l5863 0116                                      l5847 00C6  
                                    l5839 009C                                      l5961 02D9  
                                    l5953 02A0                                      l5945 0279  
                                    l5937 0244                                      l5929 020B  
                                    l5793 0DB3                                      l5785 0D87  
                                    l5777 0D5F                                      l5697 0470  
                                    l5689 0417                                      l5881 0198  
                                    l5865 0128                                      l5857 00EC  
                                    l5849 00CA                                      l5971 031D  
                                    l5963 02DD                                      l5955 02AF  
                                    l5947 0288                                      l5939 0248  
                         __end_of_LCDrecv 0358                                      l5795 0DC2  
                                    l5787 0D96                                      l5779 0D6E  
                                    l5699 047E                                      l5875 0174  
                                    l5867 0139                                      l5891 01A9  
                                    l5973 0321                                      l5965 02EC  
                                    l5957 02B4                                      l5949 028C  
                                    l5797 0DC8                                      l5789 0D9C  
                                    l5893 01C2                                      l5877 0185  
                                    l5885 019E                                      l5869 0141  
                                    l5975 0330                                      l5967 02F3  
                                    l5959 02CA                                      l5799 0DD7  
                                    l5983 1657                                      l5991 17E4  
                                    l5887 01A6                                      l5879 018D  
                                    l5977 0335                                      l5969 030E  
                                    l5985 1667                                      l5993 17E6  
                                    l5979 034A                                      l5995 17E8  
                                    l5987 17DF                                      l5997 17EA  
                                    l5989 17E2                           __end_of_LCDsend 0A6D  
                                    l5999 17F2                                      STR_1 182F  
                                    STR_2 1820                                      STR_3 1828  
                                    _LATA 0016                                      _LATB 0017  
                                    _LATC 0018                                      _LATD 0019  
                                    _LATE 001A                                      u2440 1792  
                                    u5000 0098                                      u2441 1791  
                                    u5001 0097                                      u4130 09CF  
                                    u5010 009C                                      u4131 09CE  
                                    u5011 009B                                      u5100 0A2B  
                                    u4220 17DA                                      u4300 0FAC  
                                    u4140 09D4                                      u5020 00B1  
                                    u5101 0A2A                                      u4221 17D9  
                                    u4205 17CB                                      u4301 0FAB  
                                    u2445 178E                                      u4141 09D3  
                                    u5021 00B0                                      u5110 0A31  
                                    u4310 0FCB                                      u4230 0F07  
                                    u4150 09E3                                      u5030 00CA  
                                    u5111 0A30                                      u4215 17D0  
                                    u4311 0FCA                                      u4231 0F06  
                                    u4151 09E2                                      u5031 00C9  
                parseEPROMReading@minutes 0027                                      u5200 021A  
                                    u5120 0A40                                      u4320 0FD0  
                                    u4400 0EA8                                      u4160 0A00  
                                    u5040 0109                                      u5201 0219  
                                    u5121 0A3F                                      u4321 0FCF  
                                    u4305 0FA8                                      u4401 0EA7  
                                    u4161 09FF                                      u5041 0107  
                                    u5210 022E                                      u5130 0A53  
                                    u4250 0F34                                      u4410 0EC6  
                                    u4170 08CE                                      u5050 010A  
                                    u5211 022D                                      u5131 0A52  
                                    u4251 0F33                                      u4411 0EC5  
                                    u4171 08CD                                      u5300 02AF  
                                    u5220 0235                                      u5140 0A66  
                                    u4500 081F                                      u4420 0ECB  
                                    u4340 0E1A                                      u4180 1761  
                                    u5060 0116                                      u5301 02AE  
                                    u5221 0234                                      u5141 0A65  
                                    u4501 081E                                      u4421 0ECA  
                                    u4405 0EA4                                      u4341 0E19  
                                    u4165 09FC                                      u4181 1760  
                                    u5061 0115                  parseEPROMReading@seconds 0028  
                                    u5310 02C3                                      u5230 0244  
                                    u5150 0A6C                                      u3550 168F  
                                    u4190 17C6                                      u4510 082E  
                                    u4270 0F60                                      u5070 0128  
                                    u5311 02C2                                      u5231 0243  
                                    u5151 0A6B                                      u3551 168E  
                                    u4191 17C5                                      u4511 082D  
                                    u5071 0127                                      u4600 0B1A  
                                    u4520 0ACC                                      u5400 0344  
                                    u5320 02CA                                      u5240 0257  
                                    u5160 01DE                                      u3560 1693  
                                    u4280 0F6F                                      u4360 0E47  
                                    u4440 0A73                                      u5080 0139  
                                    u4601 0B19                                      u4521 0ACB  
                                    u5401 0343                                      u5321 02C9  
                                    u5241 0256                                      u5161 01DD  
                                    u3561 1692                                      u4281 0F6E  
                                    u4361 0E46                                      u4441 0A72  
                                    u5081 0138                                      u4530 0AD7  
                                    u5410 034A                                      u5330 02D9  
                                    u5250 026D                                      u5170 01E4  
                                    u4290 0F82                                      u4450 0A80  
                                    u4610 0375                                      u5090 0185  
                                    u4531 0AD6                                      u5411 0349  
                                    u5331 02D8                                      u5251 026C  
                                    u5171 01E3                                      u4291 0F81  
                                    u4451 0A7F                                      u4611 0373  
                                    u5091 0184                                      u4540 0AE2  
                                    u5340 02EC                                      u5260 0274  
                                    u5180 01F3                                      u5500 04E0  
                                    u4380 0E73                                      u4460 0AA9  
                                    u4700 0463                                      u4620 0376  
                                    _PMD0 0796                                      u4541 0AE1  
                                    u5341 02EB                                      u5261 0273  
                                    u5181 01F2                                      u5501 04DF  
                                    u4381 0E72                                      u4461 0AA8  
                                    u4701 0462                                      _PMD1 0797  
                                    u4550 0AE9                                      u5350 0302  
                                    u5270 0279                                      u5190 0206  
                                    u5430 0876                                      u5510 04F3  
                                    u4390 0E86                                      u4470 0AAD  
                                    u4710 0470                                      u4630 0383  
                                    _PMD2 0798                                      u4551 0AE8  
                                    u5351 0301                                      u5271 0278  
                                    u5191 0205                                      u5431 0875  
                                    u5511 04F2                                      u4391 0E85  
                                    u4471 0AAC                                      u4711 046F  
                                    u4631 0382                                      _PMD3 0799  
                                    u4560 0AEE                                      u5360 0309  
                                    u5280 0288                                      u5600 0565  
                                    u5520 0506                                      u4480 172A  
                                    u4800 0D13                                      u4720 047E  
                                    u5440 08F9                                      _PMD4 079A  
                                    u4561 0AED                                      u5425 034E  
                                    u5361 0308                                      u5281 0287  
                                    u5601 0564                                      u5521 0505  
                                    u4481 1728                                      u4801 0D11  
                                    u4465 0AA5                                      u4721 047D  
                                    u5441 08F8                                      _PMD5 079B  
                                    u4570 0AFB                                      u5370 030E  
                                    u5290 029B                                      u5450 174C  
                                    u5610 0574                                      u5530 050C  
                                    u4490 172B                                      u4810 0D14  
                                    u4730 0482                                      u4650 03A5  
                                    u4571 0AFA                                      u5371 030D  
                                    u5291 029A                                      u5451 174B  
                                    u5611 0573                                      u5531 050B  
                                    u4731 0481                                      u4715 046C  
                                    u4651 03A4                                      u4580 0B06  
                                    u5380 031D                                      u5460 16F8  
                                    u4900 0D6E                                      u5700 05F4  
                                    u5620 057A                                      u5540 051B  
                                    u4820 0D20                                      u4740 0489  
                                    u4660 03B7                                      u4581 0B05  
                                    u5381 031C                                      u5461 16F7  
                                    u4901 0D6D                                      u5701 05F3  
                                    u5621 0579                                      u5541 051A  
                                    u4821 0D1F                                      u4741 0488  
                                    u4725 047A                                      u4661 03B6  
                                    u4590 0B0B                                      u5390 0330  
                                    u4910 0D81                                      u5470 1770  
                                    u5710 0603                                      u5630 0589  
                                    u5550 052E                                      u4830 0D26  
                                    u4750 048D                                      u4670 03D0  
                                    u4591 0B0A                                      u5391 032F  
                                    u4911 0D80                                      u5471 176F  
                                    u5711 0602                                      u5631 0588  
                                    u5551 052D                                      u4831 0D25  
                                    u4751 048C                                      u4671 03CF  
                                    u4840 17AB                                      u4920 0D96  
                                    u5720 0609                                      u5640 059C  
                                    u5560 0544                                      u5480 04CB  
                                    u4760 0497                                      u4680 03D4  
                                    u4841 17AA                                      u4921 0D95  
                                    u5721 0608                                      u5641 059B  
                                    u5561 0543                                      u5481 04CA  
                                    u4761 0496                                      u4681 03D3  
                                    u4665 03B3                                      u4850 17B6  
                                    u4930 0DAB                                      u5650 05AF  
                                    u5570 054B                                      u5490 04D1  
                                    u4770 0C9E                                      u4690 0456  
                                    u5730 06EE                                      u4851 17B5  
                                    u4931 0DAA                                      u5651 05AE  
                                    u5571 054A                                      u5491 04D0  
                                    u4771 0C9D                                      u4691 0455  
                                    u5731 06ED                                      u4860 17BD  
                                    u4940 0DC2                                      u5660 05B5  
                                    u5580 055A                                      u4780 0CB2  
                                    u5740 0709                                      u4861 17BC  
                                    u4941 0DC1                                      u5661 05B4  
                                    u5581 0559                                      u4781 0CB1  
                                    u5741 0708                                      u4950 0DD7  
                                    u5670 05C4                                      u5590 0560  
                                    u4790 0CC0                                      u5750 072E  
                                    u4951 0DD6                                      u5807 0BA1  
                                    u5671 05C3                                      u5591 055F  
                                    u4791 0CBF                                      u4695 0452  
                                    u5751 072D                                      u4960 0DEC  
                                    u4880 0D59                                      u5680 05D7  
                                    u4961 0DEB                                      u4881 0D58  
                                    u5817 0BA9                                      u5681 05D6  
                                    u4970 0E03                                      u4890 0D5F  
                                    u5690 05ED                                      u4971 0E02  
                                    u4891 0D5E                                      u4875 0D41  
                                    u5827 0BB5                                      u5691 05EC  
                                    u4980 0E09                                      u4981 0E08  
                                    u5837 0BBD                                      u4990 0042  
                                    u5847 0BC9                                      u4991 0041  
                                    u5767 073B                                      u5857 0BD4  
                                    u5777 0B7B                                      u5867 0BF4  
                                    u5787 0B89                                      u5877 0E0A  
                                    u5797 0B94                                      _WPUA 0F39  
                                    _WPUB 0F44                                      _WPUC 0F4F  
                                    _WPUD 0F5A                                      _WPUE 0F65  
                                    abs@a 0033                               main@minutes 00D4  
                             main@seconds 00D5                                      _dbuf 013D  
                                    _atoi 0C88                                      _main 060C  
                                    _dtoa 0358                                      _prec 0075  
                                    _nout 00E9                                      pad@i 0034  
                                    pad@p 0031                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      pad@w 0036  
                                    btemp 007E                                      start 0018  
              ??_TMR1_SetInterruptHandler 0075                          ??_timerInterrupt 0073  
                         __end_of_ReadI2C 17BF                              main@checksum 00E4  
                         __end_of_OpenI2C 16AF                                     ??_abs 0035  
                                   ??_pad 0033                 __size_of_DATAEE_WriteByte 0024  
          __size_of_OSCILLATOR_Initialize 0009                         _parseEPROMReading 0B1D  
           __end_of_OSCILLATOR_Initialize 1677                           __end_of___aodiv 1000  
                                   _ADACQ 009D                                     _ADCAP 009B  
                                   _ADACT 0099                                     ?_atoi 0026  
                                   ?_main 0070                                     ?_dtoa 003B  
                                   _ADCLK 0098                           __end_of___aomod 0EFB  
                                   _ADCNT 010C                                     _ADPCH 009E  
                                   _ADREF 009A                         ??_initializeEPROM 0024  
                                   _ADPRE 009C                                     _ADRPT 010D  
                                   _T1CLK 0211                                     _T1CON 020E  
                      ?_parseEPROMReading 0027                                     i1l562 16A1  
                                   i1l546 16DC                                     i1l558 16BC  
                                   i1l655 16E5                                     i1l568 07FF  
                                   i1l658 16EE                                     i1l499 0016  
              __end_of_i2c1_fsmStateTable 1820                                     _OSCEN 0891  
                            vfpfcnvrt@fmt 0059                                     _TMR1H 020D  
                                   _TMR1L 020C                                     _TRISA 0011  
                                   _TRISB 0012                                     _TRISC 0013  
                                   _TRISD 0014                                     _TRISE 0015  
                       ??_I2C1_Initialize 0075                          __end_of_TMR1_ISR 16BD  
                         _DATAEE_ReadByte 16BD                                     _flags 0077  
                     ??_parseEPROMReading 002C                                     _fputc 09C9  
                                   _fputs 08A6                           __end_of_isdigit 1732  
                  storeEPROMBuild@minutes 0027                    storeEPROMBuild@seconds 0028  
                                   atoi@n 0033                                     pad@fp 0038  
                                   atoi@s 0026                                     _width 00EB  
                                   _putch 07FE                                     main@c 00D1  
                                   dtoa@d 003B                                     dtoa@i 0057  
                                   dtoa@n 004F                                     dtoa@p 0049  
                                   dtoa@s 004D                                     dtoa@w 004B  
                         __end_of_isspace 0837                   __end_of_TMR1_Initialize 1800  
                                   pclath 000A                                     status 0003  
                                   wtemp0 007E                           __end_of_sprintf 085A  
                         _TMR1_WriteTimer 16CC                           __initialization 001A  
                            __end_of_atoi 0D37                              __end_of_main 0745  
                            __end_of_dtoa 04BC                 __end_of_parseEPROMReading 0B77  
                     __size_of_LCDsend2x4 00D7               ?_INTERRUPT_InterruptManager 0070  
                                  ??_atoi 0028                                    ??_main 00B2  
                                  ??_dtoa 0043                                 ??_LCDchar 0075  
                               ??_LCDbusy 0075                                 ??_LCDinit 0028  
                               ??_LCDrecv 0022                                 ??_LCDsend 0022  
                                  _ADACCH 0091                                    _ADACCL 0090  
                                  _ADCON0 0093                                    _ADCON1 0094  
                                  _ADCON2 0095                                    _ADCON3 0096  
                                  _ADERRH 0117                                    _ADERRL 0116  
                                  ?_fputc 0020                                    _ADLTHH 010F  
                                  _ADLTHL 010E                                    ?_fputs 0028  
                                  _ADRESH 008D                                    _ADRESL 008C  
                                  _ADSTAT 0097                                    _ADUTHH 0111  
                                  _ADUTHL 0110                          __end_of_WriteI2C 0B1D  
                                  _ANSELA 0F38                                    ?_putch 0070  
                                  _ANSELB 0F43                                    _ANSELC 0F4E  
                                  _ANSELD 0F59                                    _ANSELE 0F64  
                                  _T1GATE 0210                                    _T1GCON 020F  
                 storeEPROMBuild@dataAddr 002E                                    _RC3PPS 0F23  
                 TMR1_WriteTimer@timerVal 0070                                    _RC4PPS 0F24  
                                  i1l1170 0883                                    i1l1181 08A3  
                                  i1l1173 0885                                    i1l1183 08A5  
                                  _ODCONA 0F3A                                    i1l1178 08A0  
                                  _ODCONB 0F45                                    _ODCONC 0F50  
                                  _ODCOND 0F5B                                    i1l4101 16E3  
                                  _ODCONE 0F66                                    i1l4103 16E4  
                                  i1l4105 16EA                                    i1l5041 000F  
                                  i1l5043 0013                                    i1l5037 0006  
                                  i1l4095 16DE                                    i1l4271 0897  
                                  i1l5039 000A                                    i1l4097 16E1  
                                  i1l4265 087E                                    i1l4099 16E2  
                                  i1l4267 0886                                    i1l4269 088E  
                                  i1l4551 16D1                                    u300_20 08A0  
                                  u300_21 089F                                    i1l4561 16DA  
                                  i1l4553 16D2                                    i1l4563 1695  
                                  i1l4555 16D4                                    i1l4565 169C  
                                  i1l4557 16D6                                    i1l4549 16CC  
                                  i1l4559 16D8                                    i1l4753 16AF  
                                  i1l4755 16B1                                    u400_20 0013  
                                  u400_21 0012                                    _INLVLA 0F3C  
                                  _INLVLB 0F47                                    _INLVLC 0F52  
                                  _INLVLD 0F5D                                    _INLVLE 0F68  
                                  _LCDcmd 1655                                    u258_20 16EA  
                                  u346_20 16D1                                    u258_21 16E9  
                                  u346_21 16D0                                    _LCDpos 1768  
                                  u347_20 169C                                    u347_21 169B  
                                  _LCDstr 1732                                    u298_20 0883  
                                  u298_21 0882                                    u299_20 0897  
                                  u299_21 0896                                    _OSCFRQ 0893  
                                  u398_20 000A                                    u398_21 0009  
                                  u399_20 000F                                    u399_21 000E  
                           vfpfcnvrt@done 0069                                    u424lld 0F26  
                                  u433lld 0FEE                                    u426lld 0F53  
                                  u443lld 0EE9                                    u435lld 0E39  
                                  u437lld 0E66                                    u464lld 03A1  
                               ??_ReadI2C 0020                               LCDsend2x4@c 0025  
                             LCDrecv@mode 0026                                 ??_OpenI2C 0075  
                        _I2C1_DO_TX_EMPTY 0000      __end_of_TMR1_DefaultInterruptHandler 0800  
   __size_of_TMR1_DefaultInterruptHandler 0001              _TMR1_DefaultInterruptHandler 07FF  
                            vfprintf@cfmt 00A4                                 ??___aodiv 0030  
                               ??___aomod 0030                                    ___wmul 17BF  
                        __end_of_readTC74 060C                          __end_of_operADDR 0935  
                                  pad@buf 0030                                    main@RI 00DC  
                                  main@NR 00DA                                    main@WI 00DB  
                                  dtoa@fp 0046                   __end_of_DATAEE_ReadByte 16CC  
                                  _strlen 174D                           _ADCC_Initialize 1702  
                   _I2C1_DO_SEND_ADR_READ 0000                                    fputc@c 0020  
                          _PMD_Initialize 165D                                    fputs@c 002C  
                                  fputs@i 002D                                    fputs@s 002F  
                               ??_isdigit 0022                                 ??_isspace 0022  
       __size_of_ADCC_GetSingleConversion 0012                                    putch@c 0070  
                        __end_of_vfprintf 08FE                 ?_ADCC_GetSingleConversion 0070  
TMR1_SetInterruptHandler@InterruptHandler 0020                                 ??_sprintf 00AA  
                 __end_of_TMR1_WriteTimer 16DD                   _I2C1_DO_RX_NACK_RESTART 0000  
                   __end_of_TMR1_CallBack 16A2                          ?_TMR1_Initialize 0070  
                       _SYSTEM_Initialize 0802                   __end_of__initialization 002B  
                      ?_SYSTEM_Initialize 0070                   _rdBlkRegCompleteHandler 0000  
                          __pcstackCOMMON 0070                       ??_SYSTEM_Initialize 0075  
                __size_of_storeEPROMBuild 004F        parseEPROMInitialization@magic_word 002F  
              __size_of_parseEPROMReading 005A                                 ?_TMR1_ISR 0070  
           ?_TMR1_DefaultInterruptHandler 0070                          _DATAEE_WriteByte 085A  
                    storeEPROMBuild@hours 002D                             __end_of_fputc 0A1A  
                           __end_of_fputs 08CF                             __end_of_putch 07FF  
                          main@dataeeData 00D2                                __end_of_S1 1695  
                  __end_of_PMD_Initialize 1665                    main@readRingBufferAddr 00CF  
                               LCDrecv@hc 0024                                 LCDrecv@lc 0025  
                            ??_LCDsend2x4 0023                                   ??_fputc 0023  
               __end_of_SYSTEM_Initialize 0815                                   ??_fputs 0029  
                                 ??_putch 0075                                __pbssBANK1 00E9  
                              __pbssBANK2 0120                                   ?_LCDcmd 0070  
                                 ?_LCDpos 0029                                   ?_LCDstr 0029  
                                 LCDcmd@c 0028                                   LCDpos@c 0029  
                                 LCDpos@l 002B                                   LCDpos@p 002C  
                   _rd1RegCompleteHandler 0000                                   LCDstr@c 002E  
                                 LCDstr@p 0029              parseEPROMInitialization@ALAF 002A  
            parseEPROMInitialization@ALAL 0029              parseEPROMInitialization@ALAT 0028  
            parseEPROMInitialization@CLKH 002B              parseEPROMInitialization@CLKM 002C  
            parseEPROMInitialization@TALA 0027              parseEPROMInitialization@NREG 0022  
            parseEPROMInitialization@PMON 0026                         _I2C1_DO_SEND_STOP 0000  
                         _initializeEPROM 0BFA                     _wr1RegCompleteHandler 0000  
                              __pmaintext 060C                                   ?___wmul 0020  
                              ??_TMR1_ISR 0075                   __end_of_ADCC_Initialize 1719  
                              __pintentry 0004                           _I2C1_Initialize 1680  
                          main@magic_word 00D8                                   _ADFLTRH 0115  
                                 _ADFLTRL 0114                        __end_of_LCDsend2x4 0E0E  
                                 _ADPREVH 008F                                   _ADPREVL 008E  
                               ?_WriteI2C 0070                                   _ADSTPTH 0113  
                                 _ADSTPTL 0112                           ?_PMD_Initialize 0070  
                                 ?_strlen 0020                          ?_DATAEE_ReadByte 0020  
                                 _LCDchar 1665                                   _LCDbusy 16EF  
                                 _LCDinit 0B77                                   _LCDrecv 01CD  
                                 _LCDsend 0A1A                                   _OSCCON1 088D  
                                 _OSCCON3 088F                        __size_of_vfpfcnvrt 019E  
                                 _NVMADRH 081B                                   _NVMADRL 081A  
                                 _NVMDATH 081D                                   _OSCTUNE 0892  
                                 _NVMDATL 081C                                   _NVMCON2 081F  
                                 _SSP1ADD 018D                                   _SLRCONA 0F3B  
                                 _SLRCONB 0F46                                   _SLRCONC 0F51  
                                 _SLRCOND 0F5C                                   _SLRCONE 0F67  
                                 _SSP1BUF 018C                          ?_TMR1_WriteTimer 0070  
                            LCDsend2x4@hc 0026                              LCDsend2x4@lc 0027  
                               ?_readTC74 0070                           __size_of_LCDcmd 0008  
                    DATAEE_WriteByte@bAdd 0020                           __size_of_LCDpos 001C  
                      _i2c1_fsmStateTable 1800                           __size_of_LCDstr 001B  
                                 _ReadI2C 17A0                                 ?_operADDR 0020  
                                 _OpenI2C 16A2                  _parseEPROMInitialization 0745  
                                 ___aodiv 0EFB                                   ___aomod 0E0E  
                         __size_of___wmul 0020                                 ?_vfprintf 00A0  
                              ??_WriteI2C 0020                                   __ptext1 097A  
                                 __ptext2 0837                                   __ptext3 08CF  
                                 __ptext4 002F                                   __ptext5 0358  
                                 __ptext6 0A6D                                   __ptext7 174D  
                                 __ptext8 08A6                                   __ptext9 09C9  
          ??_TMR1_DefaultInterruptHandler 0070                           __size_of_strlen 001B  
                       ??_storeEPROMBuild 002C                                 _T1CONbits 020E  
                   _OSCILLATOR_Initialize 166E                              __size_of_abs 001C  
                            __size_of_pad 0056                                   _isdigit 1719  
       __size_of_TMR1_SetInterruptHandler 0009                  ??_PIN_MANAGER_Initialize 0075  
                                 _isspace 0815                 ?_TMR1_SetInterruptHandler 0020  
              parseEPROMInitialization@RI 0025                parseEPROMInitialization@NR 0023  
              parseEPROMInitialization@WI 0024                                   atoi@neg 002C  
                storeEPROMBuild@operation 002B                                   main@buf 00BE  
              __size_of_SYSTEM_Initialize 0013                                   _sprintf 0837  
                                 clrloop0 1650                            main@luminosity 00D7  
                    end_of_initialization 002B                                ??_readTC74 0022  
                 __end_of_initializeEPROM 0C88                                   fputc@fp 0022  
                                 fputs@fp 0028                    _I2C1_DO_SEND_ADR_WRITE 0000  
                              ??_operADDR 0022              parseEPROMReading@temperature 0029  
                 __end_of_I2C1_Initialize 168A                               _I2C1_Status 0120  
                       __end_of_vfpfcnvrt 01CD                          ?_ADCC_Initialize 0070  
                              ??_vfprintf 006E          __end_of_ADCC_GetSingleConversion 16EF  
               storeEPROMBuild@luminosity 002A                _I2C1_DO_SEND_RESTART_WRITE 0000  
                                 strlen@a 0023                                   strlen@s 0024  
                               _PORTAbits 000C                                 _PORTBbits 000D  
                 __size_of_timerInterrupt 0028                                 _TRISCbits 0013  
                     timerInterrupt@value 0073                  __end_of_DATAEE_WriteByte 087E  
                  parseEPROMReading@hours 002D                             readTC74@value 0023  
                          __end_of_LCDcmd 165D                            __end_of_LCDpos 1784  
                          __end_of_LCDstr 174D                            LCDsend2x4@mode 0022  
                             vfpfcnvrt@ap 005A                               vfpfcnvrt@fp 006D  
                             vfpfcnvrt@ll 0061                            __end_of___wmul 17DF  
                          _I2C1_DO_RX_ACK 0000                         __size_of_TMR1_ISR 000E  
              storeEPROMBuild@temperature 0029                    ?_OSCILLATOR_Initialize 0070  
                          __end_of_strlen 1768                       start_initialization 001A  
         __size_of_PIN_MANAGER_Initialize 0045                               __end_of_abs 17A0  
                             __end_of_pad 0AC3                          WriteI2C@data_out 0021  
                                ??_LCDcmd 0075                                  ??_LCDpos 002A  
                                ??_LCDstr 002B                          ?_initializeEPROM 0070  
                     DATAEE_ReadByte@bAdd 0020                          ?_I2C1_Initialize 0070  
                __size_of_TMR1_Initialize 0021                               vfprintf@fmt 00A0  
                        ??_PMD_Initialize 0075                                  ??___wmul 0075  
                  __size_of_TMR1_CallBack 000D                                  ??_strlen 0022  
                       __size_of_WriteI2C 005A                  _ADCC_GetSingleConversion 16DD  
                                ?_LCDchar 0070                               __pbssCOMMON 0075  
                                ?_LCDbusy 0027                                  ?_LCDinit 0070  
                    _I2C1_DO_SEND_RESTART 0000                                  ?_LCDrecv 0070  
                                ?_LCDsend 0070                                 ___latbits 0002  
                           __pcstackBANK0 0020                             __pcstackBANK1 00A0  
                        ___aodiv@dividend 0028                                  LCDchar@c 0028  
              ??_parseEPROMInitialization 002E                 parseEPROMReading@dataAddr 002E  
                                LCDsend@c 0023                                  ?_ReadI2C 0070  
                               _atoi$2940 0030                         __size_of_readTC74 0150  
                               _atoi$2938 002E                                 _atoi$2939 0032  
                               __pnvBANK1 00E5                     _rd2RegCompleteHandler 0000  
                                ?_OpenI2C 0070                    _PIN_MANAGER_Initialize 0935  
                   _wr2RegCompleteHandler 0000                                 _dtoa$2903 0047  
                       __size_of_operADDR 0037                           _storeEPROMBuild 097A  
        __end_of_TMR1_SetInterruptHandler 1680           ADCC_GetSingleConversion@channel 0072  
                                ?___aodiv 0020                                  ?___aomod 0020  
                        ___aodiv@quotient 0033              ??_INTERRUPT_InterruptManager 0075  
                       __size_of_vfprintf 002F                            _timerInterrupt 087E  
                                ?_isdigit 0020                                  ?_isspace 0020  
                                ?_sprintf 00A6                            __size_of_fputc 0051  
                          __size_of_fputs 0029                  __size_of_DATAEE_ReadByte 000F  
                          __size_of_putch 0001                               __size_of_S1 000B  
                           _TMR1_CallBack 1695                            ___wmul@product 0024  
                                _LATAbits 0016                                _I2C1_DO_RX 0000  
                              _I2C1_DO_TX 0000                                 clear_ram0 164F  
                                _PIE3bits 0719                                  _PIE4bits 071A  
                __size_of_TMR1_WriteTimer 0011       __size_of_INTERRUPT_InterruptManager 0014  
                                _PIR3bits 070F                                  _PIR4bits 0710  
               _I2C1_DO_SEND_RESTART_READ 0000                                  _SSP1CON1 0190  
                                _SSP1CON2 0191                                  _TMR1_ISR 16AF  
                                _SSP1STAT 018F                                 _vfpfcnvrt 002F  
                  __end_of_timerInterrupt 08A6                         ??_TMR1_Initialize 0075  
                              _ADCON0bits 0093                                _ADCON1bits 0094  
                              _ADCON2bits 0095                                _ADCON3bits 0096  
                       ___wmul@multiplier 0020                                 main@hours 00D3  
                        __size_of_LCDchar 0009                     DATAEE_WriteByte@bData 0022  
                        __size_of_LCDbusy 0013                          __size_of_LCDinit 0083  
                        __size_of_LCDrecv 018B                          __size_of_LCDsend 0053  
                            _isspace$2956 0024                             _I2C1_DO_RESET 0000  
                          ?_TMR1_CallBack 0070                         ?_DATAEE_WriteByte 0020  
                 __end_of_storeEPROMBuild 09C9                        ??_DATAEE_WriteByte 0075  
                        __size_of_ReadI2C 001F                                _ADSTATbits 0097  
                        __size_of_OpenI2C 000D                                vfprintf@ap 00A2  
                              vfprintf@fp 00A3                   ??_OSCILLATOR_Initialize 0075  
                        __size_of___aodiv 0105                          __size_of___aomod 00ED  
                              ?_vfpfcnvrt 0059                                  _WriteI2C 0AC3  
                         ?_timerInterrupt 0070                           ___aodiv@divisor 0020  
                _TMR1_SetInterruptHandler 1677                           ___aodiv@counter 0031  
                   _TMR1_InterruptHandler 00E5                                sprintf@fmt 00A6  
                __size_of_ADCC_Initialize 0017                          __size_of_isdigit 0019  
                        __size_of_isspace 0022                                  __ptext10 07FE  
                                __ptext11 1784                                  __ptext20 08FE  
                                __ptext12 0E0E                                  __ptext21 0745  
                                __ptext13 0EFB                                _T1GCONbits 020F  
                                __ptext30 166E                                  __ptext22 16BD  
                                __ptext14 0C88                                  __ptext31 1680  
                                __ptext23 0BFA                                  __ptext15 0815  
                                __ptext40 0D37                                  __ptext32 1702  
                                __ptext24 085A                                  __ptext16 1719  
                                __ptext41 0A1A                                  __ptext33 168A  
                                __ptext25 0802                                  __ptext17 17BF  
                                __ptext50 07FF                                  __ptext42 16EF  
                                __ptext34 16A2                                  __ptext26 17DF  
                                __ptext18 04BC                                  __ptext51 087E  
                                __ptext43 01CD                                  __ptext35 1732  
                                __ptext27 1677                                  __ptext19 0B1D  
                                __ptext52 16DD                                  __ptext44 0AC3  
                                __ptext36 1665                                  __ptext28 165D  
                                __ptext45 17A0                                  __ptext37 1768  
                                __ptext29 0935                                  __ptext38 1655  
                                __ptext47 16AF                                  __ptext39 0B77  
                                __ptext48 16CC                                  __ptext49 1695  
        __end_of_parseEPROMInitialization 07FE                              _SSP1CON1bits 0190  
                            _SSP1CON2bits 0191                          __size_of_sprintf 0023  
             DATAEE_WriteByte@GIEBitValue 0023                                  _readTC74 04BC  
                _I2C1_CallbackReturnReset 0000                             __size_of_atoi 00AF  
                           __size_of_main 0139                             __size_of_dtoa 0164  
                                _operADDR 08FE                         ??_DATAEE_ReadByte 0075  
                                main@ALAF 00E1                                  main@ALAL 00E0  
                                main@ALAT 00DF                                  main@CLKH 00E2  
              ??_ADCC_GetSingleConversion 0072                                  main@CLKM 00E3  
                                main@TALA 00DE                                  int$flags 007E  
                                main@NREG 00D9                                  main@PMON 00DD  
                                _vfprintf 08CF        __end_of_INTERRUPT_InterruptManager 0018  
              _INTERRUPT_InterruptManager 0004                              _SSP1STATbits 018F  
                       ??_TMR1_WriteTimer 0072                              _I2C1_DO_IDLE 0000  
                            _I2C1_DO_RCEN 0000                          ___aomod@dividend 0028  
                         main@temperature 00D6                            _vfpfcnvrt$2918 006B  
                              _INTCONbits 000B                               _NVMCON1bits 081E  
                                isdigit@c 0020                           ??_TMR1_CallBack 0075  
                              _LCDsend2x4 0D37          parseEPROMInitialization@checksum 002D  
                                intlevel1 0000                                 sprintf@ap 00AC  
                                isspace@c 0020                          ?_storeEPROMBuild 0027  
                 ?_PIN_MANAGER_Initialize 0070                   _I2C1_CallbackReturnStop 0000  
             parseEPROMReading@luminosity 002A                      _I2C1_DO_ADDRESS_NACK 0000  
                __size_of_initializeEPROM 008E                           ___aomod@divisor 0020  
                             ??_vfpfcnvrt 005B                           ___aomod@counter 0031  
                __size_of_I2C1_Initialize 000A                             __pstringtext1 1800  
                           __pstringtext2 1820                             __pstringtext3 1828  
                           __pstringtext4 182F                             __pstringtext5 0000  
                                sprintf@f 00AD                                  sprintf@s 00AB  
                        operADDR@dataAddr 0025                                _SSP1DATPPS 0EC6  
                              _SSP1CLKPPS 0EC5                parseEPROMReading@operation 002B  
                            ___aodiv@sign 0032            __end_of_PIN_MANAGER_Initialize 097A  
                       ??_ADCC_Initialize 0075                              ___aomod@sign 0032  
                         _TMR1_Initialize 17DF                         operADDR@operation 0024  
