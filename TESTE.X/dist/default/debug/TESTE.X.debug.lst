

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Dec 15 11:56:21 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F18875
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
    10                           	psect	cinit,global,class=CODE,merge=1,delta=2
    11                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text8,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    32                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    33                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    34                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2
    39                           	psect	text21,local,class=CODE,merge=1,delta=2
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	text31,local,class=CODE,merge=1,delta=2
    50                           	psect	text32,local,class=CODE,merge=1,delta=2
    51                           	psect	text33,local,class=CODE,merge=1,delta=2
    52                           	psect	text34,local,class=CODE,merge=1,delta=2
    53                           	psect	text35,local,class=CODE,merge=1,delta=2
    54                           	psect	text36,local,class=CODE,merge=1,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	psect	text40,local,class=CODE,merge=1,delta=2
    59                           	psect	intentry,global,class=CODE,delta=2
    60                           	psect	text42,local,class=CODE,merge=1,delta=2
    61                           	psect	text43,local,class=CODE,merge=1,delta=2
    62                           	psect	text44,local,class=CODE,merge=1,delta=2
    63                           	psect	text45,local,class=CODE,merge=1,delta=2
    64                           	psect	text46,local,class=CODE,merge=1,delta=2
    65                           	psect	text47,local,class=CODE,merge=1,delta=2
    66                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    67                           	dabs	1,0x7E,2
    68  0000                     
    69                           ; Version 2.35
    70                           ; Generated 13/04/2021 GMT
    71                           ; 
    72                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution. Publication is not required when
    86                           ;        this file is used in an embedded application.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC16F18875 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104  0000                     	;# 
   105  0001                     	;# 
   106  0002                     	;# 
   107  0003                     	;# 
   108  0004                     	;# 
   109  0005                     	;# 
   110  0006                     	;# 
   111  0007                     	;# 
   112  0008                     	;# 
   113  0009                     	;# 
   114  000A                     	;# 
   115  000B                     	;# 
   116  000C                     	;# 
   117  000D                     	;# 
   118  000E                     	;# 
   119  000F                     	;# 
   120  0010                     	;# 
   121  0011                     	;# 
   122  0012                     	;# 
   123  0013                     	;# 
   124  0014                     	;# 
   125  0015                     	;# 
   126  0016                     	;# 
   127  0017                     	;# 
   128  0018                     	;# 
   129  0019                     	;# 
   130  001A                     	;# 
   131  001C                     	;# 
   132  001C                     	;# 
   133  001D                     	;# 
   134  001D                     	;# 
   135  001E                     	;# 
   136  001F                     	;# 
   137  008C                     	;# 
   138  008C                     	;# 
   139  008D                     	;# 
   140  008E                     	;# 
   141  008E                     	;# 
   142  008F                     	;# 
   143  0090                     	;# 
   144  0090                     	;# 
   145  0091                     	;# 
   146  0093                     	;# 
   147  0094                     	;# 
   148  0095                     	;# 
   149  0096                     	;# 
   150  0097                     	;# 
   151  0098                     	;# 
   152  0099                     	;# 
   153  009A                     	;# 
   154  009B                     	;# 
   155  009C                     	;# 
   156  009D                     	;# 
   157  009E                     	;# 
   158  010C                     	;# 
   159  010D                     	;# 
   160  010E                     	;# 
   161  010E                     	;# 
   162  010F                     	;# 
   163  0110                     	;# 
   164  0110                     	;# 
   165  0111                     	;# 
   166  0112                     	;# 
   167  0112                     	;# 
   168  0113                     	;# 
   169  0114                     	;# 
   170  0114                     	;# 
   171  0115                     	;# 
   172  0116                     	;# 
   173  0116                     	;# 
   174  0117                     	;# 
   175  0119                     	;# 
   176  0119                     	;# 
   177  0119                     	;# 
   178  011A                     	;# 
   179  011A                     	;# 
   180  011A                     	;# 
   181  011B                     	;# 
   182  011B                     	;# 
   183  011B                     	;# 
   184  011B                     	;# 
   185  011B                     	;# 
   186  011C                     	;# 
   187  011C                     	;# 
   188  011C                     	;# 
   189  011D                     	;# 
   190  011D                     	;# 
   191  011D                     	;# 
   192  011E                     	;# 
   193  011E                     	;# 
   194  011E                     	;# 
   195  011F                     	;# 
   196  011F                     	;# 
   197  011F                     	;# 
   198  011F                     	;# 
   199  011F                     	;# 
   200  018C                     	;# 
   201  018D                     	;# 
   202  018E                     	;# 
   203  018F                     	;# 
   204  0190                     	;# 
   205  0191                     	;# 
   206  0192                     	;# 
   207  0196                     	;# 
   208  0197                     	;# 
   209  0198                     	;# 
   210  0199                     	;# 
   211  019A                     	;# 
   212  019B                     	;# 
   213  019C                     	;# 
   214  020C                     	;# 
   215  020C                     	;# 
   216  020D                     	;# 
   217  020E                     	;# 
   218  020F                     	;# 
   219  020F                     	;# 
   220  0210                     	;# 
   221  0210                     	;# 
   222  0211                     	;# 
   223  0211                     	;# 
   224  0212                     	;# 
   225  0212                     	;# 
   226  0213                     	;# 
   227  0214                     	;# 
   228  0215                     	;# 
   229  0215                     	;# 
   230  0216                     	;# 
   231  0216                     	;# 
   232  0217                     	;# 
   233  0217                     	;# 
   234  0218                     	;# 
   235  0218                     	;# 
   236  0219                     	;# 
   237  021A                     	;# 
   238  021B                     	;# 
   239  021B                     	;# 
   240  021C                     	;# 
   241  021C                     	;# 
   242  021D                     	;# 
   243  021D                     	;# 
   244  021E                     	;# 
   245  021F                     	;# 
   246  028C                     	;# 
   247  028C                     	;# 
   248  028D                     	;# 
   249  028D                     	;# 
   250  028E                     	;# 
   251  028F                     	;# 
   252  0290                     	;# 
   253  0290                     	;# 
   254  0291                     	;# 
   255  0292                     	;# 
   256  0292                     	;# 
   257  0293                     	;# 
   258  0293                     	;# 
   259  0294                     	;# 
   260  0295                     	;# 
   261  0296                     	;# 
   262  0296                     	;# 
   263  0297                     	;# 
   264  0298                     	;# 
   265  0298                     	;# 
   266  0299                     	;# 
   267  0299                     	;# 
   268  029A                     	;# 
   269  029B                     	;# 
   270  029C                     	;# 
   271  029C                     	;# 
   272  029D                     	;# 
   273  030C                     	;# 
   274  030C                     	;# 
   275  030D                     	;# 
   276  030E                     	;# 
   277  030F                     	;# 
   278  0310                     	;# 
   279  0310                     	;# 
   280  0311                     	;# 
   281  0312                     	;# 
   282  0313                     	;# 
   283  0314                     	;# 
   284  0314                     	;# 
   285  0315                     	;# 
   286  0316                     	;# 
   287  0317                     	;# 
   288  0318                     	;# 
   289  0318                     	;# 
   290  0319                     	;# 
   291  031A                     	;# 
   292  031B                     	;# 
   293  031C                     	;# 
   294  031C                     	;# 
   295  031D                     	;# 
   296  031E                     	;# 
   297  031F                     	;# 
   298  038C                     	;# 
   299  038C                     	;# 
   300  038D                     	;# 
   301  038E                     	;# 
   302  0390                     	;# 
   303  0390                     	;# 
   304  0391                     	;# 
   305  0392                     	;# 
   306  040C                     	;# 
   307  040D                     	;# 
   308  040E                     	;# 
   309  040F                     	;# 
   310  0410                     	;# 
   311  0411                     	;# 
   312  0416                     	;# 
   313  0416                     	;# 
   314  0417                     	;# 
   315  0418                     	;# 
   316  0418                     	;# 
   317  0419                     	;# 
   318  041A                     	;# 
   319  041A                     	;# 
   320  041B                     	;# 
   321  041C                     	;# 
   322  041C                     	;# 
   323  041D                     	;# 
   324  041E                     	;# 
   325  041F                     	;# 
   326  048C                     	;# 
   327  048C                     	;# 
   328  048D                     	;# 
   329  048E                     	;# 
   330  048F                     	;# 
   331  048F                     	;# 
   332  0490                     	;# 
   333  0491                     	;# 
   334  0492                     	;# 
   335  0492                     	;# 
   336  0493                     	;# 
   337  0494                     	;# 
   338  0495                     	;# 
   339  0495                     	;# 
   340  0496                     	;# 
   341  0497                     	;# 
   342  0498                     	;# 
   343  0499                     	;# 
   344  049A                     	;# 
   345  049B                     	;# 
   346  049C                     	;# 
   347  049D                     	;# 
   348  050C                     	;# 
   349  050C                     	;# 
   350  050D                     	;# 
   351  050E                     	;# 
   352  050F                     	;# 
   353  050F                     	;# 
   354  0510                     	;# 
   355  0511                     	;# 
   356  0512                     	;# 
   357  0512                     	;# 
   358  0513                     	;# 
   359  0514                     	;# 
   360  0515                     	;# 
   361  0515                     	;# 
   362  0516                     	;# 
   363  0517                     	;# 
   364  0518                     	;# 
   365  0519                     	;# 
   366  051A                     	;# 
   367  051B                     	;# 
   368  051C                     	;# 
   369  051D                     	;# 
   370  058C                     	;# 
   371  058C                     	;# 
   372  058D                     	;# 
   373  058E                     	;# 
   374  058F                     	;# 
   375  058F                     	;# 
   376  0590                     	;# 
   377  0591                     	;# 
   378  0592                     	;# 
   379  0593                     	;# 
   380  060C                     	;# 
   381  060D                     	;# 
   382  060E                     	;# 
   383  060F                     	;# 
   384  0610                     	;# 
   385  0611                     	;# 
   386  0612                     	;# 
   387  0613                     	;# 
   388  0614                     	;# 
   389  0616                     	;# 
   390  0617                     	;# 
   391  0618                     	;# 
   392  0619                     	;# 
   393  061A                     	;# 
   394  061B                     	;# 
   395  061C                     	;# 
   396  061D                     	;# 
   397  061E                     	;# 
   398  068C                     	;# 
   399  068D                     	;# 
   400  068E                     	;# 
   401  068F                     	;# 
   402  0690                     	;# 
   403  0691                     	;# 
   404  0692                     	;# 
   405  0693                     	;# 
   406  0694                     	;# 
   407  070C                     	;# 
   408  070D                     	;# 
   409  070E                     	;# 
   410  070F                     	;# 
   411  0710                     	;# 
   412  0711                     	;# 
   413  0712                     	;# 
   414  0713                     	;# 
   415  0714                     	;# 
   416  0716                     	;# 
   417  0717                     	;# 
   418  0718                     	;# 
   419  0719                     	;# 
   420  071A                     	;# 
   421  071B                     	;# 
   422  071C                     	;# 
   423  071D                     	;# 
   424  071E                     	;# 
   425  0796                     	;# 
   426  0797                     	;# 
   427  0798                     	;# 
   428  0799                     	;# 
   429  079A                     	;# 
   430  079B                     	;# 
   431  080C                     	;# 
   432  080D                     	;# 
   433  080E                     	;# 
   434  080F                     	;# 
   435  0810                     	;# 
   436  0811                     	;# 
   437  0812                     	;# 
   438  0813                     	;# 
   439  0814                     	;# 
   440  081A                     	;# 
   441  081B                     	;# 
   442  081C                     	;# 
   443  081D                     	;# 
   444  081E                     	;# 
   445  081F                     	;# 
   446  088C                     	;# 
   447  088D                     	;# 
   448  088E                     	;# 
   449  088F                     	;# 
   450  0890                     	;# 
   451  0891                     	;# 
   452  0892                     	;# 
   453  0893                     	;# 
   454  0895                     	;# 
   455  0896                     	;# 
   456  0897                     	;# 
   457  0898                     	;# 
   458  0899                     	;# 
   459  089A                     	;# 
   460  089B                     	;# 
   461  090C                     	;# 
   462  090E                     	;# 
   463  090F                     	;# 
   464  091F                     	;# 
   465  091F                     	;# 
   466  098F                     	;# 
   467  098F                     	;# 
   468  0990                     	;# 
   469  0991                     	;# 
   470  0992                     	;# 
   471  0993                     	;# 
   472  0994                     	;# 
   473  0995                     	;# 
   474  0996                     	;# 
   475  0997                     	;# 
   476  0E0F                     	;# 
   477  0E10                     	;# 
   478  0E11                     	;# 
   479  0E12                     	;# 
   480  0E13                     	;# 
   481  0E14                     	;# 
   482  0E15                     	;# 
   483  0E16                     	;# 
   484  0E17                     	;# 
   485  0E18                     	;# 
   486  0E19                     	;# 
   487  0E1A                     	;# 
   488  0E1B                     	;# 
   489  0E1C                     	;# 
   490  0E1D                     	;# 
   491  0E1E                     	;# 
   492  0E1F                     	;# 
   493  0E20                     	;# 
   494  0E21                     	;# 
   495  0E22                     	;# 
   496  0E23                     	;# 
   497  0E24                     	;# 
   498  0E25                     	;# 
   499  0E26                     	;# 
   500  0E27                     	;# 
   501  0E28                     	;# 
   502  0E29                     	;# 
   503  0E2A                     	;# 
   504  0E2B                     	;# 
   505  0E2C                     	;# 
   506  0E2D                     	;# 
   507  0E2E                     	;# 
   508  0E2F                     	;# 
   509  0E30                     	;# 
   510  0E31                     	;# 
   511  0E32                     	;# 
   512  0E33                     	;# 
   513  0E34                     	;# 
   514  0E35                     	;# 
   515  0E36                     	;# 
   516  0E37                     	;# 
   517  0E8F                     	;# 
   518  0E90                     	;# 
   519  0E91                     	;# 
   520  0E92                     	;# 
   521  0E93                     	;# 
   522  0E94                     	;# 
   523  0E95                     	;# 
   524  0E96                     	;# 
   525  0E97                     	;# 
   526  0E9C                     	;# 
   527  0E9D                     	;# 
   528  0E9E                     	;# 
   529  0EA1                     	;# 
   530  0EA2                     	;# 
   531  0EA3                     	;# 
   532  0EA4                     	;# 
   533  0EA5                     	;# 
   534  0EA9                     	;# 
   535  0EAA                     	;# 
   536  0EAB                     	;# 
   537  0EAC                     	;# 
   538  0EB1                     	;# 
   539  0EB2                     	;# 
   540  0EB3                     	;# 
   541  0EB8                     	;# 
   542  0EB9                     	;# 
   543  0EBA                     	;# 
   544  0EBB                     	;# 
   545  0EBC                     	;# 
   546  0EBD                     	;# 
   547  0EBE                     	;# 
   548  0EC3                     	;# 
   549  0EC5                     	;# 
   550  0EC6                     	;# 
   551  0EC7                     	;# 
   552  0EC8                     	;# 
   553  0EC9                     	;# 
   554  0ECA                     	;# 
   555  0ECB                     	;# 
   556  0ECC                     	;# 
   557  0F10                     	;# 
   558  0F11                     	;# 
   559  0F12                     	;# 
   560  0F13                     	;# 
   561  0F14                     	;# 
   562  0F15                     	;# 
   563  0F16                     	;# 
   564  0F17                     	;# 
   565  0F18                     	;# 
   566  0F19                     	;# 
   567  0F1A                     	;# 
   568  0F1B                     	;# 
   569  0F1C                     	;# 
   570  0F1D                     	;# 
   571  0F1E                     	;# 
   572  0F1F                     	;# 
   573  0F20                     	;# 
   574  0F21                     	;# 
   575  0F22                     	;# 
   576  0F23                     	;# 
   577  0F24                     	;# 
   578  0F25                     	;# 
   579  0F26                     	;# 
   580  0F27                     	;# 
   581  0F28                     	;# 
   582  0F29                     	;# 
   583  0F2A                     	;# 
   584  0F2B                     	;# 
   585  0F2C                     	;# 
   586  0F2D                     	;# 
   587  0F2E                     	;# 
   588  0F2F                     	;# 
   589  0F30                     	;# 
   590  0F31                     	;# 
   591  0F32                     	;# 
   592  0F38                     	;# 
   593  0F39                     	;# 
   594  0F3A                     	;# 
   595  0F3B                     	;# 
   596  0F3C                     	;# 
   597  0F3D                     	;# 
   598  0F3E                     	;# 
   599  0F3F                     	;# 
   600  0F40                     	;# 
   601  0F41                     	;# 
   602  0F43                     	;# 
   603  0F44                     	;# 
   604  0F45                     	;# 
   605  0F46                     	;# 
   606  0F47                     	;# 
   607  0F48                     	;# 
   608  0F49                     	;# 
   609  0F4A                     	;# 
   610  0F4B                     	;# 
   611  0F4C                     	;# 
   612  0F4E                     	;# 
   613  0F4F                     	;# 
   614  0F50                     	;# 
   615  0F51                     	;# 
   616  0F52                     	;# 
   617  0F53                     	;# 
   618  0F54                     	;# 
   619  0F55                     	;# 
   620  0F56                     	;# 
   621  0F57                     	;# 
   622  0F59                     	;# 
   623  0F5A                     	;# 
   624  0F5B                     	;# 
   625  0F5C                     	;# 
   626  0F5D                     	;# 
   627  0F61                     	;# 
   628  0F62                     	;# 
   629  0F64                     	;# 
   630  0F65                     	;# 
   631  0F66                     	;# 
   632  0F67                     	;# 
   633  0F68                     	;# 
   634  0F69                     	;# 
   635  0F6A                     	;# 
   636  0F6B                     	;# 
   637  0F6C                     	;# 
   638  0F6D                     	;# 
   639  0FE4                     	;# 
   640  0FE5                     	;# 
   641  0FE6                     	;# 
   642  0FE7                     	;# 
   643  0FE8                     	;# 
   644  0FE9                     	;# 
   645  0FEA                     	;# 
   646  0FEB                     	;# 
   647  0FED                     	;# 
   648  0FEE                     	;# 
   649  0FEF                     	;# 
   650  0000                     	;# 
   651  0001                     	;# 
   652  0002                     	;# 
   653  0003                     	;# 
   654  0004                     	;# 
   655  0005                     	;# 
   656  0006                     	;# 
   657  0007                     	;# 
   658  0008                     	;# 
   659  0009                     	;# 
   660  000A                     	;# 
   661  000B                     	;# 
   662  000C                     	;# 
   663  000D                     	;# 
   664  000E                     	;# 
   665  000F                     	;# 
   666  0010                     	;# 
   667  0011                     	;# 
   668  0012                     	;# 
   669  0013                     	;# 
   670  0014                     	;# 
   671  0015                     	;# 
   672  0016                     	;# 
   673  0017                     	;# 
   674  0018                     	;# 
   675  0019                     	;# 
   676  001A                     	;# 
   677  001C                     	;# 
   678  001C                     	;# 
   679  001D                     	;# 
   680  001D                     	;# 
   681  001E                     	;# 
   682  001F                     	;# 
   683  008C                     	;# 
   684  008C                     	;# 
   685  008D                     	;# 
   686  008E                     	;# 
   687  008E                     	;# 
   688  008F                     	;# 
   689  0090                     	;# 
   690  0090                     	;# 
   691  0091                     	;# 
   692  0093                     	;# 
   693  0094                     	;# 
   694  0095                     	;# 
   695  0096                     	;# 
   696  0097                     	;# 
   697  0098                     	;# 
   698  0099                     	;# 
   699  009A                     	;# 
   700  009B                     	;# 
   701  009C                     	;# 
   702  009D                     	;# 
   703  009E                     	;# 
   704  010C                     	;# 
   705  010D                     	;# 
   706  010E                     	;# 
   707  010E                     	;# 
   708  010F                     	;# 
   709  0110                     	;# 
   710  0110                     	;# 
   711  0111                     	;# 
   712  0112                     	;# 
   713  0112                     	;# 
   714  0113                     	;# 
   715  0114                     	;# 
   716  0114                     	;# 
   717  0115                     	;# 
   718  0116                     	;# 
   719  0116                     	;# 
   720  0117                     	;# 
   721  0119                     	;# 
   722  0119                     	;# 
   723  0119                     	;# 
   724  011A                     	;# 
   725  011A                     	;# 
   726  011A                     	;# 
   727  011B                     	;# 
   728  011B                     	;# 
   729  011B                     	;# 
   730  011B                     	;# 
   731  011B                     	;# 
   732  011C                     	;# 
   733  011C                     	;# 
   734  011C                     	;# 
   735  011D                     	;# 
   736  011D                     	;# 
   737  011D                     	;# 
   738  011E                     	;# 
   739  011E                     	;# 
   740  011E                     	;# 
   741  011F                     	;# 
   742  011F                     	;# 
   743  011F                     	;# 
   744  011F                     	;# 
   745  011F                     	;# 
   746  018C                     	;# 
   747  018D                     	;# 
   748  018E                     	;# 
   749  018F                     	;# 
   750  0190                     	;# 
   751  0191                     	;# 
   752  0192                     	;# 
   753  0196                     	;# 
   754  0197                     	;# 
   755  0198                     	;# 
   756  0199                     	;# 
   757  019A                     	;# 
   758  019B                     	;# 
   759  019C                     	;# 
   760  020C                     	;# 
   761  020C                     	;# 
   762  020D                     	;# 
   763  020E                     	;# 
   764  020F                     	;# 
   765  020F                     	;# 
   766  0210                     	;# 
   767  0210                     	;# 
   768  0211                     	;# 
   769  0211                     	;# 
   770  0212                     	;# 
   771  0212                     	;# 
   772  0213                     	;# 
   773  0214                     	;# 
   774  0215                     	;# 
   775  0215                     	;# 
   776  0216                     	;# 
   777  0216                     	;# 
   778  0217                     	;# 
   779  0217                     	;# 
   780  0218                     	;# 
   781  0218                     	;# 
   782  0219                     	;# 
   783  021A                     	;# 
   784  021B                     	;# 
   785  021B                     	;# 
   786  021C                     	;# 
   787  021C                     	;# 
   788  021D                     	;# 
   789  021D                     	;# 
   790  021E                     	;# 
   791  021F                     	;# 
   792  028C                     	;# 
   793  028C                     	;# 
   794  028D                     	;# 
   795  028D                     	;# 
   796  028E                     	;# 
   797  028F                     	;# 
   798  0290                     	;# 
   799  0290                     	;# 
   800  0291                     	;# 
   801  0292                     	;# 
   802  0292                     	;# 
   803  0293                     	;# 
   804  0293                     	;# 
   805  0294                     	;# 
   806  0295                     	;# 
   807  0296                     	;# 
   808  0296                     	;# 
   809  0297                     	;# 
   810  0298                     	;# 
   811  0298                     	;# 
   812  0299                     	;# 
   813  0299                     	;# 
   814  029A                     	;# 
   815  029B                     	;# 
   816  029C                     	;# 
   817  029C                     	;# 
   818  029D                     	;# 
   819  030C                     	;# 
   820  030C                     	;# 
   821  030D                     	;# 
   822  030E                     	;# 
   823  030F                     	;# 
   824  0310                     	;# 
   825  0310                     	;# 
   826  0311                     	;# 
   827  0312                     	;# 
   828  0313                     	;# 
   829  0314                     	;# 
   830  0314                     	;# 
   831  0315                     	;# 
   832  0316                     	;# 
   833  0317                     	;# 
   834  0318                     	;# 
   835  0318                     	;# 
   836  0319                     	;# 
   837  031A                     	;# 
   838  031B                     	;# 
   839  031C                     	;# 
   840  031C                     	;# 
   841  031D                     	;# 
   842  031E                     	;# 
   843  031F                     	;# 
   844  038C                     	;# 
   845  038C                     	;# 
   846  038D                     	;# 
   847  038E                     	;# 
   848  0390                     	;# 
   849  0390                     	;# 
   850  0391                     	;# 
   851  0392                     	;# 
   852  040C                     	;# 
   853  040D                     	;# 
   854  040E                     	;# 
   855  040F                     	;# 
   856  0410                     	;# 
   857  0411                     	;# 
   858  0416                     	;# 
   859  0416                     	;# 
   860  0417                     	;# 
   861  0418                     	;# 
   862  0418                     	;# 
   863  0419                     	;# 
   864  041A                     	;# 
   865  041A                     	;# 
   866  041B                     	;# 
   867  041C                     	;# 
   868  041C                     	;# 
   869  041D                     	;# 
   870  041E                     	;# 
   871  041F                     	;# 
   872  048C                     	;# 
   873  048C                     	;# 
   874  048D                     	;# 
   875  048E                     	;# 
   876  048F                     	;# 
   877  048F                     	;# 
   878  0490                     	;# 
   879  0491                     	;# 
   880  0492                     	;# 
   881  0492                     	;# 
   882  0493                     	;# 
   883  0494                     	;# 
   884  0495                     	;# 
   885  0495                     	;# 
   886  0496                     	;# 
   887  0497                     	;# 
   888  0498                     	;# 
   889  0499                     	;# 
   890  049A                     	;# 
   891  049B                     	;# 
   892  049C                     	;# 
   893  049D                     	;# 
   894  050C                     	;# 
   895  050C                     	;# 
   896  050D                     	;# 
   897  050E                     	;# 
   898  050F                     	;# 
   899  050F                     	;# 
   900  0510                     	;# 
   901  0511                     	;# 
   902  0512                     	;# 
   903  0512                     	;# 
   904  0513                     	;# 
   905  0514                     	;# 
   906  0515                     	;# 
   907  0515                     	;# 
   908  0516                     	;# 
   909  0517                     	;# 
   910  0518                     	;# 
   911  0519                     	;# 
   912  051A                     	;# 
   913  051B                     	;# 
   914  051C                     	;# 
   915  051D                     	;# 
   916  058C                     	;# 
   917  058C                     	;# 
   918  058D                     	;# 
   919  058E                     	;# 
   920  058F                     	;# 
   921  058F                     	;# 
   922  0590                     	;# 
   923  0591                     	;# 
   924  0592                     	;# 
   925  0593                     	;# 
   926  060C                     	;# 
   927  060D                     	;# 
   928  060E                     	;# 
   929  060F                     	;# 
   930  0610                     	;# 
   931  0611                     	;# 
   932  0612                     	;# 
   933  0613                     	;# 
   934  0614                     	;# 
   935  0616                     	;# 
   936  0617                     	;# 
   937  0618                     	;# 
   938  0619                     	;# 
   939  061A                     	;# 
   940  061B                     	;# 
   941  061C                     	;# 
   942  061D                     	;# 
   943  061E                     	;# 
   944  068C                     	;# 
   945  068D                     	;# 
   946  068E                     	;# 
   947  068F                     	;# 
   948  0690                     	;# 
   949  0691                     	;# 
   950  0692                     	;# 
   951  0693                     	;# 
   952  0694                     	;# 
   953  070C                     	;# 
   954  070D                     	;# 
   955  070E                     	;# 
   956  070F                     	;# 
   957  0710                     	;# 
   958  0711                     	;# 
   959  0712                     	;# 
   960  0713                     	;# 
   961  0714                     	;# 
   962  0716                     	;# 
   963  0717                     	;# 
   964  0718                     	;# 
   965  0719                     	;# 
   966  071A                     	;# 
   967  071B                     	;# 
   968  071C                     	;# 
   969  071D                     	;# 
   970  071E                     	;# 
   971  0796                     	;# 
   972  0797                     	;# 
   973  0798                     	;# 
   974  0799                     	;# 
   975  079A                     	;# 
   976  079B                     	;# 
   977  080C                     	;# 
   978  080D                     	;# 
   979  080E                     	;# 
   980  080F                     	;# 
   981  0810                     	;# 
   982  0811                     	;# 
   983  0812                     	;# 
   984  0813                     	;# 
   985  0814                     	;# 
   986  081A                     	;# 
   987  081B                     	;# 
   988  081C                     	;# 
   989  081D                     	;# 
   990  081E                     	;# 
   991  081F                     	;# 
   992  088C                     	;# 
   993  088D                     	;# 
   994  088E                     	;# 
   995  088F                     	;# 
   996  0890                     	;# 
   997  0891                     	;# 
   998  0892                     	;# 
   999  0893                     	;# 
  1000  0895                     	;# 
  1001  0896                     	;# 
  1002  0897                     	;# 
  1003  0898                     	;# 
  1004  0899                     	;# 
  1005  089A                     	;# 
  1006  089B                     	;# 
  1007  090C                     	;# 
  1008  090E                     	;# 
  1009  090F                     	;# 
  1010  091F                     	;# 
  1011  091F                     	;# 
  1012  098F                     	;# 
  1013  098F                     	;# 
  1014  0990                     	;# 
  1015  0991                     	;# 
  1016  0992                     	;# 
  1017  0993                     	;# 
  1018  0994                     	;# 
  1019  0995                     	;# 
  1020  0996                     	;# 
  1021  0997                     	;# 
  1022  0E0F                     	;# 
  1023  0E10                     	;# 
  1024  0E11                     	;# 
  1025  0E12                     	;# 
  1026  0E13                     	;# 
  1027  0E14                     	;# 
  1028  0E15                     	;# 
  1029  0E16                     	;# 
  1030  0E17                     	;# 
  1031  0E18                     	;# 
  1032  0E19                     	;# 
  1033  0E1A                     	;# 
  1034  0E1B                     	;# 
  1035  0E1C                     	;# 
  1036  0E1D                     	;# 
  1037  0E1E                     	;# 
  1038  0E1F                     	;# 
  1039  0E20                     	;# 
  1040  0E21                     	;# 
  1041  0E22                     	;# 
  1042  0E23                     	;# 
  1043  0E24                     	;# 
  1044  0E25                     	;# 
  1045  0E26                     	;# 
  1046  0E27                     	;# 
  1047  0E28                     	;# 
  1048  0E29                     	;# 
  1049  0E2A                     	;# 
  1050  0E2B                     	;# 
  1051  0E2C                     	;# 
  1052  0E2D                     	;# 
  1053  0E2E                     	;# 
  1054  0E2F                     	;# 
  1055  0E30                     	;# 
  1056  0E31                     	;# 
  1057  0E32                     	;# 
  1058  0E33                     	;# 
  1059  0E34                     	;# 
  1060  0E35                     	;# 
  1061  0E36                     	;# 
  1062  0E37                     	;# 
  1063  0E8F                     	;# 
  1064  0E90                     	;# 
  1065  0E91                     	;# 
  1066  0E92                     	;# 
  1067  0E93                     	;# 
  1068  0E94                     	;# 
  1069  0E95                     	;# 
  1070  0E96                     	;# 
  1071  0E97                     	;# 
  1072  0E9C                     	;# 
  1073  0E9D                     	;# 
  1074  0E9E                     	;# 
  1075  0EA1                     	;# 
  1076  0EA2                     	;# 
  1077  0EA3                     	;# 
  1078  0EA4                     	;# 
  1079  0EA5                     	;# 
  1080  0EA9                     	;# 
  1081  0EAA                     	;# 
  1082  0EAB                     	;# 
  1083  0EAC                     	;# 
  1084  0EB1                     	;# 
  1085  0EB2                     	;# 
  1086  0EB3                     	;# 
  1087  0EB8                     	;# 
  1088  0EB9                     	;# 
  1089  0EBA                     	;# 
  1090  0EBB                     	;# 
  1091  0EBC                     	;# 
  1092  0EBD                     	;# 
  1093  0EBE                     	;# 
  1094  0EC3                     	;# 
  1095  0EC5                     	;# 
  1096  0EC6                     	;# 
  1097  0EC7                     	;# 
  1098  0EC8                     	;# 
  1099  0EC9                     	;# 
  1100  0ECA                     	;# 
  1101  0ECB                     	;# 
  1102  0ECC                     	;# 
  1103  0F10                     	;# 
  1104  0F11                     	;# 
  1105  0F12                     	;# 
  1106  0F13                     	;# 
  1107  0F14                     	;# 
  1108  0F15                     	;# 
  1109  0F16                     	;# 
  1110  0F17                     	;# 
  1111  0F18                     	;# 
  1112  0F19                     	;# 
  1113  0F1A                     	;# 
  1114  0F1B                     	;# 
  1115  0F1C                     	;# 
  1116  0F1D                     	;# 
  1117  0F1E                     	;# 
  1118  0F1F                     	;# 
  1119  0F20                     	;# 
  1120  0F21                     	;# 
  1121  0F22                     	;# 
  1122  0F23                     	;# 
  1123  0F24                     	;# 
  1124  0F25                     	;# 
  1125  0F26                     	;# 
  1126  0F27                     	;# 
  1127  0F28                     	;# 
  1128  0F29                     	;# 
  1129  0F2A                     	;# 
  1130  0F2B                     	;# 
  1131  0F2C                     	;# 
  1132  0F2D                     	;# 
  1133  0F2E                     	;# 
  1134  0F2F                     	;# 
  1135  0F30                     	;# 
  1136  0F31                     	;# 
  1137  0F32                     	;# 
  1138  0F38                     	;# 
  1139  0F39                     	;# 
  1140  0F3A                     	;# 
  1141  0F3B                     	;# 
  1142  0F3C                     	;# 
  1143  0F3D                     	;# 
  1144  0F3E                     	;# 
  1145  0F3F                     	;# 
  1146  0F40                     	;# 
  1147  0F41                     	;# 
  1148  0F43                     	;# 
  1149  0F44                     	;# 
  1150  0F45                     	;# 
  1151  0F46                     	;# 
  1152  0F47                     	;# 
  1153  0F48                     	;# 
  1154  0F49                     	;# 
  1155  0F4A                     	;# 
  1156  0F4B                     	;# 
  1157  0F4C                     	;# 
  1158  0F4E                     	;# 
  1159  0F4F                     	;# 
  1160  0F50                     	;# 
  1161  0F51                     	;# 
  1162  0F52                     	;# 
  1163  0F53                     	;# 
  1164  0F54                     	;# 
  1165  0F55                     	;# 
  1166  0F56                     	;# 
  1167  0F57                     	;# 
  1168  0F59                     	;# 
  1169  0F5A                     	;# 
  1170  0F5B                     	;# 
  1171  0F5C                     	;# 
  1172  0F5D                     	;# 
  1173  0F61                     	;# 
  1174  0F62                     	;# 
  1175  0F64                     	;# 
  1176  0F65                     	;# 
  1177  0F66                     	;# 
  1178  0F67                     	;# 
  1179  0F68                     	;# 
  1180  0F69                     	;# 
  1181  0F6A                     	;# 
  1182  0F6B                     	;# 
  1183  0F6C                     	;# 
  1184  0F6D                     	;# 
  1185  0FE4                     	;# 
  1186  0FE5                     	;# 
  1187  0FE6                     	;# 
  1188  0FE7                     	;# 
  1189  0FE8                     	;# 
  1190  0FE9                     	;# 
  1191  0FEA                     	;# 
  1192  0FEB                     	;# 
  1193  0FED                     	;# 
  1194  0FEE                     	;# 
  1195  0FEF                     	;# 
  1196  0000                     	;# 
  1197  0001                     	;# 
  1198  0002                     	;# 
  1199  0003                     	;# 
  1200  0004                     	;# 
  1201  0005                     	;# 
  1202  0006                     	;# 
  1203  0007                     	;# 
  1204  0008                     	;# 
  1205  0009                     	;# 
  1206  000A                     	;# 
  1207  000B                     	;# 
  1208  000C                     	;# 
  1209  000D                     	;# 
  1210  000E                     	;# 
  1211  000F                     	;# 
  1212  0010                     	;# 
  1213  0011                     	;# 
  1214  0012                     	;# 
  1215  0013                     	;# 
  1216  0014                     	;# 
  1217  0015                     	;# 
  1218  0016                     	;# 
  1219  0017                     	;# 
  1220  0018                     	;# 
  1221  0019                     	;# 
  1222  001A                     	;# 
  1223  001C                     	;# 
  1224  001C                     	;# 
  1225  001D                     	;# 
  1226  001D                     	;# 
  1227  001E                     	;# 
  1228  001F                     	;# 
  1229  008C                     	;# 
  1230  008C                     	;# 
  1231  008D                     	;# 
  1232  008E                     	;# 
  1233  008E                     	;# 
  1234  008F                     	;# 
  1235  0090                     	;# 
  1236  0090                     	;# 
  1237  0091                     	;# 
  1238  0093                     	;# 
  1239  0094                     	;# 
  1240  0095                     	;# 
  1241  0096                     	;# 
  1242  0097                     	;# 
  1243  0098                     	;# 
  1244  0099                     	;# 
  1245  009A                     	;# 
  1246  009B                     	;# 
  1247  009C                     	;# 
  1248  009D                     	;# 
  1249  009E                     	;# 
  1250  010C                     	;# 
  1251  010D                     	;# 
  1252  010E                     	;# 
  1253  010E                     	;# 
  1254  010F                     	;# 
  1255  0110                     	;# 
  1256  0110                     	;# 
  1257  0111                     	;# 
  1258  0112                     	;# 
  1259  0112                     	;# 
  1260  0113                     	;# 
  1261  0114                     	;# 
  1262  0114                     	;# 
  1263  0115                     	;# 
  1264  0116                     	;# 
  1265  0116                     	;# 
  1266  0117                     	;# 
  1267  0119                     	;# 
  1268  0119                     	;# 
  1269  0119                     	;# 
  1270  011A                     	;# 
  1271  011A                     	;# 
  1272  011A                     	;# 
  1273  011B                     	;# 
  1274  011B                     	;# 
  1275  011B                     	;# 
  1276  011B                     	;# 
  1277  011B                     	;# 
  1278  011C                     	;# 
  1279  011C                     	;# 
  1280  011C                     	;# 
  1281  011D                     	;# 
  1282  011D                     	;# 
  1283  011D                     	;# 
  1284  011E                     	;# 
  1285  011E                     	;# 
  1286  011E                     	;# 
  1287  011F                     	;# 
  1288  011F                     	;# 
  1289  011F                     	;# 
  1290  011F                     	;# 
  1291  011F                     	;# 
  1292  018C                     	;# 
  1293  018D                     	;# 
  1294  018E                     	;# 
  1295  018F                     	;# 
  1296  0190                     	;# 
  1297  0191                     	;# 
  1298  0192                     	;# 
  1299  0196                     	;# 
  1300  0197                     	;# 
  1301  0198                     	;# 
  1302  0199                     	;# 
  1303  019A                     	;# 
  1304  019B                     	;# 
  1305  019C                     	;# 
  1306  020C                     	;# 
  1307  020C                     	;# 
  1308  020D                     	;# 
  1309  020E                     	;# 
  1310  020F                     	;# 
  1311  020F                     	;# 
  1312  0210                     	;# 
  1313  0210                     	;# 
  1314  0211                     	;# 
  1315  0211                     	;# 
  1316  0212                     	;# 
  1317  0212                     	;# 
  1318  0213                     	;# 
  1319  0214                     	;# 
  1320  0215                     	;# 
  1321  0215                     	;# 
  1322  0216                     	;# 
  1323  0216                     	;# 
  1324  0217                     	;# 
  1325  0217                     	;# 
  1326  0218                     	;# 
  1327  0218                     	;# 
  1328  0219                     	;# 
  1329  021A                     	;# 
  1330  021B                     	;# 
  1331  021B                     	;# 
  1332  021C                     	;# 
  1333  021C                     	;# 
  1334  021D                     	;# 
  1335  021D                     	;# 
  1336  021E                     	;# 
  1337  021F                     	;# 
  1338  028C                     	;# 
  1339  028C                     	;# 
  1340  028D                     	;# 
  1341  028D                     	;# 
  1342  028E                     	;# 
  1343  028F                     	;# 
  1344  0290                     	;# 
  1345  0290                     	;# 
  1346  0291                     	;# 
  1347  0292                     	;# 
  1348  0292                     	;# 
  1349  0293                     	;# 
  1350  0293                     	;# 
  1351  0294                     	;# 
  1352  0295                     	;# 
  1353  0296                     	;# 
  1354  0296                     	;# 
  1355  0297                     	;# 
  1356  0298                     	;# 
  1357  0298                     	;# 
  1358  0299                     	;# 
  1359  0299                     	;# 
  1360  029A                     	;# 
  1361  029B                     	;# 
  1362  029C                     	;# 
  1363  029C                     	;# 
  1364  029D                     	;# 
  1365  030C                     	;# 
  1366  030C                     	;# 
  1367  030D                     	;# 
  1368  030E                     	;# 
  1369  030F                     	;# 
  1370  0310                     	;# 
  1371  0310                     	;# 
  1372  0311                     	;# 
  1373  0312                     	;# 
  1374  0313                     	;# 
  1375  0314                     	;# 
  1376  0314                     	;# 
  1377  0315                     	;# 
  1378  0316                     	;# 
  1379  0317                     	;# 
  1380  0318                     	;# 
  1381  0318                     	;# 
  1382  0319                     	;# 
  1383  031A                     	;# 
  1384  031B                     	;# 
  1385  031C                     	;# 
  1386  031C                     	;# 
  1387  031D                     	;# 
  1388  031E                     	;# 
  1389  031F                     	;# 
  1390  038C                     	;# 
  1391  038C                     	;# 
  1392  038D                     	;# 
  1393  038E                     	;# 
  1394  0390                     	;# 
  1395  0390                     	;# 
  1396  0391                     	;# 
  1397  0392                     	;# 
  1398  040C                     	;# 
  1399  040D                     	;# 
  1400  040E                     	;# 
  1401  040F                     	;# 
  1402  0410                     	;# 
  1403  0411                     	;# 
  1404  0416                     	;# 
  1405  0416                     	;# 
  1406  0417                     	;# 
  1407  0418                     	;# 
  1408  0418                     	;# 
  1409  0419                     	;# 
  1410  041A                     	;# 
  1411  041A                     	;# 
  1412  041B                     	;# 
  1413  041C                     	;# 
  1414  041C                     	;# 
  1415  041D                     	;# 
  1416  041E                     	;# 
  1417  041F                     	;# 
  1418  048C                     	;# 
  1419  048C                     	;# 
  1420  048D                     	;# 
  1421  048E                     	;# 
  1422  048F                     	;# 
  1423  048F                     	;# 
  1424  0490                     	;# 
  1425  0491                     	;# 
  1426  0492                     	;# 
  1427  0492                     	;# 
  1428  0493                     	;# 
  1429  0494                     	;# 
  1430  0495                     	;# 
  1431  0495                     	;# 
  1432  0496                     	;# 
  1433  0497                     	;# 
  1434  0498                     	;# 
  1435  0499                     	;# 
  1436  049A                     	;# 
  1437  049B                     	;# 
  1438  049C                     	;# 
  1439  049D                     	;# 
  1440  050C                     	;# 
  1441  050C                     	;# 
  1442  050D                     	;# 
  1443  050E                     	;# 
  1444  050F                     	;# 
  1445  050F                     	;# 
  1446  0510                     	;# 
  1447  0511                     	;# 
  1448  0512                     	;# 
  1449  0512                     	;# 
  1450  0513                     	;# 
  1451  0514                     	;# 
  1452  0515                     	;# 
  1453  0515                     	;# 
  1454  0516                     	;# 
  1455  0517                     	;# 
  1456  0518                     	;# 
  1457  0519                     	;# 
  1458  051A                     	;# 
  1459  051B                     	;# 
  1460  051C                     	;# 
  1461  051D                     	;# 
  1462  058C                     	;# 
  1463  058C                     	;# 
  1464  058D                     	;# 
  1465  058E                     	;# 
  1466  058F                     	;# 
  1467  058F                     	;# 
  1468  0590                     	;# 
  1469  0591                     	;# 
  1470  0592                     	;# 
  1471  0593                     	;# 
  1472  060C                     	;# 
  1473  060D                     	;# 
  1474  060E                     	;# 
  1475  060F                     	;# 
  1476  0610                     	;# 
  1477  0611                     	;# 
  1478  0612                     	;# 
  1479  0613                     	;# 
  1480  0614                     	;# 
  1481  0616                     	;# 
  1482  0617                     	;# 
  1483  0618                     	;# 
  1484  0619                     	;# 
  1485  061A                     	;# 
  1486  061B                     	;# 
  1487  061C                     	;# 
  1488  061D                     	;# 
  1489  061E                     	;# 
  1490  068C                     	;# 
  1491  068D                     	;# 
  1492  068E                     	;# 
  1493  068F                     	;# 
  1494  0690                     	;# 
  1495  0691                     	;# 
  1496  0692                     	;# 
  1497  0693                     	;# 
  1498  0694                     	;# 
  1499  070C                     	;# 
  1500  070D                     	;# 
  1501  070E                     	;# 
  1502  070F                     	;# 
  1503  0710                     	;# 
  1504  0711                     	;# 
  1505  0712                     	;# 
  1506  0713                     	;# 
  1507  0714                     	;# 
  1508  0716                     	;# 
  1509  0717                     	;# 
  1510  0718                     	;# 
  1511  0719                     	;# 
  1512  071A                     	;# 
  1513  071B                     	;# 
  1514  071C                     	;# 
  1515  071D                     	;# 
  1516  071E                     	;# 
  1517  0796                     	;# 
  1518  0797                     	;# 
  1519  0798                     	;# 
  1520  0799                     	;# 
  1521  079A                     	;# 
  1522  079B                     	;# 
  1523  080C                     	;# 
  1524  080D                     	;# 
  1525  080E                     	;# 
  1526  080F                     	;# 
  1527  0810                     	;# 
  1528  0811                     	;# 
  1529  0812                     	;# 
  1530  0813                     	;# 
  1531  0814                     	;# 
  1532  081A                     	;# 
  1533  081B                     	;# 
  1534  081C                     	;# 
  1535  081D                     	;# 
  1536  081E                     	;# 
  1537  081F                     	;# 
  1538  088C                     	;# 
  1539  088D                     	;# 
  1540  088E                     	;# 
  1541  088F                     	;# 
  1542  0890                     	;# 
  1543  0891                     	;# 
  1544  0892                     	;# 
  1545  0893                     	;# 
  1546  0895                     	;# 
  1547  0896                     	;# 
  1548  0897                     	;# 
  1549  0898                     	;# 
  1550  0899                     	;# 
  1551  089A                     	;# 
  1552  089B                     	;# 
  1553  090C                     	;# 
  1554  090E                     	;# 
  1555  090F                     	;# 
  1556  091F                     	;# 
  1557  091F                     	;# 
  1558  098F                     	;# 
  1559  098F                     	;# 
  1560  0990                     	;# 
  1561  0991                     	;# 
  1562  0992                     	;# 
  1563  0993                     	;# 
  1564  0994                     	;# 
  1565  0995                     	;# 
  1566  0996                     	;# 
  1567  0997                     	;# 
  1568  0E0F                     	;# 
  1569  0E10                     	;# 
  1570  0E11                     	;# 
  1571  0E12                     	;# 
  1572  0E13                     	;# 
  1573  0E14                     	;# 
  1574  0E15                     	;# 
  1575  0E16                     	;# 
  1576  0E17                     	;# 
  1577  0E18                     	;# 
  1578  0E19                     	;# 
  1579  0E1A                     	;# 
  1580  0E1B                     	;# 
  1581  0E1C                     	;# 
  1582  0E1D                     	;# 
  1583  0E1E                     	;# 
  1584  0E1F                     	;# 
  1585  0E20                     	;# 
  1586  0E21                     	;# 
  1587  0E22                     	;# 
  1588  0E23                     	;# 
  1589  0E24                     	;# 
  1590  0E25                     	;# 
  1591  0E26                     	;# 
  1592  0E27                     	;# 
  1593  0E28                     	;# 
  1594  0E29                     	;# 
  1595  0E2A                     	;# 
  1596  0E2B                     	;# 
  1597  0E2C                     	;# 
  1598  0E2D                     	;# 
  1599  0E2E                     	;# 
  1600  0E2F                     	;# 
  1601  0E30                     	;# 
  1602  0E31                     	;# 
  1603  0E32                     	;# 
  1604  0E33                     	;# 
  1605  0E34                     	;# 
  1606  0E35                     	;# 
  1607  0E36                     	;# 
  1608  0E37                     	;# 
  1609  0E8F                     	;# 
  1610  0E90                     	;# 
  1611  0E91                     	;# 
  1612  0E92                     	;# 
  1613  0E93                     	;# 
  1614  0E94                     	;# 
  1615  0E95                     	;# 
  1616  0E96                     	;# 
  1617  0E97                     	;# 
  1618  0E9C                     	;# 
  1619  0E9D                     	;# 
  1620  0E9E                     	;# 
  1621  0EA1                     	;# 
  1622  0EA2                     	;# 
  1623  0EA3                     	;# 
  1624  0EA4                     	;# 
  1625  0EA5                     	;# 
  1626  0EA9                     	;# 
  1627  0EAA                     	;# 
  1628  0EAB                     	;# 
  1629  0EAC                     	;# 
  1630  0EB1                     	;# 
  1631  0EB2                     	;# 
  1632  0EB3                     	;# 
  1633  0EB8                     	;# 
  1634  0EB9                     	;# 
  1635  0EBA                     	;# 
  1636  0EBB                     	;# 
  1637  0EBC                     	;# 
  1638  0EBD                     	;# 
  1639  0EBE                     	;# 
  1640  0EC3                     	;# 
  1641  0EC5                     	;# 
  1642  0EC6                     	;# 
  1643  0EC7                     	;# 
  1644  0EC8                     	;# 
  1645  0EC9                     	;# 
  1646  0ECA                     	;# 
  1647  0ECB                     	;# 
  1648  0ECC                     	;# 
  1649  0F10                     	;# 
  1650  0F11                     	;# 
  1651  0F12                     	;# 
  1652  0F13                     	;# 
  1653  0F14                     	;# 
  1654  0F15                     	;# 
  1655  0F16                     	;# 
  1656  0F17                     	;# 
  1657  0F18                     	;# 
  1658  0F19                     	;# 
  1659  0F1A                     	;# 
  1660  0F1B                     	;# 
  1661  0F1C                     	;# 
  1662  0F1D                     	;# 
  1663  0F1E                     	;# 
  1664  0F1F                     	;# 
  1665  0F20                     	;# 
  1666  0F21                     	;# 
  1667  0F22                     	;# 
  1668  0F23                     	;# 
  1669  0F24                     	;# 
  1670  0F25                     	;# 
  1671  0F26                     	;# 
  1672  0F27                     	;# 
  1673  0F28                     	;# 
  1674  0F29                     	;# 
  1675  0F2A                     	;# 
  1676  0F2B                     	;# 
  1677  0F2C                     	;# 
  1678  0F2D                     	;# 
  1679  0F2E                     	;# 
  1680  0F2F                     	;# 
  1681  0F30                     	;# 
  1682  0F31                     	;# 
  1683  0F32                     	;# 
  1684  0F38                     	;# 
  1685  0F39                     	;# 
  1686  0F3A                     	;# 
  1687  0F3B                     	;# 
  1688  0F3C                     	;# 
  1689  0F3D                     	;# 
  1690  0F3E                     	;# 
  1691  0F3F                     	;# 
  1692  0F40                     	;# 
  1693  0F41                     	;# 
  1694  0F43                     	;# 
  1695  0F44                     	;# 
  1696  0F45                     	;# 
  1697  0F46                     	;# 
  1698  0F47                     	;# 
  1699  0F48                     	;# 
  1700  0F49                     	;# 
  1701  0F4A                     	;# 
  1702  0F4B                     	;# 
  1703  0F4C                     	;# 
  1704  0F4E                     	;# 
  1705  0F4F                     	;# 
  1706  0F50                     	;# 
  1707  0F51                     	;# 
  1708  0F52                     	;# 
  1709  0F53                     	;# 
  1710  0F54                     	;# 
  1711  0F55                     	;# 
  1712  0F56                     	;# 
  1713  0F57                     	;# 
  1714  0F59                     	;# 
  1715  0F5A                     	;# 
  1716  0F5B                     	;# 
  1717  0F5C                     	;# 
  1718  0F5D                     	;# 
  1719  0F61                     	;# 
  1720  0F62                     	;# 
  1721  0F64                     	;# 
  1722  0F65                     	;# 
  1723  0F66                     	;# 
  1724  0F67                     	;# 
  1725  0F68                     	;# 
  1726  0F69                     	;# 
  1727  0F6A                     	;# 
  1728  0F6B                     	;# 
  1729  0F6C                     	;# 
  1730  0F6D                     	;# 
  1731  0FE4                     	;# 
  1732  0FE5                     	;# 
  1733  0FE6                     	;# 
  1734  0FE7                     	;# 
  1735  0FE8                     	;# 
  1736  0FE9                     	;# 
  1737  0FEA                     	;# 
  1738  0FEB                     	;# 
  1739  0FED                     	;# 
  1740  0FEE                     	;# 
  1741  0FEF                     	;# 
  1742  0000                     	;# 
  1743  0001                     	;# 
  1744  0002                     	;# 
  1745  0003                     	;# 
  1746  0004                     	;# 
  1747  0005                     	;# 
  1748  0006                     	;# 
  1749  0007                     	;# 
  1750  0008                     	;# 
  1751  0009                     	;# 
  1752  000A                     	;# 
  1753  000B                     	;# 
  1754  000C                     	;# 
  1755  000D                     	;# 
  1756  000E                     	;# 
  1757  000F                     	;# 
  1758  0010                     	;# 
  1759  0011                     	;# 
  1760  0012                     	;# 
  1761  0013                     	;# 
  1762  0014                     	;# 
  1763  0015                     	;# 
  1764  0016                     	;# 
  1765  0017                     	;# 
  1766  0018                     	;# 
  1767  0019                     	;# 
  1768  001A                     	;# 
  1769  001C                     	;# 
  1770  001C                     	;# 
  1771  001D                     	;# 
  1772  001D                     	;# 
  1773  001E                     	;# 
  1774  001F                     	;# 
  1775  008C                     	;# 
  1776  008C                     	;# 
  1777  008D                     	;# 
  1778  008E                     	;# 
  1779  008E                     	;# 
  1780  008F                     	;# 
  1781  0090                     	;# 
  1782  0090                     	;# 
  1783  0091                     	;# 
  1784  0093                     	;# 
  1785  0094                     	;# 
  1786  0095                     	;# 
  1787  0096                     	;# 
  1788  0097                     	;# 
  1789  0098                     	;# 
  1790  0099                     	;# 
  1791  009A                     	;# 
  1792  009B                     	;# 
  1793  009C                     	;# 
  1794  009D                     	;# 
  1795  009E                     	;# 
  1796  010C                     	;# 
  1797  010D                     	;# 
  1798  010E                     	;# 
  1799  010E                     	;# 
  1800  010F                     	;# 
  1801  0110                     	;# 
  1802  0110                     	;# 
  1803  0111                     	;# 
  1804  0112                     	;# 
  1805  0112                     	;# 
  1806  0113                     	;# 
  1807  0114                     	;# 
  1808  0114                     	;# 
  1809  0115                     	;# 
  1810  0116                     	;# 
  1811  0116                     	;# 
  1812  0117                     	;# 
  1813  0119                     	;# 
  1814  0119                     	;# 
  1815  0119                     	;# 
  1816  011A                     	;# 
  1817  011A                     	;# 
  1818  011A                     	;# 
  1819  011B                     	;# 
  1820  011B                     	;# 
  1821  011B                     	;# 
  1822  011B                     	;# 
  1823  011B                     	;# 
  1824  011C                     	;# 
  1825  011C                     	;# 
  1826  011C                     	;# 
  1827  011D                     	;# 
  1828  011D                     	;# 
  1829  011D                     	;# 
  1830  011E                     	;# 
  1831  011E                     	;# 
  1832  011E                     	;# 
  1833  011F                     	;# 
  1834  011F                     	;# 
  1835  011F                     	;# 
  1836  011F                     	;# 
  1837  011F                     	;# 
  1838  018C                     	;# 
  1839  018D                     	;# 
  1840  018E                     	;# 
  1841  018F                     	;# 
  1842  0190                     	;# 
  1843  0191                     	;# 
  1844  0192                     	;# 
  1845  0196                     	;# 
  1846  0197                     	;# 
  1847  0198                     	;# 
  1848  0199                     	;# 
  1849  019A                     	;# 
  1850  019B                     	;# 
  1851  019C                     	;# 
  1852  020C                     	;# 
  1853  020C                     	;# 
  1854  020D                     	;# 
  1855  020E                     	;# 
  1856  020F                     	;# 
  1857  020F                     	;# 
  1858  0210                     	;# 
  1859  0210                     	;# 
  1860  0211                     	;# 
  1861  0211                     	;# 
  1862  0212                     	;# 
  1863  0212                     	;# 
  1864  0213                     	;# 
  1865  0214                     	;# 
  1866  0215                     	;# 
  1867  0215                     	;# 
  1868  0216                     	;# 
  1869  0216                     	;# 
  1870  0217                     	;# 
  1871  0217                     	;# 
  1872  0218                     	;# 
  1873  0218                     	;# 
  1874  0219                     	;# 
  1875  021A                     	;# 
  1876  021B                     	;# 
  1877  021B                     	;# 
  1878  021C                     	;# 
  1879  021C                     	;# 
  1880  021D                     	;# 
  1881  021D                     	;# 
  1882  021E                     	;# 
  1883  021F                     	;# 
  1884  028C                     	;# 
  1885  028C                     	;# 
  1886  028D                     	;# 
  1887  028D                     	;# 
  1888  028E                     	;# 
  1889  028F                     	;# 
  1890  0290                     	;# 
  1891  0290                     	;# 
  1892  0291                     	;# 
  1893  0292                     	;# 
  1894  0292                     	;# 
  1895  0293                     	;# 
  1896  0293                     	;# 
  1897  0294                     	;# 
  1898  0295                     	;# 
  1899  0296                     	;# 
  1900  0296                     	;# 
  1901  0297                     	;# 
  1902  0298                     	;# 
  1903  0298                     	;# 
  1904  0299                     	;# 
  1905  0299                     	;# 
  1906  029A                     	;# 
  1907  029B                     	;# 
  1908  029C                     	;# 
  1909  029C                     	;# 
  1910  029D                     	;# 
  1911  030C                     	;# 
  1912  030C                     	;# 
  1913  030D                     	;# 
  1914  030E                     	;# 
  1915  030F                     	;# 
  1916  0310                     	;# 
  1917  0310                     	;# 
  1918  0311                     	;# 
  1919  0312                     	;# 
  1920  0313                     	;# 
  1921  0314                     	;# 
  1922  0314                     	;# 
  1923  0315                     	;# 
  1924  0316                     	;# 
  1925  0317                     	;# 
  1926  0318                     	;# 
  1927  0318                     	;# 
  1928  0319                     	;# 
  1929  031A                     	;# 
  1930  031B                     	;# 
  1931  031C                     	;# 
  1932  031C                     	;# 
  1933  031D                     	;# 
  1934  031E                     	;# 
  1935  031F                     	;# 
  1936  038C                     	;# 
  1937  038C                     	;# 
  1938  038D                     	;# 
  1939  038E                     	;# 
  1940  0390                     	;# 
  1941  0390                     	;# 
  1942  0391                     	;# 
  1943  0392                     	;# 
  1944  040C                     	;# 
  1945  040D                     	;# 
  1946  040E                     	;# 
  1947  040F                     	;# 
  1948  0410                     	;# 
  1949  0411                     	;# 
  1950  0416                     	;# 
  1951  0416                     	;# 
  1952  0417                     	;# 
  1953  0418                     	;# 
  1954  0418                     	;# 
  1955  0419                     	;# 
  1956  041A                     	;# 
  1957  041A                     	;# 
  1958  041B                     	;# 
  1959  041C                     	;# 
  1960  041C                     	;# 
  1961  041D                     	;# 
  1962  041E                     	;# 
  1963  041F                     	;# 
  1964  048C                     	;# 
  1965  048C                     	;# 
  1966  048D                     	;# 
  1967  048E                     	;# 
  1968  048F                     	;# 
  1969  048F                     	;# 
  1970  0490                     	;# 
  1971  0491                     	;# 
  1972  0492                     	;# 
  1973  0492                     	;# 
  1974  0493                     	;# 
  1975  0494                     	;# 
  1976  0495                     	;# 
  1977  0495                     	;# 
  1978  0496                     	;# 
  1979  0497                     	;# 
  1980  0498                     	;# 
  1981  0499                     	;# 
  1982  049A                     	;# 
  1983  049B                     	;# 
  1984  049C                     	;# 
  1985  049D                     	;# 
  1986  050C                     	;# 
  1987  050C                     	;# 
  1988  050D                     	;# 
  1989  050E                     	;# 
  1990  050F                     	;# 
  1991  050F                     	;# 
  1992  0510                     	;# 
  1993  0511                     	;# 
  1994  0512                     	;# 
  1995  0512                     	;# 
  1996  0513                     	;# 
  1997  0514                     	;# 
  1998  0515                     	;# 
  1999  0515                     	;# 
  2000  0516                     	;# 
  2001  0517                     	;# 
  2002  0518                     	;# 
  2003  0519                     	;# 
  2004  051A                     	;# 
  2005  051B                     	;# 
  2006  051C                     	;# 
  2007  051D                     	;# 
  2008  058C                     	;# 
  2009  058C                     	;# 
  2010  058D                     	;# 
  2011  058E                     	;# 
  2012  058F                     	;# 
  2013  058F                     	;# 
  2014  0590                     	;# 
  2015  0591                     	;# 
  2016  0592                     	;# 
  2017  0593                     	;# 
  2018  060C                     	;# 
  2019  060D                     	;# 
  2020  060E                     	;# 
  2021  060F                     	;# 
  2022  0610                     	;# 
  2023  0611                     	;# 
  2024  0612                     	;# 
  2025  0613                     	;# 
  2026  0614                     	;# 
  2027  0616                     	;# 
  2028  0617                     	;# 
  2029  0618                     	;# 
  2030  0619                     	;# 
  2031  061A                     	;# 
  2032  061B                     	;# 
  2033  061C                     	;# 
  2034  061D                     	;# 
  2035  061E                     	;# 
  2036  068C                     	;# 
  2037  068D                     	;# 
  2038  068E                     	;# 
  2039  068F                     	;# 
  2040  0690                     	;# 
  2041  0691                     	;# 
  2042  0692                     	;# 
  2043  0693                     	;# 
  2044  0694                     	;# 
  2045  070C                     	;# 
  2046  070D                     	;# 
  2047  070E                     	;# 
  2048  070F                     	;# 
  2049  0710                     	;# 
  2050  0711                     	;# 
  2051  0712                     	;# 
  2052  0713                     	;# 
  2053  0714                     	;# 
  2054  0716                     	;# 
  2055  0717                     	;# 
  2056  0718                     	;# 
  2057  0719                     	;# 
  2058  071A                     	;# 
  2059  071B                     	;# 
  2060  071C                     	;# 
  2061  071D                     	;# 
  2062  071E                     	;# 
  2063  0796                     	;# 
  2064  0797                     	;# 
  2065  0798                     	;# 
  2066  0799                     	;# 
  2067  079A                     	;# 
  2068  079B                     	;# 
  2069  080C                     	;# 
  2070  080D                     	;# 
  2071  080E                     	;# 
  2072  080F                     	;# 
  2073  0810                     	;# 
  2074  0811                     	;# 
  2075  0812                     	;# 
  2076  0813                     	;# 
  2077  0814                     	;# 
  2078  081A                     	;# 
  2079  081B                     	;# 
  2080  081C                     	;# 
  2081  081D                     	;# 
  2082  081E                     	;# 
  2083  081F                     	;# 
  2084  088C                     	;# 
  2085  088D                     	;# 
  2086  088E                     	;# 
  2087  088F                     	;# 
  2088  0890                     	;# 
  2089  0891                     	;# 
  2090  0892                     	;# 
  2091  0893                     	;# 
  2092  0895                     	;# 
  2093  0896                     	;# 
  2094  0897                     	;# 
  2095  0898                     	;# 
  2096  0899                     	;# 
  2097  089A                     	;# 
  2098  089B                     	;# 
  2099  090C                     	;# 
  2100  090E                     	;# 
  2101  090F                     	;# 
  2102  091F                     	;# 
  2103  091F                     	;# 
  2104  098F                     	;# 
  2105  098F                     	;# 
  2106  0990                     	;# 
  2107  0991                     	;# 
  2108  0992                     	;# 
  2109  0993                     	;# 
  2110  0994                     	;# 
  2111  0995                     	;# 
  2112  0996                     	;# 
  2113  0997                     	;# 
  2114  0E0F                     	;# 
  2115  0E10                     	;# 
  2116  0E11                     	;# 
  2117  0E12                     	;# 
  2118  0E13                     	;# 
  2119  0E14                     	;# 
  2120  0E15                     	;# 
  2121  0E16                     	;# 
  2122  0E17                     	;# 
  2123  0E18                     	;# 
  2124  0E19                     	;# 
  2125  0E1A                     	;# 
  2126  0E1B                     	;# 
  2127  0E1C                     	;# 
  2128  0E1D                     	;# 
  2129  0E1E                     	;# 
  2130  0E1F                     	;# 
  2131  0E20                     	;# 
  2132  0E21                     	;# 
  2133  0E22                     	;# 
  2134  0E23                     	;# 
  2135  0E24                     	;# 
  2136  0E25                     	;# 
  2137  0E26                     	;# 
  2138  0E27                     	;# 
  2139  0E28                     	;# 
  2140  0E29                     	;# 
  2141  0E2A                     	;# 
  2142  0E2B                     	;# 
  2143  0E2C                     	;# 
  2144  0E2D                     	;# 
  2145  0E2E                     	;# 
  2146  0E2F                     	;# 
  2147  0E30                     	;# 
  2148  0E31                     	;# 
  2149  0E32                     	;# 
  2150  0E33                     	;# 
  2151  0E34                     	;# 
  2152  0E35                     	;# 
  2153  0E36                     	;# 
  2154  0E37                     	;# 
  2155  0E8F                     	;# 
  2156  0E90                     	;# 
  2157  0E91                     	;# 
  2158  0E92                     	;# 
  2159  0E93                     	;# 
  2160  0E94                     	;# 
  2161  0E95                     	;# 
  2162  0E96                     	;# 
  2163  0E97                     	;# 
  2164  0E9C                     	;# 
  2165  0E9D                     	;# 
  2166  0E9E                     	;# 
  2167  0EA1                     	;# 
  2168  0EA2                     	;# 
  2169  0EA3                     	;# 
  2170  0EA4                     	;# 
  2171  0EA5                     	;# 
  2172  0EA9                     	;# 
  2173  0EAA                     	;# 
  2174  0EAB                     	;# 
  2175  0EAC                     	;# 
  2176  0EB1                     	;# 
  2177  0EB2                     	;# 
  2178  0EB3                     	;# 
  2179  0EB8                     	;# 
  2180  0EB9                     	;# 
  2181  0EBA                     	;# 
  2182  0EBB                     	;# 
  2183  0EBC                     	;# 
  2184  0EBD                     	;# 
  2185  0EBE                     	;# 
  2186  0EC3                     	;# 
  2187  0EC5                     	;# 
  2188  0EC6                     	;# 
  2189  0EC7                     	;# 
  2190  0EC8                     	;# 
  2191  0EC9                     	;# 
  2192  0ECA                     	;# 
  2193  0ECB                     	;# 
  2194  0ECC                     	;# 
  2195  0F10                     	;# 
  2196  0F11                     	;# 
  2197  0F12                     	;# 
  2198  0F13                     	;# 
  2199  0F14                     	;# 
  2200  0F15                     	;# 
  2201  0F16                     	;# 
  2202  0F17                     	;# 
  2203  0F18                     	;# 
  2204  0F19                     	;# 
  2205  0F1A                     	;# 
  2206  0F1B                     	;# 
  2207  0F1C                     	;# 
  2208  0F1D                     	;# 
  2209  0F1E                     	;# 
  2210  0F1F                     	;# 
  2211  0F20                     	;# 
  2212  0F21                     	;# 
  2213  0F22                     	;# 
  2214  0F23                     	;# 
  2215  0F24                     	;# 
  2216  0F25                     	;# 
  2217  0F26                     	;# 
  2218  0F27                     	;# 
  2219  0F28                     	;# 
  2220  0F29                     	;# 
  2221  0F2A                     	;# 
  2222  0F2B                     	;# 
  2223  0F2C                     	;# 
  2224  0F2D                     	;# 
  2225  0F2E                     	;# 
  2226  0F2F                     	;# 
  2227  0F30                     	;# 
  2228  0F31                     	;# 
  2229  0F32                     	;# 
  2230  0F38                     	;# 
  2231  0F39                     	;# 
  2232  0F3A                     	;# 
  2233  0F3B                     	;# 
  2234  0F3C                     	;# 
  2235  0F3D                     	;# 
  2236  0F3E                     	;# 
  2237  0F3F                     	;# 
  2238  0F40                     	;# 
  2239  0F41                     	;# 
  2240  0F43                     	;# 
  2241  0F44                     	;# 
  2242  0F45                     	;# 
  2243  0F46                     	;# 
  2244  0F47                     	;# 
  2245  0F48                     	;# 
  2246  0F49                     	;# 
  2247  0F4A                     	;# 
  2248  0F4B                     	;# 
  2249  0F4C                     	;# 
  2250  0F4E                     	;# 
  2251  0F4F                     	;# 
  2252  0F50                     	;# 
  2253  0F51                     	;# 
  2254  0F52                     	;# 
  2255  0F53                     	;# 
  2256  0F54                     	;# 
  2257  0F55                     	;# 
  2258  0F56                     	;# 
  2259  0F57                     	;# 
  2260  0F59                     	;# 
  2261  0F5A                     	;# 
  2262  0F5B                     	;# 
  2263  0F5C                     	;# 
  2264  0F5D                     	;# 
  2265  0F61                     	;# 
  2266  0F62                     	;# 
  2267  0F64                     	;# 
  2268  0F65                     	;# 
  2269  0F66                     	;# 
  2270  0F67                     	;# 
  2271  0F68                     	;# 
  2272  0F69                     	;# 
  2273  0F6A                     	;# 
  2274  0F6B                     	;# 
  2275  0F6C                     	;# 
  2276  0F6D                     	;# 
  2277  0FE4                     	;# 
  2278  0FE5                     	;# 
  2279  0FE6                     	;# 
  2280  0FE7                     	;# 
  2281  0FE8                     	;# 
  2282  0FE9                     	;# 
  2283  0FEA                     	;# 
  2284  0FEB                     	;# 
  2285  0FED                     	;# 
  2286  0FEE                     	;# 
  2287  0FEF                     	;# 
  2288  0000                     	;# 
  2289  0001                     	;# 
  2290  0002                     	;# 
  2291  0003                     	;# 
  2292  0004                     	;# 
  2293  0005                     	;# 
  2294  0006                     	;# 
  2295  0007                     	;# 
  2296  0008                     	;# 
  2297  0009                     	;# 
  2298  000A                     	;# 
  2299  000B                     	;# 
  2300  000C                     	;# 
  2301  000D                     	;# 
  2302  000E                     	;# 
  2303  000F                     	;# 
  2304  0010                     	;# 
  2305  0011                     	;# 
  2306  0012                     	;# 
  2307  0013                     	;# 
  2308  0014                     	;# 
  2309  0015                     	;# 
  2310  0016                     	;# 
  2311  0017                     	;# 
  2312  0018                     	;# 
  2313  0019                     	;# 
  2314  001A                     	;# 
  2315  001C                     	;# 
  2316  001C                     	;# 
  2317  001D                     	;# 
  2318  001D                     	;# 
  2319  001E                     	;# 
  2320  001F                     	;# 
  2321  008C                     	;# 
  2322  008C                     	;# 
  2323  008D                     	;# 
  2324  008E                     	;# 
  2325  008E                     	;# 
  2326  008F                     	;# 
  2327  0090                     	;# 
  2328  0090                     	;# 
  2329  0091                     	;# 
  2330  0093                     	;# 
  2331  0094                     	;# 
  2332  0095                     	;# 
  2333  0096                     	;# 
  2334  0097                     	;# 
  2335  0098                     	;# 
  2336  0099                     	;# 
  2337  009A                     	;# 
  2338  009B                     	;# 
  2339  009C                     	;# 
  2340  009D                     	;# 
  2341  009E                     	;# 
  2342  010C                     	;# 
  2343  010D                     	;# 
  2344  010E                     	;# 
  2345  010E                     	;# 
  2346  010F                     	;# 
  2347  0110                     	;# 
  2348  0110                     	;# 
  2349  0111                     	;# 
  2350  0112                     	;# 
  2351  0112                     	;# 
  2352  0113                     	;# 
  2353  0114                     	;# 
  2354  0114                     	;# 
  2355  0115                     	;# 
  2356  0116                     	;# 
  2357  0116                     	;# 
  2358  0117                     	;# 
  2359  0119                     	;# 
  2360  0119                     	;# 
  2361  0119                     	;# 
  2362  011A                     	;# 
  2363  011A                     	;# 
  2364  011A                     	;# 
  2365  011B                     	;# 
  2366  011B                     	;# 
  2367  011B                     	;# 
  2368  011B                     	;# 
  2369  011B                     	;# 
  2370  011C                     	;# 
  2371  011C                     	;# 
  2372  011C                     	;# 
  2373  011D                     	;# 
  2374  011D                     	;# 
  2375  011D                     	;# 
  2376  011E                     	;# 
  2377  011E                     	;# 
  2378  011E                     	;# 
  2379  011F                     	;# 
  2380  011F                     	;# 
  2381  011F                     	;# 
  2382  011F                     	;# 
  2383  011F                     	;# 
  2384  018C                     	;# 
  2385  018D                     	;# 
  2386  018E                     	;# 
  2387  018F                     	;# 
  2388  0190                     	;# 
  2389  0191                     	;# 
  2390  0192                     	;# 
  2391  0196                     	;# 
  2392  0197                     	;# 
  2393  0198                     	;# 
  2394  0199                     	;# 
  2395  019A                     	;# 
  2396  019B                     	;# 
  2397  019C                     	;# 
  2398  020C                     	;# 
  2399  020C                     	;# 
  2400  020D                     	;# 
  2401  020E                     	;# 
  2402  020F                     	;# 
  2403  020F                     	;# 
  2404  0210                     	;# 
  2405  0210                     	;# 
  2406  0211                     	;# 
  2407  0211                     	;# 
  2408  0212                     	;# 
  2409  0212                     	;# 
  2410  0213                     	;# 
  2411  0214                     	;# 
  2412  0215                     	;# 
  2413  0215                     	;# 
  2414  0216                     	;# 
  2415  0216                     	;# 
  2416  0217                     	;# 
  2417  0217                     	;# 
  2418  0218                     	;# 
  2419  0218                     	;# 
  2420  0219                     	;# 
  2421  021A                     	;# 
  2422  021B                     	;# 
  2423  021B                     	;# 
  2424  021C                     	;# 
  2425  021C                     	;# 
  2426  021D                     	;# 
  2427  021D                     	;# 
  2428  021E                     	;# 
  2429  021F                     	;# 
  2430  028C                     	;# 
  2431  028C                     	;# 
  2432  028D                     	;# 
  2433  028D                     	;# 
  2434  028E                     	;# 
  2435  028F                     	;# 
  2436  0290                     	;# 
  2437  0290                     	;# 
  2438  0291                     	;# 
  2439  0292                     	;# 
  2440  0292                     	;# 
  2441  0293                     	;# 
  2442  0293                     	;# 
  2443  0294                     	;# 
  2444  0295                     	;# 
  2445  0296                     	;# 
  2446  0296                     	;# 
  2447  0297                     	;# 
  2448  0298                     	;# 
  2449  0298                     	;# 
  2450  0299                     	;# 
  2451  0299                     	;# 
  2452  029A                     	;# 
  2453  029B                     	;# 
  2454  029C                     	;# 
  2455  029C                     	;# 
  2456  029D                     	;# 
  2457  030C                     	;# 
  2458  030C                     	;# 
  2459  030D                     	;# 
  2460  030E                     	;# 
  2461  030F                     	;# 
  2462  0310                     	;# 
  2463  0310                     	;# 
  2464  0311                     	;# 
  2465  0312                     	;# 
  2466  0313                     	;# 
  2467  0314                     	;# 
  2468  0314                     	;# 
  2469  0315                     	;# 
  2470  0316                     	;# 
  2471  0317                     	;# 
  2472  0318                     	;# 
  2473  0318                     	;# 
  2474  0319                     	;# 
  2475  031A                     	;# 
  2476  031B                     	;# 
  2477  031C                     	;# 
  2478  031C                     	;# 
  2479  031D                     	;# 
  2480  031E                     	;# 
  2481  031F                     	;# 
  2482  038C                     	;# 
  2483  038C                     	;# 
  2484  038D                     	;# 
  2485  038E                     	;# 
  2486  0390                     	;# 
  2487  0390                     	;# 
  2488  0391                     	;# 
  2489  0392                     	;# 
  2490  040C                     	;# 
  2491  040D                     	;# 
  2492  040E                     	;# 
  2493  040F                     	;# 
  2494  0410                     	;# 
  2495  0411                     	;# 
  2496  0416                     	;# 
  2497  0416                     	;# 
  2498  0417                     	;# 
  2499  0418                     	;# 
  2500  0418                     	;# 
  2501  0419                     	;# 
  2502  041A                     	;# 
  2503  041A                     	;# 
  2504  041B                     	;# 
  2505  041C                     	;# 
  2506  041C                     	;# 
  2507  041D                     	;# 
  2508  041E                     	;# 
  2509  041F                     	;# 
  2510  048C                     	;# 
  2511  048C                     	;# 
  2512  048D                     	;# 
  2513  048E                     	;# 
  2514  048F                     	;# 
  2515  048F                     	;# 
  2516  0490                     	;# 
  2517  0491                     	;# 
  2518  0492                     	;# 
  2519  0492                     	;# 
  2520  0493                     	;# 
  2521  0494                     	;# 
  2522  0495                     	;# 
  2523  0495                     	;# 
  2524  0496                     	;# 
  2525  0497                     	;# 
  2526  0498                     	;# 
  2527  0499                     	;# 
  2528  049A                     	;# 
  2529  049B                     	;# 
  2530  049C                     	;# 
  2531  049D                     	;# 
  2532  050C                     	;# 
  2533  050C                     	;# 
  2534  050D                     	;# 
  2535  050E                     	;# 
  2536  050F                     	;# 
  2537  050F                     	;# 
  2538  0510                     	;# 
  2539  0511                     	;# 
  2540  0512                     	;# 
  2541  0512                     	;# 
  2542  0513                     	;# 
  2543  0514                     	;# 
  2544  0515                     	;# 
  2545  0515                     	;# 
  2546  0516                     	;# 
  2547  0517                     	;# 
  2548  0518                     	;# 
  2549  0519                     	;# 
  2550  051A                     	;# 
  2551  051B                     	;# 
  2552  051C                     	;# 
  2553  051D                     	;# 
  2554  058C                     	;# 
  2555  058C                     	;# 
  2556  058D                     	;# 
  2557  058E                     	;# 
  2558  058F                     	;# 
  2559  058F                     	;# 
  2560  0590                     	;# 
  2561  0591                     	;# 
  2562  0592                     	;# 
  2563  0593                     	;# 
  2564  060C                     	;# 
  2565  060D                     	;# 
  2566  060E                     	;# 
  2567  060F                     	;# 
  2568  0610                     	;# 
  2569  0611                     	;# 
  2570  0612                     	;# 
  2571  0613                     	;# 
  2572  0614                     	;# 
  2573  0616                     	;# 
  2574  0617                     	;# 
  2575  0618                     	;# 
  2576  0619                     	;# 
  2577  061A                     	;# 
  2578  061B                     	;# 
  2579  061C                     	;# 
  2580  061D                     	;# 
  2581  061E                     	;# 
  2582  068C                     	;# 
  2583  068D                     	;# 
  2584  068E                     	;# 
  2585  068F                     	;# 
  2586  0690                     	;# 
  2587  0691                     	;# 
  2588  0692                     	;# 
  2589  0693                     	;# 
  2590  0694                     	;# 
  2591  070C                     	;# 
  2592  070D                     	;# 
  2593  070E                     	;# 
  2594  070F                     	;# 
  2595  0710                     	;# 
  2596  0711                     	;# 
  2597  0712                     	;# 
  2598  0713                     	;# 
  2599  0714                     	;# 
  2600  0716                     	;# 
  2601  0717                     	;# 
  2602  0718                     	;# 
  2603  0719                     	;# 
  2604  071A                     	;# 
  2605  071B                     	;# 
  2606  071C                     	;# 
  2607  071D                     	;# 
  2608  071E                     	;# 
  2609  0796                     	;# 
  2610  0797                     	;# 
  2611  0798                     	;# 
  2612  0799                     	;# 
  2613  079A                     	;# 
  2614  079B                     	;# 
  2615  080C                     	;# 
  2616  080D                     	;# 
  2617  080E                     	;# 
  2618  080F                     	;# 
  2619  0810                     	;# 
  2620  0811                     	;# 
  2621  0812                     	;# 
  2622  0813                     	;# 
  2623  0814                     	;# 
  2624  081A                     	;# 
  2625  081B                     	;# 
  2626  081C                     	;# 
  2627  081D                     	;# 
  2628  081E                     	;# 
  2629  081F                     	;# 
  2630  088C                     	;# 
  2631  088D                     	;# 
  2632  088E                     	;# 
  2633  088F                     	;# 
  2634  0890                     	;# 
  2635  0891                     	;# 
  2636  0892                     	;# 
  2637  0893                     	;# 
  2638  0895                     	;# 
  2639  0896                     	;# 
  2640  0897                     	;# 
  2641  0898                     	;# 
  2642  0899                     	;# 
  2643  089A                     	;# 
  2644  089B                     	;# 
  2645  090C                     	;# 
  2646  090E                     	;# 
  2647  090F                     	;# 
  2648  091F                     	;# 
  2649  091F                     	;# 
  2650  098F                     	;# 
  2651  098F                     	;# 
  2652  0990                     	;# 
  2653  0991                     	;# 
  2654  0992                     	;# 
  2655  0993                     	;# 
  2656  0994                     	;# 
  2657  0995                     	;# 
  2658  0996                     	;# 
  2659  0997                     	;# 
  2660  0E0F                     	;# 
  2661  0E10                     	;# 
  2662  0E11                     	;# 
  2663  0E12                     	;# 
  2664  0E13                     	;# 
  2665  0E14                     	;# 
  2666  0E15                     	;# 
  2667  0E16                     	;# 
  2668  0E17                     	;# 
  2669  0E18                     	;# 
  2670  0E19                     	;# 
  2671  0E1A                     	;# 
  2672  0E1B                     	;# 
  2673  0E1C                     	;# 
  2674  0E1D                     	;# 
  2675  0E1E                     	;# 
  2676  0E1F                     	;# 
  2677  0E20                     	;# 
  2678  0E21                     	;# 
  2679  0E22                     	;# 
  2680  0E23                     	;# 
  2681  0E24                     	;# 
  2682  0E25                     	;# 
  2683  0E26                     	;# 
  2684  0E27                     	;# 
  2685  0E28                     	;# 
  2686  0E29                     	;# 
  2687  0E2A                     	;# 
  2688  0E2B                     	;# 
  2689  0E2C                     	;# 
  2690  0E2D                     	;# 
  2691  0E2E                     	;# 
  2692  0E2F                     	;# 
  2693  0E30                     	;# 
  2694  0E31                     	;# 
  2695  0E32                     	;# 
  2696  0E33                     	;# 
  2697  0E34                     	;# 
  2698  0E35                     	;# 
  2699  0E36                     	;# 
  2700  0E37                     	;# 
  2701  0E8F                     	;# 
  2702  0E90                     	;# 
  2703  0E91                     	;# 
  2704  0E92                     	;# 
  2705  0E93                     	;# 
  2706  0E94                     	;# 
  2707  0E95                     	;# 
  2708  0E96                     	;# 
  2709  0E97                     	;# 
  2710  0E9C                     	;# 
  2711  0E9D                     	;# 
  2712  0E9E                     	;# 
  2713  0EA1                     	;# 
  2714  0EA2                     	;# 
  2715  0EA3                     	;# 
  2716  0EA4                     	;# 
  2717  0EA5                     	;# 
  2718  0EA9                     	;# 
  2719  0EAA                     	;# 
  2720  0EAB                     	;# 
  2721  0EAC                     	;# 
  2722  0EB1                     	;# 
  2723  0EB2                     	;# 
  2724  0EB3                     	;# 
  2725  0EB8                     	;# 
  2726  0EB9                     	;# 
  2727  0EBA                     	;# 
  2728  0EBB                     	;# 
  2729  0EBC                     	;# 
  2730  0EBD                     	;# 
  2731  0EBE                     	;# 
  2732  0EC3                     	;# 
  2733  0EC5                     	;# 
  2734  0EC6                     	;# 
  2735  0EC7                     	;# 
  2736  0EC8                     	;# 
  2737  0EC9                     	;# 
  2738  0ECA                     	;# 
  2739  0ECB                     	;# 
  2740  0ECC                     	;# 
  2741  0F10                     	;# 
  2742  0F11                     	;# 
  2743  0F12                     	;# 
  2744  0F13                     	;# 
  2745  0F14                     	;# 
  2746  0F15                     	;# 
  2747  0F16                     	;# 
  2748  0F17                     	;# 
  2749  0F18                     	;# 
  2750  0F19                     	;# 
  2751  0F1A                     	;# 
  2752  0F1B                     	;# 
  2753  0F1C                     	;# 
  2754  0F1D                     	;# 
  2755  0F1E                     	;# 
  2756  0F1F                     	;# 
  2757  0F20                     	;# 
  2758  0F21                     	;# 
  2759  0F22                     	;# 
  2760  0F23                     	;# 
  2761  0F24                     	;# 
  2762  0F25                     	;# 
  2763  0F26                     	;# 
  2764  0F27                     	;# 
  2765  0F28                     	;# 
  2766  0F29                     	;# 
  2767  0F2A                     	;# 
  2768  0F2B                     	;# 
  2769  0F2C                     	;# 
  2770  0F2D                     	;# 
  2771  0F2E                     	;# 
  2772  0F2F                     	;# 
  2773  0F30                     	;# 
  2774  0F31                     	;# 
  2775  0F32                     	;# 
  2776  0F38                     	;# 
  2777  0F39                     	;# 
  2778  0F3A                     	;# 
  2779  0F3B                     	;# 
  2780  0F3C                     	;# 
  2781  0F3D                     	;# 
  2782  0F3E                     	;# 
  2783  0F3F                     	;# 
  2784  0F40                     	;# 
  2785  0F41                     	;# 
  2786  0F43                     	;# 
  2787  0F44                     	;# 
  2788  0F45                     	;# 
  2789  0F46                     	;# 
  2790  0F47                     	;# 
  2791  0F48                     	;# 
  2792  0F49                     	;# 
  2793  0F4A                     	;# 
  2794  0F4B                     	;# 
  2795  0F4C                     	;# 
  2796  0F4E                     	;# 
  2797  0F4F                     	;# 
  2798  0F50                     	;# 
  2799  0F51                     	;# 
  2800  0F52                     	;# 
  2801  0F53                     	;# 
  2802  0F54                     	;# 
  2803  0F55                     	;# 
  2804  0F56                     	;# 
  2805  0F57                     	;# 
  2806  0F59                     	;# 
  2807  0F5A                     	;# 
  2808  0F5B                     	;# 
  2809  0F5C                     	;# 
  2810  0F5D                     	;# 
  2811  0F61                     	;# 
  2812  0F62                     	;# 
  2813  0F64                     	;# 
  2814  0F65                     	;# 
  2815  0F66                     	;# 
  2816  0F67                     	;# 
  2817  0F68                     	;# 
  2818  0F69                     	;# 
  2819  0F6A                     	;# 
  2820  0F6B                     	;# 
  2821  0F6C                     	;# 
  2822  0F6D                     	;# 
  2823  0FE4                     	;# 
  2824  0FE5                     	;# 
  2825  0FE6                     	;# 
  2826  0FE7                     	;# 
  2827  0FE8                     	;# 
  2828  0FE9                     	;# 
  2829  0FEA                     	;# 
  2830  0FEB                     	;# 
  2831  0FED                     	;# 
  2832  0FEE                     	;# 
  2833  0FEF                     	;# 
  2834  0000                     	;# 
  2835  0001                     	;# 
  2836  0002                     	;# 
  2837  0003                     	;# 
  2838  0004                     	;# 
  2839  0005                     	;# 
  2840  0006                     	;# 
  2841  0007                     	;# 
  2842  0008                     	;# 
  2843  0009                     	;# 
  2844  000A                     	;# 
  2845  000B                     	;# 
  2846  000C                     	;# 
  2847  000D                     	;# 
  2848  000E                     	;# 
  2849  000F                     	;# 
  2850  0010                     	;# 
  2851  0011                     	;# 
  2852  0012                     	;# 
  2853  0013                     	;# 
  2854  0014                     	;# 
  2855  0015                     	;# 
  2856  0016                     	;# 
  2857  0017                     	;# 
  2858  0018                     	;# 
  2859  0019                     	;# 
  2860  001A                     	;# 
  2861  001C                     	;# 
  2862  001C                     	;# 
  2863  001D                     	;# 
  2864  001D                     	;# 
  2865  001E                     	;# 
  2866  001F                     	;# 
  2867  008C                     	;# 
  2868  008C                     	;# 
  2869  008D                     	;# 
  2870  008E                     	;# 
  2871  008E                     	;# 
  2872  008F                     	;# 
  2873  0090                     	;# 
  2874  0090                     	;# 
  2875  0091                     	;# 
  2876  0093                     	;# 
  2877  0094                     	;# 
  2878  0095                     	;# 
  2879  0096                     	;# 
  2880  0097                     	;# 
  2881  0098                     	;# 
  2882  0099                     	;# 
  2883  009A                     	;# 
  2884  009B                     	;# 
  2885  009C                     	;# 
  2886  009D                     	;# 
  2887  009E                     	;# 
  2888  010C                     	;# 
  2889  010D                     	;# 
  2890  010E                     	;# 
  2891  010E                     	;# 
  2892  010F                     	;# 
  2893  0110                     	;# 
  2894  0110                     	;# 
  2895  0111                     	;# 
  2896  0112                     	;# 
  2897  0112                     	;# 
  2898  0113                     	;# 
  2899  0114                     	;# 
  2900  0114                     	;# 
  2901  0115                     	;# 
  2902  0116                     	;# 
  2903  0116                     	;# 
  2904  0117                     	;# 
  2905  0119                     	;# 
  2906  0119                     	;# 
  2907  0119                     	;# 
  2908  011A                     	;# 
  2909  011A                     	;# 
  2910  011A                     	;# 
  2911  011B                     	;# 
  2912  011B                     	;# 
  2913  011B                     	;# 
  2914  011B                     	;# 
  2915  011B                     	;# 
  2916  011C                     	;# 
  2917  011C                     	;# 
  2918  011C                     	;# 
  2919  011D                     	;# 
  2920  011D                     	;# 
  2921  011D                     	;# 
  2922  011E                     	;# 
  2923  011E                     	;# 
  2924  011E                     	;# 
  2925  011F                     	;# 
  2926  011F                     	;# 
  2927  011F                     	;# 
  2928  011F                     	;# 
  2929  011F                     	;# 
  2930  018C                     	;# 
  2931  018D                     	;# 
  2932  018E                     	;# 
  2933  018F                     	;# 
  2934  0190                     	;# 
  2935  0191                     	;# 
  2936  0192                     	;# 
  2937  0196                     	;# 
  2938  0197                     	;# 
  2939  0198                     	;# 
  2940  0199                     	;# 
  2941  019A                     	;# 
  2942  019B                     	;# 
  2943  019C                     	;# 
  2944  020C                     	;# 
  2945  020C                     	;# 
  2946  020D                     	;# 
  2947  020E                     	;# 
  2948  020F                     	;# 
  2949  020F                     	;# 
  2950  0210                     	;# 
  2951  0210                     	;# 
  2952  0211                     	;# 
  2953  0211                     	;# 
  2954  0212                     	;# 
  2955  0212                     	;# 
  2956  0213                     	;# 
  2957  0214                     	;# 
  2958  0215                     	;# 
  2959  0215                     	;# 
  2960  0216                     	;# 
  2961  0216                     	;# 
  2962  0217                     	;# 
  2963  0217                     	;# 
  2964  0218                     	;# 
  2965  0218                     	;# 
  2966  0219                     	;# 
  2967  021A                     	;# 
  2968  021B                     	;# 
  2969  021B                     	;# 
  2970  021C                     	;# 
  2971  021C                     	;# 
  2972  021D                     	;# 
  2973  021D                     	;# 
  2974  021E                     	;# 
  2975  021F                     	;# 
  2976  028C                     	;# 
  2977  028C                     	;# 
  2978  028D                     	;# 
  2979  028D                     	;# 
  2980  028E                     	;# 
  2981  028F                     	;# 
  2982  0290                     	;# 
  2983  0290                     	;# 
  2984  0291                     	;# 
  2985  0292                     	;# 
  2986  0292                     	;# 
  2987  0293                     	;# 
  2988  0293                     	;# 
  2989  0294                     	;# 
  2990  0295                     	;# 
  2991  0296                     	;# 
  2992  0296                     	;# 
  2993  0297                     	;# 
  2994  0298                     	;# 
  2995  0298                     	;# 
  2996  0299                     	;# 
  2997  0299                     	;# 
  2998  029A                     	;# 
  2999  029B                     	;# 
  3000  029C                     	;# 
  3001  029C                     	;# 
  3002  029D                     	;# 
  3003  030C                     	;# 
  3004  030C                     	;# 
  3005  030D                     	;# 
  3006  030E                     	;# 
  3007  030F                     	;# 
  3008  0310                     	;# 
  3009  0310                     	;# 
  3010  0311                     	;# 
  3011  0312                     	;# 
  3012  0313                     	;# 
  3013  0314                     	;# 
  3014  0314                     	;# 
  3015  0315                     	;# 
  3016  0316                     	;# 
  3017  0317                     	;# 
  3018  0318                     	;# 
  3019  0318                     	;# 
  3020  0319                     	;# 
  3021  031A                     	;# 
  3022  031B                     	;# 
  3023  031C                     	;# 
  3024  031C                     	;# 
  3025  031D                     	;# 
  3026  031E                     	;# 
  3027  031F                     	;# 
  3028  038C                     	;# 
  3029  038C                     	;# 
  3030  038D                     	;# 
  3031  038E                     	;# 
  3032  0390                     	;# 
  3033  0390                     	;# 
  3034  0391                     	;# 
  3035  0392                     	;# 
  3036  040C                     	;# 
  3037  040D                     	;# 
  3038  040E                     	;# 
  3039  040F                     	;# 
  3040  0410                     	;# 
  3041  0411                     	;# 
  3042  0416                     	;# 
  3043  0416                     	;# 
  3044  0417                     	;# 
  3045  0418                     	;# 
  3046  0418                     	;# 
  3047  0419                     	;# 
  3048  041A                     	;# 
  3049  041A                     	;# 
  3050  041B                     	;# 
  3051  041C                     	;# 
  3052  041C                     	;# 
  3053  041D                     	;# 
  3054  041E                     	;# 
  3055  041F                     	;# 
  3056  048C                     	;# 
  3057  048C                     	;# 
  3058  048D                     	;# 
  3059  048E                     	;# 
  3060  048F                     	;# 
  3061  048F                     	;# 
  3062  0490                     	;# 
  3063  0491                     	;# 
  3064  0492                     	;# 
  3065  0492                     	;# 
  3066  0493                     	;# 
  3067  0494                     	;# 
  3068  0495                     	;# 
  3069  0495                     	;# 
  3070  0496                     	;# 
  3071  0497                     	;# 
  3072  0498                     	;# 
  3073  0499                     	;# 
  3074  049A                     	;# 
  3075  049B                     	;# 
  3076  049C                     	;# 
  3077  049D                     	;# 
  3078  050C                     	;# 
  3079  050C                     	;# 
  3080  050D                     	;# 
  3081  050E                     	;# 
  3082  050F                     	;# 
  3083  050F                     	;# 
  3084  0510                     	;# 
  3085  0511                     	;# 
  3086  0512                     	;# 
  3087  0512                     	;# 
  3088  0513                     	;# 
  3089  0514                     	;# 
  3090  0515                     	;# 
  3091  0515                     	;# 
  3092  0516                     	;# 
  3093  0517                     	;# 
  3094  0518                     	;# 
  3095  0519                     	;# 
  3096  051A                     	;# 
  3097  051B                     	;# 
  3098  051C                     	;# 
  3099  051D                     	;# 
  3100  058C                     	;# 
  3101  058C                     	;# 
  3102  058D                     	;# 
  3103  058E                     	;# 
  3104  058F                     	;# 
  3105  058F                     	;# 
  3106  0590                     	;# 
  3107  0591                     	;# 
  3108  0592                     	;# 
  3109  0593                     	;# 
  3110  060C                     	;# 
  3111  060D                     	;# 
  3112  060E                     	;# 
  3113  060F                     	;# 
  3114  0610                     	;# 
  3115  0611                     	;# 
  3116  0612                     	;# 
  3117  0613                     	;# 
  3118  0614                     	;# 
  3119  0616                     	;# 
  3120  0617                     	;# 
  3121  0618                     	;# 
  3122  0619                     	;# 
  3123  061A                     	;# 
  3124  061B                     	;# 
  3125  061C                     	;# 
  3126  061D                     	;# 
  3127  061E                     	;# 
  3128  068C                     	;# 
  3129  068D                     	;# 
  3130  068E                     	;# 
  3131  068F                     	;# 
  3132  0690                     	;# 
  3133  0691                     	;# 
  3134  0692                     	;# 
  3135  0693                     	;# 
  3136  0694                     	;# 
  3137  070C                     	;# 
  3138  070D                     	;# 
  3139  070E                     	;# 
  3140  070F                     	;# 
  3141  0710                     	;# 
  3142  0711                     	;# 
  3143  0712                     	;# 
  3144  0713                     	;# 
  3145  0714                     	;# 
  3146  0716                     	;# 
  3147  0717                     	;# 
  3148  0718                     	;# 
  3149  0719                     	;# 
  3150  071A                     	;# 
  3151  071B                     	;# 
  3152  071C                     	;# 
  3153  071D                     	;# 
  3154  071E                     	;# 
  3155  0796                     	;# 
  3156  0797                     	;# 
  3157  0798                     	;# 
  3158  0799                     	;# 
  3159  079A                     	;# 
  3160  079B                     	;# 
  3161  080C                     	;# 
  3162  080D                     	;# 
  3163  080E                     	;# 
  3164  080F                     	;# 
  3165  0810                     	;# 
  3166  0811                     	;# 
  3167  0812                     	;# 
  3168  0813                     	;# 
  3169  0814                     	;# 
  3170  081A                     	;# 
  3171  081B                     	;# 
  3172  081C                     	;# 
  3173  081D                     	;# 
  3174  081E                     	;# 
  3175  081F                     	;# 
  3176  088C                     	;# 
  3177  088D                     	;# 
  3178  088E                     	;# 
  3179  088F                     	;# 
  3180  0890                     	;# 
  3181  0891                     	;# 
  3182  0892                     	;# 
  3183  0893                     	;# 
  3184  0895                     	;# 
  3185  0896                     	;# 
  3186  0897                     	;# 
  3187  0898                     	;# 
  3188  0899                     	;# 
  3189  089A                     	;# 
  3190  089B                     	;# 
  3191  090C                     	;# 
  3192  090E                     	;# 
  3193  090F                     	;# 
  3194  091F                     	;# 
  3195  091F                     	;# 
  3196  098F                     	;# 
  3197  098F                     	;# 
  3198  0990                     	;# 
  3199  0991                     	;# 
  3200  0992                     	;# 
  3201  0993                     	;# 
  3202  0994                     	;# 
  3203  0995                     	;# 
  3204  0996                     	;# 
  3205  0997                     	;# 
  3206  0E0F                     	;# 
  3207  0E10                     	;# 
  3208  0E11                     	;# 
  3209  0E12                     	;# 
  3210  0E13                     	;# 
  3211  0E14                     	;# 
  3212  0E15                     	;# 
  3213  0E16                     	;# 
  3214  0E17                     	;# 
  3215  0E18                     	;# 
  3216  0E19                     	;# 
  3217  0E1A                     	;# 
  3218  0E1B                     	;# 
  3219  0E1C                     	;# 
  3220  0E1D                     	;# 
  3221  0E1E                     	;# 
  3222  0E1F                     	;# 
  3223  0E20                     	;# 
  3224  0E21                     	;# 
  3225  0E22                     	;# 
  3226  0E23                     	;# 
  3227  0E24                     	;# 
  3228  0E25                     	;# 
  3229  0E26                     	;# 
  3230  0E27                     	;# 
  3231  0E28                     	;# 
  3232  0E29                     	;# 
  3233  0E2A                     	;# 
  3234  0E2B                     	;# 
  3235  0E2C                     	;# 
  3236  0E2D                     	;# 
  3237  0E2E                     	;# 
  3238  0E2F                     	;# 
  3239  0E30                     	;# 
  3240  0E31                     	;# 
  3241  0E32                     	;# 
  3242  0E33                     	;# 
  3243  0E34                     	;# 
  3244  0E35                     	;# 
  3245  0E36                     	;# 
  3246  0E37                     	;# 
  3247  0E8F                     	;# 
  3248  0E90                     	;# 
  3249  0E91                     	;# 
  3250  0E92                     	;# 
  3251  0E93                     	;# 
  3252  0E94                     	;# 
  3253  0E95                     	;# 
  3254  0E96                     	;# 
  3255  0E97                     	;# 
  3256  0E9C                     	;# 
  3257  0E9D                     	;# 
  3258  0E9E                     	;# 
  3259  0EA1                     	;# 
  3260  0EA2                     	;# 
  3261  0EA3                     	;# 
  3262  0EA4                     	;# 
  3263  0EA5                     	;# 
  3264  0EA9                     	;# 
  3265  0EAA                     	;# 
  3266  0EAB                     	;# 
  3267  0EAC                     	;# 
  3268  0EB1                     	;# 
  3269  0EB2                     	;# 
  3270  0EB3                     	;# 
  3271  0EB8                     	;# 
  3272  0EB9                     	;# 
  3273  0EBA                     	;# 
  3274  0EBB                     	;# 
  3275  0EBC                     	;# 
  3276  0EBD                     	;# 
  3277  0EBE                     	;# 
  3278  0EC3                     	;# 
  3279  0EC5                     	;# 
  3280  0EC6                     	;# 
  3281  0EC7                     	;# 
  3282  0EC8                     	;# 
  3283  0EC9                     	;# 
  3284  0ECA                     	;# 
  3285  0ECB                     	;# 
  3286  0ECC                     	;# 
  3287  0F10                     	;# 
  3288  0F11                     	;# 
  3289  0F12                     	;# 
  3290  0F13                     	;# 
  3291  0F14                     	;# 
  3292  0F15                     	;# 
  3293  0F16                     	;# 
  3294  0F17                     	;# 
  3295  0F18                     	;# 
  3296  0F19                     	;# 
  3297  0F1A                     	;# 
  3298  0F1B                     	;# 
  3299  0F1C                     	;# 
  3300  0F1D                     	;# 
  3301  0F1E                     	;# 
  3302  0F1F                     	;# 
  3303  0F20                     	;# 
  3304  0F21                     	;# 
  3305  0F22                     	;# 
  3306  0F23                     	;# 
  3307  0F24                     	;# 
  3308  0F25                     	;# 
  3309  0F26                     	;# 
  3310  0F27                     	;# 
  3311  0F28                     	;# 
  3312  0F29                     	;# 
  3313  0F2A                     	;# 
  3314  0F2B                     	;# 
  3315  0F2C                     	;# 
  3316  0F2D                     	;# 
  3317  0F2E                     	;# 
  3318  0F2F                     	;# 
  3319  0F30                     	;# 
  3320  0F31                     	;# 
  3321  0F32                     	;# 
  3322  0F38                     	;# 
  3323  0F39                     	;# 
  3324  0F3A                     	;# 
  3325  0F3B                     	;# 
  3326  0F3C                     	;# 
  3327  0F3D                     	;# 
  3328  0F3E                     	;# 
  3329  0F3F                     	;# 
  3330  0F40                     	;# 
  3331  0F41                     	;# 
  3332  0F43                     	;# 
  3333  0F44                     	;# 
  3334  0F45                     	;# 
  3335  0F46                     	;# 
  3336  0F47                     	;# 
  3337  0F48                     	;# 
  3338  0F49                     	;# 
  3339  0F4A                     	;# 
  3340  0F4B                     	;# 
  3341  0F4C                     	;# 
  3342  0F4E                     	;# 
  3343  0F4F                     	;# 
  3344  0F50                     	;# 
  3345  0F51                     	;# 
  3346  0F52                     	;# 
  3347  0F53                     	;# 
  3348  0F54                     	;# 
  3349  0F55                     	;# 
  3350  0F56                     	;# 
  3351  0F57                     	;# 
  3352  0F59                     	;# 
  3353  0F5A                     	;# 
  3354  0F5B                     	;# 
  3355  0F5C                     	;# 
  3356  0F5D                     	;# 
  3357  0F61                     	;# 
  3358  0F62                     	;# 
  3359  0F64                     	;# 
  3360  0F65                     	;# 
  3361  0F66                     	;# 
  3362  0F67                     	;# 
  3363  0F68                     	;# 
  3364  0F69                     	;# 
  3365  0F6A                     	;# 
  3366  0F6B                     	;# 
  3367  0F6C                     	;# 
  3368  0F6D                     	;# 
  3369  0FE4                     	;# 
  3370  0FE5                     	;# 
  3371  0FE6                     	;# 
  3372  0FE7                     	;# 
  3373  0FE8                     	;# 
  3374  0FE9                     	;# 
  3375  0FEA                     	;# 
  3376  0FEB                     	;# 
  3377  0FED                     	;# 
  3378  0FEE                     	;# 
  3379  0FEF                     	;# 
  3380  0000                     	;# 
  3381  0001                     	;# 
  3382  0002                     	;# 
  3383  0003                     	;# 
  3384  0004                     	;# 
  3385  0005                     	;# 
  3386  0006                     	;# 
  3387  0007                     	;# 
  3388  0008                     	;# 
  3389  0009                     	;# 
  3390  000A                     	;# 
  3391  000B                     	;# 
  3392  000C                     	;# 
  3393  000D                     	;# 
  3394  000E                     	;# 
  3395  000F                     	;# 
  3396  0010                     	;# 
  3397  0011                     	;# 
  3398  0012                     	;# 
  3399  0013                     	;# 
  3400  0014                     	;# 
  3401  0015                     	;# 
  3402  0016                     	;# 
  3403  0017                     	;# 
  3404  0018                     	;# 
  3405  0019                     	;# 
  3406  001A                     	;# 
  3407  001C                     	;# 
  3408  001C                     	;# 
  3409  001D                     	;# 
  3410  001D                     	;# 
  3411  001E                     	;# 
  3412  001F                     	;# 
  3413  008C                     	;# 
  3414  008C                     	;# 
  3415  008D                     	;# 
  3416  008E                     	;# 
  3417  008E                     	;# 
  3418  008F                     	;# 
  3419  0090                     	;# 
  3420  0090                     	;# 
  3421  0091                     	;# 
  3422  0093                     	;# 
  3423  0094                     	;# 
  3424  0095                     	;# 
  3425  0096                     	;# 
  3426  0097                     	;# 
  3427  0098                     	;# 
  3428  0099                     	;# 
  3429  009A                     	;# 
  3430  009B                     	;# 
  3431  009C                     	;# 
  3432  009D                     	;# 
  3433  009E                     	;# 
  3434  010C                     	;# 
  3435  010D                     	;# 
  3436  010E                     	;# 
  3437  010E                     	;# 
  3438  010F                     	;# 
  3439  0110                     	;# 
  3440  0110                     	;# 
  3441  0111                     	;# 
  3442  0112                     	;# 
  3443  0112                     	;# 
  3444  0113                     	;# 
  3445  0114                     	;# 
  3446  0114                     	;# 
  3447  0115                     	;# 
  3448  0116                     	;# 
  3449  0116                     	;# 
  3450  0117                     	;# 
  3451  0119                     	;# 
  3452  0119                     	;# 
  3453  0119                     	;# 
  3454  011A                     	;# 
  3455  011A                     	;# 
  3456  011A                     	;# 
  3457  011B                     	;# 
  3458  011B                     	;# 
  3459  011B                     	;# 
  3460  011B                     	;# 
  3461  011B                     	;# 
  3462  011C                     	;# 
  3463  011C                     	;# 
  3464  011C                     	;# 
  3465  011D                     	;# 
  3466  011D                     	;# 
  3467  011D                     	;# 
  3468  011E                     	;# 
  3469  011E                     	;# 
  3470  011E                     	;# 
  3471  011F                     	;# 
  3472  011F                     	;# 
  3473  011F                     	;# 
  3474  011F                     	;# 
  3475  011F                     	;# 
  3476  018C                     	;# 
  3477  018D                     	;# 
  3478  018E                     	;# 
  3479  018F                     	;# 
  3480  0190                     	;# 
  3481  0191                     	;# 
  3482  0192                     	;# 
  3483  0196                     	;# 
  3484  0197                     	;# 
  3485  0198                     	;# 
  3486  0199                     	;# 
  3487  019A                     	;# 
  3488  019B                     	;# 
  3489  019C                     	;# 
  3490  020C                     	;# 
  3491  020C                     	;# 
  3492  020D                     	;# 
  3493  020E                     	;# 
  3494  020F                     	;# 
  3495  020F                     	;# 
  3496  0210                     	;# 
  3497  0210                     	;# 
  3498  0211                     	;# 
  3499  0211                     	;# 
  3500  0212                     	;# 
  3501  0212                     	;# 
  3502  0213                     	;# 
  3503  0214                     	;# 
  3504  0215                     	;# 
  3505  0215                     	;# 
  3506  0216                     	;# 
  3507  0216                     	;# 
  3508  0217                     	;# 
  3509  0217                     	;# 
  3510  0218                     	;# 
  3511  0218                     	;# 
  3512  0219                     	;# 
  3513  021A                     	;# 
  3514  021B                     	;# 
  3515  021B                     	;# 
  3516  021C                     	;# 
  3517  021C                     	;# 
  3518  021D                     	;# 
  3519  021D                     	;# 
  3520  021E                     	;# 
  3521  021F                     	;# 
  3522  028C                     	;# 
  3523  028C                     	;# 
  3524  028D                     	;# 
  3525  028D                     	;# 
  3526  028E                     	;# 
  3527  028F                     	;# 
  3528  0290                     	;# 
  3529  0290                     	;# 
  3530  0291                     	;# 
  3531  0292                     	;# 
  3532  0292                     	;# 
  3533  0293                     	;# 
  3534  0293                     	;# 
  3535  0294                     	;# 
  3536  0295                     	;# 
  3537  0296                     	;# 
  3538  0296                     	;# 
  3539  0297                     	;# 
  3540  0298                     	;# 
  3541  0298                     	;# 
  3542  0299                     	;# 
  3543  0299                     	;# 
  3544  029A                     	;# 
  3545  029B                     	;# 
  3546  029C                     	;# 
  3547  029C                     	;# 
  3548  029D                     	;# 
  3549  030C                     	;# 
  3550  030C                     	;# 
  3551  030D                     	;# 
  3552  030E                     	;# 
  3553  030F                     	;# 
  3554  0310                     	;# 
  3555  0310                     	;# 
  3556  0311                     	;# 
  3557  0312                     	;# 
  3558  0313                     	;# 
  3559  0314                     	;# 
  3560  0314                     	;# 
  3561  0315                     	;# 
  3562  0316                     	;# 
  3563  0317                     	;# 
  3564  0318                     	;# 
  3565  0318                     	;# 
  3566  0319                     	;# 
  3567  031A                     	;# 
  3568  031B                     	;# 
  3569  031C                     	;# 
  3570  031C                     	;# 
  3571  031D                     	;# 
  3572  031E                     	;# 
  3573  031F                     	;# 
  3574  038C                     	;# 
  3575  038C                     	;# 
  3576  038D                     	;# 
  3577  038E                     	;# 
  3578  0390                     	;# 
  3579  0390                     	;# 
  3580  0391                     	;# 
  3581  0392                     	;# 
  3582  040C                     	;# 
  3583  040D                     	;# 
  3584  040E                     	;# 
  3585  040F                     	;# 
  3586  0410                     	;# 
  3587  0411                     	;# 
  3588  0416                     	;# 
  3589  0416                     	;# 
  3590  0417                     	;# 
  3591  0418                     	;# 
  3592  0418                     	;# 
  3593  0419                     	;# 
  3594  041A                     	;# 
  3595  041A                     	;# 
  3596  041B                     	;# 
  3597  041C                     	;# 
  3598  041C                     	;# 
  3599  041D                     	;# 
  3600  041E                     	;# 
  3601  041F                     	;# 
  3602  048C                     	;# 
  3603  048C                     	;# 
  3604  048D                     	;# 
  3605  048E                     	;# 
  3606  048F                     	;# 
  3607  048F                     	;# 
  3608  0490                     	;# 
  3609  0491                     	;# 
  3610  0492                     	;# 
  3611  0492                     	;# 
  3612  0493                     	;# 
  3613  0494                     	;# 
  3614  0495                     	;# 
  3615  0495                     	;# 
  3616  0496                     	;# 
  3617  0497                     	;# 
  3618  0498                     	;# 
  3619  0499                     	;# 
  3620  049A                     	;# 
  3621  049B                     	;# 
  3622  049C                     	;# 
  3623  049D                     	;# 
  3624  050C                     	;# 
  3625  050C                     	;# 
  3626  050D                     	;# 
  3627  050E                     	;# 
  3628  050F                     	;# 
  3629  050F                     	;# 
  3630  0510                     	;# 
  3631  0511                     	;# 
  3632  0512                     	;# 
  3633  0512                     	;# 
  3634  0513                     	;# 
  3635  0514                     	;# 
  3636  0515                     	;# 
  3637  0515                     	;# 
  3638  0516                     	;# 
  3639  0517                     	;# 
  3640  0518                     	;# 
  3641  0519                     	;# 
  3642  051A                     	;# 
  3643  051B                     	;# 
  3644  051C                     	;# 
  3645  051D                     	;# 
  3646  058C                     	;# 
  3647  058C                     	;# 
  3648  058D                     	;# 
  3649  058E                     	;# 
  3650  058F                     	;# 
  3651  058F                     	;# 
  3652  0590                     	;# 
  3653  0591                     	;# 
  3654  0592                     	;# 
  3655  0593                     	;# 
  3656  060C                     	;# 
  3657  060D                     	;# 
  3658  060E                     	;# 
  3659  060F                     	;# 
  3660  0610                     	;# 
  3661  0611                     	;# 
  3662  0612                     	;# 
  3663  0613                     	;# 
  3664  0614                     	;# 
  3665  0616                     	;# 
  3666  0617                     	;# 
  3667  0618                     	;# 
  3668  0619                     	;# 
  3669  061A                     	;# 
  3670  061B                     	;# 
  3671  061C                     	;# 
  3672  061D                     	;# 
  3673  061E                     	;# 
  3674  068C                     	;# 
  3675  068D                     	;# 
  3676  068E                     	;# 
  3677  068F                     	;# 
  3678  0690                     	;# 
  3679  0691                     	;# 
  3680  0692                     	;# 
  3681  0693                     	;# 
  3682  0694                     	;# 
  3683  070C                     	;# 
  3684  070D                     	;# 
  3685  070E                     	;# 
  3686  070F                     	;# 
  3687  0710                     	;# 
  3688  0711                     	;# 
  3689  0712                     	;# 
  3690  0713                     	;# 
  3691  0714                     	;# 
  3692  0716                     	;# 
  3693  0717                     	;# 
  3694  0718                     	;# 
  3695  0719                     	;# 
  3696  071A                     	;# 
  3697  071B                     	;# 
  3698  071C                     	;# 
  3699  071D                     	;# 
  3700  071E                     	;# 
  3701  0796                     	;# 
  3702  0797                     	;# 
  3703  0798                     	;# 
  3704  0799                     	;# 
  3705  079A                     	;# 
  3706  079B                     	;# 
  3707  080C                     	;# 
  3708  080D                     	;# 
  3709  080E                     	;# 
  3710  080F                     	;# 
  3711  0810                     	;# 
  3712  0811                     	;# 
  3713  0812                     	;# 
  3714  0813                     	;# 
  3715  0814                     	;# 
  3716  081A                     	;# 
  3717  081B                     	;# 
  3718  081C                     	;# 
  3719  081D                     	;# 
  3720  081E                     	;# 
  3721  081F                     	;# 
  3722  088C                     	;# 
  3723  088D                     	;# 
  3724  088E                     	;# 
  3725  088F                     	;# 
  3726  0890                     	;# 
  3727  0891                     	;# 
  3728  0892                     	;# 
  3729  0893                     	;# 
  3730  0895                     	;# 
  3731  0896                     	;# 
  3732  0897                     	;# 
  3733  0898                     	;# 
  3734  0899                     	;# 
  3735  089A                     	;# 
  3736  089B                     	;# 
  3737  090C                     	;# 
  3738  090E                     	;# 
  3739  090F                     	;# 
  3740  091F                     	;# 
  3741  091F                     	;# 
  3742  098F                     	;# 
  3743  098F                     	;# 
  3744  0990                     	;# 
  3745  0991                     	;# 
  3746  0992                     	;# 
  3747  0993                     	;# 
  3748  0994                     	;# 
  3749  0995                     	;# 
  3750  0996                     	;# 
  3751  0997                     	;# 
  3752  0E0F                     	;# 
  3753  0E10                     	;# 
  3754  0E11                     	;# 
  3755  0E12                     	;# 
  3756  0E13                     	;# 
  3757  0E14                     	;# 
  3758  0E15                     	;# 
  3759  0E16                     	;# 
  3760  0E17                     	;# 
  3761  0E18                     	;# 
  3762  0E19                     	;# 
  3763  0E1A                     	;# 
  3764  0E1B                     	;# 
  3765  0E1C                     	;# 
  3766  0E1D                     	;# 
  3767  0E1E                     	;# 
  3768  0E1F                     	;# 
  3769  0E20                     	;# 
  3770  0E21                     	;# 
  3771  0E22                     	;# 
  3772  0E23                     	;# 
  3773  0E24                     	;# 
  3774  0E25                     	;# 
  3775  0E26                     	;# 
  3776  0E27                     	;# 
  3777  0E28                     	;# 
  3778  0E29                     	;# 
  3779  0E2A                     	;# 
  3780  0E2B                     	;# 
  3781  0E2C                     	;# 
  3782  0E2D                     	;# 
  3783  0E2E                     	;# 
  3784  0E2F                     	;# 
  3785  0E30                     	;# 
  3786  0E31                     	;# 
  3787  0E32                     	;# 
  3788  0E33                     	;# 
  3789  0E34                     	;# 
  3790  0E35                     	;# 
  3791  0E36                     	;# 
  3792  0E37                     	;# 
  3793  0E8F                     	;# 
  3794  0E90                     	;# 
  3795  0E91                     	;# 
  3796  0E92                     	;# 
  3797  0E93                     	;# 
  3798  0E94                     	;# 
  3799  0E95                     	;# 
  3800  0E96                     	;# 
  3801  0E97                     	;# 
  3802  0E9C                     	;# 
  3803  0E9D                     	;# 
  3804  0E9E                     	;# 
  3805  0EA1                     	;# 
  3806  0EA2                     	;# 
  3807  0EA3                     	;# 
  3808  0EA4                     	;# 
  3809  0EA5                     	;# 
  3810  0EA9                     	;# 
  3811  0EAA                     	;# 
  3812  0EAB                     	;# 
  3813  0EAC                     	;# 
  3814  0EB1                     	;# 
  3815  0EB2                     	;# 
  3816  0EB3                     	;# 
  3817  0EB8                     	;# 
  3818  0EB9                     	;# 
  3819  0EBA                     	;# 
  3820  0EBB                     	;# 
  3821  0EBC                     	;# 
  3822  0EBD                     	;# 
  3823  0EBE                     	;# 
  3824  0EC3                     	;# 
  3825  0EC5                     	;# 
  3826  0EC6                     	;# 
  3827  0EC7                     	;# 
  3828  0EC8                     	;# 
  3829  0EC9                     	;# 
  3830  0ECA                     	;# 
  3831  0ECB                     	;# 
  3832  0ECC                     	;# 
  3833  0F10                     	;# 
  3834  0F11                     	;# 
  3835  0F12                     	;# 
  3836  0F13                     	;# 
  3837  0F14                     	;# 
  3838  0F15                     	;# 
  3839  0F16                     	;# 
  3840  0F17                     	;# 
  3841  0F18                     	;# 
  3842  0F19                     	;# 
  3843  0F1A                     	;# 
  3844  0F1B                     	;# 
  3845  0F1C                     	;# 
  3846  0F1D                     	;# 
  3847  0F1E                     	;# 
  3848  0F1F                     	;# 
  3849  0F20                     	;# 
  3850  0F21                     	;# 
  3851  0F22                     	;# 
  3852  0F23                     	;# 
  3853  0F24                     	;# 
  3854  0F25                     	;# 
  3855  0F26                     	;# 
  3856  0F27                     	;# 
  3857  0F28                     	;# 
  3858  0F29                     	;# 
  3859  0F2A                     	;# 
  3860  0F2B                     	;# 
  3861  0F2C                     	;# 
  3862  0F2D                     	;# 
  3863  0F2E                     	;# 
  3864  0F2F                     	;# 
  3865  0F30                     	;# 
  3866  0F31                     	;# 
  3867  0F32                     	;# 
  3868  0F38                     	;# 
  3869  0F39                     	;# 
  3870  0F3A                     	;# 
  3871  0F3B                     	;# 
  3872  0F3C                     	;# 
  3873  0F3D                     	;# 
  3874  0F3E                     	;# 
  3875  0F3F                     	;# 
  3876  0F40                     	;# 
  3877  0F41                     	;# 
  3878  0F43                     	;# 
  3879  0F44                     	;# 
  3880  0F45                     	;# 
  3881  0F46                     	;# 
  3882  0F47                     	;# 
  3883  0F48                     	;# 
  3884  0F49                     	;# 
  3885  0F4A                     	;# 
  3886  0F4B                     	;# 
  3887  0F4C                     	;# 
  3888  0F4E                     	;# 
  3889  0F4F                     	;# 
  3890  0F50                     	;# 
  3891  0F51                     	;# 
  3892  0F52                     	;# 
  3893  0F53                     	;# 
  3894  0F54                     	;# 
  3895  0F55                     	;# 
  3896  0F56                     	;# 
  3897  0F57                     	;# 
  3898  0F59                     	;# 
  3899  0F5A                     	;# 
  3900  0F5B                     	;# 
  3901  0F5C                     	;# 
  3902  0F5D                     	;# 
  3903  0F61                     	;# 
  3904  0F62                     	;# 
  3905  0F64                     	;# 
  3906  0F65                     	;# 
  3907  0F66                     	;# 
  3908  0F67                     	;# 
  3909  0F68                     	;# 
  3910  0F69                     	;# 
  3911  0F6A                     	;# 
  3912  0F6B                     	;# 
  3913  0F6C                     	;# 
  3914  0F6D                     	;# 
  3915  0FE4                     	;# 
  3916  0FE5                     	;# 
  3917  0FE6                     	;# 
  3918  0FE7                     	;# 
  3919  0FE8                     	;# 
  3920  0FE9                     	;# 
  3921  0FEA                     	;# 
  3922  0FEB                     	;# 
  3923  0FED                     	;# 
  3924  0FEE                     	;# 
  3925  0FEF                     	;# 
  3926  0000                     	;# 
  3927  0001                     	;# 
  3928  0002                     	;# 
  3929  0003                     	;# 
  3930  0004                     	;# 
  3931  0005                     	;# 
  3932  0006                     	;# 
  3933  0007                     	;# 
  3934  0008                     	;# 
  3935  0009                     	;# 
  3936  000A                     	;# 
  3937  000B                     	;# 
  3938  000C                     	;# 
  3939  000D                     	;# 
  3940  000E                     	;# 
  3941  000F                     	;# 
  3942  0010                     	;# 
  3943  0011                     	;# 
  3944  0012                     	;# 
  3945  0013                     	;# 
  3946  0014                     	;# 
  3947  0015                     	;# 
  3948  0016                     	;# 
  3949  0017                     	;# 
  3950  0018                     	;# 
  3951  0019                     	;# 
  3952  001A                     	;# 
  3953  001C                     	;# 
  3954  001C                     	;# 
  3955  001D                     	;# 
  3956  001D                     	;# 
  3957  001E                     	;# 
  3958  001F                     	;# 
  3959  008C                     	;# 
  3960  008C                     	;# 
  3961  008D                     	;# 
  3962  008E                     	;# 
  3963  008E                     	;# 
  3964  008F                     	;# 
  3965  0090                     	;# 
  3966  0090                     	;# 
  3967  0091                     	;# 
  3968  0093                     	;# 
  3969  0094                     	;# 
  3970  0095                     	;# 
  3971  0096                     	;# 
  3972  0097                     	;# 
  3973  0098                     	;# 
  3974  0099                     	;# 
  3975  009A                     	;# 
  3976  009B                     	;# 
  3977  009C                     	;# 
  3978  009D                     	;# 
  3979  009E                     	;# 
  3980  010C                     	;# 
  3981  010D                     	;# 
  3982  010E                     	;# 
  3983  010E                     	;# 
  3984  010F                     	;# 
  3985  0110                     	;# 
  3986  0110                     	;# 
  3987  0111                     	;# 
  3988  0112                     	;# 
  3989  0112                     	;# 
  3990  0113                     	;# 
  3991  0114                     	;# 
  3992  0114                     	;# 
  3993  0115                     	;# 
  3994  0116                     	;# 
  3995  0116                     	;# 
  3996  0117                     	;# 
  3997  0119                     	;# 
  3998  0119                     	;# 
  3999  0119                     	;# 
  4000  011A                     	;# 
  4001  011A                     	;# 
  4002  011A                     	;# 
  4003  011B                     	;# 
  4004  011B                     	;# 
  4005  011B                     	;# 
  4006  011B                     	;# 
  4007  011B                     	;# 
  4008  011C                     	;# 
  4009  011C                     	;# 
  4010  011C                     	;# 
  4011  011D                     	;# 
  4012  011D                     	;# 
  4013  011D                     	;# 
  4014  011E                     	;# 
  4015  011E                     	;# 
  4016  011E                     	;# 
  4017  011F                     	;# 
  4018  011F                     	;# 
  4019  011F                     	;# 
  4020  011F                     	;# 
  4021  011F                     	;# 
  4022  018C                     	;# 
  4023  018D                     	;# 
  4024  018E                     	;# 
  4025  018F                     	;# 
  4026  0190                     	;# 
  4027  0191                     	;# 
  4028  0192                     	;# 
  4029  0196                     	;# 
  4030  0197                     	;# 
  4031  0198                     	;# 
  4032  0199                     	;# 
  4033  019A                     	;# 
  4034  019B                     	;# 
  4035  019C                     	;# 
  4036  020C                     	;# 
  4037  020C                     	;# 
  4038  020D                     	;# 
  4039  020E                     	;# 
  4040  020F                     	;# 
  4041  020F                     	;# 
  4042  0210                     	;# 
  4043  0210                     	;# 
  4044  0211                     	;# 
  4045  0211                     	;# 
  4046  0212                     	;# 
  4047  0212                     	;# 
  4048  0213                     	;# 
  4049  0214                     	;# 
  4050  0215                     	;# 
  4051  0215                     	;# 
  4052  0216                     	;# 
  4053  0216                     	;# 
  4054  0217                     	;# 
  4055  0217                     	;# 
  4056  0218                     	;# 
  4057  0218                     	;# 
  4058  0219                     	;# 
  4059  021A                     	;# 
  4060  021B                     	;# 
  4061  021B                     	;# 
  4062  021C                     	;# 
  4063  021C                     	;# 
  4064  021D                     	;# 
  4065  021D                     	;# 
  4066  021E                     	;# 
  4067  021F                     	;# 
  4068  028C                     	;# 
  4069  028C                     	;# 
  4070  028D                     	;# 
  4071  028D                     	;# 
  4072  028E                     	;# 
  4073  028F                     	;# 
  4074  0290                     	;# 
  4075  0290                     	;# 
  4076  0291                     	;# 
  4077  0292                     	;# 
  4078  0292                     	;# 
  4079  0293                     	;# 
  4080  0293                     	;# 
  4081  0294                     	;# 
  4082  0295                     	;# 
  4083  0296                     	;# 
  4084  0296                     	;# 
  4085  0297                     	;# 
  4086  0298                     	;# 
  4087  0298                     	;# 
  4088  0299                     	;# 
  4089  0299                     	;# 
  4090  029A                     	;# 
  4091  029B                     	;# 
  4092  029C                     	;# 
  4093  029C                     	;# 
  4094  029D                     	;# 
  4095  030C                     	;# 
  4096  030C                     	;# 
  4097  030D                     	;# 
  4098  030E                     	;# 
  4099  030F                     	;# 
  4100  0310                     	;# 
  4101  0310                     	;# 
  4102  0311                     	;# 
  4103  0312                     	;# 
  4104  0313                     	;# 
  4105  0314                     	;# 
  4106  0314                     	;# 
  4107  0315                     	;# 
  4108  0316                     	;# 
  4109  0317                     	;# 
  4110  0318                     	;# 
  4111  0318                     	;# 
  4112  0319                     	;# 
  4113  031A                     	;# 
  4114  031B                     	;# 
  4115  031C                     	;# 
  4116  031C                     	;# 
  4117  031D                     	;# 
  4118  031E                     	;# 
  4119  031F                     	;# 
  4120  038C                     	;# 
  4121  038C                     	;# 
  4122  038D                     	;# 
  4123  038E                     	;# 
  4124  0390                     	;# 
  4125  0390                     	;# 
  4126  0391                     	;# 
  4127  0392                     	;# 
  4128  040C                     	;# 
  4129  040D                     	;# 
  4130  040E                     	;# 
  4131  040F                     	;# 
  4132  0410                     	;# 
  4133  0411                     	;# 
  4134  0416                     	;# 
  4135  0416                     	;# 
  4136  0417                     	;# 
  4137  0418                     	;# 
  4138  0418                     	;# 
  4139  0419                     	;# 
  4140  041A                     	;# 
  4141  041A                     	;# 
  4142  041B                     	;# 
  4143  041C                     	;# 
  4144  041C                     	;# 
  4145  041D                     	;# 
  4146  041E                     	;# 
  4147  041F                     	;# 
  4148  048C                     	;# 
  4149  048C                     	;# 
  4150  048D                     	;# 
  4151  048E                     	;# 
  4152  048F                     	;# 
  4153  048F                     	;# 
  4154  0490                     	;# 
  4155  0491                     	;# 
  4156  0492                     	;# 
  4157  0492                     	;# 
  4158  0493                     	;# 
  4159  0494                     	;# 
  4160  0495                     	;# 
  4161  0495                     	;# 
  4162  0496                     	;# 
  4163  0497                     	;# 
  4164  0498                     	;# 
  4165  0499                     	;# 
  4166  049A                     	;# 
  4167  049B                     	;# 
  4168  049C                     	;# 
  4169  049D                     	;# 
  4170  050C                     	;# 
  4171  050C                     	;# 
  4172  050D                     	;# 
  4173  050E                     	;# 
  4174  050F                     	;# 
  4175  050F                     	;# 
  4176  0510                     	;# 
  4177  0511                     	;# 
  4178  0512                     	;# 
  4179  0512                     	;# 
  4180  0513                     	;# 
  4181  0514                     	;# 
  4182  0515                     	;# 
  4183  0515                     	;# 
  4184  0516                     	;# 
  4185  0517                     	;# 
  4186  0518                     	;# 
  4187  0519                     	;# 
  4188  051A                     	;# 
  4189  051B                     	;# 
  4190  051C                     	;# 
  4191  051D                     	;# 
  4192  058C                     	;# 
  4193  058C                     	;# 
  4194  058D                     	;# 
  4195  058E                     	;# 
  4196  058F                     	;# 
  4197  058F                     	;# 
  4198  0590                     	;# 
  4199  0591                     	;# 
  4200  0592                     	;# 
  4201  0593                     	;# 
  4202  060C                     	;# 
  4203  060D                     	;# 
  4204  060E                     	;# 
  4205  060F                     	;# 
  4206  0610                     	;# 
  4207  0611                     	;# 
  4208  0612                     	;# 
  4209  0613                     	;# 
  4210  0614                     	;# 
  4211  0616                     	;# 
  4212  0617                     	;# 
  4213  0618                     	;# 
  4214  0619                     	;# 
  4215  061A                     	;# 
  4216  061B                     	;# 
  4217  061C                     	;# 
  4218  061D                     	;# 
  4219  061E                     	;# 
  4220  068C                     	;# 
  4221  068D                     	;# 
  4222  068E                     	;# 
  4223  068F                     	;# 
  4224  0690                     	;# 
  4225  0691                     	;# 
  4226  0692                     	;# 
  4227  0693                     	;# 
  4228  0694                     	;# 
  4229  070C                     	;# 
  4230  070D                     	;# 
  4231  070E                     	;# 
  4232  070F                     	;# 
  4233  0710                     	;# 
  4234  0711                     	;# 
  4235  0712                     	;# 
  4236  0713                     	;# 
  4237  0714                     	;# 
  4238  0716                     	;# 
  4239  0717                     	;# 
  4240  0718                     	;# 
  4241  0719                     	;# 
  4242  071A                     	;# 
  4243  071B                     	;# 
  4244  071C                     	;# 
  4245  071D                     	;# 
  4246  071E                     	;# 
  4247  0796                     	;# 
  4248  0797                     	;# 
  4249  0798                     	;# 
  4250  0799                     	;# 
  4251  079A                     	;# 
  4252  079B                     	;# 
  4253  080C                     	;# 
  4254  080D                     	;# 
  4255  080E                     	;# 
  4256  080F                     	;# 
  4257  0810                     	;# 
  4258  0811                     	;# 
  4259  0812                     	;# 
  4260  0813                     	;# 
  4261  0814                     	;# 
  4262  081A                     	;# 
  4263  081B                     	;# 
  4264  081C                     	;# 
  4265  081D                     	;# 
  4266  081E                     	;# 
  4267  081F                     	;# 
  4268  088C                     	;# 
  4269  088D                     	;# 
  4270  088E                     	;# 
  4271  088F                     	;# 
  4272  0890                     	;# 
  4273  0891                     	;# 
  4274  0892                     	;# 
  4275  0893                     	;# 
  4276  0895                     	;# 
  4277  0896                     	;# 
  4278  0897                     	;# 
  4279  0898                     	;# 
  4280  0899                     	;# 
  4281  089A                     	;# 
  4282  089B                     	;# 
  4283  090C                     	;# 
  4284  090E                     	;# 
  4285  090F                     	;# 
  4286  091F                     	;# 
  4287  091F                     	;# 
  4288  098F                     	;# 
  4289  098F                     	;# 
  4290  0990                     	;# 
  4291  0991                     	;# 
  4292  0992                     	;# 
  4293  0993                     	;# 
  4294  0994                     	;# 
  4295  0995                     	;# 
  4296  0996                     	;# 
  4297  0997                     	;# 
  4298  0E0F                     	;# 
  4299  0E10                     	;# 
  4300  0E11                     	;# 
  4301  0E12                     	;# 
  4302  0E13                     	;# 
  4303  0E14                     	;# 
  4304  0E15                     	;# 
  4305  0E16                     	;# 
  4306  0E17                     	;# 
  4307  0E18                     	;# 
  4308  0E19                     	;# 
  4309  0E1A                     	;# 
  4310  0E1B                     	;# 
  4311  0E1C                     	;# 
  4312  0E1D                     	;# 
  4313  0E1E                     	;# 
  4314  0E1F                     	;# 
  4315  0E20                     	;# 
  4316  0E21                     	;# 
  4317  0E22                     	;# 
  4318  0E23                     	;# 
  4319  0E24                     	;# 
  4320  0E25                     	;# 
  4321  0E26                     	;# 
  4322  0E27                     	;# 
  4323  0E28                     	;# 
  4324  0E29                     	;# 
  4325  0E2A                     	;# 
  4326  0E2B                     	;# 
  4327  0E2C                     	;# 
  4328  0E2D                     	;# 
  4329  0E2E                     	;# 
  4330  0E2F                     	;# 
  4331  0E30                     	;# 
  4332  0E31                     	;# 
  4333  0E32                     	;# 
  4334  0E33                     	;# 
  4335  0E34                     	;# 
  4336  0E35                     	;# 
  4337  0E36                     	;# 
  4338  0E37                     	;# 
  4339  0E8F                     	;# 
  4340  0E90                     	;# 
  4341  0E91                     	;# 
  4342  0E92                     	;# 
  4343  0E93                     	;# 
  4344  0E94                     	;# 
  4345  0E95                     	;# 
  4346  0E96                     	;# 
  4347  0E97                     	;# 
  4348  0E9C                     	;# 
  4349  0E9D                     	;# 
  4350  0E9E                     	;# 
  4351  0EA1                     	;# 
  4352  0EA2                     	;# 
  4353  0EA3                     	;# 
  4354  0EA4                     	;# 
  4355  0EA5                     	;# 
  4356  0EA9                     	;# 
  4357  0EAA                     	;# 
  4358  0EAB                     	;# 
  4359  0EAC                     	;# 
  4360  0EB1                     	;# 
  4361  0EB2                     	;# 
  4362  0EB3                     	;# 
  4363  0EB8                     	;# 
  4364  0EB9                     	;# 
  4365  0EBA                     	;# 
  4366  0EBB                     	;# 
  4367  0EBC                     	;# 
  4368  0EBD                     	;# 
  4369  0EBE                     	;# 
  4370  0EC3                     	;# 
  4371  0EC5                     	;# 
  4372  0EC6                     	;# 
  4373  0EC7                     	;# 
  4374  0EC8                     	;# 
  4375  0EC9                     	;# 
  4376  0ECA                     	;# 
  4377  0ECB                     	;# 
  4378  0ECC                     	;# 
  4379  0F10                     	;# 
  4380  0F11                     	;# 
  4381  0F12                     	;# 
  4382  0F13                     	;# 
  4383  0F14                     	;# 
  4384  0F15                     	;# 
  4385  0F16                     	;# 
  4386  0F17                     	;# 
  4387  0F18                     	;# 
  4388  0F19                     	;# 
  4389  0F1A                     	;# 
  4390  0F1B                     	;# 
  4391  0F1C                     	;# 
  4392  0F1D                     	;# 
  4393  0F1E                     	;# 
  4394  0F1F                     	;# 
  4395  0F20                     	;# 
  4396  0F21                     	;# 
  4397  0F22                     	;# 
  4398  0F23                     	;# 
  4399  0F24                     	;# 
  4400  0F25                     	;# 
  4401  0F26                     	;# 
  4402  0F27                     	;# 
  4403  0F28                     	;# 
  4404  0F29                     	;# 
  4405  0F2A                     	;# 
  4406  0F2B                     	;# 
  4407  0F2C                     	;# 
  4408  0F2D                     	;# 
  4409  0F2E                     	;# 
  4410  0F2F                     	;# 
  4411  0F30                     	;# 
  4412  0F31                     	;# 
  4413  0F32                     	;# 
  4414  0F38                     	;# 
  4415  0F39                     	;# 
  4416  0F3A                     	;# 
  4417  0F3B                     	;# 
  4418  0F3C                     	;# 
  4419  0F3D                     	;# 
  4420  0F3E                     	;# 
  4421  0F3F                     	;# 
  4422  0F40                     	;# 
  4423  0F41                     	;# 
  4424  0F43                     	;# 
  4425  0F44                     	;# 
  4426  0F45                     	;# 
  4427  0F46                     	;# 
  4428  0F47                     	;# 
  4429  0F48                     	;# 
  4430  0F49                     	;# 
  4431  0F4A                     	;# 
  4432  0F4B                     	;# 
  4433  0F4C                     	;# 
  4434  0F4E                     	;# 
  4435  0F4F                     	;# 
  4436  0F50                     	;# 
  4437  0F51                     	;# 
  4438  0F52                     	;# 
  4439  0F53                     	;# 
  4440  0F54                     	;# 
  4441  0F55                     	;# 
  4442  0F56                     	;# 
  4443  0F57                     	;# 
  4444  0F59                     	;# 
  4445  0F5A                     	;# 
  4446  0F5B                     	;# 
  4447  0F5C                     	;# 
  4448  0F5D                     	;# 
  4449  0F61                     	;# 
  4450  0F62                     	;# 
  4451  0F64                     	;# 
  4452  0F65                     	;# 
  4453  0F66                     	;# 
  4454  0F67                     	;# 
  4455  0F68                     	;# 
  4456  0F69                     	;# 
  4457  0F6A                     	;# 
  4458  0F6B                     	;# 
  4459  0F6C                     	;# 
  4460  0F6D                     	;# 
  4461  0FE4                     	;# 
  4462  0FE5                     	;# 
  4463  0FE6                     	;# 
  4464  0FE7                     	;# 
  4465  0FE8                     	;# 
  4466  0FE9                     	;# 
  4467  0FEA                     	;# 
  4468  0FEB                     	;# 
  4469  0FED                     	;# 
  4470  0FEE                     	;# 
  4471  0FEF                     	;# 
  4472  0000                     	;# 
  4473  0001                     	;# 
  4474  0002                     	;# 
  4475  0003                     	;# 
  4476  0004                     	;# 
  4477  0005                     	;# 
  4478  0006                     	;# 
  4479  0007                     	;# 
  4480  0008                     	;# 
  4481  0009                     	;# 
  4482  000A                     	;# 
  4483  000B                     	;# 
  4484  000C                     	;# 
  4485  000D                     	;# 
  4486  000E                     	;# 
  4487  000F                     	;# 
  4488  0010                     	;# 
  4489  0011                     	;# 
  4490  0012                     	;# 
  4491  0013                     	;# 
  4492  0014                     	;# 
  4493  0015                     	;# 
  4494  0016                     	;# 
  4495  0017                     	;# 
  4496  0018                     	;# 
  4497  0019                     	;# 
  4498  001A                     	;# 
  4499  001C                     	;# 
  4500  001C                     	;# 
  4501  001D                     	;# 
  4502  001D                     	;# 
  4503  001E                     	;# 
  4504  001F                     	;# 
  4505  008C                     	;# 
  4506  008C                     	;# 
  4507  008D                     	;# 
  4508  008E                     	;# 
  4509  008E                     	;# 
  4510  008F                     	;# 
  4511  0090                     	;# 
  4512  0090                     	;# 
  4513  0091                     	;# 
  4514  0093                     	;# 
  4515  0094                     	;# 
  4516  0095                     	;# 
  4517  0096                     	;# 
  4518  0097                     	;# 
  4519  0098                     	;# 
  4520  0099                     	;# 
  4521  009A                     	;# 
  4522  009B                     	;# 
  4523  009C                     	;# 
  4524  009D                     	;# 
  4525  009E                     	;# 
  4526  010C                     	;# 
  4527  010D                     	;# 
  4528  010E                     	;# 
  4529  010E                     	;# 
  4530  010F                     	;# 
  4531  0110                     	;# 
  4532  0110                     	;# 
  4533  0111                     	;# 
  4534  0112                     	;# 
  4535  0112                     	;# 
  4536  0113                     	;# 
  4537  0114                     	;# 
  4538  0114                     	;# 
  4539  0115                     	;# 
  4540  0116                     	;# 
  4541  0116                     	;# 
  4542  0117                     	;# 
  4543  0119                     	;# 
  4544  0119                     	;# 
  4545  0119                     	;# 
  4546  011A                     	;# 
  4547  011A                     	;# 
  4548  011A                     	;# 
  4549  011B                     	;# 
  4550  011B                     	;# 
  4551  011B                     	;# 
  4552  011B                     	;# 
  4553  011B                     	;# 
  4554  011C                     	;# 
  4555  011C                     	;# 
  4556  011C                     	;# 
  4557  011D                     	;# 
  4558  011D                     	;# 
  4559  011D                     	;# 
  4560  011E                     	;# 
  4561  011E                     	;# 
  4562  011E                     	;# 
  4563  011F                     	;# 
  4564  011F                     	;# 
  4565  011F                     	;# 
  4566  011F                     	;# 
  4567  011F                     	;# 
  4568  018C                     	;# 
  4569  018D                     	;# 
  4570  018E                     	;# 
  4571  018F                     	;# 
  4572  0190                     	;# 
  4573  0191                     	;# 
  4574  0192                     	;# 
  4575  0196                     	;# 
  4576  0197                     	;# 
  4577  0198                     	;# 
  4578  0199                     	;# 
  4579  019A                     	;# 
  4580  019B                     	;# 
  4581  019C                     	;# 
  4582  020C                     	;# 
  4583  020C                     	;# 
  4584  020D                     	;# 
  4585  020E                     	;# 
  4586  020F                     	;# 
  4587  020F                     	;# 
  4588  0210                     	;# 
  4589  0210                     	;# 
  4590  0211                     	;# 
  4591  0211                     	;# 
  4592  0212                     	;# 
  4593  0212                     	;# 
  4594  0213                     	;# 
  4595  0214                     	;# 
  4596  0215                     	;# 
  4597  0215                     	;# 
  4598  0216                     	;# 
  4599  0216                     	;# 
  4600  0217                     	;# 
  4601  0217                     	;# 
  4602  0218                     	;# 
  4603  0218                     	;# 
  4604  0219                     	;# 
  4605  021A                     	;# 
  4606  021B                     	;# 
  4607  021B                     	;# 
  4608  021C                     	;# 
  4609  021C                     	;# 
  4610  021D                     	;# 
  4611  021D                     	;# 
  4612  021E                     	;# 
  4613  021F                     	;# 
  4614  028C                     	;# 
  4615  028C                     	;# 
  4616  028D                     	;# 
  4617  028D                     	;# 
  4618  028E                     	;# 
  4619  028F                     	;# 
  4620  0290                     	;# 
  4621  0290                     	;# 
  4622  0291                     	;# 
  4623  0292                     	;# 
  4624  0292                     	;# 
  4625  0293                     	;# 
  4626  0293                     	;# 
  4627  0294                     	;# 
  4628  0295                     	;# 
  4629  0296                     	;# 
  4630  0296                     	;# 
  4631  0297                     	;# 
  4632  0298                     	;# 
  4633  0298                     	;# 
  4634  0299                     	;# 
  4635  0299                     	;# 
  4636  029A                     	;# 
  4637  029B                     	;# 
  4638  029C                     	;# 
  4639  029C                     	;# 
  4640  029D                     	;# 
  4641  030C                     	;# 
  4642  030C                     	;# 
  4643  030D                     	;# 
  4644  030E                     	;# 
  4645  030F                     	;# 
  4646  0310                     	;# 
  4647  0310                     	;# 
  4648  0311                     	;# 
  4649  0312                     	;# 
  4650  0313                     	;# 
  4651  0314                     	;# 
  4652  0314                     	;# 
  4653  0315                     	;# 
  4654  0316                     	;# 
  4655  0317                     	;# 
  4656  0318                     	;# 
  4657  0318                     	;# 
  4658  0319                     	;# 
  4659  031A                     	;# 
  4660  031B                     	;# 
  4661  031C                     	;# 
  4662  031C                     	;# 
  4663  031D                     	;# 
  4664  031E                     	;# 
  4665  031F                     	;# 
  4666  038C                     	;# 
  4667  038C                     	;# 
  4668  038D                     	;# 
  4669  038E                     	;# 
  4670  0390                     	;# 
  4671  0390                     	;# 
  4672  0391                     	;# 
  4673  0392                     	;# 
  4674  040C                     	;# 
  4675  040D                     	;# 
  4676  040E                     	;# 
  4677  040F                     	;# 
  4678  0410                     	;# 
  4679  0411                     	;# 
  4680  0416                     	;# 
  4681  0416                     	;# 
  4682  0417                     	;# 
  4683  0418                     	;# 
  4684  0418                     	;# 
  4685  0419                     	;# 
  4686  041A                     	;# 
  4687  041A                     	;# 
  4688  041B                     	;# 
  4689  041C                     	;# 
  4690  041C                     	;# 
  4691  041D                     	;# 
  4692  041E                     	;# 
  4693  041F                     	;# 
  4694  048C                     	;# 
  4695  048C                     	;# 
  4696  048D                     	;# 
  4697  048E                     	;# 
  4698  048F                     	;# 
  4699  048F                     	;# 
  4700  0490                     	;# 
  4701  0491                     	;# 
  4702  0492                     	;# 
  4703  0492                     	;# 
  4704  0493                     	;# 
  4705  0494                     	;# 
  4706  0495                     	;# 
  4707  0495                     	;# 
  4708  0496                     	;# 
  4709  0497                     	;# 
  4710  0498                     	;# 
  4711  0499                     	;# 
  4712  049A                     	;# 
  4713  049B                     	;# 
  4714  049C                     	;# 
  4715  049D                     	;# 
  4716  050C                     	;# 
  4717  050C                     	;# 
  4718  050D                     	;# 
  4719  050E                     	;# 
  4720  050F                     	;# 
  4721  050F                     	;# 
  4722  0510                     	;# 
  4723  0511                     	;# 
  4724  0512                     	;# 
  4725  0512                     	;# 
  4726  0513                     	;# 
  4727  0514                     	;# 
  4728  0515                     	;# 
  4729  0515                     	;# 
  4730  0516                     	;# 
  4731  0517                     	;# 
  4732  0518                     	;# 
  4733  0519                     	;# 
  4734  051A                     	;# 
  4735  051B                     	;# 
  4736  051C                     	;# 
  4737  051D                     	;# 
  4738  058C                     	;# 
  4739  058C                     	;# 
  4740  058D                     	;# 
  4741  058E                     	;# 
  4742  058F                     	;# 
  4743  058F                     	;# 
  4744  0590                     	;# 
  4745  0591                     	;# 
  4746  0592                     	;# 
  4747  0593                     	;# 
  4748  060C                     	;# 
  4749  060D                     	;# 
  4750  060E                     	;# 
  4751  060F                     	;# 
  4752  0610                     	;# 
  4753  0611                     	;# 
  4754  0612                     	;# 
  4755  0613                     	;# 
  4756  0614                     	;# 
  4757  0616                     	;# 
  4758  0617                     	;# 
  4759  0618                     	;# 
  4760  0619                     	;# 
  4761  061A                     	;# 
  4762  061B                     	;# 
  4763  061C                     	;# 
  4764  061D                     	;# 
  4765  061E                     	;# 
  4766  068C                     	;# 
  4767  068D                     	;# 
  4768  068E                     	;# 
  4769  068F                     	;# 
  4770  0690                     	;# 
  4771  0691                     	;# 
  4772  0692                     	;# 
  4773  0693                     	;# 
  4774  0694                     	;# 
  4775  070C                     	;# 
  4776  070D                     	;# 
  4777  070E                     	;# 
  4778  070F                     	;# 
  4779  0710                     	;# 
  4780  0711                     	;# 
  4781  0712                     	;# 
  4782  0713                     	;# 
  4783  0714                     	;# 
  4784  0716                     	;# 
  4785  0717                     	;# 
  4786  0718                     	;# 
  4787  0719                     	;# 
  4788  071A                     	;# 
  4789  071B                     	;# 
  4790  071C                     	;# 
  4791  071D                     	;# 
  4792  071E                     	;# 
  4793  0796                     	;# 
  4794  0797                     	;# 
  4795  0798                     	;# 
  4796  0799                     	;# 
  4797  079A                     	;# 
  4798  079B                     	;# 
  4799  080C                     	;# 
  4800  080D                     	;# 
  4801  080E                     	;# 
  4802  080F                     	;# 
  4803  0810                     	;# 
  4804  0811                     	;# 
  4805  0812                     	;# 
  4806  0813                     	;# 
  4807  0814                     	;# 
  4808  081A                     	;# 
  4809  081B                     	;# 
  4810  081C                     	;# 
  4811  081D                     	;# 
  4812  081E                     	;# 
  4813  081F                     	;# 
  4814  088C                     	;# 
  4815  088D                     	;# 
  4816  088E                     	;# 
  4817  088F                     	;# 
  4818  0890                     	;# 
  4819  0891                     	;# 
  4820  0892                     	;# 
  4821  0893                     	;# 
  4822  0895                     	;# 
  4823  0896                     	;# 
  4824  0897                     	;# 
  4825  0898                     	;# 
  4826  0899                     	;# 
  4827  089A                     	;# 
  4828  089B                     	;# 
  4829  090C                     	;# 
  4830  090E                     	;# 
  4831  090F                     	;# 
  4832  091F                     	;# 
  4833  091F                     	;# 
  4834  098F                     	;# 
  4835  098F                     	;# 
  4836  0990                     	;# 
  4837  0991                     	;# 
  4838  0992                     	;# 
  4839  0993                     	;# 
  4840  0994                     	;# 
  4841  0995                     	;# 
  4842  0996                     	;# 
  4843  0997                     	;# 
  4844  0E0F                     	;# 
  4845  0E10                     	;# 
  4846  0E11                     	;# 
  4847  0E12                     	;# 
  4848  0E13                     	;# 
  4849  0E14                     	;# 
  4850  0E15                     	;# 
  4851  0E16                     	;# 
  4852  0E17                     	;# 
  4853  0E18                     	;# 
  4854  0E19                     	;# 
  4855  0E1A                     	;# 
  4856  0E1B                     	;# 
  4857  0E1C                     	;# 
  4858  0E1D                     	;# 
  4859  0E1E                     	;# 
  4860  0E1F                     	;# 
  4861  0E20                     	;# 
  4862  0E21                     	;# 
  4863  0E22                     	;# 
  4864  0E23                     	;# 
  4865  0E24                     	;# 
  4866  0E25                     	;# 
  4867  0E26                     	;# 
  4868  0E27                     	;# 
  4869  0E28                     	;# 
  4870  0E29                     	;# 
  4871  0E2A                     	;# 
  4872  0E2B                     	;# 
  4873  0E2C                     	;# 
  4874  0E2D                     	;# 
  4875  0E2E                     	;# 
  4876  0E2F                     	;# 
  4877  0E30                     	;# 
  4878  0E31                     	;# 
  4879  0E32                     	;# 
  4880  0E33                     	;# 
  4881  0E34                     	;# 
  4882  0E35                     	;# 
  4883  0E36                     	;# 
  4884  0E37                     	;# 
  4885  0E8F                     	;# 
  4886  0E90                     	;# 
  4887  0E91                     	;# 
  4888  0E92                     	;# 
  4889  0E93                     	;# 
  4890  0E94                     	;# 
  4891  0E95                     	;# 
  4892  0E96                     	;# 
  4893  0E97                     	;# 
  4894  0E9C                     	;# 
  4895  0E9D                     	;# 
  4896  0E9E                     	;# 
  4897  0EA1                     	;# 
  4898  0EA2                     	;# 
  4899  0EA3                     	;# 
  4900  0EA4                     	;# 
  4901  0EA5                     	;# 
  4902  0EA9                     	;# 
  4903  0EAA                     	;# 
  4904  0EAB                     	;# 
  4905  0EAC                     	;# 
  4906  0EB1                     	;# 
  4907  0EB2                     	;# 
  4908  0EB3                     	;# 
  4909  0EB8                     	;# 
  4910  0EB9                     	;# 
  4911  0EBA                     	;# 
  4912  0EBB                     	;# 
  4913  0EBC                     	;# 
  4914  0EBD                     	;# 
  4915  0EBE                     	;# 
  4916  0EC3                     	;# 
  4917  0EC5                     	;# 
  4918  0EC6                     	;# 
  4919  0EC7                     	;# 
  4920  0EC8                     	;# 
  4921  0EC9                     	;# 
  4922  0ECA                     	;# 
  4923  0ECB                     	;# 
  4924  0ECC                     	;# 
  4925  0F10                     	;# 
  4926  0F11                     	;# 
  4927  0F12                     	;# 
  4928  0F13                     	;# 
  4929  0F14                     	;# 
  4930  0F15                     	;# 
  4931  0F16                     	;# 
  4932  0F17                     	;# 
  4933  0F18                     	;# 
  4934  0F19                     	;# 
  4935  0F1A                     	;# 
  4936  0F1B                     	;# 
  4937  0F1C                     	;# 
  4938  0F1D                     	;# 
  4939  0F1E                     	;# 
  4940  0F1F                     	;# 
  4941  0F20                     	;# 
  4942  0F21                     	;# 
  4943  0F22                     	;# 
  4944  0F23                     	;# 
  4945  0F24                     	;# 
  4946  0F25                     	;# 
  4947  0F26                     	;# 
  4948  0F27                     	;# 
  4949  0F28                     	;# 
  4950  0F29                     	;# 
  4951  0F2A                     	;# 
  4952  0F2B                     	;# 
  4953  0F2C                     	;# 
  4954  0F2D                     	;# 
  4955  0F2E                     	;# 
  4956  0F2F                     	;# 
  4957  0F30                     	;# 
  4958  0F31                     	;# 
  4959  0F32                     	;# 
  4960  0F38                     	;# 
  4961  0F39                     	;# 
  4962  0F3A                     	;# 
  4963  0F3B                     	;# 
  4964  0F3C                     	;# 
  4965  0F3D                     	;# 
  4966  0F3E                     	;# 
  4967  0F3F                     	;# 
  4968  0F40                     	;# 
  4969  0F41                     	;# 
  4970  0F43                     	;# 
  4971  0F44                     	;# 
  4972  0F45                     	;# 
  4973  0F46                     	;# 
  4974  0F47                     	;# 
  4975  0F48                     	;# 
  4976  0F49                     	;# 
  4977  0F4A                     	;# 
  4978  0F4B                     	;# 
  4979  0F4C                     	;# 
  4980  0F4E                     	;# 
  4981  0F4F                     	;# 
  4982  0F50                     	;# 
  4983  0F51                     	;# 
  4984  0F52                     	;# 
  4985  0F53                     	;# 
  4986  0F54                     	;# 
  4987  0F55                     	;# 
  4988  0F56                     	;# 
  4989  0F57                     	;# 
  4990  0F59                     	;# 
  4991  0F5A                     	;# 
  4992  0F5B                     	;# 
  4993  0F5C                     	;# 
  4994  0F5D                     	;# 
  4995  0F61                     	;# 
  4996  0F62                     	;# 
  4997  0F64                     	;# 
  4998  0F65                     	;# 
  4999  0F66                     	;# 
  5000  0F67                     	;# 
  5001  0F68                     	;# 
  5002  0F69                     	;# 
  5003  0F6A                     	;# 
  5004  0F6B                     	;# 
  5005  0F6C                     	;# 
  5006  0F6D                     	;# 
  5007  0FE4                     	;# 
  5008  0FE5                     	;# 
  5009  0FE6                     	;# 
  5010  0FE7                     	;# 
  5011  0FE8                     	;# 
  5012  0FE9                     	;# 
  5013  0FEA                     	;# 
  5014  0FEB                     	;# 
  5015  0FED                     	;# 
  5016  0FEE                     	;# 
  5017  0FEF                     	;# 
  5018  0000                     	;# 
  5019  0001                     	;# 
  5020  0002                     	;# 
  5021  0003                     	;# 
  5022  0004                     	;# 
  5023  0005                     	;# 
  5024  0006                     	;# 
  5025  0007                     	;# 
  5026  0008                     	;# 
  5027  0009                     	;# 
  5028  000A                     	;# 
  5029  000B                     	;# 
  5030  000C                     	;# 
  5031  000D                     	;# 
  5032  000E                     	;# 
  5033  000F                     	;# 
  5034  0010                     	;# 
  5035  0011                     	;# 
  5036  0012                     	;# 
  5037  0013                     	;# 
  5038  0014                     	;# 
  5039  0015                     	;# 
  5040  0016                     	;# 
  5041  0017                     	;# 
  5042  0018                     	;# 
  5043  0019                     	;# 
  5044  001A                     	;# 
  5045  001C                     	;# 
  5046  001C                     	;# 
  5047  001D                     	;# 
  5048  001D                     	;# 
  5049  001E                     	;# 
  5050  001F                     	;# 
  5051  008C                     	;# 
  5052  008C                     	;# 
  5053  008D                     	;# 
  5054  008E                     	;# 
  5055  008E                     	;# 
  5056  008F                     	;# 
  5057  0090                     	;# 
  5058  0090                     	;# 
  5059  0091                     	;# 
  5060  0093                     	;# 
  5061  0094                     	;# 
  5062  0095                     	;# 
  5063  0096                     	;# 
  5064  0097                     	;# 
  5065  0098                     	;# 
  5066  0099                     	;# 
  5067  009A                     	;# 
  5068  009B                     	;# 
  5069  009C                     	;# 
  5070  009D                     	;# 
  5071  009E                     	;# 
  5072  010C                     	;# 
  5073  010D                     	;# 
  5074  010E                     	;# 
  5075  010E                     	;# 
  5076  010F                     	;# 
  5077  0110                     	;# 
  5078  0110                     	;# 
  5079  0111                     	;# 
  5080  0112                     	;# 
  5081  0112                     	;# 
  5082  0113                     	;# 
  5083  0114                     	;# 
  5084  0114                     	;# 
  5085  0115                     	;# 
  5086  0116                     	;# 
  5087  0116                     	;# 
  5088  0117                     	;# 
  5089  0119                     	;# 
  5090  0119                     	;# 
  5091  0119                     	;# 
  5092  011A                     	;# 
  5093  011A                     	;# 
  5094  011A                     	;# 
  5095  011B                     	;# 
  5096  011B                     	;# 
  5097  011B                     	;# 
  5098  011B                     	;# 
  5099  011B                     	;# 
  5100  011C                     	;# 
  5101  011C                     	;# 
  5102  011C                     	;# 
  5103  011D                     	;# 
  5104  011D                     	;# 
  5105  011D                     	;# 
  5106  011E                     	;# 
  5107  011E                     	;# 
  5108  011E                     	;# 
  5109  011F                     	;# 
  5110  011F                     	;# 
  5111  011F                     	;# 
  5112  011F                     	;# 
  5113  011F                     	;# 
  5114  018C                     	;# 
  5115  018D                     	;# 
  5116  018E                     	;# 
  5117  018F                     	;# 
  5118  0190                     	;# 
  5119  0191                     	;# 
  5120  0192                     	;# 
  5121  0196                     	;# 
  5122  0197                     	;# 
  5123  0198                     	;# 
  5124  0199                     	;# 
  5125  019A                     	;# 
  5126  019B                     	;# 
  5127  019C                     	;# 
  5128  020C                     	;# 
  5129  020C                     	;# 
  5130  020D                     	;# 
  5131  020E                     	;# 
  5132  020F                     	;# 
  5133  020F                     	;# 
  5134  0210                     	;# 
  5135  0210                     	;# 
  5136  0211                     	;# 
  5137  0211                     	;# 
  5138  0212                     	;# 
  5139  0212                     	;# 
  5140  0213                     	;# 
  5141  0214                     	;# 
  5142  0215                     	;# 
  5143  0215                     	;# 
  5144  0216                     	;# 
  5145  0216                     	;# 
  5146  0217                     	;# 
  5147  0217                     	;# 
  5148  0218                     	;# 
  5149  0218                     	;# 
  5150  0219                     	;# 
  5151  021A                     	;# 
  5152  021B                     	;# 
  5153  021B                     	;# 
  5154  021C                     	;# 
  5155  021C                     	;# 
  5156  021D                     	;# 
  5157  021D                     	;# 
  5158  021E                     	;# 
  5159  021F                     	;# 
  5160  028C                     	;# 
  5161  028C                     	;# 
  5162  028D                     	;# 
  5163  028D                     	;# 
  5164  028E                     	;# 
  5165  028F                     	;# 
  5166  0290                     	;# 
  5167  0290                     	;# 
  5168  0291                     	;# 
  5169  0292                     	;# 
  5170  0292                     	;# 
  5171  0293                     	;# 
  5172  0293                     	;# 
  5173  0294                     	;# 
  5174  0295                     	;# 
  5175  0296                     	;# 
  5176  0296                     	;# 
  5177  0297                     	;# 
  5178  0298                     	;# 
  5179  0298                     	;# 
  5180  0299                     	;# 
  5181  0299                     	;# 
  5182  029A                     	;# 
  5183  029B                     	;# 
  5184  029C                     	;# 
  5185  029C                     	;# 
  5186  029D                     	;# 
  5187  030C                     	;# 
  5188  030C                     	;# 
  5189  030D                     	;# 
  5190  030E                     	;# 
  5191  030F                     	;# 
  5192  0310                     	;# 
  5193  0310                     	;# 
  5194  0311                     	;# 
  5195  0312                     	;# 
  5196  0313                     	;# 
  5197  0314                     	;# 
  5198  0314                     	;# 
  5199  0315                     	;# 
  5200  0316                     	;# 
  5201  0317                     	;# 
  5202  0318                     	;# 
  5203  0318                     	;# 
  5204  0319                     	;# 
  5205  031A                     	;# 
  5206  031B                     	;# 
  5207  031C                     	;# 
  5208  031C                     	;# 
  5209  031D                     	;# 
  5210  031E                     	;# 
  5211  031F                     	;# 
  5212  038C                     	;# 
  5213  038C                     	;# 
  5214  038D                     	;# 
  5215  038E                     	;# 
  5216  0390                     	;# 
  5217  0390                     	;# 
  5218  0391                     	;# 
  5219  0392                     	;# 
  5220  040C                     	;# 
  5221  040D                     	;# 
  5222  040E                     	;# 
  5223  040F                     	;# 
  5224  0410                     	;# 
  5225  0411                     	;# 
  5226  0416                     	;# 
  5227  0416                     	;# 
  5228  0417                     	;# 
  5229  0418                     	;# 
  5230  0418                     	;# 
  5231  0419                     	;# 
  5232  041A                     	;# 
  5233  041A                     	;# 
  5234  041B                     	;# 
  5235  041C                     	;# 
  5236  041C                     	;# 
  5237  041D                     	;# 
  5238  041E                     	;# 
  5239  041F                     	;# 
  5240  048C                     	;# 
  5241  048C                     	;# 
  5242  048D                     	;# 
  5243  048E                     	;# 
  5244  048F                     	;# 
  5245  048F                     	;# 
  5246  0490                     	;# 
  5247  0491                     	;# 
  5248  0492                     	;# 
  5249  0492                     	;# 
  5250  0493                     	;# 
  5251  0494                     	;# 
  5252  0495                     	;# 
  5253  0495                     	;# 
  5254  0496                     	;# 
  5255  0497                     	;# 
  5256  0498                     	;# 
  5257  0499                     	;# 
  5258  049A                     	;# 
  5259  049B                     	;# 
  5260  049C                     	;# 
  5261  049D                     	;# 
  5262  050C                     	;# 
  5263  050C                     	;# 
  5264  050D                     	;# 
  5265  050E                     	;# 
  5266  050F                     	;# 
  5267  050F                     	;# 
  5268  0510                     	;# 
  5269  0511                     	;# 
  5270  0512                     	;# 
  5271  0512                     	;# 
  5272  0513                     	;# 
  5273  0514                     	;# 
  5274  0515                     	;# 
  5275  0515                     	;# 
  5276  0516                     	;# 
  5277  0517                     	;# 
  5278  0518                     	;# 
  5279  0519                     	;# 
  5280  051A                     	;# 
  5281  051B                     	;# 
  5282  051C                     	;# 
  5283  051D                     	;# 
  5284  058C                     	;# 
  5285  058C                     	;# 
  5286  058D                     	;# 
  5287  058E                     	;# 
  5288  058F                     	;# 
  5289  058F                     	;# 
  5290  0590                     	;# 
  5291  0591                     	;# 
  5292  0592                     	;# 
  5293  0593                     	;# 
  5294  060C                     	;# 
  5295  060D                     	;# 
  5296  060E                     	;# 
  5297  060F                     	;# 
  5298  0610                     	;# 
  5299  0611                     	;# 
  5300  0612                     	;# 
  5301  0613                     	;# 
  5302  0614                     	;# 
  5303  0616                     	;# 
  5304  0617                     	;# 
  5305  0618                     	;# 
  5306  0619                     	;# 
  5307  061A                     	;# 
  5308  061B                     	;# 
  5309  061C                     	;# 
  5310  061D                     	;# 
  5311  061E                     	;# 
  5312  068C                     	;# 
  5313  068D                     	;# 
  5314  068E                     	;# 
  5315  068F                     	;# 
  5316  0690                     	;# 
  5317  0691                     	;# 
  5318  0692                     	;# 
  5319  0693                     	;# 
  5320  0694                     	;# 
  5321  070C                     	;# 
  5322  070D                     	;# 
  5323  070E                     	;# 
  5324  070F                     	;# 
  5325  0710                     	;# 
  5326  0711                     	;# 
  5327  0712                     	;# 
  5328  0713                     	;# 
  5329  0714                     	;# 
  5330  0716                     	;# 
  5331  0717                     	;# 
  5332  0718                     	;# 
  5333  0719                     	;# 
  5334  071A                     	;# 
  5335  071B                     	;# 
  5336  071C                     	;# 
  5337  071D                     	;# 
  5338  071E                     	;# 
  5339  0796                     	;# 
  5340  0797                     	;# 
  5341  0798                     	;# 
  5342  0799                     	;# 
  5343  079A                     	;# 
  5344  079B                     	;# 
  5345  080C                     	;# 
  5346  080D                     	;# 
  5347  080E                     	;# 
  5348  080F                     	;# 
  5349  0810                     	;# 
  5350  0811                     	;# 
  5351  0812                     	;# 
  5352  0813                     	;# 
  5353  0814                     	;# 
  5354  081A                     	;# 
  5355  081B                     	;# 
  5356  081C                     	;# 
  5357  081D                     	;# 
  5358  081E                     	;# 
  5359  081F                     	;# 
  5360  088C                     	;# 
  5361  088D                     	;# 
  5362  088E                     	;# 
  5363  088F                     	;# 
  5364  0890                     	;# 
  5365  0891                     	;# 
  5366  0892                     	;# 
  5367  0893                     	;# 
  5368  0895                     	;# 
  5369  0896                     	;# 
  5370  0897                     	;# 
  5371  0898                     	;# 
  5372  0899                     	;# 
  5373  089A                     	;# 
  5374  089B                     	;# 
  5375  090C                     	;# 
  5376  090E                     	;# 
  5377  090F                     	;# 
  5378  091F                     	;# 
  5379  091F                     	;# 
  5380  098F                     	;# 
  5381  098F                     	;# 
  5382  0990                     	;# 
  5383  0991                     	;# 
  5384  0992                     	;# 
  5385  0993                     	;# 
  5386  0994                     	;# 
  5387  0995                     	;# 
  5388  0996                     	;# 
  5389  0997                     	;# 
  5390  0E0F                     	;# 
  5391  0E10                     	;# 
  5392  0E11                     	;# 
  5393  0E12                     	;# 
  5394  0E13                     	;# 
  5395  0E14                     	;# 
  5396  0E15                     	;# 
  5397  0E16                     	;# 
  5398  0E17                     	;# 
  5399  0E18                     	;# 
  5400  0E19                     	;# 
  5401  0E1A                     	;# 
  5402  0E1B                     	;# 
  5403  0E1C                     	;# 
  5404  0E1D                     	;# 
  5405  0E1E                     	;# 
  5406  0E1F                     	;# 
  5407  0E20                     	;# 
  5408  0E21                     	;# 
  5409  0E22                     	;# 
  5410  0E23                     	;# 
  5411  0E24                     	;# 
  5412  0E25                     	;# 
  5413  0E26                     	;# 
  5414  0E27                     	;# 
  5415  0E28                     	;# 
  5416  0E29                     	;# 
  5417  0E2A                     	;# 
  5418  0E2B                     	;# 
  5419  0E2C                     	;# 
  5420  0E2D                     	;# 
  5421  0E2E                     	;# 
  5422  0E2F                     	;# 
  5423  0E30                     	;# 
  5424  0E31                     	;# 
  5425  0E32                     	;# 
  5426  0E33                     	;# 
  5427  0E34                     	;# 
  5428  0E35                     	;# 
  5429  0E36                     	;# 
  5430  0E37                     	;# 
  5431  0E8F                     	;# 
  5432  0E90                     	;# 
  5433  0E91                     	;# 
  5434  0E92                     	;# 
  5435  0E93                     	;# 
  5436  0E94                     	;# 
  5437  0E95                     	;# 
  5438  0E96                     	;# 
  5439  0E97                     	;# 
  5440  0E9C                     	;# 
  5441  0E9D                     	;# 
  5442  0E9E                     	;# 
  5443  0EA1                     	;# 
  5444  0EA2                     	;# 
  5445  0EA3                     	;# 
  5446  0EA4                     	;# 
  5447  0EA5                     	;# 
  5448  0EA9                     	;# 
  5449  0EAA                     	;# 
  5450  0EAB                     	;# 
  5451  0EAC                     	;# 
  5452  0EB1                     	;# 
  5453  0EB2                     	;# 
  5454  0EB3                     	;# 
  5455  0EB8                     	;# 
  5456  0EB9                     	;# 
  5457  0EBA                     	;# 
  5458  0EBB                     	;# 
  5459  0EBC                     	;# 
  5460  0EBD                     	;# 
  5461  0EBE                     	;# 
  5462  0EC3                     	;# 
  5463  0EC5                     	;# 
  5464  0EC6                     	;# 
  5465  0EC7                     	;# 
  5466  0EC8                     	;# 
  5467  0EC9                     	;# 
  5468  0ECA                     	;# 
  5469  0ECB                     	;# 
  5470  0ECC                     	;# 
  5471  0F10                     	;# 
  5472  0F11                     	;# 
  5473  0F12                     	;# 
  5474  0F13                     	;# 
  5475  0F14                     	;# 
  5476  0F15                     	;# 
  5477  0F16                     	;# 
  5478  0F17                     	;# 
  5479  0F18                     	;# 
  5480  0F19                     	;# 
  5481  0F1A                     	;# 
  5482  0F1B                     	;# 
  5483  0F1C                     	;# 
  5484  0F1D                     	;# 
  5485  0F1E                     	;# 
  5486  0F1F                     	;# 
  5487  0F20                     	;# 
  5488  0F21                     	;# 
  5489  0F22                     	;# 
  5490  0F23                     	;# 
  5491  0F24                     	;# 
  5492  0F25                     	;# 
  5493  0F26                     	;# 
  5494  0F27                     	;# 
  5495  0F28                     	;# 
  5496  0F29                     	;# 
  5497  0F2A                     	;# 
  5498  0F2B                     	;# 
  5499  0F2C                     	;# 
  5500  0F2D                     	;# 
  5501  0F2E                     	;# 
  5502  0F2F                     	;# 
  5503  0F30                     	;# 
  5504  0F31                     	;# 
  5505  0F32                     	;# 
  5506  0F38                     	;# 
  5507  0F39                     	;# 
  5508  0F3A                     	;# 
  5509  0F3B                     	;# 
  5510  0F3C                     	;# 
  5511  0F3D                     	;# 
  5512  0F3E                     	;# 
  5513  0F3F                     	;# 
  5514  0F40                     	;# 
  5515  0F41                     	;# 
  5516  0F43                     	;# 
  5517  0F44                     	;# 
  5518  0F45                     	;# 
  5519  0F46                     	;# 
  5520  0F47                     	;# 
  5521  0F48                     	;# 
  5522  0F49                     	;# 
  5523  0F4A                     	;# 
  5524  0F4B                     	;# 
  5525  0F4C                     	;# 
  5526  0F4E                     	;# 
  5527  0F4F                     	;# 
  5528  0F50                     	;# 
  5529  0F51                     	;# 
  5530  0F52                     	;# 
  5531  0F53                     	;# 
  5532  0F54                     	;# 
  5533  0F55                     	;# 
  5534  0F56                     	;# 
  5535  0F57                     	;# 
  5536  0F59                     	;# 
  5537  0F5A                     	;# 
  5538  0F5B                     	;# 
  5539  0F5C                     	;# 
  5540  0F5D                     	;# 
  5541  0F61                     	;# 
  5542  0F62                     	;# 
  5543  0F64                     	;# 
  5544  0F65                     	;# 
  5545  0F66                     	;# 
  5546  0F67                     	;# 
  5547  0F68                     	;# 
  5548  0F69                     	;# 
  5549  0F6A                     	;# 
  5550  0F6B                     	;# 
  5551  0F6C                     	;# 
  5552  0F6D                     	;# 
  5553  0FE4                     	;# 
  5554  0FE5                     	;# 
  5555  0FE6                     	;# 
  5556  0FE7                     	;# 
  5557  0FE8                     	;# 
  5558  0FE9                     	;# 
  5559  0FEA                     	;# 
  5560  0FEB                     	;# 
  5561  0FED                     	;# 
  5562  0FEE                     	;# 
  5563  0FEF                     	;# 
  5564  0000                     	;# 
  5565  0001                     	;# 
  5566  0002                     	;# 
  5567  0003                     	;# 
  5568  0004                     	;# 
  5569  0005                     	;# 
  5570  0006                     	;# 
  5571  0007                     	;# 
  5572  0008                     	;# 
  5573  0009                     	;# 
  5574  000A                     	;# 
  5575  000B                     	;# 
  5576  000C                     	;# 
  5577  000D                     	;# 
  5578  000E                     	;# 
  5579  000F                     	;# 
  5580  0010                     	;# 
  5581  0011                     	;# 
  5582  0012                     	;# 
  5583  0013                     	;# 
  5584  0014                     	;# 
  5585  0015                     	;# 
  5586  0016                     	;# 
  5587  0017                     	;# 
  5588  0018                     	;# 
  5589  0019                     	;# 
  5590  001A                     	;# 
  5591  001C                     	;# 
  5592  001C                     	;# 
  5593  001D                     	;# 
  5594  001D                     	;# 
  5595  001E                     	;# 
  5596  001F                     	;# 
  5597  008C                     	;# 
  5598  008C                     	;# 
  5599  008D                     	;# 
  5600  008E                     	;# 
  5601  008E                     	;# 
  5602  008F                     	;# 
  5603  0090                     	;# 
  5604  0090                     	;# 
  5605  0091                     	;# 
  5606  0093                     	;# 
  5607  0094                     	;# 
  5608  0095                     	;# 
  5609  0096                     	;# 
  5610  0097                     	;# 
  5611  0098                     	;# 
  5612  0099                     	;# 
  5613  009A                     	;# 
  5614  009B                     	;# 
  5615  009C                     	;# 
  5616  009D                     	;# 
  5617  009E                     	;# 
  5618  010C                     	;# 
  5619  010D                     	;# 
  5620  010E                     	;# 
  5621  010E                     	;# 
  5622  010F                     	;# 
  5623  0110                     	;# 
  5624  0110                     	;# 
  5625  0111                     	;# 
  5626  0112                     	;# 
  5627  0112                     	;# 
  5628  0113                     	;# 
  5629  0114                     	;# 
  5630  0114                     	;# 
  5631  0115                     	;# 
  5632  0116                     	;# 
  5633  0116                     	;# 
  5634  0117                     	;# 
  5635  0119                     	;# 
  5636  0119                     	;# 
  5637  0119                     	;# 
  5638  011A                     	;# 
  5639  011A                     	;# 
  5640  011A                     	;# 
  5641  011B                     	;# 
  5642  011B                     	;# 
  5643  011B                     	;# 
  5644  011B                     	;# 
  5645  011B                     	;# 
  5646  011C                     	;# 
  5647  011C                     	;# 
  5648  011C                     	;# 
  5649  011D                     	;# 
  5650  011D                     	;# 
  5651  011D                     	;# 
  5652  011E                     	;# 
  5653  011E                     	;# 
  5654  011E                     	;# 
  5655  011F                     	;# 
  5656  011F                     	;# 
  5657  011F                     	;# 
  5658  011F                     	;# 
  5659  011F                     	;# 
  5660  018C                     	;# 
  5661  018D                     	;# 
  5662  018E                     	;# 
  5663  018F                     	;# 
  5664  0190                     	;# 
  5665  0191                     	;# 
  5666  0192                     	;# 
  5667  0196                     	;# 
  5668  0197                     	;# 
  5669  0198                     	;# 
  5670  0199                     	;# 
  5671  019A                     	;# 
  5672  019B                     	;# 
  5673  019C                     	;# 
  5674  020C                     	;# 
  5675  020C                     	;# 
  5676  020D                     	;# 
  5677  020E                     	;# 
  5678  020F                     	;# 
  5679  020F                     	;# 
  5680  0210                     	;# 
  5681  0210                     	;# 
  5682  0211                     	;# 
  5683  0211                     	;# 
  5684  0212                     	;# 
  5685  0212                     	;# 
  5686  0213                     	;# 
  5687  0214                     	;# 
  5688  0215                     	;# 
  5689  0215                     	;# 
  5690  0216                     	;# 
  5691  0216                     	;# 
  5692  0217                     	;# 
  5693  0217                     	;# 
  5694  0218                     	;# 
  5695  0218                     	;# 
  5696  0219                     	;# 
  5697  021A                     	;# 
  5698  021B                     	;# 
  5699  021B                     	;# 
  5700  021C                     	;# 
  5701  021C                     	;# 
  5702  021D                     	;# 
  5703  021D                     	;# 
  5704  021E                     	;# 
  5705  021F                     	;# 
  5706  028C                     	;# 
  5707  028C                     	;# 
  5708  028D                     	;# 
  5709  028D                     	;# 
  5710  028E                     	;# 
  5711  028F                     	;# 
  5712  0290                     	;# 
  5713  0290                     	;# 
  5714  0291                     	;# 
  5715  0292                     	;# 
  5716  0292                     	;# 
  5717  0293                     	;# 
  5718  0293                     	;# 
  5719  0294                     	;# 
  5720  0295                     	;# 
  5721  0296                     	;# 
  5722  0296                     	;# 
  5723  0297                     	;# 
  5724  0298                     	;# 
  5725  0298                     	;# 
  5726  0299                     	;# 
  5727  0299                     	;# 
  5728  029A                     	;# 
  5729  029B                     	;# 
  5730  029C                     	;# 
  5731  029C                     	;# 
  5732  029D                     	;# 
  5733  030C                     	;# 
  5734  030C                     	;# 
  5735  030D                     	;# 
  5736  030E                     	;# 
  5737  030F                     	;# 
  5738  0310                     	;# 
  5739  0310                     	;# 
  5740  0311                     	;# 
  5741  0312                     	;# 
  5742  0313                     	;# 
  5743  0314                     	;# 
  5744  0314                     	;# 
  5745  0315                     	;# 
  5746  0316                     	;# 
  5747  0317                     	;# 
  5748  0318                     	;# 
  5749  0318                     	;# 
  5750  0319                     	;# 
  5751  031A                     	;# 
  5752  031B                     	;# 
  5753  031C                     	;# 
  5754  031C                     	;# 
  5755  031D                     	;# 
  5756  031E                     	;# 
  5757  031F                     	;# 
  5758  038C                     	;# 
  5759  038C                     	;# 
  5760  038D                     	;# 
  5761  038E                     	;# 
  5762  0390                     	;# 
  5763  0390                     	;# 
  5764  0391                     	;# 
  5765  0392                     	;# 
  5766  040C                     	;# 
  5767  040D                     	;# 
  5768  040E                     	;# 
  5769  040F                     	;# 
  5770  0410                     	;# 
  5771  0411                     	;# 
  5772  0416                     	;# 
  5773  0416                     	;# 
  5774  0417                     	;# 
  5775  0418                     	;# 
  5776  0418                     	;# 
  5777  0419                     	;# 
  5778  041A                     	;# 
  5779  041A                     	;# 
  5780  041B                     	;# 
  5781  041C                     	;# 
  5782  041C                     	;# 
  5783  041D                     	;# 
  5784  041E                     	;# 
  5785  041F                     	;# 
  5786  048C                     	;# 
  5787  048C                     	;# 
  5788  048D                     	;# 
  5789  048E                     	;# 
  5790  048F                     	;# 
  5791  048F                     	;# 
  5792  0490                     	;# 
  5793  0491                     	;# 
  5794  0492                     	;# 
  5795  0492                     	;# 
  5796  0493                     	;# 
  5797  0494                     	;# 
  5798  0495                     	;# 
  5799  0495                     	;# 
  5800  0496                     	;# 
  5801  0497                     	;# 
  5802  0498                     	;# 
  5803  0499                     	;# 
  5804  049A                     	;# 
  5805  049B                     	;# 
  5806  049C                     	;# 
  5807  049D                     	;# 
  5808  050C                     	;# 
  5809  050C                     	;# 
  5810  050D                     	;# 
  5811  050E                     	;# 
  5812  050F                     	;# 
  5813  050F                     	;# 
  5814  0510                     	;# 
  5815  0511                     	;# 
  5816  0512                     	;# 
  5817  0512                     	;# 
  5818  0513                     	;# 
  5819  0514                     	;# 
  5820  0515                     	;# 
  5821  0515                     	;# 
  5822  0516                     	;# 
  5823  0517                     	;# 
  5824  0518                     	;# 
  5825  0519                     	;# 
  5826  051A                     	;# 
  5827  051B                     	;# 
  5828  051C                     	;# 
  5829  051D                     	;# 
  5830  058C                     	;# 
  5831  058C                     	;# 
  5832  058D                     	;# 
  5833  058E                     	;# 
  5834  058F                     	;# 
  5835  058F                     	;# 
  5836  0590                     	;# 
  5837  0591                     	;# 
  5838  0592                     	;# 
  5839  0593                     	;# 
  5840  060C                     	;# 
  5841  060D                     	;# 
  5842  060E                     	;# 
  5843  060F                     	;# 
  5844  0610                     	;# 
  5845  0611                     	;# 
  5846  0612                     	;# 
  5847  0613                     	;# 
  5848  0614                     	;# 
  5849  0616                     	;# 
  5850  0617                     	;# 
  5851  0618                     	;# 
  5852  0619                     	;# 
  5853  061A                     	;# 
  5854  061B                     	;# 
  5855  061C                     	;# 
  5856  061D                     	;# 
  5857  061E                     	;# 
  5858  068C                     	;# 
  5859  068D                     	;# 
  5860  068E                     	;# 
  5861  068F                     	;# 
  5862  0690                     	;# 
  5863  0691                     	;# 
  5864  0692                     	;# 
  5865  0693                     	;# 
  5866  0694                     	;# 
  5867  070C                     	;# 
  5868  070D                     	;# 
  5869  070E                     	;# 
  5870  070F                     	;# 
  5871  0710                     	;# 
  5872  0711                     	;# 
  5873  0712                     	;# 
  5874  0713                     	;# 
  5875  0714                     	;# 
  5876  0716                     	;# 
  5877  0717                     	;# 
  5878  0718                     	;# 
  5879  0719                     	;# 
  5880  071A                     	;# 
  5881  071B                     	;# 
  5882  071C                     	;# 
  5883  071D                     	;# 
  5884  071E                     	;# 
  5885  0796                     	;# 
  5886  0797                     	;# 
  5887  0798                     	;# 
  5888  0799                     	;# 
  5889  079A                     	;# 
  5890  079B                     	;# 
  5891  080C                     	;# 
  5892  080D                     	;# 
  5893  080E                     	;# 
  5894  080F                     	;# 
  5895  0810                     	;# 
  5896  0811                     	;# 
  5897  0812                     	;# 
  5898  0813                     	;# 
  5899  0814                     	;# 
  5900  081A                     	;# 
  5901  081B                     	;# 
  5902  081C                     	;# 
  5903  081D                     	;# 
  5904  081E                     	;# 
  5905  081F                     	;# 
  5906  088C                     	;# 
  5907  088D                     	;# 
  5908  088E                     	;# 
  5909  088F                     	;# 
  5910  0890                     	;# 
  5911  0891                     	;# 
  5912  0892                     	;# 
  5913  0893                     	;# 
  5914  0895                     	;# 
  5915  0896                     	;# 
  5916  0897                     	;# 
  5917  0898                     	;# 
  5918  0899                     	;# 
  5919  089A                     	;# 
  5920  089B                     	;# 
  5921  090C                     	;# 
  5922  090E                     	;# 
  5923  090F                     	;# 
  5924  091F                     	;# 
  5925  091F                     	;# 
  5926  098F                     	;# 
  5927  098F                     	;# 
  5928  0990                     	;# 
  5929  0991                     	;# 
  5930  0992                     	;# 
  5931  0993                     	;# 
  5932  0994                     	;# 
  5933  0995                     	;# 
  5934  0996                     	;# 
  5935  0997                     	;# 
  5936  0E0F                     	;# 
  5937  0E10                     	;# 
  5938  0E11                     	;# 
  5939  0E12                     	;# 
  5940  0E13                     	;# 
  5941  0E14                     	;# 
  5942  0E15                     	;# 
  5943  0E16                     	;# 
  5944  0E17                     	;# 
  5945  0E18                     	;# 
  5946  0E19                     	;# 
  5947  0E1A                     	;# 
  5948  0E1B                     	;# 
  5949  0E1C                     	;# 
  5950  0E1D                     	;# 
  5951  0E1E                     	;# 
  5952  0E1F                     	;# 
  5953  0E20                     	;# 
  5954  0E21                     	;# 
  5955  0E22                     	;# 
  5956  0E23                     	;# 
  5957  0E24                     	;# 
  5958  0E25                     	;# 
  5959  0E26                     	;# 
  5960  0E27                     	;# 
  5961  0E28                     	;# 
  5962  0E29                     	;# 
  5963  0E2A                     	;# 
  5964  0E2B                     	;# 
  5965  0E2C                     	;# 
  5966  0E2D                     	;# 
  5967  0E2E                     	;# 
  5968  0E2F                     	;# 
  5969  0E30                     	;# 
  5970  0E31                     	;# 
  5971  0E32                     	;# 
  5972  0E33                     	;# 
  5973  0E34                     	;# 
  5974  0E35                     	;# 
  5975  0E36                     	;# 
  5976  0E37                     	;# 
  5977  0E8F                     	;# 
  5978  0E90                     	;# 
  5979  0E91                     	;# 
  5980  0E92                     	;# 
  5981  0E93                     	;# 
  5982  0E94                     	;# 
  5983  0E95                     	;# 
  5984  0E96                     	;# 
  5985  0E97                     	;# 
  5986  0E9C                     	;# 
  5987  0E9D                     	;# 
  5988  0E9E                     	;# 
  5989  0EA1                     	;# 
  5990  0EA2                     	;# 
  5991  0EA3                     	;# 
  5992  0EA4                     	;# 
  5993  0EA5                     	;# 
  5994  0EA9                     	;# 
  5995  0EAA                     	;# 
  5996  0EAB                     	;# 
  5997  0EAC                     	;# 
  5998  0EB1                     	;# 
  5999  0EB2                     	;# 
  6000  0EB3                     	;# 
  6001  0EB8                     	;# 
  6002  0EB9                     	;# 
  6003  0EBA                     	;# 
  6004  0EBB                     	;# 
  6005  0EBC                     	;# 
  6006  0EBD                     	;# 
  6007  0EBE                     	;# 
  6008  0EC3                     	;# 
  6009  0EC5                     	;# 
  6010  0EC6                     	;# 
  6011  0EC7                     	;# 
  6012  0EC8                     	;# 
  6013  0EC9                     	;# 
  6014  0ECA                     	;# 
  6015  0ECB                     	;# 
  6016  0ECC                     	;# 
  6017  0F10                     	;# 
  6018  0F11                     	;# 
  6019  0F12                     	;# 
  6020  0F13                     	;# 
  6021  0F14                     	;# 
  6022  0F15                     	;# 
  6023  0F16                     	;# 
  6024  0F17                     	;# 
  6025  0F18                     	;# 
  6026  0F19                     	;# 
  6027  0F1A                     	;# 
  6028  0F1B                     	;# 
  6029  0F1C                     	;# 
  6030  0F1D                     	;# 
  6031  0F1E                     	;# 
  6032  0F1F                     	;# 
  6033  0F20                     	;# 
  6034  0F21                     	;# 
  6035  0F22                     	;# 
  6036  0F23                     	;# 
  6037  0F24                     	;# 
  6038  0F25                     	;# 
  6039  0F26                     	;# 
  6040  0F27                     	;# 
  6041  0F28                     	;# 
  6042  0F29                     	;# 
  6043  0F2A                     	;# 
  6044  0F2B                     	;# 
  6045  0F2C                     	;# 
  6046  0F2D                     	;# 
  6047  0F2E                     	;# 
  6048  0F2F                     	;# 
  6049  0F30                     	;# 
  6050  0F31                     	;# 
  6051  0F32                     	;# 
  6052  0F38                     	;# 
  6053  0F39                     	;# 
  6054  0F3A                     	;# 
  6055  0F3B                     	;# 
  6056  0F3C                     	;# 
  6057  0F3D                     	;# 
  6058  0F3E                     	;# 
  6059  0F3F                     	;# 
  6060  0F40                     	;# 
  6061  0F41                     	;# 
  6062  0F43                     	;# 
  6063  0F44                     	;# 
  6064  0F45                     	;# 
  6065  0F46                     	;# 
  6066  0F47                     	;# 
  6067  0F48                     	;# 
  6068  0F49                     	;# 
  6069  0F4A                     	;# 
  6070  0F4B                     	;# 
  6071  0F4C                     	;# 
  6072  0F4E                     	;# 
  6073  0F4F                     	;# 
  6074  0F50                     	;# 
  6075  0F51                     	;# 
  6076  0F52                     	;# 
  6077  0F53                     	;# 
  6078  0F54                     	;# 
  6079  0F55                     	;# 
  6080  0F56                     	;# 
  6081  0F57                     	;# 
  6082  0F59                     	;# 
  6083  0F5A                     	;# 
  6084  0F5B                     	;# 
  6085  0F5C                     	;# 
  6086  0F5D                     	;# 
  6087  0F61                     	;# 
  6088  0F62                     	;# 
  6089  0F64                     	;# 
  6090  0F65                     	;# 
  6091  0F66                     	;# 
  6092  0F67                     	;# 
  6093  0F68                     	;# 
  6094  0F69                     	;# 
  6095  0F6A                     	;# 
  6096  0F6B                     	;# 
  6097  0F6C                     	;# 
  6098  0F6D                     	;# 
  6099  0FE4                     	;# 
  6100  0FE5                     	;# 
  6101  0FE6                     	;# 
  6102  0FE7                     	;# 
  6103  0FE8                     	;# 
  6104  0FE9                     	;# 
  6105  0FEA                     	;# 
  6106  0FEB                     	;# 
  6107  0FED                     	;# 
  6108  0FEE                     	;# 
  6109  0FEF                     	;# 
  6110                           
  6111 ;; Function _rd1RegCompleteHandler is unused but had its address taken
  6112  0000                     
  6113 ;; Function _rd2RegCompleteHandler is unused but had its address taken
  6114  0000                     
  6115 ;; Function _wr1RegCompleteHandler is unused but had its address taken
  6116  0000                     
  6117 ;; Function _wr2RegCompleteHandler is unused but had its address taken
  6118  0000                     
  6119 ;; Function _rdBlkRegCompleteHandler is unused but had its address taken
  6120  0000                     
  6121 ;; Function _I2C1_DO_IDLE is unused but had its address taken
  6122  0000                     
  6123 ;; Function _I2C1_DO_SEND_ADR_READ is unused but had its address taken
  6124  0000                     
  6125 ;; Function _I2C1_DO_SEND_ADR_WRITE is unused but had its address taken
  6126  0000                     
  6127 ;; Function _I2C1_DO_TX is unused but had its address taken
  6128  0000                     
  6129 ;; Function _I2C1_DO_RX is unused but had its address taken
  6130  0000                     
  6131 ;; Function _I2C1_DO_RCEN is unused but had its address taken
  6132  0000                     
  6133 ;; Function _I2C1_DO_TX_EMPTY is unused but had its address taken
  6134  0000                     
  6135 ;; Function _I2C1_DO_SEND_RESTART_READ is unused but had its address taken
  6136  0000                     
  6137 ;; Function _I2C1_DO_SEND_RESTART_WRITE is unused but had its address taken
  6138  0000                     
  6139 ;; Function _I2C1_DO_SEND_RESTART is unused but had its address taken
  6140  0000                     
  6141 ;; Function _I2C1_DO_SEND_STOP is unused but had its address taken
  6142  0000                     
  6143 ;; Function _I2C1_DO_RX_ACK is unused but had its address taken
  6144  0000                     
  6145 ;; Function _I2C1_DO_RX_NACK_STOP is unused but had its address taken
  6146  0000                     
  6147 ;; Function _I2C1_DO_RX_NACK_RESTART is unused but had its address taken
  6148  0000                     
  6149 ;; Function _I2C1_DO_RESET is unused but had its address taken
  6150  0000                     
  6151 ;; Function _I2C1_DO_ADDRESS_NACK is unused but had its address taken
  6152  0000                     
  6153 ;; Function _I2C1_CallbackReturnStop is unused but had its address taken
  6154  0000                     
  6155 ;; Function _I2C1_CallbackReturnReset is unused but had its address taken
  6156  0000                     
  6157                           	psect	stringtext1
  6158  1000                     __pstringtext1:
  6159  1000                     _i2c1_fsmStateTable:
  6160  1000  3400               	retlw	0
  6161  1001  3400               	retlw	0
  6162  1002  3400               	retlw	0
  6163  1003  3400               	retlw	0
  6164  1004  3400               	retlw	0
  6165  1005  3400               	retlw	0
  6166  1006  3400               	retlw	0
  6167  1007  3400               	retlw	0
  6168  1008  3400               	retlw	0
  6169  1009  3400               	retlw	0
  6170  100A  3400               	retlw	0
  6171  100B  3400               	retlw	0
  6172  100C  3400               	retlw	0
  6173  100D  3400               	retlw	0
  6174  100E  3400               	retlw	0
  6175  100F  3400               	retlw	0
  6176  1010  3400               	retlw	0
  6177  1011  3400               	retlw	0
  6178  1012  3400               	retlw	0
  6179  1013  3400               	retlw	0
  6180  1014  3400               	retlw	0
  6181  1015  3400               	retlw	0
  6182  1016  3400               	retlw	0
  6183  1017  3400               	retlw	0
  6184  1018  3400               	retlw	0
  6185  1019  3400               	retlw	0
  6186  101A  3400               	retlw	0
  6187  101B  3400               	retlw	0
  6188  101C  3400               	retlw	0
  6189  101D  3400               	retlw	0
  6190  101E  3400               	retlw	0
  6191  101F  3400               	retlw	0
  6192  1020                     __end_of_i2c1_fsmStateTable:
  6193                           
  6194                           	psect	nvBANK1
  6195  00E7                     __pnvBANK1:
  6196  00E7                     _TMR1_InterruptHandler:
  6197  00E7                     	ds	2
  6198  00E9                     _timer1ReloadVal:
  6199  00E9                     	ds	2
  6200  0016                     _LATAbits	set	22
  6201  000C                     _PORTAbits	set	12
  6202  000D                     _PORTBbits	set	13
  6203  000B                     _INTCONbits	set	11
  6204  0014                     _TRISD	set	20
  6205  0013                     _TRISC	set	19
  6206  0012                     _TRISB	set	18
  6207  0011                     _TRISA	set	17
  6208  0015                     _TRISE	set	21
  6209  0018                     _LATC	set	24
  6210  0017                     _LATB	set	23
  6211  0016                     _LATA	set	22
  6212  0019                     _LATD	set	25
  6213  001A                     _LATE	set	26
  6214  0013                     _TRISCbits	set	19
  6215  0094                     _ADCON1bits	set	148
  6216  008E                     _ADPREVL	set	142
  6217  008F                     _ADPREVH	set	143
  6218  0097                     _ADSTATbits	set	151
  6219  0090                     _ADACCL	set	144
  6220  0091                     _ADACCH	set	145
  6221  0095                     _ADCON2bits	set	149
  6222  0096                     _ADCON3bits	set	150
  6223  008C                     _ADRESL	set	140
  6224  008D                     _ADRESH	set	141
  6225  0093                     _ADCON0bits	set	147
  6226  009D                     _ADACQ	set	157
  6227  0093                     _ADCON0	set	147
  6228  0098                     _ADCLK	set	152
  6229  0099                     _ADACT	set	153
  6230  009A                     _ADREF	set	154
  6231  0097                     _ADSTAT	set	151
  6232  0096                     _ADCON3	set	150
  6233  0095                     _ADCON2	set	149
  6234  0094                     _ADCON1	set	148
  6235  009C                     _ADPRE	set	156
  6236  009B                     _ADCAP	set	155
  6237  009E                     _ADPCH	set	158
  6238  0116                     _ADERRL	set	278
  6239  0117                     _ADERRH	set	279
  6240  0114                     _ADFLTRL	set	276
  6241  0115                     _ADFLTRH	set	277
  6242  010C                     _ADCNT	set	268
  6243  010D                     _ADRPT	set	269
  6244  0113                     _ADSTPTH	set	275
  6245  0112                     _ADSTPTL	set	274
  6246  0111                     _ADUTHH	set	273
  6247  0110                     _ADUTHL	set	272
  6248  010F                     _ADLTHH	set	271
  6249  010E                     _ADLTHL	set	270
  6250  018C                     _SSP1BUF	set	396
  6251  018F                     _SSP1STATbits	set	399
  6252  0191                     _SSP1CON2bits	set	401
  6253  0190                     _SSP1CON1bits	set	400
  6254  018D                     _SSP1ADD	set	397
  6255  0191                     _SSP1CON2	set	401
  6256  0190                     _SSP1CON1	set	400
  6257  018F                     _SSP1STAT	set	399
  6258  020F                     _T1GCONbits	set	527
  6259  020E                     _T1CONbits	set	526
  6260  020E                     _T1CON	set	526
  6261  020C                     _TMR1L	set	524
  6262  020D                     _TMR1H	set	525
  6263  0211                     _T1CLK	set	529
  6264  0210                     _T1GATE	set	528
  6265  020F                     _T1GCON	set	527
  6266  0719                     _PIE3bits	set	1817
  6267  0710                     _PIR4bits	set	1808
  6268  071A                     _PIE4bits	set	1818
  6269  070F                     _PIR3bits	set	1807
  6270  079B                     _PMD5	set	1947
  6271  079A                     _PMD4	set	1946
  6272  0799                     _PMD3	set	1945
  6273  0798                     _PMD2	set	1944
  6274  0797                     _PMD1	set	1943
  6275  0796                     _PMD0	set	1942
  6276  081F                     _NVMCON2	set	2079
  6277  081C                     _NVMDATL	set	2076
  6278  081D                     _NVMDATH	set	2077
  6279  081E                     _NVMCON1bits	set	2078
  6280  081B                     _NVMADRH	set	2075
  6281  081A                     _NVMADRL	set	2074
  6282  0892                     _OSCTUNE	set	2194
  6283  0893                     _OSCFRQ	set	2195
  6284  0891                     _OSCEN	set	2193
  6285  088F                     _OSCCON3	set	2191
  6286  088D                     _OSCCON1	set	2189
  6287  0EC6                     _SSP1DATPPS	set	3782
  6288  0EC5                     _SSP1CLKPPS	set	3781
  6289  0F24                     _RC4PPS	set	3876
  6290  0F23                     _RC3PPS	set	3875
  6291  0F68                     _INLVLE	set	3944
  6292  0F5D                     _INLVLD	set	3933
  6293  0F52                     _INLVLC	set	3922
  6294  0F47                     _INLVLB	set	3911
  6295  0F3C                     _INLVLA	set	3900
  6296  0F67                     _SLRCONE	set	3943
  6297  0F5C                     _SLRCOND	set	3932
  6298  0F51                     _SLRCONC	set	3921
  6299  0F46                     _SLRCONB	set	3910
  6300  0F3B                     _SLRCONA	set	3899
  6301  0F5B                     _ODCOND	set	3931
  6302  0F50                     _ODCONC	set	3920
  6303  0F45                     _ODCONB	set	3909
  6304  0F3A                     _ODCONA	set	3898
  6305  0F66                     _ODCONE	set	3942
  6306  0F4F                     _WPUC	set	3919
  6307  0F39                     _WPUA	set	3897
  6308  0F44                     _WPUB	set	3908
  6309  0F65                     _WPUE	set	3941
  6310  0F5A                     _WPUD	set	3930
  6311  0F38                     _ANSELA	set	3896
  6312  0F64                     _ANSELE	set	3940
  6313  0F43                     _ANSELB	set	3907
  6314  0F4E                     _ANSELC	set	3918
  6315  0F59                     _ANSELD	set	3929
  6316                           
  6317                           	psect	stringtext2
  6318  1020                     __pstringtext2:
  6319  1020                     STR_2:
  6320  1020  3453               	retlw	83	;'S'
  6321  1021  3454               	retlw	84	;'T'
  6322  1022  3452               	retlw	82	;'R'
  6323  1023  342D               	retlw	45	;'-'
  6324  1024  3452               	retlw	82	;'R'
  6325  1025  3454               	retlw	84	;'T'
  6326  1026  3453               	retlw	83	;'S'
  6327  1027  3400               	retlw	0
  6328                           
  6329                           	psect	stringtext3
  6330  1028                     __pstringtext3:
  6331  1028                     STR_3:
  6332  1028  3425               	retlw	37	;'%'
  6333  1029  3430               	retlw	48	;'0'
  6334  102A  3432               	retlw	50	;'2'
  6335  102B  3464               	retlw	100	;'d'
  6336  102C  3420               	retlw	32	;' '
  6337  102D  3443               	retlw	67	;'C'
  6338  102E  3400               	retlw	0
  6339                           
  6340                           	psect	stringtext4
  6341  102F                     __pstringtext4:
  6342  102F                     STR_1:
  6343  102F  3454               	retlw	84	;'T'
  6344  1030  3465               	retlw	101	;'e'
  6345  1031  346D               	retlw	109	;'m'
  6346  1032  3470               	retlw	112	;'p'
  6347  1033  3400               	retlw	0
  6348                           
  6349                           	psect	stringtext5
  6350  0000                     __pstringtext5:
  6351                           
  6352                           	psect	cinit
  6353  001A                     start_initialization:	
  6354                           ; #config settings
  6355                           
  6356  001A                     __initialization:
  6357                           
  6358                           ; Clear objects allocated to COMMON
  6359  001A  01F5               	clrf	__pbssCOMMON& (0+127)
  6360  001B  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
  6361  001C  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
  6362  001D  01F8               	clrf	(__pbssCOMMON+3)& (0+127)
  6363                           
  6364                           ; Clear objects allocated to BANK1
  6365  001E  30C6               	movlw	low __pbssBANK1
  6366  001F  0084               	movwf	4
  6367  0020  3000               	movlw	high __pbssBANK1
  6368  0021  0085               	movwf	5
  6369  0022  3021               	movlw	33
  6370  0023  3189  2112  3180   	fcall	clear_ram0
  6371                           
  6372                           ; Clear objects allocated to BANK2
  6373  0026  3020               	movlw	low __pbssBANK2
  6374  0027  0084               	movwf	4
  6375  0028  3001               	movlw	high __pbssBANK2
  6376  0029  0085               	movwf	5
  6377  002A  3020               	movlw	32
  6378  002B  3189  2112  3180   	fcall	clear_ram0
  6379  002E                     end_of_initialization:	
  6380                           ;End of C runtime variable initialization code
  6381                           
  6382  002E                     __end_of__initialization:
  6383  002E  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6384  002F  0020               	movlb	0
  6385  0030  318D  2DC8         	ljmp	_main	;jump to C main() function
  6386                           
  6387                           	psect	bssCOMMON
  6388  0075                     __pbssCOMMON:
  6389  0075                     _prec:
  6390  0075                     	ds	2
  6391  0077                     _flags:
  6392  0077                     	ds	2
  6393                           
  6394                           	psect	bssBANK1
  6395  00C6                     __pbssBANK1:
  6396  00C6                     _I2C1_Status:
  6397  00C6                     	ds	29
  6398  00E3                     _nout:
  6399  00E3                     	ds	2
  6400  00E5                     _width:
  6401  00E5                     	ds	2
  6402                           
  6403                           	psect	bssBANK2
  6404  0120                     __pbssBANK2:
  6405  0120                     _dbuf:
  6406  0120                     	ds	32
  6407                           
  6408                           	psect	clrtext
  6409  0912                     clear_ram0:	
  6410                           ;	Called with FSR0 containing the base address, and
  6411                           ;	WREG with the size to clear
  6412                           
  6413  0912  0064               	clrwdt	;clear the watchdog before getting into this loop
  6414  0913                     clrloop0:
  6415  0913  0180               	clrf	0	;clear RAM location pointed to by FSR
  6416  0914  3101               	addfsr 0,1
  6417  0915  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  6418  0916  2913               	goto	clrloop0	;have we reached the end yet?
  6419  0917  3400               	retlw	0	;all done for this memory range, return
  6420                           
  6421                           	psect	cstackBANK1
  6422  00A0                     __pcstackBANK1:
  6423  00A0                     ?_vfprintf:
  6424  00A0                     vfprintf@fmt:	
  6425                           ; 2 bytes @ 0x0
  6426                           
  6427                           
  6428                           ; 2 bytes @ 0x0
  6429  00A0                     	ds	2
  6430  00A2                     vfprintf@ap:
  6431                           
  6432                           ; 1 bytes @ 0x2
  6433  00A2                     	ds	1
  6434  00A3                     vfprintf@fp:
  6435                           
  6436                           ; 1 bytes @ 0x3
  6437  00A3                     	ds	1
  6438  00A4                     vfprintf@cfmt:
  6439                           
  6440                           ; 2 bytes @ 0x4
  6441  00A4                     	ds	2
  6442  00A6                     ?_sprintf:
  6443  00A6                     sprintf@fmt:	
  6444                           ; 2 bytes @ 0x6
  6445                           
  6446                           
  6447                           ; 2 bytes @ 0x6
  6448  00A6                     	ds	4
  6449  00AA                     ??_sprintf:
  6450                           
  6451                           ; 1 bytes @ 0xA
  6452  00AA                     	ds	1
  6453  00AB                     sprintf@s:
  6454                           
  6455                           ; 1 bytes @ 0xB
  6456  00AB                     	ds	1
  6457  00AC                     sprintf@ap:
  6458                           
  6459                           ; 1 bytes @ 0xC
  6460  00AC                     	ds	1
  6461  00AD                     sprintf@f:
  6462                           
  6463                           ; 5 bytes @ 0xD
  6464  00AD                     	ds	5
  6465  00B2                     ??_main:
  6466                           
  6467                           ; 1 bytes @ 0x12
  6468  00B2                     	ds	2
  6469  00B4                     main@buf:
  6470                           
  6471                           ; 17 bytes @ 0x14
  6472  00B4                     	ds	17
  6473  00C5                     main@c:
  6474                           
  6475                           ; 1 bytes @ 0x25
  6476  00C5                     	ds	1
  6477                           
  6478                           	psect	cstackCOMMON
  6479  0070                     __pcstackCOMMON:
  6480  0070                     ?_PMD_Initialize:
  6481  0070                     ?_I2C1_Initialize:	
  6482                           ; 1 bytes @ 0x0
  6483                           
  6484  0070                     ?_OSCILLATOR_Initialize:	
  6485                           ; 1 bytes @ 0x0
  6486                           
  6487  0070                     ?_ADCC_Initialize:	
  6488                           ; 1 bytes @ 0x0
  6489                           
  6490  0070                     ?_TMR1_Initialize:	
  6491                           ; 1 bytes @ 0x0
  6492                           
  6493  0070                     ?_TMR1_ISR:	
  6494                           ; 1 bytes @ 0x0
  6495                           
  6496  0070                     ?_TMR1_DefaultInterruptHandler:	
  6497                           ; 1 bytes @ 0x0
  6498                           
  6499  0070                     ??_TMR1_DefaultInterruptHandler:	
  6500                           ; 1 bytes @ 0x0
  6501                           
  6502  0070                     ?_TMR1_CallBack:	
  6503                           ; 1 bytes @ 0x0
  6504                           
  6505  0070                     ?_putch:	
  6506                           ; 1 bytes @ 0x0
  6507                           
  6508  0070                     ?_OpenI2C:	
  6509                           ; 1 bytes @ 0x0
  6510                           
  6511  0070                     ?_ReadI2C:	
  6512                           ; 1 bytes @ 0x0
  6513                           
  6514  0070                     ?_WriteI2C:	
  6515                           ; 1 bytes @ 0x0
  6516                           
  6517  0070                     ?_LCDsend:	
  6518                           ; 1 bytes @ 0x0
  6519                           
  6520  0070                     ?_LCDrecv:	
  6521                           ; 1 bytes @ 0x0
  6522                           
  6523  0070                     ?_LCDinit:	
  6524                           ; 1 bytes @ 0x0
  6525                           
  6526  0070                     ?_LCDcmd:	
  6527                           ; 1 bytes @ 0x0
  6528                           
  6529  0070                     ?_LCDchar:	
  6530                           ; 1 bytes @ 0x0
  6531                           
  6532  0070                     ?_PIN_MANAGER_Initialize:	
  6533                           ; 1 bytes @ 0x0
  6534                           
  6535  0070                     ?_SYSTEM_Initialize:	
  6536                           ; 1 bytes @ 0x0
  6537                           
  6538  0070                     ?_INTERRUPT_InterruptManager:	
  6539                           ; 1 bytes @ 0x0
  6540                           
  6541  0070                     ?_TMR1_WriteTimer:	
  6542                           ; 1 bytes @ 0x0
  6543                           
  6544  0070                     ?_S1:	
  6545                           ; 1 bytes @ 0x0
  6546                           
  6547  0070                     ?_timerInterrupt:	
  6548                           ; 1 bytes @ 0x0
  6549                           
  6550  0070                     ?_readTC74:	
  6551                           ; 1 bytes @ 0x0
  6552                           
  6553  0070                     ?_main:	
  6554                           ; 1 bytes @ 0x0
  6555                           
  6556  0070                     ?_ADCC_GetSingleConversion:	
  6557                           ; 1 bytes @ 0x0
  6558                           
  6559  0070                     putch@c:	
  6560                           ; 2 bytes @ 0x0
  6561                           
  6562  0070                     TMR1_WriteTimer@timerVal:	
  6563                           ; 1 bytes @ 0x0
  6564                           
  6565                           
  6566                           ; 2 bytes @ 0x0
  6567  0070                     	ds	2
  6568  0072                     ??_TMR1_WriteTimer:
  6569  0072                     ??_ADCC_GetSingleConversion:	
  6570                           ; 1 bytes @ 0x2
  6571                           
  6572  0072                     ADCC_GetSingleConversion@channel:	
  6573                           ; 1 bytes @ 0x2
  6574                           
  6575                           
  6576                           ; 1 bytes @ 0x2
  6577  0072                     	ds	1
  6578  0073                     ??_timerInterrupt:
  6579  0073                     timerInterrupt@value:	
  6580                           ; 1 bytes @ 0x3
  6581                           
  6582                           
  6583                           ; 2 bytes @ 0x3
  6584  0073                     	ds	2
  6585  0075                     ??_PMD_Initialize:
  6586  0075                     ??_I2C1_Initialize:	
  6587                           ; 1 bytes @ 0x5
  6588                           
  6589  0075                     ??_OSCILLATOR_Initialize:	
  6590                           ; 1 bytes @ 0x5
  6591                           
  6592  0075                     ??_ADCC_Initialize:	
  6593                           ; 1 bytes @ 0x5
  6594                           
  6595  0075                     ??_TMR1_Initialize:	
  6596                           ; 1 bytes @ 0x5
  6597                           
  6598  0075                     ??_TMR1_ISR:	
  6599                           ; 1 bytes @ 0x5
  6600                           
  6601  0075                     ??_TMR1_SetInterruptHandler:	
  6602                           ; 1 bytes @ 0x5
  6603                           
  6604  0075                     ??_TMR1_CallBack:	
  6605                           ; 1 bytes @ 0x5
  6606                           
  6607  0075                     ??_putch:	
  6608                           ; 1 bytes @ 0x5
  6609                           
  6610  0075                     ??_OpenI2C:	
  6611                           ; 1 bytes @ 0x5
  6612                           
  6613  0075                     ??_LCDcmd:	
  6614                           ; 1 bytes @ 0x5
  6615                           
  6616  0075                     ??_LCDchar:	
  6617                           ; 1 bytes @ 0x5
  6618                           
  6619  0075                     ??_LCDbusy:	
  6620                           ; 1 bytes @ 0x5
  6621                           
  6622  0075                     ??_PIN_MANAGER_Initialize:	
  6623                           ; 1 bytes @ 0x5
  6624                           
  6625  0075                     ??_SYSTEM_Initialize:	
  6626                           ; 1 bytes @ 0x5
  6627                           
  6628  0075                     ??_INTERRUPT_InterruptManager:	
  6629                           ; 1 bytes @ 0x5
  6630                           
  6631  0075                     ??_DATAEE_WriteByte:	
  6632                           ; 1 bytes @ 0x5
  6633                           
  6634  0075                     ??_DATAEE_ReadByte:	
  6635                           ; 1 bytes @ 0x5
  6636                           
  6637  0075                     ??_S1:	
  6638                           ; 1 bytes @ 0x5
  6639                           
  6640  0075                     ??___wmul:	
  6641                           ; 1 bytes @ 0x5
  6642                           
  6643                           
  6644                           	psect	cstackBANK0
  6645  0020                     __pcstackBANK0:	
  6646                           ; 1 bytes @ 0x5
  6647                           
  6648  0020                     ?_TMR1_SetInterruptHandler:
  6649  0020                     ??_ReadI2C:	
  6650                           ; 1 bytes @ 0x0
  6651                           
  6652  0020                     ??_WriteI2C:	
  6653                           ; 1 bytes @ 0x0
  6654                           
  6655  0020                     ?_DATAEE_WriteByte:	
  6656                           ; 1 bytes @ 0x0
  6657                           
  6658  0020                     ?_DATAEE_ReadByte:	
  6659                           ; 1 bytes @ 0x0
  6660                           
  6661  0020                     ?_fputc:	
  6662                           ; 1 bytes @ 0x0
  6663                           
  6664  0020                     ?_strlen:	
  6665                           ; 2 bytes @ 0x0
  6666                           
  6667  0020                     ?_isdigit:	
  6668                           ; 2 bytes @ 0x0
  6669                           
  6670  0020                     ?_isspace:	
  6671                           ; 2 bytes @ 0x0
  6672                           
  6673  0020                     ?___wmul:	
  6674                           ; 2 bytes @ 0x0
  6675                           
  6676  0020                     ?___aodiv:	
  6677                           ; 2 bytes @ 0x0
  6678                           
  6679  0020                     ?___aomod:	
  6680                           ; 8 bytes @ 0x0
  6681                           
  6682  0020                     TMR1_SetInterruptHandler@InterruptHandler:	
  6683                           ; 8 bytes @ 0x0
  6684                           
  6685  0020                     DATAEE_WriteByte@bAdd:	
  6686                           ; 2 bytes @ 0x0
  6687                           
  6688  0020                     DATAEE_ReadByte@bAdd:	
  6689                           ; 2 bytes @ 0x0
  6690                           
  6691  0020                     ___wmul@multiplier:	
  6692                           ; 2 bytes @ 0x0
  6693                           
  6694  0020                     isdigit@c:	
  6695                           ; 2 bytes @ 0x0
  6696                           
  6697  0020                     isspace@c:	
  6698                           ; 2 bytes @ 0x0
  6699                           
  6700  0020                     fputc@c:	
  6701                           ; 2 bytes @ 0x0
  6702                           
  6703  0020                     ___aodiv@divisor:	
  6704                           ; 2 bytes @ 0x0
  6705                           
  6706  0020                     ___aomod@divisor:	
  6707                           ; 8 bytes @ 0x0
  6708                           
  6709                           
  6710                           ; 8 bytes @ 0x0
  6711  0020                     	ds	1
  6712  0021                     WriteI2C@data_out:
  6713                           
  6714                           ; 1 bytes @ 0x1
  6715  0021                     	ds	1
  6716  0022                     ??_strlen:
  6717  0022                     ??_isdigit:	
  6718                           ; 1 bytes @ 0x2
  6719                           
  6720  0022                     ??_isspace:	
  6721                           ; 1 bytes @ 0x2
  6722                           
  6723  0022                     ??_LCDsend:	
  6724                           ; 1 bytes @ 0x2
  6725                           
  6726  0022                     ??_LCDrecv:	
  6727                           ; 1 bytes @ 0x2
  6728                           
  6729  0022                     ?_LCDsend2x4:	
  6730                           ; 1 bytes @ 0x2
  6731                           
  6732  0022                     ??_readTC74:	
  6733                           ; 1 bytes @ 0x2
  6734                           
  6735  0022                     LCDsend2x4@mode:	
  6736                           ; 1 bytes @ 0x2
  6737                           
  6738  0022                     DATAEE_WriteByte@bData:	
  6739                           ; 1 bytes @ 0x2
  6740                           
  6741  0022                     fputc@fp:	
  6742                           ; 1 bytes @ 0x2
  6743                           
  6744  0022                     ___wmul@multiplicand:	
  6745                           ; 1 bytes @ 0x2
  6746                           
  6747                           
  6748                           ; 2 bytes @ 0x2
  6749  0022                     	ds	1
  6750  0023                     ??_fputc:
  6751  0023                     ??_LCDsend2x4:	
  6752                           ; 1 bytes @ 0x3
  6753                           
  6754  0023                     LCDsend@c:	
  6755                           ; 1 bytes @ 0x3
  6756                           
  6757  0023                     DATAEE_WriteByte@GIEBitValue:	
  6758                           ; 1 bytes @ 0x3
  6759                           
  6760  0023                     readTC74@value:	
  6761                           ; 1 bytes @ 0x3
  6762                           
  6763  0023                     strlen@a:	
  6764                           ; 1 bytes @ 0x3
  6765                           
  6766                           
  6767                           ; 1 bytes @ 0x3
  6768  0023                     	ds	1
  6769  0024                     LCDrecv@hc:
  6770  0024                     _isspace$2855:	
  6771                           ; 1 bytes @ 0x4
  6772                           
  6773  0024                     strlen@s:	
  6774                           ; 1 bytes @ 0x4
  6775                           
  6776  0024                     ___wmul@product:	
  6777                           ; 1 bytes @ 0x4
  6778                           
  6779                           
  6780                           ; 2 bytes @ 0x4
  6781  0024                     	ds	1
  6782  0025                     LCDrecv@lc:
  6783  0025                     LCDsend2x4@c:	
  6784                           ; 1 bytes @ 0x5
  6785                           
  6786                           
  6787                           ; 1 bytes @ 0x5
  6788  0025                     	ds	1
  6789  0026                     ?_atoi:
  6790  0026                     LCDrecv@mode:	
  6791                           ; 2 bytes @ 0x6
  6792                           
  6793  0026                     LCDsend2x4@hc:	
  6794                           ; 1 bytes @ 0x6
  6795                           
  6796  0026                     atoi@s:	
  6797                           ; 1 bytes @ 0x6
  6798                           
  6799                           
  6800                           ; 2 bytes @ 0x6
  6801  0026                     	ds	1
  6802  0027                     ?_LCDbusy:
  6803  0027                     LCDsend2x4@lc:	
  6804                           ; 2 bytes @ 0x7
  6805                           
  6806                           
  6807                           ; 1 bytes @ 0x7
  6808  0027                     	ds	1
  6809  0028                     ??_atoi:
  6810  0028                     ??_LCDinit:	
  6811                           ; 1 bytes @ 0x8
  6812                           
  6813  0028                     ?_fputs:	
  6814                           ; 1 bytes @ 0x8
  6815                           
  6816  0028                     LCDcmd@c:	
  6817                           ; 2 bytes @ 0x8
  6818                           
  6819  0028                     LCDchar@c:	
  6820                           ; 1 bytes @ 0x8
  6821                           
  6822  0028                     fputs@fp:	
  6823                           ; 1 bytes @ 0x8
  6824                           
  6825  0028                     ___aodiv@dividend:	
  6826                           ; 1 bytes @ 0x8
  6827                           
  6828  0028                     ___aomod@dividend:	
  6829                           ; 8 bytes @ 0x8
  6830                           
  6831                           
  6832                           ; 8 bytes @ 0x8
  6833  0028                     	ds	1
  6834  0029                     ??_fputs:
  6835  0029                     ?_LCDstr:	
  6836                           ; 1 bytes @ 0x9
  6837                           
  6838  0029                     ?_LCDpos:	
  6839                           ; 1 bytes @ 0x9
  6840                           
  6841  0029                     LCDpos@c:	
  6842                           ; 1 bytes @ 0x9
  6843                           
  6844  0029                     LCDstr@p:	
  6845                           ; 1 bytes @ 0x9
  6846                           
  6847                           
  6848                           ; 2 bytes @ 0x9
  6849  0029                     	ds	1
  6850  002A                     ??_LCDpos:
  6851                           
  6852                           ; 1 bytes @ 0xA
  6853  002A                     	ds	1
  6854  002B                     ??_LCDstr:
  6855  002B                     LCDpos@l:	
  6856                           ; 1 bytes @ 0xB
  6857                           
  6858                           
  6859                           ; 1 bytes @ 0xB
  6860  002B                     	ds	1
  6861  002C                     LCDpos@p:
  6862  002C                     fputs@c:	
  6863                           ; 1 bytes @ 0xC
  6864                           
  6865  002C                     atoi@neg:	
  6866                           ; 1 bytes @ 0xC
  6867                           
  6868                           
  6869                           ; 2 bytes @ 0xC
  6870  002C                     	ds	1
  6871  002D                     fputs@i:
  6872                           
  6873                           ; 2 bytes @ 0xD
  6874  002D                     	ds	1
  6875  002E                     LCDstr@c:
  6876  002E                     _atoi$2837:	
  6877                           ; 1 bytes @ 0xE
  6878                           
  6879                           
  6880                           ; 2 bytes @ 0xE
  6881  002E                     	ds	1
  6882  002F                     fputs@s:
  6883                           
  6884                           ; 1 bytes @ 0xF
  6885  002F                     	ds	1
  6886  0030                     ??___aodiv:
  6887  0030                     ??___aomod:	
  6888                           ; 1 bytes @ 0x10
  6889                           
  6890  0030                     ?_pad:	
  6891                           ; 1 bytes @ 0x10
  6892                           
  6893  0030                     pad@buf:	
  6894                           ; 2 bytes @ 0x10
  6895                           
  6896  0030                     _atoi$2839:	
  6897                           ; 1 bytes @ 0x10
  6898                           
  6899                           
  6900                           ; 2 bytes @ 0x10
  6901  0030                     	ds	1
  6902  0031                     ___aodiv@counter:
  6903  0031                     ___aomod@counter:	
  6904                           ; 1 bytes @ 0x11
  6905                           
  6906  0031                     pad@p:	
  6907                           ; 1 bytes @ 0x11
  6908                           
  6909                           
  6910                           ; 2 bytes @ 0x11
  6911  0031                     	ds	1
  6912  0032                     ___aodiv@sign:
  6913  0032                     ___aomod@sign:	
  6914                           ; 1 bytes @ 0x12
  6915                           
  6916  0032                     _atoi$2838:	
  6917                           ; 1 bytes @ 0x12
  6918                           
  6919                           
  6920                           ; 1 bytes @ 0x12
  6921  0032                     	ds	1
  6922  0033                     ??_pad:
  6923  0033                     ?_abs:	
  6924                           ; 1 bytes @ 0x13
  6925                           
  6926  0033                     abs@a:	
  6927                           ; 2 bytes @ 0x13
  6928                           
  6929  0033                     atoi@n:	
  6930                           ; 2 bytes @ 0x13
  6931                           
  6932  0033                     ___aodiv@quotient:	
  6933                           ; 2 bytes @ 0x13
  6934                           
  6935                           
  6936                           ; 8 bytes @ 0x13
  6937  0033                     	ds	1
  6938  0034                     pad@i:
  6939                           
  6940                           ; 2 bytes @ 0x14
  6941  0034                     	ds	1
  6942  0035                     ??_abs:
  6943                           
  6944                           ; 1 bytes @ 0x15
  6945  0035                     	ds	1
  6946  0036                     pad@w:
  6947                           
  6948                           ; 2 bytes @ 0x16
  6949  0036                     	ds	2
  6950  0038                     pad@fp:
  6951                           
  6952                           ; 1 bytes @ 0x18
  6953  0038                     	ds	3
  6954  003B                     ?_dtoa:
  6955  003B                     dtoa@d:	
  6956                           ; 2 bytes @ 0x1B
  6957                           
  6958                           
  6959                           ; 8 bytes @ 0x1B
  6960  003B                     	ds	8
  6961  0043                     ??_dtoa:
  6962                           
  6963                           ; 1 bytes @ 0x23
  6964  0043                     	ds	3
  6965  0046                     dtoa@fp:
  6966                           
  6967                           ; 1 bytes @ 0x26
  6968  0046                     	ds	1
  6969  0047                     _dtoa$2802:
  6970                           
  6971                           ; 2 bytes @ 0x27
  6972  0047                     	ds	2
  6973  0049                     dtoa@p:
  6974                           
  6975                           ; 2 bytes @ 0x29
  6976  0049                     	ds	2
  6977  004B                     dtoa@w:
  6978                           
  6979                           ; 2 bytes @ 0x2B
  6980  004B                     	ds	2
  6981  004D                     dtoa@s:
  6982                           
  6983                           ; 2 bytes @ 0x2D
  6984  004D                     	ds	2
  6985  004F                     dtoa@n:
  6986                           
  6987                           ; 8 bytes @ 0x2F
  6988  004F                     	ds	8
  6989  0057                     dtoa@i:
  6990                           
  6991                           ; 2 bytes @ 0x37
  6992  0057                     	ds	2
  6993  0059                     ?_vfpfcnvrt:
  6994  0059                     vfpfcnvrt@fmt:	
  6995                           ; 2 bytes @ 0x39
  6996                           
  6997                           
  6998                           ; 1 bytes @ 0x39
  6999  0059                     	ds	1
  7000  005A                     vfpfcnvrt@ap:
  7001                           
  7002                           ; 1 bytes @ 0x3A
  7003  005A                     	ds	1
  7004  005B                     ??_vfpfcnvrt:
  7005                           
  7006                           ; 1 bytes @ 0x3B
  7007  005B                     	ds	6
  7008  0061                     vfpfcnvrt@ll:
  7009                           
  7010                           ; 8 bytes @ 0x41
  7011  0061                     	ds	8
  7012  0069                     vfpfcnvrt@done:
  7013                           
  7014                           ; 2 bytes @ 0x49
  7015  0069                     	ds	2
  7016  006B                     _vfpfcnvrt$2817:
  7017                           
  7018                           ; 2 bytes @ 0x4B
  7019  006B                     	ds	2
  7020  006D                     vfpfcnvrt@fp:
  7021                           
  7022                           ; 1 bytes @ 0x4D
  7023  006D                     	ds	1
  7024  006E                     ??_vfprintf:
  7025                           
  7026                           ; 1 bytes @ 0x4E
  7027  006E                     	ds	2
  7028                           
  7029                           	psect	maintext
  7030  0DC8                     __pmaintext:	
  7031 ;;
  7032 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  7033 ;;
  7034 ;; *************** function _main *****************
  7035 ;; Defined at:
  7036 ;;		line 110 in file "main.c"
  7037 ;; Parameters:    Size  Location     Type
  7038 ;;		None
  7039 ;; Auto vars:     Size  Location     Type
  7040 ;;  buf            17   20[BANK1 ] unsigned char [17]
  7041 ;;  dataeeAddr      2    0        unsigned short 
  7042 ;;  dataeeData      1    0        unsigned char 
  7043 ;;  c               1   37[BANK1 ] unsigned char 
  7044 ;;  FILIPE          1    0        unsigned char 
  7045 ;; Return value:  Size  Location     Type
  7046 ;;                  1    wreg      void 
  7047 ;; Registers used:
  7048 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7049 ;; Tracked objects:
  7050 ;;		On entry : B1F/0
  7051 ;;		On exit  : 0/0
  7052 ;;		Unchanged: 0/0
  7053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7055 ;;      Locals:         0       0      18       0       0       0       0       0       0       0       0       0       
      +0       0
  7056 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  7057 ;;      Totals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0
  7058 ;;Total ram usage:       20 bytes
  7059 ;; Hardware stack levels required when called: 13
  7060 ;; This function calls:
  7061 ;;		_DATAEE_ReadByte
  7062 ;;		_DATAEE_WriteByte
  7063 ;;		_LCDbusy
  7064 ;;		_LCDcmd
  7065 ;;		_LCDinit
  7066 ;;		_LCDpos
  7067 ;;		_LCDstr
  7068 ;;		_OpenI2C
  7069 ;;		_S1
  7070 ;;		_SYSTEM_Initialize
  7071 ;;		_TMR1_SetInterruptHandler
  7072 ;;		_readTC74
  7073 ;;		_sprintf
  7074 ;; This function is called by:
  7075 ;;		Startup code after reset
  7076 ;; This function uses a non-reentrant model
  7077 ;;
  7078                           
  7079                           
  7080                           ;psect for function _main
  7081  0DC8                     _main:
  7082  0DC8                     l5974:	
  7083                           ;incstack = 0
  7084                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7085                           
  7086                           
  7087                           ;main.c: 112:     unsigned char c;;main.c: 113:     char buf[17];;main.c: 115:     SYSTE
      +                          M_Initialize();
  7088  0DC8  3187  27EB  318D   	fcall	_SYSTEM_Initialize
  7089  0DCB                     l5976:
  7090                           
  7091                           ;main.c: 121:     (INTCONbits.GIE = 1);
  7092  0DCB  178B               	bsf	11,7	;volatile
  7093  0DCC                     l5978:
  7094                           
  7095                           ;main.c: 124:     (INTCONbits.PEIE = 1);
  7096  0DCC  170B               	bsf	11,6	;volatile
  7097                           
  7098                           ;main.c: 132:     TMR1_SetInterruptHandler(timerInterrupt);
  7099  0DCD  302C               	movlw	low _timerInterrupt
  7100  0DCE  0020               	movlb	0	; select bank0
  7101  0DCF  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
  7102  0DD0  300B               	movlw	high _timerInterrupt
  7103  0DD1  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
  7104  0DD2  3189  213A  318D   	fcall	_TMR1_SetInterruptHandler
  7105  0DD5                     l5980:
  7106  0DD5  0020               	movlb	0	; select bank0
  7107  0DD6  1716               	bsf	22,6	;volatile
  7108  0DD7                     l1277:
  7109                           
  7110                           ;main.c: 136:     OpenI2C();
  7111  0DD7  3189  2165  318D   	fcall	_OpenI2C
  7112                           
  7113                           ;main.c: 141:     LCDinit();
  7114  0DDA  318D  2545  318D   	fcall	_LCDinit
  7115  0DDD                     l5982:
  7116  0DDD                     l5984:
  7117                           
  7118                           ;main.c: 145:     DATAEE_WriteByte(dataeeAddr,dataeeData);
  7119  0DDD  3010               	movlw	16
  7120  0DDE  0020               	movlb	0	; select bank0
  7121  0DDF  00A0               	movwf	DATAEE_WriteByte@bAdd
  7122  0DE0  30F0               	movlw	240
  7123  0DE1  00A1               	movwf	DATAEE_WriteByte@bAdd+1
  7124  0DE2  3055               	movlw	85
  7125  0DE3  0021               	movlb	1	; select bank1
  7126  0DE4  00B2               	movwf	??_main^(0+128)
  7127  0DE5  0832               	movf	??_main^(0+128),w
  7128  0DE6  0020               	movlb	0	; select bank0
  7129  0DE7  00A2               	movwf	DATAEE_WriteByte@bData
  7130  0DE8  318B  2308  318D   	fcall	_DATAEE_WriteByte
  7131  0DEB                     l5986:
  7132                           
  7133                           ;main.c: 147:     __nop();
  7134  0DEB  0000               	nop
  7135  0DEC                     l5988:
  7136  0DEC  3010               	movlw	16
  7137  0DED  0020               	movlb	0	; select bank0
  7138  0DEE  00A0               	movwf	DATAEE_ReadByte@bAdd
  7139  0DEF  30F0               	movlw	240
  7140  0DF0  00A1               	movwf	DATAEE_ReadByte@bAdd+1
  7141  0DF1  3189  2180  318D   	fcall	_DATAEE_ReadByte
  7142  0DF4                     l5990:
  7143                           
  7144                           ;main.c: 149:     __nop();
  7145  0DF4  0000               	nop
  7146  0DF5                     l5992:
  7147                           
  7148                           ;main.c: 151:     {;main.c: 152:         S1();
  7149  0DF5  3189  214D  318D   	fcall	_S1
  7150  0DF8                     l5994:
  7151                           
  7152                           ;main.c: 154:         c = readTC74();
  7153  0DF8  3184  24BF  318D   	fcall	_readTC74
  7154  0DFB  0021               	movlb	1	; select bank1
  7155  0DFC  00B2               	movwf	??_main^(0+128)
  7156  0DFD  0832               	movf	??_main^(0+128),w
  7157  0DFE  00C5               	movwf	main@c^(0+128)
  7158  0DFF                     l5996:
  7159                           
  7160                           ;main.c: 155:         LCDcmd(0x80);
  7161  0DFF  3080               	movlw	128
  7162  0E00  3189  2118  318D   	fcall	_LCDcmd
  7163  0E03                     l5998:	
  7164                           ;main.c: 156:         while (LCDbusy());
  7165                           
  7166  0E03  3189  21B2  318D   	fcall	_LCDbusy
  7167  0E06  0020               	movlb	0	; select bank0
  7168  0E07  0827               	movf	?_LCDbusy,w
  7169  0E08  0428               	iorwf	?_LCDbusy+1,w
  7170  0E09  1D03               	btfss	3,2
  7171  0E0A  2E0C               	goto	u5731
  7172  0E0B  2E0D               	goto	u5730
  7173  0E0C                     u5731:
  7174  0E0C  2E03               	goto	l5998
  7175  0E0D                     u5730:
  7176  0E0D                     l6000:
  7177                           
  7178                           ;main.c: 157:         LCDstr("Temp");
  7179  0E0D  302F               	movlw	low (STR_1| (0+32768))
  7180  0E0E  00A9               	movwf	LCDstr@p
  7181  0E0F  3090               	movlw	high (STR_1| (0+32768))
  7182  0E10  00AA               	movwf	LCDstr@p+1
  7183  0E11  3189  21F5  318D   	fcall	_LCDstr
  7184  0E14                     l6002:
  7185                           
  7186                           ;main.c: 158:         LCDpos(0,8);
  7187  0E14  3008               	movlw	8
  7188  0E15  0021               	movlb	1	; select bank1
  7189  0E16  00B2               	movwf	??_main^(0+128)
  7190  0E17  0832               	movf	??_main^(0+128),w
  7191  0E18  0020               	movlb	0	; select bank0
  7192  0E19  00A9               	movwf	LCDpos@c
  7193  0E1A  3000               	movlw	0
  7194  0E1B  318A  222B  318D   	fcall	_LCDpos
  7195  0E1E                     l6004:	
  7196                           ;main.c: 159:         while (LCDbusy());
  7197                           
  7198  0E1E  3189  21B2  318D   	fcall	_LCDbusy
  7199  0E21  0020               	movlb	0	; select bank0
  7200  0E22  0827               	movf	?_LCDbusy,w
  7201  0E23  0428               	iorwf	?_LCDbusy+1,w
  7202  0E24  1D03               	btfss	3,2
  7203  0E25  2E27               	goto	u5741
  7204  0E26  2E28               	goto	u5740
  7205  0E27                     u5741:
  7206  0E27  2E1E               	goto	l6004
  7207  0E28                     u5740:
  7208  0E28                     l6006:
  7209                           
  7210                           ;main.c: 160:         LCDstr("STR-RTS");
  7211  0E28  3020               	movlw	low (STR_2| (0+32768))
  7212  0E29  00A9               	movwf	LCDstr@p
  7213  0E2A  3090               	movlw	high (STR_2| (0+32768))
  7214  0E2B  00AA               	movwf	LCDstr@p+1
  7215  0E2C  3189  21F5  318D   	fcall	_LCDstr
  7216  0E2F                     l6008:
  7217                           
  7218                           ;main.c: 161:         LCDcmd(0xc0);
  7219  0E2F  30C0               	movlw	192
  7220  0E30  3189  2118  318D   	fcall	_LCDcmd
  7221  0E33                     l6010:
  7222                           
  7223                           ;main.c: 162:         sprintf(buf, "%02d C", c);
  7224  0E33  3028               	movlw	low (STR_3| (0+32768))
  7225  0E34  0021               	movlb	1	; select bank1
  7226  0E35  00A6               	movwf	sprintf@fmt^(0+128)
  7227  0E36  3090               	movlw	high (STR_3| (0+32768))
  7228  0E37  00A7               	movwf	(sprintf@fmt^(0+128)+1)
  7229  0E38  0845               	movf	main@c^(0+128),w
  7230  0E39  00B2               	movwf	??_main^(0+128)
  7231  0E3A  01B3               	clrf	(??_main^(0+128)+1)
  7232  0E3B  0832               	movf	??_main^(0+128),w
  7233  0E3C  00A8               	movwf	(?_sprintf^(0+128)+2)
  7234  0E3D  0833               	movf	(??_main+1)^(0+128),w
  7235  0E3E  00A9               	movwf	((?_sprintf+1)^(0+128)+2)
  7236  0E3F  30B4               	movlw	(low (main@buf| 0))& (0+255)
  7237  0E40  318A  22E5  318D   	fcall	_sprintf
  7238  0E43                     l6012:	
  7239                           ;main.c: 163:         while (LCDbusy());
  7240                           
  7241  0E43  3189  21B2  318D   	fcall	_LCDbusy
  7242  0E46  0020               	movlb	0	; select bank0
  7243  0E47  0827               	movf	?_LCDbusy,w
  7244  0E48  0428               	iorwf	?_LCDbusy+1,w
  7245  0E49  1D03               	btfss	3,2
  7246  0E4A  2E4C               	goto	u5751
  7247  0E4B  2E4D               	goto	u5750
  7248  0E4C                     u5751:
  7249  0E4C  2E43               	goto	l6012
  7250  0E4D                     u5750:
  7251  0E4D                     l6014:
  7252                           
  7253                           ;main.c: 164:         LCDstr(buf);
  7254  0E4D  30B4               	movlw	low main@buf
  7255  0E4E  00A9               	movwf	LCDstr@p
  7256  0E4F  3000               	movlw	high main@buf
  7257  0E50  00AA               	movwf	LCDstr@p+1
  7258  0E51  3189  21F5  318D   	fcall	_LCDstr
  7259  0E54                     l6016:
  7260                           
  7261                           ;main.c: 165:         _delay((unsigned long)((2000)*(1000000/4000.0)));
  7262  0E54  3003               	movlw	3
  7263  0E55  0021               	movlb	1	; select bank1
  7264  0E56  00B3               	movwf	(??_main^(0+128)+1)
  7265  0E57  308A               	movlw	138
  7266  0E58  00B2               	movwf	??_main^(0+128)
  7267  0E59  3055               	movlw	85
  7268  0E5A                     u5767:
  7269  0E5A  0B89               	decfsz	9,f
  7270  0E5B  2E5A               	goto	u5767
  7271  0E5C  0BB2               	decfsz	??_main^(0+128),f
  7272  0E5D  2E5A               	goto	u5767
  7273  0E5E  0BB3               	decfsz	(??_main^(0+128)+1),f
  7274  0E5F  2E5A               	goto	u5767
  7275  0E60  3200               	nop2
  7276  0E61  2DF5               	goto	l5992
  7277  0E62  3180  2818         	ljmp	start
  7278  0E64                     __end_of_main:
  7279                           
  7280                           	psect	text1
  7281  0AE5                     __ptext1:	
  7282 ;; *************** function _sprintf *****************
  7283 ;; Defined at:
  7284 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  7285 ;; Parameters:    Size  Location     Type
  7286 ;;  s               1    wreg     PTR unsigned char 
  7287 ;;		 -> main@buf(17), 
  7288 ;;  fmt             2    6[BANK1 ] PTR const unsigned char 
  7289 ;;		 -> STR_3(7), 
  7290 ;; Auto vars:     Size  Location     Type
  7291 ;;  s               1   11[BANK1 ] PTR unsigned char 
  7292 ;;		 -> main@buf(17), 
  7293 ;;  f               5   13[BANK1 ] struct _IO_FILE
  7294 ;;  ret             2    0        int 
  7295 ;;  ap              1   12[BANK1 ] PTR void [1]
  7296 ;;		 -> ?_sprintf(2), 
  7297 ;; Return value:  Size  Location     Type
  7298 ;;                  2    6[BANK1 ] int 
  7299 ;; Registers used:
  7300 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7301 ;; Tracked objects:
  7302 ;;		On entry : 0/0
  7303 ;;		On exit  : 0/0
  7304 ;;		Unchanged: 0/0
  7305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7306 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  7307 ;;      Locals:         0       0       7       0       0       0       0       0       0       0       0       0       
      +0       0
  7308 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0
  7309 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0
  7310 ;;Total ram usage:       12 bytes
  7311 ;; Hardware stack levels used: 1
  7312 ;; Hardware stack levels required when called: 12
  7313 ;; This function calls:
  7314 ;;		_vfprintf
  7315 ;; This function is called by:
  7316 ;;		_main
  7317 ;; This function uses a non-reentrant model
  7318 ;;
  7319                           
  7320                           
  7321                           ;psect for function _sprintf
  7322  0AE5                     _sprintf:
  7323                           
  7324                           ;incstack = 0
  7325                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7326                           ;sprintf@s stored from wreg
  7327  0AE5  0021               	movlb	1	; select bank1
  7328  0AE6  00AB               	movwf	sprintf@s^(0+128)
  7329  0AE7                     l5962:
  7330  0AE7  30A8               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  7331  0AE8  00AA               	movwf	??_sprintf^(0+128)
  7332  0AE9  082A               	movf	??_sprintf^(0+128),w
  7333  0AEA  00AC               	movwf	sprintf@ap^(0+128)
  7334  0AEB  082B               	movf	sprintf@s^(0+128),w
  7335  0AEC  00AA               	movwf	??_sprintf^(0+128)
  7336  0AED  082A               	movf	??_sprintf^(0+128),w
  7337  0AEE  00AD               	movwf	sprintf@f^(0+128)
  7338  0AEF                     l5964:
  7339  0AEF  01AE               	clrf	(sprintf@f^(0+128)+1)
  7340  0AF0  01AF               	clrf	((sprintf@f+1)^(0+128)+1)
  7341  0AF1                     l5966:
  7342  0AF1  01B0               	clrf	(sprintf@f^(0+128)+3)
  7343  0AF2  01B1               	clrf	((sprintf@f+1)^(0+128)+3)
  7344  0AF3                     l5968:
  7345  0AF3  0827               	movf	(sprintf@fmt+1)^(0+128),w
  7346  0AF4  00A1               	movwf	(vfprintf@fmt+1)^(0+128)
  7347  0AF5  0826               	movf	sprintf@fmt^(0+128),w
  7348  0AF6  00A0               	movwf	vfprintf@fmt^(0+128)
  7349  0AF7  30AC               	movlw	(low (sprintf@ap| 0))& (0+255)
  7350  0AF8  00AA               	movwf	??_sprintf^(0+128)
  7351  0AF9  082A               	movf	??_sprintf^(0+128),w
  7352  0AFA  00A2               	movwf	vfprintf@ap^(0+128)
  7353  0AFB  30AD               	movlw	(low (sprintf@f| 0))& (0+255)
  7354  0AFC  318B  237D  318A   	fcall	_vfprintf
  7355  0AFF                     l5970:
  7356  0AFF  0021               	movlb	1	; select bank1
  7357  0B00  082E               	movf	(sprintf@f^(0+128)+1),w
  7358  0B01  072B               	addwf	sprintf@s^(0+128),w
  7359  0B02  00AA               	movwf	??_sprintf^(0+128)
  7360  0B03  082A               	movf	??_sprintf^(0+128),w
  7361  0B04  0086               	movwf	6
  7362  0B05  0187               	clrf	7
  7363  0B06  0181               	clrf	1
  7364  0B07                     l1905:
  7365  0B07  0008               	return
  7366  0B08                     __end_of_sprintf:
  7367                           
  7368                           	psect	text2
  7369  0B7D                     __ptext2:	
  7370 ;; *************** function _vfprintf *****************
  7371 ;; Defined at:
  7372 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7373 ;; Parameters:    Size  Location     Type
  7374 ;;  fp              1    wreg     PTR struct _IO_FILE
  7375 ;;		 -> sprintf@f(5), 
  7376 ;;  fmt             2    0[BANK1 ] PTR const unsigned char 
  7377 ;;		 -> STR_3(7), 
  7378 ;;  ap              1    2[BANK1 ] PTR PTR void 
  7379 ;;		 -> sprintf@ap(1), 
  7380 ;; Auto vars:     Size  Location     Type
  7381 ;;  fp              1    3[BANK1 ] PTR struct _IO_FILE
  7382 ;;		 -> sprintf@f(5), 
  7383 ;;  cfmt            2    4[BANK1 ] PTR unsigned char 
  7384 ;;		 -> STR_3(7), 
  7385 ;; Return value:  Size  Location     Type
  7386 ;;                  2    0[BANK1 ] int 
  7387 ;; Registers used:
  7388 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7389 ;; Tracked objects:
  7390 ;;		On entry : 0/0
  7391 ;;		On exit  : 0/0
  7392 ;;		Unchanged: 0/0
  7393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7394 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7395 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0
  7396 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7397 ;;      Totals:         0       2       6       0       0       0       0       0       0       0       0       0       
      +0       0
  7398 ;;Total ram usage:        8 bytes
  7399 ;; Hardware stack levels used: 1
  7400 ;; Hardware stack levels required when called: 11
  7401 ;; This function calls:
  7402 ;;		_vfpfcnvrt
  7403 ;; This function is called by:
  7404 ;;		_sprintf
  7405 ;; This function uses a non-reentrant model
  7406 ;;
  7407                           
  7408                           
  7409                           ;psect for function _vfprintf
  7410  0B7D                     _vfprintf:
  7411                           
  7412                           ;incstack = 0
  7413                           ; Regs used in _vfprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7414                           ;vfprintf@fp stored from wreg
  7415  0B7D  0021               	movlb	1	; select bank1
  7416  0B7E  00A3               	movwf	vfprintf@fp^(0+128)
  7417  0B7F                     l5790:
  7418                           
  7419                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  7420  0B7F  0821               	movf	(vfprintf@fmt+1)^(0+128),w
  7421  0B80  00A5               	movwf	(vfprintf@cfmt+1)^(0+128)
  7422  0B81  0820               	movf	vfprintf@fmt^(0+128),w
  7423  0B82  00A4               	movwf	vfprintf@cfmt^(0+128)
  7424  0B83                     l5792:
  7425                           
  7426                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  7427  0B83  01E3               	clrf	_nout^(0+128)
  7428  0B84  01E4               	clrf	(_nout+1)^(0+128)
  7429                           
  7430                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  7431  0B85  2B9E               	goto	l5796
  7432  0B86                     l5794:
  7433                           
  7434                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  7435  0B86  30A4               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  7436  0B87  0020               	movlb	0	; select bank0
  7437  0B88  00EE               	movwf	??_vfprintf
  7438  0B89  086E               	movf	??_vfprintf,w
  7439  0B8A  00D9               	movwf	vfpfcnvrt@fmt
  7440  0B8B  0021               	movlb	1	; select bank1
  7441  0B8C  0822               	movf	vfprintf@ap^(0+128),w
  7442  0B8D  0020               	movlb	0	; select bank0
  7443  0B8E  00EF               	movwf	??_vfprintf+1
  7444  0B8F  086F               	movf	??_vfprintf+1,w
  7445  0B90  00DA               	movwf	vfpfcnvrt@ap
  7446  0B91  0021               	movlb	1	; select bank1
  7447  0B92  0823               	movf	vfprintf@fp^(0+128),w
  7448  0B93  3180  2032  318B   	fcall	_vfpfcnvrt
  7449  0B96  0020               	movlb	0	; select bank0
  7450  0B97  0859               	movf	?_vfpfcnvrt,w
  7451  0B98  0021               	movlb	1	; select bank1
  7452  0B99  07E3               	addwf	_nout^(0+128),f
  7453  0B9A  0020               	movlb	0	; select bank0
  7454  0B9B  085A               	movf	?_vfpfcnvrt+1,w
  7455  0B9C  0021               	movlb	1	; select bank1
  7456  0B9D  3DE4               	addwfc	(_nout+1)^(0+128),f
  7457  0B9E                     l5796:
  7458                           
  7459                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  7460  0B9E  0824               	movf	vfprintf@cfmt^(0+128),w
  7461  0B9F  0084               	movwf	4
  7462  0BA0  0825               	movf	(vfprintf@cfmt+1)^(0+128),w
  7463  0BA1  0085               	movwf	5
  7464  0BA2  0012               	moviw fsr0++
  7465  0BA3  1D03               	btfss	3,2
  7466  0BA4  2BA6               	goto	u5431
  7467  0BA5  2BA7               	goto	u5430
  7468  0BA6                     u5431:
  7469  0BA6  2B86               	goto	l5794
  7470  0BA7                     u5430:
  7471  0BA7                     l5798:
  7472                           
  7473                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  7474  0BA7  0864               	movf	(_nout+1)^(0+128),w
  7475  0BA8  00A1               	movwf	(?_vfprintf+1)^(0+128)
  7476  0BA9  0863               	movf	_nout^(0+128),w
  7477  0BAA  00A0               	movwf	?_vfprintf^(0+128)
  7478  0BAB                     l2003:
  7479  0BAB  0008               	return
  7480  0BAC                     __end_of_vfprintf:
  7481                           
  7482                           	psect	text3
  7483  0032                     __ptext3:	
  7484 ;; *************** function _vfpfcnvrt *****************
  7485 ;; Defined at:
  7486 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  7487 ;; Parameters:    Size  Location     Type
  7488 ;;  fp              1    wreg     PTR struct _IO_FILE
  7489 ;;		 -> sprintf@f(5), 
  7490 ;;  fmt             1   57[BANK0 ] PTR PTR unsigned char 
  7491 ;;		 -> vfprintf@cfmt(2), 
  7492 ;;  ap              1   58[BANK0 ] PTR PTR void 
  7493 ;;		 -> sprintf@ap(1), 
  7494 ;; Auto vars:     Size  Location     Type
  7495 ;;  fp              1   77[BANK0 ] PTR struct _IO_FILE
  7496 ;;		 -> sprintf@f(5), 
  7497 ;;  ll              8   65[BANK0 ] long long 
  7498 ;;  llu             8    0        unsigned long long 
  7499 ;;  f               4    0        unsigned long long 
  7500 ;;  ct              3    0        unsigned char [3]
  7501 ;;  done            2   73[BANK0 ] int 
  7502 ;;  vp              2    0        PTR void 
  7503 ;;  i               2    0        int 
  7504 ;;  cp              2    0        PTR unsigned char 
  7505 ;;  c               1    0        unsigned char 
  7506 ;; Return value:  Size  Location     Type
  7507 ;;                  2   57[BANK0 ] int 
  7508 ;; Registers used:
  7509 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7510 ;; Tracked objects:
  7511 ;;		On entry : 0/0
  7512 ;;		On exit  : 0/0
  7513 ;;		Unchanged: 0/0
  7514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7515 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7516 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7517 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7518 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7519 ;;Total ram usage:       21 bytes
  7520 ;; Hardware stack levels used: 1
  7521 ;; Hardware stack levels required when called: 10
  7522 ;; This function calls:
  7523 ;;		_atoi
  7524 ;;		_dtoa
  7525 ;;		_fputc
  7526 ;;		_isdigit
  7527 ;; This function is called by:
  7528 ;;		_vfprintf
  7529 ;; This function uses a non-reentrant model
  7530 ;;
  7531                           
  7532                           
  7533                           ;psect for function _vfpfcnvrt
  7534  0032                     _vfpfcnvrt:
  7535                           
  7536                           ;incstack = 0
  7537                           ; Regs used in _vfpfcnvrt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7538                           ;vfpfcnvrt@fp stored from wreg
  7539  0032  0020               	movlb	0	; select bank0
  7540  0033  00ED               	movwf	vfpfcnvrt@fp
  7541  0034                     l5596:
  7542                           
  7543                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  7544  0034  0859               	movf	vfpfcnvrt@fmt,w
  7545  0035  0086               	movwf	6
  7546  0036  0187               	clrf	7
  7547  0037  3F40               	moviw [0]fsr1
  7548  0038  00DB               	movwf	??_vfpfcnvrt
  7549  0039  3F41               	moviw [1]fsr1
  7550  003A  00DC               	movwf	??_vfpfcnvrt+1
  7551  003B  085B               	movf	??_vfpfcnvrt,w
  7552  003C  0084               	movwf	4
  7553  003D  085C               	movf	??_vfpfcnvrt+1,w
  7554  003E  0085               	movwf	5
  7555  003F  0012               	moviw fsr0++
  7556  0040  3A25               	xorlw	37
  7557  0041  1D03               	btfss	3,2
  7558  0042  2844               	goto	u4991
  7559  0043  2845               	goto	u4990
  7560  0044                     u4991:
  7561  0044  29AC               	goto	l5676
  7562  0045                     u4990:
  7563  0045                     l5598:
  7564                           
  7565                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  7566  0045  0859               	movf	vfpfcnvrt@fmt,w
  7567  0046  0086               	movwf	6
  7568  0047  0187               	clrf	7
  7569  0048  3001               	movlw	1
  7570  0049  0781               	addwf	1,f
  7571  004A  3141               	addfsr 1,1
  7572  004B  1803               	skipnc
  7573  004C  0A81               	incf	1,f
  7574  004D                     l5600:
  7575                           
  7576                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  7577  004D  0021               	movlb	1	; select bank1
  7578  004E  01E5               	clrf	_width^(0+128)
  7579  004F  01E6               	clrf	(_width+1)^(0+128)
  7580  0050  01F7               	clrf	_flags
  7581  0051  01F8               	clrf	_flags+1
  7582  0052                     l5602:
  7583                           
  7584                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  7585  0052  30FF               	movlw	255
  7586  0053  00F5               	movwf	_prec
  7587  0054  30FF               	movlw	255
  7588  0055  00F6               	movwf	_prec+1
  7589  0056                     l5604:
  7590                           
  7591                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  7592  0056  0020               	movlb	0	; select bank0
  7593  0057  01E9               	clrf	vfpfcnvrt@done
  7594  0058  01EA               	clrf	vfpfcnvrt@done+1
  7595                           
  7596                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  7597  0059  2895               	goto	l5622
  7598  005A                     l1974:	
  7599                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 713:             
      +                              case '-' :
  7600                           
  7601                           
  7602                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  7603  005A  1477               	bsf	_flags,0
  7604  005B                     l5606:
  7605                           
  7606                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  7607  005B  0859               	movf	vfpfcnvrt@fmt,w
  7608  005C  0086               	movwf	6
  7609  005D  0187               	clrf	7
  7610  005E  3001               	movlw	1
  7611  005F  0781               	addwf	1,f
  7612  0060  3141               	addfsr 1,1
  7613  0061  1803               	skipnc
  7614  0062  0A81               	incf	1,f
  7615                           
  7616                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  7617  0063  2895               	goto	l5622
  7618  0064                     l1976:	
  7619                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 717:             
      +                              case '0' :
  7620                           
  7621                           
  7622                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  7623  0064  14F7               	bsf	_flags,1
  7624  0065  285B               	goto	l5606
  7625  0066                     l1977:	
  7626                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 721:             
      +                              case '+' :
  7627                           
  7628                           
  7629                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  7630  0066  1577               	bsf	_flags,2
  7631  0067  285B               	goto	l5606
  7632  0068                     l1978:	
  7633                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 725:             
      +                              case ' ' :
  7634                           
  7635                           
  7636                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  7637  0068  15F7               	bsf	_flags,3
  7638  0069  285B               	goto	l5606
  7639  006A                     l1979:	
  7640                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 729:             
      +                              case '#' :
  7641                           
  7642                           
  7643                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  7644  006A  1677               	bsf	_flags,4
  7645  006B  285B               	goto	l5606
  7646  006C                     l5616:
  7647                           
  7648                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  7649  006C  3001               	movlw	1
  7650  006D  00E9               	movwf	vfpfcnvrt@done
  7651  006E  3000               	movlw	0
  7652  006F  00EA               	movwf	vfpfcnvrt@done+1
  7653                           
  7654                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  7655  0070  2895               	goto	l5622
  7656  0071                     l5620:
  7657  0071  0859               	movf	vfpfcnvrt@fmt,w
  7658  0072  0086               	movwf	6
  7659  0073  0187               	clrf	7
  7660  0074  3F40               	moviw [0]fsr1
  7661  0075  00DB               	movwf	??_vfpfcnvrt
  7662  0076  3F41               	moviw [1]fsr1
  7663  0077  00DC               	movwf	??_vfpfcnvrt+1
  7664  0078  085B               	movf	??_vfpfcnvrt,w
  7665  0079  0084               	movwf	4
  7666  007A  085C               	movf	??_vfpfcnvrt+1,w
  7667  007B  0085               	movwf	5
  7668  007C  0800               	movf	0,w	;code access
  7669  007D  00DD               	movwf	??_vfpfcnvrt+2
  7670  007E  01DE               	clrf	??_vfpfcnvrt+3
  7671                           
  7672                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7673                           ; Switch size 1, requested type "simple"
  7674                           ; Number of cases is 1, Range of values is 0 to 0
  7675                           ; switch strategies available:
  7676                           ; Name         Instructions Cycles
  7677                           ; simple_byte            4     3 (average)
  7678                           ; direct_byte            8     6 (fixed)
  7679                           ; jumptable            260     6 (fixed)
  7680                           ;	Chosen strategy is simple_byte
  7681  007F  085E               	movf	??_vfpfcnvrt+3,w
  7682  0080  3A00               	xorlw	0	; case 0
  7683  0081  1903               	skipnz
  7684  0082  2884               	goto	l6058
  7685  0083  286C               	goto	l5616
  7686  0084                     l6058:
  7687                           
  7688                           ; Switch size 1, requested type "simple"
  7689                           ; Number of cases is 5, Range of values is 32 to 48
  7690                           ; switch strategies available:
  7691                           ; Name         Instructions Cycles
  7692                           ; simple_byte           16     9 (average)
  7693                           ; direct_byte           43     9 (fixed)
  7694                           ; jumptable            263     9 (fixed)
  7695                           ;	Chosen strategy is simple_byte
  7696  0084  085D               	movf	??_vfpfcnvrt+2,w
  7697  0085  3A20               	xorlw	32	; case 32
  7698  0086  1903               	skipnz
  7699  0087  2868               	goto	l1978
  7700  0088  3A03               	xorlw	3	; case 35
  7701  0089  1903               	skipnz
  7702  008A  286A               	goto	l1979
  7703  008B  3A08               	xorlw	8	; case 43
  7704  008C  1903               	skipnz
  7705  008D  2866               	goto	l1977
  7706  008E  3A06               	xorlw	6	; case 45
  7707  008F  1903               	skipnz
  7708  0090  285A               	goto	l1974
  7709  0091  3A1D               	xorlw	29	; case 48
  7710  0092  1903               	skipnz
  7711  0093  2864               	goto	l1976
  7712  0094  286C               	goto	l5616
  7713  0095                     l5622:
  7714                           
  7715                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  7716  0095  0869               	movf	vfpfcnvrt@done,w
  7717  0096  046A               	iorwf	vfpfcnvrt@done+1,w
  7718  0097  1903               	btfsc	3,2
  7719  0098  289A               	goto	u5001
  7720  0099  289B               	goto	u5000
  7721  009A                     u5001:
  7722  009A  2871               	goto	l5620
  7723  009B                     u5000:
  7724  009B                     l1981:
  7725                           
  7726                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  7727  009B  1C77               	btfss	_flags,0
  7728  009C  289E               	goto	u5011
  7729  009D  289F               	goto	u5010
  7730  009E                     u5011:
  7731  009E  28A3               	goto	l5626
  7732  009F                     u5010:
  7733  009F                     l5624:
  7734                           
  7735                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  7736  009F  30FD               	movlw	253
  7737  00A0  05F7               	andwf	_flags,f
  7738  00A1  30FF               	movlw	255
  7739  00A2  05F8               	andwf	_flags+1,f
  7740  00A3                     l5626:
  7741                           
  7742                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 745:         if (
      +                          (*fmt)[0] == '*') {
  7743  00A3  0859               	movf	vfpfcnvrt@fmt,w
  7744  00A4  0086               	movwf	6
  7745  00A5  0187               	clrf	7
  7746  00A6  3F40               	moviw [0]fsr1
  7747  00A7  00DB               	movwf	??_vfpfcnvrt
  7748  00A8  3F41               	moviw [1]fsr1
  7749  00A9  00DC               	movwf	??_vfpfcnvrt+1
  7750  00AA  085B               	movf	??_vfpfcnvrt,w
  7751  00AB  0084               	movwf	4
  7752  00AC  085C               	movf	??_vfpfcnvrt+1,w
  7753  00AD  0085               	movwf	5
  7754  00AE  0012               	moviw fsr0++
  7755  00AF  3A2A               	xorlw	42
  7756  00B0  1D03               	btfss	3,2
  7757  00B1  28B3               	goto	u5021
  7758  00B2  28B4               	goto	u5020
  7759  00B3                     u5021:
  7760  00B3  28D4               	goto	l5638
  7761  00B4                     u5020:
  7762  00B4                     l5628:
  7763                           
  7764                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 746:             
      +                          ++*fmt;
  7765  00B4  0859               	movf	vfpfcnvrt@fmt,w
  7766  00B5  0086               	movwf	6
  7767  00B6  0187               	clrf	7
  7768  00B7  3001               	movlw	1
  7769  00B8  0781               	addwf	1,f
  7770  00B9  3141               	addfsr 1,1
  7771  00BA  1803               	skipnc
  7772  00BB  0A81               	incf	1,f
  7773  00BC                     l5630:
  7774                           
  7775                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 747:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  7776  00BC  085A               	movf	vfpfcnvrt@ap,w
  7777  00BD  0086               	movwf	6
  7778  00BE  0187               	clrf	7
  7779  00BF  0801               	movf	1,w
  7780  00C0  0084               	movwf	4
  7781  00C1  0185               	clrf	5
  7782  00C2  3002               	movlw	2
  7783  00C3  0781               	addwf	1,f
  7784  00C4  3F00               	moviw [0]fsr0
  7785  00C5  0021               	movlb	1	; select bank1
  7786  00C6  00E5               	movwf	_width^(0+128)
  7787  00C7  3F01               	moviw [1]fsr0
  7788  00C8  00E6               	movwf	(_width+1)^(0+128)
  7789  00C9                     l5632:
  7790                           
  7791                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 748:             
      +                          if (width < 0) {
  7792  00C9  1FE6               	btfss	(_width+1)^(0+128),7
  7793  00CA  28CC               	goto	u5031
  7794  00CB  28CD               	goto	u5030
  7795  00CC                     u5031:
  7796  00CC  2919               	goto	l5648
  7797  00CD                     u5030:
  7798  00CD                     l5634:
  7799                           
  7800                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 749:             
      +                              flags |= (1 << 0);
  7801  00CD  1477               	bsf	_flags,0
  7802  00CE                     l5636:
  7803                           
  7804                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 750:             
      +                              width = -width;
  7805  00CE  09E5               	comf	_width^(0+128),f
  7806  00CF  09E6               	comf	(_width+1)^(0+128),f
  7807  00D0  0AE5               	incf	_width^(0+128),f
  7808  00D1  1903               	skipnz
  7809  00D2  0AE6               	incf	(_width+1)^(0+128),f
  7810  00D3  2919               	goto	l5648
  7811  00D4                     l5638:
  7812                           
  7813                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 753:             
      +                          width = atoi(*fmt);
  7814  00D4  0859               	movf	vfpfcnvrt@fmt,w
  7815  00D5  0086               	movwf	6
  7816  00D6  0187               	clrf	7
  7817  00D7  3F40               	moviw [0]fsr1
  7818  00D8  00A6               	movwf	atoi@s
  7819  00D9  3F41               	moviw [1]fsr1
  7820  00DA  00A7               	movwf	atoi@s+1
  7821  00DB  318E  2664  3180   	fcall	_atoi
  7822  00DE  0020               	movlb	0	; select bank0
  7823  00DF  0827               	movf	?_atoi+1,w
  7824  00E0  0021               	movlb	1	; select bank1
  7825  00E1  00E6               	movwf	(_width+1)^(0+128)
  7826  00E2  0020               	movlb	0	; select bank0
  7827  00E3  0826               	movf	?_atoi,w
  7828  00E4  0021               	movlb	1	; select bank1
  7829  00E5  00E5               	movwf	_width^(0+128)
  7830                           
  7831                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 754:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7832  00E6  28EF               	goto	l5642
  7833  00E7                     l5640:
  7834                           
  7835                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 755:             
      +                              ++*fmt;
  7836  00E7  0859               	movf	vfpfcnvrt@fmt,w
  7837  00E8  0086               	movwf	6
  7838  00E9  0187               	clrf	7
  7839  00EA  3001               	movlw	1
  7840  00EB  0781               	addwf	1,f
  7841  00EC  3141               	addfsr 1,1
  7842  00ED  1803               	skipnc
  7843  00EE  0A81               	incf	1,f
  7844  00EF                     l5642:
  7845  00EF  0020               	movlb	0	; select bank0
  7846  00F0  0859               	movf	vfpfcnvrt@fmt,w
  7847  00F1  0086               	movwf	6
  7848  00F2  0187               	clrf	7
  7849  00F3  3F40               	moviw [0]fsr1
  7850  00F4  00DB               	movwf	??_vfpfcnvrt
  7851  00F5  3F41               	moviw [1]fsr1
  7852  00F6  00DC               	movwf	??_vfpfcnvrt+1
  7853  00F7  085B               	movf	??_vfpfcnvrt,w
  7854  00F8  0084               	movwf	4
  7855  00F9  085C               	movf	??_vfpfcnvrt+1,w
  7856  00FA  0085               	movwf	5
  7857  00FB  0800               	movf	0,w	;code access
  7858  00FC  3ED0               	addlw	208
  7859  00FD  00DD               	movwf	??_vfpfcnvrt+2
  7860  00FE  30FF               	movlw	255
  7861  00FF  1803               	skipnc
  7862  0100  3000               	movlw	0
  7863  0101  00DE               	movwf	??_vfpfcnvrt+3
  7864  0102  3000               	movlw	0
  7865  0103  025E               	subwf	??_vfpfcnvrt+3,w
  7866  0104  300A               	movlw	10
  7867  0105  1903               	skipnz
  7868  0106  025D               	subwf	??_vfpfcnvrt+2,w
  7869  0107  1C03               	skipc
  7870  0108  290A               	goto	u5041
  7871  0109  290C               	goto	u5040
  7872  010A                     u5041:
  7873  010A  3001               	movlw	1
  7874  010B  290D               	goto	u5050
  7875  010C                     u5040:
  7876  010C  3000               	movlw	0
  7877  010D                     u5050:
  7878  010D  00DF               	movwf	??_vfpfcnvrt+4
  7879  010E  01E0               	clrf	??_vfpfcnvrt+5
  7880  010F  085F               	movf	??_vfpfcnvrt+4,w
  7881  0110  00EB               	movwf	_vfpfcnvrt$2817
  7882  0111  0860               	movf	??_vfpfcnvrt+5,w
  7883  0112  00EC               	movwf	_vfpfcnvrt$2817+1
  7884  0113                     l5646:
  7885  0113  086B               	movf	_vfpfcnvrt$2817,w
  7886  0114  046C               	iorwf	_vfpfcnvrt$2817+1,w
  7887  0115  1D03               	btfss	3,2
  7888  0116  2918               	goto	u5061
  7889  0117  2919               	goto	u5060
  7890  0118                     u5061:
  7891  0118  28E7               	goto	l5640
  7892  0119                     u5060:
  7893  0119                     l5648:
  7894                           
  7895                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  7896  0119  0020               	movlb	0	; select bank0
  7897  011A  0859               	movf	vfpfcnvrt@fmt,w
  7898  011B  0086               	movwf	6
  7899  011C  0187               	clrf	7
  7900  011D  3F40               	moviw [0]fsr1
  7901  011E  00DB               	movwf	??_vfpfcnvrt
  7902  011F  3F41               	moviw [1]fsr1
  7903  0120  00DC               	movwf	??_vfpfcnvrt+1
  7904  0121  085B               	movf	??_vfpfcnvrt,w
  7905  0122  0084               	movwf	4
  7906  0123  085C               	movf	??_vfpfcnvrt+1,w
  7907  0124  0085               	movwf	5
  7908  0125  0012               	moviw fsr0++
  7909  0126  3A64               	xorlw	100
  7910  0127  1903               	btfsc	3,2
  7911  0128  292A               	goto	u5071
  7912  0129  292B               	goto	u5070
  7913  012A                     u5071:
  7914  012A  293C               	goto	l5652
  7915  012B                     u5070:
  7916  012B                     l5650:
  7917  012B  0859               	movf	vfpfcnvrt@fmt,w
  7918  012C  0086               	movwf	6
  7919  012D  0187               	clrf	7
  7920  012E  3F40               	moviw [0]fsr1
  7921  012F  00DB               	movwf	??_vfpfcnvrt
  7922  0130  3F41               	moviw [1]fsr1
  7923  0131  00DC               	movwf	??_vfpfcnvrt+1
  7924  0132  085B               	movf	??_vfpfcnvrt,w
  7925  0133  0084               	movwf	4
  7926  0134  085C               	movf	??_vfpfcnvrt+1,w
  7927  0135  0085               	movwf	5
  7928  0136  0012               	moviw fsr0++
  7929  0137  3A69               	xorlw	105
  7930  0138  1D03               	btfss	3,2
  7931  0139  293B               	goto	u5081
  7932  013A  293C               	goto	u5080
  7933  013B                     u5081:
  7934  013B  2977               	goto	l5660
  7935  013C                     u5080:
  7936  013C                     l5652:
  7937                           
  7938                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  7939  013C  0859               	movf	vfpfcnvrt@fmt,w
  7940  013D  0086               	movwf	6
  7941  013E  0187               	clrf	7
  7942  013F  3001               	movlw	1
  7943  0140  0781               	addwf	1,f
  7944  0141  3141               	addfsr 1,1
  7945  0142  1803               	skipnc
  7946  0143  0A81               	incf	1,f
  7947  0144                     l5654:
  7948                           
  7949                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  7950  0144  085A               	movf	vfpfcnvrt@ap,w
  7951  0145  0086               	movwf	6
  7952  0146  0187               	clrf	7
  7953  0147  0801               	movf	1,w
  7954  0148  0084               	movwf	4
  7955  0149  0185               	clrf	5
  7956  014A  3002               	movlw	2
  7957  014B  0781               	addwf	1,f
  7958  014C  3F00               	moviw [0]fsr0
  7959  014D  00DB               	movwf	??_vfpfcnvrt
  7960  014E  3F01               	moviw [1]fsr0
  7961  014F  00DC               	movwf	??_vfpfcnvrt+1
  7962  0150  085B               	movf	??_vfpfcnvrt,w
  7963  0151  00E1               	movwf	vfpfcnvrt@ll
  7964  0152  085C               	movf	??_vfpfcnvrt+1,w
  7965  0153  00E2               	movwf	vfpfcnvrt@ll+1
  7966  0154  0D89               	rlf	9,f
  7967  0155  3B89               	subwfb	9,f
  7968  0156  0989               	comf	9,f
  7969  0157  00E3               	movwf	vfpfcnvrt@ll+2
  7970  0158  00E4               	movwf	vfpfcnvrt@ll+3
  7971  0159  00E5               	movwf	vfpfcnvrt@ll+4
  7972  015A  00E6               	movwf	vfpfcnvrt@ll+5
  7973  015B  00E7               	movwf	vfpfcnvrt@ll+6
  7974  015C  00E8               	movwf	vfpfcnvrt@ll+7
  7975  015D                     l5656:
  7976                           
  7977                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  7978  015D  0861               	movf	vfpfcnvrt@ll,w
  7979  015E  00BB               	movwf	dtoa@d
  7980  015F  0862               	movf	vfpfcnvrt@ll+1,w
  7981  0160  00BC               	movwf	dtoa@d+1
  7982  0161  0863               	movf	vfpfcnvrt@ll+2,w
  7983  0162  00BD               	movwf	dtoa@d+2
  7984  0163  0864               	movf	vfpfcnvrt@ll+3,w
  7985  0164  00BE               	movwf	dtoa@d+3
  7986  0165  0865               	movf	vfpfcnvrt@ll+4,w
  7987  0166  00BF               	movwf	dtoa@d+4
  7988  0167  0866               	movf	vfpfcnvrt@ll+5,w
  7989  0168  00C0               	movwf	dtoa@d+5
  7990  0169  0867               	movf	vfpfcnvrt@ll+6,w
  7991  016A  00C1               	movwf	dtoa@d+6
  7992  016B  0868               	movf	vfpfcnvrt@ll+7,w
  7993  016C  00C2               	movwf	dtoa@d+7
  7994  016D  086D               	movf	vfpfcnvrt@fp,w
  7995  016E  3183  235B  3180   	fcall	_dtoa
  7996  0171  0020               	movlb	0	; select bank0
  7997  0172  083C               	movf	?_dtoa+1,w
  7998  0173  00DA               	movwf	?_vfpfcnvrt+1
  7999  0174  083B               	movf	?_dtoa,w
  8000  0175  00D9               	movwf	?_vfpfcnvrt
  8001  0176  29CF               	goto	l1996
  8002  0177                     l5660:
  8003                           
  8004                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  8005  0177  0859               	movf	vfpfcnvrt@fmt,w
  8006  0178  0086               	movwf	6
  8007  0179  0187               	clrf	7
  8008  017A  3F40               	moviw [0]fsr1
  8009  017B  00DB               	movwf	??_vfpfcnvrt
  8010  017C  3F41               	moviw [1]fsr1
  8011  017D  00DC               	movwf	??_vfpfcnvrt+1
  8012  017E  085B               	movf	??_vfpfcnvrt,w
  8013  017F  0084               	movwf	4
  8014  0180  085C               	movf	??_vfpfcnvrt+1,w
  8015  0181  0085               	movwf	5
  8016  0182  0012               	moviw fsr0++
  8017  0183  3A25               	xorlw	37
  8018  0184  1D03               	btfss	3,2
  8019  0185  2987               	goto	u5091
  8020  0186  2988               	goto	u5090
  8021  0187                     u5091:
  8022  0187  29A1               	goto	l5670
  8023  0188                     u5090:
  8024  0188                     l5662:
  8025                           
  8026                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  8027  0188  0859               	movf	vfpfcnvrt@fmt,w
  8028  0189  0086               	movwf	6
  8029  018A  0187               	clrf	7
  8030  018B  3001               	movlw	1
  8031  018C  0781               	addwf	1,f
  8032  018D  3141               	addfsr 1,1
  8033  018E  1803               	skipnc
  8034  018F  0A81               	incf	1,f
  8035  0190                     l5664:
  8036                           
  8037                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  8038  0190  3025               	movlw	37
  8039  0191  00A0               	movwf	fputc@c
  8040  0192  3000               	movlw	0
  8041  0193  00A1               	movwf	fputc@c+1
  8042  0194  086D               	movf	vfpfcnvrt@fp,w
  8043  0195  00DB               	movwf	??_vfpfcnvrt
  8044  0196  085B               	movf	??_vfpfcnvrt,w
  8045  0197  00A2               	movwf	fputc@fp
  8046  0198  318B  23F1  3180   	fcall	_fputc
  8047  019B                     l5666:
  8048                           
  8049                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  8050  019B  3001               	movlw	1
  8051  019C  0020               	movlb	0	; select bank0
  8052  019D  00D9               	movwf	?_vfpfcnvrt
  8053  019E  3000               	movlw	0
  8054  019F  00DA               	movwf	?_vfpfcnvrt+1
  8055  01A0  29CF               	goto	l1996
  8056  01A1                     l5670:
  8057                           
  8058                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  8059  01A1  0859               	movf	vfpfcnvrt@fmt,w
  8060  01A2  0086               	movwf	6
  8061  01A3  0187               	clrf	7
  8062  01A4  3001               	movlw	1
  8063  01A5  0781               	addwf	1,f
  8064  01A6  3141               	addfsr 1,1
  8065  01A7  1803               	skipnc
  8066  01A8  0A81               	incf	1,f
  8067  01A9                     l5672:
  8068                           
  8069                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  8070  01A9  01D9               	clrf	?_vfpfcnvrt
  8071  01AA  01DA               	clrf	?_vfpfcnvrt+1
  8072  01AB  29CF               	goto	l1996
  8073  01AC                     l5676:
  8074                           
  8075                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  8076  01AC  0859               	movf	vfpfcnvrt@fmt,w
  8077  01AD  0086               	movwf	6
  8078  01AE  0187               	clrf	7
  8079  01AF  3F40               	moviw [0]fsr1
  8080  01B0  00DB               	movwf	??_vfpfcnvrt
  8081  01B1  3F41               	moviw [1]fsr1
  8082  01B2  00DC               	movwf	??_vfpfcnvrt+1
  8083  01B3  085B               	movf	??_vfpfcnvrt,w
  8084  01B4  0084               	movwf	4
  8085  01B5  085C               	movf	??_vfpfcnvrt+1,w
  8086  01B6  0085               	movwf	5
  8087  01B7  0800               	movf	0,w	;code access
  8088  01B8  00DD               	movwf	??_vfpfcnvrt+2
  8089  01B9  01DE               	clrf	??_vfpfcnvrt+3
  8090  01BA  085D               	movf	??_vfpfcnvrt+2,w
  8091  01BB  00A0               	movwf	fputc@c
  8092  01BC  085E               	movf	??_vfpfcnvrt+3,w
  8093  01BD  00A1               	movwf	fputc@c+1
  8094  01BE  086D               	movf	vfpfcnvrt@fp,w
  8095  01BF  00DF               	movwf	??_vfpfcnvrt+4
  8096  01C0  085F               	movf	??_vfpfcnvrt+4,w
  8097  01C1  00A2               	movwf	fputc@fp
  8098  01C2  318B  23F1  3180   	fcall	_fputc
  8099  01C5                     l5678:
  8100                           
  8101                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  8102  01C5  0020               	movlb	0	; select bank0
  8103  01C6  0859               	movf	vfpfcnvrt@fmt,w
  8104  01C7  0086               	movwf	6
  8105  01C8  0187               	clrf	7
  8106  01C9  3001               	movlw	1
  8107  01CA  0781               	addwf	1,f
  8108  01CB  3141               	addfsr 1,1
  8109  01CC  1803               	skipnc
  8110  01CD  0A81               	incf	1,f
  8111  01CE  299B               	goto	l5666
  8112  01CF                     l1996:
  8113  01CF  0008               	return
  8114  01D0                     __end_of_vfpfcnvrt:
  8115                           
  8116                           	psect	text4
  8117  035B                     __ptext4:	
  8118 ;; *************** function _dtoa *****************
  8119 ;; Defined at:
  8120 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  8121 ;; Parameters:    Size  Location     Type
  8122 ;;  fp              1    wreg     PTR struct _IO_FILE
  8123 ;;		 -> sprintf@f(5), 
  8124 ;;  d               8   27[BANK0 ] long long 
  8125 ;; Auto vars:     Size  Location     Type
  8126 ;;  fp              1   38[BANK0 ] PTR struct _IO_FILE
  8127 ;;		 -> sprintf@f(5), 
  8128 ;;  n               8   47[BANK0 ] long long 
  8129 ;;  i               2   55[BANK0 ] int 
  8130 ;;  s               2   45[BANK0 ] int 
  8131 ;;  w               2   43[BANK0 ] int 
  8132 ;;  p               2   41[BANK0 ] int 
  8133 ;; Return value:  Size  Location     Type
  8134 ;;                  2   27[BANK0 ] int 
  8135 ;; Registers used:
  8136 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8137 ;; Tracked objects:
  8138 ;;		On entry : 0/0
  8139 ;;		On exit  : 0/0
  8140 ;;		Unchanged: 0/0
  8141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8142 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8143 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8144 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8145 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8146 ;;Total ram usage:       30 bytes
  8147 ;; Hardware stack levels used: 1
  8148 ;; Hardware stack levels required when called: 9
  8149 ;; This function calls:
  8150 ;;		___aodiv
  8151 ;;		___aomod
  8152 ;;		_abs
  8153 ;;		_pad
  8154 ;; This function is called by:
  8155 ;;		_vfpfcnvrt
  8156 ;; This function uses a non-reentrant model
  8157 ;;
  8158                           
  8159                           
  8160                           ;psect for function _dtoa
  8161  035B                     _dtoa:
  8162                           
  8163                           ;incstack = 0
  8164                           ; Regs used in _dtoa: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8165                           ;dtoa@fp stored from wreg
  8166  035B  0020               	movlb	0	; select bank0
  8167  035C  00C6               	movwf	dtoa@fp
  8168  035D                     l5446:
  8169                           
  8170                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  8171  035D  083B               	movf	dtoa@d,w
  8172  035E  00CF               	movwf	dtoa@n
  8173  035F  083C               	movf	dtoa@d+1,w
  8174  0360  00D0               	movwf	dtoa@n+1
  8175  0361  083D               	movf	dtoa@d+2,w
  8176  0362  00D1               	movwf	dtoa@n+2
  8177  0363  083E               	movf	dtoa@d+3,w
  8178  0364  00D2               	movwf	dtoa@n+3
  8179  0365  083F               	movf	dtoa@d+4,w
  8180  0366  00D3               	movwf	dtoa@n+4
  8181  0367  0840               	movf	dtoa@d+5,w
  8182  0368  00D4               	movwf	dtoa@n+5
  8183  0369  0841               	movf	dtoa@d+6,w
  8184  036A  00D5               	movwf	dtoa@n+6
  8185  036B  0842               	movf	dtoa@d+7,w
  8186  036C  00D6               	movwf	dtoa@n+7
  8187  036D                     l5448:
  8188                           
  8189                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  8190  036D  304F               	movlw	low dtoa@n
  8191  036E  0086               	movwf	6
  8192  036F  3000               	movlw	high dtoa@n
  8193  0370  0087               	movwf	7
  8194  0371  3F47               	moviw [7]fsr1
  8195  0372  00C3               	movwf	??_dtoa
  8196  0373  1BC3               	btfsc	??_dtoa,7
  8197  0374  2B76               	goto	u4611
  8198  0375  2B78               	goto	u4610
  8199  0376                     u4611:
  8200  0376  3001               	movlw	1
  8201  0377  2B79               	goto	u4620
  8202  0378                     u4610:
  8203  0378  3000               	movlw	0
  8204  0379                     u4620:
  8205  0379  0020               	movlb	0	; select bank0
  8206  037A  00C4               	movwf	??_dtoa+1
  8207  037B  01C5               	clrf	??_dtoa+2
  8208  037C  0844               	movf	??_dtoa+1,w
  8209  037D  00CD               	movwf	dtoa@s
  8210  037E  0845               	movf	??_dtoa+2,w
  8211  037F  00CE               	movwf	dtoa@s+1
  8212  0380                     l5450:
  8213                           
  8214                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  8215  0380  084D               	movf	dtoa@s,w
  8216  0381  044E               	iorwf	dtoa@s+1,w
  8217  0382  1903               	btfsc	3,2
  8218  0383  2B85               	goto	u4631
  8219  0384  2B86               	goto	u4630
  8220  0385                     u4631:
  8221  0385  2BA4               	goto	l1944
  8222  0386                     u4630:
  8223  0386                     l5452:
  8224                           
  8225                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  8226  0386  09CF               	comf	dtoa@n,f
  8227  0387  09D0               	comf	dtoa@n+1,f
  8228  0388  09D1               	comf	dtoa@n+2,f
  8229  0389  09D2               	comf	dtoa@n+3,f
  8230  038A  09D3               	comf	dtoa@n+4,f
  8231  038B  09D4               	comf	dtoa@n+5,f
  8232  038C  09D5               	comf	dtoa@n+6,f
  8233  038D  09D6               	comf	dtoa@n+7,f
  8234  038E  0ACF               	incf	dtoa@n,f
  8235  038F  1D03               	skipz
  8236  0390  2BA4               	goto	u464lld
  8237  0391  0AD0               	incf	dtoa@n+1,f
  8238  0392  1D03               	skipz
  8239  0393  2BA4               	goto	u464lld
  8240  0394  0AD1               	incf	dtoa@n+2,f
  8241  0395  1D03               	skipz
  8242  0396  2BA4               	goto	u464lld
  8243  0397  0AD2               	incf	dtoa@n+3,f
  8244  0398  1D03               	skipz
  8245  0399  2BA4               	goto	u464lld
  8246  039A  0AD3               	incf	dtoa@n+4,f
  8247  039B  1D03               	skipz
  8248  039C  2BA4               	goto	u464lld
  8249  039D  0AD4               	incf	dtoa@n+5,f
  8250  039E  1D03               	skipz
  8251  039F  2BA4               	goto	u464lld
  8252  03A0  0AD5               	incf	dtoa@n+6,f
  8253  03A1  1D03               	skipz
  8254  03A2  2BA4               	goto	u464lld
  8255  03A3  0AD6               	incf	dtoa@n+7,f
  8256  03A4                     u464lld:
  8257  03A4                     l1944:	
  8258                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 297:     }
  8259                           
  8260                           
  8261                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  8262  03A4  1BF6               	btfsc	_prec+1,7
  8263  03A5  2BA7               	goto	u4651
  8264  03A6  2BA8               	goto	u4650
  8265  03A7                     u4651:
  8266  03A7  2BAC               	goto	l1945
  8267  03A8                     u4650:
  8268  03A8                     l5454:
  8269                           
  8270                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  8271  03A8  30FD               	movlw	253
  8272  03A9  05F7               	andwf	_flags,f
  8273  03AA  30FF               	movlw	255
  8274  03AB  05F8               	andwf	_flags+1,f
  8275  03AC                     l1945:	
  8276                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 302:     }
  8277                           
  8278                           
  8279                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  8280  03AC  0876               	movf	_prec+1,w
  8281  03AD  3A80               	xorlw	128
  8282  03AE  0020               	movlb	0	; select bank0
  8283  03AF  00C3               	movwf	??_dtoa
  8284  03B0  3080               	movlw	128
  8285  03B1  0243               	subwf	??_dtoa,w
  8286  03B2  1D03               	skipz
  8287  03B3  2BB6               	goto	u4665
  8288  03B4  3001               	movlw	1
  8289  03B5  0275               	subwf	_prec,w
  8290  03B6                     u4665:
  8291  03B6  1803               	skipnc
  8292  03B7  2BB9               	goto	u4661
  8293  03B8  2BBA               	goto	u4660
  8294  03B9                     u4661:
  8295  03B9  2BC0               	goto	l5458
  8296  03BA                     u4660:
  8297  03BA                     l5456:
  8298  03BA  3001               	movlw	1
  8299  03BB  0020               	movlb	0	; select bank0
  8300  03BC  00C9               	movwf	dtoa@p
  8301  03BD  3000               	movlw	0
  8302  03BE  00CA               	movwf	dtoa@p+1
  8303  03BF  2BC5               	goto	l1949
  8304  03C0                     l5458:
  8305  03C0  0876               	movf	_prec+1,w
  8306  03C1  0020               	movlb	0	; select bank0
  8307  03C2  00CA               	movwf	dtoa@p+1
  8308  03C3  0875               	movf	_prec,w
  8309  03C4  00C9               	movwf	dtoa@p
  8310  03C5                     l1949:
  8311                           
  8312                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  8313  03C5  0021               	movlb	1	; select bank1
  8314  03C6  0866               	movf	(_width+1)^(0+128),w
  8315  03C7  0020               	movlb	0	; select bank0
  8316  03C8  00CC               	movwf	dtoa@w+1
  8317  03C9  0021               	movlb	1	; select bank1
  8318  03CA  0865               	movf	_width^(0+128),w
  8319  03CB  0020               	movlb	0	; select bank0
  8320  03CC  00CB               	movwf	dtoa@w
  8321  03CD                     l5460:
  8322                           
  8323                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  8324  03CD  084D               	movf	dtoa@s,w
  8325  03CE  044E               	iorwf	dtoa@s+1,w
  8326  03CF  1D03               	btfss	3,2
  8327  03D0  2BD2               	goto	u4671
  8328  03D1  2BD3               	goto	u4670
  8329  03D2                     u4671:
  8330  03D2  2BD7               	goto	l5464
  8331  03D3                     u4670:
  8332  03D3                     l5462:
  8333  03D3  1D77               	btfss	_flags,2
  8334  03D4  2BD6               	goto	u4681
  8335  03D5  2BD7               	goto	u4680
  8336  03D6                     u4681:
  8337  03D6  2BDB               	goto	l1950
  8338  03D7                     u4680:
  8339  03D7                     l5464:
  8340                           
  8341                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  8342  03D7  30FF               	movlw	255
  8343  03D8  07CB               	addwf	dtoa@w,f
  8344  03D9  30FF               	movlw	255
  8345  03DA  3DCC               	addwfc	dtoa@w+1,f
  8346  03DB                     l1950:	
  8347                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 307:     }
  8348                           
  8349                           
  8350                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  8351  03DB  301F               	movlw	31
  8352  03DC  00D7               	movwf	dtoa@i
  8353  03DD  3000               	movlw	0
  8354  03DE  00D8               	movwf	dtoa@i+1
  8355  03DF                     l5466:
  8356                           
  8357                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  8358  03DF  0022               	movlb	2	; select bank2
  8359  03E0  01BF               	clrf	(_dbuf^(0+256)+31)
  8360                           
  8361                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8362  03E1  2C4B               	goto	l1953
  8363  03E2                     l5468:
  8364                           
  8365                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  8366  03E2  30FF               	movlw	255
  8367  03E3  0020               	movlb	0	; select bank0
  8368  03E4  07D7               	addwf	dtoa@i,f
  8369  03E5  30FF               	movlw	255
  8370  03E6  3DD8               	addwfc	dtoa@i+1,f
  8371  03E7                     l5470:
  8372                           
  8373                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  8374  03E7  300A               	movlw	10
  8375  03E8  00A0               	movwf	___aomod@divisor
  8376  03E9  01A1               	clrf	___aomod@divisor+1
  8377  03EA  01A2               	clrf	___aomod@divisor+2
  8378  03EB  01A3               	clrf	___aomod@divisor+3
  8379  03EC  01A4               	clrf	___aomod@divisor+4
  8380  03ED  01A5               	clrf	___aomod@divisor+5
  8381  03EE  01A6               	clrf	___aomod@divisor+6
  8382  03EF  01A7               	clrf	___aomod@divisor+7
  8383  03F0  084F               	movf	dtoa@n,w
  8384  03F1  00A8               	movwf	___aomod@dividend
  8385  03F2  0850               	movf	dtoa@n+1,w
  8386  03F3  00A9               	movwf	___aomod@dividend+1
  8387  03F4  0851               	movf	dtoa@n+2,w
  8388  03F5  00AA               	movwf	___aomod@dividend+2
  8389  03F6  0852               	movf	dtoa@n+3,w
  8390  03F7  00AB               	movwf	___aomod@dividend+3
  8391  03F8  0853               	movf	dtoa@n+4,w
  8392  03F9  00AC               	movwf	___aomod@dividend+4
  8393  03FA  0854               	movf	dtoa@n+5,w
  8394  03FB  00AD               	movwf	___aomod@dividend+5
  8395  03FC  0855               	movf	dtoa@n+6,w
  8396  03FD  00AE               	movwf	___aomod@dividend+6
  8397  03FE  0856               	movf	dtoa@n+7,w
  8398  03FF  00AF               	movwf	___aomod@dividend+7
  8399  0400  318F  2713  3183   	fcall	___aomod
  8400  0403  0020               	movlb	0	; select bank0
  8401  0404  0821               	movf	?___aomod+1,w
  8402  0405  00B4               	movwf	abs@a+1
  8403  0406  0820               	movf	?___aomod,w
  8404  0407  00B3               	movwf	abs@a
  8405  0408  318A  2247  3183   	fcall	_abs
  8406  040B  0020               	movlb	0	; select bank0
  8407  040C  0833               	movf	?_abs,w
  8408  040D  3E30               	addlw	48
  8409  040E  00C3               	movwf	??_dtoa
  8410  040F  0857               	movf	dtoa@i,w
  8411  0410  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8412  0411  0086               	movwf	6
  8413  0412  3001               	movlw	1	; select bank2/3
  8414  0413  0087               	movwf	7
  8415  0414  0843               	movf	??_dtoa,w
  8416  0415  0081               	movwf	1
  8417  0416                     l5472:
  8418                           
  8419                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  8420  0416  30FF               	movlw	255
  8421  0417  07C9               	addwf	dtoa@p,f
  8422  0418  30FF               	movlw	255
  8423  0419  3DCA               	addwfc	dtoa@p+1,f
  8424  041A                     l5474:
  8425                           
  8426                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  8427  041A  30FF               	movlw	255
  8428  041B  07CB               	addwf	dtoa@w,f
  8429  041C  30FF               	movlw	255
  8430  041D  3DCC               	addwfc	dtoa@w+1,f
  8431  041E                     l5476:
  8432                           
  8433                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  8434  041E  300A               	movlw	10
  8435  041F  00A0               	movwf	___aodiv@divisor
  8436  0420  01A1               	clrf	___aodiv@divisor+1
  8437  0421  01A2               	clrf	___aodiv@divisor+2
  8438  0422  01A3               	clrf	___aodiv@divisor+3
  8439  0423  01A4               	clrf	___aodiv@divisor+4
  8440  0424  01A5               	clrf	___aodiv@divisor+5
  8441  0425  01A6               	clrf	___aodiv@divisor+6
  8442  0426  01A7               	clrf	___aodiv@divisor+7
  8443  0427  084F               	movf	dtoa@n,w
  8444  0428  00A8               	movwf	___aodiv@dividend
  8445  0429  0850               	movf	dtoa@n+1,w
  8446  042A  00A9               	movwf	___aodiv@dividend+1
  8447  042B  0851               	movf	dtoa@n+2,w
  8448  042C  00AA               	movwf	___aodiv@dividend+2
  8449  042D  0852               	movf	dtoa@n+3,w
  8450  042E  00AB               	movwf	___aodiv@dividend+3
  8451  042F  0853               	movf	dtoa@n+4,w
  8452  0430  00AC               	movwf	___aodiv@dividend+4
  8453  0431  0854               	movf	dtoa@n+5,w
  8454  0432  00AD               	movwf	___aodiv@dividend+5
  8455  0433  0855               	movf	dtoa@n+6,w
  8456  0434  00AE               	movwf	___aodiv@dividend+6
  8457  0435  0856               	movf	dtoa@n+7,w
  8458  0436  00AF               	movwf	___aodiv@dividend+7
  8459  0437  3186  260F  3183   	fcall	___aodiv
  8460  043A  0020               	movlb	0	; select bank0
  8461  043B  0820               	movf	?___aodiv,w
  8462  043C  00CF               	movwf	dtoa@n
  8463  043D  0821               	movf	?___aodiv+1,w
  8464  043E  00D0               	movwf	dtoa@n+1
  8465  043F  0822               	movf	?___aodiv+2,w
  8466  0440  00D1               	movwf	dtoa@n+2
  8467  0441  0823               	movf	?___aodiv+3,w
  8468  0442  00D2               	movwf	dtoa@n+3
  8469  0443  0824               	movf	?___aodiv+4,w
  8470  0444  00D3               	movwf	dtoa@n+4
  8471  0445  0825               	movf	?___aodiv+5,w
  8472  0446  00D4               	movwf	dtoa@n+5
  8473  0447  0826               	movf	?___aodiv+6,w
  8474  0448  00D5               	movwf	dtoa@n+6
  8475  0449  0827               	movf	?___aodiv+7,w
  8476  044A  00D6               	movwf	dtoa@n+7
  8477  044B                     l1953:	
  8478                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 318:     }
  8479                           
  8480                           
  8481                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8482  044B  0020               	movlb	0	; select bank0
  8483  044C  0858               	movf	dtoa@i+1,w
  8484  044D  3A80               	xorlw	128
  8485  044E  00C3               	movwf	??_dtoa
  8486  044F  3080               	movlw	128
  8487  0450  0243               	subwf	??_dtoa,w
  8488  0451  1D03               	skipz
  8489  0452  2C55               	goto	u4695
  8490  0453  3001               	movlw	1
  8491  0454  0257               	subwf	dtoa@i,w
  8492  0455                     u4695:
  8493  0455  1C03               	skipc
  8494  0456  2C58               	goto	u4691
  8495  0457  2C59               	goto	u4690
  8496  0458                     u4691:
  8497  0458  2C85               	goto	l5486
  8498  0459                     u4690:
  8499  0459                     l5478:
  8500  0459  0020               	movlb	0	; select bank0
  8501  045A  084F               	movf	dtoa@n,w
  8502  045B  0450               	iorwf	dtoa@n+1,w
  8503  045C  0451               	iorwf	dtoa@n+2,w
  8504  045D  0452               	iorwf	dtoa@n+3,w
  8505  045E  0453               	iorwf	dtoa@n+4,w
  8506  045F  0454               	iorwf	dtoa@n+5,w
  8507  0460  0455               	iorwf	dtoa@n+6,w
  8508  0461  0456               	iorwf	dtoa@n+7,w
  8509  0462  1D03               	skipz
  8510  0463  2C65               	goto	u4701
  8511  0464  2C66               	goto	u4700
  8512  0465                     u4701:
  8513  0465  2BE2               	goto	l5468
  8514  0466                     u4700:
  8515  0466                     l5480:
  8516  0466  084A               	movf	dtoa@p+1,w
  8517  0467  3A80               	xorlw	128
  8518  0468  00C3               	movwf	??_dtoa
  8519  0469  3080               	movlw	128
  8520  046A  0243               	subwf	??_dtoa,w
  8521  046B  1D03               	skipz
  8522  046C  2C6F               	goto	u4715
  8523  046D  3001               	movlw	1
  8524  046E  0249               	subwf	dtoa@p,w
  8525  046F                     u4715:
  8526  046F  1803               	skipnc
  8527  0470  2C72               	goto	u4711
  8528  0471  2C73               	goto	u4710
  8529  0472                     u4711:
  8530  0472  2BE2               	goto	l5468
  8531  0473                     u4710:
  8532  0473                     l5482:
  8533  0473  0020               	movlb	0	; select bank0
  8534  0474  084C               	movf	dtoa@w+1,w
  8535  0475  3A80               	xorlw	128
  8536  0476  00C3               	movwf	??_dtoa
  8537  0477  3080               	movlw	128
  8538  0478  0243               	subwf	??_dtoa,w
  8539  0479  1D03               	skipz
  8540  047A  2C7D               	goto	u4725
  8541  047B  3001               	movlw	1
  8542  047C  024B               	subwf	dtoa@w,w
  8543  047D                     u4725:
  8544  047D  1C03               	skipc
  8545  047E  2C80               	goto	u4721
  8546  047F  2C81               	goto	u4720
  8547  0480                     u4721:
  8548  0480  2C85               	goto	l5486
  8549  0481                     u4720:
  8550  0481                     l5484:
  8551  0481  18F7               	btfsc	_flags,1
  8552  0482  2C84               	goto	u4731
  8553  0483  2C85               	goto	u4730
  8554  0484                     u4731:
  8555  0484  2BE2               	goto	l5468
  8556  0485                     u4730:
  8557  0485                     l5486:
  8558                           
  8559                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  8560  0485  0020               	movlb	0	; select bank0
  8561  0486  084D               	movf	dtoa@s,w
  8562  0487  044E               	iorwf	dtoa@s+1,w
  8563  0488  1D03               	btfss	3,2
  8564  0489  2C8B               	goto	u4741
  8565  048A  2C8C               	goto	u4740
  8566  048B                     u4741:
  8567  048B  2C90               	goto	l5490
  8568  048C                     u4740:
  8569  048C                     l5488:
  8570  048C  1D77               	btfss	_flags,2
  8571  048D  2C8F               	goto	u4751
  8572  048E  2C90               	goto	u4750
  8573  048F                     u4751:
  8574  048F  2CAC               	goto	l5500
  8575  0490                     u4750:
  8576  0490                     l5490:
  8577                           
  8578                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  8579  0490  30FF               	movlw	255
  8580  0491  07D7               	addwf	dtoa@i,f
  8581  0492  30FF               	movlw	255
  8582  0493  3DD8               	addwfc	dtoa@i+1,f
  8583  0494                     l5492:
  8584                           
  8585                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  8586  0494  084D               	movf	dtoa@s,w
  8587  0495  044E               	iorwf	dtoa@s+1,w
  8588  0496  1D03               	btfss	3,2
  8589  0497  2C99               	goto	u4761
  8590  0498  2C9A               	goto	u4760
  8591  0499                     u4761:
  8592  0499  2C9F               	goto	l5496
  8593  049A                     u4760:
  8594  049A                     l5494:
  8595  049A  302B               	movlw	43
  8596  049B  00C7               	movwf	_dtoa$2802
  8597  049C  3000               	movlw	0
  8598  049D  00C8               	movwf	_dtoa$2802+1
  8599  049E  2CA3               	goto	l5498
  8600  049F                     l5496:
  8601  049F  302D               	movlw	45
  8602  04A0  00C7               	movwf	_dtoa$2802
  8603  04A1  3000               	movlw	0
  8604  04A2  00C8               	movwf	_dtoa$2802+1
  8605  04A3                     l5498:
  8606  04A3  0847               	movf	_dtoa$2802,w
  8607  04A4  00C3               	movwf	??_dtoa
  8608  04A5  0857               	movf	dtoa@i,w
  8609  04A6  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8610  04A7  0086               	movwf	6
  8611  04A8  3001               	movlw	1	; select bank2/3
  8612  04A9  0087               	movwf	7
  8613  04AA  0843               	movf	??_dtoa,w
  8614  04AB  0081               	movwf	1
  8615  04AC                     l5500:
  8616                           
  8617                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  8618  04AC  0857               	movf	dtoa@i,w
  8619  04AD  3E20               	addlw	(low (_dbuf| (0+256)))& (0+255)
  8620  04AE  00C3               	movwf	??_dtoa
  8621  04AF  0843               	movf	??_dtoa,w
  8622  04B0  00B0               	movwf	pad@buf
  8623  04B1  084C               	movf	dtoa@w+1,w
  8624  04B2  00B2               	movwf	pad@p+1
  8625  04B3  084B               	movf	dtoa@w,w
  8626  04B4  00B1               	movwf	pad@p
  8627  04B5  0846               	movf	dtoa@fp,w
  8628  04B6  318C  2495  3183   	fcall	_pad
  8629  04B9  0020               	movlb	0	; select bank0
  8630  04BA  0831               	movf	?_pad+1,w
  8631  04BB  00BC               	movwf	?_dtoa+1
  8632  04BC  0830               	movf	?_pad,w
  8633  04BD  00BB               	movwf	?_dtoa
  8634  04BE                     l1967:
  8635  04BE  0008               	return
  8636  04BF                     __end_of_dtoa:
  8637                           
  8638                           	psect	text5
  8639  0C95                     __ptext5:	
  8640 ;; *************** function _pad *****************
  8641 ;; Defined at:
  8642 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  8643 ;; Parameters:    Size  Location     Type
  8644 ;;  fp              1    wreg     PTR struct _IO_FILE
  8645 ;;		 -> sprintf@f(5), 
  8646 ;;  buf             1   16[BANK0 ] PTR unsigned char 
  8647 ;;		 -> dbuf(32), 
  8648 ;;  p               2   17[BANK0 ] int 
  8649 ;; Auto vars:     Size  Location     Type
  8650 ;;  fp              1   24[BANK0 ] PTR struct _IO_FILE
  8651 ;;		 -> sprintf@f(5), 
  8652 ;;  w               2   22[BANK0 ] int 
  8653 ;;  i               2   20[BANK0 ] int 
  8654 ;; Return value:  Size  Location     Type
  8655 ;;                  2   16[BANK0 ] int 
  8656 ;; Registers used:
  8657 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8658 ;; Tracked objects:
  8659 ;;		On entry : 0/0
  8660 ;;		On exit  : 0/0
  8661 ;;		Unchanged: 0/0
  8662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8663 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8664 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8665 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8666 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8667 ;;Total ram usage:        9 bytes
  8668 ;; Hardware stack levels used: 1
  8669 ;; Hardware stack levels required when called: 8
  8670 ;; This function calls:
  8671 ;;		_fputc
  8672 ;;		_fputs
  8673 ;;		_strlen
  8674 ;; This function is called by:
  8675 ;;		_dtoa
  8676 ;; This function uses a non-reentrant model
  8677 ;;
  8678                           
  8679                           
  8680                           ;psect for function _pad
  8681  0C95                     _pad:
  8682                           
  8683                           ;incstack = 0
  8684                           ; Regs used in _pad: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8685                           ;pad@fp stored from wreg
  8686  0C95  0020               	movlb	0	; select bank0
  8687  0C96  00B8               	movwf	pad@fp
  8688  0C97                     l5378:
  8689                           
  8690                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  8691  0C97  1C77               	btfss	_flags,0
  8692  0C98  2C9A               	goto	u4441
  8693  0C99  2C9B               	goto	u4440
  8694  0C9A                     u4441:
  8695  0C9A  2CA3               	goto	l5382
  8696  0C9B                     u4440:
  8697  0C9B                     l5380:
  8698                           
  8699                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  8700  0C9B  0838               	movf	pad@fp,w
  8701  0C9C  00B3               	movwf	??_pad
  8702  0C9D  0833               	movf	??_pad,w
  8703  0C9E  00A8               	movwf	fputs@fp
  8704  0C9F  0830               	movf	pad@buf,w
  8705  0CA0  318B  2354  318C   	fcall	_fputs
  8706  0CA3                     l5382:
  8707                           
  8708                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  8709  0CA3  0020               	movlb	0	; select bank0
  8710  0CA4  1BB2               	btfsc	pad@p+1,7
  8711  0CA5  2CA7               	goto	u4451
  8712  0CA6  2CA8               	goto	u4450
  8713  0CA7                     u4451:
  8714  0CA7  2CAD               	goto	l5386
  8715  0CA8                     u4450:
  8716  0CA8                     l5384:
  8717  0CA8  0832               	movf	pad@p+1,w
  8718  0CA9  00B7               	movwf	pad@w+1
  8719  0CAA  0831               	movf	pad@p,w
  8720  0CAB  00B6               	movwf	pad@w
  8721  0CAC  2CAF               	goto	l1936
  8722  0CAD                     l5386:
  8723  0CAD  01B6               	clrf	pad@w
  8724  0CAE  01B7               	clrf	pad@w+1
  8725  0CAF                     l1936:
  8726                           
  8727                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  8728  0CAF  01B4               	clrf	pad@i
  8729  0CB0  01B5               	clrf	pad@i+1
  8730                           
  8731                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8732  0CB1  2CC3               	goto	l5392
  8733  0CB2                     l5388:
  8734                           
  8735                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  8736  0CB2  3020               	movlw	32
  8737  0CB3  0020               	movlb	0	; select bank0
  8738  0CB4  00A0               	movwf	fputc@c
  8739  0CB5  3000               	movlw	0
  8740  0CB6  00A1               	movwf	fputc@c+1
  8741  0CB7  0838               	movf	pad@fp,w
  8742  0CB8  00B3               	movwf	??_pad
  8743  0CB9  0833               	movf	??_pad,w
  8744  0CBA  00A2               	movwf	fputc@fp
  8745  0CBB  318B  23F1  318C   	fcall	_fputc
  8746  0CBE                     l5390:
  8747                           
  8748                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  8749  0CBE  3001               	movlw	1
  8750  0CBF  0020               	movlb	0	; select bank0
  8751  0CC0  07B4               	addwf	pad@i,f
  8752  0CC1  3000               	movlw	0
  8753  0CC2  3DB5               	addwfc	pad@i+1,f
  8754  0CC3                     l5392:
  8755                           
  8756                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  8757  0CC3  0835               	movf	pad@i+1,w
  8758  0CC4  3A80               	xorlw	128
  8759  0CC5  00B3               	movwf	??_pad
  8760  0CC6  0837               	movf	pad@w+1,w
  8761  0CC7  3A80               	xorlw	128
  8762  0CC8  0233               	subwf	??_pad,w
  8763  0CC9  1D03               	skipz
  8764  0CCA  2CCD               	goto	u4465
  8765  0CCB  0836               	movf	pad@w,w
  8766  0CCC  0234               	subwf	pad@i,w
  8767  0CCD                     u4465:
  8768  0CCD  1C03               	skipc
  8769  0CCE  2CD0               	goto	u4461
  8770  0CCF  2CD1               	goto	u4460
  8771  0CD0                     u4461:
  8772  0CD0  2CB2               	goto	l5388
  8773  0CD1                     u4460:
  8774  0CD1                     l1939:
  8775                           
  8776                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  8777  0CD1  1877               	btfsc	_flags,0
  8778  0CD2  2CD4               	goto	u4471
  8779  0CD3  2CD5               	goto	u4470
  8780  0CD4                     u4471:
  8781  0CD4  2CDE               	goto	l5396
  8782  0CD5                     u4470:
  8783  0CD5                     l5394:
  8784                           
  8785                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  8786  0CD5  0020               	movlb	0	; select bank0
  8787  0CD6  0838               	movf	pad@fp,w
  8788  0CD7  00B3               	movwf	??_pad
  8789  0CD8  0833               	movf	??_pad,w
  8790  0CD9  00A8               	movwf	fputs@fp
  8791  0CDA  0830               	movf	pad@buf,w
  8792  0CDB  318B  2354  318C   	fcall	_fputs
  8793  0CDE                     l5396:
  8794                           
  8795                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  8796  0CDE  0020               	movlb	0	; select bank0
  8797  0CDF  0830               	movf	pad@buf,w
  8798  0CE0  318A  2210  318C   	fcall	_strlen
  8799  0CE3  0020               	movlb	0	; select bank0
  8800  0CE4  0836               	movf	pad@w,w
  8801  0CE5  0720               	addwf	?_strlen,w
  8802  0CE6  00B0               	movwf	?_pad
  8803  0CE7  0837               	movf	pad@w+1,w
  8804  0CE8  3D21               	addwfc	?_strlen+1,w
  8805  0CE9  00B1               	movwf	?_pad+1
  8806  0CEA                     l1941:
  8807  0CEA  0008               	return
  8808  0CEB                     __end_of_pad:
  8809                           
  8810                           	psect	text6
  8811  0A10                     __ptext6:	
  8812 ;; *************** function _strlen *****************
  8813 ;; Defined at:
  8814 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  8815 ;; Parameters:    Size  Location     Type
  8816 ;;  s               1    wreg     PTR const unsigned char 
  8817 ;;		 -> dbuf(32), 
  8818 ;; Auto vars:     Size  Location     Type
  8819 ;;  s               1    4[BANK0 ] PTR const unsigned char 
  8820 ;;		 -> dbuf(32), 
  8821 ;;  a               1    3[BANK0 ] PTR const unsigned char 
  8822 ;;		 -> dbuf(32), 
  8823 ;; Return value:  Size  Location     Type
  8824 ;;                  2    0[BANK0 ] unsigned int 
  8825 ;; Registers used:
  8826 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  8827 ;; Tracked objects:
  8828 ;;		On entry : 0/0
  8829 ;;		On exit  : 0/0
  8830 ;;		Unchanged: 0/0
  8831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8832 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8833 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8834 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8835 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8836 ;;Total ram usage:        5 bytes
  8837 ;; Hardware stack levels used: 1
  8838 ;; Hardware stack levels required when called: 5
  8839 ;; This function calls:
  8840 ;;		Nothing
  8841 ;; This function is called by:
  8842 ;;		_pad
  8843 ;; This function uses a non-reentrant model
  8844 ;;
  8845                           
  8846                           
  8847                           ;psect for function _strlen
  8848  0A10                     _strlen:
  8849                           
  8850                           ;incstack = 0
  8851                           ; Regs used in _strlen: [wreg+fsr1l+fsr1h+status,2+status,0]
  8852                           ;strlen@s stored from wreg
  8853  0A10  0020               	movlb	0	; select bank0
  8854  0A11  00A4               	movwf	strlen@s
  8855  0A12                     l5286:
  8856  0A12  0824               	movf	strlen@s,w
  8857  0A13  00A2               	movwf	??_strlen
  8858  0A14  0822               	movf	??_strlen,w
  8859  0A15  00A3               	movwf	strlen@a
  8860  0A16  2A1B               	goto	l5290
  8861  0A17                     l5288:
  8862  0A17  3001               	movlw	1
  8863  0A18  00A2               	movwf	??_strlen
  8864  0A19  0822               	movf	??_strlen,w
  8865  0A1A  07A4               	addwf	strlen@s,f
  8866  0A1B                     l5290:
  8867  0A1B  0824               	movf	strlen@s,w
  8868  0A1C  0086               	movwf	6
  8869  0A1D  3001               	movlw	1	; select bank2/3
  8870  0A1E  0087               	movwf	7
  8871  0A1F  0801               	movf	1,w
  8872  0A20  1D03               	btfss	3,2
  8873  0A21  2A23               	goto	u4181
  8874  0A22  2A24               	goto	u4180
  8875  0A23                     u4181:
  8876  0A23  2A17               	goto	l5288
  8877  0A24                     u4180:
  8878  0A24                     l5292:
  8879  0A24  0823               	movf	strlen@a,w
  8880  0A25  0224               	subwf	strlen@s,w
  8881  0A26  00A0               	movwf	?_strlen
  8882  0A27  01A1               	clrf	?_strlen+1
  8883  0A28  1BA0               	btfsc	?_strlen,7
  8884  0A29  03A1               	decf	?_strlen+1,f
  8885  0A2A                     l2084:
  8886  0A2A  0008               	return
  8887  0A2B                     __end_of_strlen:
  8888                           
  8889                           	psect	text7
  8890  0B54                     __ptext7:	
  8891 ;; *************** function _fputs *****************
  8892 ;; Defined at:
  8893 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  8894 ;; Parameters:    Size  Location     Type
  8895 ;;  s               1    wreg     PTR const unsigned char 
  8896 ;;		 -> dbuf(32), 
  8897 ;;  fp              1    8[BANK0 ] PTR struct _IO_FILE
  8898 ;;		 -> sprintf@f(5), 
  8899 ;; Auto vars:     Size  Location     Type
  8900 ;;  s               1   15[BANK0 ] PTR const unsigned char 
  8901 ;;		 -> dbuf(32), 
  8902 ;;  i               2   13[BANK0 ] int 
  8903 ;;  c               1   12[BANK0 ] unsigned char 
  8904 ;; Return value:  Size  Location     Type
  8905 ;;                  2    8[BANK0 ] int 
  8906 ;; Registers used:
  8907 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8908 ;; Tracked objects:
  8909 ;;		On entry : 0/0
  8910 ;;		On exit  : 0/0
  8911 ;;		Unchanged: 0/0
  8912 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8913 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8914 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8915 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8916 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8917 ;;Total ram usage:        8 bytes
  8918 ;; Hardware stack levels used: 1
  8919 ;; Hardware stack levels required when called: 7
  8920 ;; This function calls:
  8921 ;;		_fputc
  8922 ;; This function is called by:
  8923 ;;		_pad
  8924 ;; This function uses a non-reentrant model
  8925 ;;
  8926                           
  8927                           
  8928                           ;psect for function _fputs
  8929  0B54                     _fputs:
  8930                           
  8931                           ;incstack = 0
  8932                           ; Regs used in _fputs: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8933                           ;fputs@s stored from wreg
  8934  0B54  0020               	movlb	0	; select bank0
  8935  0B55  00AF               	movwf	fputs@s
  8936  0B56                     l5278:
  8937  0B56  01AD               	clrf	fputs@i
  8938  0B57  01AE               	clrf	fputs@i+1
  8939  0B58  2B6C               	goto	l5284
  8940  0B59                     l5280:
  8941  0B59  082C               	movf	fputs@c,w
  8942  0B5A  00A9               	movwf	??_fputs
  8943  0B5B  01AA               	clrf	??_fputs+1
  8944  0B5C  0829               	movf	??_fputs,w
  8945  0B5D  00A0               	movwf	fputc@c
  8946  0B5E  082A               	movf	??_fputs+1,w
  8947  0B5F  00A1               	movwf	fputc@c+1
  8948  0B60  0828               	movf	fputs@fp,w
  8949  0B61  00AB               	movwf	??_fputs+2
  8950  0B62  082B               	movf	??_fputs+2,w
  8951  0B63  00A2               	movwf	fputc@fp
  8952  0B64  318B  23F1  318B   	fcall	_fputc
  8953  0B67                     l5282:
  8954  0B67  3001               	movlw	1
  8955  0B68  0020               	movlb	0	; select bank0
  8956  0B69  07AD               	addwf	fputs@i,f
  8957  0B6A  3000               	movlw	0
  8958  0B6B  3DAE               	addwfc	fputs@i+1,f
  8959  0B6C                     l5284:
  8960  0B6C  082D               	movf	fputs@i,w
  8961  0B6D  072F               	addwf	fputs@s,w
  8962  0B6E  00A9               	movwf	??_fputs
  8963  0B6F  0829               	movf	??_fputs,w
  8964  0B70  0086               	movwf	6
  8965  0B71  3001               	movlw	1	; select bank2/3
  8966  0B72  0087               	movwf	7
  8967  0B73  0801               	movf	1,w
  8968  0B74  00AA               	movwf	??_fputs+1
  8969  0B75  082A               	movf	??_fputs+1,w
  8970  0B76  00AC               	movwf	fputs@c
  8971  0B77  082C               	movf	fputs@c,w
  8972  0B78  1D03               	btfss	3,2
  8973  0B79  2B7B               	goto	u4171
  8974  0B7A  2B7C               	goto	u4170
  8975  0B7B                     u4171:
  8976  0B7B  2B59               	goto	l5280
  8977  0B7C                     u4170:
  8978  0B7C                     l2075:
  8979  0B7C  0008               	return
  8980  0B7D                     __end_of_fputs:
  8981                           
  8982                           	psect	text8
  8983  0BF1                     __ptext8:	
  8984 ;; *************** function _fputc *****************
  8985 ;; Defined at:
  8986 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  8987 ;; Parameters:    Size  Location     Type
  8988 ;;  c               2    0[BANK0 ] int 
  8989 ;;  fp              1    2[BANK0 ] PTR struct _IO_FILE
  8990 ;;		 -> sprintf@f(5), 
  8991 ;; Auto vars:     Size  Location     Type
  8992 ;;		None
  8993 ;; Return value:  Size  Location     Type
  8994 ;;                  2    0[BANK0 ] int 
  8995 ;; Registers used:
  8996 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8997 ;; Tracked objects:
  8998 ;;		On entry : 0/0
  8999 ;;		On exit  : 0/0
  9000 ;;		Unchanged: 0/0
  9001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9002 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9003 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9004 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9005 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9006 ;;Total ram usage:        8 bytes
  9007 ;; Hardware stack levels used: 1
  9008 ;; Hardware stack levels required when called: 6
  9009 ;; This function calls:
  9010 ;;		_putch
  9011 ;; This function is called by:
  9012 ;;		_pad
  9013 ;;		_vfpfcnvrt
  9014 ;;		_fputs
  9015 ;; This function uses a non-reentrant model
  9016 ;;
  9017                           
  9018                           
  9019                           ;psect for function _fputc
  9020  0BF1                     _fputc:
  9021  0BF1                     l5262:	
  9022                           ;incstack = 0
  9023                           ; Regs used in _fputc: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9024                           
  9025  0BF1  0020               	movlb	0	; select bank0
  9026  0BF2  0822               	movf	fputc@fp,w
  9027  0BF3  1903               	btfsc	3,2
  9028  0BF4  2BF6               	goto	u4131
  9029  0BF5  2BF7               	goto	u4130
  9030  0BF6                     u4131:
  9031  0BF6  2BFC               	goto	l5266
  9032  0BF7                     u4130:
  9033  0BF7                     l5264:
  9034  0BF7  0822               	movf	fputc@fp,w
  9035  0BF8  1D03               	btfss	3,2
  9036  0BF9  2BFB               	goto	u4141
  9037  0BFA  2BFC               	goto	u4140
  9038  0BFB                     u4141:
  9039  0BFB  2C01               	goto	l5268
  9040  0BFC                     u4140:
  9041  0BFC                     l5266:
  9042  0BFC  0820               	movf	fputc@c,w
  9043  0BFD  3187  27FE  318B   	fcall	_putch
  9044  0C00  2C41               	goto	l2067
  9045  0C01                     l5268:
  9046  0C01  0822               	movf	fputc@fp,w
  9047  0C02  3E03               	addlw	3
  9048  0C03  0086               	movwf	6
  9049  0C04  0187               	clrf	7
  9050  0C05  0016               	moviw fsr1++
  9051  0C06  0401               	iorwf	1,w
  9052  0C07  1903               	btfsc	3,2
  9053  0C08  2C0A               	goto	u4151
  9054  0C09  2C0B               	goto	u4150
  9055  0C0A                     u4151:
  9056  0C0A  2C28               	goto	l5272
  9057  0C0B                     u4150:
  9058  0C0B                     l5270:
  9059  0C0B  0822               	movf	fputc@fp,w
  9060  0C0C  3E03               	addlw	3
  9061  0C0D  0086               	movwf	6
  9062  0C0E  0187               	clrf	7
  9063  0C0F  3F40               	moviw [0]fsr1
  9064  0C10  00A3               	movwf	??_fputc
  9065  0C11  3F41               	moviw [1]fsr1
  9066  0C12  00A4               	movwf	??_fputc+1
  9067  0C13  0A22               	incf	fputc@fp,w
  9068  0C14  0086               	movwf	6
  9069  0C15  0187               	clrf	7
  9070  0C16  3F40               	moviw [0]fsr1
  9071  0C17  00A5               	movwf	??_fputc+2
  9072  0C18  3F41               	moviw [1]fsr1
  9073  0C19  00A6               	movwf	??_fputc+3
  9074  0C1A  0826               	movf	??_fputc+3,w
  9075  0C1B  3A80               	xorlw	128
  9076  0C1C  00A7               	movwf	??_fputc+4
  9077  0C1D  0824               	movf	??_fputc+1,w
  9078  0C1E  3A80               	xorlw	128
  9079  0C1F  0227               	subwf	??_fputc+4,w
  9080  0C20  1D03               	skipz
  9081  0C21  2C24               	goto	u4165
  9082  0C22  0823               	movf	??_fputc,w
  9083  0C23  0225               	subwf	??_fputc+2,w
  9084  0C24                     u4165:
  9085  0C24  1803               	skipnc
  9086  0C25  2C27               	goto	u4161
  9087  0C26  2C28               	goto	u4160
  9088  0C27                     u4161:
  9089  0C27  2C41               	goto	l2067
  9090  0C28                     u4160:
  9091  0C28                     l5272:
  9092  0C28  0020               	movlb	0	; select bank0
  9093  0C29  0820               	movf	fputc@c,w
  9094  0C2A  00A3               	movwf	??_fputc
  9095  0C2B  0822               	movf	fputc@fp,w
  9096  0C2C  0086               	movwf	6
  9097  0C2D  0187               	clrf	7
  9098  0C2E  0A22               	incf	fputc@fp,w
  9099  0C2F  0084               	movwf	4
  9100  0C30  0185               	clrf	5
  9101  0C31  0800               	movf	0,w
  9102  0C32  0701               	addwf	1,w
  9103  0C33  00A4               	movwf	??_fputc+1
  9104  0C34  0824               	movf	??_fputc+1,w
  9105  0C35  0086               	movwf	6
  9106  0C36  0187               	clrf	7
  9107  0C37  0823               	movf	??_fputc,w
  9108  0C38  0081               	movwf	1
  9109  0C39                     l5274:
  9110  0C39  0A22               	incf	fputc@fp,w
  9111  0C3A  0086               	movwf	6
  9112  0C3B  0187               	clrf	7
  9113  0C3C  3001               	movlw	1
  9114  0C3D  0781               	addwf	1,f
  9115  0C3E  3141               	addfsr 1,1
  9116  0C3F  1803               	skipnc
  9117  0C40  0A81               	incf	1,f
  9118  0C41                     l2067:
  9119  0C41  0008               	return
  9120  0C42                     __end_of_fputc:
  9121                           
  9122                           	psect	text9
  9123  07FE                     __ptext9:	
  9124 ;; *************** function _putch *****************
  9125 ;; Defined at:
  9126 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  9127 ;; Parameters:    Size  Location     Type
  9128 ;;  c               1    wreg     unsigned char 
  9129 ;; Auto vars:     Size  Location     Type
  9130 ;;  c               1    0[COMMON] unsigned char 
  9131 ;; Return value:  Size  Location     Type
  9132 ;;                  1    wreg      void 
  9133 ;; Registers used:
  9134 ;;		wreg
  9135 ;; Tracked objects:
  9136 ;;		On entry : 0/0
  9137 ;;		On exit  : 0/0
  9138 ;;		Unchanged: 0/0
  9139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9144 ;;Total ram usage:        0 bytes
  9145 ;; Hardware stack levels used: 1
  9146 ;; Hardware stack levels required when called: 5
  9147 ;; This function calls:
  9148 ;;		Nothing
  9149 ;; This function is called by:
  9150 ;;		_fputc
  9151 ;; This function uses a non-reentrant model
  9152 ;;
  9153                           
  9154                           
  9155                           ;psect for function _putch
  9156  07FE                     _putch:
  9157  07FE                     l2078:	
  9158                           ;incstack = 0
  9159                           ; Regs used in _putch: [wreg]
  9160                           
  9161  07FE  0008               	return
  9162  07FF                     __end_of_putch:
  9163                           
  9164                           	psect	text10
  9165  0A47                     __ptext10:	
  9166 ;; *************** function _abs *****************
  9167 ;; Defined at:
  9168 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  9169 ;; Parameters:    Size  Location     Type
  9170 ;;  a               2   19[BANK0 ] int 
  9171 ;; Auto vars:     Size  Location     Type
  9172 ;;		None
  9173 ;; Return value:  Size  Location     Type
  9174 ;;                  2   19[BANK0 ] int 
  9175 ;; Registers used:
  9176 ;;		wreg, status,2, status,0
  9177 ;; Tracked objects:
  9178 ;;		On entry : 0/0
  9179 ;;		On exit  : 0/0
  9180 ;;		Unchanged: 0/0
  9181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9182 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9184 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9185 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9186 ;;Total ram usage:        4 bytes
  9187 ;; Hardware stack levels used: 1
  9188 ;; Hardware stack levels required when called: 5
  9189 ;; This function calls:
  9190 ;;		Nothing
  9191 ;; This function is called by:
  9192 ;;		_dtoa
  9193 ;; This function uses a non-reentrant model
  9194 ;;
  9195                           
  9196                           
  9197                           ;psect for function _abs
  9198  0A47                     _abs:
  9199  0A47                     l3918:	
  9200                           ;incstack = 0
  9201                           ; Regs used in _abs: [wreg+status,2+status,0]
  9202                           
  9203  0A47  0020               	movlb	0	; select bank0
  9204  0A48  0834               	movf	abs@a+1,w
  9205  0A49  3A80               	xorlw	128
  9206  0A4A  00B5               	movwf	??_abs
  9207  0A4B  3080               	movlw	128
  9208  0A4C  0235               	subwf	??_abs,w
  9209  0A4D  1D03               	skipz
  9210  0A4E  2A51               	goto	u2445
  9211  0A4F  3001               	movlw	1
  9212  0A50  0233               	subwf	abs@a,w
  9213  0A51                     u2445:
  9214  0A51  1803               	skipnc
  9215  0A52  2A54               	goto	u2441
  9216  0A53  2A55               	goto	u2440
  9217  0A54                     u2441:
  9218  0A54  2A62               	goto	l2007
  9219  0A55                     u2440:
  9220  0A55                     l3920:
  9221  0A55  0020               	movlb	0	; select bank0
  9222  0A56  0933               	comf	abs@a,w
  9223  0A57  00B5               	movwf	??_abs
  9224  0A58  0934               	comf	abs@a+1,w
  9225  0A59  00B6               	movwf	??_abs+1
  9226  0A5A  0AB5               	incf	??_abs,f
  9227  0A5B  1903               	skipnz
  9228  0A5C  0AB6               	incf	??_abs+1,f
  9229  0A5D  0835               	movf	??_abs,w
  9230  0A5E  00B3               	movwf	?_abs
  9231  0A5F  0836               	movf	??_abs+1,w
  9232  0A60  00B4               	movwf	?_abs+1
  9233  0A61  2A62               	goto	l2010
  9234  0A62                     l2007:
  9235  0A62                     l2010:
  9236  0A62  0008               	return
  9237  0A63                     __end_of_abs:
  9238                           
  9239                           	psect	text11
  9240  0F13                     __ptext11:	
  9241 ;; *************** function ___aomod *****************
  9242 ;; Defined at:
  9243 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  9244 ;; Parameters:    Size  Location     Type
  9245 ;;  divisor         8    0[BANK0 ] long long 
  9246 ;;  dividend        8    8[BANK0 ] long long 
  9247 ;; Auto vars:     Size  Location     Type
  9248 ;;  sign            1   18[BANK0 ] unsigned char 
  9249 ;;  counter         1   17[BANK0 ] unsigned char 
  9250 ;; Return value:  Size  Location     Type
  9251 ;;                  8    0[BANK0 ] long long 
  9252 ;; Registers used:
  9253 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9254 ;; Tracked objects:
  9255 ;;		On entry : 0/0
  9256 ;;		On exit  : 0/0
  9257 ;;		Unchanged: 0/0
  9258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9259 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9260 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9261 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9262 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9263 ;;Total ram usage:       19 bytes
  9264 ;; Hardware stack levels used: 1
  9265 ;; Hardware stack levels required when called: 5
  9266 ;; This function calls:
  9267 ;;		Nothing
  9268 ;; This function is called by:
  9269 ;;		_dtoa
  9270 ;; This function uses a non-reentrant model
  9271 ;;
  9272                           
  9273                           
  9274                           ;psect for function ___aomod
  9275  0F13                     ___aomod:
  9276  0F13                     l5348:	
  9277                           ;incstack = 0
  9278                           ; Regs used in ___aomod: [wreg+fsr1l+fsr1h+status,2+status,0]
  9279                           
  9280  0F13  0020               	movlb	0	; select bank0
  9281  0F14  01B2               	clrf	___aomod@sign
  9282  0F15                     l5350:
  9283  0F15  3028               	movlw	low ___aomod@dividend
  9284  0F16  0086               	movwf	6
  9285  0F17  3000               	movlw	high ___aomod@dividend
  9286  0F18  0087               	movwf	7
  9287  0F19  3F47               	moviw [7]fsr1
  9288  0F1A  00B0               	movwf	??___aomod
  9289  0F1B  1FB0               	btfss	??___aomod,7
  9290  0F1C  2F1E               	goto	u4341
  9291  0F1D  2F1F               	goto	u4340
  9292  0F1E                     u4341:
  9293  0F1E  2F41               	goto	l5354
  9294  0F1F                     u4340:
  9295  0F1F                     l5352:
  9296  0F1F  0020               	movlb	0	; select bank0
  9297  0F20  09A8               	comf	___aomod@dividend,f
  9298  0F21  09A9               	comf	___aomod@dividend+1,f
  9299  0F22  09AA               	comf	___aomod@dividend+2,f
  9300  0F23  09AB               	comf	___aomod@dividend+3,f
  9301  0F24  09AC               	comf	___aomod@dividend+4,f
  9302  0F25  09AD               	comf	___aomod@dividend+5,f
  9303  0F26  09AE               	comf	___aomod@dividend+6,f
  9304  0F27  09AF               	comf	___aomod@dividend+7,f
  9305  0F28  0AA8               	incf	___aomod@dividend,f
  9306  0F29  1D03               	skipz
  9307  0F2A  2F3E               	goto	u435lld
  9308  0F2B  0AA9               	incf	___aomod@dividend+1,f
  9309  0F2C  1D03               	skipz
  9310  0F2D  2F3E               	goto	u435lld
  9311  0F2E  0AAA               	incf	___aomod@dividend+2,f
  9312  0F2F  1D03               	skipz
  9313  0F30  2F3E               	goto	u435lld
  9314  0F31  0AAB               	incf	___aomod@dividend+3,f
  9315  0F32  1D03               	skipz
  9316  0F33  2F3E               	goto	u435lld
  9317  0F34  0AAC               	incf	___aomod@dividend+4,f
  9318  0F35  1D03               	skipz
  9319  0F36  2F3E               	goto	u435lld
  9320  0F37  0AAD               	incf	___aomod@dividend+5,f
  9321  0F38  1D03               	skipz
  9322  0F39  2F3E               	goto	u435lld
  9323  0F3A  0AAE               	incf	___aomod@dividend+6,f
  9324  0F3B  1D03               	skipz
  9325  0F3C  2F3E               	goto	u435lld
  9326  0F3D  0AAF               	incf	___aomod@dividend+7,f
  9327  0F3E                     u435lld:
  9328  0F3E  0020               	movlb	0	; select bank0
  9329  0F3F  01B2               	clrf	___aomod@sign
  9330  0F40  0AB2               	incf	___aomod@sign,f
  9331  0F41                     l5354:
  9332  0F41  3020               	movlw	low ___aomod@divisor
  9333  0F42  0086               	movwf	6
  9334  0F43  3000               	movlw	high ___aomod@divisor
  9335  0F44  0087               	movwf	7
  9336  0F45  3F47               	moviw [7]fsr1
  9337  0F46  0020               	movlb	0	; select bank0
  9338  0F47  00B0               	movwf	??___aomod
  9339  0F48  1FB0               	btfss	??___aomod,7
  9340  0F49  2F4B               	goto	u4361
  9341  0F4A  2F4C               	goto	u4360
  9342  0F4B                     u4361:
  9343  0F4B  2F6B               	goto	l5358
  9344  0F4C                     u4360:
  9345  0F4C                     l5356:
  9346  0F4C  0020               	movlb	0	; select bank0
  9347  0F4D  09A0               	comf	___aomod@divisor,f
  9348  0F4E  09A1               	comf	___aomod@divisor+1,f
  9349  0F4F  09A2               	comf	___aomod@divisor+2,f
  9350  0F50  09A3               	comf	___aomod@divisor+3,f
  9351  0F51  09A4               	comf	___aomod@divisor+4,f
  9352  0F52  09A5               	comf	___aomod@divisor+5,f
  9353  0F53  09A6               	comf	___aomod@divisor+6,f
  9354  0F54  09A7               	comf	___aomod@divisor+7,f
  9355  0F55  0AA0               	incf	___aomod@divisor,f
  9356  0F56  1D03               	skipz
  9357  0F57  2F6B               	goto	u437lld
  9358  0F58  0AA1               	incf	___aomod@divisor+1,f
  9359  0F59  1D03               	skipz
  9360  0F5A  2F6B               	goto	u437lld
  9361  0F5B  0AA2               	incf	___aomod@divisor+2,f
  9362  0F5C  1D03               	skipz
  9363  0F5D  2F6B               	goto	u437lld
  9364  0F5E  0AA3               	incf	___aomod@divisor+3,f
  9365  0F5F  1D03               	skipz
  9366  0F60  2F6B               	goto	u437lld
  9367  0F61  0AA4               	incf	___aomod@divisor+4,f
  9368  0F62  1D03               	skipz
  9369  0F63  2F6B               	goto	u437lld
  9370  0F64  0AA5               	incf	___aomod@divisor+5,f
  9371  0F65  1D03               	skipz
  9372  0F66  2F6B               	goto	u437lld
  9373  0F67  0AA6               	incf	___aomod@divisor+6,f
  9374  0F68  1D03               	skipz
  9375  0F69  2F6B               	goto	u437lld
  9376  0F6A  0AA7               	incf	___aomod@divisor+7,f
  9377  0F6B                     u437lld:
  9378  0F6B                     l5358:
  9379  0F6B  0020               	movlb	0	; select bank0
  9380  0F6C  0820               	movf	___aomod@divisor,w
  9381  0F6D  0421               	iorwf	___aomod@divisor+1,w
  9382  0F6E  0422               	iorwf	___aomod@divisor+2,w
  9383  0F6F  0423               	iorwf	___aomod@divisor+3,w
  9384  0F70  0424               	iorwf	___aomod@divisor+4,w
  9385  0F71  0425               	iorwf	___aomod@divisor+5,w
  9386  0F72  0426               	iorwf	___aomod@divisor+6,w
  9387  0F73  0427               	iorwf	___aomod@divisor+7,w
  9388  0F74  1903               	skipnz
  9389  0F75  2F77               	goto	u4381
  9390  0F76  2F78               	goto	u4380
  9391  0F77                     u4381:
  9392  0F77  2FCB               	goto	l5374
  9393  0F78                     u4380:
  9394  0F78                     l5360:
  9395  0F78  01B1               	clrf	___aomod@counter
  9396  0F79  0AB1               	incf	___aomod@counter,f
  9397  0F7A  2F87               	goto	l5366
  9398  0F7B                     l5362:
  9399  0F7B  35A0               	lslf	___aomod@divisor,f
  9400  0F7C  0DA1               	rlf	___aomod@divisor+1,f
  9401  0F7D  0DA2               	rlf	___aomod@divisor+2,f
  9402  0F7E  0DA3               	rlf	___aomod@divisor+3,f
  9403  0F7F  0DA4               	rlf	___aomod@divisor+4,f
  9404  0F80  0DA5               	rlf	___aomod@divisor+5,f
  9405  0F81  0DA6               	rlf	___aomod@divisor+6,f
  9406  0F82  0DA7               	rlf	___aomod@divisor+7,f
  9407  0F83                     l5364:
  9408  0F83  3001               	movlw	1
  9409  0F84  00B0               	movwf	??___aomod
  9410  0F85  0830               	movf	??___aomod,w
  9411  0F86  07B1               	addwf	___aomod@counter,f
  9412  0F87                     l5366:
  9413  0F87  1FA7               	btfss	___aomod@divisor+7,7
  9414  0F88  2F8A               	goto	u4391
  9415  0F89  2F8B               	goto	u4390
  9416  0F8A                     u4391:
  9417  0F8A  2F7B               	goto	l5362
  9418  0F8B                     u4390:
  9419  0F8B                     l5368:
  9420  0F8B  0827               	movf	___aomod@divisor+7,w
  9421  0F8C  022F               	subwf	___aomod@dividend+7,w
  9422  0F8D  1D03               	skipz
  9423  0F8E  2FA9               	goto	u4405
  9424  0F8F  0826               	movf	___aomod@divisor+6,w
  9425  0F90  022E               	subwf	___aomod@dividend+6,w
  9426  0F91  1D03               	skipz
  9427  0F92  2FA9               	goto	u4405
  9428  0F93  0825               	movf	___aomod@divisor+5,w
  9429  0F94  022D               	subwf	___aomod@dividend+5,w
  9430  0F95  1D03               	skipz
  9431  0F96  2FA9               	goto	u4405
  9432  0F97  0824               	movf	___aomod@divisor+4,w
  9433  0F98  022C               	subwf	___aomod@dividend+4,w
  9434  0F99  1D03               	skipz
  9435  0F9A  2FA9               	goto	u4405
  9436  0F9B  0823               	movf	___aomod@divisor+3,w
  9437  0F9C  022B               	subwf	___aomod@dividend+3,w
  9438  0F9D  1D03               	skipz
  9439  0F9E  2FA9               	goto	u4405
  9440  0F9F  0822               	movf	___aomod@divisor+2,w
  9441  0FA0  022A               	subwf	___aomod@dividend+2,w
  9442  0FA1  1D03               	skipz
  9443  0FA2  2FA9               	goto	u4405
  9444  0FA3  0821               	movf	___aomod@divisor+1,w
  9445  0FA4  0229               	subwf	___aomod@dividend+1,w
  9446  0FA5  1D03               	skipz
  9447  0FA6  2FA9               	goto	u4405
  9448  0FA7  0820               	movf	___aomod@divisor,w
  9449  0FA8  0228               	subwf	___aomod@dividend,w
  9450  0FA9                     u4405:
  9451  0FA9  1C03               	skipc
  9452  0FAA  2FAC               	goto	u4401
  9453  0FAB  2FAD               	goto	u4400
  9454  0FAC                     u4401:
  9455  0FAC  2FBD               	goto	l5372
  9456  0FAD                     u4400:
  9457  0FAD                     l5370:
  9458  0FAD  0820               	movf	___aomod@divisor,w
  9459  0FAE  02A8               	subwf	___aomod@dividend,f
  9460  0FAF  0821               	movf	___aomod@divisor+1,w
  9461  0FB0  3BA9               	subwfb	___aomod@dividend+1,f
  9462  0FB1  0822               	movf	___aomod@divisor+2,w
  9463  0FB2  3BAA               	subwfb	___aomod@dividend+2,f
  9464  0FB3  0823               	movf	___aomod@divisor+3,w
  9465  0FB4  3BAB               	subwfb	___aomod@dividend+3,f
  9466  0FB5  0824               	movf	___aomod@divisor+4,w
  9467  0FB6  3BAC               	subwfb	___aomod@dividend+4,f
  9468  0FB7  0825               	movf	___aomod@divisor+5,w
  9469  0FB8  3BAD               	subwfb	___aomod@dividend+5,f
  9470  0FB9  0826               	movf	___aomod@divisor+6,w
  9471  0FBA  3BAE               	subwfb	___aomod@dividend+6,f
  9472  0FBB  0827               	movf	___aomod@divisor+7,w
  9473  0FBC  3BAF               	subwfb	___aomod@dividend+7,f
  9474  0FBD                     l5372:
  9475  0FBD  36A7               	lsrf	___aomod@divisor+7,f
  9476  0FBE  0CA6               	rrf	___aomod@divisor+6,f
  9477  0FBF  0CA5               	rrf	___aomod@divisor+5,f
  9478  0FC0  0CA4               	rrf	___aomod@divisor+4,f
  9479  0FC1  0CA3               	rrf	___aomod@divisor+3,f
  9480  0FC2  0CA2               	rrf	___aomod@divisor+2,f
  9481  0FC3  0CA1               	rrf	___aomod@divisor+1,f
  9482  0FC4  0CA0               	rrf	___aomod@divisor,f
  9483  0FC5  3001               	movlw	1
  9484  0FC6  02B1               	subwf	___aomod@counter,f
  9485  0FC7  1D03               	btfss	3,2
  9486  0FC8  2FCA               	goto	u4411
  9487  0FC9  2FCB               	goto	u4410
  9488  0FCA                     u4411:
  9489  0FCA  2F8B               	goto	l5368
  9490  0FCB                     u4410:
  9491  0FCB                     l5374:
  9492  0FCB  0832               	movf	___aomod@sign,w
  9493  0FCC  1903               	btfsc	3,2
  9494  0FCD  2FCF               	goto	u4421
  9495  0FCE  2FD0               	goto	u4420
  9496  0FCF                     u4421:
  9497  0FCF  2FEE               	goto	l1555
  9498  0FD0                     u4420:
  9499  0FD0                     l5376:
  9500  0FD0  09A8               	comf	___aomod@dividend,f
  9501  0FD1  09A9               	comf	___aomod@dividend+1,f
  9502  0FD2  09AA               	comf	___aomod@dividend+2,f
  9503  0FD3  09AB               	comf	___aomod@dividend+3,f
  9504  0FD4  09AC               	comf	___aomod@dividend+4,f
  9505  0FD5  09AD               	comf	___aomod@dividend+5,f
  9506  0FD6  09AE               	comf	___aomod@dividend+6,f
  9507  0FD7  09AF               	comf	___aomod@dividend+7,f
  9508  0FD8  0AA8               	incf	___aomod@dividend,f
  9509  0FD9  1D03               	skipz
  9510  0FDA  2FEE               	goto	u443lld
  9511  0FDB  0AA9               	incf	___aomod@dividend+1,f
  9512  0FDC  1D03               	skipz
  9513  0FDD  2FEE               	goto	u443lld
  9514  0FDE  0AAA               	incf	___aomod@dividend+2,f
  9515  0FDF  1D03               	skipz
  9516  0FE0  2FEE               	goto	u443lld
  9517  0FE1  0AAB               	incf	___aomod@dividend+3,f
  9518  0FE2  1D03               	skipz
  9519  0FE3  2FEE               	goto	u443lld
  9520  0FE4  0AAC               	incf	___aomod@dividend+4,f
  9521  0FE5  1D03               	skipz
  9522  0FE6  2FEE               	goto	u443lld
  9523  0FE7  0AAD               	incf	___aomod@dividend+5,f
  9524  0FE8  1D03               	skipz
  9525  0FE9  2FEE               	goto	u443lld
  9526  0FEA  0AAE               	incf	___aomod@dividend+6,f
  9527  0FEB  1D03               	skipz
  9528  0FEC  2FEE               	goto	u443lld
  9529  0FED  0AAF               	incf	___aomod@dividend+7,f
  9530  0FEE                     u443lld:
  9531  0FEE                     l1555:
  9532  0FEE  0020               	movlb	0	; select bank0
  9533  0FEF  0828               	movf	___aomod@dividend,w
  9534  0FF0  00A0               	movwf	?___aomod
  9535  0FF1  0829               	movf	___aomod@dividend+1,w
  9536  0FF2  00A1               	movwf	?___aomod+1
  9537  0FF3  082A               	movf	___aomod@dividend+2,w
  9538  0FF4  00A2               	movwf	?___aomod+2
  9539  0FF5  082B               	movf	___aomod@dividend+3,w
  9540  0FF6  00A3               	movwf	?___aomod+3
  9541  0FF7  082C               	movf	___aomod@dividend+4,w
  9542  0FF8  00A4               	movwf	?___aomod+4
  9543  0FF9  082D               	movf	___aomod@dividend+5,w
  9544  0FFA  00A5               	movwf	?___aomod+5
  9545  0FFB  082E               	movf	___aomod@dividend+6,w
  9546  0FFC  00A6               	movwf	?___aomod+6
  9547  0FFD  082F               	movf	___aomod@dividend+7,w
  9548  0FFE  00A7               	movwf	?___aomod+7
  9549  0FFF                     l1556:
  9550  0FFF  0008               	return
  9551  1000                     __end_of___aomod:
  9552                           
  9553                           	psect	text12
  9554  060F                     __ptext12:	
  9555 ;; *************** function ___aodiv *****************
  9556 ;; Defined at:
  9557 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  9558 ;; Parameters:    Size  Location     Type
  9559 ;;  divisor         8    0[BANK0 ] long long 
  9560 ;;  dividend        8    8[BANK0 ] long long 
  9561 ;; Auto vars:     Size  Location     Type
  9562 ;;  quotient        8   19[BANK0 ] long long 
  9563 ;;  sign            1   18[BANK0 ] unsigned char 
  9564 ;;  counter         1   17[BANK0 ] unsigned char 
  9565 ;; Return value:  Size  Location     Type
  9566 ;;                  8    0[BANK0 ] long long 
  9567 ;; Registers used:
  9568 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  9569 ;; Tracked objects:
  9570 ;;		On entry : 0/0
  9571 ;;		On exit  : 0/0
  9572 ;;		Unchanged: 0/0
  9573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9574 ;;      Params:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9575 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9576 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9577 ;;      Totals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9578 ;;Total ram usage:       27 bytes
  9579 ;; Hardware stack levels used: 1
  9580 ;; Hardware stack levels required when called: 5
  9581 ;; This function calls:
  9582 ;;		Nothing
  9583 ;; This function is called by:
  9584 ;;		_dtoa
  9585 ;; This function uses a non-reentrant model
  9586 ;;
  9587                           
  9588                           
  9589                           ;psect for function ___aodiv
  9590  060F                     ___aodiv:
  9591  060F                     l5310:	
  9592                           ;incstack = 0
  9593                           ; Regs used in ___aodiv: [wreg+fsr1l+fsr1h+status,2+status,0]
  9594                           
  9595  060F  0020               	movlb	0	; select bank0
  9596  0610  01B2               	clrf	___aodiv@sign
  9597  0611                     l5312:
  9598  0611  3020               	movlw	low ___aodiv@divisor
  9599  0612  0086               	movwf	6
  9600  0613  3000               	movlw	high ___aodiv@divisor
  9601  0614  0087               	movwf	7
  9602  0615  3F47               	moviw [7]fsr1
  9603  0616  00B0               	movwf	??___aodiv
  9604  0617  1FB0               	btfss	??___aodiv,7
  9605  0618  2E1A               	goto	u4231
  9606  0619  2E1B               	goto	u4230
  9607  061A                     u4231:
  9608  061A  2E3D               	goto	l5316
  9609  061B                     u4230:
  9610  061B                     l5314:
  9611  061B  0020               	movlb	0	; select bank0
  9612  061C  09A0               	comf	___aodiv@divisor,f
  9613  061D  09A1               	comf	___aodiv@divisor+1,f
  9614  061E  09A2               	comf	___aodiv@divisor+2,f
  9615  061F  09A3               	comf	___aodiv@divisor+3,f
  9616  0620  09A4               	comf	___aodiv@divisor+4,f
  9617  0621  09A5               	comf	___aodiv@divisor+5,f
  9618  0622  09A6               	comf	___aodiv@divisor+6,f
  9619  0623  09A7               	comf	___aodiv@divisor+7,f
  9620  0624  0AA0               	incf	___aodiv@divisor,f
  9621  0625  1D03               	skipz
  9622  0626  2E3A               	goto	u424lld
  9623  0627  0AA1               	incf	___aodiv@divisor+1,f
  9624  0628  1D03               	skipz
  9625  0629  2E3A               	goto	u424lld
  9626  062A  0AA2               	incf	___aodiv@divisor+2,f
  9627  062B  1D03               	skipz
  9628  062C  2E3A               	goto	u424lld
  9629  062D  0AA3               	incf	___aodiv@divisor+3,f
  9630  062E  1D03               	skipz
  9631  062F  2E3A               	goto	u424lld
  9632  0630  0AA4               	incf	___aodiv@divisor+4,f
  9633  0631  1D03               	skipz
  9634  0632  2E3A               	goto	u424lld
  9635  0633  0AA5               	incf	___aodiv@divisor+5,f
  9636  0634  1D03               	skipz
  9637  0635  2E3A               	goto	u424lld
  9638  0636  0AA6               	incf	___aodiv@divisor+6,f
  9639  0637  1D03               	skipz
  9640  0638  2E3A               	goto	u424lld
  9641  0639  0AA7               	incf	___aodiv@divisor+7,f
  9642  063A                     u424lld:
  9643  063A  0020               	movlb	0	; select bank0
  9644  063B  01B2               	clrf	___aodiv@sign
  9645  063C  0AB2               	incf	___aodiv@sign,f
  9646  063D                     l5316:
  9647  063D  3028               	movlw	low ___aodiv@dividend
  9648  063E  0086               	movwf	6
  9649  063F  3000               	movlw	high ___aodiv@dividend
  9650  0640  0087               	movwf	7
  9651  0641  3F47               	moviw [7]fsr1
  9652  0642  0020               	movlb	0	; select bank0
  9653  0643  00B0               	movwf	??___aodiv
  9654  0644  1FB0               	btfss	??___aodiv,7
  9655  0645  2E47               	goto	u4251
  9656  0646  2E48               	goto	u4250
  9657  0647                     u4251:
  9658  0647  2E6C               	goto	l5322
  9659  0648                     u4250:
  9660  0648                     l5318:
  9661  0648  0020               	movlb	0	; select bank0
  9662  0649  09A8               	comf	___aodiv@dividend,f
  9663  064A  09A9               	comf	___aodiv@dividend+1,f
  9664  064B  09AA               	comf	___aodiv@dividend+2,f
  9665  064C  09AB               	comf	___aodiv@dividend+3,f
  9666  064D  09AC               	comf	___aodiv@dividend+4,f
  9667  064E  09AD               	comf	___aodiv@dividend+5,f
  9668  064F  09AE               	comf	___aodiv@dividend+6,f
  9669  0650  09AF               	comf	___aodiv@dividend+7,f
  9670  0651  0AA8               	incf	___aodiv@dividend,f
  9671  0652  1D03               	skipz
  9672  0653  2E67               	goto	u426lld
  9673  0654  0AA9               	incf	___aodiv@dividend+1,f
  9674  0655  1D03               	skipz
  9675  0656  2E67               	goto	u426lld
  9676  0657  0AAA               	incf	___aodiv@dividend+2,f
  9677  0658  1D03               	skipz
  9678  0659  2E67               	goto	u426lld
  9679  065A  0AAB               	incf	___aodiv@dividend+3,f
  9680  065B  1D03               	skipz
  9681  065C  2E67               	goto	u426lld
  9682  065D  0AAC               	incf	___aodiv@dividend+4,f
  9683  065E  1D03               	skipz
  9684  065F  2E67               	goto	u426lld
  9685  0660  0AAD               	incf	___aodiv@dividend+5,f
  9686  0661  1D03               	skipz
  9687  0662  2E67               	goto	u426lld
  9688  0663  0AAE               	incf	___aodiv@dividend+6,f
  9689  0664  1D03               	skipz
  9690  0665  2E67               	goto	u426lld
  9691  0666  0AAF               	incf	___aodiv@dividend+7,f
  9692  0667                     u426lld:
  9693  0667                     l5320:
  9694  0667  3001               	movlw	1
  9695  0668  0020               	movlb	0	; select bank0
  9696  0669  00B0               	movwf	??___aodiv
  9697  066A  0830               	movf	??___aodiv,w
  9698  066B  06B2               	xorwf	___aodiv@sign,f
  9699  066C                     l5322:
  9700  066C  3033               	movlw	low ___aodiv@quotient
  9701  066D  0086               	movwf	6
  9702  066E  3000               	movlw	high ___aodiv@quotient
  9703  066F  0087               	movwf	7
  9704  0670  3008               	movlw	8
  9705  0671  0020               	movlb	0	; select bank0
  9706  0672  00B0               	movwf	??___aodiv
  9707  0673  3000               	movlw	0
  9708  0674                     u4270:
  9709  0674  001E               	movwi fsr1++
  9710  0675  0BB0               	decfsz	??___aodiv,f
  9711  0676  2E74               	goto	u4270
  9712  0677                     l5324:
  9713  0677  0820               	movf	___aodiv@divisor,w
  9714  0678  0421               	iorwf	___aodiv@divisor+1,w
  9715  0679  0422               	iorwf	___aodiv@divisor+2,w
  9716  067A  0423               	iorwf	___aodiv@divisor+3,w
  9717  067B  0424               	iorwf	___aodiv@divisor+4,w
  9718  067C  0425               	iorwf	___aodiv@divisor+5,w
  9719  067D  0426               	iorwf	___aodiv@divisor+6,w
  9720  067E  0427               	iorwf	___aodiv@divisor+7,w
  9721  067F  1903               	skipnz
  9722  0680  2E82               	goto	u4281
  9723  0681  2E83               	goto	u4280
  9724  0682                     u4281:
  9725  0682  2EDF               	goto	l5344
  9726  0683                     u4280:
  9727  0683                     l5326:
  9728  0683  01B1               	clrf	___aodiv@counter
  9729  0684  0AB1               	incf	___aodiv@counter,f
  9730  0685  2E92               	goto	l5332
  9731  0686                     l5328:
  9732  0686  35A0               	lslf	___aodiv@divisor,f
  9733  0687  0DA1               	rlf	___aodiv@divisor+1,f
  9734  0688  0DA2               	rlf	___aodiv@divisor+2,f
  9735  0689  0DA3               	rlf	___aodiv@divisor+3,f
  9736  068A  0DA4               	rlf	___aodiv@divisor+4,f
  9737  068B  0DA5               	rlf	___aodiv@divisor+5,f
  9738  068C  0DA6               	rlf	___aodiv@divisor+6,f
  9739  068D  0DA7               	rlf	___aodiv@divisor+7,f
  9740  068E                     l5330:
  9741  068E  3001               	movlw	1
  9742  068F  00B0               	movwf	??___aodiv
  9743  0690  0830               	movf	??___aodiv,w
  9744  0691  07B1               	addwf	___aodiv@counter,f
  9745  0692                     l5332:
  9746  0692  1FA7               	btfss	___aodiv@divisor+7,7
  9747  0693  2E95               	goto	u4291
  9748  0694  2E96               	goto	u4290
  9749  0695                     u4291:
  9750  0695  2E86               	goto	l5328
  9751  0696                     u4290:
  9752  0696                     l5334:
  9753  0696  35B3               	lslf	___aodiv@quotient,f
  9754  0697  0DB4               	rlf	___aodiv@quotient+1,f
  9755  0698  0DB5               	rlf	___aodiv@quotient+2,f
  9756  0699  0DB6               	rlf	___aodiv@quotient+3,f
  9757  069A  0DB7               	rlf	___aodiv@quotient+4,f
  9758  069B  0DB8               	rlf	___aodiv@quotient+5,f
  9759  069C  0DB9               	rlf	___aodiv@quotient+6,f
  9760  069D  0DBA               	rlf	___aodiv@quotient+7,f
  9761  069E                     l5336:
  9762  069E  0827               	movf	___aodiv@divisor+7,w
  9763  069F  022F               	subwf	___aodiv@dividend+7,w
  9764  06A0  1D03               	skipz
  9765  06A1  2EBC               	goto	u4305
  9766  06A2  0826               	movf	___aodiv@divisor+6,w
  9767  06A3  022E               	subwf	___aodiv@dividend+6,w
  9768  06A4  1D03               	skipz
  9769  06A5  2EBC               	goto	u4305
  9770  06A6  0825               	movf	___aodiv@divisor+5,w
  9771  06A7  022D               	subwf	___aodiv@dividend+5,w
  9772  06A8  1D03               	skipz
  9773  06A9  2EBC               	goto	u4305
  9774  06AA  0824               	movf	___aodiv@divisor+4,w
  9775  06AB  022C               	subwf	___aodiv@dividend+4,w
  9776  06AC  1D03               	skipz
  9777  06AD  2EBC               	goto	u4305
  9778  06AE  0823               	movf	___aodiv@divisor+3,w
  9779  06AF  022B               	subwf	___aodiv@dividend+3,w
  9780  06B0  1D03               	skipz
  9781  06B1  2EBC               	goto	u4305
  9782  06B2  0822               	movf	___aodiv@divisor+2,w
  9783  06B3  022A               	subwf	___aodiv@dividend+2,w
  9784  06B4  1D03               	skipz
  9785  06B5  2EBC               	goto	u4305
  9786  06B6  0821               	movf	___aodiv@divisor+1,w
  9787  06B7  0229               	subwf	___aodiv@dividend+1,w
  9788  06B8  1D03               	skipz
  9789  06B9  2EBC               	goto	u4305
  9790  06BA  0820               	movf	___aodiv@divisor,w
  9791  06BB  0228               	subwf	___aodiv@dividend,w
  9792  06BC                     u4305:
  9793  06BC  1C03               	skipc
  9794  06BD  2EBF               	goto	u4301
  9795  06BE  2EC0               	goto	u4300
  9796  06BF                     u4301:
  9797  06BF  2ED1               	goto	l5342
  9798  06C0                     u4300:
  9799  06C0                     l5338:
  9800  06C0  0820               	movf	___aodiv@divisor,w
  9801  06C1  02A8               	subwf	___aodiv@dividend,f
  9802  06C2  0821               	movf	___aodiv@divisor+1,w
  9803  06C3  3BA9               	subwfb	___aodiv@dividend+1,f
  9804  06C4  0822               	movf	___aodiv@divisor+2,w
  9805  06C5  3BAA               	subwfb	___aodiv@dividend+2,f
  9806  06C6  0823               	movf	___aodiv@divisor+3,w
  9807  06C7  3BAB               	subwfb	___aodiv@dividend+3,f
  9808  06C8  0824               	movf	___aodiv@divisor+4,w
  9809  06C9  3BAC               	subwfb	___aodiv@dividend+4,f
  9810  06CA  0825               	movf	___aodiv@divisor+5,w
  9811  06CB  3BAD               	subwfb	___aodiv@dividend+5,f
  9812  06CC  0826               	movf	___aodiv@divisor+6,w
  9813  06CD  3BAE               	subwfb	___aodiv@dividend+6,f
  9814  06CE  0827               	movf	___aodiv@divisor+7,w
  9815  06CF  3BAF               	subwfb	___aodiv@dividend+7,f
  9816  06D0                     l5340:
  9817  06D0  1433               	bsf	___aodiv@quotient,0
  9818  06D1                     l5342:
  9819  06D1  36A7               	lsrf	___aodiv@divisor+7,f
  9820  06D2  0CA6               	rrf	___aodiv@divisor+6,f
  9821  06D3  0CA5               	rrf	___aodiv@divisor+5,f
  9822  06D4  0CA4               	rrf	___aodiv@divisor+4,f
  9823  06D5  0CA3               	rrf	___aodiv@divisor+3,f
  9824  06D6  0CA2               	rrf	___aodiv@divisor+2,f
  9825  06D7  0CA1               	rrf	___aodiv@divisor+1,f
  9826  06D8  0CA0               	rrf	___aodiv@divisor,f
  9827  06D9  3001               	movlw	1
  9828  06DA  02B1               	subwf	___aodiv@counter,f
  9829  06DB  1D03               	btfss	3,2
  9830  06DC  2EDE               	goto	u4311
  9831  06DD  2EDF               	goto	u4310
  9832  06DE                     u4311:
  9833  06DE  2E96               	goto	l5334
  9834  06DF                     u4310:
  9835  06DF                     l5344:
  9836  06DF  0832               	movf	___aodiv@sign,w
  9837  06E0  1903               	btfsc	3,2
  9838  06E1  2EE3               	goto	u4321
  9839  06E2  2EE4               	goto	u4320
  9840  06E3                     u4321:
  9841  06E3  2F02               	goto	l1542
  9842  06E4                     u4320:
  9843  06E4                     l5346:
  9844  06E4  09B3               	comf	___aodiv@quotient,f
  9845  06E5  09B4               	comf	___aodiv@quotient+1,f
  9846  06E6  09B5               	comf	___aodiv@quotient+2,f
  9847  06E7  09B6               	comf	___aodiv@quotient+3,f
  9848  06E8  09B7               	comf	___aodiv@quotient+4,f
  9849  06E9  09B8               	comf	___aodiv@quotient+5,f
  9850  06EA  09B9               	comf	___aodiv@quotient+6,f
  9851  06EB  09BA               	comf	___aodiv@quotient+7,f
  9852  06EC  0AB3               	incf	___aodiv@quotient,f
  9853  06ED  1D03               	skipz
  9854  06EE  2F02               	goto	u433lld
  9855  06EF  0AB4               	incf	___aodiv@quotient+1,f
  9856  06F0  1D03               	skipz
  9857  06F1  2F02               	goto	u433lld
  9858  06F2  0AB5               	incf	___aodiv@quotient+2,f
  9859  06F3  1D03               	skipz
  9860  06F4  2F02               	goto	u433lld
  9861  06F5  0AB6               	incf	___aodiv@quotient+3,f
  9862  06F6  1D03               	skipz
  9863  06F7  2F02               	goto	u433lld
  9864  06F8  0AB7               	incf	___aodiv@quotient+4,f
  9865  06F9  1D03               	skipz
  9866  06FA  2F02               	goto	u433lld
  9867  06FB  0AB8               	incf	___aodiv@quotient+5,f
  9868  06FC  1D03               	skipz
  9869  06FD  2F02               	goto	u433lld
  9870  06FE  0AB9               	incf	___aodiv@quotient+6,f
  9871  06FF  1D03               	skipz
  9872  0700  2F02               	goto	u433lld
  9873  0701  0ABA               	incf	___aodiv@quotient+7,f
  9874  0702                     u433lld:
  9875  0702                     l1542:
  9876  0702  0020               	movlb	0	; select bank0
  9877  0703  0833               	movf	___aodiv@quotient,w
  9878  0704  00A0               	movwf	?___aodiv
  9879  0705  0834               	movf	___aodiv@quotient+1,w
  9880  0706  00A1               	movwf	?___aodiv+1
  9881  0707  0835               	movf	___aodiv@quotient+2,w
  9882  0708  00A2               	movwf	?___aodiv+2
  9883  0709  0836               	movf	___aodiv@quotient+3,w
  9884  070A  00A3               	movwf	?___aodiv+3
  9885  070B  0837               	movf	___aodiv@quotient+4,w
  9886  070C  00A4               	movwf	?___aodiv+4
  9887  070D  0838               	movf	___aodiv@quotient+5,w
  9888  070E  00A5               	movwf	?___aodiv+5
  9889  070F  0839               	movf	___aodiv@quotient+6,w
  9890  0710  00A6               	movwf	?___aodiv+6
  9891  0711  083A               	movf	___aodiv@quotient+7,w
  9892  0712  00A7               	movwf	?___aodiv+7
  9893  0713                     l1543:
  9894  0713  0008               	return
  9895  0714                     __end_of___aodiv:
  9896                           
  9897                           	psect	text13
  9898  0E64                     __ptext13:	
  9899 ;; *************** function _atoi *****************
  9900 ;; Defined at:
  9901 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  9902 ;; Parameters:    Size  Location     Type
  9903 ;;  s               2    6[BANK0 ] PTR const unsigned char 
  9904 ;;		 -> STR_3(7), 
  9905 ;; Auto vars:     Size  Location     Type
  9906 ;;  n               2   19[BANK0 ] int 
  9907 ;;  neg             2   12[BANK0 ] int 
  9908 ;; Return value:  Size  Location     Type
  9909 ;;                  2    6[BANK0 ] int 
  9910 ;; Registers used:
  9911 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9912 ;; Tracked objects:
  9913 ;;		On entry : 0/0
  9914 ;;		On exit  : 0/0
  9915 ;;		Unchanged: 0/0
  9916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9917 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9918 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9919 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9920 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9921 ;;Total ram usage:       15 bytes
  9922 ;; Hardware stack levels used: 1
  9923 ;; Hardware stack levels required when called: 6
  9924 ;; This function calls:
  9925 ;;		___wmul
  9926 ;;		_isdigit
  9927 ;;		_isspace
  9928 ;; This function is called by:
  9929 ;;		_vfpfcnvrt
  9930 ;; This function uses a non-reentrant model
  9931 ;;
  9932                           
  9933                           
  9934                           ;psect for function _atoi
  9935  0E64                     _atoi:
  9936  0E64                     l5504:	
  9937                           ;incstack = 0
  9938                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9939                           
  9940  0E64  0020               	movlb	0	; select bank0
  9941  0E65  01B3               	clrf	atoi@n
  9942  0E66  01B4               	clrf	atoi@n+1
  9943  0E67  01AC               	clrf	atoi@neg
  9944  0E68  01AD               	clrf	atoi@neg+1
  9945  0E69  2E6E               	goto	l5508
  9946  0E6A                     l5506:
  9947  0E6A  3001               	movlw	1
  9948  0E6B  07A6               	addwf	atoi@s,f
  9949  0E6C  3000               	movlw	0
  9950  0E6D  3DA7               	addwfc	atoi@s+1,f
  9951  0E6E                     l5508:
  9952  0E6E  01B2               	clrf	_atoi$2838
  9953  0E6F  0AB2               	incf	_atoi$2838,f
  9954  0E70                     l5510:
  9955  0E70  0826               	movf	atoi@s,w
  9956  0E71  0084               	movwf	4
  9957  0E72  0827               	movf	atoi@s+1,w
  9958  0E73  0085               	movwf	5
  9959  0E74  0012               	moviw fsr0++
  9960  0E75  3A20               	xorlw	32
  9961  0E76  1903               	btfsc	3,2
  9962  0E77  2E79               	goto	u4771
  9963  0E78  2E7A               	goto	u4770
  9964  0E79                     u4771:
  9965  0E79  2E8F               	goto	l5516
  9966  0E7A                     u4770:
  9967  0E7A                     l5512:
  9968  0E7A  0826               	movf	atoi@s,w
  9969  0E7B  0084               	movwf	4
  9970  0E7C  0827               	movf	atoi@s+1,w
  9971  0E7D  0085               	movwf	5
  9972  0E7E  0800               	movf	0,w	;code access
  9973  0E7F  3EF7               	addlw	247
  9974  0E80  00A8               	movwf	??_atoi
  9975  0E81  30FF               	movlw	255
  9976  0E82  1803               	skipnc
  9977  0E83  3000               	movlw	0
  9978  0E84  00A9               	movwf	??_atoi+1
  9979  0E85  3000               	movlw	0
  9980  0E86  0229               	subwf	??_atoi+1,w
  9981  0E87  3005               	movlw	5
  9982  0E88  1903               	skipnz
  9983  0E89  0228               	subwf	??_atoi,w
  9984  0E8A  1C03               	skipc
  9985  0E8B  2E8D               	goto	u4781
  9986  0E8C  2E8E               	goto	u4780
  9987  0E8D                     u4781:
  9988  0E8D  2E8F               	goto	l5516
  9989  0E8E                     u4780:
  9990  0E8E                     l5514:
  9991  0E8E  01B2               	clrf	_atoi$2838
  9992  0E8F                     l5516:
  9993  0E8F  0832               	movf	_atoi$2838,w
  9994  0E90  00A8               	movwf	??_atoi
  9995  0E91  01A9               	clrf	??_atoi+1
  9996  0E92  0828               	movf	??_atoi,w
  9997  0E93  00AE               	movwf	_atoi$2837
  9998  0E94  0829               	movf	??_atoi+1,w
  9999  0E95  00AF               	movwf	_atoi$2837+1
 10000  0E96                     l5520:
 10001  0E96  082E               	movf	_atoi$2837,w
 10002  0E97  042F               	iorwf	_atoi$2837+1,w
 10003  0E98  1D03               	btfss	3,2
 10004  0E99  2E9B               	goto	u4791
 10005  0E9A  2E9C               	goto	u4790
 10006  0E9B                     u4791:
 10007  0E9B  2E6A               	goto	l5506
 10008  0E9C                     u4790:
 10009  0E9C  2EA6               	goto	l5524
 10010  0E9D                     l5522:
 10011  0E9D  3001               	movlw	1
 10012  0E9E  00AC               	movwf	atoi@neg
 10013  0E9F  3000               	movlw	0
 10014  0EA0  00AD               	movwf	atoi@neg+1
 10015  0EA1                     l2028:
 10016  0EA1  3001               	movlw	1
 10017  0EA2  07A6               	addwf	atoi@s,f
 10018  0EA3  3000               	movlw	0
 10019  0EA4  3DA7               	addwfc	atoi@s+1,f
 10020  0EA5  2EDA               	goto	l5530
 10021  0EA6                     l5524:
 10022  0EA6  0826               	movf	atoi@s,w
 10023  0EA7  0084               	movwf	4
 10024  0EA8  0827               	movf	atoi@s+1,w
 10025  0EA9  0085               	movwf	5
 10026  0EAA  0800               	movf	0,w	;code access
 10027  0EAB  00A8               	movwf	??_atoi
 10028  0EAC  01A9               	clrf	??_atoi+1
 10029                           
 10030                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10031                           ; Switch size 1, requested type "simple"
 10032                           ; Number of cases is 1, Range of values is 0 to 0
 10033                           ; switch strategies available:
 10034                           ; Name         Instructions Cycles
 10035                           ; simple_byte            4     3 (average)
 10036                           ; direct_byte            8     6 (fixed)
 10037                           ; jumptable            260     6 (fixed)
 10038                           ;	Chosen strategy is simple_byte
 10039  0EAD  0829               	movf	??_atoi+1,w
 10040  0EAE  3A00               	xorlw	0	; case 0
 10041  0EAF  1903               	skipnz
 10042  0EB0  2EB2               	goto	l6060
 10043  0EB1  2EDA               	goto	l5530
 10044  0EB2                     l6060:
 10045                           
 10046                           ; Switch size 1, requested type "simple"
 10047                           ; Number of cases is 2, Range of values is 43 to 45
 10048                           ; switch strategies available:
 10049                           ; Name         Instructions Cycles
 10050                           ; simple_byte            7     4 (average)
 10051                           ; direct_byte           15     9 (fixed)
 10052                           ; jumptable            263     9 (fixed)
 10053                           ;	Chosen strategy is simple_byte
 10054  0EB2  0828               	movf	??_atoi,w
 10055  0EB3  3A2B               	xorlw	43	; case 43
 10056  0EB4  1903               	skipnz
 10057  0EB5  2EA1               	goto	l2028
 10058  0EB6  3A06               	xorlw	6	; case 45
 10059  0EB7  1903               	skipnz
 10060  0EB8  2E9D               	goto	l5522
 10061  0EB9  2EDA               	goto	l5530
 10062  0EBA                     l5526:
 10063  0EBA  0826               	movf	atoi@s,w
 10064  0EBB  0084               	movwf	4
 10065  0EBC  0827               	movf	atoi@s+1,w
 10066  0EBD  0085               	movwf	5
 10067  0EBE  0800               	movf	0,w	;code access
 10068  0EBF  00A8               	movwf	??_atoi
 10069  0EC0  0834               	movf	atoi@n+1,w
 10070  0EC1  00A1               	movwf	___wmul@multiplier+1
 10071  0EC2  0833               	movf	atoi@n,w
 10072  0EC3  00A0               	movwf	___wmul@multiplier
 10073  0EC4  300A               	movlw	10
 10074  0EC5  00A2               	movwf	___wmul@multiplicand
 10075  0EC6  3000               	movlw	0
 10076  0EC7  00A3               	movwf	___wmul@multiplicand+1
 10077  0EC8  318A  2282  318E   	fcall	___wmul
 10078  0ECB  0020               	movlb	0	; select bank0
 10079  0ECC  0821               	movf	?___wmul+1,w
 10080  0ECD  00AA               	movwf	??_atoi+2
 10081  0ECE  0828               	movf	??_atoi,w
 10082  0ECF  0220               	subwf	?___wmul,w
 10083  0ED0  00A9               	movwf	??_atoi+1
 10084  0ED1  1C03               	skipc
 10085  0ED2  03AA               	decf	??_atoi+2,f
 10086  0ED3  0829               	movf	??_atoi+1,w
 10087  0ED4  3E30               	addlw	48
 10088  0ED5  00B3               	movwf	atoi@n
 10089  0ED6  3000               	movlw	0
 10090  0ED7  3D2A               	addwfc	??_atoi+2,w
 10091  0ED8  00B4               	movwf	atoi@n+1
 10092  0ED9  2EA1               	goto	l2028
 10093  0EDA                     l5530:
 10094  0EDA  0826               	movf	atoi@s,w
 10095  0EDB  0084               	movwf	4
 10096  0EDC  0827               	movf	atoi@s+1,w
 10097  0EDD  0085               	movwf	5
 10098  0EDE  0800               	movf	0,w	;code access
 10099  0EDF  3ED0               	addlw	208
 10100  0EE0  00A8               	movwf	??_atoi
 10101  0EE1  30FF               	movlw	255
 10102  0EE2  1803               	skipnc
 10103  0EE3  3000               	movlw	0
 10104  0EE4  00A9               	movwf	??_atoi+1
 10105  0EE5  3000               	movlw	0
 10106  0EE6  0229               	subwf	??_atoi+1,w
 10107  0EE7  300A               	movlw	10
 10108  0EE8  1903               	skipnz
 10109  0EE9  0228               	subwf	??_atoi,w
 10110  0EEA  1C03               	skipc
 10111  0EEB  2EED               	goto	u4801
 10112  0EEC  2EEF               	goto	u4800
 10113  0EED                     u4801:
 10114  0EED  3001               	movlw	1
 10115  0EEE  2EF0               	goto	u4810
 10116  0EEF                     u4800:
 10117  0EEF  3000               	movlw	0
 10118  0EF0                     u4810:
 10119  0EF0  00AA               	movwf	??_atoi+2
 10120  0EF1  01AB               	clrf	??_atoi+3
 10121  0EF2  082A               	movf	??_atoi+2,w
 10122  0EF3  00B0               	movwf	_atoi$2839
 10123  0EF4  082B               	movf	??_atoi+3,w
 10124  0EF5  00B1               	movwf	_atoi$2839+1
 10125  0EF6                     l5534:
 10126  0EF6  0830               	movf	_atoi$2839,w
 10127  0EF7  0431               	iorwf	_atoi$2839+1,w
 10128  0EF8  1D03               	btfss	3,2
 10129  0EF9  2EFB               	goto	u4821
 10130  0EFA  2EFC               	goto	u4820
 10131  0EFB                     u4821:
 10132  0EFB  2EBA               	goto	l5526
 10133  0EFC                     u4820:
 10134  0EFC                     l5536:
 10135  0EFC  082C               	movf	atoi@neg,w
 10136  0EFD  042D               	iorwf	atoi@neg+1,w
 10137  0EFE  1D03               	btfss	3,2
 10138  0EFF  2F01               	goto	u4831
 10139  0F00  2F02               	goto	u4830
 10140  0F01                     u4831:
 10141  0F01  2F0E               	goto	l5540
 10142  0F02                     u4830:
 10143  0F02                     l5538:
 10144  0F02  0933               	comf	atoi@n,w
 10145  0F03  00A8               	movwf	??_atoi
 10146  0F04  0934               	comf	atoi@n+1,w
 10147  0F05  00A9               	movwf	??_atoi+1
 10148  0F06  0AA8               	incf	??_atoi,f
 10149  0F07  1903               	skipnz
 10150  0F08  0AA9               	incf	??_atoi+1,f
 10151  0F09  0828               	movf	??_atoi,w
 10152  0F0A  00A6               	movwf	?_atoi
 10153  0F0B  0829               	movf	??_atoi+1,w
 10154  0F0C  00A7               	movwf	?_atoi+1
 10155  0F0D  2F12               	goto	l2041
 10156  0F0E                     l5540:
 10157  0F0E  0834               	movf	atoi@n+1,w
 10158  0F0F  00A7               	movwf	?_atoi+1
 10159  0F10  0833               	movf	atoi@n,w
 10160  0F11  00A6               	movwf	?_atoi
 10161  0F12                     l2041:
 10162  0F12  0008               	return
 10163  0F13                     __end_of_atoi:
 10164                           
 10165                           	psect	text14
 10166  0AC3                     __ptext14:	
 10167 ;; *************** function _isspace *****************
 10168 ;; Defined at:
 10169 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
 10170 ;; Parameters:    Size  Location     Type
 10171 ;;  c               2    0[BANK0 ] int 
 10172 ;; Auto vars:     Size  Location     Type
 10173 ;;		None
 10174 ;; Return value:  Size  Location     Type
 10175 ;;                  2    0[BANK0 ] int 
 10176 ;; Registers used:
 10177 ;;		wreg, status,2, status,0
 10178 ;; Tracked objects:
 10179 ;;		On entry : 0/0
 10180 ;;		On exit  : 0/0
 10181 ;;		Unchanged: 0/0
 10182 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10183 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10184 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10185 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10186 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10187 ;;Total ram usage:        5 bytes
 10188 ;; Hardware stack levels used: 1
 10189 ;; Hardware stack levels required when called: 5
 10190 ;; This function calls:
 10191 ;;		Nothing
 10192 ;; This function is called by:
 10193 ;;		_atoi
 10194 ;; This function uses a non-reentrant model
 10195 ;;
 10196                           
 10197                           
 10198                           ;psect for function _isspace
 10199  0AC3                     _isspace:
 10200  0AC3                     l5404:	
 10201                           ;incstack = 0
 10202                           ; Regs used in _isspace: [wreg+status,2+status,0]
 10203                           
 10204  0AC3  0020               	movlb	0	; select bank0
 10205  0AC4  01A4               	clrf	_isspace$2855
 10206  0AC5  0AA4               	incf	_isspace$2855,f
 10207  0AC6                     l5406:
 10208  0AC6  3020               	movlw	32
 10209  0AC7  0620               	xorwf	isspace@c,w
 10210  0AC8  0421               	iorwf	isspace@c+1,w
 10211  0AC9  1903               	btfsc	3,2
 10212  0ACA  2ACC               	goto	u4501
 10213  0ACB  2ACD               	goto	u4500
 10214  0ACC                     u4501:
 10215  0ACC  2ADD               	goto	l5412
 10216  0ACD                     u4500:
 10217  0ACD                     l5408:
 10218  0ACD  0820               	movf	isspace@c,w
 10219  0ACE  3EF7               	addlw	247
 10220  0ACF  00A2               	movwf	??_isspace
 10221  0AD0  30FF               	movlw	255
 10222  0AD1  3D21               	addwfc	isspace@c+1,w
 10223  0AD2  00A3               	movwf	??_isspace+1
 10224  0AD3  3000               	movlw	0
 10225  0AD4  0223               	subwf	??_isspace+1,w
 10226  0AD5  3005               	movlw	5
 10227  0AD6  1903               	skipnz
 10228  0AD7  0222               	subwf	??_isspace,w
 10229  0AD8  1C03               	skipc
 10230  0AD9  2ADB               	goto	u4511
 10231  0ADA  2ADC               	goto	u4510
 10232  0ADB                     u4511:
 10233  0ADB  2ADD               	goto	l5412
 10234  0ADC                     u4510:
 10235  0ADC                     l5410:
 10236  0ADC  01A4               	clrf	_isspace$2855
 10237  0ADD                     l5412:
 10238  0ADD  0824               	movf	_isspace$2855,w
 10239  0ADE  00A2               	movwf	??_isspace
 10240  0ADF  01A3               	clrf	??_isspace+1
 10241  0AE0  0822               	movf	??_isspace,w
 10242  0AE1  00A0               	movwf	?_isspace
 10243  0AE2  0823               	movf	??_isspace+1,w
 10244  0AE3  00A1               	movwf	?_isspace+1
 10245  0AE4                     l2052:
 10246  0AE4  0008               	return
 10247  0AE5                     __end_of_isspace:
 10248                           
 10249                           	psect	text15
 10250  09DC                     __ptext15:	
 10251 ;; *************** function _isdigit *****************
 10252 ;; Defined at:
 10253 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
 10254 ;; Parameters:    Size  Location     Type
 10255 ;;  c               2    0[BANK0 ] int 
 10256 ;; Auto vars:     Size  Location     Type
 10257 ;;		None
 10258 ;; Return value:  Size  Location     Type
 10259 ;;                  2    0[BANK0 ] int 
 10260 ;; Registers used:
 10261 ;;		wreg, status,2, status,0
 10262 ;; Tracked objects:
 10263 ;;		On entry : 0/0
 10264 ;;		On exit  : 0/0
 10265 ;;		Unchanged: 0/0
 10266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10267 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10269 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10270 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10271 ;;Total ram usage:        6 bytes
 10272 ;; Hardware stack levels used: 1
 10273 ;; Hardware stack levels required when called: 5
 10274 ;; This function calls:
 10275 ;;		Nothing
 10276 ;; This function is called by:
 10277 ;;		_vfpfcnvrt
 10278 ;;		_atoi
 10279 ;; This function uses a non-reentrant model
 10280 ;;
 10281                           
 10282                           
 10283                           ;psect for function _isdigit
 10284  09DC                     _isdigit:
 10285  09DC                     l5400:	
 10286                           ;incstack = 0
 10287                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 10288                           
 10289  09DC  0020               	movlb	0	; select bank0
 10290  09DD  0820               	movf	isdigit@c,w
 10291  09DE  3ED0               	addlw	208
 10292  09DF  00A2               	movwf	??_isdigit
 10293  09E0  30FF               	movlw	255
 10294  09E1  3D21               	addwfc	isdigit@c+1,w
 10295  09E2  00A3               	movwf	??_isdigit+1
 10296  09E3  3000               	movlw	0
 10297  09E4  0223               	subwf	??_isdigit+1,w
 10298  09E5  300A               	movlw	10
 10299  09E6  1903               	skipnz
 10300  09E7  0222               	subwf	??_isdigit,w
 10301  09E8  1C03               	skipc
 10302  09E9  29EB               	goto	u4481
 10303  09EA  29ED               	goto	u4480
 10304  09EB                     u4481:
 10305  09EB  3001               	movlw	1
 10306  09EC  29EE               	goto	u4490
 10307  09ED                     u4480:
 10308  09ED  3000               	movlw	0
 10309  09EE                     u4490:
 10310  09EE  00A4               	movwf	??_isdigit+2
 10311  09EF  01A5               	clrf	??_isdigit+3
 10312  09F0  0824               	movf	??_isdigit+2,w
 10313  09F1  00A0               	movwf	?_isdigit
 10314  09F2  0825               	movf	??_isdigit+3,w
 10315  09F3  00A1               	movwf	?_isdigit+1
 10316  09F4                     l2044:
 10317  09F4  0008               	return
 10318  09F5                     __end_of_isdigit:
 10319                           
 10320                           	psect	text16
 10321  0A82                     __ptext16:	
 10322 ;; *************** function ___wmul *****************
 10323 ;; Defined at:
 10324 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
 10325 ;; Parameters:    Size  Location     Type
 10326 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10327 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10328 ;; Auto vars:     Size  Location     Type
 10329 ;;  product         2    4[BANK0 ] unsigned int 
 10330 ;; Return value:  Size  Location     Type
 10331 ;;                  2    0[BANK0 ] unsigned int 
 10332 ;; Registers used:
 10333 ;;		wreg, status,2, status,0
 10334 ;; Tracked objects:
 10335 ;;		On entry : 0/0
 10336 ;;		On exit  : 0/0
 10337 ;;		Unchanged: 0/0
 10338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10339 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10340 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10341 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10342 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10343 ;;Total ram usage:        6 bytes
 10344 ;; Hardware stack levels used: 1
 10345 ;; Hardware stack levels required when called: 5
 10346 ;; This function calls:
 10347 ;;		Nothing
 10348 ;; This function is called by:
 10349 ;;		_atoi
 10350 ;; This function uses a non-reentrant model
 10351 ;;
 10352                           
 10353                           
 10354                           ;psect for function ___wmul
 10355  0A82                     ___wmul:
 10356  0A82                     l5296:	
 10357                           ;incstack = 0
 10358                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10359                           
 10360  0A82  0020               	movlb	0	; select bank0
 10361  0A83  01A4               	clrf	___wmul@product
 10362  0A84  01A5               	clrf	___wmul@product+1
 10363  0A85                     l5298:
 10364  0A85  1C20               	btfss	___wmul@multiplier,0
 10365  0A86  2A88               	goto	u4191
 10366  0A87  2A89               	goto	u4190
 10367  0A88                     u4191:
 10368  0A88  2A8D               	goto	l1442
 10369  0A89                     u4190:
 10370  0A89                     l5300:
 10371  0A89  0822               	movf	___wmul@multiplicand,w
 10372  0A8A  07A4               	addwf	___wmul@product,f
 10373  0A8B  0823               	movf	___wmul@multiplicand+1,w
 10374  0A8C  3DA5               	addwfc	___wmul@product+1,f
 10375  0A8D                     l1442:
 10376  0A8D  3001               	movlw	1
 10377  0A8E                     u4205:
 10378  0A8E  35A2               	lslf	___wmul@multiplicand,f
 10379  0A8F  0DA3               	rlf	___wmul@multiplicand+1,f
 10380  0A90  0B89               	decfsz	9,f
 10381  0A91  2A8E               	goto	u4205
 10382  0A92                     l5302:
 10383  0A92  3001               	movlw	1
 10384  0A93                     u4215:
 10385  0A93  36A1               	lsrf	___wmul@multiplier+1,f
 10386  0A94  0CA0               	rrf	___wmul@multiplier,f
 10387  0A95  0B89               	decfsz	9,f
 10388  0A96  2A93               	goto	u4215
 10389  0A97                     l5304:
 10390  0A97  0820               	movf	___wmul@multiplier,w
 10391  0A98  0421               	iorwf	___wmul@multiplier+1,w
 10392  0A99  1D03               	btfss	3,2
 10393  0A9A  2A9C               	goto	u4221
 10394  0A9B  2A9D               	goto	u4220
 10395  0A9C                     u4221:
 10396  0A9C  2A85               	goto	l5298
 10397  0A9D                     u4220:
 10398  0A9D                     l5306:
 10399  0A9D  0825               	movf	___wmul@product+1,w
 10400  0A9E  00A1               	movwf	?___wmul+1
 10401  0A9F  0824               	movf	___wmul@product,w
 10402  0AA0  00A0               	movwf	?___wmul
 10403  0AA1                     l1444:
 10404  0AA1  0008               	return
 10405  0AA2                     __end_of___wmul:
 10406                           
 10407                           	psect	text17
 10408  04BF                     __ptext17:	
 10409 ;; *************** function _readTC74 *****************
 10410 ;; Defined at:
 10411 ;;		line 77 in file "main.c"
 10412 ;; Parameters:    Size  Location     Type
 10413 ;;		None
 10414 ;; Auto vars:     Size  Location     Type
 10415 ;;  value           1    3[BANK0 ] unsigned char 
 10416 ;; Return value:  Size  Location     Type
 10417 ;;                  1    wreg      unsigned char 
 10418 ;; Registers used:
 10419 ;;		wreg, status,2, status,0, pclath, cstack
 10420 ;; Tracked objects:
 10421 ;;		On entry : 0/0
 10422 ;;		On exit  : 0/0
 10423 ;;		Unchanged: 0/0
 10424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10426 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10427 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10428 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10429 ;;Total ram usage:        2 bytes
 10430 ;; Hardware stack levels used: 1
 10431 ;; Hardware stack levels required when called: 6
 10432 ;; This function calls:
 10433 ;;		_ReadI2C
 10434 ;;		_WriteI2C
 10435 ;; This function is called by:
 10436 ;;		_main
 10437 ;; This function uses a non-reentrant model
 10438 ;;
 10439                           
 10440                           
 10441                           ;psect for function _readTC74
 10442  04BF                     _readTC74:
 10443  04BF                     l1178:	
 10444                           ;incstack = 0
 10445                           ; Regs used in _readTC74: [wreg+status,2+status,0+pclath+cstack]
 10446                           ;main.c: 79:  unsigned char value;;main.c: 80: do{
 10447                           
 10448  04BF                     l5910:	
 10449                           ;main.c: 81:  while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10450                           
 10451  04BF  0023               	movlb	3	; select bank3
 10452  04C0  0C0F               	rrf	15,w	;volatile
 10453  04C1  0C89               	rrf	9,f
 10454  04C2  3901               	andlw	1
 10455  04C3  0020               	movlb	0	; select bank0
 10456  04C4  00A2               	movwf	??_readTC74
 10457  04C5  0023               	movlb	3	; select bank3
 10458  04C6  0811               	movf	17,w	;volatile
 10459  04C7  391F               	andlw	31
 10460  04C8  0020               	movlb	0	; select bank0
 10461  04C9  0422               	iorwf	??_readTC74,w
 10462  04CA  1D03               	btfss	3,2
 10463  04CB  2CCD               	goto	u5481
 10464  04CC  2CCE               	goto	u5480
 10465  04CD                     u5481:
 10466  04CD  2CBF               	goto	l5910
 10467  04CE                     u5480:
 10468  04CE                     l1182:	
 10469                           ;main.c: 82:  do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((SSP1
      +                          CON2 & 0x1F) | (SSP1STATbits.R_W));
 10470                           
 10471  04CE  0023               	movlb	3	; select bank3
 10472  04CF  1411               	bsf	17,0	;volatile
 10473  04D0                     l1183:
 10474  04D0  1811               	btfsc	17,0	;volatile
 10475  04D1  2CD3               	goto	u5491
 10476  04D2  2CD4               	goto	u5490
 10477  04D3                     u5491:
 10478  04D3  2CD0               	goto	l1183
 10479  04D4                     u5490:
 10480  04D4                     l5912:
 10481  04D4  0023               	movlb	3	; select bank3
 10482  04D5  0C0F               	rrf	15,w	;volatile
 10483  04D6  0C89               	rrf	9,f
 10484  04D7  3901               	andlw	1
 10485  04D8  0020               	movlb	0	; select bank0
 10486  04D9  00A2               	movwf	??_readTC74
 10487  04DA  0023               	movlb	3	; select bank3
 10488  04DB  0811               	movf	17,w	;volatile
 10489  04DC  391F               	andlw	31
 10490  04DD  0020               	movlb	0	; select bank0
 10491  04DE  0422               	iorwf	??_readTC74,w
 10492  04DF  1D03               	btfss	3,2
 10493  04E0  2CE2               	goto	u5501
 10494  04E1  2CE3               	goto	u5500
 10495  04E2                     u5501:
 10496  04E2  2CD4               	goto	l5912
 10497  04E3                     u5500:
 10498  04E3                     l5914:
 10499                           
 10500                           ;main.c: 84:  WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10501  04E3  309A               	movlw	154
 10502  04E4  318C  24EB  3184   	fcall	_WriteI2C
 10503  04E7                     l5916:
 10504  04E7  0023               	movlb	3	; select bank3
 10505  04E8  0C0F               	rrf	15,w	;volatile
 10506  04E9  0C89               	rrf	9,f
 10507  04EA  3901               	andlw	1
 10508  04EB  0020               	movlb	0	; select bank0
 10509  04EC  00A2               	movwf	??_readTC74
 10510  04ED  0023               	movlb	3	; select bank3
 10511  04EE  0811               	movf	17,w	;volatile
 10512  04EF  391F               	andlw	31
 10513  04F0  0020               	movlb	0	; select bank0
 10514  04F1  0422               	iorwf	??_readTC74,w
 10515  04F2  1D03               	btfss	3,2
 10516  04F3  2CF5               	goto	u5511
 10517  04F4  2CF6               	goto	u5510
 10518  04F5                     u5511:
 10519  04F5  2CE7               	goto	l5916
 10520  04F6                     u5510:
 10521  04F6                     l5918:
 10522                           
 10523                           ;main.c: 85:  WriteI2C(0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10524  04F6  3001               	movlw	1
 10525  04F7  318C  24EB  3184   	fcall	_WriteI2C
 10526  04FA                     l5920:
 10527  04FA  0023               	movlb	3	; select bank3
 10528  04FB  0C0F               	rrf	15,w	;volatile
 10529  04FC  0C89               	rrf	9,f
 10530  04FD  3901               	andlw	1
 10531  04FE  0020               	movlb	0	; select bank0
 10532  04FF  00A2               	movwf	??_readTC74
 10533  0500  0023               	movlb	3	; select bank3
 10534  0501  0811               	movf	17,w	;volatile
 10535  0502  391F               	andlw	31
 10536  0503  0020               	movlb	0	; select bank0
 10537  0504  0422               	iorwf	??_readTC74,w
 10538  0505  1D03               	btfss	3,2
 10539  0506  2D08               	goto	u5521
 10540  0507  2D09               	goto	u5520
 10541  0508                     u5521:
 10542  0508  2CFA               	goto	l5920
 10543  0509                     u5520:
 10544  0509                     l1196:	
 10545                           ;main.c: 86:  do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while ((SS
      +                          P1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10546                           
 10547  0509  0023               	movlb	3	; select bank3
 10548  050A  1491               	bsf	17,1	;volatile
 10549  050B                     l1197:
 10550  050B  1891               	btfsc	17,1	;volatile
 10551  050C  2D0E               	goto	u5531
 10552  050D  2D0F               	goto	u5530
 10553  050E                     u5531:
 10554  050E  2D0B               	goto	l1197
 10555  050F                     u5530:
 10556  050F                     l5922:
 10557  050F  0023               	movlb	3	; select bank3
 10558  0510  0C0F               	rrf	15,w	;volatile
 10559  0511  0C89               	rrf	9,f
 10560  0512  3901               	andlw	1
 10561  0513  0020               	movlb	0	; select bank0
 10562  0514  00A2               	movwf	??_readTC74
 10563  0515  0023               	movlb	3	; select bank3
 10564  0516  0811               	movf	17,w	;volatile
 10565  0517  391F               	andlw	31
 10566  0518  0020               	movlb	0	; select bank0
 10567  0519  0422               	iorwf	??_readTC74,w
 10568  051A  1D03               	btfss	3,2
 10569  051B  2D1D               	goto	u5541
 10570  051C  2D1E               	goto	u5540
 10571  051D                     u5541:
 10572  051D  2D0F               	goto	l5922
 10573  051E                     u5540:
 10574  051E                     l5924:
 10575                           
 10576                           ;main.c: 87:  WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10577  051E  309B               	movlw	155
 10578  051F  318C  24EB  3184   	fcall	_WriteI2C
 10579  0522                     l5926:
 10580  0522  0023               	movlb	3	; select bank3
 10581  0523  0C0F               	rrf	15,w	;volatile
 10582  0524  0C89               	rrf	9,f
 10583  0525  3901               	andlw	1
 10584  0526  0020               	movlb	0	; select bank0
 10585  0527  00A2               	movwf	??_readTC74
 10586  0528  0023               	movlb	3	; select bank3
 10587  0529  0811               	movf	17,w	;volatile
 10588  052A  391F               	andlw	31
 10589  052B  0020               	movlb	0	; select bank0
 10590  052C  0422               	iorwf	??_readTC74,w
 10591  052D  1D03               	btfss	3,2
 10592  052E  2D30               	goto	u5551
 10593  052F  2D31               	goto	u5550
 10594  0530                     u5551:
 10595  0530  2D22               	goto	l5926
 10596  0531                     u5550:
 10597  0531                     l5928:
 10598                           
 10599                           ;main.c: 88:  value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10600  0531  318A  2263  3184   	fcall	_ReadI2C
 10601  0534  0020               	movlb	0	; select bank0
 10602  0535  00A2               	movwf	??_readTC74
 10603  0536  0822               	movf	??_readTC74,w
 10604  0537  00A3               	movwf	readTC74@value
 10605  0538                     l5930:
 10606  0538  0023               	movlb	3	; select bank3
 10607  0539  0C0F               	rrf	15,w	;volatile
 10608  053A  0C89               	rrf	9,f
 10609  053B  3901               	andlw	1
 10610  053C  0020               	movlb	0	; select bank0
 10611  053D  00A2               	movwf	??_readTC74
 10612  053E  0023               	movlb	3	; select bank3
 10613  053F  0811               	movf	17,w	;volatile
 10614  0540  391F               	andlw	31
 10615  0541  0020               	movlb	0	; select bank0
 10616  0542  0422               	iorwf	??_readTC74,w
 10617  0543  1D03               	btfss	3,2
 10618  0544  2D46               	goto	u5561
 10619  0545  2D47               	goto	u5560
 10620  0546                     u5561:
 10621  0546  2D38               	goto	l5930
 10622  0547                     u5560:
 10623  0547                     l1210:	
 10624                           ;main.c: 89:  do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN); 
      +                          } while (0); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10625                           
 10626  0547  0023               	movlb	3	; select bank3
 10627  0548  1691               	bsf	17,5	;volatile
 10628  0549  1611               	bsf	17,4	;volatile
 10629  054A                     l1211:
 10630  054A  1A11               	btfsc	17,4	;volatile
 10631  054B  2D4D               	goto	u5571
 10632  054C  2D4E               	goto	u5570
 10633  054D                     u5571:
 10634  054D  2D4A               	goto	l1211
 10635  054E                     u5570:
 10636  054E                     l5932:
 10637  054E  0023               	movlb	3	; select bank3
 10638  054F  0C0F               	rrf	15,w	;volatile
 10639  0550  0C89               	rrf	9,f
 10640  0551  3901               	andlw	1
 10641  0552  0020               	movlb	0	; select bank0
 10642  0553  00A2               	movwf	??_readTC74
 10643  0554  0023               	movlb	3	; select bank3
 10644  0555  0811               	movf	17,w	;volatile
 10645  0556  391F               	andlw	31
 10646  0557  0020               	movlb	0	; select bank0
 10647  0558  0422               	iorwf	??_readTC74,w
 10648  0559  1D03               	btfss	3,2
 10649  055A  2D5C               	goto	u5581
 10650  055B  2D5D               	goto	u5580
 10651  055C                     u5581:
 10652  055C  2D4E               	goto	l5932
 10653  055D                     u5580:
 10654  055D                     l1218:	
 10655                           ;main.c: 90:  do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 10656                           
 10657  055D  0023               	movlb	3	; select bank3
 10658  055E  1511               	bsf	17,2	;volatile
 10659  055F                     l1219:
 10660  055F  1911               	btfsc	17,2	;volatile
 10661  0560  2D62               	goto	u5591
 10662  0561  2D63               	goto	u5590
 10663  0562                     u5591:
 10664  0562  2D5F               	goto	l1219
 10665  0563                     u5590:
 10666  0563                     l1222:
 10667                           
 10668                           ;main.c: 91: } while (!(value & 0x40));
 10669  0563  0020               	movlb	0	; select bank0
 10670  0564  1F23               	btfss	readTC74@value,6
 10671  0565  2D67               	goto	u5601
 10672  0566  2D68               	goto	u5600
 10673  0567                     u5601:
 10674  0567  2CBF               	goto	l1178
 10675  0568                     u5600:
 10676  0568                     l5934:
 10677  0568  0023               	movlb	3	; select bank3
 10678  0569  0C0F               	rrf	15,w	;volatile
 10679  056A  0C89               	rrf	9,f
 10680  056B  3901               	andlw	1
 10681  056C  0020               	movlb	0	; select bank0
 10682  056D  00A2               	movwf	??_readTC74
 10683  056E  0023               	movlb	3	; select bank3
 10684  056F  0811               	movf	17,w	;volatile
 10685  0570  391F               	andlw	31
 10686  0571  0020               	movlb	0	; select bank0
 10687  0572  0422               	iorwf	??_readTC74,w
 10688  0573  1D03               	btfss	3,2
 10689  0574  2D76               	goto	u5611
 10690  0575  2D77               	goto	u5610
 10691  0576                     u5611:
 10692  0576  2D68               	goto	l5934
 10693  0577                     u5610:
 10694  0577                     l1227:	
 10695                           ;main.c: 94:  do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((SSP1
      +                          CON2 & 0x1F) | (SSP1STATbits.R_W));
 10696                           
 10697  0577  0023               	movlb	3	; select bank3
 10698  0578  1411               	bsf	17,0	;volatile
 10699  0579                     l1228:
 10700  0579  1811               	btfsc	17,0	;volatile
 10701  057A  2D7C               	goto	u5621
 10702  057B  2D7D               	goto	u5620
 10703  057C                     u5621:
 10704  057C  2D79               	goto	l1228
 10705  057D                     u5620:
 10706  057D                     l5936:
 10707  057D  0023               	movlb	3	; select bank3
 10708  057E  0C0F               	rrf	15,w	;volatile
 10709  057F  0C89               	rrf	9,f
 10710  0580  3901               	andlw	1
 10711  0581  0020               	movlb	0	; select bank0
 10712  0582  00A2               	movwf	??_readTC74
 10713  0583  0023               	movlb	3	; select bank3
 10714  0584  0811               	movf	17,w	;volatile
 10715  0585  391F               	andlw	31
 10716  0586  0020               	movlb	0	; select bank0
 10717  0587  0422               	iorwf	??_readTC74,w
 10718  0588  1D03               	btfss	3,2
 10719  0589  2D8B               	goto	u5631
 10720  058A  2D8C               	goto	u5630
 10721  058B                     u5631:
 10722  058B  2D7D               	goto	l5936
 10723  058C                     u5630:
 10724  058C                     l5938:
 10725                           
 10726                           ;main.c: 95:  WriteI2C(0x9a | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10727  058C  309A               	movlw	154
 10728  058D  318C  24EB  3184   	fcall	_WriteI2C
 10729  0590                     l5940:
 10730  0590  0023               	movlb	3	; select bank3
 10731  0591  0C0F               	rrf	15,w	;volatile
 10732  0592  0C89               	rrf	9,f
 10733  0593  3901               	andlw	1
 10734  0594  0020               	movlb	0	; select bank0
 10735  0595  00A2               	movwf	??_readTC74
 10736  0596  0023               	movlb	3	; select bank3
 10737  0597  0811               	movf	17,w	;volatile
 10738  0598  391F               	andlw	31
 10739  0599  0020               	movlb	0	; select bank0
 10740  059A  0422               	iorwf	??_readTC74,w
 10741  059B  1D03               	btfss	3,2
 10742  059C  2D9E               	goto	u5641
 10743  059D  2D9F               	goto	u5640
 10744  059E                     u5641:
 10745  059E  2D90               	goto	l5940
 10746  059F                     u5640:
 10747  059F                     l5942:
 10748                           
 10749                           ;main.c: 96:  WriteI2C(0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10750  059F  3000               	movlw	0
 10751  05A0  318C  24EB  3184   	fcall	_WriteI2C
 10752  05A3                     l5944:
 10753  05A3  0023               	movlb	3	; select bank3
 10754  05A4  0C0F               	rrf	15,w	;volatile
 10755  05A5  0C89               	rrf	9,f
 10756  05A6  3901               	andlw	1
 10757  05A7  0020               	movlb	0	; select bank0
 10758  05A8  00A2               	movwf	??_readTC74
 10759  05A9  0023               	movlb	3	; select bank3
 10760  05AA  0811               	movf	17,w	;volatile
 10761  05AB  391F               	andlw	31
 10762  05AC  0020               	movlb	0	; select bank0
 10763  05AD  0422               	iorwf	??_readTC74,w
 10764  05AE  1D03               	btfss	3,2
 10765  05AF  2DB1               	goto	u5651
 10766  05B0  2DB2               	goto	u5650
 10767  05B1                     u5651:
 10768  05B1  2DA3               	goto	l5944
 10769  05B2                     u5650:
 10770  05B2                     l1241:	
 10771                           ;main.c: 97:  do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while ((SS
      +                          P1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10772                           
 10773  05B2  0023               	movlb	3	; select bank3
 10774  05B3  1491               	bsf	17,1	;volatile
 10775  05B4                     l1242:
 10776  05B4  1891               	btfsc	17,1	;volatile
 10777  05B5  2DB7               	goto	u5661
 10778  05B6  2DB8               	goto	u5660
 10779  05B7                     u5661:
 10780  05B7  2DB4               	goto	l1242
 10781  05B8                     u5660:
 10782  05B8                     l5946:
 10783  05B8  0023               	movlb	3	; select bank3
 10784  05B9  0C0F               	rrf	15,w	;volatile
 10785  05BA  0C89               	rrf	9,f
 10786  05BB  3901               	andlw	1
 10787  05BC  0020               	movlb	0	; select bank0
 10788  05BD  00A2               	movwf	??_readTC74
 10789  05BE  0023               	movlb	3	; select bank3
 10790  05BF  0811               	movf	17,w	;volatile
 10791  05C0  391F               	andlw	31
 10792  05C1  0020               	movlb	0	; select bank0
 10793  05C2  0422               	iorwf	??_readTC74,w
 10794  05C3  1D03               	btfss	3,2
 10795  05C4  2DC6               	goto	u5671
 10796  05C5  2DC7               	goto	u5670
 10797  05C6                     u5671:
 10798  05C6  2DB8               	goto	l5946
 10799  05C7                     u5670:
 10800  05C7                     l5948:
 10801                           
 10802                           ;main.c: 98:  WriteI2C(0x9a | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10803  05C7  309B               	movlw	155
 10804  05C8  318C  24EB  3184   	fcall	_WriteI2C
 10805  05CB                     l5950:
 10806  05CB  0023               	movlb	3	; select bank3
 10807  05CC  0C0F               	rrf	15,w	;volatile
 10808  05CD  0C89               	rrf	9,f
 10809  05CE  3901               	andlw	1
 10810  05CF  0020               	movlb	0	; select bank0
 10811  05D0  00A2               	movwf	??_readTC74
 10812  05D1  0023               	movlb	3	; select bank3
 10813  05D2  0811               	movf	17,w	;volatile
 10814  05D3  391F               	andlw	31
 10815  05D4  0020               	movlb	0	; select bank0
 10816  05D5  0422               	iorwf	??_readTC74,w
 10817  05D6  1D03               	btfss	3,2
 10818  05D7  2DD9               	goto	u5681
 10819  05D8  2DDA               	goto	u5680
 10820  05D9                     u5681:
 10821  05D9  2DCB               	goto	l5950
 10822  05DA                     u5680:
 10823  05DA                     l5952:
 10824                           
 10825                           ;main.c: 99:  value = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10826  05DA  318A  2263  3184   	fcall	_ReadI2C
 10827  05DD  0020               	movlb	0	; select bank0
 10828  05DE  00A2               	movwf	??_readTC74
 10829  05DF  0822               	movf	??_readTC74,w
 10830  05E0  00A3               	movwf	readTC74@value
 10831  05E1                     l5954:
 10832  05E1  0023               	movlb	3	; select bank3
 10833  05E2  0C0F               	rrf	15,w	;volatile
 10834  05E3  0C89               	rrf	9,f
 10835  05E4  3901               	andlw	1
 10836  05E5  0020               	movlb	0	; select bank0
 10837  05E6  00A2               	movwf	??_readTC74
 10838  05E7  0023               	movlb	3	; select bank3
 10839  05E8  0811               	movf	17,w	;volatile
 10840  05E9  391F               	andlw	31
 10841  05EA  0020               	movlb	0	; select bank0
 10842  05EB  0422               	iorwf	??_readTC74,w
 10843  05EC  1D03               	btfss	3,2
 10844  05ED  2DEF               	goto	u5691
 10845  05EE  2DF0               	goto	u5690
 10846  05EF                     u5691:
 10847  05EF  2DE1               	goto	l5954
 10848  05F0                     u5690:
 10849  05F0                     l1255:	
 10850                           ;main.c: 100:  do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKEN);
      +                           } while (0); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 10851                           
 10852  05F0  0023               	movlb	3	; select bank3
 10853  05F1  1691               	bsf	17,5	;volatile
 10854  05F2  1611               	bsf	17,4	;volatile
 10855  05F3                     l1256:
 10856  05F3  1A11               	btfsc	17,4	;volatile
 10857  05F4  2DF6               	goto	u5701
 10858  05F5  2DF7               	goto	u5700
 10859  05F6                     u5701:
 10860  05F6  2DF3               	goto	l1256
 10861  05F7                     u5700:
 10862  05F7                     l5956:
 10863  05F7  0023               	movlb	3	; select bank3
 10864  05F8  0C0F               	rrf	15,w	;volatile
 10865  05F9  0C89               	rrf	9,f
 10866  05FA  3901               	andlw	1
 10867  05FB  0020               	movlb	0	; select bank0
 10868  05FC  00A2               	movwf	??_readTC74
 10869  05FD  0023               	movlb	3	; select bank3
 10870  05FE  0811               	movf	17,w	;volatile
 10871  05FF  391F               	andlw	31
 10872  0600  0020               	movlb	0	; select bank0
 10873  0601  0422               	iorwf	??_readTC74,w
 10874  0602  1D03               	btfss	3,2
 10875  0603  2E05               	goto	u5711
 10876  0604  2E06               	goto	u5710
 10877  0605                     u5711:
 10878  0605  2DF7               	goto	l5956
 10879  0606                     u5710:
 10880  0606                     l1263:	
 10881                           ;main.c: 101:  do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 10882                           
 10883  0606  0023               	movlb	3	; select bank3
 10884  0607  1511               	bsf	17,2	;volatile
 10885  0608                     l1264:
 10886  0608  1911               	btfsc	17,2	;volatile
 10887  0609  2E0B               	goto	u5721
 10888  060A  2E0C               	goto	u5720
 10889  060B                     u5721:
 10890  060B  2E08               	goto	l1264
 10891  060C                     u5720:
 10892  060C                     l5958:
 10893                           
 10894                           ;main.c: 103:  return value;
 10895  060C  0020               	movlb	0	; select bank0
 10896  060D  0823               	movf	readTC74@value,w
 10897  060E                     l1268:
 10898  060E  0008               	return
 10899  060F                     __end_of_readTC74:
 10900                           
 10901                           	psect	text18
 10902  07EB                     __ptext18:	
 10903 ;; *************** function _SYSTEM_Initialize *****************
 10904 ;; Defined at:
 10905 ;;		line 50 in file "mcc_generated_files/mcc.c"
 10906 ;; Parameters:    Size  Location     Type
 10907 ;;		None
 10908 ;; Auto vars:     Size  Location     Type
 10909 ;;		None
 10910 ;; Return value:  Size  Location     Type
 10911 ;;                  1    wreg      void 
 10912 ;; Registers used:
 10913 ;;		wreg, status,2, status,0, pclath, cstack
 10914 ;; Tracked objects:
 10915 ;;		On entry : 0/0
 10916 ;;		On exit  : 0/0
 10917 ;;		Unchanged: 0/0
 10918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10923 ;;Total ram usage:        0 bytes
 10924 ;; Hardware stack levels used: 1
 10925 ;; Hardware stack levels required when called: 7
 10926 ;; This function calls:
 10927 ;;		_ADCC_Initialize
 10928 ;;		_I2C1_Initialize
 10929 ;;		_OSCILLATOR_Initialize
 10930 ;;		_PIN_MANAGER_Initialize
 10931 ;;		_PMD_Initialize
 10932 ;;		_TMR1_Initialize
 10933 ;; This function is called by:
 10934 ;;		_main
 10935 ;; This function uses a non-reentrant model
 10936 ;;
 10937                           
 10938                           
 10939                           ;psect for function _SYSTEM_Initialize
 10940  07EB                     _SYSTEM_Initialize:
 10941  07EB                     l5862:	
 10942                           ;incstack = 0
 10943                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10944                           
 10945                           
 10946                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
 10947  07EB  3189  2120  3187   	fcall	_PMD_Initialize
 10948  07EE                     l5864:
 10949                           
 10950                           ;mcc_generated_files/mcc.c: 53:     I2C1_Initialize();
 10951  07EE  3189  2143  3187   	fcall	_I2C1_Initialize
 10952  07F1                     l5866:
 10953                           
 10954                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 10955  07F1  318B  23AC  3187   	fcall	_PIN_MANAGER_Initialize
 10956  07F4                     l5868:
 10957                           
 10958                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 10959  07F4  3189  2131  3187   	fcall	_OSCILLATOR_Initialize
 10960  07F7                     l5870:
 10961                           
 10962                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 10963  07F7  3189  21C5  3187   	fcall	_ADCC_Initialize
 10964  07FA                     l5872:
 10965                           
 10966                           ;mcc_generated_files/mcc.c: 57:     TMR1_Initialize();
 10967  07FA  318A  22A2  3187   	fcall	_TMR1_Initialize
 10968  07FD                     l476:
 10969  07FD  0008               	return
 10970  07FE                     __end_of_SYSTEM_Initialize:
 10971                           
 10972                           	psect	text19
 10973  0AA2                     __ptext19:	
 10974 ;; *************** function _TMR1_Initialize *****************
 10975 ;; Defined at:
 10976 ;;		line 64 in file "mcc_generated_files/tmr1.c"
 10977 ;; Parameters:    Size  Location     Type
 10978 ;;		None
 10979 ;; Auto vars:     Size  Location     Type
 10980 ;;		None
 10981 ;; Return value:  Size  Location     Type
 10982 ;;                  1    wreg      void 
 10983 ;; Registers used:
 10984 ;;		wreg, status,2, status,0, pclath, cstack
 10985 ;; Tracked objects:
 10986 ;;		On entry : 0/0
 10987 ;;		On exit  : 0/0
 10988 ;;		Unchanged: 0/0
 10989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10994 ;;Total ram usage:        0 bytes
 10995 ;; Hardware stack levels used: 1
 10996 ;; Hardware stack levels required when called: 6
 10997 ;; This function calls:
 10998 ;;		_TMR1_SetInterruptHandler
 10999 ;; This function is called by:
 11000 ;;		_SYSTEM_Initialize
 11001 ;; This function uses a non-reentrant model
 11002 ;;
 11003                           
 11004                           
 11005                           ;psect for function _TMR1_Initialize
 11006  0AA2                     _TMR1_Initialize:
 11007  0AA2                     l5772:	
 11008                           ;incstack = 0
 11009                           ; Regs used in _TMR1_Initialize: [wreg+status,2+status,0+pclath+cstack]
 11010                           
 11011                           
 11012                           ;mcc_generated_files/tmr1.c: 69:     T1GCON = 0x00;
 11013  0AA2  0024               	movlb	4	; select bank4
 11014  0AA3  018F               	clrf	15	;volatile
 11015                           
 11016                           ;mcc_generated_files/tmr1.c: 72:     T1GATE = 0x00;
 11017  0AA4  0190               	clrf	16	;volatile
 11018  0AA5                     l5774:
 11019                           
 11020                           ;mcc_generated_files/tmr1.c: 75:     T1CLK = 0x04;
 11021  0AA5  3004               	movlw	4
 11022  0AA6  0091               	movwf	17	;volatile
 11023  0AA7                     l5776:
 11024                           
 11025                           ;mcc_generated_files/tmr1.c: 78:     TMR1H = 0x86;
 11026  0AA7  3086               	movlw	134
 11027  0AA8  008D               	movwf	13	;volatile
 11028  0AA9                     l5778:
 11029                           
 11030                           ;mcc_generated_files/tmr1.c: 81:     TMR1L = 0xE8;
 11031  0AA9  30E8               	movlw	232
 11032  0AAA  008C               	movwf	12	;volatile
 11033  0AAB                     l5780:
 11034                           
 11035                           ;mcc_generated_files/tmr1.c: 84:     PIR4bits.TMR1IF = 0;
 11036  0AAB  002E               	movlb	14	; select bank14
 11037  0AAC  1010               	bcf	16,0	;volatile
 11038  0AAD                     l5782:
 11039                           
 11040                           ;mcc_generated_files/tmr1.c: 87:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
 11041  0AAD  0024               	movlb	4	; select bank4
 11042  0AAE  080D               	movf	13,w	;volatile
 11043  0AAF  0021               	movlb	1	; select bank1
 11044  0AB0  00EA               	movwf	(_timer1ReloadVal+1)^(0+128)	;volatile
 11045  0AB1  0024               	movlb	4	; select bank4
 11046  0AB2  080C               	movf	12,w	;volatile
 11047  0AB3  0021               	movlb	1	; select bank1
 11048  0AB4  00E9               	movwf	_timer1ReloadVal^(0+128)	;volatile
 11049  0AB5                     l5784:
 11050                           
 11051                           ;mcc_generated_files/tmr1.c: 90:     PIE4bits.TMR1IE = 1;
 11052  0AB5  002E               	movlb	14	; select bank14
 11053  0AB6  141A               	bsf	26,0	;volatile
 11054  0AB7                     l5786:
 11055                           
 11056                           ;mcc_generated_files/tmr1.c: 93:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
 11057  0AB7  30FF               	movlw	low _TMR1_DefaultInterruptHandler
 11058  0AB8  0020               	movlb	0	; select bank0
 11059  0AB9  00A0               	movwf	TMR1_SetInterruptHandler@InterruptHandler
 11060  0ABA  3007               	movlw	high _TMR1_DefaultInterruptHandler
 11061  0ABB  00A1               	movwf	TMR1_SetInterruptHandler@InterruptHandler+1
 11062  0ABC  3189  213A  318A   	fcall	_TMR1_SetInterruptHandler
 11063  0ABF                     l5788:
 11064                           
 11065                           ;mcc_generated_files/tmr1.c: 96:     T1CON = 0x01;
 11066  0ABF  3001               	movlw	1
 11067  0AC0  0024               	movlb	4	; select bank4
 11068  0AC1  008E               	movwf	14	;volatile
 11069  0AC2                     l532:
 11070  0AC2  0008               	return
 11071  0AC3                     __end_of_TMR1_Initialize:
 11072                           
 11073                           	psect	text20
 11074  093A                     __ptext20:	
 11075 ;; *************** function _TMR1_SetInterruptHandler *****************
 11076 ;; Defined at:
 11077 ;;		line 185 in file "mcc_generated_files/tmr1.c"
 11078 ;; Parameters:    Size  Location     Type
 11079 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
 11080 ;;		 -> timerInterrupt(1), TMR1_DefaultInterruptHandler(1), 
 11081 ;; Auto vars:     Size  Location     Type
 11082 ;;		None
 11083 ;; Return value:  Size  Location     Type
 11084 ;;                  1    wreg      void 
 11085 ;; Registers used:
 11086 ;;		wreg
 11087 ;; Tracked objects:
 11088 ;;		On entry : 0/0
 11089 ;;		On exit  : 0/0
 11090 ;;		Unchanged: 0/0
 11091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11092 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11095 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11096 ;;Total ram usage:        2 bytes
 11097 ;; Hardware stack levels used: 1
 11098 ;; Hardware stack levels required when called: 5
 11099 ;; This function calls:
 11100 ;;		Nothing
 11101 ;; This function is called by:
 11102 ;;		_TMR1_Initialize
 11103 ;;		_main
 11104 ;; This function uses a non-reentrant model
 11105 ;;
 11106                           
 11107                           
 11108                           ;psect for function _TMR1_SetInterruptHandler
 11109  093A                     _TMR1_SetInterruptHandler:
 11110  093A                     l5594:	
 11111                           ;incstack = 0
 11112                           ; Regs used in _TMR1_SetInterruptHandler: [wreg]
 11113                           
 11114                           
 11115                           ;mcc_generated_files/tmr1.c: 186:     TMR1_InterruptHandler = InterruptHandler;
 11116  093A  0020               	movlb	0	; select bank0
 11117  093B  0821               	movf	TMR1_SetInterruptHandler@InterruptHandler+1,w
 11118  093C  0021               	movlb	1	; select bank1
 11119  093D  00E8               	movwf	(_TMR1_InterruptHandler+1)^(0+128)
 11120  093E  0020               	movlb	0	; select bank0
 11121  093F  0820               	movf	TMR1_SetInterruptHandler@InterruptHandler,w
 11122  0940  0021               	movlb	1	; select bank1
 11123  0941  00E7               	movwf	_TMR1_InterruptHandler^(0+128)
 11124  0942                     l565:
 11125  0942  0008               	return
 11126  0943                     __end_of_TMR1_SetInterruptHandler:
 11127                           
 11128                           	psect	text21
 11129  0920                     __ptext21:	
 11130 ;; *************** function _PMD_Initialize *****************
 11131 ;; Defined at:
 11132 ;;		line 74 in file "mcc_generated_files/mcc.c"
 11133 ;; Parameters:    Size  Location     Type
 11134 ;;		None
 11135 ;; Auto vars:     Size  Location     Type
 11136 ;;		None
 11137 ;; Return value:  Size  Location     Type
 11138 ;;                  1    wreg      void 
 11139 ;; Registers used:
 11140 ;;		status,2
 11141 ;; Tracked objects:
 11142 ;;		On entry : 0/0
 11143 ;;		On exit  : 0/0
 11144 ;;		Unchanged: 0/0
 11145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11150 ;;Total ram usage:        0 bytes
 11151 ;; Hardware stack levels used: 1
 11152 ;; Hardware stack levels required when called: 5
 11153 ;; This function calls:
 11154 ;;		Nothing
 11155 ;; This function is called by:
 11156 ;;		_SYSTEM_Initialize
 11157 ;; This function uses a non-reentrant model
 11158 ;;
 11159                           
 11160                           
 11161                           ;psect for function _PMD_Initialize
 11162  0920                     _PMD_Initialize:
 11163  0920                     l4380:	
 11164                           ;incstack = 0
 11165                           ; Regs used in _PMD_Initialize: [status,2]
 11166                           
 11167                           
 11168                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
 11169  0920  002F               	movlb	15	; select bank15
 11170  0921  0196               	clrf	22	;volatile
 11171                           
 11172                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
 11173  0922  0197               	clrf	23	;volatile
 11174                           
 11175                           ;mcc_generated_files/mcc.c: 81:     PMD2 = 0x00;
 11176  0923  0198               	clrf	24	;volatile
 11177                           
 11178                           ;mcc_generated_files/mcc.c: 83:     PMD3 = 0x00;
 11179  0924  0199               	clrf	25	;volatile
 11180                           
 11181                           ;mcc_generated_files/mcc.c: 85:     PMD4 = 0x00;
 11182  0925  019A               	clrf	26	;volatile
 11183                           
 11184                           ;mcc_generated_files/mcc.c: 87:     PMD5 = 0x00;
 11185  0926  019B               	clrf	27	;volatile
 11186  0927                     l482:
 11187  0927  0008               	return
 11188  0928                     __end_of_PMD_Initialize:
 11189                           
 11190                           	psect	text22
 11191  0BAC                     __ptext22:	
 11192 ;; *************** function _PIN_MANAGER_Initialize *****************
 11193 ;; Defined at:
 11194 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 11195 ;; Parameters:    Size  Location     Type
 11196 ;;		None
 11197 ;; Auto vars:     Size  Location     Type
 11198 ;;		None
 11199 ;; Return value:  Size  Location     Type
 11200 ;;                  1    wreg      void 
 11201 ;; Registers used:
 11202 ;;		wreg, status,2
 11203 ;; Tracked objects:
 11204 ;;		On entry : 0/0
 11205 ;;		On exit  : 0/0
 11206 ;;		Unchanged: 0/0
 11207 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11212 ;;Total ram usage:        0 bytes
 11213 ;; Hardware stack levels used: 1
 11214 ;; Hardware stack levels required when called: 5
 11215 ;; This function calls:
 11216 ;;		Nothing
 11217 ;; This function is called by:
 11218 ;;		_SYSTEM_Initialize
 11219 ;; This function uses a non-reentrant model
 11220 ;;
 11221                           
 11222                           
 11223                           ;psect for function _PIN_MANAGER_Initialize
 11224  0BAC                     _PIN_MANAGER_Initialize:
 11225  0BAC                     l4330:	
 11226                           ;incstack = 0
 11227                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
 11228                           
 11229                           
 11230                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 11231  0BAC  0020               	movlb	0	; select bank0
 11232  0BAD  019A               	clrf	26	;volatile
 11233                           
 11234                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 11235  0BAE  0199               	clrf	25	;volatile
 11236                           
 11237                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 11238  0BAF  0196               	clrf	22	;volatile
 11239                           
 11240                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 11241  0BB0  0197               	clrf	23	;volatile
 11242                           
 11243                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 11244  0BB1  0198               	clrf	24	;volatile
 11245  0BB2                     l4332:
 11246                           
 11247                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 11248  0BB2  3007               	movlw	7
 11249  0BB3  0095               	movwf	21	;volatile
 11250  0BB4                     l4334:
 11251                           
 11252                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0x0F;
 11253  0BB4  300F               	movlw	15
 11254  0BB5  0091               	movwf	17	;volatile
 11255  0BB6                     l4336:
 11256                           
 11257                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 11258  0BB6  30FF               	movlw	255
 11259  0BB7  0092               	movwf	18	;volatile
 11260  0BB8                     l4338:
 11261                           
 11262                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
 11263  0BB8  30FF               	movlw	255
 11264  0BB9  0093               	movwf	19	;volatile
 11265  0BBA                     l4340:
 11266                           
 11267                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 11268  0BBA  30FF               	movlw	255
 11269  0BBB  0094               	movwf	20	;volatile
 11270  0BBC                     l4342:
 11271                           
 11272                           ;mcc_generated_files/pin_manager.c: 78:     ANSELD = 0xFF;
 11273  0BBC  30FF               	movlw	255
 11274  0BBD  003E               	movlb	30	; select bank30
 11275  0BBE  00D9               	movwf	89	;volatile
 11276  0BBF                     l4344:
 11277                           
 11278                           ;mcc_generated_files/pin_manager.c: 79:     ANSELC = 0xC7;
 11279  0BBF  30C7               	movlw	199
 11280  0BC0  00CE               	movwf	78	;volatile
 11281  0BC1                     l4346:
 11282                           
 11283                           ;mcc_generated_files/pin_manager.c: 80:     ANSELB = 0xEF;
 11284  0BC1  30EF               	movlw	239
 11285  0BC2  00C3               	movwf	67	;volatile
 11286  0BC3                     l4348:
 11287                           
 11288                           ;mcc_generated_files/pin_manager.c: 81:     ANSELE = 0x07;
 11289  0BC3  3007               	movlw	7
 11290  0BC4  00E4               	movwf	100	;volatile
 11291  0BC5                     l4350:
 11292                           
 11293                           ;mcc_generated_files/pin_manager.c: 82:     ANSELA = 0x0F;
 11294  0BC5  300F               	movlw	15
 11295  0BC6  00B8               	movwf	56	;volatile
 11296                           
 11297                           ;mcc_generated_files/pin_manager.c: 87:     WPUD = 0x00;
 11298  0BC7  01DA               	clrf	90	;volatile
 11299                           
 11300                           ;mcc_generated_files/pin_manager.c: 88:     WPUE = 0x00;
 11301  0BC8  01E5               	clrf	101	;volatile
 11302                           
 11303                           ;mcc_generated_files/pin_manager.c: 89:     WPUB = 0x00;
 11304  0BC9  01C4               	clrf	68	;volatile
 11305                           
 11306                           ;mcc_generated_files/pin_manager.c: 90:     WPUA = 0x00;
 11307  0BCA  01B9               	clrf	57	;volatile
 11308                           
 11309                           ;mcc_generated_files/pin_manager.c: 91:     WPUC = 0x00;
 11310  0BCB  01CF               	clrf	79	;volatile
 11311                           
 11312                           ;mcc_generated_files/pin_manager.c: 96:     ODCONE = 0x00;
 11313  0BCC  01E6               	clrf	102	;volatile
 11314                           
 11315                           ;mcc_generated_files/pin_manager.c: 97:     ODCONA = 0x00;
 11316  0BCD  01BA               	clrf	58	;volatile
 11317                           
 11318                           ;mcc_generated_files/pin_manager.c: 98:     ODCONB = 0x00;
 11319  0BCE  01C5               	clrf	69	;volatile
 11320                           
 11321                           ;mcc_generated_files/pin_manager.c: 99:     ODCONC = 0x00;
 11322  0BCF  01D0               	clrf	80	;volatile
 11323                           
 11324                           ;mcc_generated_files/pin_manager.c: 100:     ODCOND = 0x00;
 11325  0BD0  01DB               	clrf	91	;volatile
 11326  0BD1                     l4352:
 11327                           
 11328                           ;mcc_generated_files/pin_manager.c: 105:     SLRCONA = 0xFF;
 11329  0BD1  30FF               	movlw	255
 11330  0BD2  00BB               	movwf	59	;volatile
 11331  0BD3                     l4354:
 11332                           
 11333                           ;mcc_generated_files/pin_manager.c: 106:     SLRCONB = 0xFF;
 11334  0BD3  30FF               	movlw	255
 11335  0BD4  00C6               	movwf	70	;volatile
 11336  0BD5                     l4356:
 11337                           
 11338                           ;mcc_generated_files/pin_manager.c: 107:     SLRCONC = 0xFF;
 11339  0BD5  30FF               	movlw	255
 11340  0BD6  00D1               	movwf	81	;volatile
 11341  0BD7                     l4358:
 11342                           
 11343                           ;mcc_generated_files/pin_manager.c: 108:     SLRCOND = 0xFF;
 11344  0BD7  30FF               	movlw	255
 11345  0BD8  00DC               	movwf	92	;volatile
 11346  0BD9                     l4360:
 11347                           
 11348                           ;mcc_generated_files/pin_manager.c: 109:     SLRCONE = 0x07;
 11349  0BD9  3007               	movlw	7
 11350  0BDA  00E7               	movwf	103	;volatile
 11351  0BDB                     l4362:
 11352                           
 11353                           ;mcc_generated_files/pin_manager.c: 114:     INLVLA = 0xFF;
 11354  0BDB  30FF               	movlw	255
 11355  0BDC  00BC               	movwf	60	;volatile
 11356  0BDD                     l4364:
 11357                           
 11358                           ;mcc_generated_files/pin_manager.c: 115:     INLVLB = 0xFF;
 11359  0BDD  30FF               	movlw	255
 11360  0BDE  00C7               	movwf	71	;volatile
 11361  0BDF                     l4366:
 11362                           
 11363                           ;mcc_generated_files/pin_manager.c: 116:     INLVLC = 0xFF;
 11364  0BDF  30FF               	movlw	255
 11365  0BE0  00D2               	movwf	82	;volatile
 11366  0BE1                     l4368:
 11367                           
 11368                           ;mcc_generated_files/pin_manager.c: 117:     INLVLD = 0xFF;
 11369  0BE1  30FF               	movlw	255
 11370  0BE2  00DD               	movwf	93	;volatile
 11371  0BE3                     l4370:
 11372                           
 11373                           ;mcc_generated_files/pin_manager.c: 118:     INLVLE = 0x07;
 11374  0BE3  3007               	movlw	7
 11375  0BE4  00E8               	movwf	104	;volatile
 11376  0BE5                     l4372:
 11377                           
 11378                           ;mcc_generated_files/pin_manager.c: 127:     SSP1CLKPPS = 0x13;
 11379  0BE5  3013               	movlw	19
 11380  0BE6  003D               	movlb	29	; select bank29
 11381  0BE7  00C5               	movwf	69	;volatile
 11382  0BE8                     l4374:
 11383                           
 11384                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x14;
 11385  0BE8  3014               	movlw	20
 11386  0BE9  003E               	movlb	30	; select bank30
 11387  0BEA  00A3               	movwf	35	;volatile
 11388  0BEB                     l4376:
 11389                           
 11390                           ;mcc_generated_files/pin_manager.c: 129:     RC4PPS = 0x15;
 11391  0BEB  3015               	movlw	21
 11392  0BEC  00A4               	movwf	36	;volatile
 11393  0BED                     l4378:
 11394                           
 11395                           ;mcc_generated_files/pin_manager.c: 130:     SSP1DATPPS = 0x14;
 11396  0BED  3014               	movlw	20
 11397  0BEE  003D               	movlb	29	; select bank29
 11398  0BEF  00C6               	movwf	70	;volatile
 11399  0BF0                     l436:
 11400  0BF0  0008               	return
 11401  0BF1                     __end_of_PIN_MANAGER_Initialize:
 11402                           
 11403                           	psect	text23
 11404  0931                     __ptext23:	
 11405 ;; *************** function _OSCILLATOR_Initialize *****************
 11406 ;; Defined at:
 11407 ;;		line 60 in file "mcc_generated_files/mcc.c"
 11408 ;; Parameters:    Size  Location     Type
 11409 ;;		None
 11410 ;; Auto vars:     Size  Location     Type
 11411 ;;		None
 11412 ;; Return value:  Size  Location     Type
 11413 ;;                  1    wreg      void 
 11414 ;; Registers used:
 11415 ;;		wreg, status,2
 11416 ;; Tracked objects:
 11417 ;;		On entry : 0/0
 11418 ;;		On exit  : 0/0
 11419 ;;		Unchanged: 0/0
 11420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11425 ;;Total ram usage:        0 bytes
 11426 ;; Hardware stack levels used: 1
 11427 ;; Hardware stack levels required when called: 5
 11428 ;; This function calls:
 11429 ;;		Nothing
 11430 ;; This function is called by:
 11431 ;;		_SYSTEM_Initialize
 11432 ;; This function uses a non-reentrant model
 11433 ;;
 11434                           
 11435                           
 11436                           ;psect for function _OSCILLATOR_Initialize
 11437  0931                     _OSCILLATOR_Initialize:
 11438  0931                     l4390:	
 11439                           ;incstack = 0
 11440                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 11441                           
 11442                           
 11443                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x62;
 11444  0931  3062               	movlw	98
 11445  0932  0031               	movlb	17	; select bank17
 11446  0933  008D               	movwf	13	;volatile
 11447  0934                     l4392:
 11448                           
 11449                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
 11450  0934  018F               	clrf	15	;volatile
 11451  0935                     l4394:
 11452                           
 11453                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
 11454  0935  0191               	clrf	17	;volatile
 11455                           
 11456                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x02;
 11457  0936  3002               	movlw	2
 11458  0937  0093               	movwf	19	;volatile
 11459  0938                     l4396:
 11460                           
 11461                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
 11462  0938  0192               	clrf	18	;volatile
 11463  0939                     l479:
 11464  0939  0008               	return
 11465  093A                     __end_of_OSCILLATOR_Initialize:
 11466                           
 11467                           	psect	text24
 11468  0943                     __ptext24:	
 11469 ;; *************** function _I2C1_Initialize *****************
 11470 ;; Defined at:
 11471 ;;		line 167 in file "mcc_generated_files/i2c1_master.c"
 11472 ;; Parameters:    Size  Location     Type
 11473 ;;		None
 11474 ;; Auto vars:     Size  Location     Type
 11475 ;;		None
 11476 ;; Return value:  Size  Location     Type
 11477 ;;                  1    wreg      void 
 11478 ;; Registers used:
 11479 ;;		wreg, status,2
 11480 ;; Tracked objects:
 11481 ;;		On entry : 0/0
 11482 ;;		On exit  : 0/0
 11483 ;;		Unchanged: 0/0
 11484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11489 ;;Total ram usage:        0 bytes
 11490 ;; Hardware stack levels used: 1
 11491 ;; Hardware stack levels required when called: 5
 11492 ;; This function calls:
 11493 ;;		Nothing
 11494 ;; This function is called by:
 11495 ;;		_SYSTEM_Initialize
 11496 ;; This function uses a non-reentrant model
 11497 ;;
 11498                           
 11499                           
 11500                           ;psect for function _I2C1_Initialize
 11501  0943                     _I2C1_Initialize:
 11502  0943                     l4382:	
 11503                           ;incstack = 0
 11504                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
 11505                           
 11506                           
 11507                           ;mcc_generated_files/i2c1_master.c: 169:     SSP1STAT = 0x80;
 11508  0943  3080               	movlw	128
 11509  0944  0023               	movlb	3	; select bank3
 11510  0945  008F               	movwf	15	;volatile
 11511                           
 11512                           ;mcc_generated_files/i2c1_master.c: 170:     SSP1CON1 = 0x08;
 11513  0946  3008               	movlw	8
 11514  0947  0090               	movwf	16	;volatile
 11515  0948                     l4384:
 11516                           
 11517                           ;mcc_generated_files/i2c1_master.c: 171:     SSP1CON2 = 0x00;
 11518  0948  0191               	clrf	17	;volatile
 11519  0949                     l4386:
 11520                           
 11521                           ;mcc_generated_files/i2c1_master.c: 172:     SSP1ADD = 0x03;
 11522  0949  3003               	movlw	3
 11523  094A  008D               	movwf	13	;volatile
 11524  094B                     l4388:
 11525                           
 11526                           ;mcc_generated_files/i2c1_master.c: 173:     SSP1CON1bits.SSPEN = 0;
 11527  094B  1290               	bcf	16,5	;volatile
 11528  094C                     l876:
 11529  094C  0008               	return
 11530  094D                     __end_of_I2C1_Initialize:
 11531                           
 11532                           	psect	text25
 11533  09C5                     __ptext25:	
 11534 ;; *************** function _ADCC_Initialize *****************
 11535 ;; Defined at:
 11536 ;;		line 63 in file "mcc_generated_files/adcc.c"
 11537 ;; Parameters:    Size  Location     Type
 11538 ;;		None
 11539 ;; Auto vars:     Size  Location     Type
 11540 ;;		None
 11541 ;; Return value:  Size  Location     Type
 11542 ;;                  1    wreg      void 
 11543 ;; Registers used:
 11544 ;;		wreg, status,2
 11545 ;; Tracked objects:
 11546 ;;		On entry : 0/0
 11547 ;;		On exit  : 0/0
 11548 ;;		Unchanged: 0/0
 11549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11554 ;;Total ram usage:        0 bytes
 11555 ;; Hardware stack levels used: 1
 11556 ;; Hardware stack levels required when called: 5
 11557 ;; This function calls:
 11558 ;;		Nothing
 11559 ;; This function is called by:
 11560 ;;		_SYSTEM_Initialize
 11561 ;; This function uses a non-reentrant model
 11562 ;;
 11563                           
 11564                           
 11565                           ;psect for function _ADCC_Initialize
 11566  09C5                     _ADCC_Initialize:
 11567  09C5                     l4398:	
 11568                           ;incstack = 0
 11569                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
 11570                           
 11571                           
 11572                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
 11573  09C5  0022               	movlb	2	; select bank2
 11574  09C6  018E               	clrf	14	;volatile
 11575                           
 11576                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
 11577  09C7  018F               	clrf	15	;volatile
 11578                           
 11579                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
 11580  09C8  0190               	clrf	16	;volatile
 11581                           
 11582                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
 11583  09C9  0191               	clrf	17	;volatile
 11584                           
 11585                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
 11586  09CA  0192               	clrf	18	;volatile
 11587                           
 11588                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
 11589  09CB  0193               	clrf	19	;volatile
 11590                           
 11591                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
 11592  09CC  018D               	clrf	13	;volatile
 11593                           
 11594                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
 11595  09CD  0021               	movlb	1	; select bank1
 11596  09CE  019E               	clrf	30	;volatile
 11597                           
 11598                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
 11599  09CF  019B               	clrf	27	;volatile
 11600                           
 11601                           ;mcc_generated_files/adcc.c: 85:     ADPRE = 0x00;
 11602  09D0  019C               	clrf	28	;volatile
 11603                           
 11604                           ;mcc_generated_files/adcc.c: 87:     ADCON1 = 0x00;
 11605  09D1  0194               	clrf	20	;volatile
 11606                           
 11607                           ;mcc_generated_files/adcc.c: 89:     ADCON2 = 0x00;
 11608  09D2  0195               	clrf	21	;volatile
 11609                           
 11610                           ;mcc_generated_files/adcc.c: 91:     ADCON3 = 0x00;
 11611  09D3  0196               	clrf	22	;volatile
 11612                           
 11613                           ;mcc_generated_files/adcc.c: 93:     ADSTAT = 0x00;
 11614  09D4  0197               	clrf	23	;volatile
 11615                           
 11616                           ;mcc_generated_files/adcc.c: 95:     ADREF = 0x00;
 11617  09D5  019A               	clrf	26	;volatile
 11618                           
 11619                           ;mcc_generated_files/adcc.c: 97:     ADACT = 0x00;
 11620  09D6  0199               	clrf	25	;volatile
 11621                           
 11622                           ;mcc_generated_files/adcc.c: 99:     ADCLK = 0x00;
 11623  09D7  0198               	clrf	24	;volatile
 11624  09D8                     l4400:
 11625                           
 11626                           ;mcc_generated_files/adcc.c: 101:     ADCON0 = 0x84;
 11627  09D8  3084               	movlw	132
 11628  09D9  0093               	movwf	19	;volatile
 11629  09DA                     l4402:
 11630                           
 11631                           ;mcc_generated_files/adcc.c: 103:     ADACQ = 0x00;
 11632  09DA  019D               	clrf	29	;volatile
 11633  09DB                     l643:
 11634  09DB  0008               	return
 11635  09DC                     __end_of_ADCC_Initialize:
 11636                           
 11637                           	psect	text26
 11638  094D                     __ptext26:	
 11639 ;; *************** function _S1 *****************
 11640 ;; Defined at:
 11641 ;;		line 57 in file "main.c"
 11642 ;; Parameters:    Size  Location     Type
 11643 ;;		None
 11644 ;; Auto vars:     Size  Location     Type
 11645 ;;		None
 11646 ;; Return value:  Size  Location     Type
 11647 ;;                  1    wreg      void 
 11648 ;; Registers used:
 11649 ;;		None
 11650 ;; Tracked objects:
 11651 ;;		On entry : 0/0
 11652 ;;		On exit  : 0/0
 11653 ;;		Unchanged: 0/0
 11654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11659 ;;Total ram usage:        0 bytes
 11660 ;; Hardware stack levels used: 1
 11661 ;; Hardware stack levels required when called: 5
 11662 ;; This function calls:
 11663 ;;		Nothing
 11664 ;; This function is called by:
 11665 ;;		_main
 11666 ;; This function uses a non-reentrant model
 11667 ;;
 11668                           
 11669                           
 11670                           ;psect for function _S1
 11671  094D                     _S1:
 11672  094D                     l4646:	
 11673                           ;incstack = 0
 11674                           ; Regs used in _S1: []
 11675                           
 11676                           
 11677                           ;main.c: 58:     if(PORTBbits.RB4==0 && PORTAbits.RA6==1){
 11678  094D  0020               	movlb	0	; select bank0
 11679  094E  1A0D               	btfsc	13,4	;volatile
 11680  094F  2951               	goto	u3551
 11681  0950  2952               	goto	u3550
 11682  0951                     u3551:
 11683  0951  2957               	goto	l1158
 11684  0952                     u3550:
 11685  0952                     l4648:
 11686  0952  1F0C               	btfss	12,6	;volatile
 11687  0953  2955               	goto	u3561
 11688  0954  2956               	goto	u3560
 11689  0955                     u3561:
 11690  0955  2957               	goto	l1158
 11691  0956                     u3560:
 11692  0956                     l1156:	
 11693                           ;main.c: 59:         do { LATAbits.LATA6 = 0; } while(0);
 11694                           
 11695  0956  1316               	bcf	22,6	;volatile
 11696  0957                     l1158:
 11697  0957  0008               	return
 11698  0958                     __end_of_S1:
 11699                           
 11700                           	psect	text27
 11701  0965                     __ptext27:	
 11702 ;; *************** function _OpenI2C *****************
 11703 ;; Defined at:
 11704 ;;		line 26 in file "I2C/i2c.c"
 11705 ;; Parameters:    Size  Location     Type
 11706 ;;		None
 11707 ;; Auto vars:     Size  Location     Type
 11708 ;;		None
 11709 ;; Return value:  Size  Location     Type
 11710 ;;                  1    wreg      void 
 11711 ;; Registers used:
 11712 ;;		wreg, status,2
 11713 ;; Tracked objects:
 11714 ;;		On entry : 0/0
 11715 ;;		On exit  : 0/0
 11716 ;;		Unchanged: 0/0
 11717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11722 ;;Total ram usage:        0 bytes
 11723 ;; Hardware stack levels used: 1
 11724 ;; Hardware stack levels required when called: 5
 11725 ;; This function calls:
 11726 ;;		Nothing
 11727 ;; This function is called by:
 11728 ;;		_main
 11729 ;; This function uses a non-reentrant model
 11730 ;;
 11731                           
 11732                           
 11733                           ;psect for function _OpenI2C
 11734  0965                     _OpenI2C:
 11735  0965                     l4452:	
 11736                           ;incstack = 0
 11737                           ; Regs used in _OpenI2C: [wreg+status,2]
 11738                           
 11739                           
 11740                           ;I2C/i2c.c: 28:   SSP1STAT = 0x80;
 11741  0965  3080               	movlw	128
 11742  0966  0023               	movlb	3	; select bank3
 11743  0967  008F               	movwf	15	;volatile
 11744                           
 11745                           ;I2C/i2c.c: 29:   SSP1CON1 = 0x08;
 11746  0968  3008               	movlw	8
 11747  0969  0090               	movwf	16	;volatile
 11748  096A                     l4454:
 11749                           
 11750                           ;I2C/i2c.c: 30:   SSP1CON2 = 0x00;
 11751  096A  0191               	clrf	17	;volatile
 11752  096B                     l4456:
 11753                           
 11754                           ;I2C/i2c.c: 31:   SSP1ADD = 0x03;
 11755  096B  3003               	movlw	3
 11756  096C  008D               	movwf	13	;volatile
 11757  096D                     l4458:
 11758                           
 11759                           ;I2C/i2c.c: 32:   SSP1CON1bits.SSPEN = 1;
 11760  096D  1690               	bsf	16,5	;volatile
 11761  096E                     l4460:
 11762                           
 11763                           ;I2C/i2c.c: 34:   TRISCbits.TRISC3 = 1;
 11764  096E  0020               	movlb	0	; select bank0
 11765  096F  1593               	bsf	19,3	;volatile
 11766  0970                     l4462:
 11767                           
 11768                           ;I2C/i2c.c: 35:   TRISCbits.TRISC4 = 1;
 11769  0970  1613               	bsf	19,4	;volatile
 11770  0971                     l23:
 11771  0971  0008               	return
 11772  0972                     __end_of_OpenI2C:
 11773                           
 11774                           	psect	text28
 11775  09F5                     __ptext28:	
 11776 ;; *************** function _LCDstr *****************
 11777 ;; Defined at:
 11778 ;;		line 112 in file "LCD/lcd.c"
 11779 ;; Parameters:    Size  Location     Type
 11780 ;;  p               2    9[BANK0 ] PTR unsigned char 
 11781 ;;		 -> main@buf(17), STR_2(8), STR_1(5), 
 11782 ;; Auto vars:     Size  Location     Type
 11783 ;;  c               1   14[BANK0 ] unsigned char 
 11784 ;; Return value:  Size  Location     Type
 11785 ;;                  1    wreg      void 
 11786 ;; Registers used:
 11787 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11788 ;; Tracked objects:
 11789 ;;		On entry : 0/0
 11790 ;;		On exit  : 0/0
 11791 ;;		Unchanged: 0/0
 11792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11793 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11794 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11795 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11796 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11797 ;;Total ram usage:        6 bytes
 11798 ;; Hardware stack levels used: 1
 11799 ;; Hardware stack levels required when called: 8
 11800 ;; This function calls:
 11801 ;;		_LCDchar
 11802 ;; This function is called by:
 11803 ;;		_main
 11804 ;; This function uses a non-reentrant model
 11805 ;;
 11806                           
 11807                           
 11808                           ;psect for function _LCDstr
 11809  09F5                     _LCDstr:
 11810  09F5                     l5836:	
 11811                           ;incstack = 0
 11812                           ; Regs used in _LCDstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11813                           
 11814                           
 11815                           ;LCD/lcd.c: 112: void LCDstr(char *p);LCD/lcd.c: 113: {;LCD/lcd.c: 114:   unsigned char 
      +                          c;;LCD/lcd.c: 116:   while((c = *p++)) LCDchar(c);
 11816  09F5  29FA               	goto	l5840
 11817  09F6                     l5838:
 11818  09F6  082E               	movf	LCDstr@c,w
 11819  09F7  3189  2128  3189   	fcall	_LCDchar
 11820  09FA                     l5840:
 11821  09FA  0020               	movlb	0	; select bank0
 11822  09FB  082A               	movf	LCDstr@p+1,w
 11823  09FC  00AC               	movwf	??_LCDstr+1
 11824  09FD  0829               	movf	LCDstr@p,w
 11825  09FE  00AB               	movwf	??_LCDstr
 11826  09FF  0AA9               	incf	LCDstr@p,f
 11827  0A00  1903               	skipnz
 11828  0A01  0AAA               	incf	LCDstr@p+1,f
 11829  0A02  082B               	movf	??_LCDstr,w
 11830  0A03  0084               	movwf	4
 11831  0A04  082C               	movf	??_LCDstr+1,w
 11832  0A05  0085               	movwf	5
 11833  0A06  0800               	movf	0,w	;code access
 11834  0A07  00AD               	movwf	??_LCDstr+2
 11835  0A08  082D               	movf	??_LCDstr+2,w
 11836  0A09  00AE               	movwf	LCDstr@c
 11837  0A0A  082E               	movf	LCDstr@c,w
 11838  0A0B  1D03               	btfss	3,2
 11839  0A0C  2A0E               	goto	u5441
 11840  0A0D  2A0F               	goto	u5440
 11841  0A0E                     u5441:
 11842  0A0E  29F6               	goto	l5838
 11843  0A0F                     u5440:
 11844  0A0F                     l244:
 11845  0A0F  0008               	return
 11846  0A10                     __end_of_LCDstr:
 11847                           
 11848                           	psect	text29
 11849  0928                     __ptext29:	
 11850 ;; *************** function _LCDchar *****************
 11851 ;; Defined at:
 11852 ;;		line 107 in file "LCD/lcd.c"
 11853 ;; Parameters:    Size  Location     Type
 11854 ;;  c               1    wreg     unsigned char 
 11855 ;; Auto vars:     Size  Location     Type
 11856 ;;  c               1    8[BANK0 ] unsigned char 
 11857 ;; Return value:  Size  Location     Type
 11858 ;;                  1    wreg      void 
 11859 ;; Registers used:
 11860 ;;		wreg, status,2, status,0, pclath, cstack
 11861 ;; Tracked objects:
 11862 ;;		On entry : 0/0
 11863 ;;		On exit  : 0/0
 11864 ;;		Unchanged: 0/0
 11865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11867 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11869 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11870 ;;Total ram usage:        1 bytes
 11871 ;; Hardware stack levels used: 1
 11872 ;; Hardware stack levels required when called: 7
 11873 ;; This function calls:
 11874 ;;		_LCDsend2x4
 11875 ;; This function is called by:
 11876 ;;		_LCDstr
 11877 ;; This function uses a non-reentrant model
 11878 ;;
 11879                           
 11880                           
 11881                           ;psect for function _LCDchar
 11882  0928                     _LCDchar:
 11883                           
 11884                           ;incstack = 0
 11885                           ; Regs used in _LCDchar: [wreg+status,2+status,0+pclath+cstack]
 11886                           ;LCDchar@c stored from wreg
 11887  0928  0020               	movlb	0	; select bank0
 11888  0929  00A8               	movwf	LCDchar@c
 11889  092A                     l5770:
 11890                           
 11891                           ;LCD/lcd.c: 107: void LCDchar(unsigned char c);LCD/lcd.c: 108: {;LCD/lcd.c: 109:   LCDse
      +                          nd2x4(c, 0x01);
 11892  092A  01A2               	clrf	LCDsend2x4@mode
 11893  092B  0AA2               	incf	LCDsend2x4@mode,f
 11894  092C  0828               	movf	LCDchar@c,w
 11895  092D  3187  2714  3189   	fcall	_LCDsend2x4
 11896  0930                     l238:
 11897  0930  0008               	return
 11898  0931                     __end_of_LCDchar:
 11899                           
 11900                           	psect	text30
 11901  0A2B                     __ptext30:	
 11902 ;; *************** function _LCDpos *****************
 11903 ;; Defined at:
 11904 ;;		line 125 in file "LCD/lcd.c"
 11905 ;; Parameters:    Size  Location     Type
 11906 ;;  l               1    wreg     unsigned char 
 11907 ;;  c               1    9[BANK0 ] unsigned char 
 11908 ;; Auto vars:     Size  Location     Type
 11909 ;;  l               1   11[BANK0 ] unsigned char 
 11910 ;;  p               1   12[BANK0 ] unsigned char 
 11911 ;; Return value:  Size  Location     Type
 11912 ;;                  1    wreg      void 
 11913 ;; Registers used:
 11914 ;;		wreg, status,2, status,0, pclath, cstack
 11915 ;; Tracked objects:
 11916 ;;		On entry : 0/0
 11917 ;;		On exit  : 0/0
 11918 ;;		Unchanged: 0/0
 11919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11920 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11921 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11922 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11923 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11924 ;;Total ram usage:        4 bytes
 11925 ;; Hardware stack levels used: 1
 11926 ;; Hardware stack levels required when called: 8
 11927 ;; This function calls:
 11928 ;;		_LCDcmd
 11929 ;; This function is called by:
 11930 ;;		_main
 11931 ;; This function uses a non-reentrant model
 11932 ;;
 11933                           
 11934                           
 11935                           ;psect for function _LCDpos
 11936  0A2B                     _LCDpos:
 11937                           
 11938                           ;incstack = 0
 11939                           ; Regs used in _LCDpos: [wreg+status,2+status,0+pclath+cstack]
 11940                           ;LCDpos@l stored from wreg
 11941  0A2B  0020               	movlb	0	; select bank0
 11942  0A2C  00AB               	movwf	LCDpos@l
 11943  0A2D                     l5852:
 11944                           
 11945                           ;LCD/lcd.c: 125: void LCDpos(unsigned char l, unsigned char c);LCD/lcd.c: 126: {;LCD/lcd
      +                          .c: 127:   unsigned char p;;LCD/lcd.c: 131:   if (l>1) p = 0xc0; else p=0x80;
 11946  0A2D  3002               	movlw	2
 11947  0A2E  022B               	subwf	LCDpos@l,w
 11948  0A2F  1C03               	skipc
 11949  0A30  2A32               	goto	u5461
 11950  0A31  2A33               	goto	u5460
 11951  0A32                     u5461:
 11952  0A32  2A38               	goto	l5856
 11953  0A33                     u5460:
 11954  0A33                     l5854:
 11955  0A33  30C0               	movlw	192
 11956  0A34  00AA               	movwf	??_LCDpos
 11957  0A35  082A               	movf	??_LCDpos,w
 11958  0A36  00AC               	movwf	LCDpos@p
 11959  0A37  2A3C               	goto	l5858
 11960  0A38                     l5856:
 11961  0A38  3080               	movlw	128
 11962  0A39  00AA               	movwf	??_LCDpos
 11963  0A3A  082A               	movf	??_LCDpos,w
 11964  0A3B  00AC               	movwf	LCDpos@p
 11965  0A3C                     l5858:
 11966                           
 11967                           ;LCD/lcd.c: 132:   p = p | (c&0x0f);
 11968  0A3C  0829               	movf	LCDpos@c,w
 11969  0A3D  390F               	andlw	15
 11970  0A3E  042C               	iorwf	LCDpos@p,w
 11971  0A3F  00AA               	movwf	??_LCDpos
 11972  0A40  082A               	movf	??_LCDpos,w
 11973  0A41  00AC               	movwf	LCDpos@p
 11974  0A42                     l5860:
 11975                           
 11976                           ;LCD/lcd.c: 133:   LCDcmd(p);
 11977  0A42  082C               	movf	LCDpos@p,w
 11978  0A43  3189  2118  318A   	fcall	_LCDcmd
 11979  0A46                     l253:
 11980  0A46  0008               	return
 11981  0A47                     __end_of_LCDpos:
 11982                           
 11983                           	psect	text31
 11984  0918                     __ptext31:	
 11985 ;; *************** function _LCDcmd *****************
 11986 ;; Defined at:
 11987 ;;		line 102 in file "LCD/lcd.c"
 11988 ;; Parameters:    Size  Location     Type
 11989 ;;  c               1    wreg     unsigned char 
 11990 ;; Auto vars:     Size  Location     Type
 11991 ;;  c               1    8[BANK0 ] unsigned char 
 11992 ;; Return value:  Size  Location     Type
 11993 ;;                  1    wreg      void 
 11994 ;; Registers used:
 11995 ;;		wreg, status,2, status,0, pclath, cstack
 11996 ;; Tracked objects:
 11997 ;;		On entry : 0/0
 11998 ;;		On exit  : 0/0
 11999 ;;		Unchanged: 0/0
 12000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12002 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12004 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12005 ;;Total ram usage:        1 bytes
 12006 ;; Hardware stack levels used: 1
 12007 ;; Hardware stack levels required when called: 7
 12008 ;; This function calls:
 12009 ;;		_LCDsend2x4
 12010 ;; This function is called by:
 12011 ;;		_LCDpos
 12012 ;;		_main
 12013 ;; This function uses a non-reentrant model
 12014 ;;
 12015                           
 12016                           
 12017                           ;psect for function _LCDcmd
 12018  0918                     _LCDcmd:
 12019                           
 12020                           ;incstack = 0
 12021                           ; Regs used in _LCDcmd: [wreg+status,2+status,0+pclath+cstack]
 12022                           ;LCDcmd@c stored from wreg
 12023  0918  0020               	movlb	0	; select bank0
 12024  0919  00A8               	movwf	LCDcmd@c
 12025  091A                     l5768:
 12026                           
 12027                           ;LCD/lcd.c: 102: void LCDcmd(unsigned char c);LCD/lcd.c: 103: {;LCD/lcd.c: 104:   LCDsen
      +                          d2x4(c, 0);
 12028  091A  01A2               	clrf	LCDsend2x4@mode
 12029  091B  0828               	movf	LCDcmd@c,w
 12030  091C  3187  2714  3189   	fcall	_LCDsend2x4
 12031  091F                     l235:
 12032  091F  0008               	return
 12033  0920                     __end_of_LCDcmd:
 12034                           
 12035                           	psect	text32
 12036  0D45                     __ptext32:	
 12037 ;; *************** function _LCDinit *****************
 12038 ;; Defined at:
 12039 ;;		line 79 in file "LCD/lcd.c"
 12040 ;; Parameters:    Size  Location     Type
 12041 ;;		None
 12042 ;; Auto vars:     Size  Location     Type
 12043 ;;		None
 12044 ;; Return value:  Size  Location     Type
 12045 ;;                  1    wreg      void 
 12046 ;; Registers used:
 12047 ;;		wreg, status,2, status,0, pclath, cstack
 12048 ;; Tracked objects:
 12049 ;;		On entry : 0/0
 12050 ;;		On exit  : 0/0
 12051 ;;		Unchanged: 0/0
 12052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12055 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12056 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12057 ;;Total ram usage:        1 bytes
 12058 ;; Hardware stack levels used: 1
 12059 ;; Hardware stack levels required when called: 7
 12060 ;; This function calls:
 12061 ;;		_LCDsend
 12062 ;;		_LCDsend2x4
 12063 ;; This function is called by:
 12064 ;;		_main
 12065 ;; This function uses a non-reentrant model
 12066 ;;
 12067                           
 12068                           
 12069                           ;psect for function _LCDinit
 12070  0D45                     _LCDinit:
 12071  0D45                     l5802:	
 12072                           ;incstack = 0
 12073                           ; Regs used in _LCDinit: [wreg+status,2+status,0+pclath+cstack]
 12074                           
 12075                           
 12076                           ;LCD/lcd.c: 81:   _delay((unsigned long)((50)*(4000000/4000.0)));
 12077  0D45  3041               	movlw	65
 12078  0D46  0020               	movlb	0	; select bank0
 12079  0D47  00A8               	movwf	??_LCDinit
 12080  0D48  30EE               	movlw	238
 12081  0D49                     u5777:
 12082  0D49  0B89               	decfsz	9,f
 12083  0D4A  2D49               	goto	u5777
 12084  0D4B  0BA8               	decfsz	??_LCDinit,f
 12085  0D4C  2D49               	goto	u5777
 12086  0D4D  0000               	nop
 12087  0D4E                     l5804:
 12088                           
 12089                           ;LCD/lcd.c: 82:   LCDsend(0x30);
 12090  0D4E  3030               	movlw	48
 12091  0D4F  318C  2442  318D   	fcall	_LCDsend
 12092  0D52                     l5806:
 12093                           
 12094                           ;LCD/lcd.c: 83:   LCDsend(0x34); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x30);
 12095  0D52  3034               	movlw	52
 12096  0D53  318C  2442  318D   	fcall	_LCDsend
 12097  0D56  30A6               	movlw	166
 12098  0D57                     u5787:
 12099  0D57  0B89               	decfsz	9,f
 12100  0D58  2D57               	goto	u5787
 12101  0D59  3200               	nop2
 12102  0D5A                     l5808:
 12103  0D5A  3030               	movlw	48
 12104  0D5B  318C  2442  318D   	fcall	_LCDsend
 12105  0D5E                     l5810:
 12106                           
 12107                           ;LCD/lcd.c: 84:   _delay((unsigned long)((5)*(4000000/4000.0)));
 12108  0D5E  3007               	movlw	7
 12109  0D5F  0020               	movlb	0	; select bank0
 12110  0D60  00A8               	movwf	??_LCDinit
 12111  0D61  307D               	movlw	125
 12112  0D62                     u5797:
 12113  0D62  0B89               	decfsz	9,f
 12114  0D63  2D62               	goto	u5797
 12115  0D64  0BA8               	decfsz	??_LCDinit,f
 12116  0D65  2D62               	goto	u5797
 12117                           
 12118                           ;LCD/lcd.c: 85:   LCDsend(0x30);
 12119  0D66  3030               	movlw	48
 12120  0D67  318C  2442  318D   	fcall	_LCDsend
 12121                           
 12122                           ;LCD/lcd.c: 86:   LCDsend(0x34); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x30);
 12123  0D6A  3034               	movlw	52
 12124  0D6B  318C  2442  318D   	fcall	_LCDsend
 12125  0D6E                     l5812:
 12126  0D6E  30A6               	movlw	166
 12127  0D6F                     u5807:
 12128  0D6F  0B89               	decfsz	9,f
 12129  0D70  2D6F               	goto	u5807
 12130  0D71  3200               	nop2
 12131  0D72                     l5814:
 12132  0D72  3030               	movlw	48
 12133  0D73  318C  2442  318D   	fcall	_LCDsend
 12134                           
 12135                           ;LCD/lcd.c: 87:   _delay((unsigned long)((100)*(4000000/4000000.0)));
 12136  0D76  3021               	movlw	33
 12137  0D77                     u5817:
 12138  0D77  0B89               	decfsz	9,f
 12139  0D78  2D77               	goto	u5817
 12140  0D79  0000               	nop
 12141  0D7A                     l5816:
 12142                           
 12143                           ;LCD/lcd.c: 88:   LCDsend(0x30);
 12144  0D7A  3030               	movlw	48
 12145  0D7B  318C  2442  318D   	fcall	_LCDsend
 12146  0D7E                     l5818:
 12147                           
 12148                           ;LCD/lcd.c: 89:   LCDsend(0x34); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x30);
 12149  0D7E  3034               	movlw	52
 12150  0D7F  318C  2442  318D   	fcall	_LCDsend
 12151  0D82  30A6               	movlw	166
 12152  0D83                     u5827:
 12153  0D83  0B89               	decfsz	9,f
 12154  0D84  2D83               	goto	u5827
 12155  0D85  3200               	nop2
 12156  0D86                     l5820:
 12157  0D86  3030               	movlw	48
 12158  0D87  318C  2442  318D   	fcall	_LCDsend
 12159  0D8A                     l5822:
 12160                           
 12161                           ;LCD/lcd.c: 90:   _delay((unsigned long)((100)*(4000000/4000000.0)));
 12162  0D8A  3021               	movlw	33
 12163  0D8B                     u5837:
 12164  0D8B  0B89               	decfsz	9,f
 12165  0D8C  2D8B               	goto	u5837
 12166  0D8D  0000               	nop
 12167                           
 12168                           ;LCD/lcd.c: 91:   LCDsend(0x20);
 12169  0D8E  3020               	movlw	32
 12170  0D8F  318C  2442  318D   	fcall	_LCDsend
 12171                           
 12172                           ;LCD/lcd.c: 92:   LCDsend(0x24); _delay((unsigned long)((500)*(4000000/4000000.0))); LCD
      +                          send(0x20);
 12173  0D92  3024               	movlw	36
 12174  0D93  318C  2442  318D   	fcall	_LCDsend
 12175  0D96                     l5824:
 12176  0D96  30A6               	movlw	166
 12177  0D97                     u5847:
 12178  0D97  0B89               	decfsz	9,f
 12179  0D98  2D97               	goto	u5847
 12180  0D99  3200               	nop2
 12181  0D9A                     l5826:
 12182  0D9A  3020               	movlw	32
 12183  0D9B  318C  2442  318D   	fcall	_LCDsend
 12184                           
 12185                           ;LCD/lcd.c: 93:   _delay((unsigned long)((5)*(4000000/4000.0)));
 12186  0D9E  3007               	movlw	7
 12187  0D9F  0020               	movlb	0	; select bank0
 12188  0DA0  00A8               	movwf	??_LCDinit
 12189  0DA1  307D               	movlw	125
 12190  0DA2                     u5857:
 12191  0DA2  0B89               	decfsz	9,f
 12192  0DA3  2DA2               	goto	u5857
 12193  0DA4  0BA8               	decfsz	??_LCDinit,f
 12194  0DA5  2DA2               	goto	u5857
 12195  0DA6                     l5828:
 12196                           
 12197                           ;LCD/lcd.c: 95:   LCDsend2x4(0x28, 0);
 12198  0DA6  0020               	movlb	0	; select bank0
 12199  0DA7  01A2               	clrf	LCDsend2x4@mode
 12200  0DA8  3028               	movlw	40
 12201  0DA9  3187  2714  318D   	fcall	_LCDsend2x4
 12202  0DAC                     l5830:
 12203                           
 12204                           ;LCD/lcd.c: 96:   LCDsend2x4(0x06, 0);
 12205  0DAC  0020               	movlb	0	; select bank0
 12206  0DAD  01A2               	clrf	LCDsend2x4@mode
 12207  0DAE  3006               	movlw	6
 12208  0DAF  3187  2714  318D   	fcall	_LCDsend2x4
 12209  0DB2                     l5832:
 12210                           
 12211                           ;LCD/lcd.c: 97:   LCDsend2x4(0x0f, 0);
 12212  0DB2  0020               	movlb	0	; select bank0
 12213  0DB3  01A2               	clrf	LCDsend2x4@mode
 12214  0DB4  300F               	movlw	15
 12215  0DB5  3187  2714  318D   	fcall	_LCDsend2x4
 12216  0DB8                     l5834:
 12217                           
 12218                           ;LCD/lcd.c: 98:   LCDsend2x4(0x01, 0);
 12219  0DB8  0020               	movlb	0	; select bank0
 12220  0DB9  01A2               	clrf	LCDsend2x4@mode
 12221  0DBA  3001               	movlw	1
 12222  0DBB  3187  2714  318D   	fcall	_LCDsend2x4
 12223                           
 12224                           ;LCD/lcd.c: 99:   _delay((unsigned long)((2)*(4000000/4000.0)));
 12225  0DBE  3003               	movlw	3
 12226  0DBF  0020               	movlb	0	; select bank0
 12227  0DC0  00A8               	movwf	??_LCDinit
 12228  0DC1  3097               	movlw	151
 12229  0DC2                     u5867:
 12230  0DC2  0B89               	decfsz	9,f
 12231  0DC3  2DC2               	goto	u5867
 12232  0DC4  0BA8               	decfsz	??_LCDinit,f
 12233  0DC5  2DC2               	goto	u5867
 12234  0DC6  3200               	nop2
 12235  0DC7                     l232:
 12236  0DC7  0008               	return
 12237  0DC8                     __end_of_LCDinit:
 12238                           
 12239                           	psect	text33
 12240  0714                     __ptext33:	
 12241 ;; *************** function _LCDsend2x4 *****************
 12242 ;; Defined at:
 12243 ;;		line 56 in file "LCD/lcd.c"
 12244 ;; Parameters:    Size  Location     Type
 12245 ;;  c               1    wreg     unsigned char 
 12246 ;;  mode            1    2[BANK0 ] unsigned char 
 12247 ;; Auto vars:     Size  Location     Type
 12248 ;;  c               1    5[BANK0 ] unsigned char 
 12249 ;;  lc              1    7[BANK0 ] unsigned char 
 12250 ;;  hc              1    6[BANK0 ] unsigned char 
 12251 ;; Return value:  Size  Location     Type
 12252 ;;                  1    wreg      void 
 12253 ;; Registers used:
 12254 ;;		wreg, status,2, status,0, pclath, cstack
 12255 ;; Tracked objects:
 12256 ;;		On entry : 0/0
 12257 ;;		On exit  : 0/0
 12258 ;;		Unchanged: 0/0
 12259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12260 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12261 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12262 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12263 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12264 ;;Total ram usage:        6 bytes
 12265 ;; Hardware stack levels used: 1
 12266 ;; Hardware stack levels required when called: 6
 12267 ;; This function calls:
 12268 ;;		_WriteI2C
 12269 ;; This function is called by:
 12270 ;;		_LCDinit
 12271 ;;		_LCDcmd
 12272 ;;		_LCDchar
 12273 ;; This function uses a non-reentrant model
 12274 ;;
 12275                           
 12276                           
 12277                           ;psect for function _LCDsend2x4
 12278  0714                     _LCDsend2x4:
 12279                           
 12280                           ;incstack = 0
 12281                           ; Regs used in _LCDsend2x4: [wreg+status,2+status,0+pclath+cstack]
 12282                           ;LCDsend2x4@c stored from wreg
 12283  0714  0020               	movlb	0	; select bank0
 12284  0715  00A5               	movwf	LCDsend2x4@c
 12285  0716                     l5556:
 12286                           
 12287                           ;LCD/lcd.c: 56: void LCDsend2x4(unsigned char c, unsigned char mode);LCD/lcd.c: 57: {;LC
      +                          D/lcd.c: 58:   unsigned char hc;;LCD/lcd.c: 59:   unsigned char lc;;LCD/lcd.c: 61:   hc 
      +                          = c & 0xf0;
 12288  0716  0825               	movf	LCDsend2x4@c,w
 12289  0717  39F0               	andlw	240
 12290  0718  00A3               	movwf	??_LCDsend2x4
 12291  0719  0823               	movf	??_LCDsend2x4,w
 12292  071A  00A6               	movwf	LCDsend2x4@hc
 12293  071B                     l5558:
 12294                           
 12295                           ;LCD/lcd.c: 62:   lc = (c << 4) & 0xf0;
 12296  071B  0825               	movf	LCDsend2x4@c,w
 12297  071C  00A3               	movwf	??_LCDsend2x4
 12298  071D  3003               	movlw	3
 12299  071E                     u4875:
 12300  071E  35A3               	lslf	??_LCDsend2x4,f
 12301  071F  3EFF               	addlw	-1
 12302  0720  1D03               	skipz
 12303  0721  2F1E               	goto	u4875
 12304  0722  3523               	lslf	??_LCDsend2x4,w
 12305  0723  39F0               	andlw	240
 12306  0724  00A4               	movwf	??_LCDsend2x4+1
 12307  0725  0824               	movf	??_LCDsend2x4+1,w
 12308  0726  00A7               	movwf	LCDsend2x4@lc
 12309  0727                     l5560:	
 12310                           ;LCD/lcd.c: 64:   while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12311                           
 12312  0727  0023               	movlb	3	; select bank3
 12313  0728  0C0F               	rrf	15,w	;volatile
 12314  0729  0C89               	rrf	9,f
 12315  072A  3901               	andlw	1
 12316  072B  0020               	movlb	0	; select bank0
 12317  072C  00A3               	movwf	??_LCDsend2x4
 12318  072D  0023               	movlb	3	; select bank3
 12319  072E  0811               	movf	17,w	;volatile
 12320  072F  391F               	andlw	31
 12321  0730  0020               	movlb	0	; select bank0
 12322  0731  0423               	iorwf	??_LCDsend2x4,w
 12323  0732  1D03               	btfss	3,2
 12324  0733  2F35               	goto	u4881
 12325  0734  2F36               	goto	u4880
 12326  0735                     u4881:
 12327  0735  2F27               	goto	l5560
 12328  0736                     u4880:
 12329  0736                     l195:	
 12330                           ;LCD/lcd.c: 65:   do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12331                           
 12332  0736  0023               	movlb	3	; select bank3
 12333  0737  1411               	bsf	17,0	;volatile
 12334  0738                     l196:
 12335  0738  1811               	btfsc	17,0	;volatile
 12336  0739  2F3B               	goto	u4891
 12337  073A  2F3C               	goto	u4890
 12338  073B                     u4891:
 12339  073B  2F38               	goto	l196
 12340  073C                     u4890:
 12341  073C                     l5562:
 12342  073C  0023               	movlb	3	; select bank3
 12343  073D  0C0F               	rrf	15,w	;volatile
 12344  073E  0C89               	rrf	9,f
 12345  073F  3901               	andlw	1
 12346  0740  0020               	movlb	0	; select bank0
 12347  0741  00A3               	movwf	??_LCDsend2x4
 12348  0742  0023               	movlb	3	; select bank3
 12349  0743  0811               	movf	17,w	;volatile
 12350  0744  391F               	andlw	31
 12351  0745  0020               	movlb	0	; select bank0
 12352  0746  0423               	iorwf	??_LCDsend2x4,w
 12353  0747  1D03               	btfss	3,2
 12354  0748  2F4A               	goto	u4901
 12355  0749  2F4B               	goto	u4900
 12356  074A                     u4901:
 12357  074A  2F3C               	goto	l5562
 12358  074B                     u4900:
 12359  074B                     l5564:
 12360                           
 12361                           ;LCD/lcd.c: 66:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12362  074B  304E               	movlw	78
 12363  074C  318C  24EB  3187   	fcall	_WriteI2C
 12364  074F                     l5566:
 12365  074F  0023               	movlb	3	; select bank3
 12366  0750  0C0F               	rrf	15,w	;volatile
 12367  0751  0C89               	rrf	9,f
 12368  0752  3901               	andlw	1
 12369  0753  0020               	movlb	0	; select bank0
 12370  0754  00A3               	movwf	??_LCDsend2x4
 12371  0755  0023               	movlb	3	; select bank3
 12372  0756  0811               	movf	17,w	;volatile
 12373  0757  391F               	andlw	31
 12374  0758  0020               	movlb	0	; select bank0
 12375  0759  0423               	iorwf	??_LCDsend2x4,w
 12376  075A  1D03               	btfss	3,2
 12377  075B  2F5D               	goto	u4911
 12378  075C  2F5E               	goto	u4910
 12379  075D                     u4911:
 12380  075D  2F4F               	goto	l5566
 12381  075E                     u4910:
 12382  075E                     l5568:
 12383                           
 12384                           ;LCD/lcd.c: 67:   WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 12385  075E  0826               	movf	LCDsend2x4@hc,w
 12386  075F  0422               	iorwf	LCDsend2x4@mode,w
 12387  0760  3808               	iorlw	8
 12388  0761  318C  24EB  3187   	fcall	_WriteI2C
 12389  0764                     l5570:
 12390  0764  0023               	movlb	3	; select bank3
 12391  0765  0C0F               	rrf	15,w	;volatile
 12392  0766  0C89               	rrf	9,f
 12393  0767  3901               	andlw	1
 12394  0768  0020               	movlb	0	; select bank0
 12395  0769  00A3               	movwf	??_LCDsend2x4
 12396  076A  0023               	movlb	3	; select bank3
 12397  076B  0811               	movf	17,w	;volatile
 12398  076C  391F               	andlw	31
 12399  076D  0020               	movlb	0	; select bank0
 12400  076E  0423               	iorwf	??_LCDsend2x4,w
 12401  076F  1D03               	btfss	3,2
 12402  0770  2F72               	goto	u4921
 12403  0771  2F73               	goto	u4920
 12404  0772                     u4921:
 12405  0772  2F64               	goto	l5570
 12406  0773                     u4920:
 12407  0773                     l5572:
 12408                           
 12409                           ;LCD/lcd.c: 68:   WriteI2C(hc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STA
      +                          Tbits.R_W));
 12410  0773  0826               	movf	LCDsend2x4@hc,w
 12411  0774  0422               	iorwf	LCDsend2x4@mode,w
 12412  0775  380C               	iorlw	12
 12413  0776  318C  24EB  3187   	fcall	_WriteI2C
 12414  0779                     l5574:
 12415  0779  0023               	movlb	3	; select bank3
 12416  077A  0C0F               	rrf	15,w	;volatile
 12417  077B  0C89               	rrf	9,f
 12418  077C  3901               	andlw	1
 12419  077D  0020               	movlb	0	; select bank0
 12420  077E  00A3               	movwf	??_LCDsend2x4
 12421  077F  0023               	movlb	3	; select bank3
 12422  0780  0811               	movf	17,w	;volatile
 12423  0781  391F               	andlw	31
 12424  0782  0020               	movlb	0	; select bank0
 12425  0783  0423               	iorwf	??_LCDsend2x4,w
 12426  0784  1D03               	btfss	3,2
 12427  0785  2F87               	goto	u4931
 12428  0786  2F88               	goto	u4930
 12429  0787                     u4931:
 12430  0787  2F79               	goto	l5574
 12431  0788                     u4930:
 12432  0788                     l211:
 12433                           
 12434                           ;LCD/lcd.c: 69:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 12435  0788  0000               	nop
 12436  0789                     l5576:
 12437                           
 12438                           ;LCD/lcd.c: 70:   WriteI2C(hc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 12439  0789  0020               	movlb	0	; select bank0
 12440  078A  0826               	movf	LCDsend2x4@hc,w
 12441  078B  0422               	iorwf	LCDsend2x4@mode,w
 12442  078C  3808               	iorlw	8
 12443  078D  318C  24EB  3187   	fcall	_WriteI2C
 12444  0790                     l5578:
 12445  0790  0023               	movlb	3	; select bank3
 12446  0791  0C0F               	rrf	15,w	;volatile
 12447  0792  0C89               	rrf	9,f
 12448  0793  3901               	andlw	1
 12449  0794  0020               	movlb	0	; select bank0
 12450  0795  00A3               	movwf	??_LCDsend2x4
 12451  0796  0023               	movlb	3	; select bank3
 12452  0797  0811               	movf	17,w	;volatile
 12453  0798  391F               	andlw	31
 12454  0799  0020               	movlb	0	; select bank0
 12455  079A  0423               	iorwf	??_LCDsend2x4,w
 12456  079B  1D03               	btfss	3,2
 12457  079C  2F9E               	goto	u4941
 12458  079D  2F9F               	goto	u4940
 12459  079E                     u4941:
 12460  079E  2F90               	goto	l5578
 12461  079F                     u4940:
 12462  079F                     l5580:
 12463                           
 12464                           ;LCD/lcd.c: 71:   WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 12465  079F  0827               	movf	LCDsend2x4@lc,w
 12466  07A0  0422               	iorwf	LCDsend2x4@mode,w
 12467  07A1  3808               	iorlw	8
 12468  07A2  318C  24EB  3187   	fcall	_WriteI2C
 12469  07A5                     l5582:
 12470  07A5  0023               	movlb	3	; select bank3
 12471  07A6  0C0F               	rrf	15,w	;volatile
 12472  07A7  0C89               	rrf	9,f
 12473  07A8  3901               	andlw	1
 12474  07A9  0020               	movlb	0	; select bank0
 12475  07AA  00A3               	movwf	??_LCDsend2x4
 12476  07AB  0023               	movlb	3	; select bank3
 12477  07AC  0811               	movf	17,w	;volatile
 12478  07AD  391F               	andlw	31
 12479  07AE  0020               	movlb	0	; select bank0
 12480  07AF  0423               	iorwf	??_LCDsend2x4,w
 12481  07B0  1D03               	btfss	3,2
 12482  07B1  2FB3               	goto	u4951
 12483  07B2  2FB4               	goto	u4950
 12484  07B3                     u4951:
 12485  07B3  2FA5               	goto	l5582
 12486  07B4                     u4950:
 12487  07B4                     l5584:
 12488                           
 12489                           ;LCD/lcd.c: 72:   WriteI2C(lc | 0x08 | 0x04 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STA
      +                          Tbits.R_W));
 12490  07B4  0827               	movf	LCDsend2x4@lc,w
 12491  07B5  0422               	iorwf	LCDsend2x4@mode,w
 12492  07B6  380C               	iorlw	12
 12493  07B7  318C  24EB  3187   	fcall	_WriteI2C
 12494  07BA                     l5586:
 12495  07BA  0023               	movlb	3	; select bank3
 12496  07BB  0C0F               	rrf	15,w	;volatile
 12497  07BC  0C89               	rrf	9,f
 12498  07BD  3901               	andlw	1
 12499  07BE  0020               	movlb	0	; select bank0
 12500  07BF  00A3               	movwf	??_LCDsend2x4
 12501  07C0  0023               	movlb	3	; select bank3
 12502  07C1  0811               	movf	17,w	;volatile
 12503  07C2  391F               	andlw	31
 12504  07C3  0020               	movlb	0	; select bank0
 12505  07C4  0423               	iorwf	??_LCDsend2x4,w
 12506  07C5  1D03               	btfss	3,2
 12507  07C6  2FC8               	goto	u4961
 12508  07C7  2FC9               	goto	u4960
 12509  07C8                     u4961:
 12510  07C8  2FBA               	goto	l5586
 12511  07C9                     u4960:
 12512  07C9                     l220:
 12513                           
 12514                           ;LCD/lcd.c: 73:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 12515  07C9  0000               	nop
 12516  07CA                     l5588:
 12517                           
 12518                           ;LCD/lcd.c: 74:   WriteI2C(lc | 0x08 | mode); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R
      +                          _W));
 12519  07CA  0020               	movlb	0	; select bank0
 12520  07CB  0827               	movf	LCDsend2x4@lc,w
 12521  07CC  0422               	iorwf	LCDsend2x4@mode,w
 12522  07CD  3808               	iorlw	8
 12523  07CE  318C  24EB  3187   	fcall	_WriteI2C
 12524  07D1                     l5590:
 12525  07D1  0023               	movlb	3	; select bank3
 12526  07D2  0C0F               	rrf	15,w	;volatile
 12527  07D3  0C89               	rrf	9,f
 12528  07D4  3901               	andlw	1
 12529  07D5  0020               	movlb	0	; select bank0
 12530  07D6  00A3               	movwf	??_LCDsend2x4
 12531  07D7  0023               	movlb	3	; select bank3
 12532  07D8  0811               	movf	17,w	;volatile
 12533  07D9  391F               	andlw	31
 12534  07DA  0020               	movlb	0	; select bank0
 12535  07DB  0423               	iorwf	??_LCDsend2x4,w
 12536  07DC  1D03               	btfss	3,2
 12537  07DD  2FDF               	goto	u4971
 12538  07DE  2FE0               	goto	u4970
 12539  07DF                     u4971:
 12540  07DF  2FD1               	goto	l5590
 12541  07E0                     u4970:
 12542  07E0                     l224:	
 12543                           ;LCD/lcd.c: 75:   do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 12544                           
 12545  07E0  0023               	movlb	3	; select bank3
 12546  07E1  1511               	bsf	17,2	;volatile
 12547  07E2                     l225:
 12548  07E2  1911               	btfsc	17,2	;volatile
 12549  07E3  2FE5               	goto	u4981
 12550  07E4  2FE6               	goto	u4980
 12551  07E5                     u4981:
 12552  07E5  2FE2               	goto	l225
 12553  07E6                     u4980:
 12554  07E6                     l5592:
 12555                           
 12556                           ;LCD/lcd.c: 76:   _delay((unsigned long)((50)*(4000000/4000000.0)));
 12557  07E6  3010               	movlw	16
 12558  07E7                     u5877:
 12559  07E7  0B89               	decfsz	9,f
 12560  07E8  2FE7               	goto	u5877
 12561  07E9  3200               	nop2
 12562  07EA                     l229:
 12563  07EA  0008               	return
 12564  07EB                     __end_of_LCDsend2x4:
 12565                           
 12566                           	psect	text34
 12567  0C42                     __ptext34:	
 12568 ;; *************** function _LCDsend *****************
 12569 ;; Defined at:
 12570 ;;		line 17 in file "LCD/lcd.c"
 12571 ;; Parameters:    Size  Location     Type
 12572 ;;  c               1    wreg     unsigned char 
 12573 ;; Auto vars:     Size  Location     Type
 12574 ;;  c               1    3[BANK0 ] unsigned char 
 12575 ;; Return value:  Size  Location     Type
 12576 ;;                  1    wreg      void 
 12577 ;; Registers used:
 12578 ;;		wreg, status,2, status,0, pclath, cstack
 12579 ;; Tracked objects:
 12580 ;;		On entry : 0/0
 12581 ;;		On exit  : 0/0
 12582 ;;		Unchanged: 0/0
 12583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12585 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12586 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12587 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12588 ;;Total ram usage:        2 bytes
 12589 ;; Hardware stack levels used: 1
 12590 ;; Hardware stack levels required when called: 6
 12591 ;; This function calls:
 12592 ;;		_WriteI2C
 12593 ;; This function is called by:
 12594 ;;		_LCDinit
 12595 ;; This function uses a non-reentrant model
 12596 ;;
 12597                           
 12598                           
 12599                           ;psect for function _LCDsend
 12600  0C42                     _LCDsend:
 12601                           
 12602                           ;incstack = 0
 12603                           ; Regs used in _LCDsend: [wreg+status,2+status,0+pclath+cstack]
 12604                           ;LCDsend@c stored from wreg
 12605  0C42  0020               	movlb	0	; select bank0
 12606  0C43  00A3               	movwf	LCDsend@c
 12607  0C44                     l5688:
 12608  0C44                     l5690:	
 12609                           ;LCD/lcd.c: 17: void LCDsend(unsigned char c);LCD/lcd.c: 18: {;LCD/lcd.c: 19:   while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12610                           
 12611  0C44  0023               	movlb	3	; select bank3
 12612  0C45  0C0F               	rrf	15,w	;volatile
 12613  0C46  0C89               	rrf	9,f
 12614  0C47  3901               	andlw	1
 12615  0C48  0020               	movlb	0	; select bank0
 12616  0C49  00A2               	movwf	??_LCDsend
 12617  0C4A  0023               	movlb	3	; select bank3
 12618  0C4B  0811               	movf	17,w	;volatile
 12619  0C4C  391F               	andlw	31
 12620  0C4D  0020               	movlb	0	; select bank0
 12621  0C4E  0422               	iorwf	??_LCDsend,w
 12622  0C4F  1D03               	btfss	3,2
 12623  0C50  2C52               	goto	u5101
 12624  0C51  2C53               	goto	u5100
 12625  0C52                     u5101:
 12626  0C52  2C44               	goto	l5690
 12627  0C53                     u5100:
 12628  0C53                     l73:	
 12629                           ;LCD/lcd.c: 20:   do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12630                           
 12631  0C53  0023               	movlb	3	; select bank3
 12632  0C54  1411               	bsf	17,0	;volatile
 12633  0C55                     l74:
 12634  0C55  1811               	btfsc	17,0	;volatile
 12635  0C56  2C58               	goto	u5111
 12636  0C57  2C59               	goto	u5110
 12637  0C58                     u5111:
 12638  0C58  2C55               	goto	l74
 12639  0C59                     u5110:
 12640  0C59                     l5692:
 12641  0C59  0023               	movlb	3	; select bank3
 12642  0C5A  0C0F               	rrf	15,w	;volatile
 12643  0C5B  0C89               	rrf	9,f
 12644  0C5C  3901               	andlw	1
 12645  0C5D  0020               	movlb	0	; select bank0
 12646  0C5E  00A2               	movwf	??_LCDsend
 12647  0C5F  0023               	movlb	3	; select bank3
 12648  0C60  0811               	movf	17,w	;volatile
 12649  0C61  391F               	andlw	31
 12650  0C62  0020               	movlb	0	; select bank0
 12651  0C63  0422               	iorwf	??_LCDsend,w
 12652  0C64  1D03               	btfss	3,2
 12653  0C65  2C67               	goto	u5121
 12654  0C66  2C68               	goto	u5120
 12655  0C67                     u5121:
 12656  0C67  2C59               	goto	l5692
 12657  0C68                     u5120:
 12658  0C68                     l5694:
 12659                           
 12660                           ;LCD/lcd.c: 21:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12661  0C68  304E               	movlw	78
 12662  0C69  318C  24EB  318C   	fcall	_WriteI2C
 12663  0C6C                     l5696:
 12664  0C6C  0023               	movlb	3	; select bank3
 12665  0C6D  0C0F               	rrf	15,w	;volatile
 12666  0C6E  0C89               	rrf	9,f
 12667  0C6F  3901               	andlw	1
 12668  0C70  0020               	movlb	0	; select bank0
 12669  0C71  00A2               	movwf	??_LCDsend
 12670  0C72  0023               	movlb	3	; select bank3
 12671  0C73  0811               	movf	17,w	;volatile
 12672  0C74  391F               	andlw	31
 12673  0C75  0020               	movlb	0	; select bank0
 12674  0C76  0422               	iorwf	??_LCDsend,w
 12675  0C77  1D03               	btfss	3,2
 12676  0C78  2C7A               	goto	u5131
 12677  0C79  2C7B               	goto	u5130
 12678  0C7A                     u5131:
 12679  0C7A  2C6C               	goto	l5696
 12680  0C7B                     u5130:
 12681  0C7B                     l5698:
 12682                           
 12683                           ;LCD/lcd.c: 22:   WriteI2C(c); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12684  0C7B  0823               	movf	LCDsend@c,w
 12685  0C7C  318C  24EB  318C   	fcall	_WriteI2C
 12686  0C7F                     l5700:
 12687  0C7F  0023               	movlb	3	; select bank3
 12688  0C80  0C0F               	rrf	15,w	;volatile
 12689  0C81  0C89               	rrf	9,f
 12690  0C82  3901               	andlw	1
 12691  0C83  0020               	movlb	0	; select bank0
 12692  0C84  00A2               	movwf	??_LCDsend
 12693  0C85  0023               	movlb	3	; select bank3
 12694  0C86  0811               	movf	17,w	;volatile
 12695  0C87  391F               	andlw	31
 12696  0C88  0020               	movlb	0	; select bank0
 12697  0C89  0422               	iorwf	??_LCDsend,w
 12698  0C8A  1D03               	btfss	3,2
 12699  0C8B  2C8D               	goto	u5141
 12700  0C8C  2C8E               	goto	u5140
 12701  0C8D                     u5141:
 12702  0C8D  2C7F               	goto	l5700
 12703  0C8E                     u5140:
 12704  0C8E                     l87:	
 12705                           ;LCD/lcd.c: 23:   do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 12706                           
 12707  0C8E  0023               	movlb	3	; select bank3
 12708  0C8F  1511               	bsf	17,2	;volatile
 12709  0C90                     l88:
 12710  0C90  1911               	btfsc	17,2	;volatile
 12711  0C91  2C93               	goto	u5151
 12712  0C92  2C94               	goto	u5150
 12713  0C93                     u5151:
 12714  0C93  2C90               	goto	l88
 12715  0C94                     u5150:
 12716  0C94                     l92:
 12717  0C94  0008               	return
 12718  0C95                     __end_of_LCDsend:
 12719                           
 12720                           	psect	text35
 12721  09B2                     __ptext35:	
 12722 ;; *************** function _LCDbusy *****************
 12723 ;; Defined at:
 12724 ;;		line 119 in file "LCD/lcd.c"
 12725 ;; Parameters:    Size  Location     Type
 12726 ;;		None
 12727 ;; Auto vars:     Size  Location     Type
 12728 ;;		None
 12729 ;; Return value:  Size  Location     Type
 12730 ;;                  2    7[BANK0 ] int 
 12731 ;; Registers used:
 12732 ;;		wreg, status,2, status,0, pclath, cstack
 12733 ;; Tracked objects:
 12734 ;;		On entry : 0/0
 12735 ;;		On exit  : 0/0
 12736 ;;		Unchanged: 0/0
 12737 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12738 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12741 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12742 ;;Total ram usage:        2 bytes
 12743 ;; Hardware stack levels used: 1
 12744 ;; Hardware stack levels required when called: 7
 12745 ;; This function calls:
 12746 ;;		_LCDrecv
 12747 ;; This function is called by:
 12748 ;;		_main
 12749 ;; This function uses a non-reentrant model
 12750 ;;
 12751                           
 12752                           
 12753                           ;psect for function _LCDbusy
 12754  09B2                     _LCDbusy:
 12755  09B2                     l5842:	
 12756                           ;incstack = 0
 12757                           ; Regs used in _LCDbusy: [wreg+status,2+status,0+pclath+cstack]
 12758                           
 12759                           
 12760                           ;LCD/lcd.c: 121:   if(LCDrecv(0) & 0x80) return 1;
 12761  09B2  3000               	movlw	0
 12762  09B3  3181  21D0  3189   	fcall	_LCDrecv
 12763  09B6  3980               	andlw	128
 12764  09B7  1903               	btfsc	3,2
 12765  09B8  29BA               	goto	u5451
 12766  09B9  29BB               	goto	u5450
 12767  09BA                     u5451:
 12768  09BA  29C1               	goto	l5848
 12769  09BB                     u5450:
 12770  09BB                     l5844:
 12771  09BB  3001               	movlw	1
 12772  09BC  0020               	movlb	0	; select bank0
 12773  09BD  00A7               	movwf	?_LCDbusy
 12774  09BE  3000               	movlw	0
 12775  09BF  00A8               	movwf	?_LCDbusy+1
 12776  09C0  29C4               	goto	l248
 12777  09C1                     l5848:
 12778                           
 12779                           ;LCD/lcd.c: 122:   return 0;
 12780  09C1  0020               	movlb	0	; select bank0
 12781  09C2  01A7               	clrf	?_LCDbusy
 12782  09C3  01A8               	clrf	?_LCDbusy+1
 12783  09C4                     l248:
 12784  09C4  0008               	return
 12785  09C5                     __end_of_LCDbusy:
 12786                           
 12787                           	psect	text36
 12788  01D0                     __ptext36:	
 12789 ;; *************** function _LCDrecv *****************
 12790 ;; Defined at:
 12791 ;;		line 25 in file "LCD/lcd.c"
 12792 ;; Parameters:    Size  Location     Type
 12793 ;;  mode            1    wreg     unsigned char 
 12794 ;; Auto vars:     Size  Location     Type
 12795 ;;  mode            1    6[BANK0 ] unsigned char 
 12796 ;;  lc              1    5[BANK0 ] unsigned char 
 12797 ;;  hc              1    4[BANK0 ] unsigned char 
 12798 ;; Return value:  Size  Location     Type
 12799 ;;                  1    wreg      unsigned char 
 12800 ;; Registers used:
 12801 ;;		wreg, status,2, status,0, pclath, cstack
 12802 ;; Tracked objects:
 12803 ;;		On entry : 0/0
 12804 ;;		On exit  : 0/0
 12805 ;;		Unchanged: 0/0
 12806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12808 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12809 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12810 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12811 ;;Total ram usage:        5 bytes
 12812 ;; Hardware stack levels used: 1
 12813 ;; Hardware stack levels required when called: 6
 12814 ;; This function calls:
 12815 ;;		_ReadI2C
 12816 ;;		_WriteI2C
 12817 ;; This function is called by:
 12818 ;;		_LCDbusy
 12819 ;; This function uses a non-reentrant model
 12820 ;;
 12821                           
 12822                           
 12823                           ;psect for function _LCDrecv
 12824  01D0                     _LCDrecv:
 12825                           
 12826                           ;incstack = 0
 12827                           ; Regs used in _LCDrecv: [wreg+status,2+status,0+pclath+cstack]
 12828                           ;LCDrecv@mode stored from wreg
 12829  01D0  0020               	movlb	0	; select bank0
 12830  01D1  00A6               	movwf	LCDrecv@mode
 12831  01D2                     l5702:
 12832  01D2                     l5704:	
 12833                           ;LCD/lcd.c: 25: unsigned char LCDrecv(unsigned char mode);LCD/lcd.c: 26: {;LCD/lcd.c: 27
      +                          :   unsigned char hc;;LCD/lcd.c: 28:   unsigned char lc;;LCD/lcd.c: 30:   while ((SSP1CO
      +                          N2 & 0x1F) | (SSP1STATbits.R_W));
 12834                           
 12835  01D2  0023               	movlb	3	; select bank3
 12836  01D3  0C0F               	rrf	15,w	;volatile
 12837  01D4  0C89               	rrf	9,f
 12838  01D5  3901               	andlw	1
 12839  01D6  0020               	movlb	0	; select bank0
 12840  01D7  00A2               	movwf	??_LCDrecv
 12841  01D8  0023               	movlb	3	; select bank3
 12842  01D9  0811               	movf	17,w	;volatile
 12843  01DA  391F               	andlw	31
 12844  01DB  0020               	movlb	0	; select bank0
 12845  01DC  0422               	iorwf	??_LCDrecv,w
 12846  01DD  1D03               	btfss	3,2
 12847  01DE  29E0               	goto	u5161
 12848  01DF  29E1               	goto	u5160
 12849  01E0                     u5161:
 12850  01E0  29D2               	goto	l5704
 12851  01E1                     u5160:
 12852  01E1                     l98:	
 12853                           ;LCD/lcd.c: 31:   do { SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN); } while (0); while ((
      +                          SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12854                           
 12855  01E1  0023               	movlb	3	; select bank3
 12856  01E2  1411               	bsf	17,0	;volatile
 12857  01E3                     l99:
 12858  01E3  1811               	btfsc	17,0	;volatile
 12859  01E4  29E6               	goto	u5171
 12860  01E5  29E7               	goto	u5170
 12861  01E6                     u5171:
 12862  01E6  29E3               	goto	l99
 12863  01E7                     u5170:
 12864  01E7                     l5706:
 12865  01E7  0023               	movlb	3	; select bank3
 12866  01E8  0C0F               	rrf	15,w	;volatile
 12867  01E9  0C89               	rrf	9,f
 12868  01EA  3901               	andlw	1
 12869  01EB  0020               	movlb	0	; select bank0
 12870  01EC  00A2               	movwf	??_LCDrecv
 12871  01ED  0023               	movlb	3	; select bank3
 12872  01EE  0811               	movf	17,w	;volatile
 12873  01EF  391F               	andlw	31
 12874  01F0  0020               	movlb	0	; select bank0
 12875  01F1  0422               	iorwf	??_LCDrecv,w
 12876  01F2  1D03               	btfss	3,2
 12877  01F3  29F5               	goto	u5181
 12878  01F4  29F6               	goto	u5180
 12879  01F5                     u5181:
 12880  01F5  29E7               	goto	l5706
 12881  01F6                     u5180:
 12882  01F6                     l5708:
 12883                           
 12884                           ;LCD/lcd.c: 32:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12885  01F6  304E               	movlw	78
 12886  01F7  318C  24EB  3181   	fcall	_WriteI2C
 12887  01FA                     l5710:
 12888  01FA  0023               	movlb	3	; select bank3
 12889  01FB  0C0F               	rrf	15,w	;volatile
 12890  01FC  0C89               	rrf	9,f
 12891  01FD  3901               	andlw	1
 12892  01FE  0020               	movlb	0	; select bank0
 12893  01FF  00A2               	movwf	??_LCDrecv
 12894  0200  0023               	movlb	3	; select bank3
 12895  0201  0811               	movf	17,w	;volatile
 12896  0202  391F               	andlw	31
 12897  0203  0020               	movlb	0	; select bank0
 12898  0204  0422               	iorwf	??_LCDrecv,w
 12899  0205  1D03               	btfss	3,2
 12900  0206  2A08               	goto	u5191
 12901  0207  2A09               	goto	u5190
 12902  0208                     u5191:
 12903  0208  29FA               	goto	l5710
 12904  0209                     u5190:
 12905  0209                     l5712:
 12906                           
 12907                           ;LCD/lcd.c: 33:   WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1S
      +                          TATbits.R_W));
 12908  0209  0826               	movf	LCDrecv@mode,w
 12909  020A  38FA               	iorlw	250
 12910  020B  318C  24EB  3181   	fcall	_WriteI2C
 12911  020E                     l5714:
 12912  020E  0023               	movlb	3	; select bank3
 12913  020F  0C0F               	rrf	15,w	;volatile
 12914  0210  0C89               	rrf	9,f
 12915  0211  3901               	andlw	1
 12916  0212  0020               	movlb	0	; select bank0
 12917  0213  00A2               	movwf	??_LCDrecv
 12918  0214  0023               	movlb	3	; select bank3
 12919  0215  0811               	movf	17,w	;volatile
 12920  0216  391F               	andlw	31
 12921  0217  0020               	movlb	0	; select bank0
 12922  0218  0422               	iorwf	??_LCDrecv,w
 12923  0219  1D03               	btfss	3,2
 12924  021A  2A1C               	goto	u5201
 12925  021B  2A1D               	goto	u5200
 12926  021C                     u5201:
 12927  021C  2A0E               	goto	l5714
 12928  021D                     u5200:
 12929  021D                     l5716:
 12930                           
 12931                           ;LCD/lcd.c: 34:   WriteI2C(0xf0 | 0x08 | 0x04 | 0x02 | mode); while ((SSP1CON2 & 0x1F) |
      +                           (SSP1STATbits.R_W));
 12932  021D  0826               	movf	LCDrecv@mode,w
 12933  021E  38FE               	iorlw	254
 12934  021F  318C  24EB  3181   	fcall	_WriteI2C
 12935  0222                     l5718:
 12936  0222  0023               	movlb	3	; select bank3
 12937  0223  0C0F               	rrf	15,w	;volatile
 12938  0224  0C89               	rrf	9,f
 12939  0225  3901               	andlw	1
 12940  0226  0020               	movlb	0	; select bank0
 12941  0227  00A2               	movwf	??_LCDrecv
 12942  0228  0023               	movlb	3	; select bank3
 12943  0229  0811               	movf	17,w	;volatile
 12944  022A  391F               	andlw	31
 12945  022B  0020               	movlb	0	; select bank0
 12946  022C  0422               	iorwf	??_LCDrecv,w
 12947  022D  1D03               	btfss	3,2
 12948  022E  2A30               	goto	u5211
 12949  022F  2A31               	goto	u5210
 12950  0230                     u5211:
 12951  0230  2A22               	goto	l5718
 12952  0231                     u5210:
 12953  0231                     l114:
 12954                           
 12955                           ;LCD/lcd.c: 35:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 12956  0231  0000               	nop
 12957  0232                     l115:	
 12958                           ;LCD/lcd.c: 36:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12959                           
 12960  0232  0023               	movlb	3	; select bank3
 12961  0233  1491               	bsf	17,1	;volatile
 12962  0234                     l116:
 12963  0234  1891               	btfsc	17,1	;volatile
 12964  0235  2A37               	goto	u5221
 12965  0236  2A38               	goto	u5220
 12966  0237                     u5221:
 12967  0237  2A34               	goto	l116
 12968  0238                     u5220:
 12969  0238                     l5720:
 12970  0238  0023               	movlb	3	; select bank3
 12971  0239  0C0F               	rrf	15,w	;volatile
 12972  023A  0C89               	rrf	9,f
 12973  023B  3901               	andlw	1
 12974  023C  0020               	movlb	0	; select bank0
 12975  023D  00A2               	movwf	??_LCDrecv
 12976  023E  0023               	movlb	3	; select bank3
 12977  023F  0811               	movf	17,w	;volatile
 12978  0240  391F               	andlw	31
 12979  0241  0020               	movlb	0	; select bank0
 12980  0242  0422               	iorwf	??_LCDrecv,w
 12981  0243  1D03               	btfss	3,2
 12982  0244  2A46               	goto	u5231
 12983  0245  2A47               	goto	u5230
 12984  0246                     u5231:
 12985  0246  2A38               	goto	l5720
 12986  0247                     u5230:
 12987  0247                     l5722:
 12988                           
 12989                           ;LCD/lcd.c: 37:   WriteI2C(0x4e | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 12990  0247  304F               	movlw	79
 12991  0248  318C  24EB  3181   	fcall	_WriteI2C
 12992  024B                     l5724:
 12993  024B  0023               	movlb	3	; select bank3
 12994  024C  0C0F               	rrf	15,w	;volatile
 12995  024D  0C89               	rrf	9,f
 12996  024E  3901               	andlw	1
 12997  024F  0020               	movlb	0	; select bank0
 12998  0250  00A2               	movwf	??_LCDrecv
 12999  0251  0023               	movlb	3	; select bank3
 13000  0252  0811               	movf	17,w	;volatile
 13001  0253  391F               	andlw	31
 13002  0254  0020               	movlb	0	; select bank0
 13003  0255  0422               	iorwf	??_LCDrecv,w
 13004  0256  1D03               	btfss	3,2
 13005  0257  2A59               	goto	u5241
 13006  0258  2A5A               	goto	u5240
 13007  0259                     u5241:
 13008  0259  2A4B               	goto	l5724
 13009  025A                     u5240:
 13010  025A                     l5726:
 13011                           
 13012                           ;LCD/lcd.c: 38:   hc = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13013  025A  318A  2263  3181   	fcall	_ReadI2C
 13014  025D  0020               	movlb	0	; select bank0
 13015  025E  00A2               	movwf	??_LCDrecv
 13016  025F  0822               	movf	??_LCDrecv,w
 13017  0260  00A4               	movwf	LCDrecv@hc
 13018  0261                     l5728:
 13019  0261  0023               	movlb	3	; select bank3
 13020  0262  0C0F               	rrf	15,w	;volatile
 13021  0263  0C89               	rrf	9,f
 13022  0264  3901               	andlw	1
 13023  0265  0020               	movlb	0	; select bank0
 13024  0266  00A2               	movwf	??_LCDrecv
 13025  0267  0023               	movlb	3	; select bank3
 13026  0268  0811               	movf	17,w	;volatile
 13027  0269  391F               	andlw	31
 13028  026A  0020               	movlb	0	; select bank0
 13029  026B  0422               	iorwf	??_LCDrecv,w
 13030  026C  1D03               	btfss	3,2
 13031  026D  2A6F               	goto	u5251
 13032  026E  2A70               	goto	u5250
 13033  026F                     u5251:
 13034  026F  2A61               	goto	l5728
 13035  0270                     u5250:
 13036  0270                     l129:	
 13037                           ;LCD/lcd.c: 39:   do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKE
      +                          N); } while (0);
 13038                           
 13039  0270  0023               	movlb	3	; select bank3
 13040  0271  1691               	bsf	17,5	;volatile
 13041  0272  1611               	bsf	17,4	;volatile
 13042  0273                     l130:
 13043  0273  1A11               	btfsc	17,4	;volatile
 13044  0274  2A76               	goto	u5261
 13045  0275  2A77               	goto	u5260
 13046  0276                     u5261:
 13047  0276  2A73               	goto	l130
 13048  0277                     u5260:
 13049  0277                     l134:	
 13050                           ;LCD/lcd.c: 40:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13051                           
 13052  0277  1491               	bsf	17,1	;volatile
 13053  0278                     l135:
 13054  0278  1891               	btfsc	17,1	;volatile
 13055  0279  2A7B               	goto	u5271
 13056  027A  2A7C               	goto	u5270
 13057  027B                     u5271:
 13058  027B  2A78               	goto	l135
 13059  027C                     u5270:
 13060  027C                     l5730:
 13061  027C  0023               	movlb	3	; select bank3
 13062  027D  0C0F               	rrf	15,w	;volatile
 13063  027E  0C89               	rrf	9,f
 13064  027F  3901               	andlw	1
 13065  0280  0020               	movlb	0	; select bank0
 13066  0281  00A2               	movwf	??_LCDrecv
 13067  0282  0023               	movlb	3	; select bank3
 13068  0283  0811               	movf	17,w	;volatile
 13069  0284  391F               	andlw	31
 13070  0285  0020               	movlb	0	; select bank0
 13071  0286  0422               	iorwf	??_LCDrecv,w
 13072  0287  1D03               	btfss	3,2
 13073  0288  2A8A               	goto	u5281
 13074  0289  2A8B               	goto	u5280
 13075  028A                     u5281:
 13076  028A  2A7C               	goto	l5730
 13077  028B                     u5280:
 13078  028B                     l5732:
 13079                           
 13080                           ;LCD/lcd.c: 41:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13081  028B  304E               	movlw	78
 13082  028C  318C  24EB  3181   	fcall	_WriteI2C
 13083  028F                     l5734:
 13084  028F  0023               	movlb	3	; select bank3
 13085  0290  0C0F               	rrf	15,w	;volatile
 13086  0291  0C89               	rrf	9,f
 13087  0292  3901               	andlw	1
 13088  0293  0020               	movlb	0	; select bank0
 13089  0294  00A2               	movwf	??_LCDrecv
 13090  0295  0023               	movlb	3	; select bank3
 13091  0296  0811               	movf	17,w	;volatile
 13092  0297  391F               	andlw	31
 13093  0298  0020               	movlb	0	; select bank0
 13094  0299  0422               	iorwf	??_LCDrecv,w
 13095  029A  1D03               	btfss	3,2
 13096  029B  2A9D               	goto	u5291
 13097  029C  2A9E               	goto	u5290
 13098  029D                     u5291:
 13099  029D  2A8F               	goto	l5734
 13100  029E                     u5290:
 13101  029E                     l5736:
 13102                           
 13103                           ;LCD/lcd.c: 42:   WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1S
      +                          TATbits.R_W));
 13104  029E  0826               	movf	LCDrecv@mode,w
 13105  029F  38FA               	iorlw	250
 13106  02A0  318C  24EB  3181   	fcall	_WriteI2C
 13107  02A3                     l5738:
 13108  02A3  0023               	movlb	3	; select bank3
 13109  02A4  0C0F               	rrf	15,w	;volatile
 13110  02A5  0C89               	rrf	9,f
 13111  02A6  3901               	andlw	1
 13112  02A7  0020               	movlb	0	; select bank0
 13113  02A8  00A2               	movwf	??_LCDrecv
 13114  02A9  0023               	movlb	3	; select bank3
 13115  02AA  0811               	movf	17,w	;volatile
 13116  02AB  391F               	andlw	31
 13117  02AC  0020               	movlb	0	; select bank0
 13118  02AD  0422               	iorwf	??_LCDrecv,w
 13119  02AE  1D03               	btfss	3,2
 13120  02AF  2AB1               	goto	u5301
 13121  02B0  2AB2               	goto	u5300
 13122  02B1                     u5301:
 13123  02B1  2AA3               	goto	l5738
 13124  02B2                     u5300:
 13125  02B2                     l5740:
 13126                           
 13127                           ;LCD/lcd.c: 43:   WriteI2C(0xf0 | 0x08 | 0x04 | 0x02 | mode); while ((SSP1CON2 & 0x1F) |
      +                           (SSP1STATbits.R_W));
 13128  02B2  0826               	movf	LCDrecv@mode,w
 13129  02B3  38FE               	iorlw	254
 13130  02B4  318C  24EB  3181   	fcall	_WriteI2C
 13131  02B7                     l5742:
 13132  02B7  0023               	movlb	3	; select bank3
 13133  02B8  0C0F               	rrf	15,w	;volatile
 13134  02B9  0C89               	rrf	9,f
 13135  02BA  3901               	andlw	1
 13136  02BB  0020               	movlb	0	; select bank0
 13137  02BC  00A2               	movwf	??_LCDrecv
 13138  02BD  0023               	movlb	3	; select bank3
 13139  02BE  0811               	movf	17,w	;volatile
 13140  02BF  391F               	andlw	31
 13141  02C0  0020               	movlb	0	; select bank0
 13142  02C1  0422               	iorwf	??_LCDrecv,w
 13143  02C2  1D03               	btfss	3,2
 13144  02C3  2AC5               	goto	u5311
 13145  02C4  2AC6               	goto	u5310
 13146  02C5                     u5311:
 13147  02C5  2AB7               	goto	l5742
 13148  02C6                     u5310:
 13149  02C6                     l150:
 13150                           
 13151                           ;LCD/lcd.c: 44:   _delay((unsigned long)((1)*(4000000/4000000.0)));
 13152  02C6  0000               	nop
 13153  02C7                     l151:	
 13154                           ;LCD/lcd.c: 45:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13155                           
 13156  02C7  0023               	movlb	3	; select bank3
 13157  02C8  1491               	bsf	17,1	;volatile
 13158  02C9                     l152:
 13159  02C9  1891               	btfsc	17,1	;volatile
 13160  02CA  2ACC               	goto	u5321
 13161  02CB  2ACD               	goto	u5320
 13162  02CC                     u5321:
 13163  02CC  2AC9               	goto	l152
 13164  02CD                     u5320:
 13165  02CD                     l5744:
 13166  02CD  0023               	movlb	3	; select bank3
 13167  02CE  0C0F               	rrf	15,w	;volatile
 13168  02CF  0C89               	rrf	9,f
 13169  02D0  3901               	andlw	1
 13170  02D1  0020               	movlb	0	; select bank0
 13171  02D2  00A2               	movwf	??_LCDrecv
 13172  02D3  0023               	movlb	3	; select bank3
 13173  02D4  0811               	movf	17,w	;volatile
 13174  02D5  391F               	andlw	31
 13175  02D6  0020               	movlb	0	; select bank0
 13176  02D7  0422               	iorwf	??_LCDrecv,w
 13177  02D8  1D03               	btfss	3,2
 13178  02D9  2ADB               	goto	u5331
 13179  02DA  2ADC               	goto	u5330
 13180  02DB                     u5331:
 13181  02DB  2ACD               	goto	l5744
 13182  02DC                     u5330:
 13183  02DC                     l5746:
 13184                           
 13185                           ;LCD/lcd.c: 46:   WriteI2C(0x4e | 0x01); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13186  02DC  304F               	movlw	79
 13187  02DD  318C  24EB  3181   	fcall	_WriteI2C
 13188  02E0                     l5748:
 13189  02E0  0023               	movlb	3	; select bank3
 13190  02E1  0C0F               	rrf	15,w	;volatile
 13191  02E2  0C89               	rrf	9,f
 13192  02E3  3901               	andlw	1
 13193  02E4  0020               	movlb	0	; select bank0
 13194  02E5  00A2               	movwf	??_LCDrecv
 13195  02E6  0023               	movlb	3	; select bank3
 13196  02E7  0811               	movf	17,w	;volatile
 13197  02E8  391F               	andlw	31
 13198  02E9  0020               	movlb	0	; select bank0
 13199  02EA  0422               	iorwf	??_LCDrecv,w
 13200  02EB  1D03               	btfss	3,2
 13201  02EC  2AEE               	goto	u5341
 13202  02ED  2AEF               	goto	u5340
 13203  02EE                     u5341:
 13204  02EE  2AE0               	goto	l5748
 13205  02EF                     u5340:
 13206  02EF                     l5750:
 13207                           
 13208                           ;LCD/lcd.c: 47:   lc = ReadI2C(); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13209  02EF  318A  2263  3181   	fcall	_ReadI2C
 13210  02F2  0020               	movlb	0	; select bank0
 13211  02F3  00A2               	movwf	??_LCDrecv
 13212  02F4  0822               	movf	??_LCDrecv,w
 13213  02F5  00A5               	movwf	LCDrecv@lc
 13214  02F6                     l5752:
 13215  02F6  0023               	movlb	3	; select bank3
 13216  02F7  0C0F               	rrf	15,w	;volatile
 13217  02F8  0C89               	rrf	9,f
 13218  02F9  3901               	andlw	1
 13219  02FA  0020               	movlb	0	; select bank0
 13220  02FB  00A2               	movwf	??_LCDrecv
 13221  02FC  0023               	movlb	3	; select bank3
 13222  02FD  0811               	movf	17,w	;volatile
 13223  02FE  391F               	andlw	31
 13224  02FF  0020               	movlb	0	; select bank0
 13225  0300  0422               	iorwf	??_LCDrecv,w
 13226  0301  1D03               	btfss	3,2
 13227  0302  2B04               	goto	u5351
 13228  0303  2B05               	goto	u5350
 13229  0304                     u5351:
 13230  0304  2AF6               	goto	l5752
 13231  0305                     u5350:
 13232  0305                     l165:	
 13233                           ;LCD/lcd.c: 48:   do { SSP1CON2bits.ACKDT=1;SSP1CON2bits.ACKEN=1;while(SSP1CON2bits.ACKE
      +                          N); } while (0);
 13234                           
 13235  0305  0023               	movlb	3	; select bank3
 13236  0306  1691               	bsf	17,5	;volatile
 13237  0307  1611               	bsf	17,4	;volatile
 13238  0308                     l166:
 13239  0308  1A11               	btfsc	17,4	;volatile
 13240  0309  2B0B               	goto	u5361
 13241  030A  2B0C               	goto	u5360
 13242  030B                     u5361:
 13243  030B  2B08               	goto	l166
 13244  030C                     u5360:
 13245  030C                     l170:	
 13246                           ;LCD/lcd.c: 49:   do { SSP1CON2bits.RSEN=1;while(SSP1CON2bits.RSEN); } while (0); while 
      +                          ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13247                           
 13248  030C  1491               	bsf	17,1	;volatile
 13249  030D                     l171:
 13250  030D  1891               	btfsc	17,1	;volatile
 13251  030E  2B10               	goto	u5371
 13252  030F  2B11               	goto	u5370
 13253  0310                     u5371:
 13254  0310  2B0D               	goto	l171
 13255  0311                     u5370:
 13256  0311                     l5754:
 13257  0311  0023               	movlb	3	; select bank3
 13258  0312  0C0F               	rrf	15,w	;volatile
 13259  0313  0C89               	rrf	9,f
 13260  0314  3901               	andlw	1
 13261  0315  0020               	movlb	0	; select bank0
 13262  0316  00A2               	movwf	??_LCDrecv
 13263  0317  0023               	movlb	3	; select bank3
 13264  0318  0811               	movf	17,w	;volatile
 13265  0319  391F               	andlw	31
 13266  031A  0020               	movlb	0	; select bank0
 13267  031B  0422               	iorwf	??_LCDrecv,w
 13268  031C  1D03               	btfss	3,2
 13269  031D  2B1F               	goto	u5381
 13270  031E  2B20               	goto	u5380
 13271  031F                     u5381:
 13272  031F  2B11               	goto	l5754
 13273  0320                     u5380:
 13274  0320                     l5756:
 13275                           
 13276                           ;LCD/lcd.c: 50:   WriteI2C(0x4e | 0x00); while ((SSP1CON2 & 0x1F) | (SSP1STATbits.R_W));
 13277  0320  304E               	movlw	78
 13278  0321  318C  24EB  3181   	fcall	_WriteI2C
 13279  0324                     l5758:
 13280  0324  0023               	movlb	3	; select bank3
 13281  0325  0C0F               	rrf	15,w	;volatile
 13282  0326  0C89               	rrf	9,f
 13283  0327  3901               	andlw	1
 13284  0328  0020               	movlb	0	; select bank0
 13285  0329  00A2               	movwf	??_LCDrecv
 13286  032A  0023               	movlb	3	; select bank3
 13287  032B  0811               	movf	17,w	;volatile
 13288  032C  391F               	andlw	31
 13289  032D  0020               	movlb	0	; select bank0
 13290  032E  0422               	iorwf	??_LCDrecv,w
 13291  032F  1D03               	btfss	3,2
 13292  0330  2B32               	goto	u5391
 13293  0331  2B33               	goto	u5390
 13294  0332                     u5391:
 13295  0332  2B24               	goto	l5758
 13296  0333                     u5390:
 13297  0333                     l5760:
 13298                           
 13299                           ;LCD/lcd.c: 51:   WriteI2C(0xf0 | 0x08 | 0x02 | mode); while ((SSP1CON2 & 0x1F) | (SSP1S
      +                          TATbits.R_W));
 13300  0333  0826               	movf	LCDrecv@mode,w
 13301  0334  38FA               	iorlw	250
 13302  0335  318C  24EB  3181   	fcall	_WriteI2C
 13303  0338                     l5762:
 13304  0338  0023               	movlb	3	; select bank3
 13305  0339  0C0F               	rrf	15,w	;volatile
 13306  033A  0C89               	rrf	9,f
 13307  033B  3901               	andlw	1
 13308  033C  0020               	movlb	0	; select bank0
 13309  033D  00A2               	movwf	??_LCDrecv
 13310  033E  0023               	movlb	3	; select bank3
 13311  033F  0811               	movf	17,w	;volatile
 13312  0340  391F               	andlw	31
 13313  0341  0020               	movlb	0	; select bank0
 13314  0342  0422               	iorwf	??_LCDrecv,w
 13315  0343  1D03               	btfss	3,2
 13316  0344  2B46               	goto	u5401
 13317  0345  2B47               	goto	u5400
 13318  0346                     u5401:
 13319  0346  2B38               	goto	l5762
 13320  0347                     u5400:
 13321  0347                     l184:	
 13322                           ;LCD/lcd.c: 52:   do { SSP1CON2bits.PEN = 1;while(SSP1CON2bits.PEN); } while (0);
 13323                           
 13324  0347  0023               	movlb	3	; select bank3
 13325  0348  1511               	bsf	17,2	;volatile
 13326  0349                     l185:
 13327  0349  1911               	btfsc	17,2	;volatile
 13328  034A  2B4C               	goto	u5411
 13329  034B  2B4D               	goto	u5410
 13330  034C                     u5411:
 13331  034C  2B49               	goto	l185
 13332  034D                     u5410:
 13333  034D                     l5764:
 13334                           
 13335                           ;LCD/lcd.c: 53:   return ((hc&0xf0) | ((lc>>4)&0x0f));
 13336  034D  0020               	movlb	0	; select bank0
 13337  034E  0825               	movf	LCDrecv@lc,w
 13338  034F  00A2               	movwf	??_LCDrecv
 13339  0350  3004               	movlw	4
 13340  0351                     u5425:
 13341  0351  36A2               	lsrf	??_LCDrecv,f
 13342  0352  0B89               	decfsz	9,f
 13343  0353  2B51               	goto	u5425
 13344  0354  300F               	movlw	15
 13345  0355  0522               	andwf	??_LCDrecv,w
 13346  0356  00A3               	movwf	??_LCDrecv+1
 13347  0357  0824               	movf	LCDrecv@hc,w
 13348  0358  39F0               	andlw	240
 13349  0359  0423               	iorwf	??_LCDrecv+1,w
 13350  035A                     l189:
 13351  035A  0008               	return
 13352  035B                     __end_of_LCDrecv:
 13353                           
 13354                           	psect	text37
 13355  0CEB                     __ptext37:	
 13356 ;; *************** function _WriteI2C *****************
 13357 ;; Defined at:
 13358 ;;		line 59 in file "I2C/i2c.c"
 13359 ;; Parameters:    Size  Location     Type
 13360 ;;  data_out        1    wreg     unsigned char 
 13361 ;; Auto vars:     Size  Location     Type
 13362 ;;  data_out        1    1[BANK0 ] unsigned char 
 13363 ;; Return value:  Size  Location     Type
 13364 ;;                  1    wreg      char 
 13365 ;; Registers used:
 13366 ;;		wreg, status,2, status,0
 13367 ;; Tracked objects:
 13368 ;;		On entry : 0/0
 13369 ;;		On exit  : 0/0
 13370 ;;		Unchanged: 0/0
 13371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13373 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13374 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13375 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13376 ;;Total ram usage:        2 bytes
 13377 ;; Hardware stack levels used: 1
 13378 ;; Hardware stack levels required when called: 5
 13379 ;; This function calls:
 13380 ;;		Nothing
 13381 ;; This function is called by:
 13382 ;;		_LCDsend
 13383 ;;		_LCDrecv
 13384 ;;		_LCDsend2x4
 13385 ;;		_readTC74
 13386 ;; This function uses a non-reentrant model
 13387 ;;
 13388                           
 13389                           
 13390                           ;psect for function _WriteI2C
 13391  0CEB                     _WriteI2C:
 13392                           
 13393                           ;incstack = 0
 13394                           ; Regs used in _WriteI2C: [wreg+status,2+status,0]
 13395                           ;WriteI2C@data_out stored from wreg
 13396  0CEB  0020               	movlb	0	; select bank0
 13397  0CEC  00A1               	movwf	WriteI2C@data_out
 13398  0CED                     l5416:
 13399                           
 13400                           ;I2C/i2c.c: 59: signed char WriteI2C( unsigned char data_out );I2C/i2c.c: 60: {;I2C/i2c.
      +                          c: 61:   SSP1BUF = data_out;
 13401  0CED  0821               	movf	WriteI2C@data_out,w
 13402  0CEE  0023               	movlb	3	; select bank3
 13403  0CEF  008C               	movwf	12	;volatile
 13404  0CF0                     l5418:
 13405                           
 13406                           ;I2C/i2c.c: 62:   if ( SSP1CON1bits.WCOL )
 13407  0CF0  1F90               	btfss	16,7	;volatile
 13408  0CF1  2CF3               	goto	u4521
 13409  0CF2  2CF4               	goto	u4520
 13410  0CF3                     u4521:
 13411  0CF3  2CF5               	goto	l5424
 13412  0CF4                     u4520:
 13413  0CF4  2D44               	goto	l36
 13414  0CF5                     l5424:
 13415                           
 13416                           ;I2C/i2c.c: 65:   {;I2C/i2c.c: 66:  if( ((SSP1CON1&0x0F)!=0x08) && ((SSP1CON1&0x0F)!=0x0
      +                          B) )
 13417  0CF5  300F               	movlw	15
 13418  0CF6  0510               	andwf	16,w	;volatile
 13419  0CF7  0020               	movlb	0	; select bank0
 13420  0CF8  00A0               	movwf	??_WriteI2C
 13421  0CF9  3008               	movlw	8
 13422  0CFA  0620               	xorwf	??_WriteI2C,w
 13423  0CFB  1903               	btfsc	3,2
 13424  0CFC  2CFE               	goto	u4531
 13425  0CFD  2CFF               	goto	u4530
 13426  0CFE                     u4531:
 13427  0CFE  2D18               	goto	l5436
 13428  0CFF                     u4530:
 13429  0CFF                     l5426:
 13430  0CFF  300F               	movlw	15
 13431  0D00  0023               	movlb	3	; select bank3
 13432  0D01  0510               	andwf	16,w	;volatile
 13433  0D02  0020               	movlb	0	; select bank0
 13434  0D03  00A0               	movwf	??_WriteI2C
 13435  0D04  300B               	movlw	11
 13436  0D05  0620               	xorwf	??_WriteI2C,w
 13437  0D06  1903               	btfsc	3,2
 13438  0D07  2D09               	goto	u4541
 13439  0D08  2D0A               	goto	u4540
 13440  0D09                     u4541:
 13441  0D09  2D18               	goto	l5436
 13442  0D0A                     u4540:
 13443  0D0A                     l5428:
 13444                           
 13445                           ;I2C/i2c.c: 67:  {;I2C/i2c.c: 68:        SSP1CON1bits.CKP = 1;
 13446  0D0A  0023               	movlb	3	; select bank3
 13447  0D0B  1610               	bsf	16,4	;volatile
 13448  0D0C                     l39:	
 13449                           ;I2C/i2c.c: 69:        while ( !PIR3bits.SSP1IF );
 13450                           
 13451  0D0C  002E               	movlb	14	; select bank14
 13452  0D0D  1C0F               	btfss	15,0	;volatile
 13453  0D0E  2D10               	goto	u4551
 13454  0D0F  2D11               	goto	u4550
 13455  0D10                     u4551:
 13456  0D10  2D0C               	goto	l39
 13457  0D11                     u4550:
 13458  0D11                     l41:
 13459                           
 13460                           ;I2C/i2c.c: 71:        if ( ( !SSP1STATbits.R_W ) && ( !SSP1STATbits.BF ) )
 13461  0D11  0023               	movlb	3	; select bank3
 13462  0D12  190F               	btfsc	15,2	;volatile
 13463  0D13  2D15               	goto	u4561
 13464  0D14  2D16               	goto	u4560
 13465  0D15                     u4561:
 13466  0D15  2D44               	goto	l36
 13467  0D16                     u4560:
 13468  0D16                     l5430:
 13469  0D16  080F               	movf	15,w	;volatile
 13470  0D17  2D44               	goto	l36
 13471  0D18                     l5436:
 13472  0D18  300F               	movlw	15
 13473  0D19  0023               	movlb	3	; select bank3
 13474  0D1A  0510               	andwf	16,w	;volatile
 13475  0D1B  0020               	movlb	0	; select bank0
 13476  0D1C  00A0               	movwf	??_WriteI2C
 13477  0D1D  3008               	movlw	8
 13478  0D1E  0620               	xorwf	??_WriteI2C,w
 13479  0D1F  1903               	btfsc	3,2
 13480  0D20  2D22               	goto	u4571
 13481  0D21  2D23               	goto	u4570
 13482  0D22                     u4571:
 13483  0D22  2D2E               	goto	l48
 13484  0D23                     u4570:
 13485  0D23                     l5438:
 13486  0D23  300F               	movlw	15
 13487  0D24  0023               	movlb	3	; select bank3
 13488  0D25  0510               	andwf	16,w	;volatile
 13489  0D26  0020               	movlb	0	; select bank0
 13490  0D27  00A0               	movwf	??_WriteI2C
 13491  0D28  300B               	movlw	11
 13492  0D29  0620               	xorwf	??_WriteI2C,w
 13493  0D2A  1D03               	btfss	3,2
 13494  0D2B  2D2D               	goto	u4581
 13495  0D2C  2D2E               	goto	u4580
 13496  0D2D                     u4581:
 13497  0D2D  2D44               	goto	l36
 13498  0D2E                     u4580:
 13499  0D2E                     l48:
 13500  0D2E  0023               	movlb	3	; select bank3
 13501  0D2F  180F               	btfsc	15,0	;volatile
 13502  0D30  2D32               	goto	u4591
 13503  0D31  2D33               	goto	u4590
 13504  0D32                     u4591:
 13505  0D32  2D2E               	goto	l48
 13506  0D33                     u4590:
 13507  0D33                     l5440:
 13508  0D33  0023               	movlb	3	; select bank3
 13509  0D34  0C0F               	rrf	15,w	;volatile
 13510  0D35  0C89               	rrf	9,f
 13511  0D36  3901               	andlw	1
 13512  0D37  0020               	movlb	0	; select bank0
 13513  0D38  00A0               	movwf	??_WriteI2C
 13514  0D39  0023               	movlb	3	; select bank3
 13515  0D3A  0811               	movf	17,w	;volatile
 13516  0D3B  391F               	andlw	31
 13517  0D3C  0020               	movlb	0	; select bank0
 13518  0D3D  0420               	iorwf	??_WriteI2C,w
 13519  0D3E  1D03               	btfss	3,2
 13520  0D3F  2D41               	goto	u4601
 13521  0D40  2D42               	goto	u4600
 13522  0D41                     u4601:
 13523  0D41  2D33               	goto	l5440
 13524  0D42                     u4600:
 13525  0D42                     l53:
 13526                           
 13527                           ;I2C/i2c.c: 84:      if ( SSP1CON2bits.ACKSTAT )
 13528  0D42  0023               	movlb	3	; select bank3
 13529  0D43  0811               	movf	17,w	;volatile
 13530  0D44                     l36:
 13531  0D44  0008               	return
 13532  0D45                     __end_of_WriteI2C:
 13533                           
 13534                           	psect	text38
 13535  0A63                     __ptext38:	
 13536 ;; *************** function _ReadI2C *****************
 13537 ;; Defined at:
 13538 ;;		line 44 in file "I2C/i2c.c"
 13539 ;; Parameters:    Size  Location     Type
 13540 ;;		None
 13541 ;; Auto vars:     Size  Location     Type
 13542 ;;		None
 13543 ;; Return value:  Size  Location     Type
 13544 ;;                  1    wreg      unsigned char 
 13545 ;; Registers used:
 13546 ;;		wreg, status,2, status,0
 13547 ;; Tracked objects:
 13548 ;;		On entry : 0/0
 13549 ;;		On exit  : 0/0
 13550 ;;		Unchanged: 0/0
 13551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13554 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13555 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13556 ;;Total ram usage:        1 bytes
 13557 ;; Hardware stack levels used: 1
 13558 ;; Hardware stack levels required when called: 5
 13559 ;; This function calls:
 13560 ;;		Nothing
 13561 ;; This function is called by:
 13562 ;;		_LCDrecv
 13563 ;;		_readTC74
 13564 ;; This function uses a non-reentrant model
 13565 ;;
 13566                           
 13567                           
 13568                           ;psect for function _ReadI2C
 13569  0A63                     _ReadI2C:
 13570  0A63                     l5548:	
 13571                           ;incstack = 0
 13572                           ; Regs used in _ReadI2C: [wreg+status,2+status,0]
 13573                           
 13574                           
 13575                           ;I2C/i2c.c: 46: if( ((SSP1CON1&0x0F)==0x08) || ((SSP1CON1&0x0F)==0x0B) )
 13576  0A63  300F               	movlw	15
 13577  0A64  0023               	movlb	3	; select bank3
 13578  0A65  0510               	andwf	16,w	;volatile
 13579  0A66  0020               	movlb	0	; select bank0
 13580  0A67  00A0               	movwf	??_ReadI2C
 13581  0A68  3008               	movlw	8
 13582  0A69  0620               	xorwf	??_ReadI2C,w
 13583  0A6A  1903               	btfsc	3,2
 13584  0A6B  2A6D               	goto	u4841
 13585  0A6C  2A6E               	goto	u4840
 13586  0A6D                     u4841:
 13587  0A6D  2A79               	goto	l28
 13588  0A6E                     u4840:
 13589  0A6E                     l5550:
 13590  0A6E  300F               	movlw	15
 13591  0A6F  0023               	movlb	3	; select bank3
 13592  0A70  0510               	andwf	16,w	;volatile
 13593  0A71  0020               	movlb	0	; select bank0
 13594  0A72  00A0               	movwf	??_ReadI2C
 13595  0A73  300B               	movlw	11
 13596  0A74  0620               	xorwf	??_ReadI2C,w
 13597  0A75  1D03               	btfss	3,2
 13598  0A76  2A78               	goto	u4851
 13599  0A77  2A79               	goto	u4850
 13600  0A78                     u4851:
 13601  0A78  2A7B               	goto	l29
 13602  0A79                     u4850:
 13603  0A79                     l28:
 13604                           
 13605                           ;I2C/i2c.c: 47:   SSP1CON2bits.RCEN = 1;
 13606  0A79  0023               	movlb	3	; select bank3
 13607  0A7A  1591               	bsf	17,3	;volatile
 13608  0A7B                     l29:
 13609  0A7B  0023               	movlb	3	; select bank3
 13610  0A7C  1C0F               	btfss	15,0	;volatile
 13611  0A7D  2A7F               	goto	u4861
 13612  0A7E  2A80               	goto	u4860
 13613  0A7F                     u4861:
 13614  0A7F  2A7B               	goto	l29
 13615  0A80                     u4860:
 13616  0A80                     l5552:
 13617                           
 13618                           ;I2C/i2c.c: 49:   return ( SSP1BUF );
 13619  0A80  080C               	movf	12,w	;volatile
 13620  0A81                     l32:
 13621  0A81  0008               	return
 13622  0A82                     __end_of_ReadI2C:
 13623                           
 13624                           	psect	text39
 13625  0B08                     __ptext39:	
 13626 ;; *************** function _DATAEE_WriteByte *****************
 13627 ;; Defined at:
 13628 ;;		line 180 in file "mcc_generated_files/memory.c"
 13629 ;; Parameters:    Size  Location     Type
 13630 ;;  bAdd            2    0[BANK0 ] unsigned short 
 13631 ;;  bData           1    2[BANK0 ] unsigned char 
 13632 ;; Auto vars:     Size  Location     Type
 13633 ;;  GIEBitValue     1    3[BANK0 ] unsigned char 
 13634 ;; Return value:  Size  Location     Type
 13635 ;;                  1    wreg      void 
 13636 ;; Registers used:
 13637 ;;		wreg, status,2, status,0
 13638 ;; Tracked objects:
 13639 ;;		On entry : 0/0
 13640 ;;		On exit  : 0/0
 13641 ;;		Unchanged: 0/0
 13642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13643 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13644 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13646 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13647 ;;Total ram usage:        4 bytes
 13648 ;; Hardware stack levels used: 1
 13649 ;; Hardware stack levels required when called: 5
 13650 ;; This function calls:
 13651 ;;		Nothing
 13652 ;; This function is called by:
 13653 ;;		_main
 13654 ;; This function uses a non-reentrant model
 13655 ;;
 13656                           
 13657                           
 13658                           ;psect for function _DATAEE_WriteByte
 13659  0B08                     _DATAEE_WriteByte:
 13660  0B08                     l5874:	
 13661                           ;incstack = 0
 13662                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 13663                           
 13664                           
 13665                           ;mcc_generated_files/memory.c: 180: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 181: {;mcc_generated_files/memory.c: 182:     uint8_t GIEB
      +                          itValue = INTCONbits.GIE;
 13666  0B08  3000               	movlw	0
 13667  0B09  1B8B               	btfsc	11,7	;volatile
 13668  0B0A  3001               	movlw	1
 13669  0B0B  0020               	movlb	0	; select bank0
 13670  0B0C  00A3               	movwf	DATAEE_WriteByte@GIEBitValue
 13671                           
 13672                           ;mcc_generated_files/memory.c: 184:     NVMADRH = ((bAdd >> 8) & 0xFF);
 13673  0B0D  0821               	movf	DATAEE_WriteByte@bAdd+1,w
 13674  0B0E  0030               	movlb	16	; select bank16
 13675  0B0F  009B               	movwf	27	;volatile
 13676  0B10                     l5876:
 13677                           
 13678                           ;mcc_generated_files/memory.c: 185:     NVMADRL = (bAdd & 0xFF);
 13679  0B10  0020               	movlb	0	; select bank0
 13680  0B11  0820               	movf	DATAEE_WriteByte@bAdd,w
 13681  0B12  0030               	movlb	16	; select bank16
 13682  0B13  009A               	movwf	26	;volatile
 13683  0B14                     l5878:
 13684                           
 13685                           ;mcc_generated_files/memory.c: 186:     NVMDATL = bData;
 13686  0B14  0020               	movlb	0	; select bank0
 13687  0B15  0822               	movf	DATAEE_WriteByte@bData,w
 13688  0B16  0030               	movlb	16	; select bank16
 13689  0B17  009C               	movwf	28	;volatile
 13690  0B18                     l5880:
 13691                           
 13692                           ;mcc_generated_files/memory.c: 187:     NVMCON1bits.NVMREGS = 1;
 13693  0B18  171E               	bsf	30,6	;volsfr
 13694  0B19                     l5882:
 13695                           
 13696                           ;mcc_generated_files/memory.c: 188:     NVMCON1bits.WREN = 1;
 13697  0B19  151E               	bsf	30,2	;volsfr
 13698  0B1A                     l5884:
 13699                           
 13700                           ;mcc_generated_files/memory.c: 189:     INTCONbits.GIE = 0;
 13701  0B1A  138B               	bcf	11,7	;volatile
 13702  0B1B                     l5886:
 13703                           
 13704                           ;mcc_generated_files/memory.c: 190:     NVMCON2 = 0x55;
 13705  0B1B  3055               	movlw	85
 13706  0B1C  009F               	movwf	31	;volsfr
 13707  0B1D                     l5888:
 13708                           
 13709                           ;mcc_generated_files/memory.c: 191:     NVMCON2 = 0xAA;
 13710  0B1D  30AA               	movlw	170
 13711  0B1E  009F               	movwf	31	;volsfr
 13712  0B1F                     l5890:
 13713                           
 13714                           ;mcc_generated_files/memory.c: 192:     NVMCON1bits.WR = 1;
 13715  0B1F  149E               	bsf	30,1	;volsfr
 13716  0B20                     l765:	
 13717                           ;mcc_generated_files/memory.c: 195:     {;mcc_generated_files/memory.c: 196:     }
 13718                           
 13719                           
 13720                           ;mcc_generated_files/memory.c: 194:     while (NVMCON1bits.WR)
 13721  0B20  189E               	btfsc	30,1	;volsfr
 13722  0B21  2B23               	goto	u5471
 13723  0B22  2B24               	goto	u5470
 13724  0B23                     u5471:
 13725  0B23  2B20               	goto	l765
 13726  0B24                     u5470:
 13727  0B24                     l767:
 13728                           
 13729                           ;mcc_generated_files/memory.c: 198:     NVMCON1bits.WREN = 0;
 13730  0B24  111E               	bcf	30,2	;volsfr
 13731  0B25                     l5892:
 13732                           
 13733                           ;mcc_generated_files/memory.c: 199:     INTCONbits.GIE = GIEBitValue;
 13734  0B25  0020               	movlb	0	; select bank0
 13735  0B26  0C23               	rrf	DATAEE_WriteByte@GIEBitValue,w
 13736  0B27  1C03               	skipc
 13737  0B28  138B               	bcf	11,7	;volatile
 13738  0B29  1803               	skipnc
 13739  0B2A  178B               	bsf	11,7	;volatile
 13740  0B2B                     l768:
 13741  0B2B  0008               	return
 13742  0B2C                     __end_of_DATAEE_WriteByte:
 13743                           
 13744                           	psect	text40
 13745  0980                     __ptext40:	
 13746 ;; *************** function _DATAEE_ReadByte *****************
 13747 ;; Defined at:
 13748 ;;		line 202 in file "mcc_generated_files/memory.c"
 13749 ;; Parameters:    Size  Location     Type
 13750 ;;  bAdd            2    0[BANK0 ] unsigned short 
 13751 ;; Auto vars:     Size  Location     Type
 13752 ;;		None
 13753 ;; Return value:  Size  Location     Type
 13754 ;;                  1    wreg      unsigned char 
 13755 ;; Registers used:
 13756 ;;		wreg, status,2
 13757 ;; Tracked objects:
 13758 ;;		On entry : 0/0
 13759 ;;		On exit  : 0/0
 13760 ;;		Unchanged: 0/0
 13761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13762 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13765 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13766 ;;Total ram usage:        2 bytes
 13767 ;; Hardware stack levels used: 1
 13768 ;; Hardware stack levels required when called: 5
 13769 ;; This function calls:
 13770 ;;		Nothing
 13771 ;; This function is called by:
 13772 ;;		_main
 13773 ;; This function uses a non-reentrant model
 13774 ;;
 13775                           
 13776                           
 13777                           ;psect for function _DATAEE_ReadByte
 13778  0980                     _DATAEE_ReadByte:
 13779  0980                     l5894:	
 13780                           ;incstack = 0
 13781                           ; Regs used in _DATAEE_ReadByte: [wreg+status,2]
 13782                           
 13783                           
 13784                           ;mcc_generated_files/memory.c: 202: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 203: {;mcc_generated_files/memory.c: 204:     NVMADRH = ((bAdd >> 8) & 
      +                          0xFF);
 13785  0980  0020               	movlb	0	; select bank0
 13786  0981  0821               	movf	DATAEE_ReadByte@bAdd+1,w
 13787  0982  0030               	movlb	16	; select bank16
 13788  0983  009B               	movwf	27	;volatile
 13789  0984                     l5896:
 13790                           
 13791                           ;mcc_generated_files/memory.c: 205:     NVMADRL = (bAdd & 0xFF);
 13792  0984  0020               	movlb	0	; select bank0
 13793  0985  0820               	movf	DATAEE_ReadByte@bAdd,w
 13794  0986  0030               	movlb	16	; select bank16
 13795  0987  009A               	movwf	26	;volatile
 13796  0988                     l5898:
 13797                           
 13798                           ;mcc_generated_files/memory.c: 206:     NVMCON1bits.NVMREGS = 1;
 13799  0988  171E               	bsf	30,6	;volsfr
 13800  0989                     l5900:
 13801                           
 13802                           ;mcc_generated_files/memory.c: 207:     NVMCON1bits.RD = 1;
 13803  0989  141E               	bsf	30,0	;volsfr
 13804  098A                     l5902:
 13805                           
 13806                           ;mcc_generated_files/memory.c: 208:     __nop();
 13807  098A  0000               	nop
 13808  098B                     l5904:
 13809                           
 13810                           ;mcc_generated_files/memory.c: 209:     __nop();
 13811  098B  0000               	nop
 13812  098C                     l5906:
 13813                           
 13814                           ;mcc_generated_files/memory.c: 211:     return (NVMDATL);
 13815  098C  0030               	movlb	16	; select bank16
 13816  098D  081C               	movf	28,w	;volatile
 13817  098E                     l771:
 13818  098E  0008               	return
 13819  098F                     __end_of_DATAEE_ReadByte:
 13820                           
 13821                           	psect	intentry
 13822  0004                     __pintentry:	
 13823 ;; *************** function _INTERRUPT_InterruptManager *****************
 13824 ;; Defined at:
 13825 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13826 ;; Parameters:    Size  Location     Type
 13827 ;;		None
 13828 ;; Auto vars:     Size  Location     Type
 13829 ;;		None
 13830 ;; Return value:  Size  Location     Type
 13831 ;;                  1    wreg      void 
 13832 ;; Registers used:
 13833 ;;		wreg, status,2, status,0, pclath, cstack
 13834 ;; Tracked objects:
 13835 ;;		On entry : 0/0
 13836 ;;		On exit  : 0/0
 13837 ;;		Unchanged: 0/0
 13838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13843 ;;Total ram usage:        0 bytes
 13844 ;; Hardware stack levels used: 1
 13845 ;; Hardware stack levels required when called: 4
 13846 ;; This function calls:
 13847 ;;		_TMR1_ISR
 13848 ;; This function is called by:
 13849 ;;		Interrupt level 1
 13850 ;; This function uses a non-reentrant model
 13851 ;;
 13852                           
 13853  0004                     _INTERRUPT_InterruptManager:
 13854                           
 13855                           ;incstack = 0
 13856  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
 13857                           
 13858                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
 13859  0005  3180               	pagesel	$
 13860  0006                     i1l4866:
 13861                           
 13862                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
 13863  0006  1F0B               	btfss	11,6	;volatile
 13864  0007  2809               	goto	u398_21
 13865  0008  280A               	goto	u398_20
 13866  0009                     u398_21:
 13867  0009  2816               	goto	i1l499
 13868  000A                     u398_20:
 13869  000A                     i1l4868:
 13870                           
 13871                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE4bits.TMR1IE == 1 && PIR4bits.TMR1IF == 1)
 13872  000A  002E               	movlb	14	; select bank14
 13873  000B  1C1A               	btfss	26,0	;volatile
 13874  000C  280E               	goto	u399_21
 13875  000D  280F               	goto	u399_20
 13876  000E                     u399_21:
 13877  000E  2816               	goto	i1l499
 13878  000F                     u399_20:
 13879  000F                     i1l4870:
 13880  000F  1C10               	btfss	16,0	;volatile
 13881  0010  2812               	goto	u400_21
 13882  0011  2813               	goto	u400_20
 13883  0012                     u400_21:
 13884  0012  2816               	goto	i1l499
 13885  0013                     u400_20:
 13886  0013                     i1l4872:
 13887                           
 13888                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             TMR1_ISR();
 13889  0013  3189  2172  3180   	fcall	_TMR1_ISR
 13890  0016                     i1l499:	
 13891                           ;mcc_generated_files/interrupt_manager.c: 60:         }
 13892                           
 13893  0016  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
 13894  0017  0009               	retfie
 13895  0018                     __end_of_INTERRUPT_InterruptManager:
 13896                           
 13897                           	psect	text42
 13898  0972                     __ptext42:	
 13899 ;; *************** function _TMR1_ISR *****************
 13900 ;; Defined at:
 13901 ;;		line 164 in file "mcc_generated_files/tmr1.c"
 13902 ;; Parameters:    Size  Location     Type
 13903 ;;		None
 13904 ;; Auto vars:     Size  Location     Type
 13905 ;;		None
 13906 ;; Return value:  Size  Location     Type
 13907 ;;                  1    wreg      void 
 13908 ;; Registers used:
 13909 ;;		wreg, status,2, status,0, pclath, cstack
 13910 ;; Tracked objects:
 13911 ;;		On entry : 0/0
 13912 ;;		On exit  : 0/0
 13913 ;;		Unchanged: 0/0
 13914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13919 ;;Total ram usage:        0 bytes
 13920 ;; Hardware stack levels used: 1
 13921 ;; Hardware stack levels required when called: 3
 13922 ;; This function calls:
 13923 ;;		_TMR1_CallBack
 13924 ;;		_TMR1_WriteTimer
 13925 ;; This function is called by:
 13926 ;;		_INTERRUPT_InterruptManager
 13927 ;; This function uses a non-reentrant model
 13928 ;;
 13929                           
 13930                           
 13931                           ;psect for function _TMR1_ISR
 13932  0972                     _TMR1_ISR:
 13933  0972                     i1l4574:	
 13934                           ;incstack = 0
 13935                           ; Regs used in _TMR1_ISR: [wreg+status,2+status,0+pclath+cstack]
 13936                           
 13937                           
 13938                           ;mcc_generated_files/tmr1.c: 168:     PIR4bits.TMR1IF = 0;
 13939  0972  002E               	movlb	14	; select bank14
 13940  0973  1010               	bcf	16,0	;volatile
 13941  0974                     i1l4576:
 13942                           
 13943                           ;mcc_generated_files/tmr1.c: 169:     TMR1_WriteTimer(timer1ReloadVal);
 13944  0974  0021               	movlb	1	; select bank1
 13945  0975  086A               	movf	(_timer1ReloadVal+1)^(0+128),w	;volatile
 13946  0976  00F1               	movwf	TMR1_WriteTimer@timerVal+1
 13947  0977  0869               	movf	_timer1ReloadVal^(0+128),w	;volatile
 13948  0978  00F0               	movwf	TMR1_WriteTimer@timerVal
 13949  0979  3189  218F  3189   	fcall	_TMR1_WriteTimer
 13950                           
 13951                           ;mcc_generated_files/tmr1.c: 173:     TMR1_CallBack();
 13952  097C  3189  2158  3189   	fcall	_TMR1_CallBack
 13953  097F                     i1l558:
 13954  097F  0008               	return
 13955  0980                     __end_of_TMR1_ISR:
 13956                           
 13957                           	psect	text43
 13958  098F                     __ptext43:	
 13959 ;; *************** function _TMR1_WriteTimer *****************
 13960 ;; Defined at:
 13961 ;;		line 127 in file "mcc_generated_files/tmr1.c"
 13962 ;; Parameters:    Size  Location     Type
 13963 ;;  timerVal        2    0[COMMON] unsigned short 
 13964 ;; Auto vars:     Size  Location     Type
 13965 ;;		None
 13966 ;; Return value:  Size  Location     Type
 13967 ;;                  1    wreg      void 
 13968 ;; Registers used:
 13969 ;;		wreg, status,2
 13970 ;; Tracked objects:
 13971 ;;		On entry : 0/0
 13972 ;;		On exit  : 0/0
 13973 ;;		Unchanged: 0/0
 13974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13975 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13978 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13979 ;;Total ram usage:        2 bytes
 13980 ;; Hardware stack levels used: 1
 13981 ;; This function calls:
 13982 ;;		Nothing
 13983 ;; This function is called by:
 13984 ;;		_TMR1_ISR
 13985 ;;		_TMR1_Reload
 13986 ;; This function uses a non-reentrant model
 13987 ;;
 13988                           
 13989                           
 13990                           ;psect for function _TMR1_WriteTimer
 13991  098F                     _TMR1_WriteTimer:
 13992  098F                     i1l4422:	
 13993                           ;incstack = 0
 13994                           ; Regs used in _TMR1_WriteTimer: [wreg+status,2]
 13995                           
 13996                           
 13997                           ;mcc_generated_files/tmr1.c: 127: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 128: {;mcc_generated_files/tmr1.c: 129:     if (T1CONbits.nT1SYNC == 1)
 13998  098F  0024               	movlb	4	; select bank4
 13999  0990  1D0E               	btfss	14,2	;volatile
 14000  0991  2993               	goto	u346_21
 14001  0992  2994               	goto	u346_20
 14002  0993                     u346_21:
 14003  0993  299B               	goto	i1l4432
 14004  0994                     u346_20:
 14005  0994                     i1l4424:
 14006                           
 14007                           ;mcc_generated_files/tmr1.c: 130:     {;mcc_generated_files/tmr1.c: 132:         T1CONbi
      +                          ts.TMR1ON = 0;
 14008  0994  100E               	bcf	14,0	;volatile
 14009  0995                     i1l4426:
 14010                           
 14011                           ;mcc_generated_files/tmr1.c: 135:         TMR1H = (uint8_t)(timerVal >> 8);
 14012  0995  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 14013  0996  008D               	movwf	13	;volatile
 14014  0997                     i1l4428:
 14015                           
 14016                           ;mcc_generated_files/tmr1.c: 136:         TMR1L = (uint8_t)timerVal;
 14017  0997  0870               	movf	TMR1_WriteTimer@timerVal,w
 14018  0998  008C               	movwf	12	;volatile
 14019  0999                     i1l4430:
 14020                           
 14021                           ;mcc_generated_files/tmr1.c: 139:         T1CONbits.TMR1ON =1;
 14022  0999  140E               	bsf	14,0	;volatile
 14023                           
 14024                           ;mcc_generated_files/tmr1.c: 140:     }
 14025  099A  299F               	goto	i1l546
 14026  099B                     i1l4432:
 14027                           
 14028                           ;mcc_generated_files/tmr1.c: 142:     {;mcc_generated_files/tmr1.c: 144:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
 14029  099B  0871               	movf	TMR1_WriteTimer@timerVal+1,w
 14030  099C  008D               	movwf	13	;volatile
 14031  099D                     i1l4434:
 14032                           
 14033                           ;mcc_generated_files/tmr1.c: 145:         TMR1L = (uint8_t)timerVal;
 14034  099D  0870               	movf	TMR1_WriteTimer@timerVal,w
 14035  099E  008C               	movwf	12	;volatile
 14036  099F                     i1l546:
 14037  099F  0008               	return
 14038  09A0                     __end_of_TMR1_WriteTimer:
 14039                           
 14040                           	psect	text44
 14041  0958                     __ptext44:	
 14042 ;; *************** function _TMR1_CallBack *****************
 14043 ;; Defined at:
 14044 ;;		line 176 in file "mcc_generated_files/tmr1.c"
 14045 ;; Parameters:    Size  Location     Type
 14046 ;;		None
 14047 ;; Auto vars:     Size  Location     Type
 14048 ;;		None
 14049 ;; Return value:  Size  Location     Type
 14050 ;;                  1    wreg      void 
 14051 ;; Registers used:
 14052 ;;		wreg, status,2, status,0, pclath, cstack
 14053 ;; Tracked objects:
 14054 ;;		On entry : 0/0
 14055 ;;		On exit  : 0/0
 14056 ;;		Unchanged: 0/0
 14057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14062 ;;Total ram usage:        0 bytes
 14063 ;; Hardware stack levels used: 1
 14064 ;; Hardware stack levels required when called: 2
 14065 ;; This function calls:
 14066 ;;		Absolute function
 14067 ;;		_TMR1_DefaultInterruptHandler
 14068 ;;		_timerInterrupt
 14069 ;; This function is called by:
 14070 ;;		_TMR1_ISR
 14071 ;; This function uses a non-reentrant model
 14072 ;;
 14073                           
 14074                           
 14075                           ;psect for function _TMR1_CallBack
 14076  0958                     _TMR1_CallBack:
 14077  0958                     i1l4436:	
 14078                           ;incstack = 0
 14079                           ; Regs used in _TMR1_CallBack: [wreg+status,2+status,0+pclath+cstack]
 14080                           
 14081                           
 14082                           ;mcc_generated_files/tmr1.c: 179:     if(TMR1_InterruptHandler)
 14083  0958  0021               	movlb	1	; select bank1
 14084  0959  0867               	movf	_TMR1_InterruptHandler^(0+128),w
 14085  095A  0468               	iorwf	(_TMR1_InterruptHandler+1)^(0+128),w
 14086  095B  1903               	btfsc	3,2
 14087  095C  295E               	goto	u347_21
 14088  095D  295F               	goto	u347_20
 14089  095E                     u347_21:
 14090  095E  2964               	goto	i1l562
 14091  095F                     u347_20:
 14092  095F                     i1l4438:
 14093                           
 14094                           ;mcc_generated_files/tmr1.c: 180:     {;mcc_generated_files/tmr1.c: 181:         TMR1_In
      +                          terruptHandler();
 14095  095F  0868               	movf	(_TMR1_InterruptHandler+1)^(0+128),w
 14096  0960  008A               	movwf	10
 14097  0961  0867               	movf	_TMR1_InterruptHandler^(0+128),w
 14098  0962  000A               	callw
 14099  0963  3189               	pagesel	$
 14100  0964                     i1l562:
 14101  0964  0008               	return
 14102  0965                     __end_of_TMR1_CallBack:
 14103                           
 14104                           	psect	text45
 14105  07FF                     __ptext45:	
 14106 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 14107 ;; Defined at:
 14108 ;;		line 189 in file "mcc_generated_files/tmr1.c"
 14109 ;; Parameters:    Size  Location     Type
 14110 ;;		None
 14111 ;; Auto vars:     Size  Location     Type
 14112 ;;		None
 14113 ;; Return value:  Size  Location     Type
 14114 ;;                  1    wreg      void 
 14115 ;; Registers used:
 14116 ;;		None
 14117 ;; Tracked objects:
 14118 ;;		On entry : 0/0
 14119 ;;		On exit  : 0/0
 14120 ;;		Unchanged: 0/0
 14121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14126 ;;Total ram usage:        0 bytes
 14127 ;; Hardware stack levels used: 1
 14128 ;; This function calls:
 14129 ;;		Nothing
 14130 ;; This function is called by:
 14131 ;;		_TMR1_Initialize
 14132 ;;		_TMR1_CallBack
 14133 ;; This function uses a non-reentrant model
 14134 ;;
 14135                           
 14136                           
 14137                           ;psect for function _TMR1_DefaultInterruptHandler
 14138  07FF                     _TMR1_DefaultInterruptHandler:
 14139  07FF                     i1l568:	
 14140                           ;incstack = 0
 14141                           ; Regs used in _TMR1_DefaultInterruptHandler: []
 14142                           
 14143  07FF  0008               	return
 14144  0800                     __end_of_TMR1_DefaultInterruptHandler:
 14145                           
 14146                           	psect	text46
 14147  0B2C                     __ptext46:	
 14148 ;; *************** function _timerInterrupt *****************
 14149 ;; Defined at:
 14150 ;;		line 63 in file "main.c"
 14151 ;; Parameters:    Size  Location     Type
 14152 ;;		None
 14153 ;; Auto vars:     Size  Location     Type
 14154 ;;  value           2    3[COMMON] unsigned short 
 14155 ;; Return value:  Size  Location     Type
 14156 ;;                  1    wreg      void 
 14157 ;; Registers used:
 14158 ;;		wreg, pclath, cstack
 14159 ;; Tracked objects:
 14160 ;;		On entry : 0/0
 14161 ;;		On exit  : 0/0
 14162 ;;		Unchanged: 0/0
 14163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14165 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14167 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14168 ;;Total ram usage:        2 bytes
 14169 ;; Hardware stack levels used: 1
 14170 ;; Hardware stack levels required when called: 1
 14171 ;; This function calls:
 14172 ;;		_ADCC_GetSingleConversion
 14173 ;; This function is called by:
 14174 ;;		_main
 14175 ;;		_TMR1_CallBack
 14176 ;; This function uses a non-reentrant model
 14177 ;;
 14178                           
 14179                           
 14180                           ;psect for function _timerInterrupt
 14181  0B2C                     _timerInterrupt:
 14182  0B2C                     i1l4138:	
 14183                           ;incstack = 0
 14184                           ; Regs used in _timerInterrupt: [wreg+pclath+cstack]
 14185                           
 14186                           
 14187                           ;main.c: 64:     if(PORTAbits.RA7==0){
 14188  0B2C  0020               	movlb	0	; select bank0
 14189  0B2D  1B8C               	btfsc	12,7	;volatile
 14190  0B2E  2B30               	goto	u298_21
 14191  0B2F  2B31               	goto	u298_20
 14192  0B30                     u298_21:
 14193  0B30  2B33               	goto	i1l1165
 14194  0B31                     u298_20:
 14195  0B31                     i1l1162:	
 14196                           ;main.c: 65:         do { LATAbits.LATA7 = 1; } while(0);
 14197                           
 14198  0B31  1796               	bsf	22,7	;volatile
 14199  0B32  2B34               	goto	i1l4140
 14200  0B33                     i1l1165:	
 14201                           ;main.c: 67:         do { LATAbits.LATA7 = 0; } while(0);
 14202                           
 14203  0B33  1396               	bcf	22,7	;volatile
 14204  0B34                     i1l4140:
 14205                           
 14206                           ;main.c: 69:     adc_result_t value = ADCC_GetSingleConversion(channel_ANA0);
 14207  0B34  3000               	movlw	0
 14208  0B35  3189  21A0  318B   	fcall	_ADCC_GetSingleConversion
 14209  0B38  0871               	movf	?_ADCC_GetSingleConversion+1,w
 14210  0B39  00F4               	movwf	timerInterrupt@value+1
 14211  0B3A  0870               	movf	?_ADCC_GetSingleConversion,w
 14212  0B3B  00F3               	movwf	timerInterrupt@value
 14213  0B3C                     i1l4142:
 14214                           
 14215                           ;main.c: 70:     if(value > 0x2FD || value < 0xFF){
 14216  0B3C  3002               	movlw	2
 14217  0B3D  0274               	subwf	timerInterrupt@value+1,w
 14218  0B3E  30FE               	movlw	254
 14219  0B3F  1903               	skipnz
 14220  0B40  0273               	subwf	timerInterrupt@value,w
 14221  0B41  1803               	skipnc
 14222  0B42  2B44               	goto	u299_21
 14223  0B43  2B45               	goto	u299_20
 14224  0B44                     u299_21:
 14225  0B44  2B4E               	goto	i1l1170
 14226  0B45                     u299_20:
 14227  0B45                     i1l4144:
 14228  0B45  3000               	movlw	0
 14229  0B46  0274               	subwf	timerInterrupt@value+1,w
 14230  0B47  30FF               	movlw	255
 14231  0B48  1903               	skipnz
 14232  0B49  0273               	subwf	timerInterrupt@value,w
 14233  0B4A  1803               	skipnc
 14234  0B4B  2B4D               	goto	u300_21
 14235  0B4C  2B4E               	goto	u300_20
 14236  0B4D                     u300_21:
 14237  0B4D  2B51               	goto	i1l1173
 14238  0B4E                     u300_20:
 14239  0B4E                     i1l1170:	
 14240                           ;main.c: 71:         do { LATAbits.LATA4 = 1; } while(0);
 14241                           
 14242  0B4E  0020               	movlb	0	; select bank0
 14243  0B4F  1616               	bsf	22,4	;volatile
 14244  0B50  2B53               	goto	i1l1175
 14245  0B51                     i1l1173:	
 14246                           ;main.c: 73:         do { LATAbits.LATA4 = 0; } while(0);
 14247                           
 14248  0B51  0020               	movlb	0	; select bank0
 14249  0B52  1216               	bcf	22,4	;volatile
 14250  0B53                     i1l1175:
 14251  0B53  0008               	return
 14252  0B54                     __end_of_timerInterrupt:
 14253                           
 14254                           	psect	text47
 14255  09A0                     __ptext47:	
 14256 ;; *************** function _ADCC_GetSingleConversion *****************
 14257 ;; Defined at:
 14258 ;;		line 132 in file "mcc_generated_files/adcc.c"
 14259 ;; Parameters:    Size  Location     Type
 14260 ;;  channel         1    wreg     enum E12206
 14261 ;; Auto vars:     Size  Location     Type
 14262 ;;  channel         1    2[COMMON] enum E12206
 14263 ;; Return value:  Size  Location     Type
 14264 ;;                  2    0[COMMON] unsigned short 
 14265 ;; Registers used:
 14266 ;;		wreg
 14267 ;; Tracked objects:
 14268 ;;		On entry : 0/0
 14269 ;;		On exit  : 0/0
 14270 ;;		Unchanged: 0/0
 14271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14272 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14273 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14275 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14276 ;;Total ram usage:        3 bytes
 14277 ;; Hardware stack levels used: 1
 14278 ;; This function calls:
 14279 ;;		Nothing
 14280 ;; This function is called by:
 14281 ;;		_timerInterrupt
 14282 ;; This function uses a non-reentrant model
 14283 ;;
 14284                           
 14285                           
 14286                           ;psect for function _ADCC_GetSingleConversion
 14287  09A0                     _ADCC_GetSingleConversion:
 14288                           
 14289                           ;incstack = 0
 14290                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
 14291                           ;ADCC_GetSingleConversion@channel stored from wreg
 14292  09A0  00F2               	movwf	ADCC_GetSingleConversion@channel
 14293  09A1                     i1l3968:
 14294                           
 14295                           ;mcc_generated_files/adcc.c: 132: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 133: {;mcc_generated_files/adcc.c: 135:     ADPCH = 
      +                          channel;
 14296  09A1  0872               	movf	ADCC_GetSingleConversion@channel,w
 14297  09A2  0021               	movlb	1	; select bank1
 14298  09A3  009E               	movwf	30	;volatile
 14299  09A4                     i1l3970:
 14300                           
 14301                           ;mcc_generated_files/adcc.c: 138:     ADCON0bits.ADON = 1;
 14302  09A4  1793               	bsf	19,7	;volatile
 14303  09A5                     i1l3972:
 14304                           
 14305                           ;mcc_generated_files/adcc.c: 141:     ADCON0bits.ADCONT = 0;
 14306  09A5  1313               	bcf	19,6	;volatile
 14307  09A6                     i1l3974:
 14308                           
 14309                           ;mcc_generated_files/adcc.c: 144:     ADCON0bits.ADGO = 1;
 14310  09A6  1413               	bsf	19,0	;volatile
 14311  09A7                     i1l3976:
 14312                           
 14313                           ;mcc_generated_files/adcc.c: 147:     __nop();
 14314  09A7  0000               	nop
 14315  09A8                     i1l655:	
 14316                           ;mcc_generated_files/adcc.c: 151:     {;mcc_generated_files/adcc.c: 152:     }
 14317                           
 14318                           
 14319                           ;mcc_generated_files/adcc.c: 150:     while (ADCON0bits.ADGO)
 14320  09A8  0021               	movlb	1	; select bank1
 14321  09A9  1813               	btfsc	19,0	;volatile
 14322  09AA  29AC               	goto	u258_21
 14323  09AB  29AD               	goto	u258_20
 14324  09AC                     u258_21:
 14325  09AC  29A8               	goto	i1l655
 14326  09AD                     u258_20:
 14327  09AD                     i1l3978:
 14328                           
 14329                           ;mcc_generated_files/adcc.c: 156:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
 14330  09AD  080D               	movf	13,w	;volatile
 14331  09AE  00F1               	movwf	?_ADCC_GetSingleConversion+1
 14332  09AF  080C               	movf	12,w	;volatile
 14333  09B0  00F0               	movwf	?_ADCC_GetSingleConversion
 14334  09B1                     i1l658:
 14335  09B1  0008               	return
 14336  09B2                     __end_of_ADCC_GetSingleConversion:
 14337  007E                     btemp	set	126	;btemp
 14338  007E                     int$flags	set	126
 14339  007E                     wtemp0	set	126
 14340                           
 14341                           	psect	config
 14342                           
 14343                           ;Config register CONFIG1 @ 0x8007
 14344                           ;	External Oscillator mode selection bits
 14345                           ;	FEXTOSC = OFF, Oscillator not enabled
 14346                           ;	Power-up default value for COSC bits
 14347                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
 14348                           ;	Clock Out Enable bit
 14349                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
 14350                           ;	Clock Switch Enable bit
 14351                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
 14352                           ;	Fail-Safe Clock Monitor Enable bit
 14353                           ;	FCMEN = ON, FSCM timer enabled
 14354  8007                     	org	32775
 14355  8007  3FEC               	dw	16364
 14356                           
 14357                           ;Config register CONFIG2 @ 0x8008
 14358                           ;	Master Clear Enable bit
 14359                           ;	MCLRE = ON, MCLR pin is Master Clear function
 14360                           ;	Power-up Timer Enable bit
 14361                           ;	PWRTE = OFF, PWRT disabled
 14362                           ;	Low-Power BOR enable bit
 14363                           ;	LPBOREN = OFF, ULPBOR disabled
 14364                           ;	Brown-out reset enable bits
 14365                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
 14366                           ;	Brown-out Reset Voltage Selection
 14367                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 1.9V on LF, and 2.45V on F Devices
 14368                           ;	Zero-cross detect disable
 14369                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
 14370                           ;	Peripheral Pin Select one-way control
 14371                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
 14372                           ;	Stack Overflow/Underflow Reset Enable bit
 14373                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
 14374                           ;	Background Debugger
 14375                           ;	DEBUG = OFF, Background Debugger disabled
 14376  8008                     	org	32776
 14377  8008  3FFF               	dw	16383
 14378                           
 14379                           ;Config register CONFIG3 @ 0x8009
 14380                           ;	WDT Period Select bits
 14381                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
 14382                           ;	WDT operating mode
 14383                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
 14384                           ;	WDT Window Select bits
 14385                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
 14386                           ;	WDT input clock selector
 14387                           ;	WDTCCS = SC, Software Control
 14388  8009                     	org	32777
 14389  8009  3F9F               	dw	16287
 14390                           
 14391                           ;Config register CONFIG4 @ 0x800A
 14392                           ;	UserNVM self-write protection bits
 14393                           ;	WRT = OFF, Write protection off
 14394                           ;	Scanner Enable bit
 14395                           ;	SCANE = available, Scanner module is available for use
 14396                           ;	Low Voltage Programming Enable bit
 14397                           ;	LVP = ON, Low Voltage programming enabled. MCLR/Vpp pin function is MCLR.
 14398  800A                     	org	32778
 14399  800A  3FFF               	dw	16383
 14400                           
 14401                           ;Config register CONFIG5 @ 0x800B
 14402                           ;	UserNVM Program memory code protection bit
 14403                           ;	CP = OFF, Program Memory code protection disabled
 14404                           ;	DataNVM code protection bit
 14405                           ;	CPD = OFF, Data EEPROM code protection disabled
 14406  800B                     	org	32779
 14407  800B  3FFF               	dw	16383

Data Sizes:
    Strings     20
    Constant    32
    Data        0
    BSS         69
    Persistent  36
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       9
    BANK0            80     80      80
    BANK1            80     38      75
    BANK2            80      0      32
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    I2C1_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C1_DO_TX$3264$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S1484$0$0	PTR void  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    fputc@fp.buffer	PTR unsigned char  size(1) Largest target is 17
		 -> main@buf(BANK1[17]), 

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK1[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(BANK1[2]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 6
		 -> sprintf@f(BANK1[5]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK2[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_3(CODE[7]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 17
		 -> main@buf(BANK1[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    S2719_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 17
		 -> main@buf(BANK1[17]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 17
		 -> main@buf(BANK1[17]), 

    S1484$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@reg(COMMON[1]), I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@reg(COMMON[1]), I2C1_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C1_Write1ByteRegister@reg(COMMON[1]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@reg(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@reg(COMMON[1]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S1484$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    I2C1_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C1_ReadDataBlock@bufferBlock(COMMON[3]), I2C1_Write2ByteRegister@data(COMMON[2]), I2C1_Write1ByteRegister@data(COMMON[1]), I2C1_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> NULL(NULL[0]), I2C1_Read1ByteRegister@returnValue(COMMON[1]), 

    S1484$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C1_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C1_CallbackReturnReset(), I2C1_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    i2c1_fsmStateTable	const PTR FTN()enum E12595[16] size(2) Largest target is 1
		 -> I2C1_DO_ADDRESS_NACK(), I2C1_DO_RESET(), I2C1_DO_RX_NACK_RESTART(), I2C1_DO_RX_NACK_STOP(), 
		 -> I2C1_DO_RX_ACK(), I2C1_DO_SEND_STOP(), I2C1_DO_SEND_RESTART(), I2C1_DO_SEND_RESTART_WRITE(), 
		 -> I2C1_DO_SEND_RESTART_READ(), I2C1_DO_TX_EMPTY(), I2C1_DO_RCEN(), I2C1_DO_RX(), 
		 -> I2C1_DO_TX(), I2C1_DO_SEND_ADR_WRITE(), I2C1_DO_SEND_ADR_READ(), I2C1_DO_IDLE(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerInterrupt(), TMR1_DefaultInterruptHandler(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> timerInterrupt(), Absolute function(), TMR1_DefaultInterruptHandler(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(1) Largest target is 0

    S679$data	PTR unsigned char  size(1) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0

    LCDstr@p	PTR unsigned char  size(2) Largest target is 17
		 -> main@buf(BANK1[17]), STR_2(CODE[8]), STR_1(CODE[5]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR1_CallBack->_timerInterrupt
    _timerInterrupt->_ADCC_GetSingleConversion

Critical Paths under _main in BANK0

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->___aodiv
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->___wmul
    _atoi->_isdigit
    _readTC74->_WriteI2C
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _LCDstr->_LCDchar
    _LCDchar->_LCDsend2x4
    _LCDpos->_LCDcmd
    _LCDcmd->_LCDsend2x4
    _LCDinit->_LCDsend2x4
    _LCDsend2x4->_WriteI2C
    _LCDsend->_WriteI2C
    _LCDbusy->_LCDrecv
    _LCDrecv->_WriteI2C

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->_vfprintf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0   17378
                                             18 BANK1     20    20      0
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                            _LCDbusy
                             _LCDcmd
                            _LCDinit
                             _LCDpos
                             _LCDstr
                            _OpenI2C
                                 _S1
                  _SYSTEM_Initialize
           _TMR1_SetInterruptHandler
                           _readTC74
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             14    10      4   11174
                                              6 BANK1     12     8      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     5      3   10736
                                             78 BANK0      2     2      0
                                              0 BANK1      6     3      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           43    41      2   10260
                                             57 BANK0     21    19      2
                               _atoi
                               _dtoa
                              _fputc
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                30    22      8    5372
                                             27 BANK0     30    22      8
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  9     6      3    3201
                                             16 BANK0      9     6      3
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               5     3      2     166
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                8     7      1    1429
                                              8 BANK0      8     7      1
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3    1037
                                              0 BANK0      8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             19 BANK0      4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             19     3     16     613
                                              0 BANK0     19     3     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             27    11     16     625
                                              0 BANK0     27    11     16
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    2409
                                              6 BANK0     15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              5     3      2     259
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    1306
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _readTC74                                             2     2      0      99
                                              2 BANK0      2     2      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     211
                    _ADCC_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     211
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _TMR1_SetInterruptHandler                             2     0      2     211
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _S1                                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _OpenI2C                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCDstr                                               6     4      2    1377
                                              9 BANK0      6     4      2
                            _LCDchar
 ---------------------------------------------------------------------------------
 (2) _LCDchar                                              1     1      0    1042
                                              8 BANK0      1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (1) _LCDpos                                               4     3      1    1265
                                              9 BANK0      4     3      1
                             _LCDcmd
 ---------------------------------------------------------------------------------
 (2) _LCDcmd                                               1     1      0    1042
                                              8 BANK0      1     1      0
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (1) _LCDinit                                              1     1      0    1073
                                              8 BANK0      1     1      0
                            _LCDsend
                         _LCDsend2x4
 ---------------------------------------------------------------------------------
 (3) _LCDsend2x4                                           6     5      1    1011
                                              2 BANK0      6     5      1
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _LCDsend                                              2     2      0      62
                                              2 BANK0      2     2      0
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (1) _LCDbusy                                              2     0      2     254
                                              7 BANK0      2     0      2
                            _LCDrecv
 ---------------------------------------------------------------------------------
 (2) _LCDrecv                                              5     5      0     254
                                              2 BANK0      5     5      0
                            _ReadI2C
                           _WriteI2C
 ---------------------------------------------------------------------------------
 (2) _WriteI2C                                             2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadI2C                                              1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _DATAEE_WriteByte                                     4     1      3     307
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) _DATAEE_ReadByte                                      2     0      2     152
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           0     0      0     307
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR1_ISR                                            0     0      0     307
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (11) _TMR1_WriteTimer                                     2     0      2     240
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (11) _TMR1_CallBack                                       0     0      0      67
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                     _timerInterrupt *
 ---------------------------------------------------------------------------------
 (12) _timerInterrupt                                      2     2      0      67
                                              3 COMMON     2     2      0
           _ADCC_GetSingleConversion
 ---------------------------------------------------------------------------------
 (13) _ADCC_GetSingleConversion                            3     1      2      22
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (12) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DATAEE_ReadByte
   _DATAEE_WriteByte
   _LCDbusy
     _LCDrecv
       _ReadI2C
       _WriteI2C
   _LCDcmd
     _LCDsend2x4
       _WriteI2C
   _LCDinit
     _LCDsend
       _WriteI2C
     _LCDsend2x4
   _LCDpos
     _LCDcmd
   _LCDstr
     _LCDchar
       _LCDsend2x4
   _OpenI2C
   _S1
   _SYSTEM_Initialize
     _ADCC_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _TMR1_SetInterruptHandler
   _readTC74
     _ReadI2C
     _WriteI2C
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc
         _isdigit

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _timerInterrupt *
         _ADCC_GetSingleConversion
     _TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       9       2       64.3%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     26      4B       7       93.8%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      20       9       40.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      C4      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      C4      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Dec 15 11:56:21 2021

                                      l23 0971                                        l32 0A81  
                                      l41 0D11                                        l28 0A79  
                                      l36 0D44                                        l29 0A7B  
                                      l53 0D42                                        l39 0D0C  
                                      l48 0D2E                                        l73 0C53  
                                      l74 0C55                                        _S1 094D  
                                      l92 0C94                                        l87 0C8E  
                                      l88 0C90                                        l98 01E1  
                                      l99 01E3                       ___wmul@multiplicand 0022  
                                     ?_S1 0070                                       l130 0273  
                                     l114 0231                                       l115 0232  
                                     l211 0788                                       l116 0234  
                                     l220 07C9                                       l150 02C6  
                                     l134 0277                                       l151 02C7  
                                     l135 0278                                       l152 02C9  
                                     l224 07E0                                       l232 0DC7  
                                     l129 0270                                       l225 07E2  
                                     l170 030C                                       l171 030D  
                                     l235 091F                                       l244 0A0F  
                                     l165 0305                                       l229 07EA  
                                     l253 0A46                                       l166 0308  
                                     l238 0930                                       l184 0347  
                                     l248 09C4                                       l185 0349  
                                     l195 0736                                       l196 0738  
                                     l436 0BF0                                       l532 0AC2  
                                     l189 035A                                       l482 0927  
                                     l643 09DB                                       l476 07FD  
                                     l565 0942                                       l479 0939  
                                     l771 098E                                       l765 0B20  
                                     l767 0B24                                       l768 0B2B  
                                     l876 094C                           _timer1ReloadVal 00E9  
                                     _abs 0A47                                       _pad 0C95  
                 __size_of_PMD_Initialize 0008                                       wreg 0009  
                    _I2C1_DO_RX_NACK_STOP 0000                                      ??_S1 0075  
                             ?_LCDsend2x4 0022                           __end_of_LCDchar 0931  
                                    l1210 0547                                      l2010 0A62  
                                    l1211 054A                                      l2003 0BAB  
                                    ?_abs 0033                                      l1222 0563  
                                    l2007 0A62                                      l1241 05B2  
                                    l2041 0F12                                      l1242 05B4  
                                    l1218 055D                                      l1227 0577  
                                    l1219 055F                                      l1156 0956  
                                    l1228 0579                                      l2044 09F4  
                                    l2052 0AE4                                      l2028 0EA1  
                                    l1158 0957                                      l1182 04CE  
                                    l1263 0606                                      l1255 05F0  
                                    l1183 04D0                                      l1264 0608  
                                    l1256 05F3                                      l1178 04BF  
                                    l1442 0A8D                                      l2067 0C41  
                                    l2075 0B7C                                      l1268 060E  
                                    l1196 0509                                      l1444 0AA1  
                                    l2084 0A2A                                      l1197 050B  
                                    l1277 0DD7                                      l1542 0702  
                                    l2078 07FE                                      l1543 0713  
                                    l1555 0FEE                                      l1556 0FFF  
                                    l4400 09D8                                      l6000 0E0D  
                                    l1905 0B07                                      l4402 09DA  
                                    l4330 0BAC                                      l6010 0E33  
                                    l6002 0E14                                      l4340 0BBA  
                                    l4332 0BB2                                      l5300 0A89  
                                    l6012 0E43                                      l6004 0E1E  
                                    l1941 0CEA                                      l4350 0BC5  
                                    l4342 0BBC                                      l4334 0BB4  
                                    l5302 0A92                                      l5310 060F  
                                    l1950 03DB                                      l6014 0E4D  
                                    l6006 0E28                                      l4360 0BD9  
                                    l4352 0BD1                                      l4344 0BBF  
                                    l4336 0BB6                                      l5304 0A97  
                                    l5400 09DC                                      l5320 0667  
                                    l5312 0611                                      l1936 0CAF  
                                    l1944 03A4                                      l6016 0E54  
                                    l6008 0E2F                                      l1953 044B  
                                    l1945 03AC                                      l4370 0BE3  
                                    l4362 0BDB                                      l4354 0BD3  
                                    l4346 0BC1                                      l4338 0BB8  
                                    l5306 0A9D                                      l5410 0ADC  
                                    l5330 068E                                      l5322 066C  
                                    l5314 061B                                      l1939 0CD1  
                                    l4460 096E                                      l4452 0965  
                                    l4372 0BE5                                      l4364 0BDD  
                                    l4356 0BD5                                      l4348 0BC3  
                                    l4380 0920                                      l5412 0ADD  
                                    l5404 0AC3                                      l6060 0EB2  
                                    l5340 06D0                                      l5332 0692  
                                    l5324 0677                                      l5316 063D  
                                    l5500 04AC                                      l1949 03C5  
                                    l1981 009B                                      l5430 0D16  
                         __end_of_LCDbusy 09C5                                      l4462 0970  
                                    l4454 096A                                      l4382 0943  
                                    l4390 0931                                      l4374 0BE8  
                                    l4366 0BDF                                      l4358 0BD7  
                                    l5406 0AC6                                      l5510 0E70  
                                    l5342 06D1                                      l5334 0696  
                                    l5326 0683                                      l5318 0648  
                                    l5350 0F15                                      l5270 0C0B  
                                    l5262 0BF1                                      l1974 005A  
                                    ?_pad 0030                                      l1967 04BE  
                                    l5440 0D33                                      l5424 0CF5  
                                    l5416 0CED                                      l4456 096B  
                                    l4384 0948                                      l4392 0934  
                                    l4376 0BEB                                      l4368 0BE1  
                                    l5408 0ACD                                      l5520 0E96  
                                    l5512 0E7A                                      l5504 0E64  
                                    l5336 069E                                      l5328 0686  
                                    l5344 06DF                                      l5360 0F78  
                                    l5352 0F1F                                      l3920 0A55  
                                    l5272 0C28                                      l5264 0BF7  
                                    l5280 0B59                                      l1976 0064  
                                    l5600 004D                           __end_of_LCDinit 0DC8  
                                    l1977 0066                                      l5426 0CFF  
                                    l5418 0CF0                                      l4458 096D  
                                    l4386 0949                                      l4394 0935  
                                    l4378 0BED                                      l5530 0EDA  
                                    l5522 0E9D                                      l5514 0E8E  
                                    l5506 0E6A                                      l5346 06E4  
                                    l5338 06C0                                      l5370 0FAD  
                                    l5362 0F7B                                      l5354 0F41  
                                    l5274 0C39                                      l5266 0BFC  
                                    l5282 0B67                                      l5290 0A1B  
                                    l5450 0380                                      l6058 0084  
                                    l1978 0068                                      l5602 0052  
                                    l1979 006A                                      l5428 0D0A  
                                    l5436 0D18                                      l5700 0C7F  
                                    l4388 094B                                      l4396 0938  
                                    l5540 0F0E                                      l5524 0EA6  
                                    l5516 0E8F                                      l5508 0E6E  
                                    l5372 0FBD                                      l5364 0F83  
                                    l5356 0F4C                                      l5348 0F13  
                                    l5268 0C01                                      l5284 0B6C  
                                    l5292 0A24                                      l5380 0C9B  
                                    l5460 03CD                                      l5452 0386  
                                    l1996 01CF                                      l5620 0071  
                                    l5604 0056                                      l5550 0A6E  
                                    l5438 0D23                                      l5710 01FA  
                                    l5702 01D2                                      l4646 094D  
                                    l4398 09C5                                      l5534 0EF6  
                                    l5526 0EBA                                      l5366 0F87  
                                    l5374 0FCB                                      l5358 0F6B  
                                    l3918 0A47                                      l5278 0B56  
                                    l5286 0A12                                      l5390 0CBE  
                                    l5382 0CA3                                      l5470 03E7  
                                    l5462 03D3                                      l5454 03A8  
                                    l5446 035D                                      l5630 00BC  
                                    l5606 005B                                      l5622 0095  
                                    l5552 0A80                                      l5720 0238  
                                    l5712 0209                                      l5704 01D2  
                                    l5560 0727                                      l4648 0952  
                                    l5296 0A82                                      l5536 0EFC  
                                    l5376 0FD0                                      l5368 0F8B  
                                    l5288 0A17                                      l5392 0CC3  
                                    l5384 0CA8                                      l5480 0466  
                                    l5472 0416                                      l5464 03D7  
                                    l5456 03BA                                      l5448 036D  
                                    l5640 00E7                                      l5632 00C9  
                                    l5624 009F                                      l5616 006C  
                                    l5730 027C                                      l5722 0247  
                                    l5714 020E                                      l5706 01E7  
                                    l5570 0764                                      l5562 073C  
                                    l5810 0D5E                                      l5802 0D45  
                                    l5298 0A85                                      l5538 0F02  
                                    l5394 0CD5                                      l5386 0CAD  
                                    l5378 0C97                                      l5490 0490  
                                    l5482 0473                                      l5474 041A  
                                    l5466 03DF                                      l5458 03C0  
                                    l5650 012B                                      l5642 00EF  
                                    l5634 00CD                                      l5626 00A3  
                                    l5900 0989                                      l5548 0A63  
                                    l5740 02B2                                      l5732 028B  
                                    l5724 024B                                      l5716 021D  
                                    l5708 01F6                                      l5580 079F  
                                    l5572 0773                                      l5564 074B  
                                    l5556 0716                                      l5820 0D86  
                                    l5812 0D6E                                      l5804 0D4E  
                                    l5396 0CDE                                      l5388 0CB2  
                                    l5492 0494                                      l5484 0481  
                                    l5476 041E                                      l5468 03E2  
                                    l5660 0177                                      l5652 013C  
                                    l5636 00CE                                      l5628 00B4  
                                    l5902 098A                                      l5750 02EF  
                                    l5742 02B7                                      l5734 028F  
                                    l5726 025A                                      l5718 0222  
                                    l5590 07D1                                      l5582 07A5  
                                    l5574 0779                                      l5566 074F  
                                    l5558 071B                                      l5830 0DAC  
                                    l5822 0D8A                                      l5814 0D72  
                                    l5806 0D52                                      l5910 04BF  
                                    l5494 049A                                      l5478 0459  
                                    l5486 0485                                      l5662 0188  
                                    l5670 01A1                                      l5654 0144  
                                    l5646 0113                                      l5638 00D4  
                                    l5904 098B                                      l5760 0333  
                                    l5752 02F6                                      l5744 02CD  
                                    l5736 029E                                      l5728 0261  
                                    l5592 07E6                                      l5584 07B4  
                                    l5576 0789                                      l5568 075E  
                                    l5832 0DB2                                      l5824 0D96  
                                    l5816 0D7A                                      l5808 0D5A  
                                    l5840 09FA                                      l5920 04FA  
                                    l5912 04D4                                      l5496 049F  
                                    l5488 048C                                      l5672 01A9  
                                    l5664 0190                                      l5656 015D  
                                    l5648 0119                                      l5906 098C  
                                    l5762 0338                                      l5754 0311  
                                    l5746 02DC                                      l5738 02A3  
                                    l5842 09B2                                      l5690 0C44  
                                    l5586 07BA                                      l5578 0790  
                                    l5834 0DB8                                      l5826 0D9A  
                                    l5818 0D7E                                      l5770 092A  
                                    l5594 093A                                      l5930 0538  
                                    l5922 050F                                      l5914 04E3  
                                    l5498 04A3                                      l5666 019B  
                                    l5764 034D                                      l5756 0320  
                                    l5748 02E0                                      l5844 09BB  
                                    l5692 0C59                                      l5588 07CA  
                                    l5828 0DA6                                      l5860 0A42  
                                    l5852 0A2D                                      l5836 09F5  
                                    l5780 0AAB                                      l5772 0AA2  
                                    l5940 0590                                      l5932 054E  
                                    l5924 051E                                      l5916 04E7  
                                    l5676 01AC                                      l5596 0034  
                                    l5758 0324                                      l5694 0C68  
                                    l5854 0A33                                      l5838 09F6  
                                    l5782 0AAD                                      l5774 0AA5  
                                    l5870 07F7                                      l5862 07EB  
                                    l5950 05CB                                      l5942 059F  
                                    l5934 0568                                      l5926 0522  
                                    l5918 04F6                                      l5678 01C5  
                                    l5598 0045                                      l5790 0B7F  
                                    l5880 0B18                                      l5848 09C1  
                                    l5696 0C6C                                      l5688 0C44  
                                    l5768 091A                                      l5856 0A38  
                                    l5784 0AB5                                      l5776 0AA7  
                                    l5872 07FA                                      l5864 07EE  
                                    l5952 05DA                                      l5944 05A3  
                                    l5936 057D                                      l5928 0531  
                                    l5792 0B83                                      l5890 0B1F  
                                    l5882 0B19                                      l5874 0B08  
                                    l5698 0C7B                                      l5858 0A3C  
                                    l5786 0AB7                                      l5778 0AA9  
                                    l5866 07F1                                      l5954 05E1  
                                    l5946 05B8                                      l5938 058C  
                                    l5794 0B86                                      l5970 0AFF  
                                    l5962 0AE7                           __end_of_LCDrecv 035B  
                                    l5892 0B25                                      l5884 0B1A  
                                    l5876 0B10                                      l5788 0ABF  
                                    l5868 07F4                                      l5956 05F7  
                                    l5948 05C7                                      l5796 0B9E  
                                    l5964 0AEF                                      l5980 0DD5  
                                    l5894 0980                                      l5886 0B1B  
                                    l5878 0B14                                      l5958 060C  
                                    l5798 0BA7                                      l5966 0AF1  
                                    l5990 0DF4                                      l5982 0DDD  
                                    l5974 0DC8                                      l5896 0984  
                                    l5888 0B1D                                      l5968 0AF3  
                                    l5992 0DF5                                      l5984 0DDD  
                                    l5976 0DCB                                      l5898 0988  
                                    l5994 0DF8                                      l5986 0DEB  
                                    l5978 0DCC                                      l5996 0DFF  
                                    l5988 0DEC                                      l5998 0E03  
                         __end_of_LCDsend 0C95                                      STR_1 102F  
                                    STR_2 1020                                      STR_3 1028  
                                    _LATA 0016                                      _LATB 0017  
                                    _LATC 0018                                      _LATD 0019  
                                    _LATE 001A                                      u2440 0A55  
                                    u5000 009B                                      u2441 0A54  
                                    u5001 009A                                      u4130 0BF7  
                                    u5010 009F                                      u4131 0BF6  
                                    u5011 009E                                      u5100 0C53  
                                    u4220 0A9D                                      u4300 06C0  
                                    u4140 0BFC                                      u5020 00B4  
                                    u5101 0C52                                      u4221 0A9C  
                                    u4205 0A8E                                      u4301 06BF  
                                    u2445 0A51                                      u4141 0BFB  
                                    u5021 00B3                                      u5110 0C59  
                                    u4310 06DF                                      u4230 061B  
                                    u4150 0C0B                                      u5030 00CD  
                                    u5111 0C58                                      u4215 0A93  
                                    u4311 06DE                                      u4231 061A  
                                    u4151 0C0A                                      u5031 00CC  
                                    u5200 021D                                      u5120 0C68  
                                    u4320 06E4                                      u4400 0FAD  
                                    u4160 0C28                                      u5040 010C  
                                    u5201 021C                                      u5121 0C67  
                                    u4321 06E3                                      u4305 06BC  
                                    u4401 0FAC                                      u4161 0C27  
                                    u5041 010A                                      u5210 0231  
                                    u5130 0C7B                                      u4250 0648  
                                    u4410 0FCB                                      u4170 0B7C  
                                    u5050 010D                                      u5211 0230  
                                    u5131 0C7A                                      u4251 0647  
                                    u4411 0FCA                                      u4171 0B7B  
                                    u5300 02B2                                      u5220 0238  
                                    u5140 0C8E                                      u4500 0ACD  
                                    u4420 0FD0                                      u4340 0F1F  
                                    u4180 0A24                                      u5060 0119  
                                    u5301 02B1                                      u5221 0237  
                                    u5141 0C8D                                      u4501 0ACC  
                                    u4421 0FCF                                      u4405 0FA9  
                                    u4341 0F1E                                      u4165 0C24  
                                    u4181 0A23                                      u5061 0118  
                                    u5310 02C6                                      u5230 0247  
                                    u5150 0C94                                      u3550 0952  
                                    u4190 0A89                                      u4510 0ADC  
                                    u4270 0674                                      u5070 012B  
                                    u5311 02C5                                      u5231 0246  
                                    u5151 0C93                                      u3551 0951  
                                    u4191 0A88                                      u4511 0ADB  
                                    u5071 012A                                      u4600 0D42  
                                    u4520 0CF4                                      u5400 0347  
                                    u5320 02CD                                      u5240 025A  
                                    u5160 01E1                                      u3560 0956  
                                    u4280 0683                                      u4360 0F4C  
                                    u4440 0C9B                                      u5080 013C  
                                    u4601 0D41                                      u4521 0CF3  
                                    u5401 0346                                      u5321 02CC  
                                    u5241 0259                                      u5161 01E0  
                                    u3561 0955                                      u4281 0682  
                                    u4361 0F4B                                      u4441 0C9A  
                                    u5081 013B                                      u4530 0CFF  
                                    u5410 034D                                      u5330 02DC  
                                    u5250 0270                                      u5170 01E7  
                                    u4290 0696                                      u4450 0CA8  
                                    u4610 0378                                      u5090 0188  
                                    u4531 0CFE                                      u5411 034C  
                                    u5331 02DB                                      u5251 026F  
                                    u5171 01E6                                      u4291 0695  
                                    u4451 0CA7                                      u4611 0376  
                                    u5091 0187                                      u4540 0D0A  
                                    u5340 02EF                                      u5260 0277  
                                    u5180 01F6                                      u5500 04E3  
                                    u4380 0F78                                      u4460 0CD1  
                                    u4700 0466                                      u4620 0379  
                                    _PMD0 0796                                      u4541 0D09  
                                    u5341 02EE                                      u5261 0276  
                                    u5181 01F5                                      u5501 04E2  
                                    u4381 0F77                                      u4461 0CD0  
                                    u4701 0465                                      _PMD1 0797  
                                    u4550 0D11                                      u5350 0305  
                                    u5270 027C                                      u5190 0209  
                                    u5510 04F6                                      u4390 0F8B  
                                    u4470 0CD5                                      u4710 0473  
                                    u4630 0386                                      u5430 0BA7  
                                    _PMD2 0798                                      u4551 0D10  
                                    u5351 0304                                      u5271 027B  
                                    u5191 0208                                      u5511 04F5  
                                    u4391 0F8A                                      u4471 0CD4  
                                    u4711 0472                                      u4631 0385  
                                    u5431 0BA6                                      _PMD3 0799  
                                    u4560 0D16                                      u5360 030C  
                                    u5280 028B                                      u5440 0A0F  
                                    u5600 0568                                      u5520 0509  
                                    u4480 09ED                                      u4800 0EEF  
                                    u4720 0481                                      _PMD4 079A  
                                    u4561 0D15                                      u5425 0351  
                                    u5361 030B                                      u5281 028A  
                                    u5441 0A0E                                      u5601 0567  
                                    u5521 0508                                      u4481 09EB  
                                    u4801 0EED                                      u4465 0CCD  
                                    u4721 0480                                      _PMD5 079B  
                                    u4570 0D23                                      u5370 0311  
                                    u5290 029E                                      u5450 09BB  
                                    u5610 0577                                      u5530 050F  
                                    u4490 09EE                                      u4810 0EF0  
                                    u4730 0485                                      u4650 03A8  
                                    u4571 0D22                                      u5371 0310  
                                    u5291 029D                                      u5451 09BA  
                                    u5611 0576                                      u5531 050E  
                                    u4731 0484                                      u4715 046F  
                                    u4651 03A7                                      u4580 0D2E  
                                    u5380 0320                                      u4900 074B  
                                    u5460 0A33                                      u5700 05F7  
                                    u5620 057D                                      u5540 051E  
                                    u4820 0EFC                                      u4740 048C  
                                    u4660 03BA                                      u4581 0D2D  
                                    u5381 031F                                      u4901 074A  
                                    u5461 0A32                                      u5701 05F6  
                                    u5621 057C                                      u5541 051D  
                                    u4821 0EFB                                      u4741 048B  
                                    u4725 047D                                      u4661 03B9  
                                    u5470 0B24                                      u4590 0D33  
                                    u5390 0333                                      u4910 075E  
                                    u5710 0606                                      u5630 058C  
                                    u5550 0531                                      u4830 0F02  
                                    u4750 0490                                      u4670 03D3  
                                    u5471 0B23                                      u4591 0D32  
                                    u5391 0332                                      u4911 075D  
                                    u5711 0605                                      u5631 058B  
                                    u5551 0530                                      u4831 0F01  
                                    u4751 048F                                      u4671 03D2  
                                    u4840 0A6E                                      u4920 0773  
                                    u5720 060C                                      u5640 059F  
                                    u5560 0547                                      u5480 04CE  
                                    u4760 049A                                      u4680 03D7  
                                    u4841 0A6D                                      u4921 0772  
                                    u5721 060B                                      u5641 059E  
                                    u5561 0546                                      u5481 04CD  
                                    u4761 0499                                      u4681 03D6  
                                    u4665 03B6                                      u4850 0A79  
                                    u4930 0788                                      u5650 05B2  
                                    u5570 054E                                      u5490 04D4  
                                    u4770 0E7A                                      u4690 0459  
                                    u5730 0E0D                                      u4851 0A78  
                                    u4931 0787                                      u5651 05B1  
                                    u5571 054D                                      u5491 04D3  
                                    u4771 0E79                                      u4691 0458  
                                    u5731 0E0C                                      u4860 0A80  
                                    u4940 079F                                      u5660 05B8  
                                    u5580 055D                                      u4780 0E8E  
                                    u5740 0E28                                      u4861 0A7F  
                                    u4941 079E                                      u5661 05B7  
                                    u5581 055C                                      u4781 0E8D  
                                    u5741 0E27                                      u4950 07B4  
                                    u5670 05C7                                      u5590 0563  
                                    u4790 0E9C                                      u5750 0E4D  
                                    u4951 07B3                                      u5807 0D6F  
                                    u5671 05C6                                      u5591 0562  
                                    u4791 0E9B                                      u4695 0455  
                                    u5751 0E4C                                      u4960 07C9  
                                    u4880 0736                                      u5680 05DA  
                                    u4961 07C8                                      u4881 0735  
                                    u5817 0D77                                      u5681 05D9  
                                    u4970 07E0                                      u4890 073C  
                                    u5690 05F0                                      u4971 07DF  
                                    u4891 073B                                      u4875 071E  
                                    u5827 0D83                                      u5691 05EF  
                                    u4980 07E6                                      u4981 07E5  
                                    u5837 0D8B                                      u4990 0045  
                                    u5847 0D97                                      u4991 0044  
                                    u5767 0E5A                                      u5857 0DA2  
                                    u5777 0D49                                      u5867 0DC2  
                                    u5787 0D57                                      u5877 07E7  
                                    u5797 0D62                                      _WPUA 0F39  
                                    _WPUB 0F44                                      _WPUC 0F4F  
                                    _WPUD 0F5A                                      _WPUE 0F65  
                                    abs@a 0033                                      _dbuf 0120  
                                    _atoi 0E64                                      _main 0DC8  
                                    _dtoa 035B                                      _prec 0075  
                                    _nout 00E3                                      pad@i 0034  
                                    pad@p 0031                                      fsr0h 0005  
                                    fsr1h 0007                                      indf0 0000  
                                    fsr0l 0004                                      indf1 0001  
                                    fsr1l 0006                                      pad@w 0036  
                                    btemp 007E                                      start 0018  
              ??_TMR1_SetInterruptHandler 0075                          ??_timerInterrupt 0073  
                         __end_of_ReadI2C 0A82                           __end_of_OpenI2C 0972  
                                   ??_abs 0035                                     ??_pad 0033  
               __size_of_DATAEE_WriteByte 0024            __size_of_OSCILLATOR_Initialize 0009  
           __end_of_OSCILLATOR_Initialize 093A                           __end_of___aodiv 0714  
                                   _ADACQ 009D                                     _ADCAP 009B  
                                   _ADACT 0099                                     ?_atoi 0026  
                                   ?_main 0070                                     ?_dtoa 003B  
                                   _ADCLK 0098                           __end_of___aomod 1000  
                                   _ADCNT 010C                                     _ADPCH 009E  
                                   _ADREF 009A                                     _ADPRE 009C  
                                   _ADRPT 010D                                     _T1CLK 0211  
                                   _T1CON 020E                                     i1l562 0964  
                                   i1l546 099F                                     i1l558 097F  
                                   i1l655 09A8                                     i1l568 07FF  
                                   i1l658 09B1                                     i1l499 0016  
              __end_of_i2c1_fsmStateTable 1020                                     _OSCEN 0891  
                            vfpfcnvrt@fmt 0059                                     _TMR1H 020D  
                                   _TMR1L 020C                                     _TRISA 0011  
                                   _TRISB 0012                                     _TRISC 0013  
                                   _TRISD 0014                                     _TRISE 0015  
                       ??_I2C1_Initialize 0075                          __end_of_TMR1_ISR 0980  
                         _DATAEE_ReadByte 0980                                     _flags 0077  
                                   _fputc 0BF1                                     _fputs 0B54  
                         __end_of_isdigit 09F5                                     atoi@n 0033  
                                   pad@fp 0038                                     atoi@s 0026  
                                   _width 00E5                                     _putch 07FE  
                                   main@c 00C5                                     dtoa@d 003B  
                                   dtoa@i 0057                                     dtoa@n 004F  
                                   dtoa@p 0049                                     dtoa@s 004D  
                                   dtoa@w 004B                           __end_of_isspace 0AE5  
                 __end_of_TMR1_Initialize 0AC3                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
                         __end_of_sprintf 0B08                           _TMR1_WriteTimer 098F  
                         __initialization 001A                              __end_of_atoi 0F13  
                            __end_of_main 0E64                              __end_of_dtoa 04BF  
                     __size_of_LCDsend2x4 00D7               ?_INTERRUPT_InterruptManager 0070  
                                  ??_atoi 0028                                    ??_main 00B2  
                                  ??_dtoa 0043                                 ??_LCDchar 0075  
                               ??_LCDbusy 0075                                 ??_LCDinit 0028  
                               ??_LCDrecv 0022                                 ??_LCDsend 0022  
                                  _ADACCH 0091                                    _ADACCL 0090  
                                  _ADCON0 0093                                    _ADCON1 0094  
                                  _ADCON2 0095                                    _ADCON3 0096  
                                  _ADERRH 0117                                    _ADERRL 0116  
                                  ?_fputc 0020                                    _ADLTHH 010F  
                                  _ADLTHL 010E                                    ?_fputs 0028  
                                  _ADRESH 008D                                    _ADRESL 008C  
                                  _ADSTAT 0097                                    _ADUTHH 0111  
                                  _ADUTHL 0110                          __end_of_WriteI2C 0D45  
                                  _ANSELA 0F38                                    ?_putch 0070  
                                  _ANSELB 0F43                                    _ANSELC 0F4E  
                                  _ANSELD 0F59                                    _ANSELE 0F64  
                                  _T1GATE 0210                                    _T1GCON 020F  
                                  _RC3PPS 0F23                   TMR1_WriteTimer@timerVal 0070  
                                  _RC4PPS 0F24                                    i1l1170 0B4E  
                                  i1l1162 0B31                                    i1l1173 0B51  
                                  i1l1165 0B33                                    i1l1175 0B53  
                                  _ODCONA 0F3A                                    _ODCONB 0F45  
                                  _ODCONC 0F50                                    _ODCOND 0F5B  
                                  _ODCONE 0F66                                    i1l4140 0B34  
                                  i1l4142 0B3C                                    i1l4144 0B45  
                                  i1l4138 0B2C                                    i1l4430 0999  
                                  i1l4422 098F                                    i1l4424 0994  
                                  i1l4432 099B                                    i1l4434 099D  
                                  i1l4426 0995                                    i1l4436 0958  
                                  i1l4428 0997                                    i1l4438 095F  
                                  u300_20 0B4E                                    u300_21 0B4D  
                                  i1l4574 0972                                    i1l4576 0974  
                                  i1l3970 09A4                                    i1l3972 09A5  
                                  i1l3974 09A6                                    i1l4870 000F  
                                  i1l3976 09A7                                    i1l3968 09A1  
                                  i1l4872 0013                                    i1l3978 09AD  
                                  i1l4866 0006                                    i1l4868 000A  
                                  u400_20 0013                                    u400_21 0012  
                                  _INLVLA 0F3C                                    _INLVLB 0F47  
                                  _INLVLC 0F52                                    _INLVLD 0F5D  
                                  _INLVLE 0F68                                    _LCDcmd 0918  
                                  u258_20 09AD                                    u346_20 0994  
                                  u258_21 09AC                                    u346_21 0993  
                                  _LCDpos 0A2B                                    u347_20 095F  
                                  u347_21 095E                                    _LCDstr 09F5  
                                  u298_20 0B31                                    u298_21 0B30  
                                  u299_20 0B45                                    u299_21 0B44  
                                  _OSCFRQ 0893                                    u398_20 000A  
                                  u398_21 0009                                    u399_20 000F  
                                  u399_21 000E                             vfpfcnvrt@done 0069  
                                  u424lld 063A                                    u433lld 0702  
                                  u426lld 0667                                    u443lld 0FEE  
                                  u435lld 0F3E                                    u437lld 0F6B  
                                  u464lld 03A4                                 ??_ReadI2C 0020  
                             LCDsend2x4@c 0025                               LCDrecv@mode 0026  
                               ??_OpenI2C 0075                          _I2C1_DO_TX_EMPTY 0000  
    __end_of_TMR1_DefaultInterruptHandler 0800     __size_of_TMR1_DefaultInterruptHandler 0001  
            _TMR1_DefaultInterruptHandler 07FF                              vfprintf@cfmt 00A4  
                               ??___aodiv 0030                                 ??___aomod 0030  
                                  ___wmul 0A82                          __end_of_readTC74 060F  
                                  pad@buf 0030                                    dtoa@fp 0046  
                 __end_of_DATAEE_ReadByte 098F                                    _strlen 0A10  
                         _ADCC_Initialize 09C5                     _I2C1_DO_SEND_ADR_READ 0000  
                                  fputc@c 0020                            _PMD_Initialize 0920  
                                  fputs@c 002C                                    fputs@i 002D  
                                  fputs@s 002F                                 ??_isdigit 0022  
                               ??_isspace 0022         __size_of_ADCC_GetSingleConversion 0012  
                                  putch@c 0070                          __end_of_vfprintf 0BAC  
               ?_ADCC_GetSingleConversion 0070  TMR1_SetInterruptHandler@InterruptHandler 0020  
                               ??_sprintf 00AA                   __end_of_TMR1_WriteTimer 09A0  
                 _I2C1_DO_RX_NACK_RESTART 0000                     __end_of_TMR1_CallBack 0965  
                        ?_TMR1_Initialize 0070                         _SYSTEM_Initialize 07EB  
                 __end_of__initialization 002E                        ?_SYSTEM_Initialize 0070  
                 _rdBlkRegCompleteHandler 0000                            __pcstackCOMMON 0070  
                     ??_SYSTEM_Initialize 0075                                 ?_TMR1_ISR 0070  
           ?_TMR1_DefaultInterruptHandler 0070                          _DATAEE_WriteByte 0B08  
                           __end_of_fputc 0C42                             __end_of_fputs 0B7D  
                           __end_of_putch 07FF                                __end_of_S1 0958  
                  __end_of_PMD_Initialize 0928                                 LCDrecv@hc 0024  
                               LCDrecv@lc 0025                              ??_LCDsend2x4 0023  
                                 ??_fputc 0023                 __end_of_SYSTEM_Initialize 07FE  
                                 ??_fputs 0029                                   ??_putch 0075  
                              __pbssBANK1 00C6                                __pbssBANK2 0120  
                                 ?_LCDcmd 0070                                   ?_LCDpos 0029  
                                 ?_LCDstr 0029                                   LCDcmd@c 0028  
                                 LCDpos@c 0029                                   LCDpos@l 002B  
                                 LCDpos@p 002C                     _rd1RegCompleteHandler 0000  
                                 LCDstr@c 002E                                   LCDstr@p 0029  
                       _I2C1_DO_SEND_STOP 0000                     _wr1RegCompleteHandler 0000  
                              __pmaintext 0DC8                                   ?___wmul 0020  
                              ??_TMR1_ISR 0075                   __end_of_ADCC_Initialize 09DC  
                              __pintentry 0004                           _I2C1_Initialize 0943  
                                 _ADFLTRH 0115                                   _ADFLTRL 0114  
                      __end_of_LCDsend2x4 07EB                                   _ADPREVH 008F  
                                 _ADPREVL 008E                                 ?_WriteI2C 0070  
                                 _ADSTPTH 0113                                   _ADSTPTL 0112  
                         ?_PMD_Initialize 0070                                   ?_strlen 0020  
                        ?_DATAEE_ReadByte 0020                                   _LCDchar 0928  
                                 _LCDbusy 09B2                                   _LCDinit 0D45  
                                 _LCDrecv 01D0                                   _LCDsend 0C42  
                                 _OSCCON1 088D                                   _OSCCON3 088F  
                      __size_of_vfpfcnvrt 019E                                   _NVMADRH 081B  
                                 _NVMADRL 081A                                   _NVMDATH 081D  
                                 _OSCTUNE 0892                                   _NVMDATL 081C  
                                 _NVMCON2 081F                                   _SSP1ADD 018D  
                                 _SLRCONA 0F3B                                   _SLRCONB 0F46  
                                 _SLRCONC 0F51                                   _SLRCOND 0F5C  
                                 _SLRCONE 0F67                                   _SSP1BUF 018C  
                        ?_TMR1_WriteTimer 0070                              LCDsend2x4@hc 0026  
                            LCDsend2x4@lc 0027                                 ?_readTC74 0070  
                         __size_of_LCDcmd 0008                      DATAEE_WriteByte@bAdd 0020  
                         __size_of_LCDpos 001C                        _i2c1_fsmStateTable 1000  
                         __size_of_LCDstr 001B                                   _ReadI2C 0A63  
                                 _OpenI2C 0965                                   ___aodiv 060F  
                                 ___aomod 0F13                           __size_of___wmul 0020  
                               ?_vfprintf 00A0                                ??_WriteI2C 0020  
                                 __ptext1 0AE5                                   __ptext2 0B7D  
                                 __ptext3 0032                                   __ptext4 035B  
                                 __ptext5 0C95                                   __ptext6 0A10  
                                 __ptext7 0B54                                   __ptext8 0BF1  
                                 __ptext9 07FE            ??_TMR1_DefaultInterruptHandler 0070  
                         __size_of_strlen 001B                                 _T1CONbits 020E  
                   _OSCILLATOR_Initialize 0931                              __size_of_abs 001C  
                            __size_of_pad 0056                                   _isdigit 09DC  
       __size_of_TMR1_SetInterruptHandler 0009                  ??_PIN_MANAGER_Initialize 0075  
                                 _isspace 0AC3                 ?_TMR1_SetInterruptHandler 0020  
                                 atoi@neg 002C                                   main@buf 00B4  
              __size_of_SYSTEM_Initialize 0013                                   _sprintf 0AE5  
                                 clrloop0 0913                      end_of_initialization 002E  
                              ??_readTC74 0022                                   fputc@fp 0022  
                                 fputs@fp 0028                    _I2C1_DO_SEND_ADR_WRITE 0000  
                 __end_of_I2C1_Initialize 094D                               _I2C1_Status 00C6  
                       __end_of_vfpfcnvrt 01D0                          ?_ADCC_Initialize 0070  
                              ??_vfprintf 006E          __end_of_ADCC_GetSingleConversion 09B2  
              _I2C1_DO_SEND_RESTART_WRITE 0000                                   strlen@a 0023  
                                 strlen@s 0024                                 _PORTAbits 000C  
                               _PORTBbits 000D                   __size_of_timerInterrupt 0028  
                               _TRISCbits 0013                       timerInterrupt@value 0073  
                __end_of_DATAEE_WriteByte 0B2C                             readTC74@value 0023  
                          __end_of_LCDcmd 0920                            __end_of_LCDpos 0A47  
                          __end_of_LCDstr 0A10                            LCDsend2x4@mode 0022  
                             vfpfcnvrt@ap 005A                               vfpfcnvrt@fp 006D  
                             vfpfcnvrt@ll 0061                            __end_of___wmul 0AA2  
                          _I2C1_DO_RX_ACK 0000                         __size_of_TMR1_ISR 000E  
                  ?_OSCILLATOR_Initialize 0070                            __end_of_strlen 0A2B  
                     start_initialization 001A           __size_of_PIN_MANAGER_Initialize 0045  
                             __end_of_abs 0A63                               __end_of_pad 0CEB  
                        WriteI2C@data_out 0021                                  ??_LCDcmd 0075  
                                ??_LCDpos 002A                                  ??_LCDstr 002B  
                     DATAEE_ReadByte@bAdd 0020                          ?_I2C1_Initialize 0070  
                __size_of_TMR1_Initialize 0021                               vfprintf@fmt 00A0  
                        ??_PMD_Initialize 0075                                  ??___wmul 0075  
                  __size_of_TMR1_CallBack 000D                                  ??_strlen 0022  
                       __size_of_WriteI2C 005A                  _ADCC_GetSingleConversion 09A0  
                                ?_LCDchar 0070                               __pbssCOMMON 0075  
                                ?_LCDbusy 0027                                  ?_LCDinit 0070  
                    _I2C1_DO_SEND_RESTART 0000                                  ?_LCDrecv 0070  
                                ?_LCDsend 0070                                 ___latbits 0002  
                           __pcstackBANK0 0020                             __pcstackBANK1 00A0  
                        ___aodiv@dividend 0028                                  LCDchar@c 0028  
                                LCDsend@c 0023                                  ?_ReadI2C 0070  
                               _atoi$2837 002E                                 _atoi$2838 0032  
                               _atoi$2839 0030                         __size_of_readTC74 0150  
                               __pnvBANK1 00E7                     _rd2RegCompleteHandler 0000  
                                ?_OpenI2C 0070                    _PIN_MANAGER_Initialize 0BAC  
                   _wr2RegCompleteHandler 0000                                 _dtoa$2802 0047  
        __end_of_TMR1_SetInterruptHandler 0943           ADCC_GetSingleConversion@channel 0072  
                                ?___aodiv 0020                                  ?___aomod 0020  
                        ___aodiv@quotient 0033              ??_INTERRUPT_InterruptManager 0075  
                       __size_of_vfprintf 002F                            _timerInterrupt 0B2C  
                                ?_isdigit 0020                                  ?_isspace 0020  
                                ?_sprintf 00A6                            __size_of_fputc 0051  
                          __size_of_fputs 0029                  __size_of_DATAEE_ReadByte 000F  
                          __size_of_putch 0001                               __size_of_S1 000B  
                           _TMR1_CallBack 0958                            ___wmul@product 0024  
                                _LATAbits 0016                                _I2C1_DO_RX 0000  
                              _I2C1_DO_TX 0000                                 clear_ram0 0912  
                                _PIE3bits 0719                                  _PIE4bits 071A  
                __size_of_TMR1_WriteTimer 0011       __size_of_INTERRUPT_InterruptManager 0014  
                                _PIR3bits 070F                                  _PIR4bits 0710  
               _I2C1_DO_SEND_RESTART_READ 0000                                  _SSP1CON1 0190  
                                _SSP1CON2 0191                                  _TMR1_ISR 0972  
                                _SSP1STAT 018F                                 _vfpfcnvrt 0032  
                  __end_of_timerInterrupt 0B54                         ??_TMR1_Initialize 0075  
                              _ADCON0bits 0093                                _ADCON1bits 0094  
                              _ADCON2bits 0095                                _ADCON3bits 0096  
                       ___wmul@multiplier 0020                          __size_of_LCDchar 0009  
                   DATAEE_WriteByte@bData 0022                          __size_of_LCDbusy 0013  
                        __size_of_LCDinit 0083                          __size_of_LCDrecv 018B  
                        __size_of_LCDsend 0053                              _isspace$2855 0024  
                           _I2C1_DO_RESET 0000                            ?_TMR1_CallBack 0070  
                       ?_DATAEE_WriteByte 0020                        ??_DATAEE_WriteByte 0075  
                        __size_of_ReadI2C 001F                                _ADSTATbits 0097  
                        __size_of_OpenI2C 000D                                vfprintf@ap 00A2  
                              vfprintf@fp 00A3                   ??_OSCILLATOR_Initialize 0075  
                        __size_of___aodiv 0105                          __size_of___aomod 00ED  
                              ?_vfpfcnvrt 0059                                  _WriteI2C 0CEB  
                         ?_timerInterrupt 0070                           ___aodiv@divisor 0020  
                _TMR1_SetInterruptHandler 093A                           ___aodiv@counter 0031  
                   _TMR1_InterruptHandler 00E7                                sprintf@fmt 00A6  
                __size_of_ADCC_Initialize 0017                          __size_of_isdigit 0019  
                        __size_of_isspace 0022                                  __ptext10 0A47  
                                __ptext11 0F13                                  __ptext20 093A  
                                __ptext12 060F                                  __ptext21 0920  
                                __ptext13 0E64                                _T1GCONbits 020F  
                                __ptext30 0A2B                                  __ptext22 0BAC  
                                __ptext14 0AC3                                  __ptext31 0918  
                                __ptext23 0931                                  __ptext15 09DC  
                                __ptext40 0980                                  __ptext32 0D45  
                                __ptext24 0943                                  __ptext16 0A82  
                                __ptext33 0714                                  __ptext25 09C5  
                                __ptext17 04BF                                  __ptext42 0972  
                                __ptext34 0C42                                  __ptext26 094D  
                                __ptext18 07EB                                  __ptext43 098F  
                                __ptext35 09B2                                  __ptext27 0965  
                                __ptext19 0AA2                                  __ptext44 0958  
                                __ptext36 01D0                                  __ptext28 09F5  
                                __ptext45 07FF                                  __ptext37 0CEB  
                                __ptext29 0928                                  __ptext46 0B2C  
                                __ptext38 0A63                                  __ptext47 09A0  
                                __ptext39 0B08                              _SSP1CON1bits 0190  
                            _SSP1CON2bits 0191                          __size_of_sprintf 0023  
             DATAEE_WriteByte@GIEBitValue 0023                                  _readTC74 04BF  
                _I2C1_CallbackReturnReset 0000                             __size_of_atoi 00AF  
                           __size_of_main 009C                             __size_of_dtoa 0164  
                       ??_DATAEE_ReadByte 0075                ??_ADCC_GetSingleConversion 0072  
                                int$flags 007E                                  _vfprintf 0B7D  
      __end_of_INTERRUPT_InterruptManager 0018                _INTERRUPT_InterruptManager 0004  
                            _SSP1STATbits 018F                         ??_TMR1_WriteTimer 0072  
                            _I2C1_DO_IDLE 0000                              _I2C1_DO_RCEN 0000  
                        ___aomod@dividend 0028                            _vfpfcnvrt$2817 006B  
                              _INTCONbits 000B                               _NVMCON1bits 081E  
                                isdigit@c 0020                           ??_TMR1_CallBack 0075  
                              _LCDsend2x4 0714                                  intlevel1 0000  
                               sprintf@ap 00AC                                  isspace@c 0020  
                 ?_PIN_MANAGER_Initialize 0070                   _I2C1_CallbackReturnStop 0000  
                    _I2C1_DO_ADDRESS_NACK 0000                           ___aomod@divisor 0020  
                             ??_vfpfcnvrt 005B                           ___aomod@counter 0031  
                __size_of_I2C1_Initialize 000A                             __pstringtext1 1000  
                           __pstringtext2 1020                             __pstringtext3 1028  
                           __pstringtext4 102F                             __pstringtext5 0000  
                                sprintf@f 00AD                                  sprintf@s 00AB  
                              _SSP1DATPPS 0EC6                                _SSP1CLKPPS 0EC5  
                            ___aodiv@sign 0032            __end_of_PIN_MANAGER_Initialize 0BF1  
                       ??_ADCC_Initialize 0075                              ___aomod@sign 0032  
                         _TMR1_Initialize 0AA2  
